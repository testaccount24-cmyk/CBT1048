//AUXCMM01 JOB (1586,5),'** FOR J. NOLS **',CLASS=N
//STEP01       EXEC GENASMOD
         TITLE 'AUXILIARY COMMAND. LEVEL 2 ROUTER'
***********************************************************************
*                      A U X C M M 0 1                                *
*                                                                     *
*        THIS COMMAND IS THE FIRST STAGE PROCESSING FOR THE #D        *
*        COMMAND. ITS PURPOSE IS TO ROUTE CONTROL TO THE CORRECT      *
*        PROCESSOR FOR THE OPERAND ENTERED. A TABLE OF OPERANDS       *
*        IS MAINTAINED IN A MANNER SIMILAR TO THAT IN AUXCOMM.        *
*        IF A QUERY ('?') IS ENTERED, THE ROUTINE WILL LIST ALL       *
*        THE VALID OPERANDS AND THEIR FUNCTIONS                       *
*          WHEN A VALID DD COMMAND IS ENTERED, THE ROUTINE WILL       *
*        EITHER PASS CONTROL DIRECTLY TO THE CORRECT PROCESSOR BY     *
*        A BRANCH AND LINK OR, FOR COMMANDS WHICH ARE LENGTHY,        *
*        (E.G. DD CPU), AN INTERNAL ATTACH ROUTINE IS INKOKED TO      *
*        ATTACH THE PROCESSOR AS A SUBTASK. THIS LEAVES THE           *
*        COMMUNICATIONS TASK FREE FOR OTHER WORK.                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        ATTRIBUTES. REENTRANT,REUSABLE AUTHORISED.                   *
*                                                                     *
*                                                                     *
*        REGISTER USAGE.                                              *
*                                                                     *
*        REG0  PARAMETER REGISTER. WORK REGISTER                      *
*        REG1  PARAMETER REGISTER. WORK REGISTER                      *
*        REG2  ADDRESS OF EXTENDED SAVE AREA OF SVRB FOR SVC 34       *
*        REG3  ADDRESS CURRENT ENTRY OF COMMAND TABLE                 *
*        REG4  LENGTH CURRENT COMMAND TABLE ENTRY                     *
*        REG5  END ADDRESS-1 OF COMMAND TABLE (FOR BXLE)              *
*        REG6  LENGTH COMMAND IN TABLE MINUS ONE                      *
*        REG7  LENGTH COMMAND ENTERED MINUS ONE                       *
*        REG8  WORK REGISTER                                          *
*        REG9  ADDRESS OPERAND 1, ADDRESS WTO ELEMENT                 *
*        REG10 LENGTH DESCRIPTIVE TEXT MINUS ONE                      *
*        REG11 INTERNAL LINK REGISTER                                 *
*        REG12 BASE REGISTER                                          *
*        REG13 ADDRESS PROGRAM REGISTER SAVE AREA AND WORK AREA       *
*        REG14 LINK REGISTER, WORK REGISTER                           *
*        REG15 LINK REGISTER, WORK REGISTER                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        DSECTS USED IN THIS MODULE                                   *
***********************************************************************
         SPACE 2
CMDTAB   DSECT ,                   FORMAT OF COMMAND TABLE ENTRIES
         COMMAND DSECT             GENERATE DSECT FOR TABLE ENTRY
CMDENLEN EQU   *-CMDTAB            LENGTH OF COMMAND TABLE ENTRY
         SPACE 2
XSA      DSECT ,                   FORMAT OF EXTENDED SAVE AREA
XSAP     DS    F                   PTR TO XCTL NAME
XSAD     DS    F                   DCB POINTER
XSAX     DS    D                   XCTL NAME
XSAE     DS    0C                  ERROR CODE FOR IEE0503D
XSAR     DS    F                   ADDRESS OF PARM LIST
XSAN     DS    0C                  VERB INDEX
XSAL     DS    F                   PTR TO LIST POSITION
XSAVERB  DS    D                   VERB ENTERED BY OPERATOR
XSAS     DS    D                   TEMPORARY SAVE AREA
XSAU     DS    C                   UCM ENTRYINDICATOR
         DS    C                   RESERVED
XSAJ     DS    H                   TJID ENTRY INDICATOR
         SPACE 2
WKAREA   DSECT ,                   INTERNAL WORK AREA
         DS    18F                 REGISTER SAVE AREA
MSGAREA  DS    0CL70               PREPARATION AREA FOR OUTPUT
MSGLEN   EQU   L'MSGAREA           LENGTH FOR LOADMSG MACRO
CLRLINE  DS    0CL70               REFERENCE FOR CLEARING OUT AREA
         DS    CL8                 COMMAND NAME
MSGSEP   DS    C                   SEPARATING CHARACTER
MSGTEXT  DS    CL61                DESCRIPTION OF COMMAND
WKLEN    EQU   *-MSGAREA           LENGTH OF AREA FOR ZCSECT
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
AUXCMM01 ZCSECT GETMAIN=1,WKLEN=WKLEN
         USING WKAREA,REG13        ADDRESSABILITY FOR WORK AREA
         SPACE 2
         EJECT
***********************************************************************
*        ANALYSE INPUT PARAMETERS & DETERMINE LENGTH                  *
***********************************************************************
         SPACE 2
         USING XSA,REG2            ADDRESSABILITY FOR EXTENDED S/A
         L     REG8,XSAL           LOAD ADDRESS INPUT PARMS
         SCAN  DATA=(REG8),END=' ',DELIM=(',','='),CHAIN=XSAS,SP=0
         L     REG2,4(REG13)       LOAD ADDRESS PREVIOUS SAVE AREA
         L     REG2,28(REG2)       RELOAD ADDRESS EXTENDED SAVE AREA
         L     REG5,XSAS           LOAD ADDRESS FIRST DESCR BLK
         LTR   REG5,REG5           TEST FOR PRESCENCE OPERANDS
         BZ    INVALCMD            NO GOOD.
         IC    REG7,4(REG5)        LOAD LENGTH FIRST OPERAND
         BCTR  REG7,0              SUBTRACT 1 FROM LENGTH
         L     REG9,4(REG5)        LOAD ADDRESS OPERAND
         EJECT
***********************************************************************
*        SCAN THE OPERAND TABLE FOR A VALID OPERAND                   *
***********************************************************************
         SPACE 2
         LA    REG3,CMDTABLE       LOAD START ADDRESS OF OPERAND TABLE
         LA    REG5,CMDTBEND-1     LOAD END ADDRESS OF OPERAND TABLE
         XR    REG6,REG6           CLEAR REGISTER 6
         XR    REG10,REG10         CLEAR REGISTER 10
         USING CMDTAB,REG3         ADDRESSABILITY FOR EACH ENTRY IN TAB
         SPACE 2
LOOP     IC    REG6,CMDLEN         LOAD LENGTH-1 OF OPERAND
         CR    REG7,REG6           COMPARE LENGTHS OF VERBS
         BNE   LOOPEXIT            NOT SAME. NO FURTHER TESTS
         EX    REG6,CMDCLC         COMPARE OPERAND WITH TABLE ENTRY
         BE    VALCMD              OPERAND FOUND. GO PROCESS.
LOOPEXIT IC    REG10,CMDTXLEN(REG6) LOAD LENGTH OF TEXT
         LA    REG4,CMDENLEN(REG6,REG10) LOAD LENGTH THIS ENTRY
         BXLE  REG3,REG4,LOOP      LOOP TO END OF TABLE
         B     INVALCMD            OPERAND NOT FOUND - INVALID
         SPACE 2
CMDCLC   CLC   0(0,REG9),CMDNAME  COMPARE OPERATOR ENTRY & VALID CMD
         EJECT
***********************************************************************
*        THE COMMAND IS NOT VALID                                     *
***********************************************************************
         SPACE 2
INVALCMD DS    0H
         LA    REG15,4             LOAD INVALID CODE
         B     EXITPGM             RETURN TO CALLER
         SPACE 2
***********************************************************************
*        THE COMMAND IS VALID. LOAD REGISTERS & CALL PROCESSOR        *
***********************************************************************
         SPACE 2
VALCMD   DS    0H
         L     REG1,XSAS           RELOAD ADDRESS FIRST DESCR BLK
         L     REG1,0(REG1)        LOAD ADDRESS SECOND BLOCK
         L     REG15,CMDPRCAD(REG6) LOAD ADDRESS OF PROCESSOR
         BALR  REG14,REG15         LINK TO THE ROUTINE
         B     EXITPGM             RETURN TO CALLER
         EJECT
***********************************************************************
*        THE COMMAND IS ASYNCHRONOUS, THIS ROUTINE WILL ATTACH IT     *
***********************************************************************
         SPACE 2
ATTACHER DS    0H
         ICM   REG1,8,XSAU         LOAD ISSUING CONSOLE ID
         LA    REG2,CMDPRCSR(REG6) LOAD ADDRESS OF PROCESSOR NAME
         ATTACH EPLOC=(2),SZERO=YES ATTACH THE PROCESSOR
         B     EXITPGMX            RETURN. BUT DONT FREE SCAN DESCR
*                                  BLOCKS AS SUBTASK IS USING THEM.
         EJECT
***********************************************************************
*        TABLE OF VALID OPERANDS                                      *
***********************************************************************
         SPACE 2
CMDTABLE DS    0D
         COMMAND NQ,AUXCMM02,                                          X
               TXT='LIST THE STATUS OF FILES AND THE JOBS USING THEM'
         COMMAND WAIT,AUXCMM03,                                        X
               TXT='DISPLAY STATUS OF ALL WAITING TASKS IN THE SYSTEM'
         COMMAND PAGE,AUXCMM04,ADCON=(A,ATTACHER),                     X
               TXT='DISPLAY PAGING RATE AND SYNOPSIS PAGING ACTIVITY'
         COMMAND A,AUXCMM05,                                           X
               TXT='GIVE DETAILED INFORMATION ON ALL JOBS RUNNING'
         COMMAND CPU,AUXCMM06,ADCON=(A,ATTACHER),                      X
               TXT='GIVE DETAILS OF CPU USAGE FOR EXECUTING JOBS'
         COMMAND ?,AUXCMMZZ,ADCON=A,                                   X
               TXT='LIST ALL POSSIBLE OPERANDS AND THEIR FUNCTIONS'
CMDTBEND EQU   *                   END OF COMMAND TABLE
         EJECT
***********************************************************************
*        COMMON PROGRAM EXIT                                          *
***********************************************************************
         SPACE 2
EXITPGM  DS    0H
         LR    REG10,REG15         SAVE RETURN CODE
         L     REG2,XSAS           LOAD UP ADDRESS SCAN BLK
FREELOOP L     REG3,0(REG2)        LOAD ADDRESS NEXT BLK
         FREEMAIN R,LV=8,A=(2),SP=0
         LR    REG2,REG3           LOAD ADDRESS FOR FREEMAIN
         LTR   REG3,REG3           ANY MORE FOR FREEMAIN ?
         BNZ   FREELOOP            YES. GO BACK & FREE IT.
         LR    REG15,REG10         RESTORE RETURN CODE
EXITPGMX ZRETURN RC=(15)
         EJECT
***********************************************************************
*                                                                     *
*        AUXCMMZZ IS THE QUERY ROUTINE FOR MONSANTO OPERATOR          *
*        COMMANDS. IF A '?' IS ENTERED INTO THE CONSOLE, THIS         *
*        ROUTINE IS INVOKED TO LIST OF ALL THE OPERANDS AVAILABLE     *
*        TO THE OPERATOR AND THEIR FUNCTION.                          *
*                                                                     *
***********************************************************************
         SPACE 2
AUXCMMZZ DS    0H
         SPACE 2
***********************************************************************
*        FIRST OUTPUT THE TITLE LINE                                  *
***********************************************************************
         SPACE 2
         LOADMSG DATA=TITLE,LENGTH=TITLLEN,TYPE=C
         LR    REG11,REG1          LOAD THIS AS FIRST WTO ELEMENT
         LR    REG9,REG11          SET UP FOR FOLLOWING CHAIN
         LOADMSG DATA=HEADING,LENGTH=HEADLEN,TYPE=L
         ST    REG1,0(REG9)        CHAIN THIS ELEMENT TO PREVIOUS ONE
         LR    REG9,REG1           SAVE ADDRESS OF LAST ELEMENT
         B     ZZLIST              BRANCH TO NEXT ROUTINE
         SPACE 2
HEADING  DC    C'OPERAND   *FUNCTION'
HEADLEN  EQU   L'HEADING           LENGTH FOR GETMAIN
TITLE    DC    C'DD COMMAND - OPERAND SUMMARY.'
TITLLEN  EQU   L'TITLE
         EJECT
***********************************************************************
*        LIST OFF ALL TEXT FIELDS                                     *
***********************************************************************
         SPACE 2
ZZLIST   DS    0H
         LA    REG3,CMDTABLE       LOAD START ADDRESS OF COMMAND TABLE
         LA    REG5,CMDTBEND-1     LOAD END ADDRESS OF COMMAND TABLE
         XR    REG6,REG6           CLEAR REGISTER 6
         XR    REG10,REG10         CLEAR REGISTER 10
         USING CMDTAB,REG3         ADDRESSABILITY FOR EACH ENTRY IN TAB
         SPACE 2
LOOP2    IC    REG6,CMDLEN         LOAD LENGTH-1 OF COMMAND
         IC    REG10,CMDTXLEN(REG6) LOAD LENGTH OF TEXT
         XC    CLRLINE,CLRLINE     CLEAR THE OUTPUT AREA
         EX    REG6,MVCWTO1        MOVE COMMAND TO OUT AREA
         MVI   MSGSEP,C':'         SEPARATING LITERAL TO OUTPUT MSG
         LA    REG15,CMDTEXT(REG6) LOAD 'FROM' ADDRESS FOR TEXT
         EX    REG10,MVCWTO2       MOVE TEXT TO OUT AREA
         LOADMSG DATA=MSGAREA,LENGTH=MSGLEN,TYPE=D
         ST    REG1,0(REG9)        CHAIN ELEMENTS TOGETHER
         LR    REG9,REG1           SAVE ADDRESS OF LAST ELEMENT
         LA    REG4,CMDENLEN(REG6,REG10) LOAD LENGTH THIS ENTRY
         BXLE  REG3,REG4,LOOP2     LOOP TO END OF TABLE
         B     ENDLINE             BRANCH TO NEXT ROUTINE
         SPACE 2
MVCWTO1  MVC   MSGAREA(0),CMDNAME  MOVE COMMAND NAME TO WTO
MVCWTO2  MVC   MSGTEXT(0),0(REG15) MOVE DESCRIPTIVE TEXT TO WTO
         EJECT
***********************************************************************
*        OUTPUT A LINE TO ROUND OFF DISPLAY                           *
***********************************************************************
         SPACE 2
ENDLINE  DS    0H
         LOADMSG DATA=LASTLINE,LENGTH=LENLAST,TYPE=E
         ST    REG1,0(REG9)
         LR    REG9,REG1
         B     DOOUTPUT            GO HAVE OUTPUT DONE
         SPACE 2
LASTLINE DC    C'ENTER ANY OF ABOVE AS OPERANDS OF THE COMMAND'
LENLAST  EQU   L'LASTLINE          LENGTH FOR GETMAIN
         EJECT
***********************************************************************
*        ALL OUTPUT IS PREPARED. ARRANGE TO OUTPUT IT                 *
***********************************************************************
         SPACE 2
DOOUTPUT OUTPUT (REG11),UCMID=XSAU OUTPUT THE PREPARED DATA
         ORG   *-2
         BR    REG15               BRANCH TO THE ROUTINE
SUBPOOL  DS    0F                  USED TO PLACE SUBPOOL ID IN REG 0
         DC    AL1(0)
         DC    AL3(0)              PADDING
         EJECT
         END
//LKED.SYSIN  DD   *
 SETCODE AC(1)
 NAME AUXCMM01(R)
 INCLUDE MLPALIB(AUXCOMM)
 INCLUDE MLPALIB(AUXCMM01)
 ENTRY AUXCOMM
 ALIAS AUXCMM10
 ALIAS AUXCMM06
 SETCODE AC(1)
 NAME AUXCOMM(R)
/*
