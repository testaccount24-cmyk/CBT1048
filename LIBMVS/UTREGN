***********************************************************************
*                        U T 5 0 6 B                                  *
*                                                                     *
*        THIS MODULE EXAMINES THE CESD FOR A SELECTED LOAD MODULE     *
*        OF A PDS AND DETERMINES IF THE ENTRY POINT WAS ASSIGNED AS   *
*        A RESULT OF AN OBJECT MODULE END CARD.                       *
*          IF THIS IS THE CASE, AND THERE IS NO ENTRY IN THE CESD     *
*        WHICH HAS THE SAME NAME AS THE MEMBER NAME OF THE LOAD       *
*        MODULE, A NEW ENTRY IS CREATED OF THAT NAME AND WITH A       *
*        VALUE CALCULATED TO YIELD THE SAME ENTRY POINT AS WAS        *
*        ORIGINALLY ASSIGNED.                                         *
*                                                                     *
*        REGISTER USAGE:                                              *
*        REG0  PARAMETER REGISTER                                     *
*        REG1  PARAMETER REGISTER                                     *
*        REG2  ADDRESS OF THE NAME OF MEMBER PROCESSED                *
*        REG3  ADDRESS OF CURRENT ENTRY OF CESD                       *
*        REG4  LENGTH OF EACH CESD ENTRY                              *
*        REG5  ADDRESS OF LAST BYTE OF LAST CESD ENTRY                *
*        REG6  ADDRESS OF INPUT BUFFER CHAIN                          *
*        REG7  ADDRESS OF OUTPUT BUFFER CHAIN                         *
*        REG8  ADDRESS OF CURRENT LOAD MODULE RECORD                  *
*        REG9  WORK REGISTER                                          *
*        REG10 WORK REGISTER                                          *
*        REG11 LINK REGISTER BETWEEN ROUTINES                         *
*        REG12 BASE REGISTER OF THE PROGRAM                           *
*        REG13 ADDRESS OF THE REGISTER SAVE AREA                      *
*        REG14 PROGRAM LINK REGISTER AND WORK REGISTER                *
*        REG15 PROGRAM LINK REGISTER AND WORK REGISTER                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        EQUATES USED IN THIS MODULE                                  *
***********************************************************************
         SPACE 2
CESDID   EQU   X'20'               BLOCK IDENTIFICATION FOR CESD
*
*        THE NEXT EQUATES RELATE TO 'FLAG'
*
MATCH    EQU   X'80'               A CSECT NAME IS SAME AS MEMBER NAME
ESDOK    EQU   X'40'               NO CORRECTIVE ACTION NEEDED.
         EJECT
***********************************************************************
*        DSECTS USED IN THE MODULE                                    *
***********************************************************************
         SPACE 2
CESDENT  DSECT ,                   COMPOSITE EXTERNAL SYMBOL DICTIONARY
CESDNAME DS    CL8                 NAME OF THE SYMBOL
CESDTYPE DS    X                   TYPE OF CESD ENTRY
NULL     EQU   7                   ENTRY NOT ACTIVE
CSECT    EQU   0                   CSECT IDENTIFICATION RECORD
LABELREF EQU   3                   THIS IS AN ENTRY POINT NAME
CESDADDR DS    CL3                 ADDRESS OF THE EP/CSECT
CESDSDID DS    X                   SEGMENT NUMBER OF CSECT
CESDLEN  DS    CL3                 LENGTH OF THE CSECT
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
UT506B   ZCSECT
         XC    RETCODE,RETCODE     CLEAR RETURN CODE
         L     REG2,0(REG1)        LOAD ADDRESS OF MEMBER NAME
         MVI   FLAG,0              CLEAR THE LOGIC FLAG
         EJECT
***********************************************************************
*        INITIALISE THE PDS MEMBER FOR PROCESSING                     *
***********************************************************************
         SPACE 2
         OPEN  (PDS,INPUT)         OPEN THE MEMBER FOR UPDATE
         MVC   MEMNAME,0(REG2)     MOVE MEMBER TO BLDL LIST
         BLDL  PDS,BLDLTAB         READ IN THE COMPLETE DIRECTORY ENTRY
         MVC   SAVEEPA+1(3),MODEPA SAVE ENTRY POINT ADDRESS
         FIND  PDS,MEMTTR,C        POINT DCB AT CORRECT MEMBER
         MVC   SAVETTR,MEMTTR      SAVE TTR FOR ALIAS SEARCH
         EJECT
***********************************************************************
*        LOCATE THE CESD AND READ IT INTO CORE                        *
***********************************************************************
         SPACE 2
READCESD READ  DECB1,SF,PDS,BUFFER,13030 READ THE FIRST/NEXT BLOCK
         CHECK DECB1               WAIT FOR I/O TO COMPLETE
         CLI   BUFFER,CESDID       IS THIS A CESD BLOCK ?
         BNE   BLDANEW1            GO SEE IF A NEW CESD IS NEEDED
         EJECT
***********************************************************************
*        SCAN THE CESD AND LOOK FOR A CESD ENTRY OF THE SAME NAME AS  *
*        THE MEMBER NAME OF THE LOAD MODULE                           *
***********************************************************************
         SPACE 2
         LH    REG4,BUFFER+6       LOAD LENGTH OF THE CESD BLOCK
         LA    REG3,BUFFER+8       LOAD START ADDRESS OF CESD ENTRIES
         LA    REG5,BUFFER+7(REG4) LOAD ADDRESS OF LAST BYTE ENTRIES
         LA    REG4,16             LOAD LENGTH OF EACH ENTRY
         USING CESDENT,REG3        ADDRESSABILITY FOR CESD ENTRIES
CESDLOOP EQU   *
         LA    REG11,NOTNAME       SET RETURN REGISTER
         CLI   CESDTYPE,CSECT      IS THIS A CSECT DEFN ?
         BE    TESTCESD            YES. GO EXAMINE IT
         CLI   CESDTYPE,LABELREF   IS THE AN ENTRY POINT
         BE    TESTENTY            YES. GO TEST IT
NOTNAME  BXLE  REG3,REG4,CESDLOOP  PROCESS WHOLE OF CESD BLOCK
         B     READCESD            GO READ IN NEXT BLOCK
         EJECT
***********************************************************************
*        EXAMINE THE CSECT DEFINITION TO FIND THE ENTRY POINT OF MODULE
***********************************************************************
         SPACE 2
TESTCESD DS    0H
         NI    FLAG,255-MATCH      TURN OFF CSECT MATCH FLAG
         XR    REG14,REG14         CLEAR WORK REGISTER
         XR    REG15,REG15         CLEAR WORK REGISTER
         XR    REG1,REG1           CLEAR WORK REGISTER
         ICM   REG1,7,MODEPA       LOAD ENTRY POINT ADDRESS OF PGM
         ICM   REG14,7,CESDADDR    LOAD START ADDRESS OF CSECT
         ICM   REG15,7,CESDLEN     LOAD LENGTH OF CSECT
         AR    REG15,REG14         CALCULATE END ADDRESS OF CSECT
         CR    REG14,REG1          IS EPA IN THIS CSECT
         BH    NOTINIT             NO. START ADDRESS TOO HIGH
         CR    REG15,REG1          IS EPA STILL IN RANGE OF CSECT ?
         BNH   NOTINIT             NO. END ADDRESS TOO LOW.
         SR    REG1,REG14          CALCULATE OFFSET INTO CSECT
         LTR   REG1,REG1           IS EPA AT START OF CSECT
         BZ    NOCHNGE             YES. LINK WILL BE OK
         OI    FLAG,MATCH          SIGNAL THAT ENTRY IN THIS CSECT
         STCM  REG1,7,SAVEDISP     SAVE THIS DISPLACEMENT
NOTINIT  BR    REG11               RETURN TO CALLER
NOCHNGE  OI    FLAG,ESDOK          SIGNAL NO CHANGE NEEDED
         MVC   0(8,REG2),CESDNAME  SET ENTRY CARD FOR THIS NAME
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        EXAMINE THE ENTRY POINT TO SEE IF IT IS CORRECT              *
***********************************************************************
         SPACE 2
TESTENTY DS    0H
         TM    FLAG,MATCH          ARE WE STILL IN CORRECT CSECT
         BZ    ENTYEXIT            NO. RETURN TO CALLER
         CLC   CESDADDR,SAVEDISP   TEST FOR CORRECT ADDRESS
         BNE   ENTYEXIT            NO. THIS IS NOT CORRECT ENTRY POINT
         OI    FLAG,ESDOK          SIGNAL THAT AN ENTRY IS FOUND
         MVC   0(8,REG2),CESDNAME  TELL MAIN ROUTINE ITS NAME
ENTYEXIT BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        DETERMINE IF ANY ACTION IS NEEDED AND ROUTE CONTROL          *
***********************************************************************
         SPACE 2
BLDANEW1 DS    0H
         TM    FLAG,ESDOK          WAS A VALID CESD ENTRY FOUND ?
         BO    EXITPGM             YES. NO ACTION NEEDED, RETURN
         MVI   RETCODE+1,4         SET NON-ZERO RETURN CODE
         B     WRITENEW            NO. COPY MEMBER AND BUILD NEW CESD
         EJECT
***********************************************************************
*        REBUILD THE LOAD MODULE WITH A NEW EXPANDED CESD             *
***********************************************************************
         SPACE 2
WRITENEW DS    0H
         OPEN  (INPDS,INPUT,OUTPDS,OUTPUT) OPEN SYSLIB SPECIAL PDS
         MVC   MEMNAME,DUMMY       CHANGE BLDL AREA TO REFERENCE DUMMY
         BLDL  INPDS,BLDLTAB       LOCATE THE DUMMY MODULE
         BAL   REG11,SETUPIO       INITIALISE I/O OPERATIONS
WRLOOP   BAL   REG11,GETBLK        GO GET FIRST BLOCK
         BAL   REG11,REBUILD       SEARCH FOR REQUD TEXT RECORD
         BAL   REG11,PUTBLK        GO WRITE NEW BLOCK
         B     WRLOOP              LOOP THROUGH MEMBER TO EOF
WRNEWEOF MVC   MEMNAME,0(REG2)     RENAME THE DUMMY FOR THIS MODULE
         MVC   STOWDAT,STOWSOUR    SHUFFLE UP USER DATA
NOWAIT2  STOW  OUTPDS,MEMNAME,A    UPDATE DIRECTORY TO ADDRESS NEW MEM
         LTR   REG15,REG15         TEST RETURN CODE
         BNZ   ERRSTOW             HELP. SOMETHING IS WRONG !
         CLOSE (INPDS,,OUTPDS)     CLOSE THE FILES
         FREEPOOL INPDS            FREE UP THE BUFFER POOL
         FREEPOOL OUTPDS           FREE UP THE BUFFER POOL
         B     EXITPGM             RETURN TO CALLER
         EJECT
***********************************************************************
*        CREATE A SUITABLE DUMMY LOAD MODULE                          *
***********************************************************************
         SPACE 2
REBUILD  DS    0H
         ST    REG11,SAVER111      SAVE LINK REGISTER
         CLC   0(L'IDTEXT,REG8),IDTEXT SEARCH FOR TEXT RECORD
         BNE   REBDEXIT            NO EXIT FROM ROUTINE
         L     REG10,IDOFFSET(REG8) LOAD UP LENGTH OF DUMMY
         A     REG10,SAVEEPA       ADD ENTRY POINT OF MODULE
         ST    REG10,IDOFFSET(REG8) REPLACE IN DUMMY
REBDEXIT L     REG11,SAVER111      RESTORE LINK REGISTER
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        READ THE NEXT BLOCK FROM INPUT PDS                           *
***********************************************************************
         SPACE 2
GETBLK   DS    0H
         READ  DECB8,SF,INPDS,BUFFER,13030
         CHECK DECB8               WAIT FOR I/O COMPLETION
         L     REG1,DECB8+16       LOAD ADDRESS OF IOB
         LH    REG15,INPDS+X'3E'   LOAD LENGTH OF A BLOCK
         SH    REG15,14(REG1)      SUBTRACT RESIDUAL BLOCK COUNT
         STH   REG15,BLKLENTH      SAVE LENGTH OF THIS BLOCK
         LA    REG8,BUFFER         LOAD ADDRESS OF BUFFER
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        WRITE THE BLOCK TO THE NEW MEMBER                            *
***********************************************************************
         SPACE 2
PUTBLK   DS    0H
         LH    REG4,BLKLENTH       LOAD LENGTH OF OUTPUT BLOCK
         WRITE  DECB9,SF,OUTPDS,BUFFER,(4) WRITE OUT THE BLOCK
         CHECK DECB9
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        INITIALISE INPUT AND OUTPUT BUFFERS                          *
***********************************************************************
         SPACE 2
SETUPIO  DS    0H
         FIND  INPDS,MEMTTR,C      POINT DCB AT CORRECT MEMBER
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        PROGRAM EXIT ROUTINES                                        *
***********************************************************************
         SPACE 2
EXITPGM  DS    0H
         CLOSE (PDS)               CLOSE THE UPDAT FILE
         LH    REG15,RETCODE       LOAD RETURN CODE
         ZRETURN RC=(15)
         EJECT
***********************************************************************
*        AN ERROR HAS OCCURRED ON THE STOW MACRO                      *
***********************************************************************
         SPACE 2
ERRSTOW  DS    0H
         L     REG1,MSGTABL(REG15) LOAD ADDRESS OF SUITABLE MSG
         MVC   PRTMSG,0(REG1)      MOVE IT TO PRINT LINE
         MVC   PRTNAME,0(REG2)     IDENTIFY SOURCE OF ERROR
         OPEN  (SYSPRINT,OUTPUT)   OPEN THE ERROR PRINT FILE
         PUT   SYSPRINT,ERRHEAD    PUT OUT A REPORT HEADING
         PUT   SYSPRINT,ERRLINE    OUTPUT THE ERROR MESSAGE
         CLOSE (SYSPRINT)          CLOSE THE PRINT FILE
         CLOSE (INPDS,,OUTPDS)
         FREEPOOL INPDS
         FREEPOOL OUTPDS
         B     EXITPGM             RETURN TO CALLER
         EJECT
***********************************************************************
*        END OF FILE REACHED WHILE READING THE CESD                   *
***********************************************************************
         SPACE 2
ERROR2   DS    0H
         OPEN  (SYSPRINT,OUTPUT)
         MVC   ERRCESD,MEMNAME     IDENTIFY SOURCE OF ERROR
         PUT   SYSPRINT,ERR2MSG    TELL OF EODAD EMCOUNTERED
         CLOSE (SYSPRINT)          CLOSE THE FILE
         B     EXITPGM             RETURN TO CALLER
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 2
         PRINT NOGEN
PDS      DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=R,RECFM=U,                 X
               BLKSIZE=13030,EODAD=ERROR2
         SPACE 2
INPDS    DCB   DDNAME=DUMMYLIB,DSORG=PO,MACRF=R,RECFM=U,BLKSIZE=13030, X
               EODAD=WRNEWEOF,NCP=2,BUFNO=2
         SPACE 2
OUTPDS   DCB   DDNAME=DUMMYLIB,DSORG=PO,MACRF=W,RECFM=U,BLKSIZE=13030, X
               NCP=2,BUFNO=2
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FA,   X
               BLKSIZE=133
         EJECT
***********************************************************************
*        BUFFER POOL CONTROL BLOCKS                                   *
***********************************************************************
         SPACE 2
         READ  DECBIN1,SF,INPDS,,13030,MF=L
         DC    A(DECBIN2)          CHAIN POINTER
         READ  DECBIN2,SF,INPDS,,13030,MF=L
         DC    A(DECBIN1)          CHAIN POINTER
         WRITE DECBOUT1,SF,OUTPDS,,13030,MF=L
         DC    A(DECBOUT2)         CHAIN POINTER
         WRITE DECBOUT2,SF,OUTPDS,,13030,MF=L
         DC    A(DECBOUT1)         CHAIN POINTER
         EJECT
***********************************************************************
*        CONSTANTS AND LITERALS                                       *
***********************************************************************
         SPACE 2
SAVEDISP DS    F                   SAVE AREA FOR DISPLACEMENT OF EPA
SAVER111 DS    F                   SAVE AREA FOR LINK REGISTER
SAVESDID DS    F                   SAVE AREA FOR EP RELATIVE ID
SAVEEPA  DC    F'0'                SAVE AREA FOR ENTRY POINT
SAVENAME DS    CL8                 SAVE AREA FOR MEMBER NAME
SAVETTR  DS    CL3                 SAVE AREA FOR MEMBER'S TTR
DUMMY    DC    CL8'DUMMY'          DUMMY CSECT
IDTEXT   DC    X'5AF0F00807FF'     IDENTIFIER OF DUMMY TEXT
IDOFFSET EQU   8                   OFFSET TO PSEUDO ADCON
RETCODE  DS    H                   RETURN CODE
SETHEAD  DC    X'20000000'         CESD BLOCK IDENTIFICATION
         DC    X'00010010'         LENGTH OF DATA
SETCESD  DS    0CL16               DUMMY CESD FOR NEW RECORD
SETNAME  DS    CL8                 NAME OF ENTRY
SETTYPE  DS    X                   TYPE OF ENTRY
SETEPA   DS    XL3                 ADDRESS OF THE ENTRY
SETID    DS    X                   ID OF ENTRY
SETLENTH DS    XL3                 MYSTERY FIELD
CESDMAX  DC    H'240'              MAX LENGTH OF DATA IN CESD
BLKLENTH DS    H                   LENGTH OF THIS BLOCK
FLAG     DS    X                   LOGIC FLAG
FLAG2    DS    X                   NOTE FOR TEXT TTR LOGIC FLAG
BLDLTAB  DC    H'1',H'64'
MEMNAME  DC    CL8'GO'
MEMTTR   DC    XL3'00'
STOWDAT  DS    0CL64
K        DC    X'00'
Z        DC    X'00'
STOWSOUR DS    0CL64
C        DC    X'00'
TEXTTTR  DS    XL3
         DS    XL1
NOTETTR  DS    XL3
NOTENO   DS    X
ATTR     DS    XL2
MODLEN   DS    XL3
TEXTLEN  DS    XL2
MODEPA   DS    XL3
ATTR2    DS    XL3
         DS    XL20
MSGTABL  DS    0F                  TABLE OF ERROR MESSAGES
         DC    A(0,0,NOTFND,DIRFULL,IOERR,0,NOCORE)
NOTFND   DC    CL(L'PRTMSG)'MEMBER NOT FOUND. ADDED'
DIRFULL  DC    CL(L'PRTMSG)'DIRECTORY IS FULL'
IOERR    DC    CL(L'PRTMSG)'PERMANENT I/O ERROR'
NOCORE   DC    CL(L'PRTMSG)'INSUFFICIENT CORE AVAILABLE'
ERRHEAD  DC    CL133'1****** ERROR ATTEMPTING TO STOW UPDATED MEMBER NAM
               ME IN LIBRARY ADDRESSED BY SYSUT1'
ERRLINE  DC    C'0  '
PRTMSG   DC    CL30' '             DESCRIPTION OF ERROR
         DC    C' FOR MEMBER NAME - '
PRTNAME  DC    CL8' '
         DC    CL75' '             PADDING
ERR2MSG  DC    CL133'1*** INVALID END OF FILE IN CESD FOR - '
         ORG   ERR2MSG+50
ERRCESD  DC    CL8' '
         ORG
         LTORG
         DS    0F                  ALIGNMENT
BUFFER   DS    CL13030
         END
