//IEFU83 JOB (5806,5),'** FOR J. NOLS **',CLASS=N                          00100
//LIBRA EXEC LIBRARYN,FILE=MVS                                             00200
//SYSIN DD *                                                               00300
-OPT                                                                       00400
-SEL IEFU83,FU83,LIST,EXEC,VERS=1011                                       00500
-REP ALL                                                                   00600
         TITLE 'IEFU83 - INTERNAL MACROS'                               U8300700
         MACRO                                                          U8300800
&NAME  RTNDEF  &TABLE,&RECNO,&RTN                                       U8300900
.*                                                                      U8301000
.*       CREATE AN ENTRY IN THE TABLE OF ROUTINE ADDRESSES              U8301100
.*        ASSOCIATED WITH THE SMF RECORDS.  THE SMF RECORD TYPE IS      U8301200
.*        USED AS A SUBSCRIPT TO EXTRACT THE REQUIRED ROUTINE ADDRESS.  U8301300
.*                                                                      U8301400
         ORG   &TABLE+(&RECNO.*4) ORG TO REQUIRED TABLE ENTRY           U8301500
         DC    A(&RTN)             SPECIFY ROUTINE ADDRESS              U8301600
         MEND                                                           U8301700
         SPACE 5                                                        U8301800
         MACRO                                                          U8301900
&NAME    CSID  &NONAME                                                  U8302000
.*                                                                      U8302100
.*       IDENTIFY THE MODULE IN THE EVENT OF A DUMP                     U8302200
.*                                                                      U8302300
         LCLC  &NAME1                                                   U8302400
&NAME1   SETC  '&NAME'                                                  U8302500
         AIF   ('&NONAME' EQ 'NONAME').A01                              U8302600
&NAME1   DC    CL8'&SYSECT'        NAME OF CSECT                        U8302700
&NAME1   SETC  ' '                                                      U8302800
.A01           ANOP                                                     U8302900
&NAME1   DC    CL8'&SYSDATE'       DATE OF ASSEMBLY                     U8303000
         DC    CL8'&SYSTIME'       TIME OF ASSEMBLY                     U8303100
         MEND                                                           U8303200
         EJECT                                                          U8303300
         MACRO                                                          U8303400
&NAME    SUBIN &DUMMY,&SAVE=                                            U8303500
.*                                                                      U8303600
.*       SUBIN ,                   ENTER ROUTINE                        U8303700
.*       SUBIN SAVE=ALL            SAVE ALL REGISTERS                   U8303800
.*       SUBIN SAVE=(R1,R2,R3)     PRESERVE SPECIFIED REGISTERS         U8303900
.*                                                                      U8304000
.*       THE MACROS 'SUBIN' AND 'SUBOUT' ARE USED TO PRESERVE REGISTER  U8304100
.*        CONTENTS AT ENTRY TO A SUB-ROUTINE, AND TO RESTORE THEM UPON  U8304200
.*        EXIT.  THESE MACROS DIFFER FROM THE STANDARD SUBIN/SUBOUT IN  U8304300
.*        THAT THEY GENERATE RE-ENTRANT CODE, UTILISING A DYNAMICALLY   U8304400
.*        ASSIGNED SAVE AREA GETMAINED BY THE PROGRAM AT ENTRY.         U8304500
.*                                                                      U8304600
.*       ( THE MORE ASTUTE OF YOU WILL NOTICE A CERTAIN SIMILARITY      U8304700
.*        BETWEEN THESE MACROS AND THOSE I WROTE FOR JES2 ).            U8304800
.*                                                                      U8304900
         GBLA  &REGSC                                                   U8305000
         GBLA  &REGDTAB(16)                                             U8305100
         GBLC  &REGRTAB(16)                                             U8305200
         GBLA  &REGNREG                                                 U8305300
         GBLC  &REGSD,&REGSALL                                          U8305400
         LCLA  &LOOP,&DISP                                              U8305500
         LCLA  &N,&S                                                    U8305600
         LCLC  &R,&P,&PP                                                U8305700
         AIF   ('&REGSD' NE 'ON').PREVOK                                U8305800
         MNOTE 16,'PREVIOUS $REGSAVE NOT FOLLOWED BY A $REGREST'        U8305900
.PREVOK  ANOP                                                           U8306000
&REGSD   SETC  'ON'                                                     U8306100
&REGSALL SETC  ' '                                                      U8306200
&LOOP    SETA  0                                                        U8306300
.LOOPE1  ANOP                                                           U8306400
&LOOP    SETA  &LOOP+1                                                  U8306500
         AIF   (&LOOP GT 16).LOOPX1                                     U8306600
&REGRTAB(&LOOP) SETC ''                                                 U8306700
         AGO   .LOOPE1                                                  U8306800
.LOOPX1  ANOP                                                           U8306900
&LOOP    SETA  0                                                        U8307000
.LOOPE2  ANOP                                                           U8307100
&LOOP    SETA  &LOOP+1                                                  U8307200
         AIF   (&LOOP GT 16).LOOPX2                                     U8307300
&REGDTAB(&LOOP) SETA 0                                                  U8307400
         AGO   .LOOPE2                                                  U8307500
.LOOPX2  ANOP                                                           U8307600
&REGNREG SETA  N'&SAVE                                                  U8307700
         AIF   ('&SAVE' NE '').START                                    U8307800
&NAME    DS    0H                  ENTER ROUTINE                        U8307900
         MEXIT                                                          U8308000
.START   ANOP                                                           U8308100
&NAME    L     R9,DREGCNT          GET COUNT OF SLOTS IN USE            U8308200
         SLL   R9,2                MULTIPLY BY 4 FOR INDEX              U8308300
         LA    R9,DREGSAVE(R9)     POINT AT 1ST AVAILABLE SLOT          U8308400
         AIF   ('&SAVE' NE 'ALL').SAVE1ST                               U8308500
&REGSALL SETC  'ALL'                                                    U8308600
&REGNREG SETA  16                                                       U8308700
         STM   R0,R15,0(R9)        PRESERVE ALL REGISTERS IN SAVE AREA  U8308800
         AGO   .LOOPX                                                   U8308900
.SAVE1ST ANOP                                                           U8309000
&LOOP    SETA  0                                                        U8309100
&DISP    SETA  0                                                        U8309200
.LOOP    ANOP                                                           U8309300
&LOOP    SETA  &LOOP+1                                                  U8309400
         AIF   (&LOOP GT &REGNREG).LOOPX                                U8309500
         ST    &SAVE(&LOOP),&DISP.(R9) PRESERVE REGISTER IN NEXT SLOT   U8309600
&REGDTAB(&LOOP) SETA &DISP                                              U8309700
&REGRTAB(&LOOP) SETC '&SAVE(&LOOP)'                                     U8309800
&DISP    SETA  &DISP+4                                                  U8309900
         AGO   .LOOP                                                    U8310000
.LOOPX   ANOP                                                           U8310100
         L     R9,DREGCNT          GET COUNT OF SLOTS USED UP TO NOW    U8310200
         LA    R9,&REGNREG.(,R9)   INCREMENT BY SLOTS USED HERE         U8310300
         ST    R9,DREGCNT          PRESERVE UPDATED COUNT OF USED SLOTS U8310400
         MEXIT                                                          U8310500
         MEND                                                           U8310600
         EJECT                                                          U8310700
         MACRO                                                          U8310800
&NAME    SUBOUT &DUMMY,&RETURN=(R4)                                     U8310900
.*                                                                      U8311000
.*       IN ADDITION TO UTILISING A RE-ENTRANT PROGRAMMING TECHNIQUE,   U8311100
.*        THIS SUBOUT MACRO DIFFERS FROM THE STANDARD ONE IN THAT IT    U8311200
.*        AUTOMATICALLY RESTORES ALL THE REGISTERS PRESERVED BY THE     U8311300
.*        PRECEDING SUBIN MACRO, INSTEAD OF REQUIRING A LIST OF         U8311400
.*        REGISTERS TO BE RESTORED.  THIS IS PRIMARILY BECAUSE THE      U8311500
.*        SAVE/RESTORE TECHNIQUE USED REQUIRES ALL REGISTERS SAVED TO   U8311600
.*        BE RESTORED, AND IF THE PROGRAMMER FORGETS TO PUT A REGISTER  U8311700
.*        IN THE RESTORE LIST RESULTS WOULD BE, TO USE THE CLASSIC      U8311800
.*        PHRASE, UNPREDICTABLE.                                        U8311900
.*                                                                      U8312000
         GBLA  &REGSC                                                   U8312100
         GBLC  &REGRTAB(16)                                             U8312200
         GBLA  &REGDTAB(16)                                             U8312300
         GBLA  &REGNREG                                                 U8312400
         GBLC  &REGSD,&REGSALL                                          U8312500
         LCLA  &LOOP,&RCNT                                              U8312600
         LCLA  &N,&S                                                    U8312700
         LCLC  &R,&P,&PP,&B,&LABEL                                      U8312800
&REGSD  SETC  'OFF'                                                     U8312900
&LABEL   SETC  '&NAME'                                                  U8313000
&LOOP    SETA  0                                                        U8313100
&RCNT    SETA  0                                                        U8313200
         AIF   (&REGNREG EQ 0).RET                                      U8313300
&LABEL   LA    R9,&REGNREG         GET NUMBER REGISTERS RESTORED        U8313400
         S     R9,DREGCNT          SUBTRACT THOSE USED UP TILL NOW      U8313500
         LCR   R9,R9               GET NEW (LOWER) TOTAL +VE            U8313600
         ST    R9,DREGCNT          PRESERVE UPDATED SLOT COUNT          U8313700
         SLL   R9,2                MULTIPLY COUNT BY 4 FOR INDEX        U8313800
         LA    R9,DREGSAVE(R9)     POINT AT 1ST SLOT FOR THIS S/A       U8313900
&LABEL   SETC  ''                                                       U8314000
         AIF   ('&REGSALL' NE 'ALL').LOOP                               U8314100
         LM    R0,R15,0(R9)        RESTORE ALL REGISTERS FROM SAVE AREA U8314200
         AGO   .RET                                                     U8314300
.LOOP    ANOP                                                           U8314400
&LOOP    SETA  &LOOP+1                                                  U8314500
         AIF   (&LOOP GT &REGNREG).RET                                  U8314600
         L     &REGRTAB(&LOOP),&REGDTAB(&LOOP)(,R9)  RESTORE REGISTER   U8314700
         AGO   .LOOP                                                    U8314800
.RET     ANOP                                                           U8314900
&REGSALL SETC  ' '                                                      U8315000
&LABEL   BR    &RETURN(1)          RETURN TO THE CALLER                 U8315100
         MEXIT                                                          U8315200
         MEND                                                           U8315300
         TITLE 'ACCOUTING ROUTINE CONTROL BLOCK DSECT''S'                  15400
         $MVT                                                              15500
         EJECT                                                             15600
         $MCA                                                              15700
         EJECT                                                             15800
         $MASA                                                             15900
         EJECT                                                             16000
         $MAEQU                                                            16100
         TITLE 'IEFU83 - SMF RECORD SELECTION EXIT'                     U8316200
*********************************************************************** U8316300
*        NARRATIVE                                                    * U8316400
*********************************************************************** U8316500
         SPACE 1                                                        U8316600
* AUTHOR:      D.A.MOORCROFT                                            U8316700
* DATE:        JANUARY 78                                               U8316800
*              MODIFIED IN AUGUST 78 BY J. NOLS - TSG - BRUSSELS      +    16900
* PGMID:       IEFU83                                                   U8317000
         SPACE 3                                                        U8317100
*        THE PURPOSE OF THIS STANDARD EXIT IS TO DECIDE WHETHER OR      U8317200
*         NOT AN SMF RECORD IS TO BE WRITTEN TO THE SYS1.MAN DATA       U8317300
*         SET.  IT RECEIVES CONTROL IMMEDIATELY PRIOR TO THE WRITE,     U8317400
*         AND THE RETURN CODE SET IN REGISTER 15 DECIDES THE ACTION     U8317500
*         OF THE SYSTEM :-                                              U8317600
*              0 - WRITE THE RECORD                                     U8317700
*              4 - SUPPRESS THE RECORD                                  U8317800
         SPACE 5                                                        U8317900
*        INTERNALLY, THIS ROUTINE IS TABLE DRIVEN, AND ROUTINES ARE     U8318000
*         INVOKED AS APPROPRIATE TO ACCEPT A RECORD WITHOUT FURTHER     U8318100
*         PROCESSING, TO REJECT A RECORD WITHOUT FURTHER PROCESSING,    U8318200
*         OR TO REJECT A RECORD BASED UPON ITS CONTENTS.                U8318300
         SPACE 2                                                           18400
*       IN AUGUST 78 THIS EXIT HAS BEEN MODIFIED TO CALCULATE THE I/O +    18500
*        TIME. INFORMATION REQUIRED TO CALCULATE THE I/O TIME ARE     +    18600
*        EXTRACTED FROM SMF14,15 AND 64. THESE INFORMATION ARE :      +    18700
*        EXCP COUNT, BLOCK SIZE AND DEVICE TYPE. THE I/O TIME IS      +    18800
*        CALCULATED IN 1/100 SECS AND ADDED INTO APPROPRIATE ASA      +    18900
*        (LOCATED VIA THE JOB NAME) INTO 'ASASTPIO'.                  +    19000
*        ALSO, AT BEGINNINIG IF 'CVTUSER' DOES NOT CONTAIN THE        +    19100
*        ADDRESS OF MVT (I.E. CONTAINS 0), DYNAMICALLY INVOKE         +    19200
*        IEAVNPMC ROUTINE TO ACQUIRE AND INITIALISE THE ACCOUTING     +    19300
*        CONTROL BLOCKS.                                              +    19400
         SPACE 5                                                        U8319500
*        REGISTERS UPON ENTRY:-                                         U8319600
*         1 - ADDRESS OF RDW OF RECORD TO BE WRITTEN                    U8319700
*        13 - SAVE AREA ADDRESS                                         U8319800
*        14 - RETURN ADDRESS                                            U8319900
*        15- ROUTINE ADDRESS                                            U8320000
         TITLE 'IEFU83 - WORK AREA DSECT'                               U8320100
*********************************************************************** U8320200
*        DSECT FOR ( GETMAINED ) WORK AREA                            * U8320300
*********************************************************************** U8320400
         SPACE 1                                                        U8320500
WORKDSCT DSECT                                                          U8320600
SAVEAREA DS    18F                 REGISTER SAVE AREA                   U8320700
         SPACE 2                                                        U8320800
*        THE FOLLOWING FIELDS ( 'DREGCNT' AND 'DREGSAVE' ) ARE USED     U8320900
*         BY THE MACROS SUBIN AND SUBOUT TO SUPPLY DYNAMICALLY-ASSIGNED U8321000
*         SAVE AREA SLOTS.  'DREGCNT' CONTAINS THE COUNT OF CURRENTLY   U8321100
*         USED SLOTS, WHILE 'DREGSAVE' COMPRISES 64 SUCH SLOTS.  THIS   U8321200
*         FACILITATES THE USE OF SUB-ROUTINES TO ANY DEPTH, WITH ANY    U8321300
*         SUB-ROUTINE CALLED FROM ANYWHERE ELSE WITHOUT REQUIRING       U8321400
*         UNIQUELY ASSIGNED SAVE AREAS.  NOTE THAT NO CHECK IS MADE     U8321500
*         THAT THAT DREGSAVE IS EXCEEDED, SO IT BEHOVES YOU TO VERIFY   U8321600
*         THAT IT WILL ACCOMODATE THE REQUISITE NUMBER OF REGISTERS AT  U8321700
*         THE MAXIMUM SUB-ROUTINE DEPTH.                                U8321800
*                                                                       U8321900
DREGCNT  DS    F                   COUNT OF USED REG SAVE AREA SLOTS    U8322000
DREGSAVE DS    64F                 DYNAMICALLY ASSIGNED SAVE AREA       U8322100
         SPACE 2                                                        U8322200
WORKAREA DS    CL256               GENERAL PURPOSE WORK AREA            U8322300
WORKLGTH EQU   *-WORKDSCT          LENGTH OF TOTAL WORK AREA            U8322400
         TITLE 'IEFU83 - DSECT FOR JFCB (INCLUDED IN SOME SMF RECORDS)' U8322500
JFCB     DSECT                                                          U8322600
      IEFJFCBN ,                   GENERATE DSECT FOR JFCB              U8322700
         TITLE 'IEFU83 - DSECT FOR SMF4 RECORD '                      + U8322800
SMF4     DSECT                                                        +    22900
       IFASMFR 4                   GENERATE DSECT FOR SMF4 RECORD     +    23000
         TITLE 'IEFU83 - DSECT FOR SMF14/15 RECORDS'                    U8323100
SMF14    DSECT                                                          U8323200
       IFASMFR 14                  GENERATE DSECT FOR SMF14 RECORD      U8323300
         TITLE 'IEFU83 - DSECT FOR SMF17 RECORD '                       U8323400
SMF17    DSECT                                                          U8323500
       IFASMFR 17                  GENERATE DSECT FOR SMF17 RECORD      U8323600
         TITLE 'IEFU83 - DSECT FOR SMF34 RECORD '                       U8323700
SMF34    DSECT                                                          U8323800
       IFASMFR 34                  GENERATE DSECT FOR SMF34 RECORD      U8323900
         TITLE 'IEFU83 - DSECT FOR SMF64 RECORD '                       U8324000
SMF64    DSECT                                                        +    24100
       IFASMFR 64                  GENERATE DSECT FOR SMF64 RECORD    +    24200
         TITLE 'IEFU83 - EQUATES'                                       U8324300
*********************************************************************** U8324400
*        REGISTER EQUATES AND USAGE                                   * U8324500
*********************************************************************** U8324600
         SPACE 1                                                        U8324700
R0       EQU   0                                                        U8324800
R1       EQU   1                   GENERAL PURPOSE WORK REGISTER        U8324900
R2       EQU   2                                                        U8325000
R3       EQU   3                                                        U8325100
R4       EQU   4                   BAL RETURN ADDRESS                   U8325200
R5       EQU   5                                                        U8325300
R6       EQU   6                                                        U8325400
R7       EQU   7                                                        U8325500
R8       EQU   8                                                        U8325600
R9       EQU   9                   DYNAMIC SAVE AREA WORK REGISTER      U8325700
R10      EQU   10                  ADDRESS OF RDW || DATA               U8325800
R11      EQU   11                  BASE REGISTER 2                      U8325900
R12      EQU   12                  BASE REGISTER                        U8326000
R13      EQU   13                  SAVE AREA POINTER                    U8326100
R14      EQU   14                                                       U8326200
R15      EQU   15                                                       U8326300
         SPACE 5                                                        U8326400
*********************************************************************** U8326500
*        MISCELLANEOUS EQUATES                                        * U8326600
*********************************************************************** U8326700
         SPACE 1                                                        U8326800
SUBPOOL  EQU   0                   SUBPOOL FROM WHICH TO GETMAIN STORAG U8326900
SUBPL245 EQU   245                 SUBPOOL FROM WHICH TO GETMAIN SECOND U8327000
*                                  AND NEXT ASADDTAB SEGMENTS TABLE.    U8327100
         SPACE 1                                                        U8327200
W        EQU   X'96'               EQUATE USED TO SET COND CODE LOW     U8327300
X        EQU   X'95'               EQUATE USED TO SET COND CODE EQUAL   U8327400
Y        EQU   X'94'               EQUATE USED TO SET COND CODE HIGH    U8327500
*                                       E.G.     CLI   *,Y              U8327600
         TITLE 'IEFU83 - INITIALISATION'                                U8327700
*********************************************************************** U8327800
*        INITIALISATION                                               * U8327900
*********************************************************************** U8328000
         SPACE 1                                                        U8328100
IEFU83   CSECT                                                          U8328200
         USING IEFU83,R12,R11      ESTABLISH ADDRESSABILITY             U8328300
         USING WORKDSCT,R13        ESTABLISH WORK RAEA ADDRESSABILITY   U8328400
         B     28(R15)             BRANCH OVER IDENTIFYING CONSTANT     U8328500
         CSID  ,                   IDENTIFY NAME, RANK & SERIAL NUMBER  U8328600
         STM   14,12,12(R13)       SAVE REGISTERS                       U8328700
         LR    R12,R15             LOAD BASE REGISTER                   U8328800
         LA    R11,2048            ESTABLISH ...                        U8328900
         LA    R11,2048(R11,R12)    ... SECOND BASE REGISTER VALUE      U8329000
         L     R10,0(,R1)          OBTAIN RECORD ADDRESS FROM LINKAGE   U8329100
         BAL   R4,GETWORK          ACQUIRE WORK AREA                    U8329200
         BAL   R4,SETTFRR          ESTABLISH ESTAE ENVIRONMENT          U8329300
         L     R5,FLCCVT           GET MVT ADDRESS                    + U8329400
         L     R5,CVTUSER-CVTMAP(,R5) VIA THE CVT                     + U8329500
         LTR   R5,R5               IS MVT PRESENT ?                   + U8329600
         BNZ   MVTPRES             YES, BYPASS 'IEAVNPMC' PROCESSING  + U8329700
         LINK  EP=IEAVNPMC         NO, GO INITIALISE ACCTRTN C.B.     + U8329800
MVTPRES  EQU   *                                                      + U8329900
         BAL   R4,PROCESS          PERFORM NECESSARY PROCESSING         U8330000
         SPACE 2                                                        U8330100
*********************************************************************** U8330200
*        TERMINATION PROCESSING                                       * U8330300
*********************************************************************** U8330400
         SPACE 1                                                        U8330500
         LR    R8,R15              PRESERVE REG 15                      U8330600
         ESTAE 0                   DISENGAGE THE INTERACTIVE ESTAE      U8330700
         L     R0,GETMAIN          SET PARAMETER LIST IN REG 0          U8330800
         LR    R1,R13              POINT REG 1 AT THE AREA TO FREE      U8330900
         L     R13,4(R13)          RETRIEVE ADDRESS OF CALLER'S S/A     U8331000
      FREEMAIN R,LV=(0),A=(1)      FREEMAIN THE ACQUIRED MAIN STORAGE   U8331100
         L     R14,12(13)          RESTORE REGISTER 14                  U8331200
         LR    R15,R8              RESTORE REGISTER 15                  U8331300
         LM    R0,R12,20(R13)      RESTORE REGISTERS 0 - 12             U8331400
         MVI   12(R13),X'FF'       SET RETURN INDICATOR IN CALLER'S S/A U8331500
         BR    R14                 RETURN TO THE CALLER                 U8331600
         EJECT                                                          U8331700
*********************************************************************** U8331800
*        INITIALISATION:           ACQUIRE WORK AREA                  * U8331900
*********************************************************************** U8332000
         SPACE 1                                                        U8332100
GETWORK  SUBIN ,                   ENTER ROUTINE                        U8332200
         LR    R9,R13              PRESERVE SAVE AREA ADDRESS           U8332300
         L     R0,GETMAIN          SET GETMAIN PARM LIST IN REG 0       U8332400
       GETMAIN R,LV=(0)            ACQUIRE CORE                         U8332500
         LR    R13,R1              POINT R13 AT ACQUIRED MAIN STORAGE   U8332600
         ST    R13,8(R9)           PRESERVE S/A ADDRESS IN PREVIOUS     U8332700
         ST    R9,SAVEAREA+4       PRESERVE PREVIOUS ADDRESS IN THIS    U8332800
         XC    DREGCNT,DREGCNT     ZEROISE COUNT OF USEDD S/A SLOTS     U8332900
        SUBOUT ,                   RETURN TO CALLER                     U8333000
         EJECT                                                          U8333100
*********************************************************************** U8333200
*        INITIALISATION:           ESTABLISH ESTAE ENVIRONMENT        * U8333300
*********************************************************************** U8333400
         SPACE 1                                                        U8333500
SETTFRR  SUBIN ,                   ENTER ROUTINE                        U8333600
         TFRR  ,                   ESTABLISH ESTAE ENVIRONMENT          U8333700
        SUBOUT ,                   RETURN TO CALLER                     U8333800
         TITLE 'IEFU83 - MAIN-LINE LOGIC'                               U8333900
*********************************************************************** U8334000
*        MAINLINE LOGIC                                               * U8334100
*********************************************************************** U8334200
         SPACE 1                                                        U8334300
         USING SMF14,R10           ESTABLISH RECORD ADDRESSABILITY      U8334400
PROCESS  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              U8334500
SUBTAB1  SR    R2,R2               ZEROISE WORK REGISTER              + U8334600
         IC    R2,SMF14RTY         RETRIEVE RECORD TYPE               + U8334700
         SLL   R2,2                MULTIPLY BY 4 FOR INDEX            + U8334800
         A     R2,=A(RTNTABLE)     POINT R2 AT DESIRED RTN ADDRESS    + U8334900
         ICM   R15,15,0(R2)        SET RTN ADDRESS IN REG 15          + U8335000
         BZ    *+6                 BR TO ACCEPT IF NO RTN ADDRESS     + U8335100
         BALR  R4,R15              PERFORM THE APPROPRIATE ROUTINE    + U8335200
SUBTAB2  SR    R2,R2               ZEROISE WORK REGISTER              + U8335300
         IC    R2,SMF14RTY         RETRIEVE RECORD TYPE               + U8335400
         SLL   R2,2                MULTIPLY BY 4 FOR INDEX            + U8335500
         A     R2,=A(RTNTABIS)     POINT R2 AT DESIRED RTN ADDRESS    + U8335600
         ICM   R15,15,0(R2)        SET RTN ADDRESS IN REG 15          + U8335700
         BZ    ACCEPT              BR TO ACCEPT IF NO RTN ADDRESS     + U8335800
         BALR  R4,R15              PERFORM THE APPROPRIATE ROUTINE    + U8335900
         BNE   REJECT              BR IF THE RECORD IS NOT REQUIRED   + U8336000
ACCEPT   LA    R15,0               SET RETURN CODE TO ACCEPT RECORD     U8336100
         B     *+8                 BYPASS RESETTING RETURN CODE         U8336200
REJECT   LA    R15,4               SET RETURN CODE TO REJECT RECORD     U8336300
        SUBOUT ,                   RETURN TO CALLER                     U8336400
         DROP  R10                 DROP SMF RECORD ADDRESSABILITY       U8336500
         TITLE 'IEFU83 - RECORD PROCESSING ROUTINES'                    U8336600
*********************************************************************** U8336700
*        PROCESS SMF4 RECORDS                                         * U8336800
*********************************************************************** U8336900
         SPACE 1                                                        U8337000
*        AUGUST 78 :- FREE ALL THE DDNAME/UCB SEGMENT TABLE GETMAINED +    37100
*                      DURING THIS STEP PROCESSING.                   +    37200
         SPACE 1                                                           37300
         USING SMF4,R10            ESTABLISH SMF4 ADDRESSABILITY      +    37400
SMF4A    SUBIN SAVE=R4             PRESERVE REGISTER                  + U8337500
         LA    R1,SMF4JBN          GET ADDRESS OF JOBNAME             +    37600
         BAL   R4,FINDASA          GO FIND ASA BELONGING TO THE SAME  +    37700
*                                   JOB NAME.                         +    37800
         B     SMF4AE              ASA NOT FOUND, IF CTRL RETURND HERE+    37900
         LR    R5,R1               PRESERVE ASA ADDRESS               +    38000
         USING ASADSECT,R5         ESTABLISH ASA ADDRESSABILITY       +    38100
LOOPFST  SR    R1,R1               ZEROISE                            +    38200
         ICM   R1,7,ASADDNTA       GET ADDRESS OF 2ND SEG.TAB.(IF ANY)+    38300
         BZ    SMF4AE              NONE, TERMINATE                    +    38400
         MVC   ASADDNTA,1(R1)      PRESERVE NEXT SEGMENT ADDR.(IF ANY)+    38500
         SR    R0,R0               ZEROISE                            +    38600
         L     R0,GETMAIN2         GET LENGTH TO BE FREED             +    38700
        FREEMAIN R,LV=(0),A=(1)    FREE THIS TABLE SEGMENT            +    38800
         B     LOOPFST             GO FREE NEXT (IF ANY)              +    38900
SMF4AE   XC    ASADDTAB(ASADDTBL),ASADDTAB CLEAR STATIC 1ST SEG.TABLE +    39000
         SUBOUT ,                  RETURN TO CALLER                   +    39100
         DROP  R10                 DROP SMF4 ADDRESSABILITY           +    39200
         DROP  R5                  DROP ASA  ADDRESSABILITY           +    39300
         EJECT                                                          U8339400
*********************************************************************** U8339500
*        PROCESS SMF14 RECORDS                                        * U8339600
*********************************************************************** U8339700
         SPACE 1                                                        U8339800
*        AUGUST 78 :- FIND ASA AND CALCULATE I/O TIME                 +    39900
         SPACE 1                                                           40000
         USING SMF14,R10           ESTABLISH SMF14 ADDRESSABILITY       U8340100
SMF14A   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              U8340200
         TM    SMF14RIN,SMF14VIO   IS IT A VIO DATA SET ?             +    40300
         BO    SMF14AE             YES, BYPASS THE REST (VIO NOT CHRG)+    40400
         LA    R1,SMF14JBN         GET ADDRESS OF JOB NAME            +    40500
         BAL   R4,FINDASA          GO FIND ASA BELONGING TO THE SAME  +    40600
*                                   JOB AS THIS SMF RECORD            +    40700
         B     SMF14AE             ASA NOT FOUND, IF CTRL RETURND HERE+    40800
         SR    R5,R5               ZEROISE                            +    40900
         IC    R5,SMF14NUC         LOAD NUMBER OF UCB SEGMENTS        +    41000
         LA    R6,SMFDCBDE         POINT TO DCB/DEB SEGMENT           +    41100
         SR    R7,R7               ZEROISE                            +    41200
         IC    R7,SMF14SDC         LOAD SIZE OF DCB/DEB SEGMENT       +    41300
         LA    R6,0(R7,R6)         R6 = ADDRESS OF FIRST UCB SEGMENT  +    41400
         IC    R7,SMF14SUC         LOAD LENGTH OF ONE UCB SEGMENT     +    41500
         ICM   R2,15,SMFEXCP-SMF14UCB(R6) LOAD EXCP FORM 1ST SEGMENT  +    41600
         MVC   SMFJFCB1+JFCBSBNM+2-JFCB(1),SMFUCBTY+2-SMF14UCB(R6)    +    41700
*                                  PRESERVE BYTE 3 OF DEVICE TYPE CODE+    41800
         B     *+8                 FIRST TIME,BYPASS NEXT INSTRUCTION +    41900
LSMF14   A     R2,SMFEXCP-SMF14UCB(R6) ADD EXCP FROM NEXT SEGMENT(S)  +    42000
         LA    R6,0(R7,R6)         POINT TO NEXT UCB (IF ANY)         +    42100
         BCT   R5,LSMF14           REPEAT FOR (NEXT) UCB (IF ANY)     +    42200
         BAL   R4,EXCPCUNT         GO CALCULATE EXCP COUNT            +    42300
         BAL   R4,IOTIME           GO CALCULATE I/O TIME              +    42400
SMF14AE  SUBOUT ,                  RESTORE AND RETURN TO CALLER       + U8342500
         DROP  R10                 DROP SMF14 ADDDRESSABILITY           U8342600
         EJECT                                                          U8342700
*********************************************************************** U8342800
*        PROCESS SMF14 RECORDS                                        * U8342900
*********************************************************************** U8343000
         SPACE 1                                                        U8343100
*        THE PURPOSE OF THIS ROUTINE IS TO IDENTIFY THOSE SMF RECORDS   U8343200
*         THAT PERTAIN TO TEMPORARY DATA SETS, AND TO DELETE THOSE      U8343300
*         WHILE ACCEPTING RECORDS THAT APPLY TO PERMANENT DATA SETS.    U8343400
         SPACE 1                                                           43500
*        UPON RETURN TO THE MAIN-LINE, THE COND CODE IS SET THUS :-     U8343600
*         BE  - PERMANENT DATA SET: ACCEPT RECORD                       U8343700
*         BNE - TEMPORARY DATA SET: REJECT RECORD                       U8343800
         SPACE 1                                                        U8343900
         USING SMF14,R10           ESTABLISH SMF14 ADDRESSABILITY       U8344000
SMF14B   LA    R1,SMFJFCB1+JFCBDSNM-JFCB POINT REG 1 AT THE DSNAME      U8344100
         B     TEMPDS              TEST IF THIS IS A TEMPORARY DATA SET U8344200
         DROP  R10                 DROP SMF14 ADDDRESSABILITY           U8344300
         EJECT                                                             44400
*********************************************************************** U8344500
*        PROCESS SMF15 RECORDS                                        * U8344600
*********************************************************************** U8344700
         SPACE 1                                                        U8344800
*        AUGUST 78 :- FIND ASA AND CALCULATE I/O TIME                 +    44900
         SPACE 1                                                        U8345000
*        NOTE THAT THE SAME MAPPING MACRO IS USED FOR SMF15 RECORDS AS  U8345100
*         IS USED FOR SMF14 RECORDS.                                    U8345200
         SPACE 1                                                        U8345300
         USING SMF14,R10           ESTABLISH SMF14 ADDRESSABILITY       U8345400
SMF15A   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              U8345500
         TM    SMF14RIN,SMF14VIO   IS IT A VIO DATA SET ?             +    45600
         BO    SMF15AE             YES, BYPASS THE REST (VIO NOT CHRG)+    45700
         LA    R1,SMF14JBN         GET ADDRESS OF JOB NAME            +    45800
         BAL   R4,FINDASA          GO FIND ASA BELONGING TO THE SAME  +    45900
*                                   JOB AS THIS SMF RECORD            +    46000
         B     SMF15AE             ASA NOT FOUND, IF CTRL RETURND HERE+    46100
         SR    R5,R5               ZEROISE                            +    46200
         IC    R5,SMF14NUC         LOAD NUMBER OF UCB SEGMENTS        +    46300
         LA    R6,SMFDCBDE         POINT TO DCB/DEB SEGMENT           +    46400
         SR    R7,R7               ZEROISE                            +    46500
         IC    R7,SMF14SDC         LOAD SIZE OF DCB/DEB SEGMENT       +    46600
         LA    R6,0(R7,R6)         R6 = ADDRESS OF FIRST UCB SEGMENT  +    46700
         IC    R7,SMF14SUC         LOAD LENGTH OF ONE UCB SEGMENT     +    46800
         ICM   R2,15,SMFEXCP-SMF14UCB(R6) LOAD EXCP FORM 1ST SEGMENT  +    46900
         MVC   SMFJFCB1+JFCBSBNM+2-JFCB(1),SMFUCBTY+2-SMF14UCB(R6)    +    47000
*                                  PRESERVE BYTE 3 OF DEVICE TYPE CODE+    47100
         B     *+8                 FIRST TIME,BYPASS NEXT INSTRUCTION +    47200
LSMF15   A     R2,SMFEXCP-SMF14UCB(R6) ADD EXCP FROM NEXT SEGMENT(S)  +    47300
         LA    R6,0(R7,R6)         POINT TO NEXT UCB (IF ANY)         +    47400
         BCT   R5,LSMF15           REPEAT FOR (NEXT) UCB (IF ANY)     +    47500
         BAL   R4,EXCPCUNT         GO CALCULATE EXCP COUNT            +    47600
         BAL   R4,IOTIME           GO CALCULATE I/O TIME              +    47700
SMF15AE  SUBOUT ,                  RESTORE AND RETURN TO CALLER         U8347800
         DROP  R10                 DROP SMF14 ADDDRESSABILITY           U8347900
         EJECT                                                          U8348000
*********************************************************************** U8348100
*        PROCESS SMF15 RECORDS                                        * U8348200
*********************************************************************** U8348300
         SPACE 1                                                        U8348400
*        THE PURPOSE OF THIS ROUTINE IS TO IDENTIFY THOSE SMF RECORDS   U8348500
*         THAT PERTAIN TO TEMPORARY DATA SETS, AND TO DELETE THOSE      U8348600
*         WHILE ACCEPTING RECORDS THAT APPLY TO PERMANENT DATA SETS.    U8348700
         SPACE 1                                                           48800
*        UPON RETURN TO THE MAIN-LINE, THE COND CODE IS SET THUS :-     U8348900
*         BE  - PERMANENT DATA SET: ACCEPT RECORD                       U8349000
*         BNE - TEMPORARY DATA SET: REJECT RECORD                       U8349100
         SPACE 1                                                        U8349200
*        NOTE THAT THE SAME MAPPING MACRO IS USED FOR SMF15 RECORDS AS  U8349300
*         IS USED FOR SMF14 RECORDS.                                    U8349400
         SPACE 1                                                        U8349500
         USING SMF14,R10           ESTABLISH SMF14 ADDRESSABILITY       U8349600
SMF15B   LA    R1,SMFJFCB1+JFCBDSNM-JFCB POINT REG 1 AT THE DSNAME      U8349700
         B     TEMPDS              TEST IF THIS IS A TEMPORARY DATA SET U8349800
         DROP  R10                 DROP SMF14 ADDDRESSABILITY           U8349900
         EJECT                                                             50000
*********************************************************************** U8350100
*        PROCESS SMF17 RECORDS                                        * U8350200
*********************************************************************** U8350300
         SPACE 1                                                        U8350400
*        THE PURPOSE OF THIS ROUTINE IS TO IDENTIFY THOSE SMF RECORDS   U8350500
*         THAT PERTAIN TO TEMPORARY DATA SETS, AND TO DELETE THOSE      U8350600
*         WHILE ACCEPTING RECORDS THAT APPLY TO PERMANENT DATA SETS.    U8350700
         SPACE 1                                                        U8350800
*        UPON RETURN TO THE MAIN-LINE, THE COND CODE IS SET THUS :-     U8350900
*         BE  - PERMANENT DATA SET: ACCEPT RECORD                       U8351000
*         BNE - TEMPORARY DATA SET: REJECT RECORD                       U8351100
         SPACE 1                                                        U8351200
         USING SMF17,R10           ESTABLISH SMF17 ADDRESSABILITY       U8351300
SMF17B   LA    R1,SMF17DSN         POINT REGISTER 1 AT THE DSNAME       U8351400
         B     TEMPDS              TEST IF THIS IS A TEMPORARY DATA SET U8351500
         DROP  R10                 DROP SMF17 ADDDRESSABILITY           U8351600
         EJECT                                                          U8351700
*********************************************************************** U8351800
*        PROCESS SMF34 RECORDS                                        * U8351900
*********************************************************************** U8352000
         SPACE 1                                                        U8352100
*        AUGUST 78 :- FREE ALL THE DDNAME/UCB SEGMENT TABLE GETMAINED +    52200
*                      DURING THIS STEP PROCESSING.                   +    52300
         SPACE 1                                                           52400
         USING SMF34,R10           ESTABLISH SMF34 ADDRESSABILITY     +    52500
SMF34A   SUBIN SAVE=R4             PRESERVE REGISTER                  + U8352600
         LA    R1,TIVUIF           GET ADDRESS OF JOBNAME             +    52700
         BAL   R4,FINDASA          GO FIND ASA BELONGING TO THE SAME  +    52800
*                                   JOB NAME.                         +    52900
         B     SMF34AE             ASA NOT FOUND, IF CTRL RETURND HERE+    53000
         LR    R5,R1               PRESERVE ASA ADDRESS               +    53100
         USING ASADSECT,R5         ESTABLISH ASA ADDRESSABILITY       +    53200
LOOPFST2 SR    R1,R1               ZEROISE                            +    53300
         ICM   R1,7,ASADDNTA       GET ADDRESS OF 2ND SEG.TAB.(IF ANY)+    53400
         BZ    SMF4AE              NONE, TERMINATE                    +    53500
         MVC   ASADDNTA,1(R1)      PRESERVE NEXT SEGMENT ADDR.(IF ANY)+    53600
         SR    R0,R0               ZEROISE                            +    53700
         L     R0,GETMAIN2         GET LENGTH TO BE FREED             +    53800
        FREEMAIN R,LV=(0),A=(1)    FREE THIS TABLE SEGMENT            +    53900
         B     LOOPFST2            GO FREE NEXT (IF ANY)              +    54000
SMF34AE  XC    ASADDTAB(ASADDTBL),ASADDTAB CLEAR STATIC 1ST SEG.TABLE +    54100
         SUBOUT ,                  RETURN TO CALLER                   +    54200
         DROP  R10                 DROP SMF34 ADDRESSABILITY          +    54300
         DROP  R5                  DROP ASA  ADDRESSABILITY           +    54400
         EJECT                                                             54500
***********************************************************************    54600
*        PROCESS SMF64 RECORDS                                        *    54700
***********************************************************************    54800
         SPACE 1                                                           54900
*        AUGUST 78 :- FIND ASA AND CALCULATE I/O TIME                 +    55000
         SPACE 1                                                           55100
         USING SMF64,R10           ESTABLISH SMF64 ADDRESSABILITY     +    55200
SMF64A   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS            +    55300
         LA    R1,SMF64JBN         GET ADDRESS OF JOB NAME            +    55400
         BAL   R4,FINDASA          GO FIND ASA BELONGING TO THE SAME  +    55500
*                                   JOB AS THIS SMF RECORD            +    55600
         B     SMF64AE             ASA NOT FOUND, IF CTRL RETURND HERE+    55700
         LH    R5,SMF64ESL         LOAD LENGTH OF EXTENT              +    55800
         LA    R6,SMF64FEX(R5)     POINT TO STATISTICS SECTION        +    55900
         L     R2,SMF64DEP-SMF64STS(,R6) R2= EXCP COUNT OF CURRENT UCB+    56000
*        L     R3,SMF64DBS-SMF64STS(,R6) LOAD BLOCK SIZE              +    56100
*       3330'S TRACK SIZE HAS BEEN TAKEN AS BLOCK SIZE TO BE          +    56200
*        COMPATIBLE WITH THE OLD ACCT.RTN. . AT NEXT DISK             +    56300
*        CONVERSION :- REMOVE TRACK SIZE AND USE REAL BLOCK SIZE.     +    56400
         L     R3,=F'13030'        LOAD PSEUDO BLOCK SIZE             +    56500
         ICM   R3,8,SMF64UTY+2     INSERT BYTE 3 OF DEVICE TYPE       +    56600
         BAL   R4,IOTIME           GO CALCULATE I/O TIME              +    56700
SMF64AE  SUBOUT ,                  RETURN TO CALLER                   +    56800
         DROP  R10                 DROP SMF64 ADDRESSABILITY          +    56900
         EJECT                                                          U8357000
*********************************************************************** U8357100
*        IDENTIFY TEMPORARY DATA SET NAMES                            * U8357200
*********************************************************************** U8357300
         SPACE 1                                                        U8357400
*        THIS ROUTINE EXAMINES A DATA SET NAME, AND SETS THE COND CODE  U8357500
*         TO INDICATE WHETHER THE DATA SET WAS TEMPORARY OR PERMANENT.  U8357600
         SPACE 1                                                        U8357700
*        UPON ENTRY :-                                                  U8357800
*         R1  - ADDRESS OF THE DSNAME ( IN THE CURRENT SMF RECORD )     U8357900
         SPACE 1                                                        U8358000
*        UPON RETURN :-                                                 U8358100
*         BE  - PERMANENT DATA SET                                      U8358200
*         BNE - TEMPORARY DATA SET                                      U8358300
         SPACE 1                                                        U8358400
TEMPDS   EQU   *                   ENTER ROUTINE                        U8358500
         CLC   0(3,R1),=C'SYS'     IS THE ROOT POTENTIALLY TEMPORARY    U8358600
         BNE   TEMPDSX             BR IF NOT TO SHOW D/S PERMANENT      U8358700
         CLC   8(2,R1),=C'.T'      IS THE DSN POTENTIALLY TEMPORARY     U8358800
         BNE   TEMPDSX             BR IF NOT TO SHOW D/S PERMANENT      U8358900
         CLC   16(3,R1),=C'.RA'    IS THE DSN POTENTIALLY TEMPORARY     U8359000
         BNE   TEMPDSX             BR IF NOT TO SHOW DD/S PERMANENT     U8359100
         SPACE 1                                                        U8359200
*        WE HAVE NOW CONFIRMED THAT THE DSNAME IS OF THE FORM :-        U8359300
*         SYSXXXXX.TXXXXXX.RAXXXXXX                                     U8359400
*         |||     ||      |||                                           U8359500
*        AND MAY CONFIDENTLY ASSUME THAT IS WAS A TEMPORARY DATA SET.   U8359600
         SPACE 1                                                        U8359700
         CLI   *,Y                 SET COND CODE TO SHOW TEMPORARY D/S  U8359800
         B     *+8                 BYPASS RESETTING COND CODE           U8359900
TEMPDSX  CLI   *,X                 SET COND CODE TO SHOW PERMANENT D/S  U8360000
         BR    R4                  RETURN TO CALLER                     U8360100
         TITLE 'IEFU83 - CALCULATE I/O TIME'                          +    60200
***********************************************************************    60300
*        FIND ASA (WITH JOB NAME AS INPUT TO LOCATE IT)               *    60400
***********************************************************************    60500
         SPACE 1                                                           60600
*       THE PURPOSE OF THIS ROUTINE IS TO FIND THE ASA CONTROL BLOCK  +    60700
*        OF CURRENT SMF RECORD, WITH AS INPUT THE JOB NAME TO LOCATE  +    60800
*        IT.                                                          +    60900
         SPACE 1                                                           61000
*        AT ENTRY, REGISTER 1 POINTS TO JOB NAME.                     +    61100
*        AT EXIT, REGISTER 1 POINTS TO ASA (IF ANY)                   +    61200
         SPACE 1                                                           61300
*        RETURN TO CALLER (ADDRESS IN REG.4) + 0 IF ASA NOT FOUND     +    61400
*                                            + 4 IF ASA FOUND         +    61500
         SPACE 1                                                           61600
FINDASA  SUBIN SAVE=(R5,R6,R7)     PRESERVE FEW REGISTERS             +    61700
         L     R5,FLCCVT           GET ASVT AND MVT ADDRESSES         +    61800
         L     R7,CVTASVT-CVTMAP(,R5) (ASVT)/    VIA THE              +    61900
         L     R5,CVTUSER-CVTMAP(,R5) (MVT) /      CVT.               +    62000
         LTR   R5,R5               IS THE MVT EXISTS ?                +    62100
         BZ    NOTFOUND            NO, GO TELL ASA NOT FOUND          +    62200
         LA    R5,MVT1ASA-MVTDSECT(,R5) POINTS TO FIRST ASA POINTER   +    62300
         L     R6,0(,R5)           GET ADDRESS OF FIRST ASA           +    62400
         USING ASADSECT,R6         ESTABLISH ASA ADDRESSABILITY       +    62500
         L     R7,ASVTMAXU-ASVT(,R7) R7=MAXIMUN NO OF ADDRESS SPACES, +    62600
*                                   ALSO MAX. NO OF ASA'S             +    62700
FASALOOP TM    ASAFLAGS,ASACTIVE   IS THIS ASA ACTIVE ?               +    62800
         BZ    PTNASA              NO, BYPASS NEXT COMPARE INSTRUCTION+    62900
         CLC   ASAJNAME,0(R1)      COMPARE JOB NAME OF THIS ASA WITH  +    63000
*                                   JOB NAME OF CURRENT SMF RECORD    +    63100
         BE    FOUND               STOP LOOK-UP IF MATCHING           +    63200
PTNASA   LA    R5,4(,R5)           POINT TO NEXT ASA POINTER          +    63300
         L     R6,0(,R5)            AND LOAD IT.                      +    63400
         BCT   R7,FASALOOP         REPEAT UNTIL LAST ASA (IF NO MATCH)+    63500
NOTFOUND SR    R1,R1               ZEROISE R1                         +    63600
         B     FASAEND              AND GO TO END OF THIS ROUTINE     +    63700
FOUND    LR    R1,R6               R1 = ADDRESS OF ASA CONCERNED      +    63800
         LA    R4,4(,R4)           ADD 4 TO RETURN ADDRESS            +    63900
FASAEND  SUBOUT ,                  RETURN TO CALLER                   +    64000
         DROP  R6                  DROP ASA ADDRESSABILITY            +    64100
         EJECT                                                        +    64200
***********************************************************************    64300
*        CALCULATE REAL EXCP COUNT OF CURRENT SMF14/15 RECORD         *    64400
***********************************************************************    64500
         SPACE 1                                                           64600
*       THE PURPOSE OF THIS ROUTINE IS TO CALCULATE THE THE REAL EXCP +    64700
*        COUNT OF CURRENT SMF14/15 RECORD.                            +    64800
         SPACE 1                                                           64900
*        AT ENTRY, REGISTER 1 POINTS TO ASA.                          +    65000
*                  REGISTER 2 CONTAINS EXCP COUNT.                    +    65100
         SPACE 1                                                           65200
*        AT EXIT , REGISTER 1 POINTS TO ASA.                          +    65300
*                  REGISTER 2 CONTAINS EXCP COUNT (THE REAL ONE).     +    65400
*                  REGISTER 3 CONTAINS BLKSIZE.                       +    65500
         SPACE 1                                                           65600
*        RETURN TO CALLER (ADDRESS IN REG.4).                         +    65700
         SPACE 1                                                           65800
         USING SMF14,R10           ESTABLISH SMF14 ADDRESSABILITY          65900
         USING ASADSECT,R1         ESTABLISH ASA ADDDRESSABILITY      +    66000
         SPACE 1                                                           66100
EXCPCUNT SUBIN SAVE=(R5,R6,R7)     PRESERVE FEW REGISTERS             +    66200
         LA    R7,ASADDENT         POINT TO FIRST TABLE ENTRY         +    66300
         LA    R8,ASADDTAB         FIRST SEGMENT TABLE (STATIC)       +    66400
         SR    R5,R5               ZEROISE                            +    66500
         ICM   R5,1,ASADDNEU       LOAD THE NUMBER OF TABLE ENTRIES UD+    66600
         BZ    TENFOUND            IF NONE, BYPASS TABLE LOOK-UP      +    66700
LOOKUP   LA    R3,ASADDTBL(,R8)    POINT R3 AT TABLE END              +    66800
         CR    R7,R3 COMPARE END-ADR. WITH CURRENT TABLE ENTRY POINTER+    66900
         BL    COMPARE             IF POINTER < GO COMPARE            +    67000
         L     R8,0(,R8)           POINT TO NEXT TABLE SEGMENT        +    67100
         LA    R8,0(,R8)           POINT TO NEXT TABLE SEGMENT        +    67200
         LA    R7,4(,R8)           POINT TO NEXT TABLE ENTRY          +    67300
COMPARE  EQU   *                   COMPARE CURRENT SMF WITH CURRENT   +    67400
         CLC   ASADDNAM(11,R7),SMFTIOE5 TABLE ENTRY                   +    67500
         BE    TEFOUND                  BRANCH IF MATCHING            +    67600
PRENEXT  LA    R7,L'ASADDENT(,R7)  POINT TO NEXT ENTRY               +     67700
         BCT   R5,LOOKUP             AND GO PR0CESS IT (IF ANY)       +    67800
         B     TENFOUND            BRANCH WHEN LAST TABLE ENTRY SCANED+    67900
TEFOUND  LR    R6,R2               PRESERVE R2                        +    68000
         LTR   R2,R2               IS EXCP COUNT = 0 ?                +    68100
         BZ    BYPASS              YES, BYPASS SUB                    +    68200
         ICM   R5,15,ASADDEXP(R7)  LOAD PRECEDING EXCP COUNT          +    68300
         CR    R2,R5               TEST IF CURRENT < PREVIOUS         +    68400
         BL    BYPASS              YES, BYPASS SUB                    +    68500
         SR    R2,R5               SUB PRV. FROM CUR. = REAL EXCP     +    68600
*                                   COUNT OF CURRENT SMF14/15         +    68700
BYPASS   STCM  R6,15,ASADDEXP(R7)  REPLACE EXCP COUNT                 +    68800
         B     EXCPCNTE            GO TO END                          +    68900
TENFOUND EQU   *                                                      +    69000
         LA    R3,ASADDTBL(,R8)    POINT R3 AT TABLE END              +    69100
         CR    R7,R3 COMPARE END-ADR. WITH CURRENT TABLE ENTRY POINTER+    69200
         BL    ADDTE               IF POINTER < GO ADD TABLE ENTRY    +    69300
         LR    R7,R1               PRESERVE R1                        +    69400
         L     R0,GETMAIN2         GET LENGTH OF ASA DDNAME/UCB TABLE +    69500
        GETMAIN R,LV=(0)           ACQUIRE CORE FOR A NEW TABLE SEG.  +    69600
         STCM  R1,7,1(R8)          SAVE ADDR. OF NEW INTO OLD SEGMENT +    69700
         LR    R8,R1               POINT R8 AT ACQUIRED MAIN STORAGE  +    69800
         LR    R1,R7               RESTORE R1                         +    69900
         XC    0(ASADDTBL,R8),0(R8) CLEAR ACQUIRED MAIN STORAGE       +    70000
         LA    R7,4(,R8)           POINT R7 TO NEXT TABLE ENTRY       +    70100
ADDTE    SR    R5,R5               ZEROISE                            +    70200
         IC    R5,ASADDNEU         LOAD THE NUMBER OF TABLE ENTRIES UD+    70300
         LA    R5,1(,R5)           ADD ONE                            +    70400
         STC   R5,ASADDNEU         STORE NEW NUMBER                   +    70500
         MVC   ASADDNAM(11,R7),SMFTIOE5 FILL THIS FREE TABLE ENTRY WTH+    70600
         STCM  R2,15,ASADDEXP(R7)  STORE EXCP COUNT                   +    70700
EXCPCNTE SR    R3,R3               ZEROISE                            +    70800
         ICM   R3,3,SMFJFCB1+JFCBSBNM-JFCB LOAD BLOCK SIZE            +    70900
         ICM   R3,8,SMFJFCB1+JFCBSBNM+2-JFCB INSERT BYTE3 OF DEVICE TY+    71000
EXCPEND  SUBOUT ,                  RETURN TO CALLER                   +    71100
         DROP  R1                  DROP ASA ADDRESSABILITY            +    71200
         DROP  R10                 DROP SMF14 ADDRESSABILITY          +    71300
         EJECT                                                        +    71400
***********************************************************************    71500
*        CALCULATE I/O TIME                                           *    71600
***********************************************************************    71700
         SPACE 1                                                           71800
*       THE PURPOSE OF THIS ROUTINE IS TO CALCULATE THE I/O TIME      +    71900
*        CHARGES FOR EACH SMF14,15 OR 64 RECORD. THE I/O TIME IS      +    72000
*        CALCULATED IN 1/100 SECS AND ADDED TO 'ASASTPIO' FIELD OF    +    72100
*        THE ASA CONTROL BLOCK CORRESPONDING TO THE JOB OF CURRENT    +    72200
*        SMF RECORD.                                                  +    72300
         SPACE 1                                                           72400
*        AT ENTRY, REGISTER 1 POINTS TO ASA.                          +    72500
*                  REGISTER 2 CONTAINS EXCP COUNT.                    +    72600
*                  REGISTER 3 CONTAINS BLOCK SIZE + THE TOP BYTE      +    72700
*                             CONTAINS BYTE-3 OF DEVICE TYPE.         +    72800
         SPACE 1                                                           72900
*        RETURN TO CALLER (ADDRESS IN REG.4).                         +    73000
         SPACE 1                                                           73100
         USING SMF14,R10           ESTABLISH SMF14/15 ADDRESSABILITY  +    73200
IOTIME   SUBIN SAVE=(R5,R6,R7)     PRESERVE FEW REGISTERS             +    73300
         LTR   R2,R2               IS EXCP COUNT ZERO ?               +    73400
         BZ    IOTIMEND            YES, RETURN TO CALLER              +    73500
         USING ASADSECT,R1         ESTABLISH ASA ADDDRESSABILITY      +    73600
         LR    R7,R3               GET WHAT SHOULD BE THE BLOCK SIZE  +    73700
         N     R7,=A(X'7FFF')       AND COVER US IN CASE IT IS NOT    +    73800
         N     R3,=A(X'80000000')  PRESERVE TOP BIT, RESET THE REST   +    73900
*        CLC   SMFTIOE5(4),=C'SORT' IS IT A SORT STEP ?               +    74000
*        BNE   NORMALIO             NO, DON'T USE DEFAULT             +    74100
         CLI   SMF14RTY,64          IS IT A SMF 64 ?                  +    74200
         BE    NORMALIO             YES,DON'T USE DEFAULT             +    74300
         TM    SMFDCBMF,X'80' DCBMRECP IS IT EXCP ?                   +    74400
         BZ    NORMALIO             NO, DON'T USE DEFAULT             +    74500
         L     R7,=A(125000+32*7294) PUT IN DEFAULT CHARGE            +    74600
         B     IOUPDATE             TAPE START/STOP TIME.             +    74700
NORMALIO CLM   R3,8,=X'80'         IS DEVICE TYPE = TAPE ?            +    74800
         BNE   DISK                NO, MUST BE DISK                   +    74900
TAPE     M     R6,=F'62'           CALCULATE TAPE TIME AS 6.2 MICRO-  +    75000
         A     R7,=F'60000'         SECONDS/BYTE + 6 MILLISECONDS FOR +    75100
         B     IOUPDATE             TAPE START/STOP TIME.             +    75200
*                                                                     +    75300
*        ATTENTION :-                                                 +    75400
*                                                                     +    75500
*           TRANSMISSION TIME VALUES STILL FOR 2314 DISK DRIVE.       +    75600
*                                                                     +    75700
DISK     M     R6,=F'32'           DISK TIME IS 3.2 MICROSECONDS/BYTE +    75800
         A     R7,=F'125000'        PLUS 125 MILLISECONDS FOR DELAY   +    75900
IOUPDATE LR    R3,R7               PRESERVE TRANS. TIME FOR A BLOCK.  +    76000
EXCPA    C     R2,MAXEXCP          IS EXCP COUNT > MAX. EXCP ?        +    76100
         BH    EXCPB               BRANCH IF YES                      +    76200
         MR    R6,R2               MULT TRANS. TIME BY EXCP COUNT     +    76300
         XR    R2,R2               ZEROISE R2                         +    76400
         B     EXCPC               SKIP NEXT TWO INSTRUCTIONS         +    76500
EXCPB    M     R6,MAXEXCP          MULT TRANS. TIME BY MAX. EXCP COUNT+    76600
         S     R2,MAXEXCP          SUB MAX. EXCP COUNT FROM TOTAL EXCP+    76700
EXCPC    EQU   *                                                      +    76800
*                                                                     +    76900
*        R6R7 = REAL I/O TIME IN MICROSECONDS, WITH ONE DECIMAL       +    77000
*               (ONLY FOR CURRENT SMF RECORD).                        +    77100
*                                                                     +    77200
         L     R5,FLCCVT           GET AWB ADDRESS                    +    77300
         L     R5,CVTUSER-CVTMAP(,R5) FROM MVT VIA                    +    77400
         L     R5,MVTMCA-MVTDSECT(,R5) THE CVT.                       +    77500
         USING CADSECT,R5          ESTABLISH AWB ADDRESSABILITY       +    77600
         AL    R7,AWBFACHA         CONVERT I/O TIME CHARGES -        ?+    77700
         BC    12,*+8              B. IF NO CARRY    /      -        ?+    77800
         LA    R6,1(,R6)           REFLECT CARRY OUT /      -        ?+    77900
         D     R6,AWBFACTR         - IN TOD                 -        ?+    78000
         M     R6,AWBTODC          -  CLOCK FORMAT          -        ?+    78100
         SRDL  R6,12               GET OUT OF TOD CLOCK FORMAT       ?+    78200
         AL    R7,=F'5000'         CONVERT FROM MICROSECONDS TO       +    78300
         BC    12,*+8              B. IF NO CARRY /   HUNDREDTHS      +    78400
         LA    R6,1(,R6)           REFLECT CARRY OUT /  OF            +    78500
         D     R6,=F'10000'                              SECONDS.     +    78600
         M     R6,AWBFACTR         FACTOR THE                         +    78700
         A     R7,AWBDPTHA          I/O TIME                          +    78800
         D     R6,AWBDECPT           CHARGES                          +    78900
         A     R7,ASASTPIO         ADD PRECEDING FACTORED I/O CHARGES +    79000
         ST    R7,ASASTPIO         SAVE RESULT                        +    79100
         LTR   R2,R2               STILL EXCP TO PROCESS ?            +    79200
         BZ    IOTIMEND            NO, GO TO END OF THIS SUB-RTN      +    79300
         LR    R7,R3               RESTORE TRANS. TIME FOR A BLOCK    +    79400
         B     EXCPA               GO PROCESS REMAINING               +    79500
         DROP  R5                  DROP AWB ADDRESSABILITY            +    79600
IOTIMEND SUBOUT ,                  RETURN TO CALLER                   +    79700
         DROP  R1                  DROP ASA ADDRESSABILITY            +    79800
         DROP  R10                 DROP SMF14/15 ADDRESSABILITY       +    79900
MAXEXCP  DC    F'10000'            MAXIMUN NUMBER OF EXCP'S TREATED   +    80000
*                                  BY THIS SUBROUTINE, TO AVOID 0C9   +    80100
*                                  WHEN I/O TIME IS IN MICROSECONDS.  +    80200
         TITLE 'IEFU83 - PATCH AREA'                                    U8380300
*********************************************************************** U8380400
*        PATCH AREA                                                   * U8380500
*********************************************************************** U8380600
         SPACE 1                                                        U8380700
         DC    S(*),S(*)                                                U8380800
         DC    S(*),S(*)                                                U8380900
         DC    S(*),S(*)                                                U8381000
         DC    S(*),S(*)                                                U8381100
         DC    S(*),S(*)                                                U8381200
         DC    S(*),S(*)                                                U8381300
         DC    S(*),S(*)                                                U8381400
         DC    S(*),S(*)                                                U8381500
         DC    S(*),S(*)                                                U8381600
         DC    S(*),S(*)                                                U8381700
         DC    S(*),S(*)                                                U8381800
         DC    S(*),S(*)                                                U8381900
         DC    S(*),S(*)                                                U8382000
         DC    S(*),S(*)                                                U8382100
         DC    S(*),S(*)                                                U8382200
         DC    S(*),S(*)                                                U8382300
         DC    S(*),S(*)                                                U8382400
         DC    S(*),S(*)                                                U8382500
         DC    S(*),S(*)                                                U8382600
         DC    S(*),S(*)                                                U8382700
         DC    S(*),S(*)                                                U8382800
         DC    S(*),S(*)                                                U8382900
         DC    S(*),S(*)                                                U8383000
         DC    S(*),S(*)                                                U8383100
         DC    S(*),S(*)                                                U8383200
         DC    S(*),S(*)                                                U8383300
         DC    S(*),S(*)                                                U8383400
         DC    S(*),S(*)                                                U8383500
         DC    S(*),S(*)                                                U8383600
         DC    S(*),S(*)                                                U8383700
         DC    S(*),S(*)                                                U8383800
         DC    S(*),S(*)                                                U8383900
         DC    S(*),S(*)                                                U8384000
         DC    S(*),S(*)                                                U8384100
         DC    S(*),S(*)                                                U8384200
         DC    S(*),S(*)                                                U8384300
         DC    S(*),S(*)                                                U8384400
         DC    S(*),S(*)                                                U8384500
         DC    S(*),S(*)                                                U8384600
         DC    S(*),S(*)                                                U8384700
         DC    S(*),S(*)                                                U8384800
         DC    S(*),S(*)                                                U8384900
         DC    S(*),S(*)                                                U8385000
         DC    S(*),S(*)                                                U8385100
         DC    S(*),S(*)                                                U8385200
         DC    S(*),S(*)                                                U8385300
         DC    S(*),S(*)                                                U8385400
         DC    S(*),S(*)                                                U8385500
         DC    S(*),S(*)                                                U8385600
         DC    S(*),S(*)                                                U8385700
         TITLE 'IEFU83 - MISCELLANEOUS CONSTANTS'                       U8385800
*********************************************************************** U8385900
*        MISCELLANEOUS CONSTANTS                                      * U8386000
*********************************************************************** U8386100
         SPACE 1                                                        U8386200
GETMAIN  DC    0F'0',AL1(SUBPL245),AL3(WORKLGTH) GETMAIN/FREEMAIN PARM  U8386300
GETMAIN2 DC    0F'0',AL1(SUBPL245),AL3(ASADDTBL) GETMAIN/FREMAIN PARM   U8386400
         SPACE 2                                                        U8386500
         LTORG                                                          U8386600
         TITLE 'IEFU83 - ROUTINE ADDRESS TABLE'                         U8386700
*********************************************************************** U8386800
*        SUBSCRIPTED TABLE OF ROUTINE ADDRESSES                       * U8386900
*********************************************************************** U8387000
         SPACE 1                                                        U8387100
RTNTABLE DC    256A(0)             BASIC TABLE                        + U8387200
        RTNDEF RTNTABLE,4,SMF4A    STEP TERMINATION                   + U8387300
        RTNDEF RTNTABLE,14,SMF14A  INPUT/RDBACK DATA SET ACTIVITY     + U8387400
        RTNDEF RTNTABLE,15,SMF15A  OUTPUT/UPDAT/INOUT/OUTIN DS ACTIVITY U8387500
        RTNDEF RTNTABLE,34,SMF34A  TS-STEP TERMINATION                +    87600
        RTNDEF RTNTABLE,64,SMF64A  VSAM DATA SET ACTIVITY             +    87700
         ORG   ,                   RESET PROGRAM COUNTER              + U8387800
         SPACE 5                                                           87900
RTNTABIS DC    256A(0)             BASIC TABLE                        + U8388000
*       SMF 40 AND SMF 14/15/17 FOR TEMPORARY D/S ARE DELETED         + U8388100
*        LATER ON, IN COST SYSTEM.                                    + U8388200
*       RTNDEF RTNTABIS,14,SMF14B  INPUT/RDBACK DATA SET ACTIVITY     + U8388300
*       RTNDEF RTNTABIS,15,SMF15B  OUTPUT/UPDAT/INOUT/OUTIN DS ACTIVITY U8388400
*       RTNDEF RTNTABIS,17,SMF17B  SCRATCH DATA SET STATUS            + U8388500
*       RTNDEF RTNTABIS,40,REJECT  DYNAMIC DD STATEMENT               + U8388600
*        ORG   ,                   RESET PROGRAM COUNTER              + U8388700
         END                                                            U8388800
-EMOD                                                                      88900
-END                                                                       89000
/*                                                                         89100
//COMPILE EXEC GENASMOD                                                    89200
//ASM.SYSIN DD DSN=&&OSJOB,DISP=(OLD,DELETE)                               89300
//LKED.SYSIN DD *                                                          89400
 NAME IEFU83(R)                                                            89500
/*                                                                         89600
