         TITLE 'VALIDITY CHECK ROUTINE FOR RENAME SVC'
***********************************************************************
*                 R E N A M E      P R O T E C T
*
*            THIS ROUTINE IS DESIGNED TO BE LINK-EDITED ONTO THE
*        FRONT OF THE SVC 30 (RENAME) PROCESSING ROUTINE. IT IS ENTERD
*        FROM THE SVC INTERRUPT HANDLER WITH REG1 POINTING TO THE
*        LIST OF PARAMETERS SUPPLIED BY THE USER. THE ROUTINE WILL,
*        BUILD A WORK AREA AND INITIALISE IT WITH
*        MUCH RELEVANT DATA ABOUT THE RENAME REQUEST. (SEE DEFINITION
*        OF DCBCHECK WORK AREA). CONTROL IS THEN PASSED DYNAMICALLY TO
*        A ROUTINE CALLED 'DCBCHECK' WHICH MUST BE IN LINKLIB.
*            ON RETURN FROM 'DCBCHECK', THE CODE IN REGISTER 15 IS
*        TESTED. IF IT IS ZERO, THE REQUEST IS ALLOWED TO CONTINUE.
*        IF NOT, THE PROGRAM ISSUING THE RENAME IS ABENDED WITH A CODE
*        OF 'SFFF'.
*
*        NOTES:
*
*        1)    INITIALLY, REGISTERS ARE SAVED IN THE SVRB UNTIL
*              PROPER SAVE AREA CHAINING IS ESTABLISHED.
*        2)    THE MODULE HAS A HIGH LEVEL 'DRIVER' WHICH ESTABLISHES
*              SAVE AREA LINKAGE ETC AND 'CALLS' THE MAIN ROUTINE. THIS
*              ROUTINE IN TURN INVOKES THE VALIDITY CHECK ROUTINE.
*        3)    THE VALIDITY CHECK ROUTINE IS INVOKED FOR BOTH OLD AND
*              NEW DATA SET NAMES IN THE RENAME LIST.
*
*
*
*
*
***********************************************************************
         EJECT
***********************************************************************
*        PROGRAM PRE-ENTRY INITIALISATION FOR RENAME
***********************************************************************
         SPACE 2
IGC00030 CSECT
         L     REG15,16            LOAD ADDRESS OF THE CVT
         L     REG15,0(REG15)      LOAD ADDRESS OF THE TCB WORDS
         L     REG15,4(REG15)      LOAD ADDRESS OF MY TCB
         L     REG15,0(REG15)      LOAD ADDRESS OF RENAME'S SVRB
         LA    REG15,96(REG15)     ADDRESS OF SVRB EXTENED S/A
         STM   REG12,REG2,0(REG15) SAVE THE IMPORTANT REGISTERS
         BALR  REG12,0             SET UP A BASE REGISTER
         USING *,REG12             AND USE IT
         LR    REG2,REG15          LOAD ADDRESS OF SAVE AREA
         L     REG15,SRENAME       LOAD ENTRY POINT OF RENAME
         ST    REG15,12(REG2)      AND STORE THAT IN SAVE AREA
         B     INIT                BYPASS NEXT 'DC  V(.)'
         SPACE 2
SRENAME DC     V(RENAME)           NORMAL ENTRY POINT OF RENAME
         EJECT
***********************************************************************
*        ENTRY FOR RENAME AFTER REGS SAVED AND THE
*        CONTINUATION ADDRESS INTO RENAME IS DETERMINED.
***********************************************************************
         SPACE 2
INIT     DS    0H
         GETMAIN R,LV=72,SP=245    GETMAIN A TOP LEVEL SAVE AREA
         LR    REG13,REG1          LOAD UP THE NORMAL SAVE AREA REG
         LM    REG0,REG1,16(REG2)  RELOAD PARAMETER REGISTERS
         CALL  PROTECT3            AND ENTER THE REAL ROUTINE
         EJECT
***********************************************************************
*        TEST RETURN CODE AND FROM PROTECT3 AND GO TO APPROPRIATE
*         ROUTINE.
***********************************************************************
         SPACE 2
         LTR   REG15,REG15         IS RETURN CODE = ZERO ?
         BZ    CARRYON             YES, CARRY ON WITH RENAME
*                                  NO, DO NOT CARRY ON WITH RENAME
*                                   AND RETURN DIRECTLY TO USER
         FREEMAIN R,A=(13),LV=72,SP=245 FREE GOTTED SAVE AREA
         LM    REG12,REG2,0(REG2)  RELOAD SAVED REGISTERS
         LA    REG15,16            AND LEAVE
         BR    REG14                   RENAME ROUTINE
         EJECT
***********************************************************************
*        FREE THE GOTTEN SAVE AREA AND CARRY ON WITH RENAME
***********************************************************************
         SPACE 2
CARRYON  DS    0H
         FREEMAIN R,A=(13),LV=72,SP=245
         LM    REG12,REG2,0(REG2)  RELOAD SAVED REGISTERS
         BR    REG15               AND ENTER RENAME AT NORMAL ENTRY P.
         EJECT
***********************************************************************
*
*        PROTECT3 :
*
*        THIS IS THE MAINLINE ROUTINE FOR RENAME DSN VALIDITY CHECKING
*        IT IS ENTERED FROM THE PRECEEDING ROUTINE WITH NORMAL
*        LINKAGE REGISTERS INITIALISED AND REGISTER ONE POINTING
*        TO THE ORIGINAL LIST OF PARAMETER ADDRESSES TO BE PROCESSED.
*            THE ROUTINE WILL SCAN THE OLD AND NEW DSN'S TO BE CHECKED
*        AND, IF THE CALLER IS NOT AN AUTHORISED SYSTEM COMPONENT OR
*        PROGRAM, WILL PERFORM THE FOLLOWINFG PROCESSING:
*
*        1)    INITIALISE A PARAMETER AREA WITH ALL THE DETAILS OF
*              THIS RENAME REQUESTAND INVOKE DYNAMICALLY THE CHECK
*              ROUTINE - 'DCBCHECK'.
*
*
*
***********************************************************************
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING
***********************************************************************
         SPACE 2
PROTECT3 ZCSECT GETMAIN=1          ENTER UNDER NORMAL LINKAGE
         LR    REG2,REG1           SAVE ADDRESS OF THE PARAMETER LIST
         EJECT
***********************************************************************
*        GETMAIN SOME CORE FOR THE DCBCHECK PARAMETER AREA
***********************************************************************
         SPACE 2
         GETMAIN R,LV=DCWALEN,SP=245
         LR    REG3,REG1           SAVE ADDRESS OF IT
         USING DCWKAREA,REG3       AND ESTABLISH ADDRESSABILITY
         EJECT
***********************************************************************
*        TEST FIRST TO SEE IF THIS IS AN AUTHORISED CALLER
***********************************************************************
         SPACE 2
         TESTAUTH STATE=YES,KEY=YES
         LTR   REG15,REG15         IS ISSUER OF RENAME AUTHORISED ?
         BZ    AUTHEXIT            YES. BYPASS THE RENAME CHECK
         EJECT
***********************************************************************
*        INITIALISE ADDRESSES OF TCB, TIOT, AND JES JCT
***********************************************************************
         SPACE 2
         L     REG1,16             LOAD ADDRESS OF CVT
         L     REG1,0(REG1)        LOAD ADDRESS OF TCB WORDS
         L     REG6,4(REG1)        LOAD ADDRESS OF TCB
         USING TCB,REG6            ADDRESSABILITY FOR IT
         L     REG7,TCBTIO         LOAD ADDRTESS OF TCB
         L     REG8,TCBJSCB        LOAD ADDRESS OF THE JSCB
         USING IEZJSCB,REG8        ADDRESSABILITY FOR IT
         L     REG9,JSCBSSIB       ADDRESS OF THE SSIB
         USING SSIB,REG9           ADDRESSABILITY FOR IT
         L     REG9,SSIBSUSE       LOAD ADDRESS OF SUBSYSTEM JOB BLOCK
         LTR   REG9,REG9           DOES AN SJB EXIST ?
         BZ    SSIBEXIT            NO. MUST BE TSO ETC.
         DROP  REG9                RELEASE SSIB
         USING SJBDSECT,REG9       ADDRESS THE SJB
         L     REG9,SJBJCT         GET ADDRESS OF THE JCT
         DROP  REG9                RELEASE SJB
         USING JCTDSECT,REG9       ADDRESS THE JCT FOR THIS JOB
         EJECT
***********************************************************************
*        PROCESS THE OLD AND NEW DATA SET NAMES IN THE RENAME LIST
***********************************************************************
         SPACE 2
SCRDSN   DS    0H
         L     REG14,4(REG2)       LOAD ADDRESS OF DATA SET NAME (OLD)
         L     REG15,12(REG2)      LOAD ADDRESS OF VOLUME LIST
         BAL   REG11,BLDPARMS      GO INITIALISE HIS PARAMETER AREA
         BAL   REG11,GOCHECK       GO VERIFY THE VALIDITY
         LTR   REG15,REG15         TEST RETURN CODE FROM VALIDITY ROUTI
         BNZ   ABENDIM             ENTRY IS NOT VALID
         L     REG14,8(REG2)       LOAD ADDRESS OF DATA SET NAME (NEW)
         L     REG15,12(REG2)      LOAD ADDRESS OF VOLUME LIST
         BAL   REG11,BLDPARMS      GO INITIALISE HIS PARAMETER AREA
         BAL   REG11,GOCHECK       GO VERIFY THE VALIDITY
         LTR   REG15,REG15         TEST RETURN CODE FROM VALIDITY ROUTI
         BNZ   ABENDIM             ENTRY IS NOT VALID
         B     ALLDONE
         EJECT
***********************************************************************
*        INITIALISE THE PARAMETER AREA FOR DCB CHECK ROUTINE
***********************************************************************
         SPACE 2
BLDPARMS DS    0H
         MVC   JOBNAME,0(REG7)     GET JOBNAME FROM TIOT
         MVC   STEPNAME,8(REG7)    AND THE STEP NAME
         MVC   PROCNAME,16(REG7)   AND THE PROCSTEP NAME
         MVC   DDNAME,RENAME       MOVE '##RENAME' AS DDNAME
         MVC   DSNAME,0(REG14)     GET DSNAME FROM THE PLIST
         MVC   DEVICECD,2(REG15)   MOVE IN THE DEVICE CODE
         MVC   VOLUME,6(REG15)     MOVE IN THE VOLSER
         MVC   JOBID,JCTJOBID      MOVE IN THE JOB ID (JES2)
         MVC   SOURCE,JCTROUTE+1   MOVE INPUT ROUTE CODE
         MVC   DRAIN,JCTPROUT+1    MOVE OUTPOUT PRINT ROUTE CODE
         XC    UNIT,UNIT           ZEROISE UNIT, DCBADDR, JFCBADDR AND
         XC    DCBADDR,DCBADDR      TIOTADDR FIELDS - NOT USED
         XC    JFCBADDR,JFCBADDR    FOR 'RENAME'
         XC    TIOTADDR,TIOTADDR    REQUEST.
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        INVOKE THE RENAME VALIDITY CHECK ROUTINE
***********************************************************************
         SPACE 2
GOCHECK  DS    0H
         LR    REG1,REG3           LOAD PARAMETER REGISTER
         CALL  DCBCHECK            AND INVOKE THE USER ROUTINE
         BR    REG11               AND RETURN TO CALLER
         EJECT
***********************************************************************
*        THIS RENAME REQUEST IS INVALID. BOMB OFF THE USER
***********************************************************************
         SPACE 2
ABENDIM  DS    0H
         GETMAIN R,LV=WTOLEN,SP=245 GET CORE FOR WTO WITH VARIABLE TXT
         LR    REG8,REG1           SAVE ITS ADDRESS FOR FREEMAIN
         MVC   0(WTOLEN,REG1),WTO  MOVE IN THE RAW WTO TEXT
         MVC   WTOJOBN(L'JOBNAME,REG1),JOBNAME SET UP JOBNAME ...
         MVC   WTOSTPN(L'STEPNAME,REG1),STEPNAME AND STEP NAME.....
         MVC   WTOPRCN(L'PROCNAME,REG1),PROCNAME AND PROC NAME.....
         MVC   WTODDNM(L'DDNAME,REG1),DDNAME   AND DD NAME.......
         MVC   WTODSN(L'DSNAME,REG1),DSNAME   AND DATA SET NAME.
VIOL     WTO   '========> FILE ACCESS SECURITY VIOLATION <========'
         WTO   MF=(E,(8))          AND EXECUTE THE WTO
         CLC   JOBID(3),=C'TSU'    IS IT A TIME SHARING USER?
         BNE   FREEMAIN            NO, BYPASS TPUT'S
         LH    REG0,VIOL+4         LOAD MESSAGE
         SH    REG0,=H'4'                   LENGTH,
         LA    REG1,VIOL+8         POINT R1 TO START OF MESSAGE
         TPUT  (1),(0)              AND TELL WHAT TO THE USER
         LH    REG0,0(,REG8)       LOAD MESSAGE
         SH    REG0,=H'4'                   LENGTH,
         LA    REG1,4(,REG8)       POINT R1 TO START OF MESSAGE
         TPUT  (1),(0)              AND TELL WHAT TO THE USER
FREEMAIN FREEMAIN R,LV=WTOLEN,A=(8),SP=245 FREE UP THE CORE AGAIN
         CLC   JOBID(3),=C'TSU'    IS IT A TIME SHARING USER ?
         BE    RETUSER             YES, BYPASS ABEND
         ABEND 4095,DUMP,STEP,SYSTEM  COME DOWN AS PER TON 'O BRICKS
         SPACE 2
WTO      WTO   'JOBNAMES,STEPNAME,PROCNAME,DDNAMEDD,DATASETNAME23456789X
               0123456789012345678901234',MF=L
         DS    0D                  GET DBLWORD ALIGNMENT
WTOLEN   EQU   *-WTO               LENGTH OF WTO TEXT
WTOJOBN  EQU   4                   OFFSET INTO WTO TEXT
WTOSTPN  EQU   4+9                 OFFSET INTO WTO TEXT
WTOPRCN  EQU   4+9+9               OFFSET INTO WTO TEXT
WTODDNM  EQU   4+9+9+9             OFFSET INTO WTO TEXT
WTODSN   EQU   4+9+9+9+9           OFFSET INTO WTO TEXT
         EJECT
***********************************************************************
*        RETURN TO CALLER OF THIS ROUTINE
***********************************************************************
         SPACE 2
RETUSER  DS    0H
         LA    REG11,4             TELL TO RETURN DIRECTLY TO THE USER-
         B     FREEDCWA              (NOT VIA RENAME ROUTINE).
AUTHEXIT DS    0H                  CALLER IS IN SYSTEM STATE
SSIBEXIT DS    0H                  CALLER HAS NO JES SJB.
ALLDONE  DS    0H                  VALIDATION IS COMPLETED
         LA    REG11,0             SET RETURN CODE TO 0
FREEDCWA DS    0H
         FREEMAIN R,LV=DCWALEN,A=(3),SP=245 FREE THE DCB CHK WORK AREA
         LR    REG15,REG11         MOVE RETURN CODE TO REG15
         ZRETURN RC=(15)
         EJECT
***********************************************************************
*        CONSTANTS AND WORK AREAS
***********************************************************************
         SPACE 2
RENAME   DC    C'##RENAME'
         LTORG
JCT      EQU   9                   $JCT MACRO ISSUES A USING FOR THIS
         EJECT
***********************************************************************
*        DSECTS
***********************************************************************
         SPACE 2
         DCWKAREA
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=QS,DEVD=DA
         SPACE 2
         IKJTCB
         SPACE 2
         IEZJSCB
         SPACE 2
         IEFJSSIB
         SPACE 2
         CSECT
         $BUFFER
         SPACE 2
         $SJB
         SPACE 2
         $JCT
         EJECT
         PRINT GEN
         END
