         TITLE 'HASP O/S REMOTE TERMINAL PROGRAM INPUT PROCESSOR'
         SPACE
* WRITTEN BY D. R. HURTGEN
*
* MONSANTO COMPANY - CREVE COEUR
*
* DECEMBER, 1970
*
* THIS PROGRAM IS DESIGNED TO READ CARDS, COMPRESS THEIR CONTENTS INTO
* A FORM ACCEPTABLE TO HASP, AND WRITE THE COMPRESSED DATA ONTO DISK.
* DATA IS COMPRESSED AS OUTLINED IN THE HASP MANUAL. IN THIS PROGRAM,
* THE NUMBER OF CONSECUTIVE LIKE CHARACTERS WHICH WILL TRIGGER
* COMPRESSION IS SET AT FOUR.
*
* THE DISK RECORDS WRITTEN ARE FIXED LENGTH AND CONTAIN A VARIABLE DATA
* STRING READY FOR TRANSMISSION. EACH RECORD CONTAINS A HALF-WORD
* INTEGER AT THE BEGINNING WHICH IS THE LENGTH OF THE DATA FOLLOWING
* AND CAN BE USED IN THE TRANSMISSION PROGRAM'S WRITE CCW. DATA RECORDS
* ARE FORMATTED WITH ALL BSC AND HASP CONTROL CHARACTERS INSERTED
* EXCEPT THE BSC END CHARACTERS.
* MODIFIED BY D.CARTWRIGHT M.I.S.D. BRUSSELS TO USE QSAM INPUT
*        AUGUST 1978
         SPACE 2
* ASSEMBLY TIME VARIABLES USED BY THIS PROGRAM ARE DEFINED BELOW -
         SPACE 1
         GBLA  &BUFSIZE
         GBLC  &XPARENT
         SPACE 1
&BUFSIZE SETA  400
&XPARENT SETC  'YES'
         SPACE 1
* 1. &BUFSIZE IS SET TO EQUAL THE HASPGEN VARIABLE &MLBFSIZ AND MUST
*      NOT BE ALTERED EXCEPT WHEN INSTRUCTED TO DO SO.
* 2. &XPARENT SHOULD BE SET TO 'YES' IF YOUR COMMUNICATIONS ADAPTER HAS
*      THE TRANSPARENCY FEATURE. OTHERWISE, IT SHOULD BE SET TO 'NO'.
         PRINT OFF
         TITLE 'HASP O/S REMOTE TERMINAL PROGRAM INPUT PROCESSOR - INITC
               IALIZATION SECTION'
         PRINT ON
         EJECT
OSRTPIN  START
         USING *,BASEA             ESTABLISH ADDRESSABILITY - PROGRAM
         STM   14,12,12(SAVEPTR)   BE A GOOD GUY
         LR    BASEA,15            SET UP BASE REGISTERS
         LA    15,SAVEAREA         GET ADDRESS OF NEW SAVE AREA
         ST    15,8(,SAVEPTR)      SET UP BACKWARD AND
         ST    SAVEPTR,SAVEAREA+4    FORWARD CHAIN
         LR    SAVEPTR,15
TRYENQ   LA    1,ENQLIST           GET PARAMETER LIST ADDRESS
         SVC   ENQ                 ENQUEUE ON FIRST DATA SET
         CLI   ENQLIST+3,4         Q.-DID WE GET IT
         BL    GOTDS               B.-YES, GO ON
         BE    ENQOTHER            B.-NO, TRY OTHER DATA SET
BADENQ   L     1,BADENQCD          SYSTEM ERROR - RETURN CODE 8
         SVC   ABEND                 SHOULD NEVER HAPPEN
ENQOTHER MVI   RNAME+L'RNAME-1,C'B' CHANGE RNAME
         LA    1,ENQLIST           GET PARAMETER LIST ADDRESS
         SVC   ENQ                 ENQUEUE ON SECOND DATA SET
         CLI   ENQLIST+3,4         Q.-DID WE GET THIS ONE
         BL    GOTDS               B.-YES, GO ON
         BH    BADENQ              B.-NO, RETURN CODE 8 - SYSTEM ERROR
         LA    0,1                 INDICATE WAIT OPTION AND TIMER UNITS
         SLL   0,24                PUT IN HI-ORDER BYTE
         LA    1,=A(5*300*128)     ADDRESS OF 5 SECOND INTERVAL
         SVC   STIMER              INITIATE PAUSE (PAWS)
         MVI   RNAME+L'RNAME-1,C'A' RESET RNAME
         B     TRYENQ              TRY AGAIN
GOTDS    LA    WA,DISKDCB          GET DISK DCB ADDRESS
         MVN   DCBDDNAM+5(1,WA),RNAME+L'RNAME-1 SET APPROPRIATE DDNAME
         LA    1,DISKOPEN          GET PARAMETER LIST ADDRESS AND
         SVC   RDJFCB                READ DISK JFCB
         MVI   JFCBIND2,X'80'      CHANGE DISP=SHR TO DISP=MOD
         LA    1,DISKOPEN          (CAN'T BE SURE ITS STILL THERE)
         SVC   OPENJ               OPEN DISK DATA SET
         TM    DCBOFLGS(WA),X'10'  Q.-WAS IT SUCCESSFUL
         BO    OPENRDR             B.-YES
         MVC   MSGADDNM,DCBDDNAM(WA) PUT DDNAME IN MESSAGE
         LA    1,MESSAGEA          LET OPERATOR
         SVC   WTO                   KNOW IT FAILED
         B     FASTEXIT            QUIT WHILE YOUR AHEAD
OPENRDR  LA    1,CARDOPEN          GET PARAMETER LIST ADDRESS AND
         SVC   OPEN                  OPEN CARD READER
         LA    WA,CARDDCB          GET DCB ADDRESS
         TM    DCBOFLGS(WA),X'10'  Q.-WAS OPEN SUCCESSFUL
         BO    ALLOK               B.-YES
         MVC   MSGADDNM,DCBDDNAM(WA) INSERT DDNAME IN MESSAGE
         LA    1,MESSAGEA          LETEMKNOW
         SVC   WTO
         B     CLOSEDSK            YOICKS
ALLOK    DS    0H                  START PROCESSING
         LA    AONE,1              SET CONSTANT OF ONE FOR COMPUTATIONS
         PRINT OFF
         TITLE 'HASP O/S REMOTE TERMINAL PROGRAM INPUT PROCESSOR - MAINC
                SECTION'
         PRINT ON
         EJECT
READCARD DS    0H                  GET ANOTHER INPUT CARD
         GET   CARDDCB,INAREAA     START I/O FOR NEXT CARD
         LA    WA,INAREAA          SET RECORD POINTER
         AIF   ('&XPARENT' EQ 'YES').XPARNT
         TR    0(80,WA),TRANSTBL   CHANGE C. A. CONTROL CHARACTERS
.XPARNT  ANOP
         CLC   0(2,WA),=C'/*'      BEGIN JCL SCAN TO MARK THE BEGINNING
         BNE   CKFORJCL              OF JOBS FOR RESTART CAPABILITY
         CLI   2(WA),C' '          Q.-DELIMITER CARD
         BNE   HASPCARD            B.-NO, ASSUME ITS A HASP CONTROL CRD
         NI    STATIND,255-NOSCAN  TURN OFF NO-SCAN SWITCH
         B     COMPRESS            GO COMPRESS THE CARD
HASPCARD CLC   2(13,WA),=CL13'PRIORITY' Q.-/*PRIORITY CARD
         BNE   COMPRESS            B.-NO, NOT INTERESTED IN ANY OTHERS
         OI    STATIND,PRTYCARD    TURN ON INDICATOR TO NOT LOOK FOR
         OI    SRCB,JOBSTART         JOB CARD - INDICATE JOB START
         B     COMPRESS
CKFORJCL TM    STATIND,NOSCAN      Q.-NO-SCAN SWITCH SET
         BO    COMPRESS            B.-YES
         TM    STATIND,PRTYCARD    Q.-PREVIOUS CARD WAS /*PRIORITY CARD
         BO    RESETPTY            B.-YES, THEN DONT SCAN THIS ONE
         CLC   0(2,WA),=C'//'      Q.-JCL CARD
         BNE   COMPRESS            B.-NO
         CLI   2(WA),C'*'          Q.-JCL COMMENT CARD
         BE    COMPRESS            B.-YES
         LR    WC,AONE             BEGIN SCAN FOR DD DATA AND JOB CARDS
         LA    WD,66(,WA)          SET SCAN LIMIT
         LR    WB,WA               SAVE INPUT POINTER
CKBLANK  CLI   2(WB),C' '          SEARCH FOR END OF NAME FIELD
         BE    GOTABLNK            B.-GOT IT
         BXLE  WB,WC,CKBLANK       ADVANCE TO NEXT COLUMN
         BCTR  WB,0                OOPS - WENT TOO FAR
GOTABLNK CLI   3(WB),C' '          SEARCH FOR START OF OPERATION FIELD
         BNE   CKFORDD             B.-GOT IT
         BXLE  WB,WC,GOTABLNK      GO TO NEXT COLUMN
CKFORDD  CLC   3(3,WB),=C'DD '     Q.-DD CARD
         BNE   CKFORJOB            B.-NO
DDSEARCH BXH   WB,WC,COMPRESS      ADVANCE TO NEXT COLUMN
         CLI   4(WB),C' '          SEARCH FOR OPERAND
         BE    DDSEARCH            B.-NOT YET
         CLC   4(4,WB),=C'DATA'    Q.-DD DATA CARD
         BNE   COMPRESS            B.-NO
         OI    STATIND,NOSCAN      SET NO-SCAN SWITCH
         B     COMPRESS            GO ON
CKFORJOB CLC   3(4,WB),=C'JOB '    Q.-JOB CARD
         BNE   COMPRESS            B.-NO
         OI    SRCB,JOBSTART       INDICATE START OF JOB
RESETPTY NI    STATIND,255-PRTYCARD TURN OFF /*PRIORITY CARD INDICATOR
         SPACE 1
*                        BEGIN CHARACTER COMPRESSION
         SPACE 1
COMPRESS LA    WB,COMPWORK         WB = CURRENT LOC. IN OUTPUT STRING
         LA    WE,80(,WA)          WE = END OF RECORD
         MVI   80(WA),0            SET SCAN STOPPER
         CLI   79(WA),0            Q.-STOPPER SAME AS LAST CHARACTER
         BNE   *+8                 B.-NO
         MVI   80(WA),255          MAKEM DIFFERENT
         MVC   81(DUPCT-1,WA),80(WA) PROPAGATE ALL OVER THE PLACE
CKFORSTR LR    WD,WA               WD = START OF CURRENT STRING
         SR    WC,WC               RESET STRING LENGTH COUNTER
COMPAREM CLC   0(DUPCT-1,WA),1(WA) Q.-START OF IDENTICAL CHAR. STRING
         BE    CKNONEQ             B.-YES
         AR    WA,AONE             BUMP INPUT POINTER AND
         AR    WC,AONE               STRING COUNT
         B     COMPAREM            TRY AGAIN
CKNONEQ  LTR   WC,WC               Q.-DID WE HAVE A NON-DUPLICATE
         BZ    SQUEEZEM              CHARACTER STRING GOING - B.-NO
CKMAX    C     WC,=F'63'           Q.-STRING LONGER THAN MAXIMUM
         BH    BIGMOVE             B.-YES
         EX    WC,MVC              PUT STRING IN WORK AREA
         STC   WC,0(,WB)           PUT LENGTH IN SCB
         OI    0(WB),X'C0'         INDICATE NON-DUPLICATE STRING
         LA    WB,1(WB,WC)         BUMP WORK AREA POINTER
SQUEEZEM CR    WA,WE               Q.-END OF RECORD
         BNL   EOCARD              B.-YES
         LA    WC,DUPCT            INITIALIZE COUNT OF DUPLICATES
CKFURTHR CLC   3(1,WA),4(WA)       Q.-DOES MATCH CONTINUE
         BNE   COMPSTOP            B.-NO
         AR    WA,AONE             BUMP INPUT POINTER
         AR    WC,AONE             BUMP COUNT
         B     CKFURTHR
COMPSTOP C     WC,=F'31'           Q.-STRING LONGER THAN MAXIMUM
         BH    BIGPROP             B.-YES
         STC   WC,0(,WB)           INSERT COUNT
         OI    0(WB),X'80'         SET SCB BIT
         CLI   0(WA),C' '          Q.-ARE WE SQUEEZING BLANKS
         BE    ISBLANKS            B.-YES
         MVC   1(1,WB),0(WA)       INSERT SAMPLE CHARACTER
         OI    0(WB),X'20'         INDICATE NON-BLANK DUPLICATE STRING
         AR    WB,AONE             BUMP FOR SAMPLE CHARACTER
ISBLANKS AR    WB,AONE             BUMP FOR SCB
         LA    WA,DUPCT(,WA)       BUMP INPUT FOR INITIAL STRING FOUND
         B     CKFORSTR            GO LOOK FOR MORE STRINGS
BIGPROP  MVI   0(WB),X'9F'         SET MAXIMUM DUPLICATE STRING
         CLI   0(WA),C' '          Q.-IS IT A BLANK STRING
         BE    BIGBLANK            B.-YES
         MVC   1(1,WB),0(WA)       INSERT SAMPLE
         OI    0(WB),X'20'         INDICATE NON-BLANK STRING
         AR    WB,AONE             BUMP FOR SAMPLE
BIGBLANK AR    WB,AONE             BUMP FOR SCB
         S     WC,=F'31'           ADJUST COUNT
         B     COMPSTOP            TRY AGAIN
BIGMOVE  MVC   1(63,WB),0(WD)      MOVE MAXIMUM NON-DUPLICATE STRING
         LA    WD,63(,WD)          BUMP INPUT POINTER
         MVI   0(WB),63            SET OUTPUT LENGTH
         OI    0(WB),X'C0'         SET SCB FOR STRING
         LA    WB,64(,WB)          SKIP SCB AND STRING
         S     WC,=F'63'           REDUCE CHARACTER COUNT
         B     CKMAX               TRY AGAIN
MVC      MVC   1(0,WB),0(WD)
EOCARD   MVI   0(WB),0             SET END OF RECORD SCB
         LA    WC,RCB              GET START OF WORK AREA
         SR    WB,WC               WB = LENGTH OF RECORD MINUS ONE
         L     WA,DALTAREA         WA = CURRENT OUTPUT BUFFER
         LH    WC,0(,WA)           WC = LENGTH OF WHATS IN THE BUFFER
         LA    WD,1(WC,WB)         WD = LENGTH IF WE PUT THIS ONE IN
         C     WD,=A(&BUFSIZE-1)   Q.-WILL IT FIT
         BNH   MOVEITIN            B.-YES
WRITLAST LA    WC,1(WA,WC)         WC = END OF STRING
         MVI   0(WC),0             SET END OF BLOCK RCB
SWA      B     AROUND              SW.-FIRST TIME BYPASS CHECK
         CHECK DISKDECB            CHECK PREVIOUS WRITE
AROUND   MVI   SWA+1,0             CHANGE TO NO-OP
         L     WA,DISKDECB+12      EXCHANGE I/O AREAS
         MVC   DISKDECB+12(4),DALTAREA
         ST    WA,DALTAREA
         WRITE DISKDECB,SF,MF=E    START I/O FOR THIS BLOCK
SWB      NOPR  WB
         LA    WC,6                WC = INITIAL LENGTH
         LA    WD,7(,WB)           WD = INITIAL LENGTH WITH THIS RECORD
MOVEITIN STH   WD,0(,WA)           SET LENGTH FIELD
         LA    WC,1(WC,WA)         WC = END OF DATA IN THE BUFFER
         EX    WB,AMVC             NOW PLACE THIS STRING AT THE END
         NI    SRCB,255-JOBSTART   TURN OFF JOB START INDICATOR
         B     READCARD            ALL DONE - GO GET NEXT CARD
AMVC     MVC   0(0,WC),RCB
         SPACE 2
*                             END OF INPUT
ENDOFILE L     WA,DALTAREA         WA = CURRENT OUTPUT BUFFER
         LH    WC,0(,WA)           WC = LENGTH OF WHATS IN IT
         OI    SWB+1,X'F0'         SET SWITCH TO RETURN HERE
         BAL   WB,WRITLAST         TRUNCATE THIS BUFFER AND WRITE IT
         LA    1,CARDOPEN
         SVC   CLOSE               CLOSE CARD READER
         CHECK DISKDECB            CHECK LAST WRITE
CLOSEDSK LA    1,DISKOPEN
         SVC   CLOSE               CLOSE DISK FILE
FASTEXIT LA    1,DEQLIST           GET PARAMETER LIST ADDRESS
         SVC   DEQ                 DEQUEUE THE DATA SET
         L     SAVEPTR,SAVEAREA+4
         LM    14,12,12(SAVEPTR)   BE A GOOD GUY AND PUTEM BACK
         SR    15,15               NOTHING EVENTFUL HAPPENED HERE
         BR    14                  RETURN TO THE WOMB
         PRINT OFF
         TITLE 'HASP O/S REMOTE TERMINAL PROGRAM INPUT PROCESSOR - EQUAC
               TES, WORKING STORAGE, AND I/O AREAS'
         PRINT ON,NOGEN
         EJECT
*                        EQUATES USED IN THIS PROGRAM
         SPACE 1
*                                  REGISTERS
         SPACE 1
WA       EQU   2                   WORK REGISTER
WB       EQU   3                   WORK REGISTER
WC       EQU   4                   WORK REGISTER
WD       EQU   5                   WORK REGISTER
WE       EQU   6                   WORK REGISTER
AONE     EQU   10                  CONTAINS A CONSTANT OF ONE
BASEA    EQU   11                  BASE REGISTER ONE
SAVEPTR  EQU   13                  SAVE AREA POINTER
         SPACE 1
*                             SUPERVISOR CALLS
         SPACE 1
ENQ      EQU   56
DEQ      EQU   48
ABEND    EQU   13
OPEN     EQU   19
OPENJ    EQU   22
STIMER   EQU   47
CLOSE    EQU   20
RDJFCB   EQU   64
WTO      EQU   35
         SPACE 1
*                             ALL OTHERS
         SPACE 1
JOBSTART EQU   X'01'               FLAG BIT - IN SRCB - 1ST CARD OF JOB
PRTYCARD EQU   X'01'                        - CARD IS A /*PRIORITY CARD
NOSCAN   EQU   X'02'                        - A DD DATA CARD WAS FOUND
DUPCT    EQU   4                   NUMBER OF CHARACTERS TO START COMPR.
SOH      EQU   X'01'               LINE CONTROL CHARACTERS
DLE      EQU   X'10'                         DO.
STX      EQU   X'02'                         DO.
DCBOFLGS EQU   48
DCBDDNAM EQU   40
BCB      EQU   0
FCS      EQU   0
         EJECT
*                             WORKING STORAGE
         SPACE 1
*                             DATA CONTROL BLOCKS
DISKDCB  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(W),RECFM=F,               C
               BLKSIZE=(&BUFSIZE+1),EXLST=EXITLIST
CARDDCB  DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,LRECL=80,                C
               EODAD=ENDOFILE
         SPACE 1
*                   SUPERVISOR CALL PARAMETER LISTS
         PRINT GEN
ENQLIST  ENQ   (QNAME,RNAME,E,5,SYSTEM),RET=USE,MF=L
DEQLIST  DEQ   (QNAME,RNAME,5,SYSTEM),MF=L
DISKOPEN OPEN  (DISKDCB,OUTPUT),TYPE=J,MF=L
CARDOPEN OPEN  (CARDDCB),MF=L
         SPACE 1
*                        DATA EVENT CONTROL BLOCKS
         WRITE DISKDECB,SF,DISKDCB,OUTAREAB,MF=L
         EJECT
*                        CONSTANTS AND WORK AREAS
         SPACE 1
         LTORG *
DALTAREA DC    A(OUTAREAA)         ADDRESS OF ALTERNATE OUTPUT AREA
BADENQCD DC    X'80',AL3(4)
SAVEAREA DS    18F
JFCB     DS    CL176
JFCBIND2 EQU   JFCB+87
EXITLIST DC    X'87',AL3(JFCB)
MESSAGEA DC    0F'0',AL2(MSGAEND-*,0),C'OPEN FAILED FOR '
MSGADDNM DC    CL6' '
         DC    C'. TRY ONE MORE TIME.'
MSGAEND  EQU   *
RCB      DC    X'93'               *THESE   * RCB, SRCB, AND
SRCB     DC    X'80'               *MUST BE *   COMPRESSED
COMPWORK DS    CL83                *TOGETHER*   RECORD
QNAME    DC    C'HASPRTP '
RNAME    DC    C'XMITA'
STATIND  DC    X'00'
         AIF   ('&XPARENT' EQ 'YES').SKIPTBL
         EJECT
* TRANSLATE TABLE TO CHANGE LINE CONTROL CHARACTERS IN THE INPUT STREAM
* TO AVOID LINE ERRORS IN THE TRANSMISSION PROGRAM.
         SPACE 2
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF
         DS    0D                  ALIGN FOR SPEED
TRANSTBL DC    X'000102400405060708090A0B0C0D0E0F' 0X
         DC    X'401112131415161718191A1B1C1D1E1F' 1X
         DC    X'202122232425402728292A2B2C2D2E2F' 2X
         DC    X'303132333435363738393A3B3C3D3E3F' 3X
         DC    X'404142434445464748494A4B4C4D4E4F' 4X
         DC    X'505152535455565758595A5B5C5D5E5F' 5X
         DC    X'606162636465666768696A6B6C6D6E6F' 6X
         DC    X'707172737475767778797A7B7C7D7E7F' 7X
         DC    X'808182838485868788898A8B8C8D8E8F' 8X
         DC    X'909192939495969798999A9B9C9D9E9F' 9X
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' AX
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' BX
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' CX
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' DX
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' EX
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF' FX
.SKIPTBL ANOP
         EJECT
*                        INPUT/OUTPUT AREAS
         SPACE 1
         DS    0D                  CARD READER
INAREAA  DC    CL84' '             INPUT RECORD AREA (+ SPARES)
         SPACE 2
         AIF   ('&XPARENT' EQ 'YES').ISXPAR
         DS    0D                  DISK
OUTAREAA DC    AL1(0,6,SOH,STX,BCB,FCS,FCS)
         DS    CL(&BUFSIZE-6)
         DS    0D
OUTAREAB DC    AL1(0,6,SOH,STX,BCB,FCS,FCS)
         DS    CL(&BUFSIZE-6)
         AGO   .NOXPARN
.ISXPAR  ANOP
         DS    0D                  DISK
OUTAREAA DC    AL1(0,6,DLE,STX,BCB,FCS,FCS)
         DS    CL(&BUFSIZE-6)
         DS    0D
OUTAREAB DC    AL1(0,6,DLE,STX,BCB,FCS,FCS)
         DS    CL(&BUFSIZE-6)
.NOXPARN ANOP
         SPACE 2
*              GENERATE THE DECIMAL LENGTH OF THIS PROGRAM
         SPACE 1
$L       EQU   *-OSRTPIN           COMPUTE INTERMEDIATE VALUES
$L1      EQU   $L/100000*100000
$L2      EQU   ($L-$L1)/10000*10000
$L3      EQU   ($L-$L1-$L2)/1000*1000
$L4      EQU   ($L-$L1-$L2-$L3)/100*100
$L5      EQU   ($L-$L1-$L2-$L3-$L4)/10*10
$L6      EQU   $L-$L1-$L2-$L3-$L4-$L5
$LENGTH  EQU   $L1/100000*1048576+$L2/10000*65536+$L3/1000*4096+$L4/100C
               *256+$L5/10*16+$L6  THIS IS THE DECIMAL LENGTH
         END   OSRTPIN
