JES2B014 CSECT                     MODIFICATION LOADING PROGRAM         MMD00110
         SPACE 2                                                        MMD00120
*******************************************************************     MMD00130
*                                                                 *     MMD00140
*        PROGRAM ID. :             JES2B014                       *     MMD00150
*                                                                 *     MMD00160
*        DATE WRITTEN :            MAY 1977                       *     MMD00170
*                                                                 *     MMD00180
*        AUTHOR :                  D.H.CARTWRIGHT.                *     MMD00190
*                                                                 *     MMD00200
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     MMD00210
*                                                                 *     MMD00220
*******************************************************************     MMD00230
         SPACE 3                                                        MMD00240
*******************************************************************     MMD00250
*                                                                 *     MMD00260
*        PURPOSE                                                  *     MMD00270
*       ---------                                                 *     MMD00280
*                                                                 *     MMD00290
*        THIS PROGRAM IS PART OF THE JES2B001 JES2 MODIFICATION   *     MMD00300
*        TO PERFORM ADDITIONAL JES2 INITIALISATION.               *     MMD00310
*        IT RECEIVES CONTROL VIA A PSEUDO 'CALL' TO PROCESS       *     MMD00320
*        DCT= CONTROL CARDS.                                      *     MMD00330
*******************************************************************     MMD00340
         EJECT                                                          MMD00350
         COPY  $HASPGEN            HASP OPTIONS                         MMD00360
         EJECT                                                          MMD00370
         $SYSPARM (OFF,GEN,NODATA,NO,NO) SET DOCUMENTATION OPTIONS      MMD00380
         SPACE 3                                                        MMD00390
JES2B014 $RTIN DOC=&DOC            MODULE INITIALISATION                MMD00400
         SPACE 1                                                        MMD00410
         USING ADCTDSCT,R9         ESTABLISH ADCT ADDRESSABILITY        MMD00420
         SPACE 2                                                        MMD00430
         XC    COMPCODE,COMPCODE   ZEROISE                              MMD00440
         BAL   R4,ADCTGET          ESTABLISH ADCT ADDRESS               MMD00450
         BE    B014EXIT            TERMINATE ON ERROR                   MMD00460
         BAL   R4,ADCTFLAG         GO SET OPTION FLAGS                  MMD00470
         BAL   R4,ADCTNOVR         GO TEST FOR NON V=R CLASSES          MMD00480
         BAL   R4,ADCTRERO         GO TEST FOR REROUTE                  MMD00490
         BE    B014EXIT            TERMINATE ON ERROR                   MMD00500
         SPACE 2                                                        MMD00510
B014EXIT PGMOUT RC=COMPCODE        RETURN TO JES2B001                   MMD00520
         TITLE 'ADCT INITIALISATION - ADCT LOCATE ROUTINE'              MMD00530
*********************************************************************** MMD00540
*        THIS ROUTINE EXAMINES THE 'ADCT=' KEYWORD AND ESTABLISHES    * MMD00550
*        ADCT ADDRESSABILITY FOR SUBSEQUENT PROCESSING BY PUTTING     * MMD00560
*        THE ADDRESS OF THE REQUIRED APCE INTO REGISTER 9.            * MMD00570
*********************************************************************** MMD00580
ADCTGET  SUBIN SAVE=(R4)           SUB-ROUTINE ENTRY                    MMD00590
         SR    R2,R2               CLEAR A WORK REGISTER                MMD00600
         IC    R2,LVERBDAT         PICK UP LENGTH OF DATA FIELD         MMD00610
         CLC   LOCAL,0(R6)         TEST DATA FOR LOCAL ADCT             MMD00620
         BE    ADCTGETL            YES,SIMPLE CASE.GO TO IT             MMD00630
         CLC   REMOTE,0(R6)        TEST FOR ONLY OTHER SYNTAX           MMD00640
         BNE   ADCTGER1            NO,WARN OF ERROR                     MMD00650
         SPACE 1                                                        MMD00660
         SH    R2,REMOTEL          GET LENGTH OF REMOTE NUMBER          MMD00670
         BNP   ADCTGER2            ERROR,GO TELL HIM                    MMD00680
         BCTR  R2,0                REDUCE FOR EXECUTE                   MMD00690
         LTR   R2,R2               BELT AND BRACES                      MMD00700
         BM    ADCTGER2            BUT NECESSARY FOR TWITS              MMD00710
         LA    R1,L'REMOTE(R6)     POINT TO REMOTE NUMBER               MMD00720
         EX    R2,ADCTGPAK         PACK REMOTE NUMBER                   MMD00730
         CVB   R1,DWORK            GET REMOTE NUMBER IN R1              MMD00740
         CH    R1,$NUMRJE          ARE WE WITHIN RANGE?                 MMD00750
         BH    ADCTGER2            NO,INVALID DEVICE                    MMD00760
         BAL   R4,FINDADCT         GET ADCT ADDRESS                     MMD00770
         LTR   R9,R1               PUT INTO ADDRESSING REGISTER         MMD00780
         B     ADCTGETX            RETURN TO CALLER                     MMD00790
         SPACE 2                                                        MMD00800
ADCTGETL DS    0H                  LOCAL ADCT REQUESTED                 MMD00810
         SR    R1,R1               SET REMOTE NUMBER = ZERO             MMD00820
         BAL   R4,FINDADCT         GO LOCATE ITS ADCT                   MMD00830
         LTR   R9,R1               SET IN ADDRESSING REGISTER           MMD00840
         LA    R9,CBPRLGTH(,R9)    ALLOW FOR CBPR ON ZEROTH ADCT        MMD00850
         SPACE 1                                                        MMD00860
ADCTGETX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MMD00870
         SPACE 2                                                        MMD00880
ADCTGPAK PACK  DWORK,0(0,R1)       PACK REMOTE NUMBER    *EXECUTED*     MMD00890
         TITLE 'ADCT INITIALISATION - ADCT LOCATE ERROR ROUTINES'       MMD00900
*********************************************************************** MMD00910
*        THIS ROUTINE SETS THE APPRORIATE ERROR MESSAGE ADDRESS       * MMD00920
*        IN THE PARAMETER LIST AND RETURNS WITH THE CONDITION CODE    * MMD00930
*        SET 'EQUAL' TO TERMINATE PROCESSING FOR THIS REQUEST.        * MMD00940
*********************************************************************** MMD00950
         SPACE 2                                                        MMD00960
ADCTGER1 DS    0H                  INVALID NAME SPECIFIED               MMD00970
         LA    R1,B014ERR1         POINT TO ERROR MESSAGE               MMD00980
         B     ADCTGERX            GIVE MESSAGE TO JES2B001             MMD00990
         SPACE 1                                                        MMD01000
ADCTGER2 DS    0H                  NO REMOTE NUMBER SPECIFIED           MMD01010
         LA    R1,B014ERR2         POINT TO ERROR MESSAGE               MMD01020
         B     ADCTGERX            GIVE MESSAGE TO JES2B001             MMD01030
         SPACE 1                                                        MMD01040
ADCTGERX DS    0H                  TELL JES2B001 OF ERROR AND QUIT      MMD01050
         ST    R1,AMESSAGE         PUT MESSAGE IN PARAMETER LIST        MMD01060
         MVC   COMPCODE,WARNING    TELL JES2B001 AN ERROR EXISTS        MMD01070
         SR    R9,R9               CLEAR ADCT ADDRESS                   MMD01080
         LTR   R9,R9               SET CONDITION CODE                   MMD01090
         B     ADCTGETX            AND EXIT                             MMD01100
         TITLE 'ADCT INITIALISATION - FLAG SETTING ROUTINE'             MMD01110
*********************************************************************** MMD01120
*        THIS ROUTINE SETS VARIOUS FLAGS FOR THOSE OPTIONS WHICH      * MMD01130
*        DO NOT HAVE OPERANDS.                                        * MMD01140
*********************************************************************** MMD01150
         SPACE 2                                                        MMD01160
ADCTFLAG SUBIN SAVE=(R4)           SUB-ROUTINE ENTRY                    MMD01170
         TM    RECVFND+0,VRB0CLSO  CLASS O ALLOWED?                     MMD01180
         BNO   *+8                 NO,SKIP                              MMD01190
         OI    ADCTFLG1,ADC1CLSO   SET ADCT FLAG                        MMD01200
         SPACE 1                                                        MMD01210
         TM    RECVFND+0,VRB0ALLC  ALL COMMANDS?                        MMD01220
         BNO   *+8                 NO,SKIP                              MMD01230
         OI    ADCTFLG1,ADC1ALLC   YES,SET FLAG                         MMD01240
         SPACE 1                                                        MMD01250
         TM    RECVFND+1,VRB1DMSG  $DN MESSAGE REQUIRED AT SIGN-ON?     MMD01260
         BNO   *+8                 YES,SKIP                             MMD01270
         OI    ADCTINIT,ADCDNMSG   NO, SET ADCT FLAG                    MMD01280
         TM    RECVFND+1,VRB1NHRD  HOLD READER ?                        MMD01290
         BNO   *+8                 YES, SKIP                            MMD01300
         OI    ADCTINIT,ADCIHRDR   NO, SET ADCT FLAG                    MMD01310
         TM    RECVFND+1,VRB1NDPR  DRAIN PRINTER?                       MMD01320
         BNO   *+8                 YES, SKIP                            MMD01330
         OI    ADCTINIT,ADCIDPRT   NO, SET ADCT FLAG                    MMD01340
         TM    RECVFND+1,VRB1D100  DATA 100 MODEL 70 COMPRESSION?       MMD01350
         BNO   *+8                 YES, SKIP                            MMD01360
         OI    ADCTINIT,ADCID100   NO, SET ADCT FLAG                    MMD01370
         SPACE 1                                                        MMD01380
         TM    RECVFND+1,VRB1PNHD  NOT TO HOLD OUTPUT?                  MMD01390
         BNO   *+8                 NO,SKIP                              MMD01400
         OI    ADCTFLG1,ADC1PNHD   YES,SET ADCT FLAG                    MMD01410
         SPACE 1                                                        MMD01420
ADCTFLGX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MMD01430
         TITLE 'ADCT INITIALISATION - V=R EXCEPTION CLASSES'            MMD01440
*********************************************************************** MMD01450
*        THIS ROUTINE FLAGS THE ADCT JOB CLASS EXCEPTION LIST         * MMD01460
*        FOR THOSE CLASSES SPECIFIED ON THE CONTROL CARD AS           * MMD01470
*        BEING INELIGIBLE FOR V=R PRCESSING (JES2B207)                * MMD01480
*********************************************************************** MMD01490
         SPACE 2                                                        MMD01500
ADCTNOVR SUBIN SAVE=(R1,R2,R4,R5)  SUBROUTINE ENTRY                     MMD01510
         LA    R1,VRB1NVR          SET KEYWORD REQUIRED                 MMD01520
         BAL   R4,FINDKEY1         SEE IF IT IS PRESENT                 MMD01530
         LTR   R5,R1               IS IT PRESENT?                       MMD01540
         BZ    ADCTNOVX            NO,EXIT                              MMD01550
         BAL   R4,DLENGTH          GET LENGTH OF DATA                   MMD01560
         LTR   R5,R0               WAS THERE ANY?                       MMD01570
         BNP   ADCTNOVX            NO,IGNORE IT AS STUPID               MMD01580
         LA    R4,ADCTJVNR         POINT TO EXCEPTION TABLE             MMD01590
         S     R4,CLASSA           ALLOW FOR OFFSET OF CLASS            MMD01600
         SPACE 1                                                        MMD01610
ADCTNOVL DS    0H                  LOOP AROUND OPERANDS                 MMD01620
         SR    R2,R2               CLEAR WORK REGISTER                  MMD01630
         LA    R2,0(R2,R4)         POINT TO TABLE ENTRY                 MMD01640
         IC    R2,0(,R1)           PICK UP A CLASS                      MMD01650
         OI    0(R2),ADCTJVNR      FLAG CLASS ENTRY                     MMD01660
         LA    R1,1(,R1)           UPDATE OPERAND POINTER               MMD01670
         BCT   R5,ADCTNOVL         FLAG EVERY REQUESTED CLASS           MMD01680
         SPACE 1                                                        MMD01690
ADCTNOVX SUBOUT RESTORE=(R1,R2,R4,R5) RETURN TO CALLER                  MMD01700
         TITLE 'ADCT INITIALISATION - ADCT REROUT SUBROUTINE'           MMD01710
*********************************************************************** MMD01720
*        SUB-ROUTINE TO TEST FOR REROUTE REQUIREMENT IN REMOTE PRINT  * MMD01730
*        JOBS AND SET UP ADCT FIELDS IF REROUTING IS NEEDED.          * MMD01740
*                                                                     * MMD01750
*********************************************************************** MMD01760
         SPACE 3                                                        MMD01770
ADCTRERO SUBIN SAVE=(R1,R2,R3,R4,R5) SUBROUTINE ENTRY                   MMD01780
         LA    R1,VRB0RERO         SET KEYWORD REQUIRED                 MMD01790
         BAL   R4,FINDKEY0         SEE IF IT IS PRESENT                 MMD01800
         LTR   R5,R1               IS IT PRESENT?                       MMD01810
         BZ    ADCTRERX            NO,EXIT                              MMD01820
         BAL   R4,DLENGTH          GET LENGTH OF DATA                   MMD01830
         LTR   R5,R0               WAS THERE ANY?                       MMD01840
         BNP   ADCTRERX            NO, IGNORE IT                        MMD01850
         LR    R2,R0               LOAD LENGTH TO R2                    MMD01860
         LA    R1,1(,R1)           INCREMENT POINTER PAST (             MMD01870
         BCTR  R2,0                SUBTRACT 1 FROM LENGTH               MMD01880
         LA    R3,0(,R1)           POINT R3 TO START OF LINE COUNT      MMD01890
         SR    R5,R5               ZEROISE                              MMD01900
REROUTLP CLI   0(R3),C'/'          IS IT A DELIMETER?                   MMD01910
         BE    REROUT1             YES, BRANCH                          MMD01920
         LA    R3,1(,R3)           NO, INCREMENT POINTER                MMD01930
         LA    R5,1(,R5)           ADD 1 TO LENGTH                      MMD01940
         BCT   R2,REROUTLP         GO TEST NEXT POSITION                MMD01950
         B     ADCTRERE            ERROR IF NO DELIMETER                MMD01960
REROUT1  CH    R5,=H'8'            OPERAND 1 > 8 POSITIONS?             MMD01970
         BH    ADCTRERE            YES, ERROR                           MMD01980
         LTR   R5,R5               NO, IS IT PRESENT?                   MMD01990
         BNZ   REROUT2             YES, BRANCH                          MMD02000
         MVC   ADCTRERC,=F'100000' SET UP DEFAULT VALUE                 MMD02010
         B     REROUT3             GO TEST ROUTE CODE                   MMD02020
REROUT2  LR    R0,R5               R0 = LENGTH 'NO. OF LINES' FIELD     MMD02030
         BAL   R4,ADCTNUM          GO TEST IF NUMERIC                   MMD02040
         LTR   R1,R1               IS OPERAND NUMERIC?                  MMD02050
         BZ    ADCTRERE            NO, ERROR                            MMD02060
         CVB   R5,DWORK            YES, CONVERT VALUE TO BINARY         MMD02070
         ST    R5,ADCTRERC         STORE VALUE IN ADCT                  MMD02080
         SPACE 3                                                        MMD02090
REROUT3  CLC   LOCAL,1(R3)         REROUTE TO 'LOCAL' ?                 MMD02100
         BNE   REROUT4             NO, GO TEST REMOTE                   MMD02110
         CH    R2,=H'6'            IS REST OF LENGTH - 2 ?              MMD02120
         BNE   ADCTRERE            NO, ERROR                            MMD02130
         MVI   ADCTRERD,X'00'      YES, INSERT 'LOCAL' REROUTE CODE     MMD02140
         B     ADCTRERX            AND EXIT                             MMD02150
REROUT4  CLC   REMOTE,1(R3)        REROUTE TO A 'REMOTE' LOCATION?      MMD02160
         BNE   ADCTRERE            NO,ERROR                             MMD02170
         LA    R1,7(,R3)           POINT TO ROUTE CODE                  MMD02180
         SH    R2,=H'7'            ARRANGE LENGTH                       MMD02190
         BNP   ADCTRERE            ERROR IF ZERO OR NEGATIVE            MMD02200
         CH    R2,=H'3'             IS LENGTH > 3 ?                     MMD02210
         BH    ADCTRERE            YES, ERROR                           MMD02220
         LR    R0,R2               NO, PREPARE TEST NUMERIC             MMD02230
         BAL   R4,ADCTNUM          GO TEST IF REROUTE CODE NUMERIC      MMD02240
         LTR   R1,R1               IS IT O.K. ?                         MMD02250
         BZ    ADCTRERE            NO, ERROR                            MMD02260
         CVB   R2,DWORK            CONVERT VALUE TO BINARY              MMD02270
         STC   R2,ADCTRERD         INSERT ROUTE CODE IN ADCT            MMD02280
         B     ADCTRERX            AND EXIT                             MMD02290
         SPACE 1                                                        MMD02300
ADCTRERE XC    ADCTRERC,ADCTRERC   ZEROISE                              MMD02310
         MVI   ADCTRERD,X'00'                                           MMD02320
         LA    R1,B014ERR3         POINT TO ERROR MESSAGE               MMD02330
         ST    R1,AMESSAGE         PUT MESSAGE IN PARAM LIST            MMD02340
         MVC   COMPCODE,WARNING    TELL JES2B001 AN ERROR EXISTS        MMD02350
         SR    R9,R9               CLEAR ADCT ADDR. SET COND. CODE      MMD02360
         LTR   R9,R9               SET COND. CODE                       MMD02370
ADCTRERX SUBOUT RESTORE=(R1,R2,R3,R4,R5) RETURN TO CALLER               MMD02380
         TITLE 'ADCT INITIALISATION - ADCT LOCATE SUBROUTINE'           MMD02390
*********************************************************************** MMD02400
*        SUB-ROUTINE TO LOCATE THE ADCT FOR A DESIRED REMOTE          * MMD02410
*        NUMBER.                                                      * MMD02420
*        ON ENTRY                  R1  =  REMOTE NUMBER (LOCAL = ZERO)* MMD02430
*        ON EXIT                   R1  =  ADDRESS OF ITS ADCT         * MMD02440
*********************************************************************** MMD02450
         SPACE 3                                                        MMD02460
FINDADCT SUBIN SAVE=(R4,R6,R7)     ENTRY                                MMD02470
         LA    R7,ADCTLGTH+CBPRLGTH SET LENGTH OF EACH ADCT             MMD02480
         LR    R6,R1               GET NUMBER OF ADCT REQUIRED          MMD02490
         MR    R6,R6               CALCULATE OFFSET IN ADCT LIST        MMD02500
         L     R1,HCT$AHCT         GET AHCT ADDRESS                     MMD02510
         L     R6,AHCTADCT-AHCTDSCT(R1) GET START OF ADCT LIST          MMD02520
         LA    R1,0(R6,R7)         GET ADDRESS OF REQUIRED ADCT         MMD02530
FINDADCX SUBOUT RESTORE=(R4,R6,R7) RETURN TO CALLER                     MMD02540
         TITLE 'JES2B014 - LOCATE KEYWORD SUB-ROUTINE 0'                MMD02550
*********************************************************************** MMD02560
*                                                                     * MMD02570
*        THIS ROUTINE LOCATES THE ENTRY IN THE KEYWORD-DESCRIPTOR     * MMD02580
*        CHAIN FOR A DESIRED VERB.                                    * MMD02590
*                                                                     * MMD02600
*        ON ENTRY -                R1 = KEYWORD VALUE                 * MMD02610
*                                  R3 = ADDRESS OF RECORD SAVE AREA   * MMD02620
*        ON EXIT  -                R1 = ADDRESS OF KEYWORD DESCRIPTOR * MMD02630
*        ON ERROR -                R1 = ZERO                          * MMD02640
*                                                                     * MMD02650
*********************************************************************** MMD02660
         SPACE 2                                                        MMD02670
FINDKEY0 SUBIN SAVE=(R5,R7)        SUB-ROUTINE ENTRY                    MMD02680
         ICM   R5,7,RECVERBS+1     GET START OF KEYWORD CHAIN           MMD02690
         B     *+4+4               SKIP UPDATE FIRST TIME               MMD02700
         SPACE 1                                                        MMD02710
FNDKEYL0 DS    0H                  LOOP UP KEYWORD CHAIN                MMD02720
         ICM   R5,7,KEYNEXT+1      GET ADDRESS OF NEXT KEYWORD BLOCK    MMD02730
         BZ    FNDKEYN0            ERROR EXIT IF END OF CHAIN           MMD02740
         ICM   R7,7,KEYVERB+1      GET ADDRESS OF VERB DESCRIPTOR       MMD02750
         BZ    FNDKEYN0            ERROR IF NONE                        MMD02760
         CLM   R1,1,VERBFLAG       TEST FOR REQUIRED VALUE              MMD02770
         BNE   FNDKEYL0            NO,TRY THE NEXT                      MMD02780
         LR    R1,R5               YES,GET ADDRESS OF KEYWORD BLOCK     MMD02790
         SPACE 1                                                        MMD02800
FNDKEY0X SUBOUT RESTORE=(R5,R7)    RETURN TO CALLER                     MMD02810
         SPACE 2                                                        MMD02820
FNDKEYN0 DS    0H                  ERROR IN SEARCH                      MMD02830
         SR    R1,R1               SET REG.1 ZERO                       MMD02840
         B     FNDKEY0X            EXIT                                 MMD02850
         TITLE 'JES2B014 - LOCATE KEYWORD SUB-ROUTINE'                  MMD02860
*********************************************************************** MMD02870
*                                                                     * MMD02880
*        THIS ROUTINE LOCATES THE ENTRY IN THE KEYWORD-DESCRIPTOR     * MMD02890
*        CHAIN FOR A DESIRED VERB.                                    * MMD02900
*                                                                     * MMD02910
*        ON ENTRY -                R1 = KEYWORD VALUE                 * MMD02920
*                                  R3 = ADDRESS OF RECORD SAVE AREA   * MMD02930
*        ON EXIT  -                R1 = ADDRESS OF KEYWORD DESCRIPTOR * MMD02940
*        ON ERROR -                R1 = ZERO                          * MMD02950
*                                                                     * MMD02960
*********************************************************************** MMD02970
         SPACE 2                                                        MMD02980
FINDKEY1 SUBIN SAVE=(R5,R7)        SUB-ROUTINE ENTRY                    MMD02990
         ICM   R5,7,RECVERBS+1     GET START OF KEYWORD CHAIN           MMD03000
         B     *+4+4               SKIP UPDATE FIRST TIME               MMD03010
         SPACE 1                                                        MMD03020
FINDKEYL DS    0H                  LOOP UP KEYWORD CHAIN                MMD03030
         ICM   R5,7,KEYNEXT+1      GET ADDRESS OF NEXT KEYWORD BLOCK    MMD03040
         BZ    FINDKEYN            ERROR EXIT IF END OF CHAIN           MMD03050
         ICM   R7,7,KEYVERB+1      GET ADDRESS OF VERB DESCRIPTOR       MMD03060
         BZ    FINDKEYN            ERROR IF NONE                        MMD03070
         CLM   R1,1,VERBFLAG+1     TEST FOR REQUIRED VALUE              MMD03080
         BNE   FINDKEYL            NO,TRY THE NEXT                      MMD03090
         LR    R1,R5               YES,GET ADDRESS OF KEYWORD BLOCK     MMD03100
         SPACE 1                                                        MMD03110
FINDKEYX SUBOUT RESTORE=(R5,R7)    RETURN TO CALLER                     MMD03120
         SPACE 2                                                        MMD03130
FINDKEYN DS    0H                  ERROR IN SEARCH                      MMD03140
         SR    R1,R1               SET REG.1 ZERO                       MMD03150
         B     FINDKEYX            EXIT                                 MMD03160
         TITLE 'MODS INITIALISATION - DATA LENGTH ROUTINE'              MMD03170
*********************************************************************** MMD03180
*        THIS SUB-ROUTINE FINDS THE POSITION AND LENGTH OF            * MMD03190
*        KEYWORD DATA ELEMENTS.                                       * MMD03200
*        ON ENTRY:                                                    * MMD03210
*              R3  -->             RECORD SAVE AREA                   * MMD03220
*              R5  -->             KEYWORD DESCRIPTOR                 * MMD03230
*        ON RETURN:                                                   * MMD03240
*              R0   =              LENGTH OF DATA                     * MMD03250
*              R1  -->             POSITION OF DATA                   * MMD03260
*********************************************************************** MMD03270
         SPACE 3                                                        MMD03280
DLENGTH  SUBIN SAVE=(R2,R4)        SUB-ROUTINE ENTRY                    MMD03290
         USING RECAREA,R3          ESTABLISH RECORD ADDRESSABILITY      MMD03300
         USING KEYCHAIN,R5         ESTABLISH KEYWORD ADDRESSABILITY     MMD03310
         L     R1,KEYVERB          GET ADDRESS OF VERB DESCRIPTOR       MMD03320
         SR    R2,R2               CLEAR WORK REGISTER                  MMD03330
         SR    R4,R4               AND ANOTHER                          MMD03340
         IC    R4,KEYLNGTH         PICK UP LENGTH OF KEYWORD            MMD03350
         IC    R2,VERBLEN-VERBDESC(R1) PICK UP VERB LENGTH              MMD03360
         L     R1,KEYLCTN          GET ADDRESS OF KEYWORD               MMD03370
         LA    R1,1(R2,R1)         POINT AT DATA ELEMENT                MMD03380
         LA    R2,2(,R2)           ADD TWO TO CORRECT IT                MMD03390
*        NOTE  THAT THE END BRACKET ')' IS NOT COUNTED                  MMD03400
         SR    R4,R2               GET OPERAND LENGTH                   MMD03410
         LR    R0,R4               SAVE IT                              MMD03420
DLENGTHX SUBOUT RESTORE=(R2,R4)    RETURN TO CALLER                     MMD03430
         SPACE 2                                                        MMD03440
         DROP  R3,R5               END RECORD,KEYWORD ADDRESSABILITY    MMD03450
         TITLE 'MODS INITIALISATION - DATA LENGTH ROUTINE'              MMD03460
*********************************************************************** MMD03470
*        THIS SUB-ROUTINE TESTS IF A KEYWORD CONTAINS NUMERIC         * MMD03480
*        DATA.                                                        * MMD03490
*        ON ENTRY:                                                    * MMD03500
*              R0  -->             LENGTH OF DATA                     * MMD03510
*              R1  -->             ADDRESS OF DATA                    * MMD03520
*        ON RETURN:                                                   * MMD03530
*              FIELD DWORK CONTAINS THE VALUE TESTED IN PACKED.       * MMD03540
*              ON ERROR:                                              * MMD03550
*              R1  -->             ZERO                               * MMD03560
*********************************************************************** MMD03570
         SPACE 3                                                        MMD03580
ADCTNUM  SUBIN SAVE=(R2,R3)        SUB ROUTINE ENTRY                    MMD03590
         LR    R2,R0               ESTABLISH LOOP                       MMD03600
         LR    R3,R1               POINT TO 1ST. POSITION               MMD03610
         SPACE 1                                                        MMD03620
ADCTNUML CLI   0(R3),C'0'          IS THIS CHAR. < '0'                  MMD03630
         BL    ADCTNUME            YES, ERROR                           MMD03640
         CLI   0(R3),C'9'          IS THIS CHAR. > '9'                  MMD03650
         BH    ADCTNUME            YES, ERROR                           MMD03660
         LA    R3,1(,R3)           INCR. POINTER TO TEST NEXT POSN.     MMD03670
         BCT   R2,ADCTNUML         GO TEST NEXT POS.                    MMD03680
         SPACE 1                                                        MMD03690
         LR    R2,R0               RESTORE ORIGINAL LENGTH              MMD03700
         BCTR  R2,0                SUB 1 FOR EXECUTE                    MMD03710
         EX    R2,ADCTGPAK         PACK THE VALUE TESTED                MMD03720
         B     ADCTNUMX                                                 MMD03730
         SPACE 1                                                        MMD03740
ADCTNUME SR    R1,R1               SET 'NON NUMERIC' C.C.               MMD03750
         SPACE 1                                                        MMD03760
ADCTNUMX SUBOUT RESTORE=(R2,R3) SUB ROUTINE EXIT                        MMD03770
         TITLE 'JES2B014 - DATA AREAS'                                  MMD03780
*********************************************************************** MMD03790
*        ERROR MESSAGES FOR JES2B001                                  * MMD03800
*********************************************************************** MMD03810
         SPACE 3                                                        MMD03820
B014ERR1 WTO   '$B014ERR1 NO ADCT NAME SPECIFIED',                     CMMD03830
               ROUTCDE=(2,10),DESC=(1),MF=L                             MMD03840
B014ERR2 WTO   '$B014ERR2 INVALID REMOTE NUMBER',                      CMMD03850
               ROUTCDE=(2,10),DESC=(1),MF=L                             MMD03860
B014ERR3 WTO   '$B014ERR3 INVALID REROUTE PARAM',                      CMMD03870
               ROUTCDE=(2,10),DESC=(1),MF=L                             MMD03880
         SPACE 1                                                        MMD03890
ERRLNGTH EQU   30                  LENGTH OF AN ERROR MESSAGE           MMD03900
         EJECT                                                          MMD03910
*********************************************************************** MMD03920
*        WORK AREAS                                                   * MMD03930
*********************************************************************** MMD03940
         SPACE 3                                                        MMD03950
DWORK    DC    D'0'                A DOUBLEWORD WORK AREA               MMD03960
         SPACE 1                                                        MMD03970
LOCAL    DC    C'LOCAL'            LOCAL ADCT NAME                      MMD03980
REMOTE   DC    C'REMOTE'           REMOTE ADCT NAME                     MMD03990
         DS    0H                  ALIGNMENT                            MMD04000
REMOTEL  DC    AL2(L'REMOTE)       OFFSET OF REMOTE NUMBER              MMD04010
         SPACE 1                                                        MMD04020
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE              MMD04030
WARNING  DC    H'4'                SLIGHT ERROR COMPLETION CODE         MMD04040
SEVERE   DC    H'16'               SEVERE ERROR COMLETION CODE          MMD04050
         SPACE 2                                                        MMD04060
CLASSA   DS    0F                  LOWEST POSSIBLE CLASS                MMD04070
         DC    AL3(0)              RIGHT JUSTIFY                        MMD04080
         DC    C'A'                LOWEST CLASS OFFSET                  MMD04090
         TITLE 'JES2B014 - LITERAL POOL'                                MMD04100
*********************************************************************** MMD04110
*        LITERAL POOL                                                 * MMD04120
*********************************************************************** MMD04130
         SPACE 3                                                        MMD04140
         LTORG                                                          MMD04150
         END                                                            MMD04160
