//VSCBLR1  JOB 730401088972,'TAN 4',MSGLEVEL=(1,1),REGION=128K
//STEP1    EXEC  PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD  SYSOUT=A
//SYSUT2   DD  DSN=&VCBLMAC,DISP=(NEW,PASS),UNIT=SYSDA,
//             DCB=SYS1.MACLIB,SPACE=(80,(200,20,1))
//SYSIN  DD  UNIT=2400,VOL=SER=VSCOBO,DSN=MACROS,DISP=(OLD,PASS),
//             LABEL=(2,NL),DCB=(BLKSIZE=80,LRECL=80,RECFM=F)
//*
//STEP2    EXEC  PGM=IEUASM,PARM='DECK,NOLOAD',COND=(8,LE),REGION=80K
//SYSLIB   DD  DSN=&VCBLMAC,DISP=(OLD,DELETE)
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=A
//SYSUT1   DD  DSN=&CBC4UT1,SPACE=(1700,(200,100)),UNIT=SYSDA
//SYSUT2   DD  DSN=&CBC4UT2,SPACE=(1700,(200,100)),UNIT=SYSDA
//SYSUT3   DD  DSN=&CBC4UT3,SPACE=(1700,(200,100)),UNIT=SYSDA,
//             DISP=(,PASS)
//SYSPUNCH DD  DSN=&VCBLOBJ(ASM1),SPACE=(80,(300,20,1)),UNIT=SYSDA,
//             DISP=(NEW,PASS)
//SYSIN    DD  *
           VSCBL1
           END
//*
//STEP3    EXEC  PGM=IEWL,REGION=128K,COND=(8,LE),
//             PARM='DC,LIST,XREF,NCAL,SIZE=(128K,20K)'
//SYSPRINT DD  SYSOUT=A
//* *******************************************************************
//*      CHANGE TARGET LIBRARY FOR COBOL COMPILER IF NOT SYS1.LINKLIB
//* *******************************************************************
//SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR
//SYSUT1   DD  DSN=&CBC4UT3,DISP=(OLD,PASS)
//DD1      DD  DSN=&VCBLOBJ,DISP=(OLD,DELETE)
//SYSLIN DD  UNIT=2400,VOL=SER=VSCOBO,DSN=VSCOB,DISP=(OLD,PASS),
//             LABEL=(3,NL),DCB=(BLKSIZE=3200,LRECL=80,RECFM=FB)
//         DD  DDNAME=SYSIN
//SYSIN    DD  *
           INCLUDE  DD1(ASM1)
           SETSSI E2110000
           NAME  IKFCBL01(R)
//*
//STEP4    EXEC  PGM=IEWL,REGION=128K,COND=(8,LE),
//             PARM='DC,LIST,XREF,NCAL,REUS,SIZE=(128K,20K)'
//SYSPRINT DD  SYSOUT=A
//* *******************************************************************
//*      CHANGE TARGET LIBRARY FOR COBOL SUBRTNES IF NOT SYS1.COBLIB
//* *******************************************************************
//SYSLMOD DD DSN=SYS1.COBLIB,DISP=SHR
//SYSUT1   DD  DSN=&CBC4UT3,DISP=(OLD,PASS)
//SYSLIN DD  UNIT=2400,VOL=SER=VSCOBO,DSN=VSLIB1,DISP=(OLD,PASS),
//             LABEL=(4,NL),DCB=(BLKSIZE=3200,LRECL=80,RECFM=FB)
//*
//STEP5    EXEC  PGM=IEWL,REGION=128K,COND=(8,LE),
//             PARM='DC,LIST,XREF,NCAL,RENT,SIZE=(128K,20K)'
//SYSPRINT DD  SYSOUT=A
//* *******************************************************************
//*      CHANGE TARGET LIBRARY FOR COBOL SUBRTNES IF NOT SYS1.COBLIB
//* *******************************************************************
//SYSLMOD DD DSN=SYS1.COBLIB,DISP=SHR
//SYSUT1   DD  DSN=&CBC4UT3,DISP=(OLD,PASS)
//SYSLIN DD  UNIT=2400,VOL=SER=VSCOBO,DSN=VSLIB2,DISP=(OLD,PASS),
//             LABEL=(5,NL),DCB=(BLKSIZE=3200,LRECL=80,RECFM=FB)
//*
//*
//STEP6    EXEC  PGM=IEBGENER,COND=(8,LE)
//SYSPRINT DD  SYSOUT=A
//SYSIN    DD  DUMMY
//SYSUT2   DD  SYSOUT=B,DCB=(BLKSIZE=80,RECFM=F)
//SYSUT1   DD  DATA
//TESTRUN  JOB  SAMPLE-PROGRAM,MSGLEVEL=(1,1)
//* THE FOLLOWING IS THE COBOL SAMPLE PROGRAM ****
//  EXEC  COBUCLG,PARM.COB='QUOTE'
//COB.SYSIN DD *
100010 IDENTIFICATION DIVISION.
100020 PROGRAM-ID.  TESTRUN.
100030   AUTHOR. PROGRAMMER NAME.
100040   INSTALLATION. NEW YORK DEVELOPMENT CENTER.
100050   DATE-WRITTEN. JULY 12, 1968.
100060   DATE-COMPILED.
100070   REMARKS. THIS PROGRAM HAS BEEN WRITTEN AS A SAMPLE PROGRAM FOR
100080     COBOL USERS. IT CREATES AN OUTPUT FILE AND READS IT BACK AS
100090     INPUT.
100100 ENVIRONMENT DIVISION.
100110 CONFIGURATION SECTION.
100120   SOURCE-COMPUTER. IBM-370.
100130   OBJECT-COMPUTER. IBM-370.
100140 INPUT-OUTPUT SECTION.
100150 FILE-CONTROL.
100160     SELECT FILE-1 ASSIGN TO UT-2400-S-SAMPLE.
100170     SELECT FILE-2 ASSIGN TO UT-2400-S-SAMPLE.
100180 DATA DIVISION.
100190 FILE SECTION.
100200 FD  FILE-1
100210     LABEL RECORDS ARE OMITTED
100220     BLOCK CONTAINS 100 CHARACTERS
100225     RECORD CONTAINS 20 CHARACTERS
100230     RECORDING MODE IS F
100240     DATA RECORD IS RECORD-1.
100250   01 RECORD-1.
100260     02 FIELD-A PICTURE IS X(20).
100270 FD  FILE-2
100280     LABEL RECORDS ARE OMITTED
100290     BLOCK CONTAINS 5 RECORDS
100300     RECORD CONTAINS 20 CHARACTERS
100310     RECORDING MODE IS F
100320     DATA RECORD IS RECORD-2.
100330   01 RECORD-2.
100340     02 FIELD-A PICTURE IS X(20).
100350 WORKING-STORAGE SECTION.
100360     77 KOUNT PICTURE S99 COMP SYNC.
100370     77 NOMBER  PICTURE S99 COMP SYNC.
100375   01 FILLER.
100380     02 ALPHABET PICTURE X(26) VALUE "ABCDEFGHIJKLMNOPQRSTUVWXYZ".
100395     02 ALPHA REDEFINES ALPHABET PICTURE X OCCURS 26 TIMES.
100405     02 DEPENDENTS PICTURE X(26)  VALUE "0123401234012340123401234
100410-    "0".
100420     02 DEPEND REDEFINES DEPENDENTS PICTURE X OCCURS 26 TIMES.
100440   01 WORK-RECORD.
100450     02 NAME-FIELD  PICTURE X.
100460     02 FILLER PICTURE X VALUE SPACE.
100470     02 RECORD-NO PICTURE 9999.
100480     02 FILLER PICTURE X VALUE SPACE.
100490     02 LOCATION PICTURE AAA VALUE "NYC".
100500     02 FILLER PICTURE X VALUE SPACE.
100510     02 NO-OF-DEPENDENTS PICTURE XX.
100520     02 FILLER PICTURE X(7) VALUE SPACES.
100530 PROCEDURE DIVISION.
100540 BEGIN. READY TRACE.
100550     NOTE THAT THE FOLLOWING OPENS THE OUTPUT FILE TO BE CREATED
100560     AND INITIALIZES COUNTERS.
100570 STEP-1. OPEN OUTPUT FILE-1. MOVE ZERO TO KOUNT NOMBER.
100580     NOTE THAT THE FOLLOWING CREATES INTERNALLY THE RECORDS TO BE
100590     CONTAINED IN THE FILE, WRITES THEM ON TAPE, AND DISPLAYS
100600     THEM ON THE CONSOLE.
100610 STEP-2. ADD 1 TO KOUNT, ADD 1 TO NOMBER, MOVE ALPHA (KOUNT) TO
100620     NAME-FIELD.
100630     MOVE DEPEND (KOUNT) TO NO-OF-DEPENDENTS.
100640     MOVE NOMBER TO RECORD-NO.
100650 STEP-3. DISPLAY WORK-RECORD UPON CONSOLE. WRITE RECORD-1 FROM
100660     WORK-RECORD.
100670 STEP-4. PERFORM STEP-2 THRU STEP-3 UNTIL KOUNT IS EQUAL TO 26.
100680     NOTE THAT THE FOLLOWING CLOSES OUTPUT AND REOPENS IT AS
100690     INPUT.
100700 STEP-5. CLOSE FILE-1. OPEN INPUT FILE-2.
100710     NOTE THAT THE FOLLOWING READS BACK THE FILE AND SINGLES OUT
100720     EMPLOYEES WITH NO DEPENDENTS.
100730 STEP-6. READ FILE-2 RECORD INTO WORK-RECORD AT END GO TO STEP-8.
100740 STEP-7. IF NO-OF-DEPENDENTS IS EQUAL TO "0" MOVE "Z" TO
100750     NO-OF-DEPENDENTS. EXHIBIT NAMED WORK-RECORD. GO TO
100760     STEP-6.
100770 STEP-8. CLOSE FILE-2.
100780     STOP RUN.
//GO.SAMPLE DD    UNIT=2400,LABEL=(,NL)
//GO.SYSOUT  DD  SYSOUT=A
//*
//*
//ERRMSG  JOB  MESSAGE-PROGRAM,MSGLEVEL=(1,1)
//*
//*
//*                    L A T E S T  M E S S A G E S
//*
//*
//*    THIS PROGRAM WILL PRODUCE THE LATEST DIAGNOSTIC MESSAGES FOR
//*
//*      RELEASE 1.0 OF OS/VS ANS COBOL,  PP 5740-CB1
//*
//*
//STEP1  EXEC  COBUC,
//       PARM.COB='NODEC,NOPMA,NODMA,NOXRE,NOSXRE,NOSTA,NOFLOW,NOLOA'
//COB.SYSIN DD *
       ID DIVISION.
       PROGRAM-ID.  ERRMSG.
       REMARKS.  COMPILATION OF THIS PROGRAM WILL RESULT IN ALL
                 COMPILER DIAGNOSTICS BEING PRODUCED.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       PROCEDURE DIVISION.
           NOTE.  THE SAME RESULTS CAN BE ACHIEVED BY CHANGING
                  THE PROGRAM-ID OF ANY PROGRAM TO 'ERRMSG'.
           STOP RUN.
//*  THE FOLLOWING IS THE COBUC   PROCEDURE****
//COB  EXEC  PGM=IKFCBL00,PARM='DECK,NOLOAD,SUPMAP',REGION=128K
//SYSPRINT  DD SYSOUT=A
//SYSPUNCH DD SYSOUT=B
//SYSUT1 DD  UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT2 DD  UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT3 DD  UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT4 DD  UNIT=SYSDA,SPACE=(460,(700,100))
//*  THE FOLLOWING IS THE COBUCG  PROCEDURE****
//COB EXEC PGM=IKFCBL00,PARM='LOAD',REGION=128K
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT2 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT3 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT4 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSLIN DD DSNAME=&LOADSET,DISP=(MOD,PASS),                           X
//             UNIT=SYSDA,SPACE=(80,(500,100))
//GO EXEC PGM=LOADER,PARM='MAP,LET',COND=(5,LT,COB),REGION=128K
//SYSLIN DD DSNAME=*.COB.SYSLIN,DISP=(OLD,DELETE)
//SYSLOUT DD SYSOUT=A
//SYSLIB DD DSNAME=SYS1.COBLIB,DISP=SHR
//*  THE FOLLOWING IS THE COBUCL  PROCEDURE****
//COB    EXEC  PGM=IKFCBL00,REGION=128K
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT2 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT3 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT4 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSLIN DD DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,                  X
//    SPACE=(80,(500,100))
//LKED  EXEC  PGM=IEWL,PARM='LIST,XREF,LET',COND=(5,LT,COB),REGION=128K
//SYSLIN DD    DSN=&&LOADSET,DISP=(OLD,DELETE)
//       DD  DDNAME=SYSIN
//SYSLMOD DD DSN=&&GOSET,DISP=(NEW,PASS),UNIT=SYSDA,                   X
//   SPACE=(1024,(50,21,1))
//SYSLIB DD   DSNAME=SYS1.COBLIB,DISP=SHR
//SYSUT1 DD UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),SPACE=(1024,(50,20))
//SYSPRINT DD SYSOUT=A
//*  THE FOLLOWING IS THE COBUCLG PROCEDURE****
//COB  EXEC  PGM=IKFCBL00,REGION=128K,PARM='LOAD,SUPMAP'
//SYSPRINT  DD SYSOUT=A
//SYSUT1 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT2 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT3 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSUT4 DD UNIT=SYSDA,SPACE=(460,(700,100))
//SYSLIN DD DSNAME=&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,                X
//             SPACE=(80,(500,100))
//LKED EXEC PGM=IEWL,PARM='LIST,XREF,LET',COND=(5,LT,COB),REGION=128K
//SYSLIN  DD DSNAME=&LOADSET,DISP=(OLD,DELETE)
//  DD  DDNAME=SYSIN
//SYSLMOD DD DSNAME=&&GOSET(GO),DISP=(NEW,PASS),UNIT=SYSDA,            X
//             SPACE=(1024,(50,20,1))
//SYSLIB DD   DSNAME=SYS1.COBLIB,DISP=SHR
//SYSUT1 DD UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),SPACE=(1024,(50,20))
//SYSPRINT DD SYSOUT=A
//GO  EXEC PGM=*.LKED.SYSLMOD,COND=((5,LT,COB),(5,LT,LKED))
//STEPLIB  DD  DSNAME=SYS1.COBLIB,DISP=SHR
//*  THE FOLLOWING IS THE COBULG  PROCEDURE****
//LKED  EXEC  PGM=IEWL,PARM='LIST,XREF,LET',REGION=128K
//SYSLIN DD DDNAME=SYSIN
//SYSLMOD DD DSNAME=&&GOSET(GO),DISP=(NEW,PASS),UNIT=SYSDA,            X
//             SPACE=(1024,(50,20,1))
//SYSLIB DD DSNAME=SYS1.COBLIB,DISP=SHR
//SYSUT1 DD UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),SPACE=(1024,(50,20))
//SYSPRINT  DD SYSOUT=A
//GO  EXEC PGM=*.LKED.SYSLMOD,COND=(5,LT,LKED)
//STEPLIB  DD DSNAME=SYS1.COBLIB,DISP=SHR
//OCR3886  JOB  COPY-STATEMENTS,MSGLEVEL=(1,1)
//  EXEC  PGM=IEBUPDTE,PARM=MOD
//SYSPRINT DD  SYSOUT=A
//SYSUT1 DD DSNAME=COPYLIB,DISP=SHR
//SYSUT2 DD DSNAME=COPYLIB,DISP=SHR
//SYSIN  DD  *
      *******  NEXT CARD SHOULD BE AN IEBUPDTE CONTROL CARD  ***********
      ***  ./  ADD  LIST=ALL,NAME=ILBOOCRD   ***************************
      ******** ILBOOCRD - OCR DATA DESCRIPTION *************************
      ******************************************************************
      ********   O C R   3 8 8 6   F I L E   F O R M A T      **********
      ******************************************************************
       01  OCR-FILE.
           05  OCR-FILE-CONTROL-AREA.
               10  OCR-FILE-ID             PIC X(8)    VALUE 'DDNM3886'.
               10  OCR-FORMAT-RECORD-ID    PIC X(8)    VALUE 'FRLGDFR1'.
               10  OCR-OPERATION           PIC X(5)    VALUE 'OPEN '.
                   88  OCRO-OPEN                       VALUE 'OPEN '.
                   88  OCRO-CLOSE                      VALUE 'CLOSE'.
                   88  OCRO-READ                       VALUE 'READ '.
                   88  OCRO-READ-OVERLAPPED            VALUE 'READO'.
                   88  OCRO-WAIT                       VALUE 'WAIT '.
                   88  OCRO-MARK-LINE                  VALUE 'MARKL'.
                   88  OCRO-MARK-DOCUMENT              VALUE 'MARKD'.
                   88  OCRO-EJECT                      VALUE 'EJECT'.
                   88  OCRO-SETDEV                     VALUE 'SETDV'.
               10  OCR-STATUS-KEY          PIC 99      VALUE 0.
                   88  OCRS-SUCCESSFUL                 VALUE 00.
                   88  OCRS-END-OF-FILE                VALUE 10.
                   88  OCRS-IO-ERRORS                  VALUE 30 THRU 39.
                   88  OCRS-MISC-ERROR                 VALUE 30.
                   88  OCRS-MARK-CHECK                 VALUE 31.
                   88  OCRS-NONRECOVERY-ERROR          VALUE 32.
                   88  OCRS-INCOMPLETE-SCAN            VALUE 33.
                   88  OCRS-MARK-AND-EQUIP-CHECK       VALUE 34.
                   88  OCRS-PERMANENT-ERROR            VALUE 39.
                   88  OCRS-SPECIAL-ERRORS             VALUE 90 THRU 99.
                   88  OCRS-LOGIC-ERROR                VALUE 92.
                   88  OCRS-RESOURCE-UNAVAILABLE       VALUE 93.
                   88  OCRS-INVALID-PARAMETER          VALUE 95.
                   88  OCRS-INVALID-OPERATION          VALUE 99.
               10  OCR-LINE.
                   15  OCR-LINE-NUMBER     PIC 99      VALUE 1.
                   15  OCR-LINE-FORMAT     PIC 99      VALUE 1.
               10  OCR-MARK                PIC 99      VALUE 0.
               10  OCR-STACKER             PIC  9      VALUE 1.
      *
      *    ******* HEADER AND DATA RECORD AREAS *******
      *    FILLED IN BY SUCCESSFUL 'READ' AND/OR 'WAIT'.
      *    (NOTE - 'READO' DOES NOT ALTER THESE AREAS)
      *
           05  OCR-HEADER-RECORD                       VALUE ZEROS.
               10  OCRH-LINE-NUMBER        PIC 99.
               10  OCRH-LINE-FORMAT        PIC 99.
               10  OCRH-LINE-SCAN-COUNT    PIC  9.
               10  OCRH-LINE-STATUS        PIC  9.
                   88  OCRH-LINE-GOOD                  VALUE 0.
                   88  OCRH-LINE-BLANK                 VALUE 1.
                   88  OCRH-LINE-GROUP-ERASE           VALUE 3.
                   88  OCRH-LINE-CRITICAL-ERR          VALUE 2.
                   88  OCRH-LINE-NON-CRITICAL-ERR      VALUE 4.
                   88  OCRH-LINE-COMBINED-ERR          VALUE 6.
                   88  OCRH-LINE-INVALID               VALUE 7.
                   88  OCRH-END-OF-PAGE                VALUE 5.
               10  OCRH-FIELD-INFO.
                   15  OCRH-FIELD-STATUS   PIC 9   OCCURS 14.
                       88  OCRH-FIELD-GOOD             VALUE 0.
                       88  OCRH-FIELD-REJECT-CHARS     VALUE 2.
                       88  OCRH-FIELD-WRONG-LENGTH     VALUE 4.
                       88  OCRH-FIELD-COMBINED-ERR     VALUE 6.
                       88  OCRH-FIELD-BLANK            VALUE 8.
                       88  OCRH-FIELD-BLANK-SUP        VALUE 4.
           05  OCR-DATA-RECORD.
               10  OCR-STANDARD-MODE-RECORD.
                   15  OCR-STANDARD-FIELD-CHAR PIC X   OCCURS 130.
               10  OCR-IMAGE-MODE-RECORD
                           REDEFINES OCR-STANDARD-MODE-RECORD.
                   15  OCR-IMAGE-FIELD-LENGTH  PIC 99  OCCURS 14.
                   15  OCR-IMAGE-FIELD-CHAR    PIC X   OCCURS 102.
      ********** END OF 3886 DATA DIVISION COPY MEMBER *************
      *******  NEXT CARD SHOULD BE AN IEBUPDTE CONTROL CARD  ***********
      ***  ./  ADD  LIST=ALL,NAME=ILBOOCRP   ***************************
      ******* ILBOOCRP - OCR 3886 PROCEDURES
      ******************************************************************
      ********    O C R   3 8 8 6   P R O C E D U R E S        *********
      ******************************************************************
      *  THE 3886 OCR SUBROUTINE USES OCR-FILE FIELDS AS FOLLOWS
      *
      *  ALL OPERATIONS REQUIRE
      *      OCR-FILE-ID = THE UNIQUE NAME USED TO IDENTIFY THE FILE
      *                            TO THE SUBROUTINE AND TO THE SYSTEM
      *      OCR-OPERATION = THE CODE FOR THE REQUESTED OPERATION
      *  ALL OPERATIONS RETURN
      *      OCR-STATUS-KEY = RETURN CODE FOR VARIOUS OCCURRENCES
      *
      *  OCR-OPEN ('OPEN ') ALSO REQUIRES
      *      OCR-FORMAT-RECORD-ID = LIBRARY NAME OF DFR TO LOAD
      *  OCR-CLOSE ('CLOSE') REQUIRES NO ADDITIONAL PARAMETERS
      *  OCR-READ ('READ ') ALSO REQUIRES
      *      OCR-LINE-NUMBER (1-33) = LINE TO READ (ON DOCUMENT)
      *      OCR-LINE-FORMAT (1-63) = DLINT NUMBER (IN CURRENT DFR)
      *    AND RETURNS (IF OCRS-SUCCESSFUL)
      *      OCR-HEADER-RECORD = HEADER RECORD, AS RETURNED BY THE 3886
      *      OCR-DATA-RECORD = DATA FROM DOCUMENT, FROM 3886
      *  OCR-READ-OVERLAPPED ('READO') HAS SAME REQUIREMENTS AS OCR-READ
      *  OCR-WAIT ('WAIT ') RETURNS SAME PARAMETERS AS OCR-READ
      *  OCR-MARK-LINE ('MARKL') ALSO REQUIRES
      *      OCR-LINE-NUMBER (1-33) = LINE TO MARK (ON DOCUMENT)
      *      OCR-MARK (1-15) = SUM OF DESIRED MARK CODES (8421)
      *  OCR-MARK-DOCUMENT ('MARKD') ALSO REQUIRES
      *      OCR-MARK (1-15) = SUM OF DESIRED MARK CODES (8421)
      *  OCR-EJECT ('EJECT') ALSO REQUIRES
      *      OCR-STACKER (1-2) = STACKER TO SELECT (A OR B)
      *      OCR-LINE-NUMBER (0-33) = NUMBER OF LINES ON DOCUMENT
      *                FOR VALIDATION (IF 0, NO VALIDATION WILL OCCUR)
      *  OCR-SET-DEVICE ('SETDV') ALSO REQUIRES
      *      OCR-FORMAT-RECORD-ID = LIBRARY NAME OF DFR TO LOAD
      *
      *NOTES-
      *  1.  THE TERMS DFR AND DLINT ARE USED TO REFER TO THE EXPANDED
      *  CODE, IN LOADABLE FORM, OF THE RESPECTIVE SYSTEM MACROS.
      *  2.  OCR-WAIT MAY BE REQUESTED AFTER, AND ONLY AFTER, A
      *  SUCCESSFUL OCR-READ-OVERLAPPED REQUEST.  NO INTERVENING
      *  I/O COMMANDS WILL BE ALLOWED ON THAT SAME FILE.
      *  3.  THE PROCEDURES PROVIDED BELOW AUTOMATICALLY FILL IN
      *  THE OCR-OPERATION FIELD, CALL THE SUBROUTINE, AND TEST
      *  THE OCR-STATUS-KEY AFTER RETURN.  IF ANY EXCEPTIONAL
      *  CONDITIONS OCCUR, THEY PASS CONTROL TO THE ROUTINE
      *  OCR-EXCEPTION-ROUTINE, WHICH THE PROGRAMMER MUST PROVIDE.
      *  THE PROGRAMMER MAY AVOID EXCEPTION ROUTINE INVOCATION BY
      *  ADDING THE FOLLOWING PHRASE TO THE COPY STATEMENT:
      *         REPLACING OCR-EXCEPTION-ROUTINE BY OCR-CALL-EXIT
      *  4.  ALTHOUGH OCR-STATUS-KEY MAY INDICATE THAT THE DESIRED
      *  OPERATION WAS SUCCESSFUL, THE VALIDITY OF THE DATA OBTAINED
      *  SHOULD BE DETERMINED BY TESTING OCRH-LINE-STATUS.
      ******************************************************************
       OCR-3886-PROCEDURES.
       OCR-OPEN.
           MOVE 'OPEN ' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-CLOSE.
           MOVE 'CLOSE' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-READ.
           MOVE 'READ ' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-READ-OVERLAPPED.
           MOVE 'READO' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-WAIT.
           MOVE 'WAIT ' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-MARK-LINE.
           MOVE 'MARKL' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-MARK-DOCUMENT.
           MOVE 'MARKD' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-EJECT.
           MOVE 'EJECT' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-SET-DEVICE.
           MOVE 'SETDV' TO OCR-OPERATION OF OCR-FILE.
           PERFORM OCR-CALL THRU OCR-CALL-EXIT.
       OCR-CALL.
           CALL 'ILBOOCR0' USING OCR-FILE.
           IF NOT OCRS-SUCCESSFUL OF OCR-FILE,
               GO TO OCR-EXCEPTION-ROUTINE.
       OCR-CALL-EXIT. EXIT.
      ********** END OF 3886 PROCEDURE DIVISION COPY MEMBER *********
