         MACRO -- $MODNTRY -- PROVIDE ENTRY TO HASP SEGMENT             MACK0130
&SEG  $MODNTRY &CSECT=NO,&BASE=BASE2,&ENTRY=YES,&EXIT=,&DOC=NO          MACK0140
         GBLC  &VERSION                                                 MACK0150
         GBLC  &MODCODE                                                 MACK0160
         LCLC  &REGS,&CODE                                              MACK0170
         LCLA  &N,&KSEG                                                 MACK0180
         AIF   ('&DOC' NE 'YES').NODOC                                  MACK0190
         SPACE 1                                                        MACK0200
*        THE CORRECT FORM IS :-                                         MACK0210
*NAME $MODNTRY <CSECT=YES | NO>    SPECIFIES WHETHER OR NOT TO GENERATE MACK0220
*                                  A CSECT STATEMENT.  DEFAULT IS NO.   MACK0230
*              <BASE=(RN,RN)>      SPECIFIES BASE REGISTERS.  DEFAULT   MACK0240
*                                  IS BASE2 ( I.E. PROGRAM ADDR'Y ).    MACK0250
*              <ENTRY=YES | NO>    SPECIFIES WHETHER OR NOT AN ENTRY    MACK0260
*                                  STATEMENT IS TO BE GENERATED.  THE   MACK0270
*                                  DEFAULT IS YES, BUT THE ENTRY IS     MACK0280
*                                  SUPPRESSED IF CSECT=YES.             MACK0290
*              <EXIT=ADDR>         NAME OF $MODRET STATEMENT TO RETURN  MACK0300
*                                  CONTROL TO CALLER IF ROUTINE UNAVAIL MACK0310
*              <DOC=NO | YES>      PRODUCE DOCUMENTATION ( DEFAULT NO ) MACK0320
         SPACE 1                                                        MACK0330
*        THE PURPOSE OF THIS MACRO IS TO PROVIDE AN ENTRY POINT TO A    MACK0340
*         MODIFICATION MAIN ROUTINE OR SEGMENT.  APPROPRIATE USING      MACK0350
*         STATEMENTS ARE GENERATED TO ESTABLISH ADDRESSABILITY FOR THE  MACK0360
*         ROUTINE AND TO THE HCT, AHCT, PCE, AND APCE.  UPON ENTRY,     MACK0370
*         ALL NECESSARY REGISTERS WILL HAVE BEEN INITIALISED BY THE     MACK0380
*         MODIFICATION ROUTINE DISPATCHER ( JES2B000 ).                 MACK0390
         SPACE 1                                                        MACK0400
*        FOR SEGMANTS, THE MACRO GENERATES CODE TO DETERMINE IF THE     MACK0410
*         ROUTINE WAS SELECTED FOR EXECUTION AT INITIALISATION TIME.    MACK0420
*         IF IT WAS NOT, THE PSW COND CODE IS SET HIGH AND CONTROL      MACK0430
*         IS RETURNED TO THE CALLING MAIN ROUTINE VIA THE APPROPRIATE   MACK0440
*         $MODRET MACRO.                                                MACK0450
         SPACE 1                                                        MACK0460
*        NOTE THAT THE NAME FIELD IS MANDATORY, AND MUST BE OF THE FORM MACK0470
*              JES2BNNN OR JES2SNNN                                     MACK0480
         SPACE 1                                                        MACK0490
.NODOC   ANOP                                                           MACK0500
&N       SETA  16                                                       MACK0510
         AIF   ('&SEG' NE '').A                                         MACK0520
         MNOTE 8,'NAME FIELD MUST BE PROVIDED'                          MACK0530
         MEXIT                                                          MACK0540
.A       AIF   (K'&SEG LT 6 OR K'&SEG GT 8).SEGERR1                     MACK0550
         AIF   ('&SEG'(1,5) EQ 'JES2B').AA                              MACK0560
         AIF   ('&SEG'(1,5) EQ 'JES2S').AA                              MACK0570
         AGO   .SEGERR2                                                 MACK0580
.SEGERR1 MNOTE 8,'NAME FIELD OF INCORRECT LENGTH'                       MACK0590
         MEXIT                                                          MACK0600
.SEGERR2 MNOTE 8,'NAME FIELD MUST BE JES2BNNN OR JES2JNNN'              MACK0610
         MEXIT                                                          MACK0620
.AA      ANOP                                                           MACK0630
&KSEG    SETA  K'&SEG                                                   MACK0640
&KSEG    SETA  &KSEG-4                                                  MACK0650
&CODE    SETC  '&SEG'(5,&KSEG)                                          MACK0660
         AIF   ('&CSECT' EQ 'YES').B                                    MACK0670
&SEG     DS    0D                  INSURE DOUBLE-WORD ALIGNMENT         MACK0680
         AIF   ('&ENTRY' NE 'YES').C                                    MACK0690
         ENTRY &SEG                PROVIDE ENTRY TO HASP SEGMENT        MACK0700
         AGO   .C                                                       MACK0710
.B       ANOP                                                           MACK0720
&SEG     CSECT                     CREATE NEW HASP CSECT                MACK0730
&N       SETA  &N+4                                                     MACK0740
.C       AIF   ('&BASE' NE 'BASE3').D                                   MACK0750
         ST    LINK,APCERETN-APCEDSCT(R7) SAVE RETURN ADDRESS           MACK0760
.*                                                                      MACK0770
.*       WE ARE CREATING AN ENTRY POINT TO A SEGMENT SO GENERATE        MACK0780
.*        CODE TO VERIFY THAT THIS MOD WAS ENABLED AT INITIALISATION TI MACK0790
.*                                                                      MACK0800
         LA    R15,$MOD&CODE       SET CORRESPONDING CODE IN R15        MACK0810
         SLL   R15,3               MULTIPLY BY 8 FOR INDEX              MACK0820
         A     R15,AHCT1RTN-AHCTDSCT(R6) GET ROUTINES CONTROL DATA      MACK0830
         TM    0(R15),MRFEXEC      IS ROUTINE 'ENABLED'                 MACK0840
         AIF   ('&EXIT' NE '').OKEXIT                                   MACK0850
         MNOTE 8,'EXIT ADDRESS MUST BE SUPPLIED FOR SEGMENT ENTRY'      MACK0860
         MEXIT                                                          MACK0870
.OKEXIT  BO    *+12                CONTINUE PROCESSING IF YES           MACK0880
         CLI   *,$$Y               $$YSET COND CODE HIGH IN THE PSW     MACK0890
         B     &EXIT               GO TO THE SEGMENT EXIT               MACK0900
&N       SETA  &N-4                                                     MACK0910
.D       ANOP                                                           MACK0920
&REGS    SETC  '&BASE'                                                  MACK0930
         AIF   ('&BASE'(1,1) NE '(').E                                  MACK0940
&REGS    SETC  '&BASE'(2,K'&BASE-2)                                     MACK0950
.E       ANOP                                                           MACK0960
         USING &SEG,&REGS          PROVIDE SEGMENT ADDRESSABILITY       MACK0970
         USING AHCTDSCT,R6         ESTABLISH AHCT ADDRESSABILITY        MACK0980
         USING APCEDSCT,R7         ESTABLISH APCE ADDRESSABILITY        MACK0990
         USING HCTDSECT,BASE1      ESTABLISH HCT ADDRESSABILITY         MACK1000
         USING PCEDSECT,SAVE       ESTABLISH PCE ADDRESSABILITY         MACK1010
         AIF   ('&BASE' NE 'BASE3' AND '&CSECT' NE 'YES').G             MACK1020
&N       SETA  &N+4                                                     MACK1030
.G       ANOP                                                           MACK1040
.*       B     *+&N                BRANCH AROUND SEGMENT IDENTIFICATION MACK1050
         B     $MOD&SYSNDX         BRANCH AROUND SEGMENT IDENTIFICATION MACK1060
.F       ANOP                                                           MACK1070
&N       SETA  &N+4-((&N+4)/8)*8                                        MACK1080
         AIF   ('&BASE' NE 'BASE3' AND '&CSECT' NE 'YES').H             MACK1090
         DC    A($MOD&CODE)        GENERATE EQUATE TO IDENTIFY MOD.     MACK1100
.H       ANOP                                                           MACK1110
         DC    CL8'&SEG'           HASP SEGMENT IDENTIFICATION          MACK1120
         AIF   ('&MODCODE' EQ 'EQUSET').I                               MACK1130
$MODCODE EQU   7                   DISPLACEMENT OF MOD IDENTIFIER       MACK1140
$MODNAME EQU   8                   DISPLACEMENT OF MOD NAME             MACK1150
&MODCODE SETC  'EQUSET'                                                 MACK1160
.I       ANOP                                                           MACK1170
         AIF   ('&CSECT' NE 'YES').END                                  MACK1180
         DC    CL8'&VERSION'       HASP VERSION NUMBER                  MACK1190
.END     ANOP                                                           MACK1200
$MOD&SYSNDX DS 0H                  CONTINUE PROCESSING                  MACK1210
         $DATE DOC=NO              CREATE TIME/DATE STAMP               MACK1220
         MEND                                                           MACK1230
