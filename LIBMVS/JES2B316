JES2B316 TITLE 'CONVERT RETPD=NNNN   - CONTROL BLOCK GENERATION MACRO DCB3160110
               EFINITIONS'                                              B3160120
*                                                                       B3160130
**** $HASPCB ****                  GENERATE HASP CONTROL BLOCKS         B3160140
*                                                                       B3160150
         MACRO                                                          B3160160
         $HASPCB &DOC=NO,&LIST=NO                                       B3160170
         GBLC  &PRINT,&GEN,&DATA                                        B3160180
         PUSH  PRINT                                                    B3160190
         PRINT &PRINT                                                   B3160200
         $TEXT LIST=&LIST          GENERATE OS TEXT DSECT               B3160210
         $KEYS LIST=&LIST          GENERATE OS TEXT KEYS                B3160220
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              B3160230
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  B3160240
         $ADCT DOC=&DOC            GENERATE HASP ADCT DSECT             B3160250
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             B3160260
         $APCE DOC=&DOC,TYPE=SPCE  GENERATE MODS SECONDARY APCE DSECT   B3160270
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              B3160280
         SPACE 1                                                        B3160290
         POP   PRINT                                                    B3160300
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           B3160310
         MEND                                                           B3160320
         TITLE 'JES2B316 - CONVERT RETPD=NNNN '                         B3160330
JES2B316 CSECT             CONVERT RETPD=NNNN  MOD PROGRAM              B3160340
         SPACE 2                                                        B3160350
*******************************************************************     B3160360
*                                                                 *     B3160370
*        PROGRAM ID. :             JES2B316                       *     B3160380
*                                                                 *     B3160390
*        DATE WRITTEN :            JUNE 1977.                     *     B3160400
*                                                                 *     B3160410
*        AUTHOR :                  J.NOLS                         *     B3160420
*                                                                 *     B3160430
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     B3160440
*                                                                 *     B3160450
*******************************************************************     B3160460
         SPACE 3                                                        B3160470
*******************************************************************     B3160480
*                                                                 *     B3160490
*        PURPOSE                                                  *     B3160500
*       ---------                                                 *     B3160510
*                                                                 *     B3160520
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.             *     B3160530
*        IT IT LOADED AT JES2 INITIALISATION UPON REQUEST VIA     *     B3160540
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS       *     B3160550
*        ENTERED VIA A $CBAL FROM THE HASP JCL CONVERSION         *     B3160560
*        PROCESSOR ROUTINE IN HASPXEQ AT STATEMENT U2110100.      *     B3160570
*                                                                 *     B3160580
*        ON ENTRY HASPXEQ HAS ESTABLISHED THE FOLLOWING           *     B3160590
*        REGISTER CONVENTIONS IN ADDITION TO NORMAL HASP USAGE:-  *     B3160600
*        R1    -->                 TEXT PREFIX                    *     B3160610
*                                                                 *     B3160620
*******************************************************************     B3160630
         EJECT                                                          B3160640
         COPY  $HASPGEN            HASP OPTIONS                         B3160650
         TITLE 'CONTROL BLOCK OPTIONS'                                  B3160660
         $SYSPARM (OFF,GEN,DATA,NO,NO)     SET DOCUMENTATION OPTIONS    B3160670
         SPACE 3                                                        B3160680
*                                                                       B3160690
*        GENERATE HASP CONTROL BLOCKS                                   B3160700
*                                                                       B3160710
         SPACE 2                                                        B3160720
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       B3160730
         TITLE 'JES2B316 - ENTRY'                                       B3160740
*********************************************************************** B3160750
*        MOD ENTRY                                                    * B3160760
*********************************************************************** B3160770
         SPACE 1                                                        B3160780
JES2B316 $MODNTRY CSECT=YES,EXIT=EXITB316,DOC=&DOC MODIFICATION ENTRY   B3160790
         SPACE 2                                                        B3160800
         USING TXTDSECT,R1         ESTABLISH TEXT PREFIX ADDRESSABILITY B3160810
         SPACE 3                                                        B3160820
APCEDSCT DSECT                                                          B3160821
         ORG   APCEUSER                                                 B3160822
B316USER DS    0CL40                                                    B3160823
         DS    0D                  ENSURE DOUBLE WORD ALIGNMENT         B3160824
B316DEC  DS    D                   DECIMAL WORK AREA                    B3160825
B316WC   DS    F                   SAVE AREA                            B3160826
         ORG                                                            B3160827
JES2B316 CSECT                                                          B3160828
         TITLE 'JES2B316 - MAIN PROCESSING ROUTINE'                     B3160830
*********************************************************************** B3160840
*        THIS ROUTINE SCANS THE TEXT OF CURRENT DD STATEMENT,         * B3160850
*         LOOKING FOR THE 'RETPD' PARAMETER AND IF FOUND; REPLACES    * B3160860
*         'RETPD' BY 'EXPDT' AND SETS AS VALUE OF 'EXPDT' THE SAME    * B3160870
*         VALUE AS 'RETPD', BUT 'EXPDT' VALUE-FIELD MUST BE FIVE      * B3160880
*         POSITIONS PADDED WITH '00000' BEFORE MOVE RIGHT OF 'RETPD'  * B3160890
*         VALUE.                                                      * B3160900
*********************************************************************** B3160910
         SPACE 1                                                        B3160920
         LA    WC,STRDKEY          POINT TO START OF TEXT STRING        B3160930
         XR    WA,WA               CLEAR WA FOR WORK                    B3160940
         XR    WB,WB               CLEAR WB FOR WORK                    B3160950
B316NEXT ICM   WA,1,1(WC)          SET WA TO NUMBER OF PARMS            B3160960
         LA    WC,2(,WC)           GET ADDRESS OF 1ST PARM (IF ANY)     B3160970
         BZ    B316GKEY            BRANCH IF NONE                       B3160980
B316FBYT ICM   WB,1,0(WC)          SET WB TO PARM LENGTH                B3160990
         BM    B316FSUB            BRANCH IF SUBPARM COUNT              B3161000
         LA    WC,0(WC,WB)          ELSE GET ADDRESS OF NEXT PARM       B3161010
B316FLUP LA    WC,1(,WC)           SKIP OVER LENGTH BYTE                B3161020
         BCT   WA,B316FBYT         BRANCH IF MORE PARMS TO SKIP         B3161030
B316GKEY CLI   0(WC),ENDK          TEST KEY TYPE                        B3161040
         BE    NORETPD             BRANCH IF END OF TEXT STRING         B3161050
         CLI   0(WC),RETPDMK        ELSE TEST FOR 'RETPD' KEY           B3161060
         BNE   B316NEXT             BRANCH IF NO                        B3161070
         B     B316CONT              ELSE CONTINUE                      B3161080
B316FSUB SL    WB,=A(X'80')        CLEAR HIGH-ORDER BIT OF SUBPARM COUN B3161090
         ALR   WA,WB               ADD SUBPARM COUNT TO PARM COUNT      B3161100
         B     B316FLUP             AND RESUME PARM FIELD SCAN          B3161110
B316CONT CLI   1(WC),1             CHECK NUMBER OF PARMS                B3161120
         BNE   NORETPD             BRANCH IF NOT EXACTLY ONE            B3161130
         IC    WB,2(WC)            GET LENGTH OF PARM                   B3161140
         CH    WB,=H'5'            IF LENGTH IS GREATER THAN FIVE,      B3161150
         BH    NORETPD              MUST BE A JCL ERROR.                B3161160
        $REGSAVE SAVE=(WB,WC)      SAVE REGISTERS BEFORE $GETAPCE       B3161170
         EJECT                                                          B3161180
******** CONT'D                                                         B3161190
         SPACE 2                                                        B3161200
         LR    WA,R1               SAVE REGISTER                        B3161210
        $GETAPCE SPCE              GET SECONDARY APCE                   B3161220
         LR    R1,WA               RESTORE REGISTER                     B3161230
         LA    WA,3(,WC)           GET ADDRESS OF PARM                  B3161240
         L     WC,APCESNXT         GET ADDRESS OF SECONDARY APCE        B3161250
         LA    WC,SPCEAREA-SPCEDSCT(,WC) ADD DISPL. OF SPCE AREA        B3161260
         LH    WB,STRLTH           LENGTH OF INTERNAL TEXT STRING       B3161270
         ALR   WB,R1               POINT 1 PAST END KEY                 B3161280
         SLR   WB,WA               LENGTH OF MOVE                       B3161290
         LA    WD,L'SPCEAREA-4     GET LENGTH OF SPCE AREA -4           B3161300
         CR    WB,WD               IF LENGTH OF MOVE IS GREATER THAN    B3161310
         BH    NORETPD              THE LENGTH OF RECEIVING FIELD -     B3161320
*                                   FORGET IT.                          B3161330
         ST    WB,0(WC)            STORE LENGTH IN THE FOUR FIRST BYTES B3161340
         LA    WC,4(,WC)           POINT 1 PAST LENGTH                  B3161350
         LR    WD,WB               LENGTH OF MOVE                       B3161360
         MVCL  WC,WA               SAVE REST OF INTERNAL TEXT           B3161370
        $REGREST                   RESTORE REGISTERS AFTER MOVE         B3161380
         EJECT                                                          B3161390
******** CONT'D                                                         B3161400
         SPACE 2                                                        B3161410
         LA    WA,5                COMPUTE                              B3161420
         SLR   WA,WB                NEW                                 B3161430
         AH    WA,STRLTH             LENGTH                             B3161440
         STCM  WA,3,STRLTH         SAVE NEW LENGTH                      B3161450
         ST    WC,B316WC           SAVE START ADDRESS OF EXPDT TEXT     B3161460
         MVC   0(XJ308LN,WC),XJ308TXT  MOVE IN NEW TEXT                 B3161470
         LA    WC,XJ308LN(,WC)     POINT 1 PAST NEW TEXT                B3161480
         SLR   WC,WB               SUBTRACT LENGTH OF 'RETPD' PARM      B3161490
         L     WA,APCESNXT         GET ADDRESS OF SECONDARY APCE        B3161500
         LA    WA,SPCEAREA-SPCEDSCT(,WA) ADD DISPL. OF SPCE AREA        B3161510
         L     WB,0(WA)            LENGTH OF MOVE                       B3161520
         LR    WD,WB               LENGTH OF MOVE                       B3161530
         LA    WA,4(,WA)           POINT 1 PAST LENGTH OF MOVE          B3161540
         MVCL  WC,WA               RESTORE REST OF INTERNAL TEXT        B3161550
         L     WD,B316WC           POINT WD TO START OF EXPDT TEXT      B3161560
         LA    WA,3(,WD)           GET ADDRESS OF 1ST EXPDT POS.        B3161561
         LA    WB,5                ESTABLISH LOOP                       B3161562
TESTNUM  CLI   0(WA),C'0'          IS THIS CHARACTER < 0 ?              B3161563
         BL    B316RTYS            YES, NO CONVERSION                   B3161564
         CLI   0(WA),C'9'          IS THIS CHARACTER > 9 ?              B3161565
         BH    B316RTYS            YES, NO CONVERSION                   B3161566
         LA    WA,1(,WA)           INCREMENT POINTER                    B3161567
         BCT   WB,TESTNUM          GO TEST NEXT CHARACTER               B3161568
         PACK  B316DEC,3(5,WD)     PACK EXPDT VALUE                     B3161570
         CVB   WA,B316DEC          CONVERT EXPDT TO BINARY              B3161580
         SRDA  WA,32(0)            PREPARE TO DIVIDE                    B3161590
         D     WA,=F'5'            DIVIDE WORKING-DAYS VALUE BY 5       B3161600
         LTR   WB,WB               QUOTIENT (WEEKS) = 0 ?               B3161610
         BNZ   *+8                 NO, SKIP NEXT INSTRUCTION            B3161620
         AH    WA,=H'2'            ADD 2 TO REMAINDER                   B3161630
         LR    WC,WA               SAVE VALUE OF WA                     B3161640
         SR    WA,WA               ZEROISE WA                           B3161650
         M     WA,=F'7'            MULTIPLY WEEK(S) BY 7 (DAYS)         B3161660
         AR    WB,WC               ADD REMAINDER OF DIVISION            B3161670
         CVD   WB,B316DEC          CONVERT TO BINARY AND                B3161680
         UNPK  3(5,WD),B316DEC+5(3) UNPACK NEW EXPDT VALUE              B3161690
         OI    7(WD),X'F0'         FORCE SIGN TO 'F'                    B3161700
B316RTYS MVI   APCE$$X,$$X         SET CONDITION CODE TO 'YES'          B3161710
         B     EXITB316             AND GO TO EXIT                      B3161720
         SPACE 2                                                        B3161730
NORETPD  MVI   APCE$$X,$$Y         NOT 'RETPD=NNNN ' SET CONDITION CODE B3161740
         B     EXITB316             TO 'NO' AND GO TO EXIT              B3161750
         SPACE 2                                                        B3161760
*              DEFINE EXPDT=00000 IN INTERNAL TEXT                      B3161770
XJ308TXT DC    AL1(EXPDTMK),X'01',X'05',C'00000'                        B3161780
XJ308LN  EQU   *-XJ308TXT          DEFINE LENGTH OF TEXT                B3161790
         TITLE 'JES2B316 - EXIT'                                        B3161800
         SPACE 1                                                        B3161810
*********************************************************************** B3161820
*        MOD EXIT                                                     * B3161830
*********************************************************************** B3161840
         SPACE 1                                                        B3161850
EXITB316 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  B3161860
         SPACE 2                                                        B3161870
         LTORG                                                          B3161880
         SPACE 1                                                        B3161890
         END                                                            B3161900
