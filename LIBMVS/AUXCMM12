//AUXCMM12 JOB (1586,5),'** FOR J. NOLS **',CLASS=N
//STEP01       EXEC GENASMOD
         TITLE 'MVS/VM HANDSHAKING ROUTINE'
***********************************************************************
*                      A U X C M M 1 2                                *
*                                                                     *
*        THIS ROUTINE, WHICH IS RESIDENT AS PART OF THE NUCLEUS,IS    *
*        DESIGNED TO HANDLE PSEUDO PAGE FAULTS GENERATED BY VM.       *
*          WHEN A PAGE FAULT OCCURS, VM DETERMINES IF IT IS A VIRTUAL *
*        PAGE FAULT (I.E. TO BE HANDLED BY MVS) OR A 'REAL' PAGE      *
*        FAULT TO BE HANDLED BY VM ITSELF.                            *
*          IN THE LATTER CASE, THE MVS MACHINE WOULD NORMALLY BE      *
*        MADE TO WAIT UNTIL THE PAGE IS BROUGHT INTO CORE, THUS       *
*        PREVENTING MVS GIVING CONTROL TO ANOTHER JOB.                *
*          IF THE VM COMMAND 'SET PAGEX ON' IS ISSUED HOWEVER,        *
*        VM WILL PASS CONTROL BACK TO THE VIRTUAL MACHINE WITH A      *
*        PSEUDO PAGE FAULT INSTEAD OF MAKING IT WAIT. THIS ROUTINE    *
*        TRAPS SUCH PAGE FAULTS AND ALLOWS MVS TO DISPATCH OTHER WORK.*
*                                                                     *
*        ATTRIBUTES. REENTRANT,REUSABLE AUTHORISED.                   *
*                                                                     *
*                                                                     *
*        REGISTER USAGE.                                              *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        EQUATES USED IN THIS MODULE                                  *
***********************************************************************
         SPACE 2
OFFSET   EQU   X'104'-X'1C'        OFFSET TO ZAP AREA
IEAVSUSP EQU   X'826'-X'1C'        OFFSET TO IEAVSUSP
IEAVRSET EQU   X'954'-X'1C'        OFFSET TO IEAVRSET
         EJECT
***********************************************************************
*        DSECTS USED IN THIS MODULE                                   *
***********************************************************************
         SPACE 2
XSA      DSECT ,                   FORMAT OF EXTENDED SAVE AREA
XSAP     DS    F                   PTR TO XCTL NAME
XSAD     DS    F                   DCB POINTER
XSAX     DS    D                   XCTL NAME
XSAE     DS    0C                  ERROR CODE FOR IEE0503D
XSAR     DS    F                   ADDRESS OF PARM LIST
XSAN     DS    0C                  VERB INDEX
XSAL     DS    F                   PTR TO LIST POSITION
XSAVERB  DS    D                   VERB ENTERED BY OPERATOR
XSAS     DS    D                   TEMPORARY SAVE AREA
XSAU     DS    C                   UCM ENTRYINDICATOR
         DS    C                   RESERVED
XSAJ     DS    H                   TJID ENTRY INDICATOR
         SPACE 2
WKAREA   DSECT ,                   INTERNAL WORK AREA
         DS    18F                 REGISTER SAVE AREA
CHAINHDR DS    F                   ADDRESS OF OUTPUT CHAIN
WKLEN    EQU   *-CHAINHDR          LENGTH OF AREA FOR ZCSECT
         SPACE 2
SAVENTRY DSECT ,                   PSEUDO PAGE FAULT SAVE AREA
SAVEADDR DS    F                   ADDRESS OF PSEUDO PAGE FAULT
SAVEREGS DS    2F                  SAVE AREA FOR PARAMETER REGISTERS
SAVEFLG  DS    0XL1                FLAG FIELD
ACTIVE   EQU   X'80'               ENTRY IS ACTIVE
SAVER14  DS    F                   SAVE AREA FOR SRB LINK REGISTER
XSRB     DS    2F                  START OF SRB TO BE SCHEDULED
SAVEASCB DS    F                   ADDRESS OF THE ASCB
         DS    8F                  REST OF SRB TO BE SCHEDULED
         SPACE 2
         PRINT NOGEN
         IHAPSA
         CVT
         IHASRB
         IHALCCA
         IHAASCB
         IKJTCB
         IKJRB
         PRINT GEN
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
AUXCMM12 ZCSECT GETMAIN=1,WKLEN=WKLEN
         USING WKAREA,REG13        ADDRESSABILITY FOR WORK AREA
         USING PSA,0               SHOW PSA ALWAYS AT LOCATION 0
         LA    REG9,CHAINHDR       LOAD ADDRESS OF OUTPUT CHAIN
         SPACE 2
         EJECT
***********************************************************************
*        ANALYSE INPUT PARAMETERS & DETERMINE LENGTH                  *
***********************************************************************
         SPACE 2
         USING XSA,REG2            ADDRESSABILITY FOR EXTENDED S/A
         L     REG8,XSAL           LOAD ADDRESS INPUT PARMS
         CLI   0(REG8),C'?'        REQUEST FOR INFORMATION ?
         BE    AUXCMMZZ            YES. GO SUPPLY IT
         CLC   ON,0(REG8)          TURN ON THE HANDSHAKE ?
         BE    INITIAL             YES. GO INITIALISE THE HANDSHAKE
         CLC   OFF,0(REG8)         REQUEST TO TURN IT OFF ?
         BE    RELEASE             YES. GO DO SO.
         B     ERROR               PARAMETER NOT RECOGNISED OR MISSING
         SPACE 2
ON       DC    C'ON'
OFF      DC    C'OFF'
         EJECT
***********************************************************************
*        INITIAL TESTS TO SEE IF HANDSHAKE IS ALREADY ACTIVE          *
***********************************************************************
         SPACE 2
INITIAL  DS    0H
         CLI   SPECIAL,X'FF'       HAS SPECIAL FLAG BEEN SET
         BE    ERRORX              YES. I AM ALREADY ACTIVE. TUT
         MVI   SPECIAL,X'FF'       SET THE FLAG ON.
         B     SETUP               BRANCH TO NEXT ROUTINE
         SPACE 2
SPECIAL  DC    X'00'               LOGIC FLAG TO PREVENT RECURRSION
         EJECT
***********************************************************************
*        LOCATE PROGRAM CHECK INT HANDLER AND SET UP FOR PSEUDO P/F   *
***********************************************************************
         SPACE 2
SETUP    DS    0H
         L     REG1,FLCPNPSW+4     LOAD ADDRESS OF P/C INT HANDLER
         LA    REG1,OFFSET(REG1)   LOAD ADDRESS OF REQUIRED INSTRUCTION
         CLC   CODE,0(REG1)        TEST FOR CORRECT CODE
         BNE   ERRORY              NO. MUST HAVE MADE A MISTAKE
         MVC   0(L'SUBS,REG1),SUBS  HANDSHAKE IS NOW IN ACTION.
         B     TELLHIM             GO INFORM OPERATOR OF THIS FACT
         SPACE 2
CODE     DC    X'58F0958205EF47060101' CODE TO BE REPLACED IN PCIH
SUBS     DS    CL(L'CODE)          SUBSTITUTION CODE
         ORG   SUBS
         L     REG15,X'E4'(,REG9)  LOAD ADDRESS OF ME
         BALR  REG14,REG15         LINK TO THIS ROUTINE
         DC    X'47'               NOP TO CONTAIN ADDRESS
         DC    AL3(ENTRY)          ENTRY POINT OF THIS ROUTINE
         ORG
         EJECT
***********************************************************************
*        HANDSHAKING IS INITIALISED. TELL OPERATOR                    *
***********************************************************************
         SPACE 2
TELLHIM  DS    0H
         LA    REG6,TELLTEXT       LOAD ADDRESS OF THE MESSAGE
         LA    REG4,L'TELLTEXT     LOAD LENGTH OF THE MESSAGE
         BAL   REG11,LOADIT        GO LOAD UP THE MESSAGE
         B     DOOUTPUT            OUTPUT THE MESSAGE AND RETURN
         SPACE 2
TELLTEXT DC    C'**** MVS/VM HANDSHAKING INITIALISED ****'
         EJECT
***********************************************************************
*        HANDSHAKING IS TO BE TERMINATED                              *
***********************************************************************
         SPACE 2
RELEASE  DS    0H
         CLI   SPECIAL,X'FF'       IS IT ON ANYWAY ??
         BNE   ERRORZ              NO. CANT TURN IT OFF THEN
         L     REG1,FLCPNPSW+4     LOAD ADDRESS OF PC INT HANDLER
         LA    REG1,OFFSET(REG1)   LOAD ADDRESS OF SUBS CODE
         MVC   0(L'CODE,REG1),CODE REPLACE THE CORRECT CODE
         MVI   SPECIAL,0           RESET ACTIVE FLAG
         B     TELLEM2             HANDSHAKING STOPPED. GO TELL
         EJECT
***********************************************************************
*        INFORM THE OPERATOR THE HANDSHAKING IS TERMINATED            *
***********************************************************************
         SPACE 2
TELLEM2  DS    0H
         LA    REG6,OFFMSG         LOAD ADDRESS OF THE MESSAGE
         LA    REG4,L'OFFMSG       LOAD LENGTH OF THE MESSAGE
         BAL   REG11,LOADIT        GO LOAD UP THE TEXT
         B     DOOUTPUT            GO OUTPUT MESSAGE AND RETURN
         SPACE 2
OFFMSG   DC    C'**** MVS/VM HANDSHAKING TERMINATED ****'
         EJECT
***********************************************************************
*        COMMON PROGRAM EXIT                                          *
***********************************************************************
         SPACE 2
ERROR    LA    REG15,4             SHOW INVALID PARAMETER
EXITPGM  DS    0H
         ZRETURN RC=(15)
         EJECT
***********************************************************************
*        ERROR PREPARATION ROUTINES                                   *
***********************************************************************
         SPACE 2
ERRORX   BAL   REG6,ERRORS         LOAD ADDRESS OF THE LINE
ERRLINE  DC    C'**** MVS/VM HANDSHAKING IS ALREADY ACTIVE          '
         SPACE 2
ERRORY   DS    0H
         MVI   SPECIAL,0           MAKE SURE FLAG IS OFF
         BAL   REG6,ERRORS         LOAD ADDRESS ERROR MESSAGE
         DC    C'PCIH FAILS TO CORRESPOND WITH EXPECTED FORMAT      '
         SPACE 2
ERRORZ   BAL   REG6,ERRORS         LOAD ADDRESS OF MESSAGE
         DC    C'MVS/VM HANDSHAKING NOT ACTIVE                      '
         SPACE 2
ERRORS   LA    REG4,L'ERRLINE      LOAD LENGTH OF ERROR MESSAGES
         BAL   REG11,LOADIT        LOAD ERROR MESSAGE IN BUFFER
         B     DOOUTPUT            GO OUTPUT MESSAGE AND RETURN
         EJECT
***********************************************************************
*                                                                     *
*        AUXCMMZZ IS THE QUERY ROUTINE FOR MONSANTO OPERATOR          *
*        COMMANDS. IF A '?' IS ENTERED INTO THE CONSOLE, THIS         *
*        ROUTINE IS INVOKED TO LIST OF ALL THE OPERANDS AVAILABLE     *
*        TO THE OPERATOR AND THEIR FUNCTION.                          *
*                                                                     *
***********************************************************************
         SPACE 2
AUXCMMZZ DS    0H
         LA    REG6,LINE1          LOAD ADDRESS OF FIRST LINE
         LA    REG4,L'LINE1        LOAD LENGTH OF EACH LINE
         LA    REG5,LASTLINE       LOAD ADDRESS OF LAST LINE
ZZLOOP   BAL   REG11,LOADIT        GO LOAD UP THIS OUTPUT LINE
         BXLE  REG6,REG4,ZZLOOP    LOOP FOR ALL OUTPUT TEXT
         B     DOOUTPUT            GO OUTPUT THE TEXT
         SPACE 2
LINE1    DC    C'HANDSHAK -  ENTER ''ON'' TO START MVS/VM HANDSHAKE'
LINE2    DC    C'HANDSHAK -  ENTER ''OFF'' TO TERMINATE IT         '
LINE3    DC    C'  IF HANDSHAKING IS INITIALISED SUCCESSFULLY,     '
LASTLINE DC    C'  ENTER THE VM COMMAND ''#CP SET PAGEX ON''       '
         EJECT
***********************************************************************
*        LOAD UP A TEXT LINE INTO AN OUTPUT BUFFER AREA               *
***********************************************************************
         SPACE 2
LOADIT   DS    0H
         LOADMSG DATA=(REG6),LENGTH=(REG4),TYPE=D
         ST    REG1,0(REG9)        CHAIN THIS ELEMENT TO OTHERS
         LR    REG9,REG1           LOAD ADDRESS OF THE LAST ELEMENT
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        THE OUTPUT IS PREPARED. CALL THE WTO ROUTINE                 *
***********************************************************************
         SPACE 2
DOOUTPUT DS    0H
         LOADMSG DATA=ENDLINE,LENGTH=L'ENDLINE,TYPE=E
         ST    REG1,0(REG9)        CHAIN THIS ELEMENT TO THE OTHERS
         USING XSA,REG2            ADDRESSABILITY FOR EXT. SAVE AREA
         OUTPUT CHAINHDR,UCMID=XSAU OUTPUT THE PREPARED CHAIN
         B     EXITPGM             RETURN TO CALLER
         SPACE 2
ENDLINE  DC    C'  END OF PROCESSING'
         EJECT
***********************************************************************
*        INITIAL ENTRY FROM PC INTERRUPT HANDLER                      *
***********************************************************************
         SPACE 2
ENTRY    DS    0F
         DROP  REG12               RELEASE ADDRESSABILITY
         USING LCCA,REG7           ADDRESSABILITY FOR LCCA
         USING *,REG15             INITIAL ADDRESSABILITY
         L     REG7,PSALCCAV       LOAD ADDRESS OF LCCA
         CLI   LCCAPINT+3,X'14'    IS THIS A PSEUDO INTERRUPT ?
         BNE   0(REG14)            NO. RETURN IMMEDIATELY
         STM   REG0,REG15,PCIHREGS SAVE ALL INCOMING REGISTERS
         DROP  REG15               RELEASE TEMPORARY ADDRESSABILITY
         BALR  REG12,0             SET UP NEW BASE REGISTER
         USING *,REG12             ADDRESSABILITY FROM HERE ON
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,              X
               RELATED=('ENSURE INTEGRITY OF THIS CODE')
         TM    LCCAPVAD,X'80'      SUSPEND OR RESUME NEEDED ?
         BO    RESUME              RESUME. GO DO IT
         B     SUSPEND             GO SUSPEND THIS USER
         EJECT
***********************************************************************
*        PROGRAM MUST BE SUSPENDED. FIND OUT WHAT HE LOOKS LIKE       *
***********************************************************************
         SPACE 2
SUSPEND  DS    0H
         L     REG2,SAVEFREE       LOAD ADDRESS OF NEXT FREE BLK
         L     REG1,0(REG2)        LOAD ADDRESS OF ONE AFTER THAT
         CS    REG2,REG1,SAVEFREE  ATTEMPT TO UPDATE CHAIN
         BNE   *-8                 FAILED. TRY AGAIN
         USING SAVENTRY,REG2       ADDRESSABILITY FOR SAVE ELEMENT
         MVC   SAVEADDR,LCCAPVAD   SAVE ADDRESS OF FAULT
         L     REG1,PSAAOLD        LOAD ADDRESS OF ASCB
         ST    REG1,SAVEASCB       SAVE ADDRESS OF ASCB
         OI    SAVEFLG,ACTIVE      SHOW THAT ENTRY IS ACTIVE
         EJECT
***********************************************************************
*        PASS CONTROL TO THE SUSPEND ROUTINE                          *
***********************************************************************
         SPACE 2
SUSPRTN  DS    0H
         L     REG15,FLCPNPSW+4    LOAD START ADDRESS INT HNDLR
         LA    REG15,IEAVSUSP(REG15) ADD OFFSET TO THE ROUTINE
         LA    REG13,SAVEAREA      LOAD ADDRESS OF SAVE AREA
         BALR  REG14,REG15         LINK TO THE ROUTINE
         STM   REG4,REG5,SAVEREGS  SAVE PARAMETER REGISTERS
         B     DSPTCHER            RETURN TO THE DISPATCHER
         EJECT
***********************************************************************
*        THE ACTIVE WORK IS SUSPENDED. PASS CONTROL TO DISPATCHER     *
***********************************************************************
         SPACE 2
DSPTCHER DS    0H
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,DISABLED,                X
               RELATED=('FREE GLOBAL LOCK BEFORE ENTERING DISPATCHER')
         L     REG1,16             LOAD ADDRESS OF CVT
         USING CVTMAP,REG1         ADDRESSABILITY FOR CVT
         L     REG6,CVT0DS         LOAD ADDRESS OF DISPATCHER
         L     REG8,PSATOLD        LOAD SECOND PART OF TCB WORDS
         LTR   REG8,REG8           TASK SWITCH INDICATED ?
         BZ    CALLIT              YES. BRANCH DIRECTLY TO DISPATCHER
         MVC   LCCAITOD(8),PSAPCPSW RESET THE CLOCK
CALLIT   NI    PSASUP1,255-PSAPI   TURN OFF FOOTPRINT FLAG
         BR    REG6                BRANCH TO DISPATCHER
         EJECT
***********************************************************************
*        THE PREVIOUSLY SUSPENDED TASK MUST BE RESTARTED              *
***********************************************************************
         SPACE 2
RESUME   DS    0H
         L     REG8,LCCAPVAD       LOAD ADDRESS OF FAULT
         LA    REG8,0(REG8)        TURN OFF THE TOP BIT
         USING SAVENTRY,REG2       ADDRESSABILITY FOR SAVE TABLE
         LA    REG2,SAVETABL       LOAD ADDRESS OF SAVE STATUS TABLE
         LA    REG3,SAVEEND        LOAD ADDRESS OF END OF TABLE
SAVELOOP TM    SAVEFLG,ACTIVE      ENTRY ACTIVE ?
         BZ    LOOPENDS            NO. FETCH NEXT TABLE ENTRY
         C     REG8,SAVEADDR       IS THIS THE SAME ADDRESS ?
         BE    FOUNDIT             YES. THIS IS SUSPEND DATA
LOOPENDS LA    REG2,SAVELNTH(REG2) STEP TO NEXT ENTRY
         CR    REG2,REG3           END OF TABLE ?
         BL    SAVELOOP            NO. LOOP FOR EACH ENTRY
NOTTHERE DS    0H
         ABEND 4095,DUMP,,SYSTEM   PANIC. ABEND ANYTHING IN SIGHT
         EJECT
***********************************************************************
*        THE SUSPENDED TASK DETAILS ARE FOUND                         *
***********************************************************************
         SPACE 2
FOUNDIT  DS    0H
         MVI   SAVEADDR,X'FF'      SHOW ENTRY AS SCHEDULED
         LA    REG1,XSRB           LOAD ADDRESS OF SRB
         USING SRB,REG1            ADDRESSABILITY FOR THE SRB
         MVC   SRBID,XSRBID        MOVE IN SRBID
         OI    SRBPRIOR,SRBPNONQ   SET NON QUIESCABLE PRIORITY
         DROP  REG1                RELEASE ADDRESSABILITY
         SCHEDULE SRB=(1),SCOPE=GLOBAL SCHEDULE WITH HIGH PRIORITY
         TM    LCCAPPSW+1,X'02'    WAS MACHINE IN A WAIT STATE
         BO    DSPTCHER            YES. GO GIVE IT A KICK
         B     RESTART             GIVE DISPATCHER A CHANCE
         SPACE 2
XSRBID   DC    C'SRB',X'00'        SRBID FOR CTL BLOCK
         EJECT
***********************************************************************
*        SEE IF THE CURRENT ADDRESS IS PRE-EMPTIBLE                   *
***********************************************************************
         SPACE 2
RESTART  DS    0H
         TM    LCCADSF2,LCCASRBM+LCCAGSRB SRB MODE ?
         BNZ   EXITXX              YES. RETURN TO CALLER
         SETLOCK TEST,TYPE=LOCAL,BRANCH=(HELD,EXITXX)           LOCKS ?
         TM    PSASUP1,255-PSAPI   ARE WE IN BASIC SUPERVISOR ?
         BNZ   EXITXX              YES. RETURN TO IT IMMEDIATELY
         XC    PSAANEW,PSAANEW     TELL DISPATCHER TO START AT TOP OF Q
         L     REG1,PSATOLD        LOAD ADDRESS OF OLD TCB
         USING TCB,REG1            ADDRESSABILITY FOR IT
         L     REG15,TCBRBP        LOAD ADDRESS OF CURRENT RB
         USING RBSECT,REG15        ADDRESSABILITY FOR IT
         MVC   TCBGRS(64),LCCAPGR2 SAVE THE CURRENT TASK'S STATUS
         MVC   RBOPSW(8),LCCAPPSW  SAVE RESUME PSW
         B     DSPTCHER            INVOKE THE DISPATCHER
         EJECT
***********************************************************************
*        RETURN CONTROL TO THE PCIH                                   *
***********************************************************************
         SPACE 2
EXITXX   DS    0H
         NI    LCCAPINT+3,X'FF'-X'3F'  CLEAR PROGRAM CHECK IRRPT
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,DISABLED,                X
               RELATED=('FREED READY FOR RETURN TO PCIH')
         LM    REG0,REG15,PCIHREGS RESTORE ALL HIS REGISTERS
         BR    REG14               RETURN TO CALLER
         SPACE 2
PCIHREGS DS    16F'0'              REGISTER SAVE AREA
SAVEAREA DS    16F'0'              SAVE AREA FOR SUSPEND/RESUME
         EJECT
***********************************************************************
*        INVOKE IEAVRSET TO RESTART THE ADDRESS SPACE                 *
***********************************************************************
         SPACE 2
SCHRESUM DS    0H
         PUSH  USING               SAVE ADDRESSABILITY
         USING *,12                SET UP ADDRESSABILITY FOR SRB RTN
         LR    REG12,REG15         LOAD BASE ADDRESS REGISTER
         LR    REG2,REG0           LOAD ADDRESS OF SRB ITSELF
         LA    REG2,0(REG2)        MAKE SURE TOP BYTE IS CLEAR
         XC    0(4,REG2),0(REG2)   RESET ID FIELD
         LA    REG15,XSRB-SAVEADDR LOAD LENGTH OF PREFIX TO SAVE BLK
         SR    REG2,REG15          LOAD START ADDRESS OF SAVE BLOCK
         LM    REG4,REG5,0(REG1)   LOAD PARAMETER REGISTERS
         XR    REG6,REG6           CLEAR ERROR REGISTER
         STCM  REG14,7,SAVER14+1   SAVE LINK REGISTER
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,              X
               RELATED=('READY TO ENTER IEAVRSET')
         L     REG15,FLCPNPSW+4    LOAD ADDRESS OF PCIH
         LA    REG15,IEAVRSET(REG15) LOAD ADDRESS OF REQD ROUTINE
         LA    REG13,SRBSREGS      LOAD ADDRESS OF A REGISTER SAVE AREA
         BALR  REG14,REG15         BRANCH TO THE ROUTINE
         MVI   SAVEFLG,0           SHOW ENTRY NOW INACTIVE
         L     REG1,SAVEFREE       LOAD CURRENT CHAIN HEADER
         ST    REG1,0(REG2)        UPDATE THIS BLOCK TO ADDRESS IT
         CS    REG1,REG2,SAVEFREE  ATTEMPT TO UPDATE THE CHAIN
         BNE   *-8                 FAILED. TRY AGAIN
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,DISABLED,                X
               RELATED=('PROCESSING DONE. RETURN TO DISPATCHER')
         L     REG14,SAVER14       RELOAD LINK REGISTER
         XR    REG15,REG15         CLEAR RETURN REGISTER.
         BR    REG14               RETURN TO DISPATCHER
         POP   USING               RESTORE NORMAL ADDRESSABILITY
         SPACE 2
SRBSREGS DC    16F'0'              SAVE AREA FOR IEAVRSET'S REGISTERS
         EJECT
***********************************************************************
*        POOL OF PSEUDO PAGE FAULT SAVE AREAS                         *
***********************************************************************
         SPACE 2
SAVEFREE DC    A(SAVETABL)         ADDRESS OF FIRST FREE BLOCK
SAVETABL DS    0F                  START OF POOL
SAVELNTH EQU   60                  LENGTH OF EACH TABLE ENTRY
         DC    30A(*+SAVELNTH,0,0,0,0,0,0,0,0,SCHRESUM,0,*-40,0,0,0)
SAVEEND  EQU   *                   END OF POOL
         DC    F'-1'               FORCE ABENDS IF TABLE SHORT
         EJECT
         LTORG
         END
//LKED.SYSIN   DD   *
 INCLUDE MLPALIB(AUXCMM00)
 ENTRY AUXCMM12
 SETCODE AC(1)
 NAME AUXCMM12(R)
/*
