JES2S308 TITLE 'CONVERT UNIT=INTRDR  - CONTROL BLOCK GENERATION MACRO DCST308052
               EFINITIONS'                                              ST308056
*                                                                       ST308060
**** $HASPCB ****                  GENERATE HASP CONTROL BLOCKS         ST308064
*                                                                       ST308068
         MACRO                                                          ST308072
         $HASPCB &DOC=NO,&LIST=NO                                       ST308076
         GBLC  &PRINT,&GEN,&DATA                                        ST308080
         PUSH  PRINT                                                    ST308084
         PRINT &PRINT                                                   ST308088
         $TEXT LIST=&LIST          GENERATE OS TEXT DSECT               ST308092
         $KEYS LIST=&LIST          GENERATE OS TEXT KEYS                ST308096
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              ST308100
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  ST308104
         $ADCT DOC=&DOC            GENERATE HASP ADCT DSECT             ST308108
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             ST308112
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              ST308116
         SPACE 1                                                        ST308120
         POP   PRINT                                                    ST308124
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           ST308128
         MEND                                                           ST308132
         TITLE 'JES2S308 - CONVERT UNIT=INTRDR'                         ST308136
JES2S308 CSECT             CONVERT UNIT=INTRDR MOD PROGRAM              ST308140
         SPACE 2                                                        ST308144
*******************************************************************     ST308148
*                                                                 *     ST308152
*        PROGRAM ID. :             JES2S308                       *     ST308156
*                                                                 *     ST308160
*        DATE WRITTEN :            APRIL/MAY 1977.                *     ST308164
*                                                                 *     ST308168
*        AUTHOR :                  J.NOLS                         *     ST308172
*                                                                 *     ST308176
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     ST308180
*                                                                 *     ST308184
*******************************************************************     ST308188
         SPACE 3                                                        ST308192
*******************************************************************     ST308196
*                                                                 *     ST308200
*        PURPOSE                                                  *     ST308204
*       ---------                                                 *     ST308208
*                                                                 *     ST308212
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.             *     ST308216
*        IT IT LOADED AT JES2 INITIALISATION UPON REQUEST VIA     *     ST308220
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS       *     ST308224
*        ENTERED VIA A $CBAL FROM THE HASP JCL CONVERSION         *     ST308228
*        PROCESSOR ROUTINE IN HASPXEQ AT STATEMENT U2114500.      *     ST308232
*                                                                 *     ST308236
*        ON ENTRY HASPXEQ HAS ESTABLISHED THE FOLLOWING           *     ST308240
*        REGISTER CONVENTIONS IN ADDITION TO NORMAL HASP USAGE:-  *     ST308244
*        R1    -->                 TEXT PREFIX                    *     ST308248
*                                                                 *     ST308252
*******************************************************************     ST308256
         EJECT                                                          ST308260
*********************************************************************** ST308264
*        LIST OF THE ASSEMBLER CARDS RECEIVED FROM ST LOUIS           * ST308268
*********************************************************************** ST308272
         SPACE 1                                                        ST308276
*./      CHANGE NAME=HASPXEQ                                     *J308* ST308280
*        BO    XJCTLOC             BR IF SO             *J308* U2118210 ST308284
*./      DELETE SEQ1=U2120000,SEQ2=U2124000                      *J308* ST308288
*        TM    STRDINDC,DTXSYSIN   TEST FOR SYSIN       *J308* U2158210 ST308292
*        BNO   XJCLMONS            IF NOT, DO MONS DD PROCESSING *J308* ST308296
*        B     XJCLXIT2            EXIT                 *J308* U2360100 ST308300
*XJCLMONS NULL            DEFINE COMMON ENTRY LABEL     *J308* U2360110 ST308304
*********************************************************J308* U2360210 ST308308
**                                                               *J308* ST308312
**  (2) IT SCANS THE TEXT LOOKING FOR THE 'UNIT' PARAMETER       *J308* ST308316
**       AND IF FOUND CHECKS FOR SPECIFICATION OF 'INTRDR'.      *J308* ST308320
**       IF SO, IT IS CHANGED TO 'SYSOUT=(A,INTRDR)'             *J308* ST308324
**                                                      *J308* U2360310 ST308328
**       SCAN FOR 'UNIT=INTRDR' AND CHANGE IF FOUND              *J308* ST308332
**                                                               *J308* ST308336
*XJCLJ308 NULL                     DEFINE ENTRY LABEL            *J308* ST308340
*        USING TXTDSECT,R1                                       *J308* ST308344
*        ICM   R15,8,=AL1(UNITK)   GET 'UNIT' KEY                *J308* ST308348
*        LA    WE,STRDKEY          POINT TO START OF TEXT STRING *J308* ST308352
*        BAL   WD,XINTKEY          TRY TO LOCATE KEY             *J308* ST308356
*        BZ    XJ308XIT            BRANCH IF NOT FOUND           *J308* ST308360
*        CLI   1(WE),1             CHECK NUMBER OF PARMS         *J308* ST308364
*        BNE   XJ308XIT            BRANCH IF NOT EXACTLY ONE     *J308* ST308368
*        CLI   2(WE),6             CHECK LENGTH OF PARM          *J308* ST308372
*        BNE   XJ308XIT            CAN'T BE INTRDR IF NOT 6      *J308* ST308376
*        CLC   XJINTRDR,3(WE)      IS IT 'INTRDR' ?              *J308* ST308380
*        BNE   XJ308XIT            BRANCH IF NOT                 *J308* ST308384
*        LA    WA,9(,WE)           POINT 1 PAST TEXT             *J308* ST308388
*        LH    WB,STRLTH           LENGTH OF INTERNAL TEXT STRING*J308* ST308392
*        ALR   WB,R1               POINT 1 PAST END KEY          *J308* ST308396
*        SLR   WB,WA               LENGTH OF MOVE                *J308* ST308400
*        LR    WF,WB               LENGTH OF MOVE                *J308* ST308404
*        MVCL  WE,WA               SHIFT DOWN INTERNAL TEXT      *J308* ST308408
*        BCTR  WE,0                POINT TO END KEY              *J308* ST308412
*        MVC   0(XJ308LN,WE),XJ308TXT  MOVE IN NEW TEXT          *J308* ST308416
*        LA    WE,XJ308LN(,WE)     COMPUTE NEW                   *J308* ST308420
*        SLR   WE,R1                 LENGTH                      *J308* ST308424
*        STCM  WE,3,STRLTH         SAVE NEW LENGTH               *J308* ST308428
*        OI    STRDINDC,DTXSYOUT   INDICATE SYSOUT DATASET       *J308* ST308432
*        B     XJCLOUT             GO PROCESS AS SYSOUT          *J308* ST308436
*        SPACE 3                                                 *J308* ST308440
**             DEFINE SYSOUT=(A,INTRDR) IN INTERNAL TEXT         *J308* ST308444
*XJ308TXT DC   AL1(SYSOUTK),X'0201',C'A',X'06',C'INTRDR'         *J308* ST308448
*XJINTRDR EQU  *-6,6               DEFINE CHARS 'INTRDR'         *J308* ST308452
*        DC    AL1(ENDK)           INCLUDE END KEY IN TEXT       *J308* ST308456
*XJ308LN  EQU  *-XJ308TXT          DEFINE LENGTH OF TEXT         *J308* ST308460
*XJ308XIT NULL                     END OF 'UNIT=INTRDR' CODE     *J308* ST308464
         EJECT                                                          ST308468
         COPY  $HASPGEN            HASP OPTIONS                         ST308472
         TITLE 'CONTROL BLOCK OPTIONS'                                  ST308476
         $SYSPARM (OFF,GEN,DATA,NO,NO)     SET DOCUMENTATION OPTIONS    ST308480
         SPACE 3                                                        ST308484
*                                                                       ST308488
*        GENERATE HASP CONTROL BLOCKS                                   ST308492
*                                                                       ST308496
         SPACE 2                                                        ST308500
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       ST308504
         TITLE 'JES2S308 - ENTRY'                                       ST308508
*********************************************************************** ST308512
*        MOD ENTRY                                                    * ST308516
*********************************************************************** ST308520
         SPACE 1                                                        ST308524
JES2S308 $MODNTRY CSECT=YES,EXIT=EXITS308,DOC=&DOC MODIFICATION ENTRY   ST308528
         SPACE 2                                                        ST308532
         USING TXTDSECT,R1         ESTABLISH TEXT PREFIX ADDRESSABILITY ST308536
         SPACE 1                                                        ST308540
         TITLE 'JES2S308 - MAIN PROCESSING ROUTINE'                     ST308544
*********************************************************************** ST308548
*        THIS ROUTINE SCANS THE TEXT OF CURRENT DD STATEMENT,         * ST308552
*         LOOKING FOR THE 'UNIT' PARAMETER AND IF FOUND; CHECKS       * ST308556
*         FOR SPECIFICATION OF 'INTRDR'.                              * ST308560
*         IF SO, IT IS CHANGED TO 'SYSOUT=(A,INTRDR)'                 * ST308564
*********************************************************************** ST308568
         SPACE 1                                                        ST308572
         LA    WC,STRDKEY          POINT TO START OF TEXT STRING        ST308576
         XR    WA,WA               CLEAR WA FOR WORK                    ST308580
         XR    WB,WB               CLEAR WB FOR WORK                    ST308584
S308NEXT ICM   WA,1,1(WC)          SET WA TO NUMBER OF PARMS            ST308588
         LA    WC,2(,WC)           GET ADDRESS OF 1ST PARM (IF ANY)     ST308592
         BZ    S308GKEY            BRANCH IF NONE                       ST308596
S308FBYT ICM   WB,1,0(WC)          SET WB TO PARM LENGTH                ST308600
         BM    S308FSUB            BRANCH IF SUBPARM COUNT              ST308604
         LA    WC,0(WC,WB)          ELSE GET ADDRESS OF NEXT PARM       ST308608
S308FLUP LA    WC,1(,WC)           SKIP OVER LENGTH BYTE                ST308612
         BCT   WA,S308FBYT         BRANCH IF MORE PARMS TO SKIP         ST308616
S308GKEY CLI   0(WC),ENDK          TEST KEY TYPE                        ST308620
         BE    NOINTRDR            BRANCH IF END OF TEXT STRING         ST308624
         CLI   0(WC),UNITK          ELSE TEST FOR 'UNIT' KEY            ST308628
         BNE   S308NEXT             BRANCH IF NO                        ST308632
         B     S308CONT              ELSE CONTINUE                      ST308636
S308FSUB SL    WB,=A(X'80')        CLEAR HIGH-ORDER BIT OF SUBPARM COUN ST308640
         ALR   WA,WB               ADD SUBPARM COUNT TO PARM COUNT      ST308644
         B     S308FLUP             AND RESUME PARM FIELD SCAN          ST308648
S308CONT CLI   1(WC),1             CHECK NUMBER OF PARMS                ST308652
         BNE   NOINTRDR            BRANCH IF NOT EXACTLY ONE            ST308656
         CLI   2(WC),6             CHECK LENGTH OF PARM                 ST308660
         BNE   NOINTRDR            CAN'T BE INTRDR IF NOT 6             ST308664
         CLC   XJINTRDR,3(WC)      IS IT 'INTRDR' ?                     ST308668
         BNE   NOINTRDR            BRANCH IF NOT                        ST308672
         LA    WA,9(,WC)           POINT 1 PAST TEXT                    ST308676
         LH    WB,STRLTH           LENGTH OF INTERNAL TEXT STRING       ST308680
         ALR   WB,R1               POINT 1 PAST END KEY                 ST308684
         SLR   WB,WA               LENGTH OF MOVE                       ST308688
         LR    WD,WB               LENGTH OF MOVE                       ST308692
         MVCL  WC,WA               SHIFT DOWN INTERNAL TEXT             ST308696
         BCTR  WC,0                POINT TO END KEY                     ST308700
         MVC   0(XJ308LN,WC),XJ308TXT  MOVE IN NEW TEXT                 ST308704
         LA    WC,XJ308LN(,WC)     COMPUTE NEW                          ST308708
         SLR   WC,R1                 LENGTH                             ST308712
         STCM  WC,3,STRLTH         SAVE NEW LENGTH                      ST308716
         OI    STRDINDC,DTXSYOUT   INDICATE SYSOUT DATASET              ST308720
         MVI   APCE$$X,$$X         SET CONDITION CODE TO 'YES'          ST308724
         B     EXITS308             AND GO TO EXIT                      ST308728
         SPACE 2                                                        ST308732
NOINTRDR MVI   APCE$$X,$$Y         NOT 'UNIT=INTRDR' SET CONDITION CODE ST308736
         B     EXITS308             TO 'NO' AND GO TO EXIT              ST308740
         EJECT                                                          ST308744
******** CONT'D                                                         ST308748
         SPACE 2                                                        ST308752
*              DEFINE SYSOUT=(A,INTRDR) IN INTERNAL TEXT                ST308756
XJ308TXT DC    AL1(SYSOUTK),X'0201',C'A',X'06',C'INTRDR'                ST308760
XJINTRDR EQU   *-6,6               DEFINE CHARS 'INTRDR'                ST308764
         DC    AL1(ENDK)           INCLUDE END KEY IN TEXT              ST308768
XJ308LN  EQU   *-XJ308TXT          DEFINE LENGTH OF TEXT                ST308772
         TITLE 'JES2S308 - EXIT'                                        ST308776
         SPACE 1                                                        ST308780
*********************************************************************** ST308784
*        MOD EXIT                                                     * ST308788
*********************************************************************** ST308792
         SPACE 1                                                        ST308796
EXITS308 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  ST308800
         SPACE 2                                                        ST308804
         LTORG                                                          ST308808
         SPACE 1                                                        ST308812
         END                                                            ST308816
