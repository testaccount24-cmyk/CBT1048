JES2B903 TITLE 'PROCESS /*ROUTEX CONTROL CARD - CONTROL BLOCK GENERATIO+B9030013
               N MACRO DEFINITIONS'                                     B9030014
*                                                                       B9030015
***** $HASPCB  *****          GENERATE HASP CONTROL BLOCKS              B9030016
*                                                                       B9030017
*                                                                       B9030018
         MACRO                                                          B9030019
         $HASPCB &DOC=NO,&LIST=NO                                       B9030020
         GBLC  &PRINT,&GEN,&DATA                                        B9030021
         PUSH  PRINT                                                    B9030022
         PRINT &PRINT                                                   B9030023
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                B9030024
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                B9030025
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                B9030026
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                B9030027
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  B9030028
         $ADCT DOC=&DOC            GENERATE HASP ADCT DSECT             B9030029
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             B9030030
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              B9030031
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 B9030032
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             B9030033
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              B9030034
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              B9030035
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT              B9030036
         $SCR  DOC=&DOC            GENERATE HASP SCR DSECT           R4 B9030037
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           B9030038
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              B9030039
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              B9030040
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              B9030041
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              B9030042
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT             B9030043
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              B9030044
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              B9030045
         $OCR  DOC=&DOC            GENERATE HASP OCR DSECT              B9030046
         $OCT  DOC=&DOC            GENERATE HASP OCT DSECT              B9030047
         $SCAT DOC=&DOC            GENERATE HASP SCAT DSECT             B9030048
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              B9030049
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              B9030050
         $RDRWORK DOC=&DOC         GENERATE INPUT PCE WORK AREA DSECT   B9030051
         SPACE 3                                                        B9030052
         POP   PRINT                                                    B9030053
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           B9030054
         MEND                                                           B9030055
         TITLE 'JES2B903 - PROCESS /*ROUTEX CONTROL CARD'               B9030056
JES2B903 CSECT             PROCESS /*ROUTEX CONTROL CARD MOD PROGRAM    B9030057
         SPACE 2                                                        B9030058
*******************************************************************     B9030059
*                                                                 *     B9030060
*        PROGRAM ID. :             JES2B903                       *     B9030061
*                                                                 *     B9030062
*        DATE WRITTEN :            MAY 1977                       *     B9030063
*                                                                 *     B9030064
*        AUTHOR :                  J.NOLS                         *     B9030065
*                                                                 *     B9030066
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     B9030067
*                                                                 *     B9030068
*******************************************************************     B9030069
         SPACE 3                                                        B9030070
*******************************************************************     B9030071
*                                                                 *     B9030072
*        PURPOSE                                                  *     B9030073
*       ---------                                                 *     B9030074
*                                                                 *     B9030075
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.             *     B9030076
*        IT IT LOADED AT JES2 INITIALISATION UPON REQUEST VIA     *     B9030077
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS       *     B9030078
*        ENTERED VIA A $CBAL FROM THE HASP INPUT SERVICE - MAIN   *     B9030079
*        PROCESSOR ROUTINE IN HASPRDR AT STATEMENT R0741000.      *     B9030080
*                                                                 *     B9030081
*        ON ENTRY HASPRDR HAS ESTABLISHED THE FOLLOWING           *     B9030082
*        REGISTER CONVENTIONS IN ADDITION TO NORMAL HASP USAGE:-  *     B9030083
*        R1    -->                 DCT                            *     B9030084
*        R3    -->                 BUFFER                         *     B9030085
*                                                                 *     B9030086
*******************************************************************     B9030087
         EJECT                                                          B9030088
         COPY  $HASPGEN            HASP OPTIONS                         B9030089
         TITLE 'CONTROL BLOCK OPTIONS'                                  B9030090
         $SYSPARM (OFF,GEN,DATA,NO,NO)      SET DOCUMENTATION OPTIONS   B9030091
         SPACE 3                                                        B9030092
*                                                                       B9030093
*        GENERATE HASP CONTROL BLOCKS                                   B9030094
*                                                                       B9030095
         SPACE 2                                                        B9030096
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       B9030097
         TITLE 'PROCESS /*ROUTEX CC - CONTROL CARD SCAN TABLE DSECT'    B9030098
         SPACE 5                                                        B9030099
RSCANTBL DSECT                     CONTROL CARD SCAN TABLE DSECT        B9030100
RSCANAME DS    CL7                 KEYWORD NAME (7 CHARACTERS MAX)      B9030101
RSCANABR DS    C                   KEYWORD ABREVIATION (1 CHARACTER)    B9030102
RSCANFLG DS    X                   KEYWORD VALUE FLAGS                  B9030103
RSCFLCOM EQU   B'10000000'              MASK IS COMPLEMENTED            B9030104
RSCFLNUM EQU   B'10000000'              VALUE MUST BE NUMERIC           B9030105
RSCFLBIN EQU   B'01000000'              CONVERT VALUE TO BINARY         B9030106
RSCFLEFT EQU   B'00100000'              LEFT ADJUST VALUE               B9030107
RSCFLBLK EQU   B'00010000'              BLANK-FILL VALUE                B9030108
RSCFLPCT EQU   B'00001111'              MAXIMUM NUMBER OF VALUES        B9030109
RSCANMSK DS    0X                  KEYWORD MASK                         B9030110
RSCANLEN DS    AL1                 KEYWORD VALUE LENGTH                 B9030111
RSCANDSP DS    AL2                 KEYWORD VALUE DISPLACEMENT           B9030112
RSCANEXT DS    0F                  ADDRESS OF NEXT TABLE ENTRY          B9030113
JES2B903 CSECT                     END OF CONTROL CARD SCAN DSECT       B9030114
         TITLE 'PROCESS /*ROUTEX CONTROL CARD'                          B9030115
*                                                                       B9030116
*                             READER REGISTER DEFINITIONS               B9030117
*                                                                       B9030118
         SPACE 3                                                        B9030119
RW       EQU   WA                  WORK REGISTER                        B9030120
RBI      EQU   WB                  INPUT BUFFER                         B9030121
RPI      EQU   WC                  INPUT POINTER                     R4 B9030122
RL1      EQU   WD                  INTERNAL LINK REGISTER 1          R4 B9030123
RL2      EQU   WE                  INTERNAL LINK REGISTER 2          R4 B9030124
RBASE2   EQU   WF                  INPUT SERVICE BASE REGISTER       R4 B9030125
         SPACE 4                                                        B9030126
*                                                                       B9030127
*                             READER BUFFER DEFINITIONS                 B9030128
*                                                                       B9030129
         SPACE 3                                                        B9030130
RBUFTRK  EQU   HDBNXTRK-BUFDSECT   BUFFER CHAIN TRACK DISPLACEMENT      B9030131
*                                  INPUT BUFFER START DISPLACEMENT      B9030132
ROBUFST  EQU   HDBSTART-BUFDSECT   OUTPUT BUFFER START DISPLACEMENT     B9030133
         SPACE 4                                                        B9030134
*                                                                       B9030135
*                             MISCELLANEOUS DEFINITIONS                 B9030136
*                                                                       B9030137
         SPACE 3                                                        B9030138
*                               RDRSW                                R4 B9030139
RJFLUSH  EQU   X'01'               JOB FLUSH SWITCH                     B9030140
RNOSCAN  EQU   X'02'               NO CARD SCAN SWITCH                  B9030141
RDREOFSW EQU   X'04'               END-OF-FILE SWITCH                   B9030142
RJCLSW   EQU   X'08'               JOB CONTROL LANGUAGE SWITCH          B9030143
RSYSINSW EQU   X'10'               GENERATED DD * PROCESSING SWITCH     B9030144
RXBJOBSW EQU   X'20'               XEQ BATCH CLASS JOB SWITCH           B9030145
RUNIEXCP EQU   X'01'               UNIT EXCEPTION BIT                   B9030146
*                               RDRSW2                               R4 B9030147
RJCLH    EQU   X'01'               TYPRUN=JCLHOLD                    R4 B9030148
*                                                                    R4 B9030149
RSIOCSWS EQU   X'10'               SIO CSW STORED BIT                   B9030150
RSIOCC   EQU   X'30'               SIO COMPLETION CODE BITS             B9030151
RDLMSKIP EQU   LRC1RSV7            DLM TEST BYPASS SWITCH            R4 B9030152
         TITLE 'JES2B903 - MAIN PROCESSING ROUTINE'                     B9030153
         EJECT                                                          B9030154
*********************************************************************** B9030155
*                                                                     * B9030156
*        MOD ENTRY                                                    * B9030157
*                                                                     * B9030158
*********************************************************************** B9030159
         SPACE 1                                                        B9030160
JES2B903 $MODNTRY CSECT=YES,EXIT=EXITB903,DOC=&DOC MODIFICATION ENTRY   B9030161
         SPACE 2                                                        B9030162
         USING BUFDSECT,RBI        ESTABLISH IOB ADDRESSABILITY         B9030163
         SPACE 1                                                        B9030164
         EJECT                                                          B9030165
*********************************************************************** B9030166
*                                                                     * B9030167
*        /*ROUTEX PROCESSING                                          * B9030168
*                                                                     * B9030169
*********************************************************************** B9030170
         SPACE 1                                                        B9030171
         $REGSAVE SAVE=(R6)        SAVE REGISTER 6                      B9030172
         CLC   0(9,RPI),=CL9'/*ROUTEX ' IS IT A '/*ROUTEX' CTRL CARD?   B9030173
         BNE   RETURNNO            NO, GO RETURN 'NO'                   B9030174
         MVI   0(RPI),C'*'         YES, REPLACE '/' BY '*'              B9030175
         B     ROUTCARD            GO TO ROUTE CARD PROCESSING ROUTINE  B9030176
         SPACE 3                                                        B9030177
B903RPUT BAL   RL1,RPUT            PUT CARD IN OUTPUT BUFFER            B9030178
B903RGET BAL   RL1,RGET            GET NEXT CARD                        B9030179
         B     B903EOF             BRANCH IF EOF                        B9030180
         OI    RCARDLRC,RDLMSKIP   INDICATE TO BYPASS DELIMITER TEST    B9030181
         CLC   0(6,RPI),=CL6'/*EOT ' IS IT A '/*EOT' CONTROL CARD       B9030182
         BNE   B903RPUT            NO, MUST BE A RECORD TO PRINT OR     B9030183
*                                   PUNCH. PUT IT IN OUTPUT BUFFER AND  B9030184
*                                   GET NEXT CARD.                      B9030185
         MVI   0(RPI),C'*'         ELSE, REPLACE '/' BY '*'             B9030186
         LTR   JCT,JCT             TEST IF PRECEDING /*ROUTEX IS VALID  B9030187
         BZ    *+16                NO, SKIP NEXT THREE INSTRUCTIONS     B9030188
         L     RW,JCTCARDS         INCREMENT                            B9030189
         LA    RW,1(RW)             CARD                                B9030190
         ST    RW,JCTCARDS           COUNT                              B9030191
         BAL   RL1,RPUT            PUT CARD IN OUTPUT BUFFER            B9030192
         LA    RL1,0               ZEROISE RL1                          B9030193
         ST    RL1,APCESR5         ASSUME GOOD RETURN                   B9030194
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B9030195
         B     B903JEND            SKIP NEXT INSTRUCTIONS               B9030196
B903EOF  LA    RL1,4               SET RL1 TO 4                         B9030197
         ST    RL1,APCESR5         ASSUME GOOD RETURN                   B9030198
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B9030199
         LA    RPI,=CL80'**EOT -- NOT SUPPLIED BY USER, GENERATED BY JE+B9030200
               S2 AT THE PHYSICAL END-OF-FILE.'                         B9030201
         BAL   RL1,RPUT            PUT MESSAGE IN OUTPUT BUFFER         B9030202
         L     RPI,APCESR4         RESTORE RPI                          B9030203
B903JEND BAL   RL1,RJOBEND         GO TERMINATE JOB                     B9030204
         ST    JCT,APCESR10        STORE ACTUAL JCT                     B9030205
         OI    RDRSW,RJFLUSH       SET FOR JOB FLUSH                    B9030206
         MVC   RPRIORTY,=CL2' '    SET STANDARD PRIORITY                B9030207
         MVC   RDRDLM,=CL2'/*'     SET INPUT DATA SET DELIMITER         B9030208
         MVI   APCE$$X,$$X         SET CONDITION CODE TO 'YES'          B9030209
         B     REGREST              AND GO RESTORE REGISTER BEF. EXIT   B9030210
         EJECT                                                          B9030211
******** (CONT'D)                                                       B9030212
         SPACE 3                                                        B9030213
RETURNNO MVI   APCE$$X,$$Y         SET CONDITION CODE TO 'NO'           B9030214
         SPACE 2                                                        B9030215
REGREST  $REGREST                  RESTORE REGISTER 6                   B9030216
         EJECT                                                          B9030217
*********************************************************************** B9030218
*                                                                     * B9030219
*        MOD EXIT                                                     * B9030220
*                                                                     * B9030221
*********************************************************************** B9030222
         SPACE 1                                                        B9030223
EXITB903 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  B9030224
         TITLE 'JES2B903 - SUB-ROUTINES FROM HASPRDR SOURCE MODULE'     B9030225
         SPACE 1                                                        B9030226
*********************************************************************** B9030227
*                                                                     * B9030228
*        ROUTCARD - MODIFIED                                          * B9030229
*        RDESTSCN - NOT MODIFIED                                      * B9030230
*        RJOBEND  - MODIFIED                                          * B9030231
*        RGET     - NOT MODIFIED                                      * B9030232
*        RPUT     - NOT MODIFIED                                      * B9030233
*        RJOBKILL - NOT MODIFIED                                      * B9030234
*        RJCTTERM - NOT MODIFIED                                      * B9030235
*        RJOBTERM - MODIFIED                                          * B9030236
*        RTRACK   - NOT MODIFIED                                      * B9030237
*        RGETBUF  - NOT MODIFIED                                      * B9030238
*        CONSTANTS AND OPERATOR MESSAGES - MODIFIED                   * B9030239
*                                                                     * B9030240
*        A LINE MODIFIED IN ONE OF THE ABOVE SUB-ROUTINES IS          * B9030241
*         MARKED WITH '*B903*' POSITIONS 66 TO 71.                    * B9030242
*                                                                     * B9030243
*********************************************************************** B9030244
         SPACE 1                                                        B9030245
         EJECT                                                          B9030246
*                                                                       B9030247
*                                  HASP ROUTE CARD PROCESSING ROUTINE   B9030248
*                                                                       B9030249
ROUTCARD LTR   JCT,JCT             TEST FOR JOB                      R4 B9030250
*        BZ    RILLCCRD            IGNORE ROUTE CARD IF NOT IN J.*B903* B9030251
         BNZ   *+12                IF IN JOB, SKIP NEXT TWO INST.*B903* B9030252
         MVI   0(RPI),C'/'         REPLACE '*' BY '/'            *B903* B9030253
         B     RETURNNO            IGNORE ROUTE CARD IF NOT IN J.*B903* B9030254
         OI    RCARDLRC,LRC1INUL+RDLMSKIP  INDICATE SUPERFLUOUS CARD R4 B9030255
         BAL   RL1,RPUT            ADD ROUTE CARD TO OUTPUT FILE        B9030256
         TM    RDRSW,RJCLSW        TEST STATUS                          B9030257
         BO    *+12                BRANCH IF JCL FILE                   B9030258
         BAL   RL1,RPUT            TERMINATE DATA SET                   B9030259
         OI    RDRSW,RJCLSW        SET JCL SWITCH                       B9030260
         MVC   1(7,RPI),ROUTCODE   CHANGE /*ROUTE TO //*ROUTE           B9030261
         LA    R1,15(,RPI)         GET ADDRESS OF DESTINATION        R4 B9030262
         LA    RW,JCTPROUT         ASSUME PRINT ROUTING                 B9030263
         CLC   RPRINT,9(RPI)       TEST                                 B9030264
         BE    RPROUTE             BRANCH IF PRINT ROUTING              B9030265
         CLC   RPUNCH,9(RPI)       TEST AGAIN                           B9030266
         BNE   RILLROUT            ILLEGAL IF NOT PUNCH ROUTING         B9030267
         LA    RW,JCTPUOUT         SET FOR PUNCH ROUTING                B9030268
         MVI   JCTMCLAS,C'B'       ASSUME 'B' IF PUNCH           *B903* B9030269
         SPACE 1                                                     R4 B9030270
RPROUTE  BAL   RL1,RDESTSCN        CONVERT DESTINATION TO ROUTE CODE R4 B9030271
         B     RILLROUT            BRANCH IF INVALID DESTINATION        B9030272
         SPACE 1                                                     R4 B9030273
*OUTSHFT OI    RCARDLRC,LRC1ONUL   INDICATE INTERNALLY GENER'D R4*B903* B9030274
*        LA    RL2,RJCLCARD        LOAD ADDRESS OF EXIT          *B903* B9030275
*        $RETURN                    AND RETURN                   *B903* B9030276
ROUTSHFT B     B903RGET             GO READ NEXT CARD            *B903* B9030277
         SPACE 1                                                     R4 B9030278
RILLROUT OI    RCARDLRC,LRC1CCTL+LRC1TASA  SET ASA CARRIAGE CONTROL  R4 B9030279
         MVI   JCTMCLAS,C'A'       ASSUME 'A' IN CASE OF 'B'     *B903* B9030280
         MVI   RDRCCTL,C'0'        FORCE DOUBLE SPACE                R4 B9030281
         MVI   0(RPI),C'*'         FILL OUT CARD IMAGE               R4 B9030282
         MVC   1(78,RPI),0(RPI)     WITH ASTERISKS                   R4 B9030283
         MVI   79(RPI),C' '        ADD TRAILING BLANK                R4 B9030284
         MVC   (79-22)/2(22,RPI),RRILEGAL+4  MOVE IN ERROR MESSAGE   R4 B9030285
         BAL   RL1,RPUT            ADD ERROR MESSAGE TO OUTPUT FILE     B9030286
        $WTO   RRILEGAL,L'RRILEGAL,JOB=YES,               ISSUE ERROR  CB9030287
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST         MESSAGE     B9030288
         BAL   RL1,RJOBKILL        KILL JOB                             B9030289
*        LA    RL2,RFLTEST         LOAD ADDRESS OF EXIT          *B903* B9030290
*       $RETURN                     AND RETURN                   *B903* B9030291
         B     B903RGET             AND RETURN                   *B903* B9030292
         EJECT                                                          B9030293
*********************************************************************** B9030294
*                                                                     * B9030295
*              RDESTSCN  -  DESTINATION CONVERSION SUBROUTINE         * B9030296
*                                                                     * B9030297
*                  OUTPUT  --  RW = ADDRESS OF BINARY DESTINATION     * B9030298
*                                                                     * B9030299
*                  INPUTS  --  R1 = ADDRESS OF DESTINATION            * B9030300
*                                                                     * B9030301
*                  FUNCTION  --  CONVERT DESTINATION TO ITS BINARY    * B9030302
*                                EQUIVALENT                           * B9030303
*                                                                     * B9030304
*                  RETURNS  --  RL1+0 = ERROR RETURN                  * B9030305
*                               RL1+4 = NORMAL RETURN                 * B9030306
*                                                                     * B9030307
*                  EXTERNAL ROUTINE  --  $SVDEST                      * B9030308
*                                                                     * B9030309
*********************************************************************** B9030310
         SPACE 3                                                     R4 B9030311
RDESTSCN NULL                                                        R4 B9030312
         TM    0(R1),X'BF'         TEST FIRST BYTE OF DESTINATION    R4 B9030313
         BZR   RL1                 ERROR IF ZERO OR BLANK            R4 B9030314
         MVC   RDEST,0(R1)         MOVE DESTINATION TO WORK AREA     R4 B9030315
         MVI   RDEST+8,C' '        SET SCAN TERMINATOR               R4 B9030316
         LA    R15,RDEST           SCAN                              R4 B9030317
         LA    R15,1(,R15)          FOR                              R4 B9030318
         CLI   0(R15),C' '           FIRST                           R4 B9030319
         BNE   *-8                    BLANK                          R4 B9030320
         MVC   1(6,R15),0(R15)     BLANK OUT REST OF DESTINATION     R4 B9030321
         STM   R0,R11,PCER0        SAVE REGISTERS                    R4 B9030322
         L     R1,RDRDCT           GET ADDRESS OF DCT                R4 B9030323
         SLR   R2,R2                   SET UP                        R4 B9030324
         IC    R2,DCTSYS-DCTDSECT(,R1)  SYSTEM ID                    R4 B9030325
         LA    R1,RDEST            GET ADDRESS OF DESTINATION        R4 B9030326
         L     R11,$SSVT           GET ADDRESS OF SSVT               R4 B9030327
         L     R15,$SVDEST-SSVT(,R11)  GET ADDRESS OF ROUTINE        R4 B9030328
         BALR  R14,R15             CONVERT NAME TO ROUTE CODE        R4 B9030329
         B     RDESTERR            ERROR RETURN                      R4 B9030330
         LR    R15,R2              NORMAL RETURN, MOVE CODE TO R15   R4 B9030331
         LM    R0,R11,PCER0        RESTORE REGISTERS                 R4 B9030332
         STH   R15,0(,RW)          SET ROUTE CODE                    R4 B9030333
         B     4(,RL1)              AND RETURN                       R4 B9030334
         SPACE 3                                                     R4 B9030335
RDESTERR LM    R0,R11,PCER0        RESTORE REGISTERS                 R4 B9030336
         BR    RL1                 ERROR RETURN                      R4 B9030337
         EJECT                                                       R4 B9030338
*                                                                       B9030339
*                             CONTROL CARD SCAN CONSTANTS               B9030340
*                                                                       B9030341
         SPACE 3                                                        B9030342
RPRINT   DC    CL6'PRINT'          ROUTE CONSTANTS                      B9030343
RPUNCH   DC    CL6'PUNCH'          *                                    B9030344
         SPACE 3                                                     R4 B9030345
*                                                                       B9030346
*                             OPERATOR AND ERROR MESSAGES               B9030347
*                                                                       B9030348
         SPACE 3                                                        B9030349
RRILEGAL $MSG  111,'-- INVALID /*ROUTEX CARD'                    *B903* B9030350
ROUTCODE EQU   *-13,7              /*ROUTE EBCDIC CONSTANT              B9030351
         EJECT                                                          B9030352
*********************************************************************** B9030353
*                                                                     * B9030354
*        RJOBEND -- SUBROUTINE TO COMPLETE JOB INPUT PROCESSING       * B9030355
*                                                                     * B9030356
*              FUNCTIONS -- 1) TEST FOR ACTIVE JOB                    * B9030357
*                           2) TERMINATE JOB                          * B9030358
*                           3) PLACE JOB IN EXECUTION QUEUE           * B9030359
*                                                                     * B9030360
*              LINK REGISTER -- RL1                                   * B9030361
*                                                                     * B9030362
*              EXTERNAL ROUTINES -- 1) RJCTTERM                       * B9030363
*                                   2) RJOBTERM                       * B9030364
*                                                                     * B9030365
*********************************************************************** B9030366
         SPACE 5                                                        B9030367
RJOBEND  LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B9030368
         BZR   RL1                 RETURN IF NO JCT                     B9030369
         SPACE 1                                                     R4 B9030370
RJOBENDT BAL   RL2,RJCTTERM        PERFORM FINAL UPDATE OF JCT       R4 B9030371
         SPACE 2                                                        B9030372
         TM    JCTJBOPT,JCTPRICD   BRANCH IF NEITHER /*PRIO CARD     R4 B9030373
         BZ    RPRISCH0              NOR JOB CARD PRTY FIELD         R4 B9030374
         PACK  RTEMP,RPRIORTY      CONVERT EBCDIC PRIROITY           R4 B9030375
         CVB   RW,RTEMP              TO BINARY                       R4 B9030376
         B     RPRISET             PROCESS INCR AND LIMIT            R4 B9030377
         SPACE 2                                                        B9030378
RPRISCH0 L     R1,$RTIMTAB         PREPARE TO SEARCH                 R4 B9030379
         B     *+8                  TIME PRIORITY TABLE              R4 B9030380
RPRISCH1 LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY                B9030381
         CLC   JCTETIME+1(3),1(R1) COMPARE ESTIMATED EXECUTION TIME     B9030382
         BH    RPRISCH1            BRANCH IF GREATER THAN TABLE ENTRY   B9030383
         SR    R0,R0               NO                                   B9030384
         IC    R0,0(,R1)           USE ASSOCIATED PRIORITY              B9030385
         SPACE 2                                                        B9030386
         L     R1,$SSVT               PREPARE TO SEARCH              R4 B9030387
         LA    R1,$SVXPRI-SSVT-4(,R1)  OUTPUT PRIORITY TABLE         R4 B9030388
RPRISCH2 LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY                B9030389
         CLC   JCTESOUT+1(3),1(R1) COMPARE ESTIMATED OUTPUT             B9030390
         BH    RPRISCH2            BRANCH IF GREATER THAN TABLE ENTRY   B9030391
         SR    RW,RW               NO                                   B9030392
         IC    RW,0(,R1)           USE ASSOCIATED PRIORITY              B9030393
         SRL   RW,4                 IN 'PURE' FORM                   R4 B9030394
         ALR   RW,R0               COMPUTE AVERAGE OF                   B9030395
         SRL   RW,1                 THE TWO PRIORITIES                  B9030396
         LA    RW,11               SET PRIORITY TO 11 (ALWAYS)   *B903* B9030397
         EJECT                                                          B9030398
RPRISET  N     RW,=F'15'           CLEAR EXTRANEOUS BITS                B9030399
         L     R1,RDRDCT           R1 = ADDRESS OF INPUT DCT            B9030400
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         B9030401
         IC    R0,DCTPRINC         R0 = INPUT DEVICE PRIORITY INCREMENT B9030402
         ALR   RW,R0               INCREMENT PRIORITY                   B9030403
         CLM   RW,1,DCTPRLIM       COMPARE PRIORITY WITH LIMIT          B9030404
         BNH   *+8                 BR IF PRIORITY NOT GREATER           B9030405
         IC    RW,DCTPRLIM         SET PRIORITY TO LIMIT                B9030406
         DROP  R1                  DROP DCT ADDRESSABILITY              B9030407
         SPACE 2                                                        B9030408
         SLL   RW,4                USE FOUR LOW-ORDER BITS              B9030409
         STC   RW,JCTIPRIO         SAVE INITIAL EXECUTION PRIORITY      B9030410
         STC   RW,RMESSAGE         SAVE FOR LATER USE                   B9030411
         SPACE 2                                                        B9030412
         MVI   RMESSAGE+1,$XEQ     PRESET CONVERTER CLASS               B9030413
         TM    RDRSW,RXBJOBSW      TEST JOB TYPE                        B9030414
         BZ    RNOXBACH            BRANCH IF NOT EXECUTION BATCHING     B9030415
         OC    RMESSAGE+1(1),JCTJCLAS  SET JOB QUEUE TYPE               B9030416
         NI    RMESSAGE+1,QUECLASS RESET HIGH-ORDER BYTE                B9030417
         SPACE 2                                                        B9030418
RNOXBACH NULL                      *                                 R4 B9030419
         TM    JCTJOBFL,JCTTCOPY   TEST JOB FLAGS                    R4 B9030420
         BZ    *+12                BRANCH IF NOT 'TYPRUN=COPY'          B9030421
         NI    RDRSW,255-RXBJOBSW  YES, RESET EXECUTION BATCH SWITCH    B9030422
         MVI   RMESSAGE+1,$OUTPUT  RESET QUEUE TYPE TO OUTPUT           B9030423
         BAL   RL2,RJOBTERM        TERMINATE JOB                        B9030424
         SPACE 2                                                     R4 B9030425
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    B9030426
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B9030427
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B9030428
         MVC   JQEPRIO,RMESSAGE    SET NEW PRIORITY                     B9030429
         MVC   JQEFLAG2,RDRSIAFF   RESET SYSTEM AFFINITY                B9030430
*        SR    R0,R0               GET NEXT                      *B903* B9030431
*        IC    R0,RMESSAGE+1        JOB QUEUE TYPE               *B903* B9030432
*       $QMOD  (R1),(R0)           QUEUE JOB FOR EXECUTION SERV. *B903* B9030433
        $QPUT  (R1),$OUTPUT        PLACE JOB IN PRINT QUEUE      *B903* B9030434
         DROP  R1                  DROP JQE ADDRESSABILITY              B9030435
         SR    R0,R0               CLEAR ADDRESS                        B9030436
         ST    R0,RJOB              OF JOB QEUEUE ELEMENT               B9030437
         BR    RL1                   AND RETURN                         B9030438
         EJECT                                                          B9030439
*********************************************************************** B9030440
*                                                                     * B9030441
*        RGET -- SUBROUTINE TO GET NEXT CARD FROM INPUT BUFFER        * B9030442
*                                                                     * B9030443
*              FUNCTION -- SET INPUT POINTER TO NEXT CARD             * B9030444
*                                                                     * B9030445
*              OUTPUT -- RPI = ADDRESS OF NEXT CARD IMAGE             * B9030446
*                                                                     * B9030447
*              LINK REGISTER -- RL1                                   * B9030448
*                                                                     * B9030449
*              RETURNS -- RL1+0 - END OF FILE RETURN                  * B9030450
*                         RL1+4 - NORMAL RETURN                       * B9030451
*                                                                     * B9030452
*              EXTERNAL ROUTINE -- RJOBKILL                           * B9030453
*                                                                     * B9030454
*********************************************************************** B9030455
         SPACE 5                                                        B9030456
RGET     TM    RDRSW,RSYSINSW      TEST FOR GENERATED DD *              B9030457
         BZ    RGET1               BRANCH IF NOT                        B9030458
         L     RPI,RSAVE1          YES, RESTORE ORIGINAL POINTER        B9030459
         NI    RDRSW,255-RSYSINSW  RESET INDICATION                     B9030460
         B     4(,RL1)              AND RETURN                          B9030461
         SPACE 3                                                     R4 B9030462
RGET1    LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B9030463
         BZ    RGETNOCT            DO NOT COUNT IF NO JCT               B9030464
         L     RW,JCTCARDS         INCREMENT                            B9030465
         LA    RW,1(,RW)            CARD                                B9030466
         ST    RW,JCTCARDS           COUNT                              B9030467
         SPACE 1                                                     R4 B9030468
RGETNOCT MVI   RCARDLRL,80         PRESET CARD LENGTH TO 80          R4 B9030469
         TM    PCEID,PCERJEID      TEST DEVICE TYPE                  R4 B9030470
         BO    RJEGET              BRANCH IF REMOTE READER           R4 B9030471
         TM    PCEID,PCEINRID      NO, TEST AGAIN                    R4 B9030472
         BZ    RDRGET              BRANCH IF NOT INTERNAL READER     R4 B9030473
         EJECT                                                       R4 B9030474
*                                                                    R4 B9030475
*                             INTERNAL READER PROCESSING             R4 B9030476
*                                                                    R4 B9030477
         L     RW,RDRDCT           RW = ADDRESS OF INTRDR DCT        R4 B9030478
         USING DCTDSECT,RW         ESTABLISH DCT ADDRESSABILITY      R4 B9030479
         SPACE 1                                                     R4 B9030480
RINRLOOP DS    0H                                                       B9030481
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B9030482
         LTR   R1,R1               TEST                                 B9030483
         BZ    RINRTEST            BRANCH IF NO ACTIVE JOB              B9030484
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B9030485
         TM    JQEFLAGS,QUEOPCAN   TEST JOB QUEUE FLAGS                 B9030486
         BO    RINRDEL             BRANCH IF JOB CANCEL                 B9030487
         DROP  R1                  DROP JQE ADDRESSABILITY              B9030488
         SPACE 2                                                     R4 B9030489
RINRTEST TM    DCTFLAGS,DCTDELET+DCTRSTRT TEST FOR OPERATOR COMMANDS    B9030490
         BNZ   RINRDEL             BRANCH IF OPERATOR CANCEL            B9030491
         TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH              B9030492
         BOR   RL1                 RETURN IF ON                         B9030493
         L     RL2,RIDPBFO         GET NEXT RECORD POINTER              B9030494
         LTR   RL2,RL2             TEST                                 B9030495
         BZ    RINRWAIT            BRANCH IF ZERO                       B9030496
         USING LRCDSECT,RL2        ESTABLISH LOGICAL RECORD ADDR.       B9030497
         CLI   LRCTLENG,LRCBFEND   TEST RECORD LENGTH                   B9030498
         BE    RINRWAIT            BRANCH IF END-OF-BLOCK               B9030499
         MVC   RINFLAG1,LRCFLAG1   SAVE RECORD CHARACTERISTICS       R4 B9030500
         NI    RINFLAG1,LRC1CCTL+LRC1CTYP  ISOLATE CARRIAGE CONTROL  R4 B9030501
         MVC   RCARDLRL,LRCLRECL   SAVE LOGICAL RECORD LENGTH           B9030502
         LR    R0,RPI              R0 = ADDRESS OF INTRDR WORK AREA     B9030503
         LA    R1,254              R1 = LENGTH OF INTRDR WORK AREA      B9030504
         LA    R14,LRCTEXT         R14 = ADDRESS OF BLOCKED RECORD      B9030505
         TM    LRCFLAG1,LRC1CCTL   TEST RECORD CONTROL BYTE             B9030506
         BZ    RINRNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B9030507
         MVC   RDRCCTL,0(R14)      SAVE CARRIAGE CONTROL CHARACTER   R4 B9030508
         LA    R14,1(,R14)         SPACE OVER CARRIAGE CONTROL CHAR.    B9030509
RINRNOCC CLR   R14,RPI             TEST ADDRESS                      R4 B9030510
         BNL   RINRWAIT            BRANCH IF INVALID                    B9030511
         L     R15,=XL4'40000000'  R15 = BLANK PAD CHARACTER            B9030512
         IC    R15,LRCTLENG        ADD LOGICAL RECORD LENGTH            B9030513
         MVCL  R0,R14              MOVE RECORD TO INTRDR WORK AREA      B9030514
         ST    R14,RIDPBFO         UPDATE RECORD POINTER                B9030515
         DROP  RL2                 DROP LOGICAL RECORD ADDRESSABILITY   B9030516
         CLC   0(6,RPI),=CL6'/*EOF'  TEST FOR INTERNAL READER EOF       B9030517
         BE    RINREOF             BRANCH IF YES                        B9030518
         CLC   0(7,RPI),=CL7'/*SCAN'  TEST FOR INTERNAL READER SCAN     B9030519
         BE    RINRSCAN            BRANCH IF NOT                        B9030520
         CLC   0(6,RPI),=CL6'/*DEL'  TEST FOR INTERNAL READER DELETE    B9030521
         BNE   4(,RL1)             TAKE NORMAL RETURN IF NOT            B9030522
         NI    RDRSW,255-RNOSCAN   TURN ON CARD SCAN                    B9030523
         EJECT                                                       R4 B9030524
*                                                                       B9030525
*                             DELETE JOB ON INTERNAL READER             B9030526
*                                                                       B9030527
RINRDEL  DS    0H                                                       B9030528
         ST    RL1,RLSAVE1         SAVE RETURN REGISTER                 B9030529
         BAL   RL1,RJOBKILL        DELETE JOB                           B9030530
         L     RL1,RLSAVE1         RESTORE RETURN REGISTER              B9030531
         L     RW,RDRDCT           RESTORE ADDRESS OF DCT               B9030532
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT  RESET OPERATOR FLAGS     B9030533
         B     RINRTEST            GET NEXT RECORD                      B9030534
*                                                                       B9030535
*                             SCAN JOB ON INTERNAL READER               B9030536
*                                                                       B9030537
RINRSCAN DS    0H                                                       B9030538
         LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B9030539
         BZ    RINRTEST            BRANCH IF NO JCT                     B9030540
         OI    JCTJOBFL,JCTTSCAN   FORCE 'TYPRUN=SCAN'                  B9030541
         B     RINRLOOP            GET NEXT RECORD                      B9030542
*                                                                       B9030543
*                             WAIT FOR DIRECTION FROM SSSM              B9030544
*                                                                       B9030545
RINRWAIT DS    0H                                                       B9030546
         OI    RIDFLAGS,RIDBUSY    PERMIT SSSM TO OPERATE               B9030547
         $XMPOST RIDECBP           POST SSSM                            B9030548
RINRW1   $WAIT IO                  $WAIT FOR INPUT FROM SSSM            B9030549
         TM    RIDFLAGS,RIDEND     DID SSSM TERMINATE INTRDR            B9030550
         BO    RINREOF             BRANCH IF YES                        B9030551
         TM    RIDFLAGS,RIDBUSY    HAS SSSM COMPLETED ITS WORK          B9030552
         BZ    RINRLOOP            GET NEXT RECORD IF SO                B9030553
         B     RINRW1              OTHERWISE WAIT AGAIN                 B9030554
*                                                                       B9030555
*                             END-OF-FILE ON INTERNAL READER            B9030556
*                                                                       B9030557
RINREOF  OI    RDRSW,RDREOFSW      SET END-OF-FILE SWITCH               B9030558
         BR    RL1                 TAKE END-OF-FILE RETURN              B9030559
         DROP  RW                  DROP DCT ADDRESSABILITY           R4 B9030560
         EJECT                                                       R4 B9030561
RJEGET   TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH           R4 B9030562
         BNZR  RL1                 RETURN IF ON                      R4 B9030563
        $EXTP  GET,RDRDCT,RTPCARD  GET CARD IMAGE FROM RTAM          R4 B9030564
         BP    RDCKCOM             BRANCH IF SUCCESSFUL              R4 B9030565
         OI    RDRSW,RDREOFSW      SET END-OF-FILE SWITCH            R4 B9030566
         B     RDCKCOM             CHECK FOR OPERATOR COMMANDS       R4 B9030567
         SPACE 1                                                     R4 B9030568
RDRGET   LA    RPI,80(,RPI)        ADVANCE INPUT PTR TO NEXT CARD    R4 B9030569
         SPACE 1                                                     R4 B9030570
RGETEST  CL    RPI,RBIEND          TEST FOR END OF BUFFER               B9030571
         BNH   4(,RL1)             BRANCH IF NOT END OF BUFFER          B9030572
         TM    RDRSW,RDREOFSW      TEST FOR READER EOF                  B9030573
         BNZR  RL1                 RETURN IF READER EOF                 B9030574
         CLI   BUFECBCC,X'7F'      TEST FOR CARD READER ERROR           B9030575
         BE    READ                BRANCH IF NO ERROR                   B9030576
         ST    RL1,RLSAVE1         SAVE LINK REGISTER                   B9030577
         BAL   RL1,RJOBKILL        KILL JOB IN ERROR                    B9030578
         L     RL1,RLSAVE1         RESTORE LINK REGISTER                B9030579
         L     R1,RDRDCT           GET ADDRESS OF INPUT DCT             B9030580
         L     R1,DCTDCB-DCTDSECT(,R1)  GET ADDRESS OF DCB              B9030581
         L     R1,DCBDEBAD-DCBDSECT(,R1)  GET ADDRESS OF DEB            B9030582
         L     R1,DEBSUCBA-DEBDSECT(,R1)  GET ADDRESS OF UCB            B9030583
         TM    UCBFLB-UCBDSECT(R1),UCBIORST  TEST UCB STATUS            B9030584
         BZ    READ                BR IF DEVICE STILL ACCESSIBLE     R4 B9030585
         CLC   $RELEASE,=C'02'     TEST OS/VS2 RELEASE NUMBER        R4 B9030586
         BE    RDABORT             BR IF RELEASE 2                   R4 B9030587
         L     R15,CVTPTR          GET ADDRESS OF CVT                R4 B9030588
         CLC   CVTCRCA-CVT(,R15),=XL4'0'  TEST RECOVERY MODE         R4 B9030589
         BE    RDABORT             BR IF DEVICE NOT ACCESSIBLE       R4 B9030590
         SPACE 1                                                     R4 B9030591
READ    $EXCP  RDRDCT              INITIATE CARD READ PROGRAM           B9030592
         SPACE 1                                                     R4 B9030593
RWAIT   $WAIT  IO                  WAIT FOR COMPLETION OF READ          B9030594
         SPACE 1                                                     R4 B9030595
RDCKCOM  L     R1,RDRDCT           R1 = READER DCT ADDRESS           R4 B9030596
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         B9030597
         TM    DCTFLAGS,DCTSTOP    TEST FOR STOP COMMAND                B9030598
         BO    RWAIT               BRANCH IF STOP COMMAND               B9030599
         TM    DCTFLAGS,DCTDELET+DCTRSTRT    TEST FOR DELETE            B9030600
         BNZ   RDELETE             BRANCH IF DELETE OR RESTART          B9030601
         L     R15,RJOB            GET ADDRESS OF JOB QUEUE ELEMENT     B9030602
         LTR   R15,R15             TEST                                 B9030603
         BZ    RDNOCOM             BRANCH IF NO ACTIVE JOB              B9030604
         USING JQEDSECT,R15        ESTABLISH JQE ADDRESSABILITY         B9030605
         TM    JQEFLAGS,QUEOPCAN   TEST JOB QUEUE FLAGS                 B9030606
         BZ    RDNOCOM             BRANCH IF NO JOB CANCEL              B9030607
         DROP  R15                 DROP JQE ADDRESSABILITY              B9030608
         SPACE 2                                                     R4 B9030609
RDELETE  DS    0H                                                    R4 B9030610
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT    TURN OFF FLAGS      R4 B9030611
         DROP  R1                  DROP DCT ADDRESSABILITY              B9030612
         ST    RL1,RLSAVE1         SAVE LINK REGISTER                   B9030613
         BAL   RL1,RJOBKILL        DELETE JOB                           B9030614
         L     RL1,RLSAVE1         RESTORE LINK REGISTER                B9030615
         SPACE 1                                                     R4 B9030616
RDNOCOM  TM    PCEID,PCERJEID      IS THIS A REMOTE TERMINAL         R4 B9030617
         BZ    RNOTRJE4            BRANCH IF NOT                     R4 B9030618
         TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH           R4 B9030619
         BZ    4(,RL1)             NORMAL RETURN IF NO END-OF-FILE   R4 B9030620
         BR    RL1                 OTHERWISE, TAKE END OF FILE RETURN   B9030621
         SPACE 3                                                     R4 B9030622
RNOTRJE4 TM    BUFECBCC,X'7F'      TEST FOR READ COMPLETE            R4 B9030623
         BZ    RWAIT               BRANCH IF READ NOT COMPLETE          B9030624
         XI    IOBSIOCC,RSIOCSWS   TEST FOR                             B9030625
         TM    IOBSIOCC,RSIOCC     SUCCESSFUL SIO                       B9030626
         BNZ   RDTEST              BRANCH IF NO CSW STORED              B9030627
         XC    IOBCSW(3),IOBCSW    INSURE COMMAND ADDRESS IS ZERO       B9030628
         MVI   BUFECBCC,X'41'      INSURE UNSUCCESSFUL READ COMPLETION  B9030629
         SPACE 1                                                     R4 B9030630
RDTEST   CLI   BUFECBCC,X'7F'      TEST COMPLETION CODE                 B9030631
         BE    RCOMP               BRANCH IF SUCCESSFUL READ COMPLETION B9030632
         TM    IOBCSW+3,RUNIEXCP   TEST CSW IN IOB FOR UNIT EXCEPTION   B9030633
         BZ    RDERR               INDICATE READ ERROR         @OZ10356 B9030634
         SPACE 1                                                     R4 B9030635
RDABORT  OI    RDRSW,RDREOFSW      SET READER END-OF-FILE SWITCH        B9030636
         SPACE 1                                                     R4 B9030637
         B     RCOMP               CONTINUE PROCESSING         @OZ10356 B9030638
RDERR   $IOERROR (R3)              LOG I/O ERROR               @OZ10356 B9030639
RCOMP    L     RW,IOBCSW-1         GET CSW CMD ADDR FROM IOB CSW        B9030640
         LA    RW,0(,RW)           CLEAR HIGH-ORDER BYTE                B9030641
         LTR   RW,RW               TEST COMMAND ADDRESS                 B9030642
         BZ    RCOMPZ              BRANCH IF ZERO                       B9030643
         AL    RW,=F'-8'           ADJUST TO POINT TO LAST COMMAND      B9030644
         L     R1,0(,RW)           GET COMMAND DATA ADDRESS             B9030645
         AH    R1,6(RW)            ADD COMMAND BYTE COUNT               B9030646
         SH    R1,IOBCSW+5         SUBTRACT BYTE COUNT RESIDUE          B9030647
         SL    R1,=F'80'           COMPUTE ADDRESS OF LAST CARD         B9030648
         LA    RW,0(,R1)           CLEAR HIGH-ORDER BYTE                B9030649
         SPACE 1                                                     R4 B9030650
RCOMPZ   ST    RW,RBIEND           SAVE FOR COMPARE                     B9030651
         L     RPI,RIBUFST         SET INPUT POINTER                 R4 B9030652
         ALR   RPI,RBI              TO FIRST CARD                    R4 B9030653
         B     RGETEST             GO BACK AND TEST                     B9030654
         EJECT                                                          B9030655
*********************************************************************** B9030656
*                                                                     * B9030657
*        RPUT -- SUBROUTINE TO ADD CARD TO OUTPUT BUFFER              * B9030658
*                                                                     * B9030659
*              FUNCTIONS -- 1) IF OUTPUT BUFFER IS FULL, TERMINATE    * B9030660
*                              WRITE, AND START NEXT OUTPUT BUFFER    * B9030661
*                           2) ADD CARD TO OUTPUT BUFFER              * B9030662
*                                                                     * B9030663
*              LINK REGISTER -- RL1                                   * B9030664
*                                                                     * B9030665
*              EXTERNAL ROUTINE -- RGETBUF                            * B9030666
*                                                                     * B9030667
*********************************************************************** B9030668
         SPACE 5                                                        B9030669
RPUT     LTR   JCT,JCT             TEST FOR JOB                      R4 B9030670
         BZ    RESETYPE            BRANCH IF FLUSHING                   B9030671
         L     R1,RBONEXT          GET OUTPUT POINTER                   B9030672
         TM    RCARDLRC,RDLMSKIP   TEST DELIMITER BYPASS SWITCH      R4 B9030673
         BO    RPUTNOCT            IGNORE DELIMITER IF SET           R4 B9030674
         CLC   0(2,RPI),RDRDLM     TEST FOR DELIMITER CARD           R4 B9030675
         BNE   RPUTEST             BRANCH IF NOT                     R4 B9030676
         TM    RDRSW,RXBJOBSW      TEST FOR EXECUTION BATCHING          B9030677
         BZ    RPUTERM             BRANCH IF NOT                        B9030678
         SPACE 2                                                        B9030679
RPUTEST  TM    RDRSW,RJCLSW        TEST CURRENT MODE                    B9030680
         BO    RPUTNOCT            BRANCH IF JCL FILE                   B9030681
         L     RW,JCTJOBIN         INCREMENT                            B9030682
         LA    RW,1(,RW)            SYSIN                               B9030683
         ST    RW,JCTJOBIN           COUNT                              B9030684
         SPACE 2                                                        B9030685
RPUTNOCT NI    RCARDLRC,255-RDLMSKIP  RESET DLM BYPASS SWITCH        R4 B9030686
         LA    R15,0(,RPI)         ELIMINATE TRAILING BLANKS         R4 B9030687
         BCTR  R15,0               SET SCAN LIMIT                       B9030688
         L     R14,=F'-8'          SET SCAN DECREMENT TO -8             B9030689
         LA    RW,80               ASSUME JCL FILE                      B9030690
         TM    RDRSW,RJCLSW        TEST CURRENT MODE                    B9030691
         BO    RPUTJCL             FORCE JCL LRECL TO 80                B9030692
         IC    RW,RCARDLRL         GET LOGICAL RECORD LENGTH            B9030693
         LA    RW,7(,RW)            AND                                 B9030694
         NR    RW,R14                ROUND TO DOUBLE WORD               B9030695
         TM    RCARDLRC,LRC1INUL+LRC1ONUL  TEST RECORD CONTROL BYTE  R4 B9030696
         BO    RPUTJCL             BRANCH IF CONTROL RECORD          R4 B9030697
         OC    RCARDLRC,RINFLAG1   ADD INPUT FLAGS TO LRC            R4 B9030698
         EJECT                                                       R4 B9030699
RPUTJCL  LA    RW,0(RW,RPI)        SET SCAN POINTER TO END OF RECORD    B9030700
         BXLE  RW,R14,RPUTBLNK     DECREMENT POINTER BY EIGHT           B9030701
         CLC   0(8,RW),RKBLANKS    CHECK FOR DOUBLE WORD OF BLANKS      B9030702
         BE    *-10                IF EIGHT BLANKS, KEEP GOING          B9030703
         SLR   RW,R14              NO, INCREMENT POINTER BY EIGHT       B9030704
         L     R14,=F'-1'          RESET SCAN DECREMENT TO -1           B9030705
         BXLE  RW,R14,RPUTBLNK     DECREMENT POINTER BY ONE             B9030706
         CLI   0(RW),C' '          CHECK FOR BLANK                      B9030707
         BE    *-8                 IF BLANK, KEEP GOING                 B9030708
         SR    RW,R15              GENERATE TRUNCATED LENGTH            B9030709
         BP    *+8                 BYPASS SPECIAL PROCESSING            B9030710
RPUTBLNK LA    RW,1                FORCE ALL-BLANK CARD TO ONE BLANK    B9030711
         STC   RW,RCARDLEN         SET CARD LENGTH                      B9030712
         TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B9030713
         BZ    *+8                 BRANCH IF NO CARRIAGE CONTROL     R4 B9030714
         LA    RW,1(,RW)           BUMP LENGTH FOR CARRIAGE CONTROL  R4 B9030715
         ALR   RW,R1               ADD CURRENT POINTER                  B9030716
         CL    RW,RBOEND           TEST FOR END OF OUTPUT BUFFER        B9030717
         BL    RPUTCOPY            BRANCH IF NOT END OF BUFFER          B9030718
         MVI   0(R1),X'FF'         SET LAST RCB                         B9030719
         BAL   RL2,RTRACK          GET NEXT TRACK ADDRESS               B9030720
         L     RW,RDROBUF          GET ADDRESS OF BUFFER             R4 B9030721
         ST    RW,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B9030722
         MVC   PCESEEK,RBUFTRK(RW)  SET TRACK ADDRESS FOR $EXCP      R4 B9030723
         ST    R1,RBUFTRK(,RW)     SET CHAIN TRACK                   R4 B9030724
         LR    RW,R1               SAVE NEXT TRACK                      B9030725
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9030726
        $EXCP  (R1)                INITIATE WRITE                       B9030727
         BAL   RL2,RGETBUF         GET NEXT BUFFER                      B9030728
         SPACE 2                                                     R4 B9030729
RPUTCOPY MVC   0(3,R1),RCARDLEN    SET RECORD LENGTH, LRC, AND LRECL R4 B9030730
         TM    RDRSW,RJCLSW        TEST CURRENT MODE                 R4 B9030731
         BZ    RPUTNJCL            BRANCH IF NOT JCL FILE            R4 B9030732
         MVI   LRCLRECL-LRCDSECT(R1),80  FORCE JCL LRECL TO 80       R4 B9030733
         TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B9030734
         BZ    RPUTNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B9030735
         MVI   LRCLRECL-LRCDSECT(R1),79  FORCE LRECL TO 79           R4 B9030736
         SPACE 1                                                     R4 B9030737
RPUTNJCL TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B9030738
         BZ    RPUTNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B9030739
         MVC   LRCCCTL-LRCDSECT(,R1),RDRCCTL  SET CARRIAGE CONTROL   R4 B9030740
         LA    R1,1(,R1)           INCREMENT TEXT ADDRESS            R4 B9030741
         SPACE 1                                                     R4 B9030742
RPUTNOCC SLR   R15,R15             CLEAR REGISTER                    R4 B9030743
         IC    R15,RCARDLEN        GET CARD LENGTH                   R4 B9030744
         EX    R15,RPUTMOVE        MOVE TEXT                         R4 B9030745
         LA    R1,3(R1,R15)        ADVANCE                           R4 B9030746
         ST    R1,RBONEXT           OUTPUT POINTER                   R4 B9030747
         SPACE 1                                                     R4 B9030748
RESETYPE MVI   RCARDLRC,0          RESET CARD TYPE                      B9030749
         BR    RL1                 RETURN                               B9030750
         EJECT                                                          B9030751
RPUTERM  MVI   0(R1),X'FF'         SET LAST RCB                         B9030752
         L     R1,RDROBUF          GET BUFFER ADDRESS                R4 B9030753
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B9030754
         MVC   PCESEEK,RBUFTRK(R1)  SET TRACK ADDRESS FOR $EXCP      R4 B9030755
         SR    RW,RW               TERMINATE                            B9030756
         ST    RW,RBUFTRK(,R1)      TRACK CHAIN                      R4 B9030757
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9030758
        $EXCP  (R1)                INITIATE WRITE                       B9030759
         L     R1,RDRIOT           GET ADDRESS OF FIRST IOT             B9030760
         ICM   RW,15,IOTIOT-IOTDSECT(R1)  FIND                          B9030761
         BZ    *+10                        END OF                       B9030762
         LR    R1,RW                        IOT                         B9030763
         B     *-10                          CHAIN                      B9030764
         L     RW,IOTPDDBP-IOTDSECT(,R1)  RW = ADDRESS OF               B9030765
         ALR   RW,R1                       CURRENT PDDB                 B9030766
         L     R0,JCTJOBIN         GET CURRENT CARD COUNT               B9030767
         S     R0,PDBRECCT-PDBDSECT(,RW)  COMPUTE DATA SET CARD COUNT   B9030768
         ST    R0,PDBRECCT-PDBDSECT(,RW)   AND STORE IN PDDB            B9030769
         LA    RW,PDBLENG(,RW)     ADVANCE TO NEXT PDDB                 B9030770
         SLR   RW,R1               GET DISPLACEMENT                     B9030771
         ST    RW,IOTPDDBP-IOTDSECT(,R1)  SAVE PDDB DISPLACEMENT        B9030772
         MVC   RDRDSKEY,=H'1'      SET JCL DATA KEY                     B9030773
         L     RW,RJCLTRAK         RW = NEXT JCL TRACK                  B9030774
         BAL   RL2,RGETBUF         GET NEXT JCL BUFFER                  B9030775
         BR    RL1                 RETURN                               B9030776
         SPACE 3                                                     R4 B9030777
*        EXECUTE  ONLY                                               R4 B9030778
RPUTMOVE MVC   3(*-*,R1),0(RPI)    INSTRUCTION TO MOVE TEXT          R4 B9030779
RKSCANSW EQU   $POSTSAV+16,4       *** MODEL EXECUTE STATEMENT ***   R4 B9030780
         EJECT                                                          B9030781
*********************************************************************** B9030782
*                                                                     * B9030783
*        RJOBKILL -- SUBROUTINE TO DELETE CURRENT JOB                 * B9030784
*                                                                     * B9030785
*              FUNCTIONS -- 1) TEST FOR ACTIVE JOB                    * B9030786
*                           2) NOTIFY OPERATOR OF DELETION            * B9030787
*                           3) TERMINATE JOB                          * B9030788
*                           4) PLACE JOB IN PRINT QUEUE               * B9030789
*                                                                     * B9030790
*              LINK REGISTER -- RL1                                   * B9030791
*                                                                     * B9030792
*              EXTERNAL ROUTINES -- 1) RJCTTERM                       * B9030793
*                                   2) RJOBTERM                       * B9030794
*                                                                     * B9030795
*********************************************************************** B9030796
         SPACE 3                                                        B9030797
RJOBKILL LTR   JCT,JCT             KILL JOB NOW BEING READ              B9030798
         BZR   RL1                 RETURN IF NO JCT                     B9030799
        $WTO   RDELMSG,L'RDELMSG,JOB=YES,           NOTIFY OPERATOR    CB9030800
               ROUTE=$LOG+$UR,CLASS=$ALWAYS,PRI=$ST  OF JOB KILL Z10356 B9030801
         MVI   JCTOPRIO,X'FF'      SET OUTPUT PRIORITY IN JCT           B9030802
         BAL   RL2,RJCTTERM        PERFORM FINAL UPDATE OF JCT          B9030803
         BAL   RL2,RJOBTERM        TERMINATE JOB                        B9030804
         OI    RDRSW,RJFLUSH       TURN ON FLUSH SWITCH                 B9030805
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    B9030806
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B9030807
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B9030808
         NI    JQEFLAGS,255-QUEHOLD1  RESET JOB HOLD STATUS             B9030809
        $QPUT  (R1),$OUTPUT        PLACE JOB IN PRINT QUEUE             B9030810
         XC    RJOB,RJOB           CLEAR ADDRESS OF JOB QUEUE ELEMENT   B9030811
         DROP  R1                  DROP JQE ADDRESSABILITY              B9030812
         BR    RL1                 RETURN                               B9030813
         EJECT                                                          B9030814
*********************************************************************** B9030815
*                                                                     * B9030816
*        RJCTTERM -- SUBROUTINE TO PERFORM FINAL UPDATE OF JCT        * B9030817
*                                                                     * B9030818
*              FUNCTIONS -- 1) CONVERT TIME ESTIMATE TO SECONDS       * B9030819
*                           2) COMPUTE OUTPUT ESTIMATE FROM LINE      * B9030820
*                              AND CARD ESTIMATES                     * B9030821
*                                                                     * B9030822
*              LINK REGISTER -- RL2                                   * B9030823
*                                                                     * B9030824
*********************************************************************** B9030825
         SPACE 5                                                        B9030826
RJCTTERM L     R1,JCTETIME         CONVERT TIME ESTIMATE                B9030827
         M     R0,=F'60'            FROM MINUTES                        B9030828
         ST    R1,JCTETIME           TO SECONDS                         B9030829
         SPACE 2                                                        B9030830
         L     R1,JCTESTLN         MULTIPLY                             B9030831
         M     R0,=F'1000'          ESTIMATED LINE COUNT                B9030832
         ST    R1,JCTESTLN           BY 1000                            B9030833
         AL    R1,JCTESTPU            AND ADD ESTIMATED CARD COUNT      B9030834
         ST    R1,JCTESOUT             FOR ESTIMATED OUTPUT             B9030835
         BR    RL2                 RETURN                               B9030836
         EJECT                                                          B9030837
*********************************************************************** B9030838
*                                                                     * B9030839
*        RJOBTERM -- SUBROUTINE TO TERMINATE JOB                      * B9030840
*                                                                     * B9030841
*              FUNCTIONS -- 1) ADD TERMINATION MESSAGE                * B9030842
*                           2) TERMINATE AND WRITE LAST OUTPUT BUFFER * B9030843
*                           3) COMPLETE JOB CONTROL TABLE             * B9030844
*                           4) WRITE JCT                              * B9030845
*                           5) WRITE IOT                              * B9030846
*                                                                     * B9030847
*              LINK REGISTER -- RL2                                   * B9030848
*                                                                     * B9030849
*              EXTERNAL ROUTINE -- RPUT                               * B9030850
*                                                                     * B9030851
*********************************************************************** B9030852
         SPACE 5                                                        B9030853
RJOBTERM ST    RL1,RLSAVE2         SAVE                                 B9030854
         ST    RL2,RLSAVE3          RETURN REGISTERS                    B9030855
         ICM   RPI,8,RCARDLRL      SAVE CURRENT CARD LENGTH             B9030856
         ST    RPI,RSAVE2           AND ADDRESS                         B9030857
         TM    JCTJOBFL,JCTTCOPY   TEST JOB FLAGS                       B9030858
         BO    RTRCOPY             BRANCH IF 'TYPRUN=COPY'              B9030859
         LA    RPI,RDRDLM          GET ADDRESS OF DELIMITER CARD        B9030860
         TM    RDRSW,RJCLSW        TEST JCL SWITCH                      B9030861
         BO    *+8                 BRANCH IF PROCESSING JCL             B9030862
         BAL   RL1,RPUT            ADD DELIMITER CARD TO OUTPUT FILE    B9030863
         TM    RDRSW,RXBJOBSW      TEST FOR EXECUTION BATCHING       R4 B9030864
         BZ    RNOBATCH            BRANCH IF NOT EXECUTION BATCHING  R4 B9030865
         OI    RCARDLRC,LRC1ONUL   INDICATE INTERNALLY GENERATED     R4 B9030866
         LA    RPI,=CL80'//'       GET ADDRESS OF NULL CARD          R4 B9030867
         BAL   RL1,RPUT            ADD NULL CARD TO OUTPUT FILE         B9030868
         OI    JCTJOBFL,JCTNOJNL   FORCE NO JOURNAL                     B9030869
         SPACE 1                                                     R4 B9030870
RNOBATCH B     RTRCOPY             SKIP NEXT SIX INSTRUCTIONS    *B903* B9030871
*NOBATCH LA    RPI,RJOBDOC         GET ADDRESS OF MESSAGE     R4 *B903* B9030872
         OI    RCARDLRC,LRC1CCTL+LRC1TASA+LRC1INUL+RDLMSKIP SET TYPE R4 B9030873
         MVI   RDRCCTL,C'-'        FORCE TRIPLE SPACE                R4 B9030874
         MVI   RCARDLRL,80         SET CARD LENGTH TO 80                B9030875
         MVI   RINFLAG1,0          CLEAR 'INPUT' FLAG                R4 B9030876
         BAL   RL1,RPUT            ADD JOB DELETED OR CANCELLED MESSAGE B9030877
         SPACE 2                                                        B9030878
RTRCOPY  L     R1,RBONEXT          SET                                  B9030879
         MVI   0(R1),X'FF'          LAST RCB                            B9030880
         L     RW,RDROBUF          GET BUFFER ADDRESS                R4 B9030881
         ST    RW,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B9030882
         MVC   PCESEEK,RBUFTRK(RW)  SET TRACK ADDRESS FOR $EXCP      R4 B9030883
         XC    RBUFTRK(,RW),RBUFTRK(RW)  ZERO CHAIN TRACK            R4 B9030884
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9030885
        $EXCP  (R1)                INITIATE WRITE                       B9030886
         EJECT                                                       R4 B9030887
         L     R1,RDROCT           GET ADDRESS OF OCT                   B9030888
         LTR   R1,R1               TEST                                 B9030889
         BZ    RNOOCT              BRANCH IF NO OCT                     B9030890
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS                   B9030891
         MVC   PCESEEK,OCTTRACK-OCTDSECT(R1)  SET TRACK ADDRESS         B9030892
         LA    R1,PCEDADCT         SET ADDRESS OF DIRECT-ACCESS DCT     B9030893
        $EXCP  (R1)                INITIATE WRITE OF OCT                B9030894
         SR    R1,R1               INDICATE                             B9030895
         ST    R1,RDROCT            NO OUTPUT CONTROL TABLE             B9030896
         SPACE 2                                                        B9030897
RNOOCT   L     R1,RDRIOT           GET ADDRESS OF FIRST IOT             B9030898
         AL    R1,$IOTPDDB         GET ADDRESS OF FIRST PDDB         R4 B9030899
         SR    R15,R15             GET                                  B9030900
*        IC    R15,JCTMCLAS         MESSAGE CLASS                *B903* B9030901
         IC    R15,=C'A'            MESSAGE CLASS ALWAYS 'A'     *B903* B9030902
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOJ(,R1)  SET IN JCL PDDB, R4 B9030903
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOL(,R1)   JOB LOG PDDB,   R4 B9030904
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOI(,R1)    JCL IMGS PDDB, R4 B9030905
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOM(,R1)     AND MSGS PDDB R4 B9030906
         CLI   JCTMCLAS,C'B'       IS IT A ROUTEX PUNCH          *B903* B9030907
         BNE   *+10                NO, SKIP NEXT INSTRUCTION     *B903* B9030908
         MVC   PDBCLASS-PDBDSECT+IOTPDBOJ(L'PDBCLASS,R1),JCTMCLAS B903* B9030909
         L     R14,$SSVT           GET ADDRESS OF SSVT                  B9030910
         LA    R15,$SVSCAT-SSVT(R14,R15)  GET ADDRESS OF SCAT ENTRY     B9030911
         TM    SCATFLAG-SCADSECT(R15),SCATDUMM  TEST                    B9030912
         BO    RMCLDUMM            BRANCH IF MESSAGE CLASS IS DUMMY     B9030913
         TM    SCATFLAG-SCADSECT(R15),SCATTCEL  TEST FOR TRACK-CELL  R4 B9030914
         BNO   RNOOCT1             BR IF NOT                         R4 B9030915
         OI    PDBFLAG2-PDBDSECT+IOTPDBOI(R1),PDB2TCEL  TRACK-CELL   R4 B9030916
         OI    PDBFLAG2-PDBDSECT+IOTPDBOM(R1),PDB2TCEL   SYSTEM      R4 B9030917
         OI    PDBFLAG2-PDBDSECT+IOTPDBOL(R1),PDB2TCEL    PDDB'S     R4 B9030918
RNOOCT1  DS    0H                                                    R4 B9030919
         TM    JCTJOBFL,JCTNOUPT   TEST JOB FLAGS                       B9030920
         BO    RMCLDUMM            BRANCH IF NO OUTPUT OPTION           B9030921
         TM    JCTJBOPT,JCTNOLOG   TEST JOB OPTIONS                     B9030922
         BO    RNOLOG              BRANCH IF NOLOG OPTION               B9030923
         B     RFORMS              SET JOB FORMS                        B9030924
         SPACE 2                                                     R4 B9030925
RMCLDUMM OI    PDBFLAG1-PDBDSECT+IOTPDBOJ(R1),PDB1NSOT PRINT NO JCL, R4 B9030926
         OI    PDBFLAG1-PDBDSECT+IOTPDBOI(R1),PDB1NSOT  JCL IMAGES,  R4 B9030927
         OI    PDBFLAG1-PDBDSECT+IOTPDBOM(R1),PDB1NSOT   OR SYS MSGS R4 B9030928
         SPACE 1                                                     R4 B9030929
RNOLOG   OI    PDBFLAG1-PDBDSECT+IOTPDBOL(R1),PDB1NSOT  NO JOB LOG   R4 B9030930
         SPACE 1                                                     R4 B9030931
RFORMS   L     R15,JCTFORMS        GET JOB FORMS                        B9030932
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOJ(,R1)  SET IN JCL PDDB, R4 B9030933
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOL(,R1)   JOB LOG PDDB,   R4 B9030934
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOI(,R1)    JCL IMAGES,    R4 B9030935
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOM(,R1)     AND SYS MSGS  R4 B9030936
         EJECT                                                  OZ11741 B9030937
         TM    JCTFLAG1,JCTBURST   GET DEFAULT BURST OPTION     OZ11741 B9030938
         BZ    RJQECKP             BR IF NO, ELSE SET B=Y IN    OZ11741 B9030939
         OI    PDBFLAG2-PDBDSECT+IOTPDBOJ(R1),PDB2BRST  JCL PDDBOZ11741 B9030940
         OI    PDBFLAG2-PDBDSECT+IOTPDBOL(R1),PDB2BRST  JOB LOG OZ11741 B9030941
         OI    PDBFLAG2-PDBDSECT+IOTPDBOI(R1),PDB2BRST  JCL IMG OZ11741 B9030942
         OI    PDBFLAG2-PDBDSECT+IOTPDBOM(R1),PDB2BRST  AND SMB OZ11741 B9030943
         SPACE 1                                                OZ11741 B9030944
RJQECKP $QSUSE                     REQUEST ACCESS TO CKPT DATA  OZ11741 B9030945
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B9030946
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B9030947
        $QCKPT (R1)                FORCE CKPT OF JQE                 R4 B9030948
         TM    JCTJBOPT,JCTSETUP   TEST JOB OPTIONS                     B9030949
         BZ    *+8                 BRANCH IF NO SETUP CARDS             B9030950
         OI    JQEFLAGS,QUEHOLD1   PLACE JOB IN HOLD STATUS             B9030951
         MVC   JQEPRTRT,JCTPROUT   SET PRINT AND                        B9030952
         MVC   JQEPUNRT,JCTPUOUT    PUNCH ROUTE CODES                   B9030953
         TM    RDRSW2,RJCLH        IF IMMEDIATE HOLD                 R4 B9030954
         BZ    RNOHOLD               SPECIFIED, TURN ON JQE          R4 B9030955
         OI    JQEFLAGS,QUEHOLD1     HOLD BIT & ISSUE $WTO           R4 B9030956
        $WTO   RJOBHELD,L'RJOBHELD,JOB=YES, ISSUE 'JOB HELD' MSG     R4CB9030957
               ROUTE=$LOG+$UR+$MAIN,CLASS=$NORMAL,PRI=$ST            R4 B9030958
        $QSUSE                     RE-GAIN QUEUE ACCESS AFTER $WTO   R4 B9030959
RNOHOLD  DS    0H                                                    R4 B9030960
         DROP  R1                  DROP JQE ADDRESSABILITY              B9030961
         XC    JCTJOBIN,JCTJOBIN   CLEAR JCTJOBIN                       B9030962
        $TIME                      GET CURRENT TIME                     B9030963
         STM   R0,R1,JCTRDROF      SET READER END TIME AND DATE         B9030964
         SPACE 2                                                        B9030965
RJCTCK   CLI   BUFECBCC-BUFDSECT(JCT),0  TEST I/O STATUS OF JCT         B9030966
         BNE   RJCTWR              BRANCH IF I/O IS NOT ACTIVE          B9030967
        $WAIT  IO                  WAIT FOR I/O TO COMPLETE             B9030968
         B     RJCTCK              GO BACK AND TRY AGAIN                B9030969
         SPACE 2                                                     R4 B9030970
RJCTWR   ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         B9030971
         L     R1,RJOB             GET ADDR OF JOB QUEUE ELEMENT        B9030972
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B9030973
         MVC   PCESEEK,JQETRAK     SET TRACK ADDRESS FOR $EXCP          B9030974
         DROP  R1                  DROP JQE ADDRESSABILITY              B9030975
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9030976
        $EXCP  (R1)                INITIATE WRITE OF JCT                B9030977
         SLR   JCT,JCT             INDICATE NO JCT                      B9030978
         L     R1,RDRIOT           GET ADDRESS OF IOT                R4 B9030979
         SPACE 2                                                     R4 B9030980
RIOTCK   CLI   BUFECBCC-BUFDSECT(R1),0  TEST I/O STATUS                 B9030981
         BNE   RIOTWR              BRANCH IF I/O IS NOT ACTIVE          B9030982
        $WAIT  IO                  WAIF FOR I/O TO COMPLETE             B9030983
         B     RIOTCK              GO BACK AND TRY AGAIN                B9030984
         SPACE 2                                                     R4 B9030985
RIOTWR   ICM   R1,15,RDRIOT        GET ADDRESS OF NEXT IOT              B9030986
         BZ    RSYNCH              BRANCH IF DONE                       B9030987
         MVC   RDRIOT,IOTIOT-IOTDSECT(R1)  REMOVE IOT FROM CHAIN        B9030988
         ST    JCT,IOTIOT-IOTDSECT(,R1)  CLEAR CHAIN FIELD              B9030989
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS                   B9030990
         MVC   PCESEEK,IOTTRACK-IOTDSECT(R1)  SET TRACK ADDRESS         B9030991
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9030992
        $EXCP  (R1)                INITIATE WRITE OF IOT                B9030993
         B     RIOTWR              WRITE NEXT IOT (IF ONE)              B9030994
         SPACE 2                                                     R4 B9030995
RSYNCH   CLI   PCEBUFCT,0          TEST ACTIVE BUFFER COUNT             B9030996
         BE    RTERMJOB            BRANCH IF ZERO                       B9030997
        $WAIT  BUF                 WAIT FOR COMPLETION OF ALL I/O       B9030998
         B     RSYNCH              TRY AGAIN                            B9030999
         SPACE 2                                                        B9031000
RTERMJOB MVC   RPRIORTY,=CL2' '    RESET PRIORITY                    R4 B9031001
         NI    RDRSW,255-RXBJOBSW  RESET XEQ BATCH JOB SWITCH           B9031002
         L     RPI,RSAVE2          RESTORE INPUT POINTER                B9031003
         STCM  RPI,8,RCARDLRL       AND CARD LENGTH                     B9031004
         LA    RPI,0(,RPI)         CLEAR HIGH-ORDER BYTE                B9031005
         L     RL1,RLSAVE2         RESTORE                              B9031006
         L     RL2,RLSAVE3          RETURN REGISTERS                    B9031007
         BR    RL2                   AND RETURN                         B9031008
         DROP  RBI                 KILL IOB ADDRESSABILITY              B9031009
         EJECT                                                          B9031010
*********************************************************************** B9031011
*                                                                     * B9031012
*        RTRACK -- SUBROUTINE TO ACQUIRE TRACK ADDRESS                * B9031013
*                                                                     * B9031014
*              FUNCTION -- TO ACQUIRE TRACK ADDRESS AND CHECKPOINT    * B9031015
*                          ALLOCATION IOT WHEN NECESSARY              * B9031016
*                                                                     * B9031017
*              OUTPUT -- R1 = TRACK ADDRESS                           * B9031018
*                                                                     * B9031019
*              LINK REGISTER -- RL2                                   * B9031020
*                                                                     * B9031021
*********************************************************************** B9031022
         SPACE 5                                                        B9031023
RTRACK   L     R1,RDRIOT           GET ADDRESS OF ALLOCATION IOT        B9031024
         LA    R1,IOTMSTAB-IOTDSECT(,R1) GET ADDR OF MASTER TAB      R4 B9031025
        $TRACK (R1)                GET NEXT TRACK ADDRESS               B9031026
         BNZR  RL2                 RETURN IF NOT NEW TRACK GROUP        B9031027
         SPACE 2                                                        B9031028
         L     R1,RDRIOT           GET ADDRESS OF ALLOCATION IOT        B9031029
RTRACKCK CLI   BUFECBCC-BUFDSECT(R1),0  TEST I/O STATUS                 B9031030
         BNE   RTRACKWR            BRANCH IF I/O IS NOT ACTIVE          B9031031
        $WAIT  IO                  WAIT FOR I/O TO COMPLETE             B9031032
         B     RTRACKCK            GO BACK AND TRY AGAIN                B9031033
         SPACE 3                                                     R4 B9031034
RTRACKWR ST    R1,PCEBUFAD         SET IOT BUFFER ADDRESS               B9031035
         MVC   PCESEEK,IOTTRACK-IOTDSECT(R1)  SET TRACK ADDRESS         B9031036
         ST    SAVE,PCEIOEWF       PREVENT BUFFER RELEASE               B9031037
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B9031038
        $EXCP  (R1)                INITIATE WRITE OF IOT                B9031039
         SLR   R1,R1               RESET DIRECT-ACCESS                  B9031040
         ST    R1,PCEIOEWF          EVENT WAIT FIELD                    B9031041
         L     R1,RDRIOT           RESTORE TRACK ADDRESS TO OUTPUT      B9031042
         L     R1,TABMTTR-TABDSECT+IOTMSTAB-IOTDSECT(,R1)  REGISTER  R4 B9031043
         BR    RL2                 RETURN                               B9031044
         EJECT                                                          B9031045
*********************************************************************** B9031046
*                                                                     * B9031047
*        RGETBUF -- SUBROUTINE TO INITIALIZE OUTPUT BUFFERS           * B9031048
*                                                                     * B9031049
*              FUNCTION -- ACQUIRE AND INITIALIZE OUTPUT BUFFER       * B9031050
*                                                                     * B9031051
*              INPUT -- RW = TRACK ADDRESS                            * B9031052
*                                                                     * B9031053
*              OUTPUT -- RBO = ADDRESS OF OUTPUT BUFFER               * B9031054
*                                                                     * B9031055
*              LINK REGISTER -- RL2                                   * B9031056
*                                                                     * B9031057
*********************************************************************** B9031058
         SPACE 5                                                        B9031059
RGETBUF $GETBUF WAIT=YES           GET OUTPUT BUFFER                 R4 B9031060
         ST    R1,RDROBUF          SAVE BUFFER ADDRESS               R4 B9031061
         ST    RW,RBUFTRK(,R1)     SET TRACK ADDRESS IN BUFFER       R4 B9031062
         LTR   JCT,JCT             TEST FOR JCT                         B9031063
         BZ    *+10                BRANCH IF NO JCT                     B9031064
         MVC   HDBJBKEY-BUFDSECT(,R1),JCTJBKEY  SET JOB KEY          R4 B9031065
         MVC   HDBPDDBK-BUFDSECT(,R1),RDRDSKEY   AND DATA SET KEY    R4 B9031066
         LA    R15,BUFSTART-BUFDSECT-3(,R1)  COMPUTE END             R4 B9031067
         AH    R15,$BUFSIZE                   OF BUFFER              R4 B9031068
         ST    R15,RBOEND          SAVE FOR TEST                     R4 B9031069
         LA    R1,ROBUFST(,R1)     SET UP                            R4 B9031070
         ST    R1,RBONEXT           OUTPUT POINTER                      B9031071
         BR    RL2                 RETURN                               B9031072
         EJECT                                                          B9031073
*                                                                       B9031074
*                             READER CONSTANTS AND OPERATOR MESSAGES    B9031075
*                                                                       B9031076
         SPACE 3                                                        B9031077
RUSERID  EQU   $POSTSAV,9          TSU USERID WORK AREA              R4 B9031078
RDEST    EQU   $POSTSAV,8          DESTINATION WORK AREA             R4 B9031079
         DS    0D                                                    R4 B9031080
RKBLANKS DC    CL8' '              BLANK CONSTANT                    R4 B9031081
RJOBHELD $MSG  101,'HELD'          JOB HELD MSG                      R4 B9031082
RDELMSG  $MSG  119,'DELETED'                                            B9031083
RJOBDOC  DC    C'******** ERROR OF LOGIC IN JES2B903, CONT'  R4  *B903* B9031084
         DC    C'ACT T.S.G. BRUSSELS. ***************** '    R4  *B903* B9031085
         EJECT                                                          B9031086
         LTORG                                                          B9031087
         SPACE 1                                                        B9031088
         END                                                            B9031089
