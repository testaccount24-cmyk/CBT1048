JES2B306 TITLE 'SET/REMOVE SOFT HOLD BY CLASS(ES)/REMOTE(S) - CONTROL BCB3060120
               LOCK GENERATION MACRO DEFINITIONS'                       B3060130
*                                                                       B3060140
**** $HASPCB ****                  GENERATE HASP CONTROL BLOCKS         B3060150
*                                                                       B3060160
         MACRO                                                          B3060170
         $HASPCB &DOC=NO,&LIST=NO                                       B3060180
         GBLC  &PRINT,&GEN,&DATA                                        B3060190
         PUSH  PRINT                                                    B3060200
         PRINT &PRINT                                                   B3060210
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              B3060220
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  B3060230
         $ADCT DOC=&DOC            GENERATE HASP ADCT DSECT             B3060240
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             B3060250
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              B3060260
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              B3060270
         $COMWORK DOC=&DOC         GENERATE COM PCE WORK AREA DSECT     B3060280
         SPACE 1                                                        B3060290
         POP   PRINT                                                    B3060300
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           B3060310
         MEND                                                           B3060320
         TITLE 'JES2B306 - SET/REMOVE SOFT HOLD BY CLASS(ES)/REMOTE(S)' B3060330
JES2B306 CSECT             SET/REMOVE SOFT HOLD MOD PROGRAM             B3060340
         SPACE 2                                                        B3060350
*******************************************************************     B3060360
*                                                                 *     B3060370
*        PROGRAM ID. :             JES2B306                       *     B3060380
*                                                                 *     B3060390
*        DATE WRITTEN :            JANUARY 1978.                  *     B3060400
*                                                                 *     B3060410
*        AUTHOR :                  J.NOLS                         *     B3060420
*                                                                 *     B3060430
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     B3060440
*                                                                 *     B3060450
*******************************************************************     B3060460
         SPACE 3                                                        B3060470
*******************************************************************     B3060480
*                                                                 *     B3060490
*        PURPOSE                                                  *     B3060500
*       ---------                                                 *     B3060510
*                                                                 *     B3060520
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.             *     B3060530
*        IT IS LOADED AT JES2 INITIALISATION UPON REQUEST VIA     *     B3060540
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS       *     B3060550
*        ENTERED VIA SEVERAL $CBAL'S FROM THE HASP COMMAND        *     B3060560
*        PROCESSOR ROUTINE IN HASPCOMM AT STATEMENT K1781600,     *     B3060570
*        K1784100 AND K1803600.                                   *     B3060580
*                                                                 *     B3060590
*        ATTENTION : MOD WITH THREE ENTRY POINTS.                 *     B3060600
*                                                                 *     B3060610
*        ON ENTRY HASPCOMM HAS ESTABLISHED THE FOLLOWING          *     B3060620
*        REGISTER CONVENTIONS IN ADDITION TO NORMAL HASP USAGE:-  *     B3060630
*                                                                 *     B3060640
*        ENTRY POINT 1;-                                          *     B3060650
*                                                                 *     B3060660
*         R1     ----------->      POINTS TO FIRST OPERAND        *     B3060670
*                                                                 *     B3060680
*        ENTRY POINT 2;-                                          *     B3060690
*                                                                 *     B3060700
*        ENTRY POINT 3;-                                          *     B3060710
*                                                                 *     B3060720
*        R1 --------------------> JQE                             *     B3060730
*                                                                 *     B3060740
*******************************************************************     B3060750
         EJECT                                                          B3060760
         COPY  $HASPGEN            HASP OPTIONS                         B3060770
         TITLE 'CONTROL BLOCK OPTIONS'                                  B3060780
         $SYSPARM (OFF,GEN,DATA,NO,NO)     SET DOCUMENTATION OPTIONS    B3060790
         SPACE 3                                                        B3060800
*                                                                       B3060810
*        GENERATE HASP CONTROL BLOCKS                                   B3060820
*                                                                       B3060830
         SPACE 2                                                        B3060840
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       B3060850
         TITLE 'JES2B306 - ENTRY'                                       B3060860
*********************************************************************** B3060870
*        MOD ENTRY                                                    * B3060880
*********************************************************************** B3060890
         SPACE 1                                                        B3060900
JES2B306 $MODNTRY CSECT=YES,EXIT=EXITB306,DOC=&DOC MODIFICATION ENTRY   B3060910
         TITLE 'JES2B306 - MAIN PROCESSING ROUTINE'                     B3060920
*********************************************************************** B3060930
*                                                                     * B3060940
*        SET/REMOVE SOFT HOLD BY CLASS(ES)/REMOTE(S)                  * B3060950
*                                                                     * B3060960
*        $AA OR $HA                                                   * B3060970
*              OPERANDS :                                             * B3060980
*        SID. = SYSTEM ID. (MUST FOLLOW IMMEDIATELY $AA,/$HA,)        * B3060990
*        C=X TO XXXXXXXX = CLASS(ES), MAXIMUN 8 CLASSES.              * B3061000
*        R=DEST1-DEST2 = JOBS WITH ROUTE CODES IN THE RANGE           * B3061010
*   OR - R=LOCAL = ONLY FOR LOCAL.                                    * B3061020
*   OR - R=ALL = ALL REMOTES, EXCEPT LOCAL.                           * B3061030
*                                                                     * B3061040
*********************************************************************** B3061050
         SPACE 1                                                        B3061060
         CLI   APCESR9,2           TEST ENTRY POINT CODE                B3061070
         BL    B306EP1              AND GO TO                           B3061080
         BE    B306EP2               APPROPRIATE                        B3061090
         BH    B306EP3                ENTRY POINT.                      B3061100
         SPACE 1                                                        B3061110
B306EP1  CLC   0(2,R1),CLASS       IS IT CLASS PARAMETER?               B3061120
         BE    B306RTYS            BRANCH IF YES                        B3061130
         CLC   0(2,R1),REMOTE      IS IT REMOTE PARAMETER?              B3061140
         BE    B306RTYS            YES                                  B3061150
         B     B306RTNO            NO                                   B3061160
         SPACE 1                                                        B3061170
B306EP2  LA    R1,COMMAND+3        POINT TO 1ST COMMA (IF ANY)          B3061180
         CLI   0(R1),COMMA         TEST FOR COMMA                       B3061190
         BNE   B306RTYS            NO COMMA, THIS MOD. IS NOT CONCERNED B3061200
         CLI   COMNULOP,0          IS SID PRESENT?                      B3061210
         BE    B306NX1             NO, GO TO NX1                        B3061220
         LA    R1,1(R1)            INCREMENT POINTER PAST ','           B3061230
         CLC   0(3,R1),=C'ALL'     IS 'ALL' SPECIFIED?                  B3061240
         BNE   *+12                NO, SKIP NEXT TWO INSTRUCTIONS       B3061250
         LA    R1,3(R1)            INCREMENT POINTER PAST 'ALL'         B3061260
         B     B306NX1             GO TO NX1                            B3061270
         LA    R1,4(R1)            INCREMENT POINTER PAST 'SID.'        B3061280
B306NX1  CLI   0(R1),COMMA         TEST FOR COMMA                       B3061290
         BNE   B306RTYS            NO COMMA, THIS MOD. IS NOT CONCERNED B3061300
         LA    R1,1(R1)            INCREMENT POINTER PAST COMMA         B3061310
         XC    COMPNTER(30),COMPNTER  ZEROISE WORK AREA                 B3061320
B306NX2  ST    R1,APCESR1          STORE R1 IN CASE OF INVALID COMMAND  B3061330
         CLC   0(2,R1),CLASS       IS IT CLASS PARAMETER?               B3061340
         BE    B306CLS             BRANCH IF YES                        B3061350
         CLC   0(2,R1),REMOTE      IS IT REMOTE PARAMETER?              B3061360
         BE    B306RMT             BRANCH IF YES                        B3061370
         B     B306RTNO            NO, INVALID COMMAND                  B3061380
         EJECT                                                          B3061390
*********************************************************************** B3061400
*                                                                     * B3061410
*        SCAN 'CLASS' OPERAND                                         * B3061420
*                                                                     * B3061430
*********************************************************************** B3061440
         SPACE 1                                                        B3061450
B306CLS  LA    R1,2(R1)            INCREMENT POINTER PAST 'C='          B3061460
         SR    R2,R2               ZEROISE                              B3061470
         ICM   R2,1,COMNOCLS       CLASS OPERAND IN DOUBLE?             B3061480
         BNZ   B306RTNO            YES, INVALID COMMAND                 B3061490
         LA    R2,9                ESTABLISH LOOP                       B3061500
         LR    R3,R1               R3 = R1                              B3061510
B306LOP1 CLI   0(R3),COMMA         TEST FOR COMMA                       B3061520
         BE    B306NX3             BRANCH IF COMMA                      B3061530
         CLI   0(R3),BLANK         TEST FOR BLANK                       B3061540
         BE    B306NX3             BRANCH IF BLANK                      B3061550
         TRT   0(1,R3),B306ALPH    TEST IF CLASS CODE IS ALPHABETICAL?  B3061560
         BNZ   B306RTNO            NO, INVALID COMMAND                  B3061570
         NI    0(R3),255-X'80'     PREPARE CLASS TO COMP. WITH JQETYPE  B3061580
         LA    R3,1(R3)            INCREMENT POINTER OF ONE             B3061590
         BCT   R2,B306LOP1         GO PROCESS NEXT POSITION             B3061600
         B     B306RTNO            INVALID COMMAND                      B3061610
B306NX3  L     R4,=F'9'            COMPUTE NUMBER OF                    B3061620
         SR    R4,R2                CLASSES CODE                        B3061630
         BZ    B306RTNO            INVALID COMMAND IF ZERO              B3061640
         STC   R4,COMNOCLS         SAVE IT                              B3061650
         BCTR  R4,0                - 1 FOR EXECUTE INSTRUCTION          B3061660
         EX    R4,B306EX1          MOVE CLASS(ES) CODE INTO SAVE AREA   B3061670
         MVC   COMNULOP+1(3),=C'306' INDICATE IS OK FOR ENTRY POINT 3   B3061680
         CLI   0(R3),COMMA         IS IT A COMMA?                       B3061690
         BNE   B306RTYS            NO, SCAN COMMAND TERMINATED          B3061700
         LA    R1,1(R3)            YES, ADJUST POINTER FOR NEXT PARAM.  B3061710
         B     B306NX2             GO TEST NEXT PARAMETER               B3061720
         SPACE 2                                                        B3061730
B306EX1  MVC   COMCLASS(0),0(R1)   *** EXECUTE ONLY ***                 B3061740
         EJECT                                                          B3061750
*********************************************************************** B3061760
*                                                                     * B3061770
*        SCAN 'REMOTE' OPERAND                                        * B3061780
*                                                                     * B3061790
*********************************************************************** B3061800
         SPACE 1                                                        B3061810
B306RMT  LA    R1,2(R1)            INCREMENT POINTER PAST 'R='          B3061820
         SR    R2,R2               ZEROISE                              B3061830
         ICM   R2,1,COMNORBU       REMOTE OPERAND IN DOUBLE?            B3061840
         BNZ   B306RTNO            YES, INVALID COMMAND                 B3061850
         CLC   0(3,R1),=C'ALL'     IS 'ALL' SPECIFIED?                  B3061860
         BNE   B306NX4A            BRANCH IF NO                         B3061870
         MVC   COMRMTL(4),REQALL   YES, MOVE LOW&HIGH REMOTE NUMBERS    B3061880
         LA    R1,3(R1)            INCREMENT POINTER PAST 'ALL'         B3061890
         B     B306NX4B                                                 B3061900
B306NX4A CLC   0(5,R1),=C'LOCAL'   IS 'R=LOCAL' SPECIFIED?              B3061910
         BNE   B306NX4C            BRANCH IF NO                         B3061920
         XC    COMRMTL(4),COMRMTL  SET LOW&HIGH TO REMOTE 0             B3061930
         LA    R1,5(R1)            INCREMENT POINTER PAST 'LOCAL'       B3061940
B306NX4B LR    R3,R1               R3 = R1                              B3061950
         CLI   0(R1),BLANK         TEST FOR BLANK                       B3061960
         BE    B306NX8             BRANCH IF BLANK                      B3061970
         CLI   0(R1),RANGE         TEST FOR RANGE SIGN                  B3061980
         BE    B306RTNO            INVALID COMMAND IF YES               B3061990
         CLI   0(R1),COMMA         TEST FOR COMMA                       B3062000
         BE    B306NX8             BRANCH IF COMMA                      B3062010
         B     B306RTNO            INVALID COMMAND                      B3062020
B306NX4C SR    R2,R2               ZEROISE                              B3062030
         LR    R3,R1               R3 = R1                              B3062040
         LA    R4,B306NX5          ASSUME GOOD CONTINUATION             B3062050
B306LOP2 CLI   0(R3),COMMA         TEST FOR COMMA                       B3062060
         BER   R4                  BRANCH IF COMMA                      B3062070
         CLI   0(R3),RANGE         TEST FOR RANGE SIGN                  B3062080
         BER   R4                  BRANCH IF RANGE SIGN                 B3062090
         CLI   0(R3),BLANK         TEST FOR BLANK                       B3062100
         BER   R4                  BRANCH IF BLANK                      B3062110
         CLI   0(R3),C'0'          TEST IF THIS POS. OF RMTNO NUMERIC?  B3062120
         BL    B306RTNO            NO, INVALID COMMAND                  B3062130
         CLI   0(R3),C'9'          TEST NUMERIC AGAIN                   B3062140
         BH    B306RTNO            NOT NUMERIC, INVALID COMMAND         B3062150
         LA    R2,1(R2)            INCREMENT LENGTH OF ONE              B3062160
         LA    R3,1(R3)            INCREMENT POINTER OF ONE             B3062170
         CH    R2,=H'3'            LENGTH GREATER THAN 3?               B3062180
         BH    B306RTNO            YES, INVALID COMMAND                 B3062190
         B     B306LOP2            GO TEST NEXT POSITION                B3062200
B306NX5  LA    R4,B306NX7          ASSUME GOOD CONTINUATION             B3062210
B306NX6  LTR   R2,R2               IS LENGTH = 0 ?                      B3062220
         BZ    B306RTNO            YES, INVALID COMMAND                 B3062230
         BCTR  R2,0                - 1 FOR NEXT EXECUTE INSTRUCTION     B3062240
         AH    R2,=X'0070'         PREPARE LL OF NEXT EX INSTRUCTION    B3062250
         EX    R2,B306EX2          EXECUTE PACK INSTRUCTION             B3062260
         CVB   R2,COMDEC           CONVERT TO BINARY                    B3062270
         CH    R2,=H'255'          ROUTE CODE GREATER THAN 255 ?        B3062271
         BH    B306RTNO            YES, INVALID COMMAND                 B3062272
         BR    R4                                                       B3062280
B306NX7  STH   R2,COMRMTL          STORE BINARY RMT NO                  B3062290
         STH   R2,COMRMTH          STORE BINARY RMT NO                  B3062300
B306NX8  MVI   COMNORBU,1          INDICATE 'R=' PRESENT                B3062310
         MVC   COMNULOP+1(3),=C'306' INDICATE IS OK FOR ENTRY POINT 3   B3062320
         MVC   COMRMTL(1),$OWNSYS  SET LOW ANSWER                       B3062330
         MVC   COMRMTH(1),$OWNSYS  SET HIGH ANDWER                      B3062340
         CLI   0(R3),RANGE         TEST FOR RANGE SIGN                  B3062350
         BL    B306RTYS            BRANCH IF BLANK                      B3062360
         LA    R3,1(R3)            INCREMENT POINTER PAST ',' OR '-'    B3062370
         LR    R1,R3               R1 = R3                              B3062380
         BH    B306NX2             BRANCH IF COMMA                      B3062390
         SR    R2,R2               ZEROISE                              B3062400
         BAL   R4,B306LOP2         GO PROCESS DEST2                     B3062410
         CLI   0(R3),RANGE         TEST FOR RANGE SIGN                  B3062420
         BE    B306RTNO            INVALID COMMAND IF YES               B3062430
         BAL   R4,B306NX6          GO CONVERT DEST2 TO BINARY           B3062440
         STH   R2,COMRMTH          STORE DEST 2                         B3062450
         MVC   COMRMTH(1),$OWNSYS  SET HIGH ANDWER                      B3062460
         CLI   0(R3),BLANK         TEST FOR BLANK                       B3062470
         BE    B306RTYS            BRANCH IF YES                        B3062480
         LA    R1,1(R3)            INCREMENT POINTER PAST ','           B3062490
         B     B306NX2             GO PROCESS NEXT OPERAND              B3062500
         SPACE 3                                                        B3062510
B306EX2  PACK  COMDEC(0),0(0,R1)   PACK DEST                            B3062520
         EJECT                                                          B3062530
*********************************************************************** B3062540
*                                                                     * B3062550
*        SCAN CURRENT JQE                                             * B3062560
*                                                                     * B3062570
*********************************************************************** B3062580
         SPACE 1                                                        B3062590
B306EP3  CLC   COMNULOP+1(3),=C'306' '306' SIGNAL PRESENT ?             B3062600
         BNE   B306RTYS            BRANCH IF NO                         B3062610
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B3062620
         SR    R2,R2               ZEROISE                              B3062630
         ICM   R2,1,COMNOCLS       CLASS OPERAND PRESENT ?              B3062640
         BZ    B306RTST            NO, GO TEST REMOTE NO                B3062650
         LA    R3,COMCLASS         GET ADDRESS OF FIRST CLASS           B3062660
B306LOP3 CLC   0(1,R3),JQETYPE     CLASS JQE = CLASS FROM C= OPERAND?   B3062670
         BE    B306RTST            YES, GO TEST REMOTE NO               B3062680
         LA    R3,1(R3)            POINT TO NEXT CLASS                  B3062690
         BCT   R2,B306LOP3         GO TEST NEXT CLASS                   B3062700
         B     B306RTNO            DON'T PROCESS THIS JQE               B3062710
         SPACE 2                                                        B3062720
B306RTST SR    R2,R2               ZEROISE                              B3062730
         ICM   R2,1,COMNORBU       IS REMOTE OPERAND PRESENT            B3062740
         BZ    B306RTYS            NO                                   B3062750
         CLC   JQEPRTRT,COMRMTL    PRINT ROUTE IN THE RANGE ?           B3062760
         BL    B306PUN             NO, GO TEST PUNCH ROUTE              B3062770
         CLC   JQEPRTRT,COMRMTH    PRINT ROUTE IN THE RANGE ?           B3062780
         BH    B306PUN             NO, GO TEST PUNCH ROUTE              B3062790
         B     B306RTYS            YES                                  B3062800
B306PUN  CLC   JQEPUNRT,COMRMTL    PUNCH ROUTE IN THE RANGE ?           B3062810
         BL    B306RTNO            NO, DON'T PROCESS THIS JQE           B3062820
         CLC   JQEPUNRT,COMRMTH    PUNCH ROUTE IN THE RANGE ?           B3062830
         BH    B306RTNO            NO, DON'T PROCESS THIS JQE           B3062840
         B     B306RTYS            YES                                  B3062850
         EJECT                                                          B3062860
*********************************************************************** B3062870
*        SET CONDITION CODE TO YES OR NO                              * B3062880
*********************************************************************** B3062890
         SPACE 1                                                        B3062900
B306RTYS MVI   APCE$$X,$$YES       SET CONDITION TO 'YES'               B3062910
         B     EXITB306             AND GO TO EXIT                      B3062920
         SPACE 1                                                        B3062930
B306RTNO MVI   APCE$$X,$$NO        SET CONDITION CODE TO 'NO'           B3062940
         B     EXITB306             AND GO TO EXIT                      B3062950
         EJECT                                                          B3062960
CLASS    DC    C'C='               CLASS PARAMETER                      B3062970
REMOTE   DC    C'R='               REMOTE PARAMETER                     B3062980
REQALL   DC    X'000100FF'         LOW & HIGH LIMITS IF R=ALL SPECIFIED B3062990
         SPACE 1                                                        B3063000
COMMA    EQU   C','                COMMA                                B3063010
BLANK    EQU   X'40'               BLANK                                B3063020
RANGE    EQU   C'-'                RANGE SIGN                           B3063030
         SPACE 1                                                        B3063040
COMNOCLS EQU   COMPNTER,1          CLASS COUNT                          B3063050
COMCLASS EQU   COMPNTER+1,8        SAVE AREA FOR CLASS OPERAND(S)       B3063060
COMNORBU EQU   COMPNTER+9,1        NUMBER OF TWO-BYTE USED IN THE NEXT  B3063070
*                                   FIELD.                              B3063080
COMRMTL  EQU   COMPNTER+10,2       SAVE AREA FOR LOW REMOTE NUMBER      B3063090
COMRMTH  EQU   COMPNTER+12,2       SAVE AREA FOR HIGH REMOTE NUMBER     B3063100
COMDEC   EQU   COMPNTER+20,8       WA FOR DECIMAL OPERATIONS            B3063110
         SPACE 1                                                        B3063120
B306ALPH DC    256X'01'            TRANSLATE AND TEST ALPHA TABLE       B3063130
         ORG   B306ALPH+C'A'                                            B3063140
         DC    9X'00'              'A' TO 'I'                           B3063150
         ORG                                                            B3063160
         ORG   B306ALPH+C'J'                                            B3063170
         DC    9X'00'              'J' TO 'R'                           B3063180
         ORG                                                            B3063190
         ORG   B306ALPH+C'S'                                            B3063200
         DC    8X'00'              'S' TO 'Z'                           B3063210
         ORG                                                            B3063220
         TITLE 'JES2B306 - EXIT'                                        B3063230
         SPACE 1                                                        B3063240
*********************************************************************** B3063250
*        MOD EXIT                                                     * B3063260
*********************************************************************** B3063270
         SPACE 1                                                        B3063280
EXITB306 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  B3063290
         SPACE 2                                                        B3063300
         LTORG                                                          B3063310
         SPACE 1                                                        B3063320
         END                                                            B3063330
