JES2B501 TITLE 'SET REGION TO DEFAULT     : CONTROL BLOCK GENERATION MA*B5010160
               CRO DEFINITIONS'                                         B5010170
*                                                                       B5010180
**** $HASPCB ****                  GENERATE HASP CONTROL BLOCKS         B5010190
*                                                                       B5010200
         MACRO                                                          B5010210
         $HASPCB &DOC=NO,&LIST=NO                                       B5010220
         GBLC  &GEN,&DATA,&PRINT                                        B5010230
         PUSH  PRINT                                                    B5010240
         PRINT &PRINT                                                   B5010250
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              B5010260
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  B5010270
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              B5010280
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             B5010290
         $APCE TYPE=SPCE,DOC=&DOC  GENERATE MODS SPCE DSECT             B5010300
         $TEXT LIST=&LIST          GENERATE INTERNAL TEXT DSECTS        B5010310
         $KEYS LIST=&LIST          GENERATE EQUATES FOR INTERNAL TEXT   B5010320
         SPACE 1                                                        B5010330
         POP   PRINT                                                    B5010340
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           B5010350
         MEND                                                           B5010360
         TITLE 'JES2B501 - SET REGION SIZE TO DEFAULT IN JOBCARD'       B5010370
JES2B501 CSECT                     SET REGION SIZE TO DEFAULT           B5010380
         SPACE 2                                                        B5010390
*********************************************************************** B5010400
*                                                                     * B5010410
*        PROGRAM ID. :             JES2B501                           * B5010420
*                                                                     * B5010430
*        DATE WRITTEN :            JUNE 1977                          * B5010440
*                                                                     * B5010450
*        AUTHOR :                  D.A.MOORCROFT                      * B5010460
*                                                                     * B5010470
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS         * B5010480
*                                                                     * B5010490
*********************************************************************** B5010500
         SPACE 3                                                        B5010510
*********************************************************************** B5010520
*                                                                     * B5010530
*        PURPOSE                                                      * B5010540
*       ---------                                                     * B5010550
*                                                                     * B5010560
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.                 * B5010570
*        IT IT LOADED AT JES2 INITIALISATION UPON REQUEST VIA         * B5010580
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS           * B5010590
*        ENTERED VIA A $CBAL FROM THE JCL CONVERSION SUB-TASK         * B5010600
*        INTERNAL TEXT EXIT ( XTXTEXIT ) IN HASPXEQ AT U2124200       * B5010610
*                                                                     * B5010620
*        ON ENTRY:                                                    * B5010630
*        APCESR1  - ADDRESS OF INTERNAL TEXT PREFIX                     B5010640
*                                                                     * B5010650
*        OUR IMPLEMENTATION OF REGION PROCESSING ASSIGNS A DEFAULT    * B5010660
*        REGION SIZE OF 64K, AND STEP STHAT REQUIRE MORE MUST         * B5010670
*        REQUEST IT IN THE EXEC STATEMENT.  BECAUSE REGION SIZE       * B5010680
*        REQUESTED IS  FUNDAMENTAL FACTOR IN OUR CHARGE-OUT SYSTEM    * B5010690
*        IT WOULD COST PEOPLE A BOMB IF THEY CODED THEIR GREATEST     * B5010700
*        CORE REQUIREMENT IN THE JOB CARD, AND CONSEQUENTLY, BECAUSE  * B5010710
*        WE ARE NICE GUYS, WE DISALLOW REGION PARAMETERS IN THE       * B5010720
*        JOB CARDS.  THIS ROUTINE REPLACES THEM WITH A PARAMETER      * B5010730
*        SPECIFYING THE DFAULT SIZE IF ONE IS SUPPLIED.               * B5010740
*                                                                     * B5010750
*        NOTE THAT, ALTHOUGH THIS ROUTINE TESTS FOR THE ABSENCE OF    * B5010760
*        A REGION PARAMETER AND EXITS IF IT IS NOT THERE, THIS        * B5010770
*        CONDITION SHOULD NEVER ARISE, BECAUSE IF NO REGION PARAMETER * B5010780
*        IS SUPPLIED ON THE JOB CARD, THE CONVERTER INSERTS ONE       * B5010790
*        THAT SPECIFIES THE APPROPRIATE DEFAULT VALUE FOR THE         * B5010800
*        INITIATOR.  ONLY IF THE REGION PARAMETER IS NOT A DEFAULT    * B5010810
*        DO WE SUBSTITUTE OUR STANDARD DEFAULT OF 64K.                * B5010820
*                                                                     * B5010830
*********************************************************************** B5010840
         EJECT                                                          B5010850
         PRINT OFF                 SUPPRESS PRINT OF HASP OPTIONS       B5010860
         COPY  $HASPGEN            HASP OPTIONS                         B5010870
         PRINT ON                  RE-ESTABLISH PRINT FOR PROGRAM       B5010880
         TITLE 'CONTROL BLOCK OPTIONS'                                  B5010890
         $SYSPARM (OFF,GEN,NODATA,NO,NO)   SET DOCUMENTATION OPTIONS    B5010900
         SPACE 3                                                        B5010910
*                                                                       B5010920
*        GENERATE HASP CONTROL BLOCKS                                   B5010930
*                                                                       B5010940
         SPACE 2                                                        B5010950
         $HASPCB DOC=&DOC,LIST=YES               GENERATE HASP C/B      B5010960
         TITLE 'SET REGION PARAMETER TO DEFAULT VALUE'                  B5010970
*********************************************************************** B5010980
*        FORMAT OF APCE WORK AREA  ( AS USED BY JES2B501 )            * B5010990
*********************************************************************** B5011000
         SPACE 1                                                        B5011010
APCEDSCT DSECT                                                          B5011020
         ORG   APCEUSER            REDEFINE GENERAL PURPOSE WORK AREA   B5011030
B501USER DS    0CL40               WE HAVE 40 BYTES TO PLAY WITH        B5011040
         DS    0D                  ENSURE DOUBLEWORD ALIGNMENT          B5011050
B501DWRD DS    D                   DOUBLE-WORD WORK AREA                B5011060
TXTAKEY  DS    F                   ADDRESS OF REQUESTED KEY             B5011070
TXTANEXT DS    F                   ADDRESS OF NEXT KEY IN STRING        B5011080
TXTLKEY  DS    F                   LENGTH OF REQUESTED KEY + ITS PARMS  B5011090
TXTRLEN  DS    F                   LENGTH FROM NEXT KEY TO END OF STRNG B5011100
TXTSKEY  DS    C                   KEY FOR WHICH TO SEARCH              B5011110
         ORG                                                            B5011120
JES2B501 CSECT                                                          B5011130
         EJECT                                                          B5011140
*********************************************************************** B5011150
*        INITIALISATION                                               * B5011160
*********************************************************************** B5011170
         SPACE 1                                                        B5011180
JES2B501 $MODNTRY CSECT=YES,EXIT=EXITB501,DOC=&DOC MODIFICATION ENTRY   B5011190
         SPACE 2                                                        B5011200
         USING TXTDSECT,R5         ESTABLISH TEXT STRING ADDR'Y         B5011210
         SPACE 5                                                        B5011220
*        REGISTER USAGE IN THIS MODULE :-                               B5011230
         SPACE 1                                                        B5011240
*        R0    -                                                        B5011250
*        R1    - LENGTH OF KEY + ALL ITS PARM VALUES                    B5011260
*        R2    - ADDRESS OF REQUESTED TEXT KEY                          B5011270
*        R3    - LENGTH OF TEXT FROM NEXT KEY TO END OF STRING          B5011280
*        R4    - BAL RETURN ADDRESS                                     B5011290
*        R5    - ADDRESS OF TEXT STRING PREFIX                          B5011300
*        R6    - AHCT ADDRESS                                           B5011310
*        R7    - APCE ADDRESS                                           B5011320
*        R8    - ADDRESS OF NEXT TEXT KEY                               B5011330
*        R9    -                                                        B5011340
*        R10   - LENGTH OF REPLACEMENT REGION STRING                    B5011350
*        R11   - HCT ADDRESS                                            B5011360
*        R12   - MODULE BASE REGISTER                                   B5011370
*        R13   - PCE ADDRESS                                            B5011380
*        R14   -                                                        B5011390
*        R15   -                                                        B5011400
         EJECT                                                          B5011410
*********************************************************************** B5011420
*        MAIN-LINE LOGIC: SET REGION TO DEFAULT VALUE                 * B5011430
*********************************************************************** B5011440
         SPACE 1                                                        B5011450
         L     R5,APCESR1          GET ADDRESS OF TEXT PREFIX           B5011460
         LA    R1,STRJKEY          POINT AT 1ST KEY IN STRING           B5011470
         TM    STRJINDC,JTXREGDF   TEST IF REGION SIZE IS A DEFAULT     B5011480
         BO    MAINLNEX            LET IT BE IF A DEFAULT               B5011490
         MVI   TXTSKEY,REGINJK     SET TO SCAN FOR REGION KEYWORD       B5011500
         BAL   R4,TXTFIND          LOCATE KEY IN TEXT STRING            B5011510
         BNE   MAINLNEX            EXIT IF NO REG: SHOULDN'T HAPPEN     B5011520
         CLC   REGNTEXT(REGNTXTL),0(R2) IS IT ALREADY CORRECT           B5011530
         BE    MAINLNEX            EXIT IF IT IS ALRIGHT                B5011540
         LA    R10,REGNTXTL        SET R9 TO LENGTH OF SUBSTITUTE TEXT  B5011550
         LA    R14,REGNTEXT        POINT AT SUBSTITUTE TEXT             B5011560
         BAL   R4,TXTREP           REPLACE REGION STRING WITH OUR DEFAU B5011570
         SPACE 1                                                        B5011580
MAINLNEX EQU   *                   END OF MAIN-LINE PROCESSING          B5011590
         EJECT                                                          B5011600
*********************************************************************** B5011610
*        RETURN TO JES2 MAINLINE CODE                                 * B5011620
*********************************************************************** B5011630
         SPACE 1                                                        B5011640
EXITB501 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  B5011650
         TITLE 'A BRIEF DISSERTATION ON THE FORMAT OF INTERNAL TEXT'    B5011660
*********************************************************************** B5011670
*        DESCRIPTION OF INTERNAL TEXT                                 * B5011680
*********************************************************************** B5011690
         SPACE 1                                                        B5011700
*        THE MAPPING MACROS ARE SINGULARLY UNHELPFUL ABOUT THE FORMAT   B5011710
*         OF THE STRING OF INTERNAL TEXT, AND SO THAT YOU MAY BETTER    B5011720
*         UNDERSTAND WHAT THE FOLLOWING ROUTINES ARE DOING, I WILL      B5011730
*         ILLUSTRATE WITH AN EXAMPLE.                                   B5011740
         SPACE 1                                                        B5011750
*        CONSIDER THE STATEMENT :-                                      B5011760
*              SPACE=(TRK,(190,19),RLSE)                                B5011770
         SPACE 1                                                        B5011780
*        IN A STRING OF INTERNAL TEXT, THIS WOULD APPEAR AS :-          B5011790
*              X'47'               KEY REPRESENTING 'SPACE'             B5011800
*              X'03'               NO OF PARMS ( 'TRK', '(19,19)'       B5011810
*                                  AND 'RLSE' )                         B5011820
*              X'03'               LENGTH OF IST PARM ('TRK')           B5011830
*              C'TRK'              PARAMETER VALUE                      B5011840
*              X'82'               SUBPARM COUNT OF 2 (PRIMARY & SEC'Y  B5011850
*              X'03'               LENGTH OF 1ST SUBPARM OF SECOND PARM B5011860
*              C'190'              VALUE OF IST SUBPARM OF SECOND PARM  B5011870
*              X'02'               LENGTH OF 2ND SUBPARM OF 2ND PARM    B5011880
*              C'19'               VALUE OF 2ND SUBPARM OF 2ND PARM     B5011890
*              X'04'               LENGTH OF 3RD PARM                   B5011900
*              C'RLSE'             VALUE OF 3RD PARM                    B5011910
         SPACE 1                                                        B5011920
*        EASY, ISN'T IT ?                                               B5011930
         SPACE 5                                                        B5011940
*        NOTE:                                                          B5011950
*         1. IN THE ROUTINES THAT FOLLOW I REFER TO A PARM DESCRIPTOR.  B5011960
*            I MEAN BY THIS A FIELD THAT MAY EITHER CONTAIN THE LENGTH  B5011970
*            OF THE IMMEDIATELY ADJACENT PARM VALUE, OR MAY CONATIN     B5011980
*            A SUB-PARM COUNT.  IF IT CONTAINS A SUB-PARM COUNT, THEN   B5011990
*            THE FIRST BIT IS ON ( SO THAT IT WILL SET A MINUS          B5012000
*            CONDITION WHEN INSERTED INTO A REGISTER WITH 'ICM' ).      B5012010
         TITLE 'LOCATE KEY IN STRING OF INTERNAL TEXT'                  B5012020
*********************************************************************** B5012030
*        LOCATE KEY IN STRING OF INTERNAL TEXT                        * B5012040
*********************************************************************** B5012050
         SPACE 1                                                        B5012060
*        THE FOLLOWING ROUTINE LOCATES AN INTERNAL TEXT KEYWORD IN      B5012070
*         A STRING OF INTERNAL TEXT.                                    B5012080
         SPACE 1                                                        B5012090
*        ON ENTRY:                                                      B5012100
*        R1       - ADDRESS OF THE 1ST KEY IN THE STRING                B5012110
*        TXTSKEY  - KEY FOR WHICH TO SEARCH                             B5012120
         SPACE 1                                                        B5012130
*        ON EXIT:                                                       B5012140
*        R1       - LENGTH OF THE KEY PLUS ALL PARMS AND SUB-PARMS      B5012150
*        TXTLKEY  - DITTO                                               B5012160
*        R2       - ADDRESS OF THE REQUESTED KEY ( OR THE END KEY )     B5012170
*        TXTAKEY  - DITTO                                               B5012180
*        R3       - LENGTH OF THE REMAINDER (FROM NEXT KEY TO END )     B5012190
*        TXTRLEN  - DITTO                                               B5012200
*        R8       - ADDRESS OF THE NEXT KEY IN THE STRING               B5012210
*        TXTANEXT - DITTO                                               B5012220
         SPACE 1                                                        B5012230
*        UPON RETURN THE PSW COND CODE IS SET SUCH THAT:                B5012240
*         BE  - REQUESTED KEY LOCATED                                   B5012250
*         BNE - REQUESTED KEY NOT FOUND                                 B5012260
         EJECT                                                          B5012270
*********************************************************************** B5012280
*        LOCATE KEY IN STRING OF INTERNAL TEXT ( CONT'D )             * B5012290
*********************************************************************** B5012300
         SPACE 1                                                        B5012310
TXTFIND $SUBIN SAVE=R4             ENTER ROUTINE                        B5012320
         LR    R2,R5               POINT R2 AT START OF TEXT STRING     B5012330
         AH    R2,STRLTH           ADD LENGTH OF TEXT STRING .....      B5012340
         BCTR  R2,0                AND DECREMENT TO GET ADDR OF END KEY B5012350
         ST    R2,TXTAKEY          PRESERVE ADDR OF END KEY JUST IN CAS B5012360
         MVI   APCE$$X,$$Y         ASSUME REQUESTED KEY NOT PRESENT     B5012370
         XR    R2,R2               CLEAR WORK REGISTER                  B5012380
         XR    R3,R3               CLEAR WORK REGISTER                  B5012390
         SPACE 1                                                        B5012400
TXTFIND1 EQU   *                   AT THIS POINT R1 POINTS AT A KEY     B5012410
         BAL   R4,TXTGETKY         GET THE ADDRESS OF THE NEXT KEY      B5012420
*                                  R1 NOW POINTS AT THE NEXT KEY        B5012430
         CLI   0(R1),ENDK          IS THIS KEY THE END OF THE TEXT      B5012440
         BE    TXTFINDX            EXIT IF YES: REQUESTED KEY NOT THERE B5012450
         CLC   0(1,R1),TXTSKEY     IS THIS THE KEY WE ARE LOOKING FOR   B5012460
         BNE   TXTFIND1            BR IF NOT TO GET NEXT                B5012470
         SPACE 1                                                        B5012480
*                                  R1 POINTS AT THE KEY WE REQUIRE      B5012490
         ST    R1,TXTAKEY          PRESERVE ADDRESS OF DESIRED KEY      B5012500
         MVI   APCE$$X,$$X         PREPARE TO SET COND CODE FOR SUCCESS B5012510
         SPACE 1                                                        B5012520
         BAL   R4,TXTGETKY         GET ADDRESS OF NEXT KEY              B5012530
         ST    R1,TXTANEXT          ... AND PRESERVE ITS ADDRESS        B5012540
         LR    R8,R1               POINT R8 AT THE NEXT KEY             B5012550
         SPACE 1                                                        B5012560
         L     R2,TXTAKEY          POINT R2 AT THE DESIRED KEY          B5012570
         SR    R1,R2               CALCULATE LENGTH OF THE DESIRED KEY  B5012580
         ST    R1,TXTLKEY           ... AND PRESERVE IT                 B5012590
         SPACE 1                                                        B5012600
         LA    R3,STRLTH           POINT R3 AT START OF PREFIX          B5012610
         AH    R3,STRLTH           POINT R3 1 BYTE PAST END OF STRING   B5012620
         SR    R3,R8               DETERMINE LENGTH FROM NEXT KEY TO EN B5012630
         ST    R3,TXTRLEN           ... AND PRESERVE IT                 B5012640
         SPACE 1                                                        B5012650
TXTFINDX L     R2,TXTAKEY          GET ADDR OF REQUESTED OR END KEY     B5012660
         $SUBOUT SETCC=YES         RESTORE REG, SET COND CODE & RETURN  B5012670
         EJECT                                                          B5012680
*********************************************************************** B5012690
*        LOCATE NEXT KEY IN STRING                                    * B5012700
*********************************************************************** B5012710
         SPACE 1                                                        B5012720
*        THIS ROUTINE LOCATES THE NEXT KEY IN THE STRING OF TEXT        B5012730
         SPACE 1                                                        B5012740
*        ON INPUT:                                                      B5012750
*         R1  - ADDRESS OF CURRENT KEY                                  B5012760
         SPACE 1                                                        B5012770
*        ON OUTPUT:                                                     B5012780
*         R1  - ADDRESS OF NEXT KEY                                     B5012790
         SPACE 1                                                        B5012800
*        R2 AND R3 ARE USED AS WORK REGISTERS                           B5012810
         SPACE 1                                                        B5012820
TXTGETKY $SUBIN ,                  ENTER ROUTINE                        B5012830
         ICM   R2,1,1(R1)          SET R2 TO NUMBER OF PARMS FOR KEY    B5012840
         LA    R1,2(,R1)           POINT R1 AT 1ST PARM DESCRIPTION     B5012850
         BZ    TXTGKYX             IF PARM COUNT WAS ZERO, THEN WE ARE  B5012860
*                                  POINTING AT ANOTHER KEY, SO EXIT     B5012870
         SPACE 1                                                        B5012880
TXTGKY1  EQU   *                   R1 POINTS AT A PARM DESCRIPTOR       B5012890
         ICM   R3,1,0(R1)          SET R3 TO LENGTH OF PARM             B5012900
         BM    TXTGKY3             IF BIT ONE IS ON THEN THIS IS NOT A  B5012910
*                                  LENGTH FIELD BUT A SUBPARM COUNT SO  B5012920
*                                  BRANCH TO PROCESS IT                 B5012930
         LA    R1,0(R3,R1)         POINT AT END OF THIS PARM            B5012940
         SPACE 1                                                        B5012950
TXTGKY2  EQU   *                   R1 POINTS AT THE END OF A PARM VALUE B5012960
*                                  OR AT PURIFIED SUBPARM COUNT FIELD   B5012970
         LA    R1,1(,R1)           POINT AT LENGTH OF NEXT PARM -IF ANY B5012980
         BCT   R2,TXTGKY1          LOOP BACK IF ANY PARMS LEFT          B5012990
         B     TXTGKYX             IF NO PARMS LEFT WE ARE POINTING AT  B5013000
*                                  ANOTHER KEY SO EXIT                  B5013010
         SPACE 1                                                        B5013020
TXTGKY3  EQU   *                   R1 POINTS AT A SUBPARM COUNT         B5013030
         SL    R3,=A(X'80')        CLEAR HIGH-ORDER BIT OF COUNT        B5013040
         ALR   R2,R3               ADD SUBPARM COUNT TO PARM COUNT      B5013050
         B     TXTGKY2             LOOP ABCK TO INCH ALONG SUBPARMS     B5013060
         SPACE 1                                                        B5013070
TXTGKYX $SUBOUT ,                  RETURN TO CALLER                     B5013080
         TITLE 'DELETE STRING FROM STRING OF INTERNAL TEXT'             B5013090
*********************************************************************** B5013100
*        DELETE STRING FROM STRING OF INTERNAL TEXT                   * B5013110
*********************************************************************** B5013120
         SPACE 1                                                        B5013130
*        THIS ROUTINE DELETES A STRING FROM A STRING OF INTERNAL TEXT   B5013140
*         BY OVERWRITING IT WITH THE TEXT THAT FOLLOWS THE STRING TO BE B5013150
*         DELETED, PADDING THE REMAINDER WITH BLANKS, AND ALTERING THE  B5013160
*         LENGTH OF THE TOTAL TEXT ( IN THE STRING PREFIX ).            B5013170
         SPACE 1                                                        B5013180
*        ON ENTRY:                                                      B5013190
*         R1  - LENGTH OF STRING TO BE DELETED                          B5013200
*         R2  - ADDRESS OF TEXT TO BE OVERWRITTEN                       B5013210
*         R3  - LENGTH OF REMAINDER ( FROM NEXT KEY TO END OF STRING )  B5013220
*         R8  - ADDRESS OF NEXT KEY                                     B5013230
         SPACE 1                                                        B5013240
*        ON EXIT:                                                       B5013250
*         R2  - ADDRESS OF LAST BYTE IN TEXT STRING ( END KEY )         B5013260
*         R3  - NEW LENGTH OF TOTAL TEXT STRING                         B5013270
         SPACE 1                                                        B5013280
TXTDEL  $SUBIN ,                   ENTER ROUTINE                        B5013290
         LR    R10,R3              SET R9 TO LENGTH OF REMAINDER        B5013300
         ICM   R10,8,=C' '         SET PAD CHARACTER TO BLANK           B5013310
         MVCL  R2,R8               MOVE TEXT DOWN STRING TO OVERWRITE   B5013320
         BCTR  R2,0                DECREMENT R2 TO POINT AT LAST BYTE   B5013330
         LH    R3,STRLTH           GET ORIGINAL LENGTH OF TEXT STRING   B5013340
         SR    R3,R1               SUBTRACT LENGTH OF DELETED STRING    B5013350
         STH   R3,STRLTH           UPDATE LENGTH WITH NEW VALUE         B5013360
       $SUBOUT ,                   RETURN TO CALLER                     B5013370
         EJECT                                                          B5013380
*********************************************************************** B5013390
*        ADD TEXT TO STRING OF INTERNAL TEXT                          * B5013400
*********************************************************************** B5013410
         SPACE 1                                                        B5013420
*        THIS ROUTINE ADDS A STRING OF TEXT TO THE END OF AN EXISTING   B5013430
*         STRING OF INTERNAL TEXT, ADDS A NEW END KEY TO THE END OF THE B5013440
*         MODIFIED STRING, AND UPDATES THE LENGTH FIELD IN THE PREFIX.  B5013450
         SPACE 1                                                        B5013460
*        ON ENTRY:                                                      B5013470
*         R2  - ADDRESS OF CURRENT END KEY                              B5013480
*         R3  - LENGTH OF THE NEW TEXT                                  B5013490
*         R5  - ADDRESS OF THE INTERNAL TEXT STRING PREFIX              B5013500
*         R8  - ADDRESS OF THE NEW TEXT TO BE ADDED                     B5013510
         SPACE 1                                                        B5013520
*        ON EXIT:                                                       B5013530
*         R1  - NEW LENGTH OF TOTAL STRING                              B5013540
*         R2  - ADDRESS OF THE NEW END KEY                              B5013550
         SPACE 1                                                        B5013560
TXTADD  $SUBIN ,                   ENTER ROUTINE                        B5013570
         BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE         B5013580
         EX    R3,TXTADDM          MOVE NEW TEXT TO END OF STRING       B5013590
         LA    R2,1(R3,R2)         POINT R2 PAST ADDED TEXT             B5013600
         MVI   0(R2),ENDK          INSERT NEW END KEY                   B5013610
         LH    R1,STRLTH           RETRIEVE PREVIOUS LENGTH OF STRING   B5013620
         LA    R1,1(R3,R1)         CALCULATE NEW STRING LENGTH          B5013630
         STH   R1,STRLTH           PRESERVE NEW STRING LENGTH IN PREFIX B5013640
        $SUBOUT ,                  RETURN TO CALLER                     B5013650
         SPACE 5                                                        B5013660
TXTADDM  MVC   0(0,R2),0(R8)       EXECUTED MOVE OF NEW TEXT            B5013670
         EJECT                                                          B5013680
*********************************************************************** B5013690
*        REPLACE SUBSTRING OF INTERNAL TEXT                           * B5013700
*********************************************************************** B5013710
         SPACE 1                                                        B5013720
*        THIS ROUTINE REPLACES ONE SUBSTRING OF INTERNAL TEXT WITH      B5013730
*         ANOTHER.  NOT THAT THE REPLACEMENT STRING MAY BE OF ANY       B5013740
*         LENGTH, AND NEED NOT BE THE SAME LENGTH AS THE STRING IT      B5013750
*         REPLACES.  THE LENGTH OF THE TOTAL STRING ( IN THE TEXT       B5013760
*         STRING PREFIX ) IS UPDATED.                                   B5013770
         SPACE 1                                                        B5013780
*        ON ENTRY:                                                      B5013790
*         R1  - LENGTH OF TEXT TO BE REPLACED                           B5013800
*         R2  - ADDRESS OF TEXT TO BE REPLACED                          B5013810
*         R3  - LENGTH OF REMAINDER ( FROM NEXT KEY TO THE END )        B5013820
*         R5  - ADDRESS OF THE TEXT PREFIX                              B5013830
*         R8  - ADDRESS OF NEXT KEY                                     B5013840
*         R10 - LENGTH OF REPLACEMENT STRING                            B5013850
*         R14 - ADDRESS OF THE REPLACEMENT STRING                       B5013860
         SPACE 1                                                        B5013870
*        ON EXIT:                                                       B5013880
*         R2  - ADDRESS OF NEW END KEY                                  B5013890
*         R3  - NEW LENGTH OF TOTAL STRING                              B5013900
         SPACE 1                                                        B5013910
TXTREP  $SUBIN ,                   ENTER ROUTINE                        B5013920
        $GETAPCE TXTR              ACQUIRE SECONDARY APCE FOR STORAGE   B5013930
         LR    R15,R1              PRESERVE ADDRESS OF SECONDARU APCE   B5013940
         USING SPCEDSCT,R15        ESTABLISH DSECT ADDRESSABILITY       B5013950
         BCTR  R3,0                DECREMENT LENGTH OF REMAINDER        B5013960
         EX    R3,TXTREPM1         PRESERVE REMAINDER OF STRING IN APCE B5013970
         BCTR  R10,0               DECREMENT LENGTH OF REPLACEMENT STRI B5013980
         EX    R10,TXTREPM3        MOVE REPLACEMENT STRING TO TEXT      B5013990
         LA    R2,1(R10,R2)        POINT R2 PAST END OF ADDED TEXT      B5014000
         EX    R3,TXTREPM2         RESTORE PRESERVED REMAINDER          B5014010
         EJECT                                                          B5014020
*********************************************************************** B5014030
*        REPLACE SUBSTRING OF INTERNAL TEXT ( CONT'D )                * B5014040
*********************************************************************** B5014050
         SPACE 1                                                        B5014060
         LA    R2,1(R3,R2)         POINT R2 AT NEW POSN OF END KEY      B5014070
         LA    R3,1(,R2)           POINT R3 PAST END KEY                B5014080
         SR    R3,R5               CALCULATE LENGTH OF TOTAL STRING     B5014090
         STH   R3,STRLTH           PRESERVE LENGTH IN PREFIX            B5014100
        $FREAPCE TXTR              RELEASE THE SECONDARY APCE           B5014110
        $SUBOUT ,                  RETURN TO THE CALLER                 B5014120
         SPACE 5                                                        B5014130
TXTREPM1 MVC   SPCEAREA(0),0(R8)   PRESERVE REMAINDER IN APCE           B5014140
TXTREPM2 MVC   0(0,R2),SPCEAREA    RESTORE PRESERVED REMAINDER          B5014150
TXTREPM3 MVC   0(0,R2),0(R14)      ADD NEW TEXT TO STRING               B5014160
         SPACE 1                                                        B5014170
         DROP  R15                 DROP SECONDARY APCE ADDR'Y           B5014180
         EJECT                                                          B5014190
*********************************************************************** B5014200
*        MISCELLANEOUS CONSTANTS                                      * B5014210
*********************************************************************** B5014220
         SPACE 1                                                        B5014230
*        THE FOLLOWING TEXT STRING REPRESENTS :                         B5014240
*              REGION=64K                                               B5014250
         SPACE 1                                                        B5014260
REGNTEXT EQU   *                   TEXT STRING FOR REGION               B5014270
         DC    AL1(REGINJK)        REGION KEY                           B5014280
         DC    AL1(1)              1 PARAMETER                          B5014290
         DC    AL1(3)              PARAMETER IS 3 BYTES LONG            B5014300
         DC    CL3'64K'            DEFAULT REGION SIZE                  B5014310
REGNTXTL EQU   *-REGNTEXT          LENGTH OF SUBSTITUTE STRING          B5014320
         SPACE 2                                                        B5014330
         LTORG                                                          B5014340
         SPACE 1                                                        B5014350
         END                                                            B5014360
