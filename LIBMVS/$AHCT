         MACRO                                                          MACB0140
        $AHCT  &EQUONLY=NO,&DOC=NO                                      MACB0150
         GBLC  &MODEQU                                                  MACB0160
         AIF   ('&EQUONLY' EQ 'YES').EQUON1                             MACB0170
         TITLE 'AUXILIARY HASP COMMUNICATION ( AHCT ) DSECT'            MACB0180
.EQUON1  ANOP                                                           MACB0190
*********************************************************************** MACB0200
*        AUXILIARY HASP COMMUNUCATION TABLE ( AHCT ) DSECT            * MACB0210
*********************************************************************** MACB0220
         AIF   ('&DOC' NE 'YES').NODOC1                                 MACB0230
         SPACE 1                                                        MACB0240
*        THE PURPOSE OF THE MACRO IS TO GENERATE A DSECT FOR THE AHCT   MACB0250
         SPACE 1                                                        MACB0260
*        THE CORRECT FORM IS :-                                         MACB0270
*        $AHCT <EQUONLY=NO | YES>  GENERATE MOD NO EQUATES ONLY         MACB0280
*                                  ( DEFAULT IS NO ).  NOTE THAT THE    MACB0290
*                                  EQUATES ARE ALWAYS PRODUCED.  THIS   MACB0300
*                                  OPERAND SUPPRESSES THE DSECT.        MACB0310
*              <,DOC=NO | YES>     PRODUCE DOCUMENTATION ( DEFAULT NO ) MACB0320
         SPACE 1                                                        MACB0330
*        AHCT - AUXILIARY HASP COMMUNICATION TABLE                      MACB0340
         SPACE 1                                                        MACB0350
*        THE AHCT IS THE PRIMARY CONTROL BLOCK FOR THE MODIFICATION     MACB0360
*         ROUTINES.  IT CONTAINS THE ADDRESS OF THE 1ST AVAILABLE APCE, MACB0370
*         THE START OF VARIOUS PASSED APCE CHAINS, THE 1ST DCT ADDRESS, MACB0380
*         AND CONTROL DATA FOR EVERY ROUTINE THAT MAY BE INVOKED        MACB0390
*         ( I.E. FOR EVERY ROUTINE 'DEFINED' BY AN EQUATE HEREUNDER ).  MACB0400
*                                                                       MACB0410
         SPACE 1                                                        MACB0420
*        THE AHCT IS CREATED BY THE MODIFICATION INITIALISATION         MACB0430
*         ROUTINE ( JES2B001 ), AND ITS ADDRESS IS PLACED IN THE HCT    MACB0440
*         IN THE FIELD HCT$AHCT.                                        MACB0450
         SPACE 1                                                        MACB0460
*        ALL MODIFICATION ROUTINES HAVE ADDRESSABILITY TO THE AHCT VIA  MACB0470
*         REGISTER 6, AND THIS IS ESTABLISHED AUTOMATICALLY BY THE      MACB0480
*         DISPATCHER PRIOR TO PASSING CONTROL TO THE REQUESTED ROUTINE. MACB0490
         EJECT                                                          MACB0500
*********************************************************************** MACB0510
*        DOCUMENTED AHCT DSECT                                        * MACB0520
*********************************************************************** MACB0530
.NODOC1  ANOP                                                           MACB0540
         SPACE 1                                                        MACB0550
AHCTDSCT DSECT                     AUXILIARY HASP COMMUNICATION TABLE   MACB0560
AHCTFPCE DS    F                   ADDRESS OF 1ST AVAILABLE APCE        MACB0570
         DS    10F                 PROVISION FOR 10 PASSED APCE CHAINS  MACB0580
AHCTADCT DS    F                   ADDRESS OF 1ST ADCT                  MACB0590
AHCTX    DS    XL1'95'             X'95' - USED TO SET PSW COND CODE    MACB0600
AHCTFLAG DC    XL1'00'             STATUS FLAGS                         MACB0610
         DS    CL2                 UNUSED                               MACB0620
AHCTLGTH EQU   *-AHCTDSCT          LENGTH OF AHCT ROOT SECTION          MACB0630
AHCT1RTN DS    0CL1                START OF VARIABLE LENGTH SECTION     MACB0640
&SYSECT  CSECT                                                          MACB0650
         SPACE 1                                                        MACB0660
*        AHCTFLAG VALUES                                                MACB0670
         SPACE 1                                                        MACB0680
AHCTVM   EQU   X'80'               SYSTEM IS RUNNING UNDER VM/370       MACB0690
         EJECT                                                          MACB0700
         AIF   ('&DOC' NE 'YES').NODOC2                                 MACB0710
*                                  THE REMAINDER OF THE AHCT COMPRISES  MACB0720
*                                  1 SUB CONTROL BLOCK FOR EACH ROUTINE MACB0730
*                                  THAT MAY BE INVOKED.  THE NUMBER IS  MACB0740
*                                  DETERMINED AT ASSEMBLY TIME FROM THE MACB0750
*                                  VALUE OF THE EQUATE $MODNO.          MACB0760
.NODOC2  ANOP                                                           MACB0770
         SPACE 5                                                        MACB0780
MRCBDSCT DSECT                     MODIFICATION ROUTINE CONTROL BLOCK   MACB0790
         AIF   ('&DOC' NE 'YES').NODOC3                                 MACB0800
*                                  THERE IS ONE OF THESE FOR EVERY      MACB0810
*                                  ROUTINE THAT MAY BE INVOKED.         MACB0820
.NODOC3  ANOP                                                           MACB0830
MRCBID   DS    CL4'MRCB'           CONTROL BLOCK IDENTIFIER             MACB0840
MRCBNAME DS    CL4                 ROUTINE NAME ( E.G. 'B503' )         MACB0850
MRCBFLAG DS    0CL1                FLAG BYTE                            MACB0860
MRCBRADR DS    F                   ADDRESS OF ROUTINE                   MACB0870
MRCBAV   DS    CL1                 AVAILABILITY FLAG ( 'Y'/'Z' )        MACB0880
MRCB$$X  DS    CL1                 USED TO SET COND CODE BY $MODEXIT    MACB0890
         DS    CL2                 UNUSED                               MACB0900
MRCBINFL EQU   *-MRCBDSCT          MRCB LENGTH LESS REGS SAVE AREA LGTH MACB0905
MRCBSA   DS    16F                 TEMPORARY REGISTER SAVE AREA         MACB0910
MRCBLGTH EQU   *-MRCBDSCT          LENGTH OF SUBRTN CONTROL BLOCK       MACB0920
&SYSECT  CSECT                                                          MACB0930
         SPACE 5                                                        MACB0940
         AIF   ('&DOC' NE 'YES').NODOC4                                 MACB0950
*        NOTE THAT REGISTERS ARE TEMPORARILY SAVED IN THE MRCB BEFORE   MACB0960
*         AN APCE IS ACQUIRED.  TO ENSURE RE-ENTRABILITY, IT IS THUS    MACB0970
*         NECESSARY TO IMPOSE THE RESTRICTION THAT AN MRCB MAY ONLY BE  MACB0980
*         USED BY A SINGLE TASK OR SUB-TASK WITHIN THE JES ADDRESS      MACB0990
*         SPACE.  NOTE THAT THIS DOES NOT PRECLUDE DIFFERENT TASKS      MACB1000
*         USING THE SAME MODIFICATION ROUTINES, BUT THEY MUST GET THERE MACB1010
*         VIA DIFFERENT MRCBS.  NOTE ALSO THAT FOR A SINGLE TASK, ANY   MACB1020
*         NUMBER OF PCE'S MAY INVOKE AN MRCB THANKS TO THE CONCEPT OF   MACB1030
*         HASP RE-ENTRANT CODING.  FURTHERMORE, SERVICE ROUTINES MAY BE MACB1040
*         USED BY ANY AND ALL TASKS VIA 1 MRCB, BECAUSE FOR SERVICE     MACB1050
*         SERVICE ROUTINES THE SAVE AREA IS NOT USED.                   MACB1060
         SPACE 1                                                        MACB1070
*        NOTE THAT THE MRCB, UNLIKE ALL OTHER CONTROL BLOCKS,           MACB1080
*         HAS THE IDENTIFYING CONSTANT WITHIN ITSELF RATHER THAN        MACB1090
*         WITHIN A PREFIX.                                              MACB1100
         SPACE 5                                                        MACB1110
.NODOC4  ANOP                                                           MACB1120
*                                                                       MACB1130
*        MRCBFLAG EQUATES                                               MACB1140
*                                                                       MACB1150
         SPACE 1                                                        MACB1160
MRFLOAD  EQU   1                   ROUTINE HAS BEEN LOADED              MACB1170
MRFEXEC  EQU   2                   ROUTINE MAY BE EXECUTED              MACB1180
MRFERROR EQU   4                   ROUTINE 'DISABLED' DUE TO ERROR      MACB1190
         SPACE 1                                                        MACB1200
MRCBSTRT EQU   AHCT1RTN-AHCTDSCT   DISPLACEMENT OF 1ST MRCB             MACB1210
MRCBSIZE EQU   MRCBLGTH            LENGTH OF MRCB                       MACB1220
MRCBRSA  EQU   MRCBSA-MRCBDSCT     DISPLACEMENT OF REGISTER SAVE AREA   MACB1230
MRCBAVAL EQU   MRCBAV-MRCBDSCT     DISPLACEMENT OF AVAILABILITY FLAG    MACB1240
         AIF   ('&EQUONLY' EQ 'YES').NOTIT                              MACB1250
         TITLE 'EQUATES FOR MODIFICATION ROUTINES'                      MACB1260
.NOTIT ANOP                                                             MACB1270
*********************************************************************** MACB1280
*        EQUATES FOR MODIFICATION ROUTINES                            * MACB1290
*********************************************************************** MACB1300
         SPACE 1                                                        MACB1310
*        THESE EQUATES ARE OF THE FORM :-                               MACB1320
*              $MODBNNN                                                 MACB1330
*         WHERE BNNN IS THE ROUTINE IDENTIFIER.                         MACB1340
         SPACE 5                                                        MACB1350
*                                                                       MACB1360
*        ROUTINE EQUATES                                                MACB1370
*                                                                       MACB1380
         SPACE 1                                                        MACB1390
$MODB999 EQU   0                   JES2B999 - DUMMY ENTRY FOR DOC'N     MACB1400
$MODB313 EQU   1                   JES2B313 - PUNCH LACE SEPARATORS     MACB1410
$MODB002 EQU   2                   JES2B002 - EXTRA COMMAND ROUTER      MACB1420
$MODB201 EQU   3                   JES2B201 - PRINT RE-ROUTE            MACB1430
$MODB204 EQU   4                   JES2B204 - DEMAND FORMS MOUNT        MACB1440
$MODB205 EQU   5                   JES2B205 - INTRDR I/O ERROR HANDLING MACB1450
$MODB301 EQU   6                   JES2B301 - MONSANTO SEPARATOR PAGES  MACB1460
$MODB302 EQU   7                   JES2B302 - RESTRICT $AJ              MACB1470
$MODB303 EQU   8                   JES2B303 - REMOTE SIGN-ON MESSAGE    MACB1480
$MODB304 EQU   9                   JES2B304 - $FREE/$KEEP HANDLING      MACB1490
$MODB305 EQU   10                  JES2B305 - SOFT HOLD FOR READERS     MACB1500
$MODB306 EQU   11                  JES2B306 - SOFT HOLD SETTING         MACB1510
$MODB308 EQU   12                  JES2B308 - REMOTE INITIALISATION     MACB1520
$MODB309 EQU   13                  JES2B309 - DISALLOW RANGE IN $P,$C   MACB1530
$MODB312 EQU   14                  JES2B312 - NO PURGE IN EXECUTION     MACB1540
$MODB601 EQU   15                  JES2B601 - INTRDR JOB LOGGING        MACB1550
$MODB602 EQU   16                  JES2B602 - WRITE TO JOB LOG          MACB1560
$MODB603 EQU   17                  JES2B603 - QUEUE STATUS SUMMARY      MACB1570
$MODB604 EQU   18                  JES2B604 - DISPLAY JOBS BY ROOT      MACB1580
$MODB605 EQU   19                  JES2B605 - JCL ERROR HIGHLIGHTER     MACB1590
$MODB608 EQU   20                  JES2B608 - $? COMMAND                MACB1600
$MODB701 EQU   21                  JES2B701 - CHANGE SYSIN DEFAULTS     MACB1610
$MODB006 EQU   22                  JES2B006 - GETAPCE SERVICE ROUTINE   MACB1620
GETAPCE  EQU   $MODB006                     - GETAPCE SERVICE ROUTINE   MACB1630
$MODB007 EQU   23                  JES2B007 - FREEAPCE SERVICE ROUTINE  MACB1640
FREEAPCE EQU   $MODB007                     - FREEAPCE SERVICE ROUTINE  MACB1650
$MODB008 EQU   24                  JES2B008 - PASS APCE SERVICE ROUTINE MACB1660
PASSAPCE EQU   $MODB008                     - PASS APCE SERVICE ROUTINE MACB1670
$MODB009 EQU   25                  JES2B009 - CATCH APCE SERVICE RTN    MACB1680
CATCHPCE EQU   $MODB009                     - CATCH APCE SERVICE RTN    MACB1690
$MODB010 EQU   26                  JES2B010 - DETACH APCE SERVICE RTN   MACB1700
DETAPCE  EQU   $MODB010                     - DETACH APCE SERVICE RTN   MACB1710
$MODB011 EQU   27                  JES2B011 - ATTACH APCE SERVICE RTN   MACB1720
ATTAPCE  EQU   $MODB011                     - ATTACH APCE SERVICE RTN   MACB1730
$MODB012 EQU   28                  JES2B012 - USER DUMP SERVICE ROUTINE MACB1740
UDUMP    EQU   $MODB012                     - USER DUMP SERVICE ROUTINE MACB1750
$MODS308 EQU   29                  JES2S308 - CONVERT UNIT=INTRDR       MACB1760
$MODB013 EQU   30                  JES2B013 - $MWTO SERVICE ROUTINE     MACB1770
MWTO     EQU   $MODB013                       $MWTO SERVICE ROUTINE     MACB1780
$MODB014 EQU   31                  JES2B014 - ADCT INITIALISATION       MACB1790
$MODB702 EQU   32                  JES2B702 - JES/VM HANDSHAKING        MACB1800
$MODB903 EQU   33                  JES2B903 - /*ROUTEX PROCESSING       MACB1810
$MODB015 EQU   34                  JES2B015 - $WTOL - WRITE TO JOB LOG  MACB1820
$MODB316 EQU   35                  JES2B316 - RETENTION PERIOD PROCESS  MACB1830
$MODB003 EQU   36                  JES2B003 - JOB CARD PROCESSOR        MACB1840
$MODB310 EQU   37                  JES2B310 - CHANGE SYSOUT CLASSES     MACB1850
$MODB311 EQU   38                                                       MACB1860
$MODB314 EQU   39                                                       MACB1870
$MODB401 EQU   40                  JES2B401 - ACCOUNTING DATA           MACB1880
$MODB501 EQU   41                  DELETE JOBCARD REGION                MACB1890
$MODS405 EQU   42                  JES2S405 - ADD TIME= ON JOBCARD      MACB1900
$MODB307 EQU   43                  JES2B307 - 5-CHAR JOBNAME COMPARE    MACB1910
$MODB315 EQU   44                  JES2B315 - LIMIT JOBTO TO 3 DIGITS   MACB1920
$MODB404 EQU   45                  JES2B404 - MODIFY SMF26 RECORD       MACB1930
$MODB317 EQU   46                  JES2B317 - HOLD REMOTE OUTPUT        MACB1940
$MODB207 EQU   47                  JES2B207 - MAKE JOBS RUN V=R         MACB1950
$MODB800 EQU   48                  JES2B800 - PROCESS /*GIMMEX CTRL C.  MACB1960
$MODB320 EQU   49                  JES2B320 - SET DEFAULT PRIORITY 7    MACB1970
$MODB321 EQU   50                  JES2B321 - IGNORE $A IF AJQFPHLD ON  MACB1980
$MODB324 EQU   51                  JES2B324 - MAINTAIN AJQFHLD1 $A/$H   MACB1990
$MODB322 EQU   52                  JES2B322 - ENHANCE $DJ/$DN           MACB2000
$MODB326 EQU   53                  JES2B326 - P./*SETUP AS TYPRUN=HOLD  MACB2010
$MODB202 EQU   54                  JES2B202 - DATA/100 70 COMPRESSION   MACB2020
$MODB327 EQU   55                  JES2B327 - $DT - DISPLAY TAPES       MACB2030
$MODB328 EQU   56                  JES2B328 - $DD - DISPLAY DISKS       MACB2040
$MODB405 EQU   57                  JES2B405 - ADD DATA IN JCT FOR SMF26 MACB2050
$MODB703 EQU   58                  JES2B703 - DATA 100/70 W.WITHOUT.SP  MACB2060
$MODB329 EQU   59                  JES2B329 - $DF - INCLUDE HELD JOBS   MACB2061
$MODB612 EQU   60                  JES2B612 - $DN/$DQ ENHACEMENT        MACB2062
$MODB334 EQU   61                  JES2B334 - ADJUST CARRIAGE C.C.      MACB2063
$MODB336 EQU   62                  JES2B336 - SET PRTY FOR OUTPUT.      MACB2064
$MODB332 EQU   63                  JES2B332 - /*OUTHOLD PROCESSING      MACB2065
$MODB338 EQU   64                  JES2B338 - CONVERT CLASS W TO A      MACB2066
         SPACE 1                                                        MACB2070
$MODMR1  EQU   90 ***                                                   MACB2071
$MODMR2  EQU   91   *                                                   MACB2072
$MODMR3  EQU   92   *>> EQUATES USED BY $CBAL XXXXX,XX,MRCB=V FORMAT    MACB2073
$MODMR4  EQU   93   *      TO RESERVE A SPECIFIC MRCB. 'MRCB=V' V IS    MACB2074
$MODMR5  EQU   94   *      ONE OR TWO NUMERIC DIGITS CORRESPONDING      MACB2075
$MODMR6  EQU   95   *      TO THE NUMBER IN THE SYMBOL NAME OF THESE    MACB2076
$MODMR7  EQU   96   *      EQUATES.                                     MACB2077
$MODMR8  EQU   97   *                                                   MACB2078
$MODMR9  EQU   98   *                                                   MACB2079
$MODMR10 EQU   99 ***                                                   MACB2080
         SPACE 1                                                        MACB2081
$MODNO   EQU   100                 HIGHEST (EQUATE) NUMBER REQUIRED     MACB2085
&MODEQU  SETC  'YES'                                                    MACB2090
         SPACE 5                                                        MACB2100
*                                                                       MACB2110
*        EQUATES USED FOR SETTING THE PSW COND CODE                     MACB2120
*                                                                       MACB2130
*        THE PSW IS SET BY INSTRUCTIONS OF THE FORM :                   MACB2140
*        CLI   *,$$X                                                    MACB2150
*                                                                       MACB2160
*        THE 'VALUE' OF THE PSW MAY BE RESERVED FOR SETTING LATER       MACB2170
*         BY INSTRUCTIONS OF THE FORM :                                 MACB2180
*        MVI   APCE$$X,$$Y                                              MACB2190
*         AND SET BT AN INSTRUCTION OF THE FORM :                       MACB2200
*        CLC   AHCTX,APCE$$X                                            MACB2210
*                                                                       MACB2220
         SPACE 1                                                        MACB2230
$$W      EQU   X'96'               SET THE PSW COND CODE LOW            MACB2240
$$NO     EQU   X'96'               SET THE PSW COND CODE LOW            MACB2241
$$X      EQU   X'95'               SET THE PSW COND CODE EQUAL          MACB2250
$$YES    EQU   X'95'               SET THE PSW COND CODE EQUAL          MACB2251
$$Y      EQU   X'94'               SET THE PSW COND CODE HIGH           MACB2260
$$ERR    EQU   X'94'               SET THE PSW COND CODE HIGH           MACB2261
         MEND                                                           MACB2270
