//SPFLOAD JOB (1140,5),'INSTALL SPFV2L2',CLASS=T
//SPFLOAD PROC
//*
//LIBLOAD EXEC PGM=IEBCOPY,REGION=256K
//*
//SYSPRINT  DD SYSOUT=A
//*
//SPFLOAD   DD DSN=SPF22.MASTER.SPFLOAD,               ALLOCATE ONLY -
//             VOL=SER=&VOLSER,                          SMP WILL BUILD
//             UNIT=&DADEV,                              THIS DATA SET
//             DISP=(NEW,CATLG,DELETE),                  (TARGET LIB)
//             DCB=(RECFM=U,BLKSIZE=3072,OPTCD=W),
//             SPACE=(3072,(256,48,8))
//*
//SPFDMOD   DD DSN=SPF22.MASTER.SPFDMOD,               ALLOCATE ONLY -
//             VOL=SER=&VOLSER,                          SMP WILL BUILD
//             UNIT=&DADEV,                              THIS DATA SET
//             DISP=(NEW,CATLG,DELETE),                  (DIST LIB)
//             DCB=(RECFM=U,BLKSIZE=3072,OPTCD=W),
//             SPACE=(3072,(256,48,30))
//*
//PARMS     DD DSN=SPF22.MASTER.PARMS,                 ALLOCATE ONLY -
//             VOL=SER=&VOLSER,                          SPF WILL BUILD
//             UNIT=&DADEV,                              THIS DATA SET
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=F,LRECL=6000,BLKSIZE=6000,OPTCD=W),
//             SPACE=(6000,(&MAXUSER,&USERD20,&USERD20))
//*
//* THE FOLLOWING DATA SETS ARE ALLOCATED AND COPIED FROM TAPE
//*
//SPFSMP    DD DSN=SPF22.MASTER.SPFSMP,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,OPTCD=W),
//             SPACE=(3120,(52,,2))
//*
//SPFMACRO  DD DSN=SPF22.MASTER.SPFMACRO,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=1520,OPTCD=W),
//             SPACE=(1520,(28,,2))
//*
//SPFMOD    DD DSN=SPF22.MASTER.SPFMOD,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=U,BLKSIZE=3072,OPTCD=W),
//             SPACE=(3072,(184,,30))
//*
//MENUS     DD DSN=SPF22.MASTER.MENUS,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=VB,LRECL=84,BLKSIZE=3120,OPTCD=W),
//             SPACE=(3120,(500,20,50))
//*
//MSGS      DD DSN=SPF22.MASTER.MSGS,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=VB,LRECL=76,BLKSIZE=3120,OPTCD=W),
//             SPACE=(3120,(60,8,8))
//*
//PROCS     DD DSN=SPF22.MASTER.PROCS,
//             VOL=SER=&VOLSER,
//             UNIT=&DADEV,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,OPTCD=W),
//             SPACE=(3120,(32,8,6))
//*
//ASM       DD DSN=SPF22.MASTER.ASM,                           OPTIONAL
//             VOL=SER=&VOLSERX,                                  ''
//             UNIT=&DADEVX,                                      ''
//             DISP=(NEW,CATLG,DELETE),                           ''
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,OPTCD=W),      ''
//             SPACE=(3120,(7600,400,12))                         ''
//*
//TAPSMP    DD LABEL=(2,NL),
//             VOL=SER=SPFTP1,
//             UNIT=&TAPEDEV,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPMACS   DD LABEL=(3,NL),
//             VOL=REF=*.TAPSMP,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPMOD    DD LABEL=(4,NL),
//             VOL=REF=*.TAPSMP,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPMENU   DD LABEL=(5,NL),
//             VOL=REF=*.TAPSMP,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPMSGS   DD LABEL=(6,NL),
//             VOL=REF=*.TAPSMP,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPPROC   DD LABEL=(7,NL),
//             VOL=REF=*.TAPSMP,
//             DISP=(OLD,PASS,KEEP)
//*
//TAPASM    DD LABEL=(10,NL),                                  OPTIONAL
//             VOL=REF=*.TAPSMP,                                  ''
//             DISP=(OLD,PASS,KEEP)                               ''
//*
//SYSUT3    DD UNIT=&DADEV,
//             SPACE=(80,(1000,100))
//*
//        PEND SPFLOAD
//******  END OF INSTREAM PROCEDURE  **********************************
//*
//SPFLOAD EXEC SPFLOAD,
//             VOLSER=SYSTS1,    <=== VOLUME FOR REQUIRED SPF DATA SETS
//             DADEV='SYSDA',    <=== UNIT FOR REQUIRED SPF DATA SETS
//             VOLSERX=SYSTS1,   <=== VOLUME FOR OPTIONAL SPF DATA SETS
//             DADEVX='SYSDA',   <=== UNIT FOR OPTIONAL SPF DATA SETS
//             TAPEDEV='TAPE9',  <=== UNIT FOR SPF LOAD TAPES
//             MAXUSER=64,       <=== SEE COMMENT BELOW
//             USERD20=4         <=== SEE COMMENT BELOW
//*
//*       THE FOLLOWING TWO VALUES ARE USED TO COMPUTE THE SIZE
//*       OF THE SPF PARMS DATA SET (SPF22.MASTER.PARMS):
//*
//*         'MAXUSER' = MAXIMUM NUMBER OF SPF USERID'S
//*         'USERD20' = MAXIMUM NUMBER OF SPF USERID'S DIVIDED BY 20
//*                     (IF REMAINDER, ROUND UP)
//*
//SYSIN     DD *
          COPY OUTDD=SPFSMP,INDD=TAPSMP
          COPY OUTDD=SPFMACRO,INDD=TAPMACS
          COPY OUTDD=SPFMOD,INDD=TAPMOD
          COPY OUTDD=MENUS,INDD=TAPMENU
          COPY OUTDD=MSGS,INDD=TAPMSGS
          COPY OUTDD=PROCS,INDD=TAPPROC
          COPY OUTDD=ASM,INDD=TAPASM                           OPTIONAL
/*
//*
