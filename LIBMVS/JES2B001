B001     TITLE 'MODS INITIALISATION -- PROLOG'                          MM000130
*********************************************************************** MM000140
*                                                                     * MM000150
* MODULE NAME = HASJES20 ( JES2B001 CSECT )                           * MM000160
*                                                                     * MM000170
* DESCRIPTIVE NAME = JES2B001 CSECT OF JES2 MAIN MODULE               * MM000180
*                                                                     * MM000190
* COPYRIGHT = NONE                                                    * MM000200
*                                                                     * MM000210
* STATUS = OS/VS2 RELEASE 2,3         -- JES2 VERSION 4, LEVEL 0      * MM000220
*                                                                     * MM000230
* FUNCTION = THE JES2B001 CSECT INITIALIZES THE JES2 MODIFICATIONS,   * MM000240
*            SUBSYSTEM INTERFACES AND RETURNS CONTROL TO HASPINIT.    * MM000250
*            THE FUNCTIONS OF THIS MODULE ARE AS FOLLOWS --           * MM000260
*                                                                     * MM000270
*              1.  TO OBTAIN THE INITIALIZATION OPTIONS FROM THE      * MM000280
*                  OPERATOR OR FROM THE PARM PARAMETER ON THE EXEC    * MM000290
*                  CARD AND CONVERT THE OPTIONS SPECIFIED INTO STATUS * MM000300
*                  BITS.                                              * MM000310
*                                                                     * MM000320
*              2.  TO READ AND PROCESS THE JES2 MODIFICATIONS         * MM000330
*                  PARAMETER DATA SET.                                * MM000340
*                                                                     * MM000350
*              5.  TO CONSTRUCT AND INITIALIZE THE SUBSYSTEM INTER-   * MM000360
*                  FACE CONTROL BLOCKS, SUCH AS THE SSCT AND SSVT.    * MM000370
*                                                                     * MM000380
*              6.  TO SCAN THE UNIT RECORD DEVICES AND REMOTE JOB     * MM000390
*                  ENTRY LINES, AND TO LOCATE AND ALLOCATE THE        * MM000400
*                  ELIGIBLE AND/OR SPECIFIED DEVICES TO JES2.         * MM000410
*                                                                     * MM000420
*              7.  TO ATTACH THE JES2 SUB-TASKS, AND TO LOCATE THE    * MM000430
*                  EXIT ROUTINES.                                     * MM000440
*                                                                     * MM000450
*             10.  TO CONSTRUCT AND/OR INITIALIZE THE JES2 CONTROL    * MM000460
*                  BLOCKS, SUCH AS THE HCT, THE DCT'S, THE DCB'S, THE * MM000470
*                  DEB'S, THE BUFFERS, ETC.                           * MM000480
*                                                                     * MM000490
*                                                                     * MM000500
*                                                                     * MM000510
*                                                                     * MM000520
*                                                                     * MM000530
*                                                                     * MM000540
* NOTES = SEE BELOW                                                   * MM000550
*                                                                     * MM000560
*    DEPENDENCIES = EXCP ACCESS METHOD                                * MM000570
*                   DYNAMIC ALLOCATION                                * MM000580
*                   DIRECT-ACCESS DEVICE SPACE MANAGEMENT             * MM000590
*                   MVS SUBSYSTEM INTERFACES                          * MM000600
*                   MISCELLANEOUS STANDARD SUPERVISOR SERVICES        * MM000610
*                                                                     * MM000620
*    RESTRICTIONS = NONE                                              * MM000630
*                                                                     * MM000640
*    REGISTER CONVENTIONS = R0          = WORK REGISTER               * MM000650
*                           R1          = WORK REGISTER               * MM000660
*                           R2  = WA    = WORK REGISTER               * MM000670
*                           R3  = WB    = WORK REGISTER               * MM000680
*                           R4  = WC    = WORK REGISTER               * MM000690
*                           R5  = WD    = WORK REGISTER               * MM000700
*                           R6  = WE    = WORK REGISTER               * MM000710
*                           R7  = WF    = WORK REGISTER               * MM000720
*                           R8  = BASE3 = BASE/WORK REGISTER          * MM000730
*                           R9          = UNUSED                      * MM000740
*                           R10 = JCT   = WORK REGISTER               * MM000750
*                           R11 = BASE1 = ADDRESS OF HCT              * MM000760
*                           R12 = BASE2 = LOCAL ADDRESSABILITY/2      * MM000770
*                           R13 = SAVE  = ADDRESSABILITY/1,SAVE AREA  * MM000780
*                           R14 = LINK  = LINK REGISTER               * MM000790
*                           R15         = WORK REGISTER               * MM000800
*                                                                     * MM000810
*    PATCH LABEL = NONE                                               * MM000820
*                                                                     * MM000830
* MODULE TYPE = PROCEDURE, TABLE ( CSECT TYPE )                       * MM000840
*                                                                     * MM000850
*    PROCESSOR = ASSEMBLER F                                          * MM000860
*                                                                     * MM000870
*    MODULE SIZE = 30512 BYTES, DECIMAL                               * MM000880
*                                                                     * MM000890
*    ATTRIBUTES = NOT REUSABLE                                        * MM000900
*                                                                     * MM000910
* ENTRY POINT = JES2B001                                              * MM000920
*                                                                     * MM000930
*    PURPOSE = SEE FUNCTION                                           * MM000940
*                                                                     * MM000950
*    LINKAGE = STANDARD OS/VS PROGRAM LINKAGE                         * MM000960
*                                                                     * MM000970
* INPUT = R1  = ADDRESS OF JCL EXEC CARD PARAMETER CONTROL BLOCK      * MM000980
*         R13 = ADDRESS OF SAVE AREA                                  * MM000990
*         R14 = RETURN ADDRESS                                        * MM001000
*         R15 = ADDRESS OF ENTRY POINT                                * MM001010
*                                                                     * MM001020
* OUTPUT = SEE EXIT                                                   * MM001030
*                                                                     * MM001040
*                                                                     * MM001050
*                                                                     * MM001060
*                                                                     * MM001070
*                                                                     * MM001080
* EXIT-NORMAL = RETURN TO CALLER (HASPINIT)                           * MM001090
*                                                                     * MM001100
* EXIT-ERROR = TO SYSTEM VIA BACK CHAINING SAVE AREAS WITH ALL        * MM001110
*              REGISTERS RESTORED TO ORIGINAL ENTRY VALUES            * MM001120
*              EXCEPT R15 WHICH CONTAINS A COMPLETION CODE OF 20      * MM001130
*                                                                     * MM001140
* EXTERNAL REFERENCES = SEE BELOW                                     * MM001150
*                                                                     * MM001160
*    ROUTINES = EXCP, DYNAMIC ALLOCATE, OBTAIN, WTO/WTOR, GETMAIN,    * MM001170
*               MISCELLANEOUS JES2 SERVICE ROUTINES IN HASPINIT, AND  * MM001180
*               MISCELLANEOUS STANDARD SUPERVISOR SERVICE ROUTINES    * MM001190
*                                                                     * MM001200
*    DATA AREAS = SEE $HASPCB MACRO EXPANSION                         * MM001210
*                                                                     * MM001220
*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION                     * MM001230
*                                                                     * MM001240
* TABLES = NONE                                                       * MM001250
*                                                                     * MM001260
* MACROS = SEE $HASPCB MACRO FOR CONTROL BLOCK MACROS USED            * MM001270
*                                                                     * MM001280
* CHANGE ACTIVITY = OZ00577,OZ02406,OZ03313,OZ03316,OZ04304,OZ04327,  * MM001290
*                   OZ04328,OZ04336,OZ04987,OZ05760,OZ06759,OZ07455,  * MM001300
*                   OZ09023,OZ09027,OZ09068                           * MM001310
*                                                                     * MM001320
*********************************************************************** MM001330
         TITLE 'MODS INITIALISATION -- CONTROL BLOCK GENERATION MACRO DCMM001340
               EFINITIONS'                                              MM001350
*                                                                       MM001360
***** $HASPCB *****           GENERATE HASP CONTROL BLOCKS              MM001370
*                                                                       MM001380
         MACRO                                                          MM001390
         $HASPCB &DOC=NO,&LIST=NO                                       MM001400
         GBLC  &PRINT,&GEN,&DATA                                        MM001410
         PUSH  PRINT                                                    MM001420
         PRINT &PRINT                                                   MM001430
         $KEYCHAN DOC=&DOC         GENERATE KEYWORD DESCRIPTOR BLOCK    MM001440
         $VERBDSC DOC=&DOC         GENERATE VERB DESCRIPTOR BLOCK       MM001450
         $RECAREA DOC=&DOC         GENERATE RECORD AREA DSECT           MM001460
         $CBPR DOC=&DOC            GENERATE MODS CBPR DSECT             MM001470
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             MM001480
         $AHCT DOC=&DOC            GENERATE MODS AHCT DSECT             MM001490
         $ADCT DOC=&DOC            GENERATE MODS ADCT DSECT             MM001500
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              MM001510
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              MM001520
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              MM001530
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              MM001540
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              MM001541
         $DCB                      GENERATE OS DCB DSECT                MM001550
         $MODMAP DOC=&DOC          GENERATE HASP MODMAP DSECT        R4 MM001560
         POP   PRINT                                                    MM001570
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           MM001580
         MEND                                                           MM001590
 TITLE 'MODS INITIALISATION -- LOCAL EXECUTABLE MACRO DEFINITIONS'   R4 MM001600
*                                                                       MM001610
*****  VERB *****                  CREATE TABLE ELEMENT ENTRY           MM001620
*                                                                       MM001630
*                                                                       MM001640
         MACRO                                                          MM001650
&NAME    VERB  &KEYWORD,&FLAG,&RTN=,&TABLE=,&EXCL=,&INCL=,&COUNTER=     MM001660
.*                                                                      MM001670
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE A VERB DESCRIPTOR     MM001680
.*        OF THE FORM :-                                                MM001690
.*             DC    CL8'KEYWORD'  UP TO 8 CHARS OF KEYWORD             MM001700
.*             DC    AL1(L'KEYWORD-1),AL3(RTN)                          MM001710
.*             DC    F             ADDRESS OF KEYWORD COUNTER           MM001720
.*             DC    CL4           FLAG REPRESENTING THIS KEYWORD       MM001730
.*             DC    CL4           FLAGS OF MUTUALLY EXCLUSIVE KEYS     MM001740
.*             DC    CL4           FLAGS OF REQUIRED KEYWORDS           MM001750
.*                                                                      MM001760
.*       ALL FLAGS PASSED TO THIS MACRO ( BE THEY VIA THE SECOND        MM001770
.*        POSITINAL MACRO OR BY THE KEYWORDS 'EXCL=' AND 'INCL='        MM001780
.*        MUST BE OF THE FORM :-                                        MM001790
.*             VRBNXXXX                                                 MM001800
.*        WHERE N IS IN THE RANGE 0-3 AND XXXX ARE ANY CHARACTERS ).    MM001810
.*       THE KEYWORD ITSELF MUST BE ENCLOSED BY QUOTES.                 MM001820
.*                                                                      MM001830
.* E.G.  VERB  'PCE(',VRB0PCE,RTN=BLDPCE,EXCL=(VRB0NOLD,VRB1SLOT),      MM001840
.*             INCL=(VRB0INIT)                                          MM001850
.*                                                                      MM001860
.*       IF THE ROUTINE ADDRESS TO BE CREATED IS IN FACT THE            MM001870
.*        ADDRESS OF ANOTHER TABLE THEN 'TABLE=' SHOULD BE              MM001880
.*        CODED IN PLACE OF 'RTN='.                                     MM001890
.*                                                                      MM001900
.*       THIS MACRO WORKS ON THE ASSUMPTION THAT THE FLAG STRING IS 4   MM001910
.*        BYTES LONG.  IF THIS IS INCREASED, MODIFY THE MACRO AT THE    MM001920
.*        POINTS IDENTIFIED BY ROWS OF ASTERISKS                        MM001930
.*                                                                      MM001940
         LCLA  &NEXCL,&NINCL,&KKEY                                      MM001950
         LCLC  &ERROR4,&CURFLAG                                         MM001960
         LCLC  &BYTE0,&BYTE1,&BYTE2,&BYTE3                              MM001970
         LCLC  &ROUTN                                                   MM001980
         AIF   ('&KEYWORD' EQ '').ERR01                                 MM001990
         AIF   ('&KEYWORD'(1,1) NE '''').ERR02                          MM002000
         AIF   ('&FLAG' EQ '').ERR03                                    MM002010
&NAME    DC    CL8&KEYWORD         KEYWORD VALUE                        MM002020
&KKEY    SETA  K'&KEYWORD                                               MM002030
&KKEY    SETA  &KKEY-3                                                  MM002040
         AIF   (&KKEY LT 8).KKEYOK                                      MM002050
&KKEY    SETA  7                                                        MM002060
.KKEYOK  ANOP                                                           MM002070
&ROUTN   SETC  '0'                                                      MM002080
         AIF   ('&RTN' NE '').LAB00                                     MM002090
         AIF   ('&TABLE' EQ '').LAB01                                   MM002100
&ROUTN   SETC  '&TABLE'                                                 MM002110
         AGO   .LAB01                                                   MM002120
.LAB00   ANOP                                                           MM002130
&ROUTN   SETC  '&RTN'                                                   MM002140
         WXTRN &ROUTN                                                   MM002150
.LAB01   DC    AL1(&KKEY),AL3(&ROUTN)  KEY LENGTH & ROUTINE ADDRESS     MM002160
         AIF   ('&COUNTER' EQ '').LAB0101                               MM002170
         DC    A(&COUNTER)         ADDRESS OF KEYWORD COUNTER           MM002180
         AGO   .LAB0102                                                 MM002190
.LAB0101 DC    A(0)                NO KEYWORD COUNTER                   MM002200
.LAB0102 ANOP                                                           MM002210
&BYTE0   SETC  '0'                                                      MM002220
&BYTE1   SETC  '0'                                                      MM002230
&BYTE2   SETC  '0'                                                      MM002240
&BYTE3   SETC  '0'                                                      MM002250
         AIF   ('&FLAG'(4,1) EQ '0').SETF0                              MM002260
         AIF   ('&FLAG'(4,1) EQ '1').SETF1                              MM002270
         AIF   ('&FLAG'(4,1) EQ '2').SETF2                              MM002280
         AIF   ('&FLAG'(4,1) EQ '3').SETF3                              MM002290
.********************************************************************** MM002300
.*       ALLOW FOR 4,5 ETC AND ADD RTNS .SETFN                          MM002310
.********************************************************************** MM002320
&ERROR4  SETC  'ERROR4'                                                 MM002330
.SETF0   ANOP                                                           MM002340
&BYTE0   SETC  '&FLAG'                                                  MM002350
         AGO   .LAB02                                                   MM002360
.SETF1   ANOP                                                           MM002370
&BYTE1   SETC  '&FLAG'                                                  MM002380
         AGO   .LAB02                                                   MM002390
.SETF2   ANOP                                                           MM002400
&BYTE2   SETC  '&FLAG'                                                  MM002410
         AGO   .LAB02                                                   MM002420
.SETF3   ANOP                                                           MM002430
&BYTE3   SETC  '&FLAG'                                                  MM002440
.LAB02   DC    AL1(&BYTE0),AL1(&BYTE1),AL1(&BYTE2),AL1(&BYTE3) KEY FLAG MM002450
         AIF   ('&EXCL' EQ '').NOEXCL                                   MM002460
&BYTE0   SETC  '0'                                                      MM002470
&BYTE1   SETC  '0'                                                      MM002480
&BYTE2   SETC  '0'                                                      MM002490
&BYTE3   SETC  '0'                                                      MM002500
&NEXCL   SETA  0                                                        MM002510
.EXCLOOP ANOP                                                           MM002520
&NEXCL   SETA  &NEXCL+1                                                 MM002530
         AIF   (&NEXCL GT N'&EXCL).SETEXCL                              MM002540
&CURFLAG SETC  '&EXCL(&NEXCL)'                                          MM002550
         AIF   ('&CURFLAG'(4,1) EQ '0').SETE0                           MM002560
         AIF   ('&CURFLAG'(4,1) EQ '1').SETE1                           MM002570
         AIF   ('&CURFLAG'(4,1) EQ '2').SETE2                           MM002580
         AIF   ('&CURFLAG'(4,1) EQ '3').SETE3                           MM002590
.********************************************************************** MM002600
.*       ADD TESTS FOR 4,5 ETC AND ADD RTNS OF THE FORM .SETEN          MM002610
.********************************************************************** MM002620
&ERROR4  SETC  'ERROR4'                                                 MM002630
         AGO   .EXCLOOP                                                 MM002640
.SETE0   ANOP                                                           MM002650
&BYTE0   SETC  '&BYTE0'.'+'.'&CURFLAG'                                  MM002660
         AGO   .EXCLOOP                                                 MM002670
.SETE1   ANOP                                                           MM002680
&BYTE1   SETC  '&BYTE1'.'+'.'&CURFLAG'                                  MM002690
         AGO   .EXCLOOP                                                 MM002700
.SETE2   ANOP                                                           MM002710
&BYTE2   SETC  '&BYTE2'.'+'.'&CURFLAG'                                  MM002720
         AGO   .EXCLOOP                                                 MM002730
.SETE3   ANOP                                                           MM002740
&BYTE3   SETC  '&BYTE3'.'+'.'&CURFLAG'                                  MM002750
         AGO   .EXCLOOP                                                 MM002760
.SETEXCL DC    AL1(&BYTE0),AL1(&BYTE1),AL1(&BYTE2),AL1(&BYTE3) MUT EXCL MM002770
         AGO   .ENDEXCL                                                 MM002780
.NOEXCL  DC    X'00000000'         NO MUTUALLY EXCLUSIVE KEYWORDS       MM002790
       MNOTE *,'THIS KEYWORD IS NOT MUTUALLY EXCLUSIVE WITH ANY OTHERS' MM002800
.ENDEXCL ANOP                                                           MM002810
         AIF   ('&INCL' EQ '').NOINCL                                   MM002820
&BYTE0   SETC  '0'                                                      MM002830
&BYTE1   SETC  '0'                                                      MM002840
&BYTE2   SETC  '0'                                                      MM002850
&BYTE3   SETC  '0'                                                      MM002860
&NINCL   SETA  0                                                        MM002870
.INCLOOP ANOP                                                           MM002880
&NINCL   SETA  &NINCL+1                                                 MM002890
         AIF   (&NINCL GT N'&INCL).SETINCL                              MM002900
&CURFLAG SETC  '&INCL(&NINCL)'                                          MM002910
         AIF   ('&CURFLAG'(4,1) EQ '0').SETI0                           MM002920
         AIF   ('&CURFLAG'(4,1) EQ '1').SETI1                           MM002930
         AIF   ('&CURFLAG'(4,1) EQ '2').SETI2                           MM002940
         AIF   ('&CURFLAG'(4,1) EQ '3').SETI3                           MM002950
.********************************************************************** MM002960
.*       ADD TESTS FOR 4,5, ETC AND ADD RTNS OF THE FORM .SETIN         MM002970
.********************************************************************** MM002980
&ERROR4  SETC  'ERROR4'                                                 MM002990
         AGO   .INCLOOP                                                 MM003000
.SETI0   ANOP                                                           MM003010
&BYTE0   SETC  '&BYTE0'.'+'.'&CURFLAG'                                  MM003020
         AGO   .INCLOOP                                                 MM003030
.SETI1   ANOP                                                           MM003040
&BYTE1   SETC  '&BYTE1'.'+'.'&CURFLAG'                                  MM003050
         AGO   .INCLOOP                                                 MM003060
.SETI2   ANOP                                                           MM003070
&BYTE2   SETC  '&BYTE2'.'+'.'&CURFLAG'                                  MM003080
         AGO   .INCLOOP                                                 MM003090
.SETI3   ANOP                                                           MM003100
&BYTE3   SETC  '&BYTE3'.'+'.'&CURFLAG'                                  MM003110
         AGO   .INCLOOP                                                 MM003120
.SETINCL DC    AL1(&BYTE0),AL1(&BYTE1),AL1(&BYTE2),AL1(&BYTE3) REQUIRED MM003130
         AGO   .ENDINCL                                                 MM003140
.NOINCL  DC    X'00000000'         NO REQUIRED KEYWORDS                 MM003150
         MNOTE *,'THIS KEYWORD DOES NOT SPECIFICALLY REQUIRE OTHERS'    MM003160
.ENDINCL ANOP                                                           MM003170
         AIF   ('&ERROR4' EQ 'ERROR4').ERR04                            MM003180
         MEXIT                                                          MM003190
.ERR01   MNOTE 16,'NO KEYWORD SUPPLIED'                                 MM003200
         MEXIT                                                          MM003210
.ERR02   MNOTE 16,'KEYWORD MUST BE ENCLOSED BY QUOTES'                  MM003220
         MEXIT                                                          MM003230
.ERR03   MNOTE 16,'NO FLAG SUPPLIED'                                    MM003240
         MEXIT                                                          MM003250
.ERR04   MNOTE *,'THE 4TH CHARACTER OF FLAGS MUST BE IN RANGE 0-3'      MM003260
         MNOTE 8,'ONE OR MORE ILLEGAL FLAGS WAS ENTERED AND IGNORED'    MM003270
         MEXIT                                                          MM003280
         MEND                                                           MM003290
         TITLE 'JES2MODS INITIALISATION - COMMENTARY'                   MM003300
JES2B001 CSECT                                                          MM003310
         PRINT ON,GEN                                                   MM003320
         SPACE 2                                                        MM003330
*******************************************************************     MM003340
*                                                                 *     MM003350
*        PROGRAM ID. :             JES2B001                       *     MM003360
*                                                                 *     MM003370
*        DATE WRITTEN :            MARCH 1977                     *     MM003380
*                                                                 *     MM003390
*        AUTHORS:                  D.H.CARTWRIGHT.                *     MM003400
*                                  D.A.MOORCROFT                      * MM003410
*                                                                 *     MM003420
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     MM003430
*                                                                 *     MM003440
*******************************************************************     MM003450
         SPACE 3                                                        MM003460
*******************************************************************     MM003470
*                                                                 *     MM003480
*        PURPOSE                                                  *     MM003490
*       ---------                                                 *     MM003500
*                                                                 *     MM003510
*        THIS PROGRAM IS DYNAMICALLY CALLED FROM HASPINIT         *     MM003520
*        AT STATEMENT M4893520 BY A $MODINIT MACRO CALL           *     MM003530
*        AFTER PROCESSING THE STANDARD JES2 PARAMETER             *     MM003540
*        LIBRARY.IT PROCESSES ITS OWN PARAMETER CARDS AND         *     MM003550
*        CREATES TABLES IN SQA,CSA AND THE JES2 ADDRESS SPACE     *     MM003560
*        OF USER EXITS AVAILABLE TO JES2 AND DEVICES ALLOWED      *     MM003570
*        TO PERFORM NON-STANDARD FUNCTIONS.THESE FUNCTIONS ARE    *     MM003580
*        PERFORMED BY THE USER EXITS,WHICH THIS PROGRAM LOADS     *     MM003590
*        IN THE JES2 ADDRESS SPACE.                               *     MM003600
*                                                                 *     MM003610
*******************************************************************     MM003620
         SPACE 3                                                        MM003630
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS              MM003640
         TITLE 'JES2MODS INITIALISATION - HASP CONTROL BLOCKS'          MM003650
*                                                                       MM003660
*              DOCUMENTATION OPTIONS FOR THIS ASSEMBLY                  MM003670
*                                                                       MM003680
         SPACE 3                                                        MM003690
        $SYSPARM (ON,GEN,DATA,YES,NO)                                   MM003700
         SPACE 3                                                        MM003710
*              GENERATE HASP CONTROL BLOCKS                             MM003720
*                                                                       MM003730
         SPACE 2                                                        MM003740
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       MM003750
         TITLE 'MODS INITIALISATION - PRINT LINE DSECT'                 MM003760
*********************************************************************** MM003770
*        PRINT LINE DSECT                                             * MM003780
*********************************************************************** MM003790
         SPACE 1                                                        MM003800
PRNTLINE DSECT                                                          MM003810
PRNTCC   DS    CL1                 CARRAIGE CONTROL CHARACTER           MM003820
PRNTCNO  DS    CL4                 CONTROL CARD SEQUENCE NUMBER         MM003830
         DS    CL3                 UNUSED                               MM003840
PRNTCARD DS    CL80                CONTROL CARD IMAGE                   MM003850
         DS    CL3                 UNUSED                               MM003860
PRNTKEY  DS    CL8                 UP TO 8 CHARS OF KEYWORD IN ERROR    MM003870
         DS    CL3                 UNUSED                               MM003880
PRNTERR  DS    CL30                ERROR MESSAGE                        MM003890
         DS    CL1                 UNUSED                               MM003900
JES2B001 CSECT                                                          MM003910
         TITLE 'MODS INITIALISATION -- INITIAL ENTRY POINT'             MM003920
*********************************************************************** MM003930
*                                                                     * MM003940
*        JES2B001 -- INITIAL ENTRY POINT                              * MM003950
*                                                                     * MM003960
*********************************************************************** MM003970
         SPACE 1                                                     R4 MM003980
         PGMIN EQUATES=NO,USING=(R13,R12) INITIAL ENTRY                 MM003990
         $DATE DOC=&DOC            CREATE TIME/DATE STAMP               MM004000
         TITLE 'MODS INITIALISATION - MAIN-LINE LOGIC'                  MM004010
*********************************************************************** MM004020
*        MAIN-LINE LOGIC                                              * MM004030
*********************************************************************** MM004040
         SPACE 1                                                        MM004050
         BAL   R4,ESTAE            SET UP STAE ENVIRONMENT              MM004060
         BAL   R4,PARSE            READ CARDS & CREATE VERB SCAN CHAIN  MM004070
         BNE   TERMERR             GO TELL OF TERMINAL ERROR            MM004080
         BAL   R4,FINDTYPE         IDENTIFY TYPES OF CONTROL CARDS      MM004090
         BAL   R4,VALIDATE         SCAN EACH CARD & VALIDATE KEYWORDS   MM004100
         SPACE 2                                                        MM004110
         BAL   R4,INITSTOR         SET UP BASIC CONTROL BLOCKS          MM004120
         BAL   R4,PROCESCC         PROCESS THE VALID CARDS & KEYWORDS   MM004130
         B     JOBEND              FINISH                               MM004140
         TITLE 'MODS INITIALISATION - ESTABLISH STAE ENVIRONMENT'       MM004150
*********************************************************************** MM004160
*        THIS ROUTINE LOADS THE MONSANTO EXTENTED STAE ROUTINE        * MM004170
*        AND SETS UP A STAE ENVIRONMENT TO ENTER THAT ROUTINE         * MM004180
*        ON ANY ERROR.THE ROUTINE IS NEVER DELETED SO THAT            * MM004190
*        JES2 CAN USE THIS STAE ROUTINE RATHER THAN ITS OWN           * MM004200
*        RATHER FEEBLE EFFORT.                                        * MM004210
*********************************************************************** MM004220
         SPACE 3                                                        MM004230
ESTAE    SUBIN ,                   SUBROUTINE ENTRY                     MM004240
         LOAD  EP=JES2B005,ERRET=STAEX LOAD ESTAE ROUTINE               MM004250
         LR    R2,R0               PICK UP ROUTINE ENTRY POINT          MM004260
         ESTAE (R2),XCTL=YES       ESTABLISH STAE ENVIRONMENT           MM004270
STAEX    SUBOUT ,                  RETURN TO CALLER                     MM004280
         TITLE 'MODS INITIALISATION - CONTROL CARD READ ROUTINE'        MM004290
*********************************************************************** MM004300
*                                                                     * MM004310
*        THIS ROUTINE OPENS THE CONTROL CARD FILE,READS THE           * MM004320
*        CARDS AND CREATES TABLES OF OPERANDS IN CORE (SUBPOOL 1).    * MM004330
*        AT END OF FILE THE INPUT FILE IS CLOSED AND CONTROL          * MM004340
*        RETURNED TO THE CALLER.                                      * MM004350
*        OPERANDS ARE CHAINED OFF THE FIELD 'VERBS' IN A CHAIN        * MM004360
*        SHOWN IN THE 'KEYCHAIN' DSECT.                               * MM004370
*                                                                     * MM004380
*        REGISTER USAGE :                                             * MM004390
*              R0                  USED BY I/O ROUTINES               * MM004400
*              R1                  USED BY I/O ROUTINES               * MM004410
*              R2                  POINTER TO INPUT DCB               * MM004420
*              R3                  POINTER TO CARD IMAGE              * MM004430
*              R4                  BRANCH/RETURN ADDRESS              * MM004440
*              R5                  PRINT LINE POINTER                   MM004450
*              R7                  VERB CHAIN TABLE POINTER           * MM004460
*              R14                 USED BY SYSTEM                     * MM004470
*              R15                 USED BY SYSTEM                     * MM004480
*                                                                     * MM004490
*        UPON RETURN THE PSW COND CODE IS SET SUCH THAT THE CALLER    * MM004500
*         MAY MAKE THE FOLLOWING CONDITIONAL BRANCHES :-              * MM004510
*              BE  - CONTROL CARDS FOUND AND SCANNED                  * MM004520
*              BNE - NO CONTROL CARDS FOUND                           * MM004530
*         IF AN ERROR IS DETECTED, UPON RETURN R1 POINTS AT THE       * MM004540
*         APPROPRIATE ERROR MESSAGE                                   * MM004550
*                                                                     * MM004560
*********************************************************************** MM004570
         SPACE 1                                                        MM004580
PARSE    SUBIN SAVE=(R3,R4,R5,R7)  ENTRY                                MM004590
         SPACE 1                                                        MM004600
*******************************************************************     MM004610
*        TEST WHICH ARE THE DD'S SUPPLIED, AND OPEN DATA SETS     *     MM004620
*         PRESENT.                                                *     MM004630
*******************************************************************     MM004640
         SPACE 1                                                        MM004650
         LA    R3,MAXDS            ESTABLISH LOOP                       MM004660
         LA    R2,DCBTABLE         POINT R2 AT DCB TABLE                MM004670
         OI    0(R2),DDINT         INDICATE DD INTEREST                 MM004680
         BAL   R4,TESTIOT          GO TEST IF DD STATEMENT PRESENT      MM004690
         BAL   R4,OPEN             GO OPEN DATA SET                     MM004700
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY            MM004710
         BCT   R3,*-16             PROCESS NEXT DATA SET                MM004720
         BAL   R4,PRINT            GET A PRINT BUFFER IF REQUIRED       MM004730
         USING PRNTLINE,R5         MAP REPORT LINE                      MM004740
         SPACE 1                                                        MM004750
         LA    R2,SYSINSW          POINT TO INPUT FILE CONTROL          MM004760
         TM    0(R2),DDINT+DDPRES+DDOPEN ALL CORRECT?                   MM004770
         BNO   PARSERR             NO,GIVE UP                           MM004780
         LA    R7,VERBS            POINT TO VERB CHAIN START            MM004790
         USING KEYCHAIN,R7         ASSUME CHAIN ADDRESSABILITY          MM004800
         SPACE 1                                                        MM004810
PARSELUP DS    0H                  PROCESS EACH CARD                    MM004820
         BAL   R4,RIN              GO READ RECORD                       MM004830
         TM    PRINTSW,DDPRES+DDOPEN+DDINT ARE WE REPORTING?            MM004840
         BNO   PARSENP1            NO,SO NO PRINT BUFFER                MM004850
         MVC   PRNTCARD,RECREC-RECAREA(R3) COPY CARD TO REPORT          MM004860
         MVC   PRNTCNO,RIDMASK     MOVE IN EDIT MASK                    MM004870
         ED    PRNTCNO,CNTSYSIN    SHOW INPUT RECORD COUNT              MM004880
         BAL   R4,PRINT            LIST INPUT CARDS                     MM004890
         SPACE 1                                                        MM004900
PARSENP1 DS    0H                  PROCESS INPUT CARD                   MM004910
         CLI   RECREC-RECAREA(R3),C'*' IS 1ST CHAR AN ASTERISK          MM004920
         BE    *+8                 IF SO, COMMENT CARD SO DO NOT SCAN   MM004930
         BAL   R4,SCAN             GO GET OPERANDS                      MM004940
         B     PARSELUP            PROCESS NEXT CARD                    MM004950
         SPACE 1                                                        MM004960
PARSEND  DS    0H                  END-OF-FILE REACHED                  MM004970
         BAL   R4,CLOSE            CLOSE FILE                           MM004980
         CP    CNTSYSIN,ZERO       TEST INPUT COUNT                     MM004990
         BH    PARSEX1             CARDS READ,CARRY ON                  MM005000
         LA    R1,B001ERR2         NO INPUT, SO POINT AT ERROR MESSAGE  MM005010
         B     PARSXITY            GO SET COND CODE TO SHOW ERROR       MM005020
         SPACE 1                                                        MM005030
PARSEX1  DS    0H                  NORMAL END OF INPUT                  MM005040
         TM    PRINTSW,DDPRES+DDOPEN+DDINT ARE WE REPORTING?            MM005050
         BNO   PARSENP2            NO,SO NO PRINT BUFFER                MM005060
         MVI   PRNTCC,PAGESKIP     ERROR MESSAGES ON NEW PAGE           MM005070
         BAL   R4,PRINT            OUTPUT DUMMY LINE TO SKIP            MM005080
PARSENP2 DS    0H                  CARRY ON                             MM005090
         SPACE 1                                                        MM005100
PARSEX2  DS    0H                  NORMAL RETURN TO CALLER              MM005110
         B     PARSXITX            GO SET COND CODE FOR NO ERRORS       MM005120
PARSXITY CLI   *,$$Y               SET COND CODE TO SHOW ERROR          MM005130
         B     *+8                 BYPASS RESETTING COND CODE           MM005140
PARSXITX CLI   *,$$X               SET COND CODE FOR NO ERRORS          MM005150
         SUBOUT RESTORE=(R3,R4,R5,R7) RETURN                            MM005160
         DROP  R5,R7               CEASE CHAIN,PRINT ADDRESSABILITY     MM005170
         SPACE 1                                                        MM005180
PARSERR  DS    0H                  ERROR - NO DD CARD                   MM005190
         LA    R1,B001ERR1         POINT AT ERROR MESSAGE               MM005200
         B     PARSXITY            GO SET COND CODE TO SHOW ERROR       MM005210
         TITLE 'MODS INITIALISATION - CONTROL CARD SCAN'                MM005220
*********************************************************************** MM005230
*        SUB-ROUTINE TO SCAN CONTROL CARD FOR VERBS                   * MM005240
*********************************************************************** MM005250
         SPACE 1                                                        MM005260
*        ON ENTRY :                                                   * MM005270
*         R3  - ADDRESS OF RECORD SAVE AREA                             MM005280
         SPACE 1                                                        MM005290
SCAN     SUBIN SAVE=(R4)           ENTRY                                MM005300
         USING KEYCHAIN,R7         ESTABLISH CHAIN ADDRESSABILITY       MM005310
         USING RECAREA,R3          ESTABLISH RECORD ADDRESSABILITY      MM005320
         LA    R6,RECREC           POINT R6 AT RECORD IMAGE             MM005330
         LA    R7,RECVERBS         POINT AT CHAIN FIELD FOR THIS REC    MM005340
         L     R1,RECPREV          GET ADDRESS OF PREVIOUS REC S/A      MM005350
         CLI   RECREC-RECAREA+71(R1),C'*' WAS CONTINUATION INDICATED    MM005360
         BNE   *+8                 BR IF NO CONTINUATION LAST TIME      MM005370
         L     R7,VERBS            SET TO ADD TO END OF LAST CHAIN      MM005380
         SCAN  DATA=(R6),LENGTH=71,DELIM=(' ',','),BLKLEN=KEYLGTH,     CMM005390
               CHAIN=KEYNEXT       BREAK UP CARD INTO OPERANDS          MM005400
         ST    R7,VERBS            PRESERVE ADDR OF LAST ELEMENT        MM005410
         SUBOUT RESTORE=(R4)       EXIT                                 MM005420
         SPACE 1                                                        MM005430
         DROP  R3,R7               DROP ADDRESSABILITY                  MM005440
         TITLE 'MODS INITIALISATION - FIND VERB DSECRIPTOR ENTRY'       MM005450
*********************************************************************** MM005460
*        FIND VERB DESCRIPTOR ENTRY CORRESPONDING TO KEYWORD          * MM005470
*********************************************************************** MM005480
         SPACE 1                                                        MM005490
*        UPON ENTRY :-                                                  MM005500
*         R7   - START OF TABLE OF VERB DESCRIPTOR ELEMENTS             MM005510
*         R6   - NUMBER OF ELEMENTS IN THE TABLE                        MM005520
*         R5   - KEYWORD DESCRIPTOR ENTRY ( FROM SCAN )                 MM005530
*                                                                       MM005540
*        UPON EXIT :-                                                   MM005550
*         R7   - MATCHING VERB DESCRIPTOR ELEMENT IF FOUND              MM005560
*                                                                       MM005570
*        UPON RETURN THE COND CODE IN THE PSW IS SET SUCH THAT THE      MM005580
*         CALLER MAY MAKE THE FOLLWOING CONDITIONAL BRANCHES :-         MM005590
*         BNE  - NO MATCHING ENTRY FOUND ( UNKNOWN KEYWORD )            MM005600
*         BE   - MATCHING ENTRY FOUND ( POINTED TO BY R7 )              MM005610
         SPACE 1                                                        MM005620
         USING VERBDESC,R7         ESTABLISH DESCRIPTOR ADDRESSAB'Y     MM005630
         USING KEYCHAIN,R5         ESTABLISH KEYWORD CHAIN ADDR'Y       MM005640
GETVERB  SUBIN ,                   ENTER ROUTINE                        MM005650
GETVERB1 IC    R1,VERBLEN          GET EXECUTABLE LENGTH OF VERB        MM005660
         L     R15,KEYLCTN         SET ADDRESS OF KEYWORD               MM005670
         EX    R1,GETVCLC          COMPARE KEYWORD & DESCRIPTOR         MM005680
         BE    GETVERBX            GO SET COND CODE IF SAME             MM005690
         LA    R7,VERBLGTH(,R7)    INCREMENT TO NEXT DESCRIPTOR         MM005700
         BCT   R6,GETVERB1         LOOP BACK IF DESCRIPTORS LEFT        MM005710
         CLI   *,$$Y               SET COND CODE TO SHOW NOT FOUND      MM005720
         B     *+8                 AVOID RESETTING COND CODE            MM005730
GETVERBX CLI   *,$$X               SET COND CODE TO SHOW MATCH          MM005740
         SUBOUT ,                  RETURN TO CALLER                     MM005750
         SPACE 1                                                        MM005760
GETVCLC  CLC   0(0,R15),VERBVERB   COMPARE KEYWORD WITH DESCRIPTOR      MM005770
         DROP  R5,R7               DROP KEYWORD & DESCRIPTOR ADDR'Y     MM005780
         TITLE 'MODS INITIALISATION - IDENTIFY CONTROL CARDS'           MM005790
*********************************************************************** MM005800
*        IDENTIFY CONTROL CARDS BY TYPE                               * MM005810
*********************************************************************** MM005820
         SPACE 1                                                        MM005830
*        REGISTER USAGE :-                                              MM005840
*         R3  - ADDRESS OF RECORD SAVE AREA                             MM005850
*         R5  - ADDRESS OF KEYWORD DESCRIPTOR ( FROM 'SCAN' )           MM005860
*         R6  - LOOP CONTROL FOR ROUTINE 'GETVERB'                      MM005870
*         R7  - POINTER TO VERB DESCRIPTOR TABLE                        MM005880
         SPACE 1                                                        MM005890
*        FOR EACH INPUT CONTROL CARD, THIS ROUTINE SCANS THE CHAIN OF   MM005900
*         KEYWORD DESCRIPTOR ELEMENTS, AND COMPARES THEM WITH THE       MM005910
*         VERB DESCRIPTOR ELEMENTS IN THE TABLE 'CCTABLE'.  THIS TABLE  MM005920
*         CONTAINS DESCRIPTORS ONLY OF THE KEYWORDS BY WHICH A CARD     MM005930
*         IS RECOGNISED.  WHEN A MATCH IS FOUND, THE APPROPRIATE CARD   MM005940
*         IDENTIFYING FLAG IS SET ( IN THE LOW ORDER 4 BITS OF THE 1ST  MM005950
*         FLAG BYTE IN THE RECORD S/A ), AND THE ADDRESS OF THE         MM005960
*         APPROPRIATE VERB DESCRIPTOR TABLE IS SET IN THE RECORD S/A.   MM005970
         SPACE 1                                                        MM005980
*        NOTE THAT THE LOGIC IS SUCH THAT THE KEYWORD IDENTIFYING       MM005990
*         THE CONTROL CARD NEED NOT BE THE FIRST ON THE CARD.           MM006000
*        HOWEVER,SINCE KEYWORDS WILL BE PROCESSED IN THE ORDER          MM006010
*        IN WHICH THEY APPEAR,PRE-REQUISITE VERBS SHOULD COME FIRST     MM006020
*        E.G. 'EXIT' BEFORE 'INIT'.                                     MM006030
*        UNDETECTABLE ERRORS MAY OCCUR IF THIS SIMPLE RULE IS IGNORED.  MM006040
         EJECT                                                          MM006050
*********************************************************************** MM006060
*        IDENTIFY CONTROL CARD ( CONT'D )                             * MM006070
*********************************************************************** MM006080
         SPACE 1                                                        MM006090
         USING KEYCHAIN,R5         ESTABLISH KEYWORD CHAIN ADDR'Y       MM006100
         USING VERBDESC,R7         ESTABLISH VERB DESCRIPTOR ADDR'Y     MM006110
         USING RECAREA,R3          ESTABLISG RECORD S/A ADDR'Y          MM006120
FINDTYPE SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              MM006130
         L     R3,RECSTART         GET ADDRESS OF 1ST RECORD S/A        MM006140
         B     *+8                 BYPASS FORWARD CHAINING 1ST TIME     MM006150
FINDTYP1 L     R3,RECNEXT          GET ADDRESS OF NEXT RECORD S/A       MM006160
         LTRR  R3                  PURIFY & TEST FOR END OF CHAIN       MM006170
         BZ    FINDTYPX            EXIT IF END OF CHAIN                 MM006180
         L     R5,RECVERBS         POINT AT 1ST KEYWORD DESCRIPTOR      MM006190
         NC    RECVERBS,RECVERBS   DOES KEYWORD CHAIN EXIST             MM006200
         BZ    FINDTYP1            IF NOT: CONTINUATION CARD: IGNORE    MM006210
         B     *+8                 BYPASS FORWARD CHAINING              MM006220
FINDTYP2 L     R5,KEYNEXT          GET NEXT KEYWORD DESCRIPTOR          MM006230
         LTRR  R5                  PURIFY & TEST FOR END OF CHAIN       MM006240
         BZ    FINDTYP4            GO TELL OF ERROR IF END OF CHAIN     MM006250
         LA    R6,CCTABNO          SET NUMBER OF ENTRIES IN TABLE       MM006260
         LA    R7,CCTABLE          POINT AT START OF VERB DSEC TABLE    MM006270
         BAL   R4,GETVERB          TEST IF THIS VERB IDENTIFIES RECORD  MM006280
         BE    FINDTYP3            BR IF YES                            MM006290
         B     FINDTYP2            LOOP BACK TO TRY NEXT KEYWORD        MM006300
FINDTYP4 LA    R1,B001ERR4         POINT AT ERROR MESSAGE               MM006310
         BAL   R4,CARDERR          GO TELL OF UNKNOWN CARD              MM006320
         B     FINDTYP1            LOOP BACK TO PROCESS NEXT RECORD     MM006330
FINDTYP3 L     R1,VERBRTN          PICK UP TABLE POINTER                MM006340
         MVC   RECVTABL,0(R1)      POINT REC S/A AT REQ VERB TABLE      MM006350
         B     FINDTYP1            GO PROCESS NEXT RECORD               MM006360
FINDTYPX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         MM006370
         SPACE 1                                                        MM006380
         DROP  R3,R5,R7            DROP ADDRESSABILITY                  MM006390
         TITLE 'MODS INITIALISATION - VALIDATE CONTROL CARDS'           MM006400
*********************************************************************** MM006410
*        VALIDATE CONTROL CARDS                                       * MM006420
*********************************************************************** MM006430
         SPACE 1                                                        MM006440
*        THIS ROUTINE VALIDATES THE CONTENTS OF ALL CONTROL CARDS THAT  MM006450
*         WERE RECOGNISED BY THE ROUTINE 'FINDTYPE'.  DUPLICATED        MM006460
*         KEYWORDS, OMITTED KEYWORDS REQUIRED BY OTHERS, AND NUTUALLY   MM006470
*         EXCLUSIVE KEYWORDS ARE DETECTED.  ERROR MESSAGES ARE PRODUCED MM006480
*         FOR ALL ERRORS, AND AS MUCH PROCESSING AS POSSIBLE IS         MM006490
*         PERFORMED REGARDLESS OF THE ERRORS.  ROUTINE 'FLDVAL' IS      MM006500
*         INVOKED TO PROCESS THE CHAINS OF KEYWORDS FOR EACH CARD.      MM006510
         SPACE 1                                                        MM006520
*        REGISTER USAGE :-                                              MM006530
*         R1  - ERROR MESSAGE FOR 'CARDERR'                             MM006540
*         R3  - RECORD SAVE AREA                                        MM006550
*         R5  - KEYWORD DESCRIPTOR ELEMENET                             MM006560
*         R7  - VERB DESCRIPTOR ELEMENT                                 MM006570
         SPACE 1                                                        MM006580
         USING RECAREA,R3          ESTABLISH RECORD SAVE AREA ADDR'Y    MM006590
VALIDATE SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              MM006600
         L     R3,RECSTART         GET ADDRESS OF 1ST RECORD SAVE AREA  MM006610
         B     *+8                 BYPASS FORWARD CHAINING              MM006620
VALIDAT1 L     R3,RECNEXT          GET ADDRESS OF NEXT REC S/A          MM006630
         LTRR  R3                  PURIFY & TEST FOR END OF CHAIN       MM006640
         BZ    VALIDATX            BR IF END OF CHAIN TO EXIT           MM006650
         NC    RECVTABL,RECVTABL   DOES VERB DESC TABLE ADDRESS EXIST   MM006660
         BZ    VALIDAT1            IF NOT: UNKNOWN OR CONTINUATION. IGN MM006670
         BAL   R4,FLDVAL           VALIDATE THE KEYWORDS FOR THIS CARD  MM006680
         MVC   RECFWORK,RECVFND    MOVE 'FOUND' FLAGS TO WORK AREA      MM006690
         NC    RECFWORK,RECVINCL   'AND' THE MANDATORY & FOUND FLAGS    MM006700
*                                  RESULT IS FOUND MANDATORY KEYWORDS   MM006710
         CLC   RECFWORK,RECVINCL   TEST IF ALL MANDATORY FLAGS ON       MM006720
         BE    VALIDAT1            IF ALL FOUND, THEN GET NEXT CARD     MM006730
         LA    R1,B001ERR7         POINT AT ERROR MESSAGE               MM006740
         BAL   R4,CARDERR          GO TELL OF MISSING KEYWORDS          MM006750
         XC    RECVTABL,RECVTABL   NULLIFY ADDR OF VERB DESC TABLE, SO  MM006760
*                                   THAT CARD WILL BE IGNORED IN FUTURE MM006770
         B     VALIDAT1            LOOP BACK TO PROCESS NEXT CARD       MM006780
VALIDATX SUBOUT RESTORE=R4         RESTORE AND RETURN                   MM006790
         SPACE 1                                                        MM006800
         DROP  R3                  DROP RECORD S/A ADDRESSABILITY       MM006810
         TITLE 'MODS INITIALISATION - VALIDATE KEYWORD CHAIN'           MM006820
*********************************************************************** MM006830
*        VALIDATE CHAIN OF KEYWORD DESCRIPTORS                        * MM006840
*********************************************************************** MM006850
         SPACE 1                                                        MM006860
*        REGISTER USAGE :-                                              MM006870
*         R1  - ERROR MESSAGE FOR ROUTINE 'FIELDERR'                    MM006880
*         R3  - RECORD SAVE AREA                                        MM006890
*         R5  - KEYWORD DESCRIPTOR ELEMENT                              MM006900
*         R7  - VERB DESCRIPTOR ELEMENT                                 MM006910
         SPACE 1                                                        MM006920
         USING RECAREA,R3          ESTABLISH RECORD AREA ADDRESSABILITY MM006930
         USING KEYCHAIN,R5         ESTABLISH KEYWORD DESCRIPTOR ADDR'Y  MM006940
         USING VERBDESC,R7         ESTABLISH VERB DESCRIPTOR ADDRESS'Y  MM006950
FLDVAL   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              MM006960
         L     R5,RECVERBS         POINT AT 1ST KEYWORD DESCRIPTOR      MM006970
         B     *+8                 BYPASS FORWARD CHCINING              MM006980
FLDVAL1  L     R5,KEYNEXT          GET NEXT KEYWORD DESCRIPTOR          MM006990
         LTRR  R5                  PURIFY & TEST FOR END OF CHAIN       MM007000
         BZ    FLDVALX             EXIT IF END OF CHAIN                 MM007010
         L     R7,RECVTABL         POINT AT START OF VERB DSECRIPTOR TA MM007020
         SR    R6,R6               ZEROISE R6                           MM007030
         IC    R6,RECVTABL         SET NUMBER OF ELEMENTS IN TABLE      MM007040
         BAL   R4,GETVERB          FIND CORRESPONDING VERB DESCRIPTOR   MM007050
         BE    FLDVAL2             BR IF FOUND TO PROCESS               MM007060
         LA    R1,B001ERR5         POINT AT ERROR MESSAGE               MM007070
         BAL   R4,FIELDERR         TELL OF UNRECOGNISABLE KEYWORD       MM007080
         B     FLDVAL1             LOOP BACK TO PROCESS NEXT            MM007090
FLDVAL2  MVC   RECFWORK,RECVFND    MOVE 'ALREADY FOUND' FLAGS TO WORK A MM007100
         NC    RECFWORK,VERBFLAG   AND THIS WITH THE ALREADY FOUND FLAG MM007110
         CLC   RECFWORK,VERBFLAG   HAS THIS VERB ALREADY BEEN FOUND     MM007120
         BNE   FLDVAL3             BR IF NOT TO CONTONUE TESTS          MM007130
         LA    R1,B001ERR8         POINT AT ERROR MESSGAE               MM007140
         BAL   R4,FIELDERR         GO TELL OF DUPLICATE KEYWORD         MM007150
         B     FLDVAL1             LOOP BACK TO PROCESS NEXT            MM007160
         EJECT                                                          MM007170
*********************************************************************** MM007180
*        VALIDATE CHAIN OF KEYWORD DESCRIPTORS ( CONT'D )             * MM007190
*********************************************************************** MM007200
         SPACE 1                                                        MM007210
FLDVAL3  MVC   RECFWORK,RECVEXCL   MOVE 'MUTUALLY EXCLUSIVE' FLAGS TO W MM007220
         NC    RECFWORK,VERBFLAG   'AND' THIS FLAG WITH EXCLUSIVE FLAGS MM007230
         BZ    FLDVAL4             THIS KEYWORD NOT MUTUALLY EXCLUSIVE  MM007240
         LA    R1,B001ERR6         POINT AT ERROR MESSAGE               MM007250
         BAL   R4,FIELDERR         GO TELL OF EXCLUSIVE KEYWORDS        MM007260
         B     FLDVAL1             LOOP BACK TO PROCESS NEXT            MM007270
FLDVAL4  OC    RECVFND,VERBFLAG    SET FLAG AS FOUND                    MM007280
         OC    RECVEXCL,VERBEXCL   INDICATE MUTUALLY EXCLUSIVE KEYWORDS MM007290
         OC    RECVINCL,VERBINCL   INDICATE REQUIRED KEYWORDS           MM007300
         NC    VERBCTR,VERBCTR     IS THERE A VERB COUNTER              MM007310
         BZ    FLDVAL5             BR IF NO COUNTER FOR THIS KEYWORD    MM007320
         L     R1,VERBCTR          POINT R1 AT COUNTER                  MM007330
         L     R15,0(,R1)          GET COUNTER VALUE                    MM007340
         LA    R15,1(,R15)         INCREMENT COUNTER                    MM007350
         ST    R15,0(,R1)          PRESERVE UPDATED COUNTER             MM007360
FLDVAL5  ST    R7,KEYVERB          POINT KEYWORD DESCRIPTOR AT VERB DES MM007370
         MVC   KEYROUTN+1(3),VERBRTN+1 SAVE ADDRESS OF PROCESSING RTN   MM007380
         B     FLDVAL1             LOOP BACK TO PROCESS NEXT            MM007390
FLDVALX SUBOUT RESTORE=R4          RESTORE AND RETURN                   MM007400
         SPACE 1                                                        MM007410
         DROP  R3,R5,R7            DROP ADDRESSABILITY                  MM007420
         TITLE 'MODS INITIALISATION - STORAGE RESERVATION'              MM007430
*********************************************************************** MM007440
*        ROUTINE TO CALCULATE TOTAL STORAGE REQUIREMENT,ACQUIRE       * MM007450
*        A BLOCK OF STORAGE FROM SUBPOOL ZERO AND INITIALISE THE      * MM007460
*        AHCT,APCE'S AND BASIC ADCT'S PRIOR TO KEYWORD PROCESSING.    * MM007470
*********************************************************************** MM007480
         SPACE 3                                                        MM007490
INITSTOR SUBIN SAVE=(R4)           ENTRY                                MM007500
         BAL   R4,GETSTORE         GO GET A BLOCK OF STORAGE            MM007510
         BAL   R4,INITAHCT         GO SET UP BASIC AHCT                 MM007520
         BAL   R4,INITAPCE         GO SET UP APCE CHAIN                 MM007530
         BAL   R4,INITADCT         GO SET UP ADCT CHAIN                 MM007540
INITSTRX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MM007550
         TITLE 'MODS INITIALISATION  - ACQUIRE STORAGE'                 MM007560
*********************************************************************** MM007570
*        CALCULATE STORAGE REQUIRED,OBTAIN IT AND SET TO ZEROES.      * MM007580
*********************************************************************** MM007590
         SPACE 3                                                        MM007600
GETSTORE SUBIN SAVE=(R4,R5,R6,R7)  ENTRY                                MM007610
         LH    R7,$NUMRJE          PICK UP MAX NO. REMOTES              MM007620
         LA    R7,1(,R7)           ADD ONE FOR LOCAL                    MM007630
         LA    R6,ADCTLGTH         GET SIZE OF EACH ADCT                MM007640
         LA    R6,CBPRLGTH(,R6)    ADD ADCT PREFIX SIZE                 MM007650
         MR    R6,R6               CALCULATE ADCT STORAGE REQUIRED      MM007660
         ST    R7,DYNACORE         SAVE RESULT                          MM007670
         SPACE 1                                                        MM007680
         L     R7,$PCEORG          POINT TO FIRST PCE                   MM007690
         SR    R6,R6               CLEAR COUNT (ASSUME ONE PCE)         MM007700
PCECOUNT DS    0H                  COUNT NUMBER OF PCE'S                MM007710
         LA    R6,1(,R6)           ADD ONE TO COUNT                     MM007720
         ICM   R7,7,PCENEXT+1-PCEDSECT(R7) GET NEXT PCE                 MM007730
         BNZ   PCECOUNT            COUNT IT IF THERE IS ONE             MM007740
         A     R6,PCECTR           ADD ADDITIONAL PCE'S REQUESTED       MM007750
         ST    R6,PCENUMB          SAVE PCE COUNT                       MM007760
         LA    R7,PCEWORK-PCEDSECT CALCULATE SIZE OF BASIC PCE          MM007770
         L     R6,PCECTR           GET COUNT OF ADDITIONAL PCE'S        MM007780
         MR    R6,R6               CALCULATE ADDITIONAL PCE STORAGE     MM007790
         A     R7,DYNACORE         ADD TO TOTAL                         MM007800
         ST    R7,DYNACORE         SAVE NEW TOTAL                       MM007810
         SPACE 1                                                        MM007820
         L     R6,PCENUMB          GET NO. OF PCE'S AGAIN               MM007830
         A     R6,APCEXTRA         ADD AN ABRITARY NUMBER OF SPARES     MM007840
         ST    R6,APCENUMB         SAVE TOTAL NO. APCE'S                MM007850
         LA    R7,APCELGTH         GET SIZE OF EACH APCE                MM007860
         LA    R7,CBPRLGTH(,R7)    ADD APCE PREFIX SIZE                 MM007870
         MR    R6,R6               CALCULATE TOTAL APCE STORAGE         MM007880
         A     R7,DYNACORE         ADD ADCT STORAGE                     MM007890
         ST    R7,DYNACORE         SAVE NEW TOTAL STORAGE               MM007900
         SPACE 1                                                        MM007910
         BAL   R4,PCESIZE          FIND PCEWORK REQUESTS                MM007920
         L     R7,PCEWRK           PICK UP PCEWORK STORAGE REQUESTED    MM007930
         A     R7,DYNACORE         ADD PREVIOUS TOTAL                   MM007940
         ST    R7,DYNACORE         SAVE NEW TOTAL                       MM007950
         SPACE 1                                                        MM007960
         LA    R6,$MODNO+1         GET NUMBER OF MRCB'S                 MM007970
         LA    R7,MRCBLGTH         LENGTH OF EACH MRCB                  MM007980
         MR    R6,R6               TOTAL MRCB LENGTH                    MM007990
         LA    R7,AHCTLGTH(,R7)    CALCULATE AHCT LENGTH                MM008000
         LA    R7,CBPRLGTH(,R7)    ADD AHCT PREFIX SIZE                 MM008010
         ST    R7,AHCTSIZE         SAVE THIS CALCULATION                MM008020
         A     R7,DYNACORE         ADD ADCT AND APCE STORAGE            MM008030
         ST    R7,DYNACORE         SAVE NEW TOTAL STORAGE REQUIREMENT   MM008040
         EJECT                                                          MM008050
*********************************************************************** MM008060
*        CALCULATE STORAGE REQUIRED (CONTD.)                          * MM008070
*********************************************************************** MM008080
         SPACE 2                                                        MM008090
CALCEND  DS    0H                  NOW KNOW CORE REQUIRED               MM008100
         L     R0,DYNACORE         PICK UP AREA SIZE                    MM008110
         GETMAIN R,LV=(0)          OBTAIN STORAGE FROM SP(0)            MM008120
         ST    R1,DYNABLOK         SAVE ADDRESS OF STORAGE              MM008130
         L     R4,DYNABLOK         ADDRESS TO CLEAR                     MM008140
         L     R5,DYNACORE         LENGTH TO CLEAR                      MM008150
         SR    R7,R7               PADD TO ZEROES                       MM008160
         MVCL  R4,R6               CLEAR ENTIRE AREA                    MM008170
GETSTORX SUBOUT RESTORE=(R4,R5,R6,R7) RETURN TO CALLER                  MM008180
         TITLE 'MODS INITIALISATION - PCE PROCESSING'                   MM008190
*********************************************************************** MM008200
*        THIS SECTION CALCULATES THE TOTAL STORAGE REQUIRED FOR       * MM008210
*        ADDITIONAL PCES REQUESTED BY INITIALISATION OPTIONS.         * MM008220
*        IF AN ADDITIONAL PCE IS REQUESTED AN ADDITIONAL PARAMETER    * MM008230
*        OF 'PCEWORK(XX)' IS MANDATORY TO ALLOCATE XX BYTES OF        * MM008240
*        STORAGE FOR THE PCE WORK AREA:THIS ROUTINE FINDS ALL SUCH    * MM008250
*        PARAMETERS,STORES THE SIZE OF EACH IN ITS APPROPRIATE        * MM008260
*        RECORD SAVE AREA FIELD RECDATA1 FOR SUBSEQUENT PROCESSING    * MM008270
*        AND KEEPS A RUNNING TOTAL IN THE FIELD 'PCEWRK'.             * MM008280
*********************************************************************** MM008290
         SPACE 2                                                        MM008300
PCESIZE  SUBIN SAVE=(R3,R4,R5,R7) ENTRY                                 MM008310
         USING RECAREA,R3          RECORD AREA ADDRESSABILITY           MM008320
         USING KEYCHAIN,R5         KEYWORD DESCRIPTOR ADDRESSABILITY    MM008330
         USING VERBDESC,R7         VERB DESCRIPTOR ADDRESSABILITY       MM008340
         ICM   R3,7,RECSTART+1     GET START OF RECORD CHAIN            MM008350
         B     *+4+4               SKIP FIRST CHAIN-UP                  MM008360
         SPACE 1                                                        MM008370
PCESIZE1 DS    0H                  EXAMINE EVERY PARAMETER CARD         MM008380
         ICM   R3,7,RECNEXT+1      GET ADDRESS OF NEXT RECORD SAVE AREA MM008390
         BZ    PCESIZEX            EXIT IF NONE                         MM008400
         TM    RECVFND+1,VRB1PWRK  HAS A PCEWORK REQUEST?               MM008410
         BNO   PCESIZE1            NO,TRY NEXT CARD                     MM008420
         ICM   R5,7,RECVERBS+1     PICK UP FIRST KEYWORD DESCRIPTOR     MM008430
         B     *+4+4               SKIP CHAINING FIRST TIME             MM008440
         SPACE 1                                                        MM008450
PCESIZE2 DS    0H                  EXAMINE EVERY KEYWORD                MM008460
         ICM   R5,7,KEYNEXT+1      EXAMINE NEXT KEYWORD DESCRIPTOR      MM008470
         BZ    PCESIZE1            TRY NEXT CARD IF NONE                MM008480
         ICM   R7,7,KEYVERB+1      GET ADDRESS OF PARSING TABLE ENTRY   MM008490
         BZ    PCESIZE2            END IF NONE-SHOULDN'T HAPPEN         MM008500
         TM    VERBFLAG+1,VRB1PWRK IS THIS IT?                          MM008510
         BNO   PCESIZE2            NO,TRY NEXT                          MM008520
         BAL   R4,DLENGTH          GET LENGTH OF DATA                   MM008530
         BALR  R0,0                SUBTRACT ONE FOR END BRACKET         MM008540
         BALR  R0,0                AND ONE FOR EXECUTE                  MM008550
         EX    R0,PACKSIZE         CONVERT REQUEST TO PACKED DECIMAL    MM008560
         CVB   R4,DWORK            AND THEN TO BINARY                   MM008570
         STH   R4,RECDATA1         SAVE RESULT FOR FUTURE USE           MM008580
         A     R4,PCEWRK           ADD TO TOTAL                         MM008590
         ST    R4,PCEWRK           SAVE NEW TOTAL                       MM008600
         B     PCESIZE1            THEN TRY NEXT CARD                   MM008610
         SPACE 1                                                        MM008620
PCESIZEX SUBOUT RESTORE=(R3,R4,R5,R7) RETURN TO CALLER                  MM008630
         DROP  R3,R5,R7            END DATA ADDRESSABILITIES            MM008640
         SPACE 2                                                        MM008650
PACKSIZE PACK  DWORK,0(0,R1)       PACK SIZE NUMBER *EXECUTED*          MM008660
         TITLE 'MODS INITIALISATION - AHCT SETUP'                       MM008670
*********************************************************************** MM008680
*        ROUTINE TO SUB-ALLOCATE THE AHCT AND CHAIN IT TO THE HCT     * MM008690
*********************************************************************** MM008700
         SPACE 3                                                        MM008710
INITAHCT SUBIN SAVE=(R4)           ENTRY                                MM008720
         L     R1,AHCTSIZE         RETRIEVE CALCULATED SIZE             MM008730
         BAL   R4,GETBLOCK         SUB-ALLOCATE THE STORAGE             MM008740
         MVC   CBPRID-CBPRDSCT(L'CBPRID,R1),IDAHCT SET UP IDENT.        MM008750
         ST    R1,AHCTPREF         SAVE FIRST PREFIX ADDRESS            MM008760
         LA    R1,CBPRLGTH(,R1)    SKIP PREFIX TO AHCT                  MM008770
         ST    R1,HCT$AHCT         CHAIN IT TO THE HCT                  MM008780
         LOAD EP=JES2B000          LOAD THE MODS DISPATCHER             MM008790
         ST    R0,HCT$B000         SAVE ITS ADDRESS IN HCT              MM008800
         BAL   R4,ENVIRON          SET AHCT ENVIRONMENT FLAGS           MM008810
         L     R1,HCT$AHCT         PICK UP AHCT AGAIN                   MM008820
         MVI   AHCTX-AHCTDSCT(R1),$$X SET CONDITION COMPARATOR          MM008830
         LA    R1,AHCT1RTN-AHCTDSCT(,R1) SKIP STATIC AREA               MM008840
         USING MRCBDSCT,R1         ESTABLISH TEMP. MRCB ADDRESSABILITY  MM008850
         LA    R4,$MODNO+1         SET NUMBER MRCB'S                    MM008860
         SPACE 1                                                        MM008870
INITMRCB DS    0H                  SET MRCB'S NOT YET LOADED            MM008880
         MVC   MRCBID,IDMRCB       SET UP CONTROL BLOCK IDENTIFIER      MM008890
         MVI   MRCBAV,C'Z'         SHOW ROUTINE NOT AVAILABLE           MM008900
         LA    R1,MRCBLGTH(,R1)    GOT TO NEXT MRCB                     MM008910
         BCT   R4,INITMRCB         FOR $MODNO OF THEM                   MM008920
         DROP  R1                  END MRCB ADDESSABILITY               MM008930
         SPACE 1                                                        MM008940
INITAHCX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MM008950
         TITLE 'MODS INITIALISATION - APCE CREATION'                    MM008960
*********************************************************************** MM008970
*        CREATE CHAIN OF (EMPTY) APCE'S                               * MM008980
*********************************************************************** MM008990
         SPACE 3                                                        MM009000
INITAPCE SUBIN SAVE=(R2,R4,R5,R6,R7)  ENTRY                             MM009010
         ICM   R7,15,APCENUMB      RETRIEVE COUNT OF APCE'S             MM009020
         BZ    INITAPCX            EXIT IF NONE                         MM009030
         LA    R5,APCELGTH         SET LENGTH OF EACH APCE              MM009040
         LA    R5,CBPRLGTH(,R5)    ADD LENGTH OF PREFIX TO APCE         MM009050
         L     R2,AHCTPREF         PICK UP ADDRESS OF AHCT PREFIX       MM009060
         LA    R1,AHCTFPCE-AHCTDSCT+CBPRLGTH(R2) START CHAIN OF APCE'S  MM009070
         SPACE 1                                                        MM009080
APCELOOP DS    0H                  CHAIN APCE'S TOGETHER                MM009090
         LR    R6,R1               SAVE OLD APCE POINTER                MM009100
         LR    R1,R5               SET LENGTH TO SUB-ALLOCATE           MM009110
         BAL   R4,GETBLOCK         SUB-ALLOCATE STORAGE                 MM009120
         BM    INITAPCX            EXIT IF NO MORE CORE                 MM009130
         MVC   CBPRID-CBPRDSCT(L'CBPRID,R1),IDAPCE SET UP IDENT.        MM009140
         ST    R1,CBPRNEXT-CBPRDSCT(,R2) CHAIN THIS PREFIX TO THE LAST  MM009150
         LR    R2,R1               SAVE NEW PREFIX ADDRESS              MM009160
         ST    R2,PREFSAVE         SAVE LATEST PREFIX ADDRESS           MM009170
         LA    R1,CBPRLGTH(,R1)    SKIP APCE PREFIX                     MM009180
         ST    R1,APCENEXT-APCEDSCT(,R6) FORWARD FROM OLD               MM009190
         MVC   APCENAME-APCEDSCT(L'APCENAME,R1),IDAPCE SET APCE NAME    MM009200
         LA    R6,APCEMSA-APCEDSCT(,R1) POINT TO FREE SAVE AREA         MM009210
         ST    R6,APCEAMSA-APCEDSCT(,R1) SAVE POINTER IN APCE           MM009220
         BCT   R7,APCELOOP         AND SO FOR EVERY PCE                 MM009230
         SPACE 1                                                        MM009240
INITAPCX SUBOUT RESTORE=(R2,R4,R5,R6,R7) RETURN TO CALLER               MM009250
         TITLE 'MODS INITIALISATION - ADCT CREATION'                    MM009260
*********************************************************************** MM009270
*        THIS ROUTINE SUB-ALLOCATES AN ADCT FOR EVERY REMOTE          * MM009280
*        WHICH MAY BE SUPPORTED AND FOR LOCAL OPERATIONS.THE DCT'S    * MM009290
*        INITIALISATION OPTIONS ARE SAVED AT THIS TIME.               * MM009300
*********************************************************************** MM009310
         SPACE 3                                                        MM009320
INITADCT SUBIN SAVE=(R2,R3,R4,R5,R6,R7) ENTRY                           MM009330
         LA    R5,ADCTLGTH         SET SIZE OF EACH ADCT                MM009340
         LA    R5,CBPRLGTH(,R5)    ADD ADCT PREFIX LENGTH               MM009350
         LH    R7,$NUMRJE          SET NUMBER = NUMBER REMOTES          MM009360
         LA    R7,1(,R7)           PLUS ONE FOR LOCAL                   MM009370
         LR    R1,R5               SET PARAMETER REGISTER               MM009380
         BAL   R4,GETBLOCK         FOR CORE ALLOCATION                  MM009390
         L     R2,PREFSAVE         GET LAST PREFIX ADDRESS              MM009400
         LA    R4,CBPRLGTH(,R1)    SKIP FIRST ADCT PREFIX               MM009410
         L     R6,HCT$AHCT         PICK UP AHCT ADDRESS                 MM009420
         ST    R4,AHCTADCT-AHCTDSCT(,R6) SAVE START OF ADCT CHAIN       MM009430
         B     *+4+2+4+4           SKIP PART OF LOOP FIRST TIME         MM009440
         SPACE 2                                                        MM009450
ADCTLOOP DS    0H                  INITIALISE BASIC ADCT'S              MM009460
         LR    R1,R5               SET SIZE REQUIRED                    MM009470
         BAL   R4,GETBLOCK         FOR STORAGE ALLOCATION               MM009480
         BM    INITADCX            EXIT IF NONE (ERROR)                 MM009490
         MVC   CBPRID-CBPRDSCT(L'CBPRID,R1),IDADCT SET UP IDENT.        MM009500
         ST    R1,CBPRNEXT-CBPRDSCT(,R2) CHAIN THIS PREFIX TO THE LAST  MM009510
         LR    R2,R1               SAVE THIS PREFIX ADDRESS             MM009520
         ST    R2,PREFSAVE                                  PERMANENTLY MM009530
         LA    R6,CBPRLGTH(,R1)    SKIP ADCT PREFIX                     MM009540
         USING ADCTDSCT,R6         CALL IT AN ADCT                      MM009550
         MVC   ADCTRID,RIDMASK     PREPARE TO CONSTRUCT NAME            MM009560
         ED    ADCTRID,REMOTENO    SET UP REMOTE NUMBER                 MM009570
         MVC   ADCTRID(2),RIDR0    SET UP PREFIX (R-ZERO)               MM009580
         AP    REMOTENO,ONE        INCREASE FOR NEXT REMOTE             MM009590
         BCT   R7,ADCTLOOP         AND SO FOR EVERY ADCT                MM009600
         SPACE 1                                                        MM009610
         L     R2,HCT$AHCT         PICK UP ADDRESS OF AHCT              MM009620
         USING AHCTDSCT,R2         ESTABLISH AHCT ADDRESSABILITY        MM009630
         L     R6,AHCTADCT         GET LOCAL ADCT (FIRST ADCT)          MM009640
         MVC   ADCTRID,RIDLOCAL    MOVE IN SPECIAL NAME                 MM009650
         EJECT                                                          MM009660
*********************************************************************** MM009670
*        ADCT CREATION (CONTINUED).                                   * MM009680
*        EXAMINE EVERY DCT AND SET ADCT FLAGS AS APPROPRIATE.         * MM009690
*********************************************************************** MM009700
         SPACE 3                                                        MM009710
         LA    R3,$DCTPOOL-(DCTCHAIN-DCTDSECT)  FAKE FIRST DCT          MM009720
         SPACE 1                                                     R4 MM009730
         USING DCTDSECT,R3         ESTABLISH DCT ADDRESSABILITY         MM009740
         SPACE 1                                                     R4 MM009750
NPLDSCN1 ICM   R3,7,DCTCHAIN+1     GET ADDRESS OF NEXT DCT              MM009760
         BZ    INITADCX            AT END OF CHAIN RETURN TO CALLER     MM009770
         TM    DCTDEVTP,DCTRPP     IS IT THE RIGHT SORT OF DCT?         MM009780
         BZ    NPLDSCN1            NO,TRY NEXT                          MM009790
         SPACE 1                                                        MM009800
         SR    R1,R1               CLEAR PARAMETER REGISTER             MM009810
         TM    DCTDEVTP,DCTRJE     IS IT A REMOTE DEVICE?               MM009820
         BNO   *+4+4               NO,SET ROUTE=ZERO                    MM009830
         IC    R1,DCTROUTE         YES,PICK UP REMOTE NUMBER            MM009840
         BAL   R4,FINDADCT         GO LOCATE ITS ADCT                   MM009850
         LR    R6,R1               AND ADDRESS ITS COMPONENTS           MM009860
         TM    DCTDEVTP,DCTPUN     IS IT A PUNCH?                       MM009870
         BO    INITAPUN            YES                                  MM009880
         TM    DCTDEVTP,DCTPRT     IS IT A PRINTER?                     MM009890
         BO    INITAPRT            YES                                  MM009900
         TM    DCTDEVTP,DCTRDR     OR IS IT A READER?                   MM009910
         BNO   NPLDSCN1            NO,UNKNOWN.IGNORE IT                 MM009920
         SPACE 1                                                        MM009930
INITARDR DS    0H                  PROCESS A READER DCT                 MM009940
         B     NPLDSCN1            RETURN FOR NEXT DCT                  MM009950
         SPACE 1                                                        MM009960
INITAPUN DS    0H                  PROCESS A PUNCH DCT                  MM009970
         B     NPLDSCN1            RETURN FOR NEXT DCT                  MM009980
         SPACE 1                                                        MM009990
INITAPRT DS    0H                  PROCESS A PRINTER DCT                MM010000
         TM    DCTSTAT,DCTDRAIN    IS THE PRINTER DRAINED?              MM010010
         BNO   *+4+4               NO                                   MM010020
         OI    ADCTINIT,ADCIDPRT   YES,FLAG THAT FACT                   MM010030
         B     NPLDSCN1            RETURN FOR NEXT DCT                  MM010040
         SPACE 2                                                        MM010050
         DROP  R2,R3,R6            END AHCT,DCT,ADCT ADDRESSABILITY     MM010060
INITADCX SUBOUT RESTORE=(R2,R3,R4,R5,R6,R7) RETURN TO CALLER            MM010070
         TITLE 'MODS INITIALISATION - INVOKE KEYWORD PROCESSING RTNS'   MM010080
*********************************************************************** MM010090
*        INVOKE KEYWORD PROCESSING ROUTINES                           * MM010100
*********************************************************************** MM010110
         SPACE 1                                                        MM010120
*        AT THIS STAGE, ALL KEYWORD CHAINS FOR ALL RECOGNISABLE CONTROL MM010130
*         CARDS HAVE BEEN VALIDATED, AND THE ADDRESS OF THE ASSOCIATED  MM010140
*         PROCESSING ROUTINE ( WHERE RELEVANT ) HAS BEEN SET IN THE     MM010150
*         KEYWORD DSECRIPTOR.  ( IF THERE IS NO SUCH ADDRESS THEN       MM010160
*         EITHER THE KEYWORD WAS UNRECOGNISABLE, OR WAS IGNORES BECAUSE MM010170
*         IT WAS MUTUALLY EXCLUSIVE WITH AN EARLIER KEYWORD, OR THE     MM010180
*         CORRESPONDING VERB DESCRIPTOR ELEMENT DID NOT CONTAIN A       MM010190
*         ROUTINE ADDRESS.  WHATEVER THE CAUSE, DO NOT WORRY ABOUT IT.  MM010200
         SPACE 1                                                        MM010210
*        REGISTER USAGE :-                                              MM010220
*         R1  - ADDRESS OF PARAMETER LIST FOR PROCESSING ROUTINE        MM010230
*         R3  - RECORD SAVE AREA ADDRESS                                MM010240
*         R5  - KEYWORD DESCRIPTOR ADDRESS                              MM010250
*         R14 - RETURN ADDRESS                                          MM010260
*         R15 - PROCESSING ROUTINE ADDRESS                              MM010270
         SPACE 1                                                        MM010280
         USING RECAREA,R3          ESTABLISH RECORD AREA ADDR'Y         MM010290
         USING KEYCHAIN,R5         ESTABLISH KEYWORD DESCRIPTOR ADDR'Y  MM010300
PROCESCC SUBIN SAVE=(R3,R4,R5,R6,R7) PRESERVE REGISTERS                 MM010310
         L     R3,RECSTART         GET 1ST RECORD SAVE AREA             MM010320
         B     *+8                 BYPASS FORWARD CHAINING              MM010330
PROCESC1 L     R3,RECNEXT          GET ADDR OF NEXT RECORD SAVE AREA    MM010340
         LTRR  R3                  PURIFY AND TEST FOR END OF CHAIN     MM010350
         BZ    PROCESCX            EXIT IF END OF CHAIN                 MM010360
         NC    RECVTABL,RECVTABL   DOES VERB TABLE ADDR EXIST           MM010370
         BZ    PROCESC1            INOT: UNKNOWN OR CONTINUATION:IGNORE MM010380
         L     R5,RECVERBS         GET ADDR OF 1ST KEYWORD FOR THIS CAR MM010390
         B     *+8                 BYPASS FORWARD CHAZINING             MM010400
PROCESC2 L     R5,KEYNEXT          GET ADDR OF NEXT KEYWORD DESCRIPTOR  MM010410
         LTRR  R5,R5               PURITY & TEST FOR NED OF CHAIN       MM010420
         BZ    PROCESC1            IF END OF CHAIN GO GET NEXT RECORD A MM010430
         NC    KEYROUTN,KEYROUTN   IS THERE A PROCESSING ROUTINE        MM010440
         BZ    PROCESC2            IF NOT, GO GET NEXT KEYWORD          MM010450
         L     R15,KEYROUTN        GET ADDRESS OF ROUTINE               MM010460
         L     R7,KEYVERB          GET ADDRESS OF VERB DESCRIPTOR       MM010470
         BAL   R4,DLENGTH          GET KEYWORD DATA INFORMATION         MM010480
         STCM  R0,1,DWORK          SAVE DATA LENGTH                     MM010490
         STCM  R1,7,DWORK+1        SAVE DATA ADDRESS                    MM010500
         L     R6,DWORK            PICK UP COMBINED INFORMATION         MM010510
         TITLE 'MODS INITIALISATION - KEYWORD PROCESSING PROLOGUE'      MM010520
*********************************************************************** MM010530
*        KEYWORD PROCESSING ROUTINES - CONVENTIONS                    * MM010540
*********************************************************************** MM010550
         SPACE 1                                                        MM010560
*        UPON RECEIVING CONTROL IN A ROUTINE SPECIFIED IN A VERB        MM010570
*         DESCRIPTOR ELEMENT, THE REGISTER CONTENTS ARE :-              MM010580
*        R1    - ADDRESS OF THE PARAMETER LIST DEFINED IN THIS PROGRAM  MM010590
*        R8    - STANDARD JES2 BASE1                                    MM010600
*        R13   - SAVE AREA                                              MM010610
*        R14   - RETURN ADDRESS                                         MM010620
*        R15   - ROUTINE ENTRY POINT                                    MM010630
         SPACE 2                                                        MM010640
         ST    R3,ARECAREA         SET ADDRESS OF RECORD AREA           MM010650
         STM   R5,R7,AKEYCHAN      SET KEYWORD,DATA AND VERB ADDRESS    MM010660
         LA    R1,PARAMS           POINT TO PARAMETER LIST              MM010670
         BALR  R14,R15             PERFORM PROCESSING ROUTINE           MM010680
         LTR   R15,R15             TEST RETURN                          MM010690
         BZ    PROCESC2            GO GET NEXT KEYWORD DESCRIPTOR       MM010700
         L     R1,AMESSAGE         ELSE PICK UP ERROR MESSAGE           MM010710
         $$WTO (R1)                WARN OPERATOR                        MM010715
         BAL   R4,FIELDERR         GO TO ERROR ROUTINE                  MM010720
         B     PROCESC2            THEN TRY NEXT ROUTINE                MM010730
         SPACE 2                                                        MM010740
PROCESCX SUBOUT RESTORE=R4         RESTORE AND RETURN                   MM010750
         SPACE 1                                                        MM010760
         DROP  R3,R5               DROP ADDRESSABILITY                  MM010770
         TITLE 'MODS INITIALISATION - ENVIRONMENT DETERMINATION'        MM010780
*********************************************************************** MM010790
*        THIS ROUTINE DETERMINES WHETHER THE SYSTEM IS RUNNING        * MM010800
*        AS A VIRTUAL MACHINE UNDER VM/370 OR NOT,AND IF SO           * MM010810
*        FLAGS THE AHCT FLAG FIELD.                                   * MM010820
*********************************************************************** MM010830
         SPACE 2                                                        MM010840
ENVIRON  SUBIN SAVE=(R4)           SUBROUTINE ENTRY                     MM010850
         L     R4,HCT$AHCT         PICK UP AHCT ADDRESS                 MM010860
         STIDP CPUID               STORE CPU IDENTIFICATION             MM010870
         CLI   CPUID,X'FF'         IS IT A VIRTUAL MACHINE?             MM010880
         BNE   *+4+4               NO,DON'T FLAG AHCT                   MM010890
         OI    AHCTFLAG-AHCTDSCT(R4),AHCTVM YES,SET AHCT FLAG           MM010900
ENVIRONX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MM010910
         TITLE 'MODS INITIALISATION - CARD ERROR ROUTINES'              MM010920
*********************************************************************** MM010930
*        TELL OF CARD IN ERROR                                        * MM010940
*********************************************************************** MM010950
         SPACE 1                                                        MM010960
*        ON INPUT :-                                                    MM010970
*         R1  - ADDRESS OF ERROR MESSAGE                                MM010980
*         R3  - ADDRESS OF APPROPRIATE RECORD SAVE AREA                 MM010990
         SPACE 1                                                        MM011000
CARDERR  SUBIN SAVE=(R3,R4,R5,R7)  PRESERVE RETURN ADDRESS              MM011010
         USING RECAREA,R3          ESTABLISH INPUT ADDRESSABILITY       MM011020
         LR    R7,R1               SAVE MESSAGE ADDRESS                 MM011030
         $$WTO CARDWTO             WARN OPERATOR                        MM011040
         TM    PRINTSW,DDPRES+DDOPEN+DDINT ARE WE REPORTING?            MM011050
         BNO   CARDERRX            NO,SO LEAVE IT AT THAT               MM011060
         L     R5,NEXTLINE         PICK UP PRINT BUFFER                 MM011070
         USING PRNTLINE,R5         MAP IT                               MM011080
         MVC   PRNTCARD,RECREC     MOVE IN CARD IMAGE                   MM011090
         MVC   PRNTERR,0(R7)       MOVE IN ERROR MESSAGE                MM011100
         MVC   PRNTCNO,RIDMASK     MOVE IN EDIT MASK                    MM011110
         ED    PRNTCNO,RECNUMBR    SHOW CARD NUMBER                     MM011120
         BAL   R4,PRINT            OUTPUT MESSAGE                       MM011130
         SPACE 1                                                        MM011140
         DROP  R3,R5               END RECORD,PRINT ADDRESSABILITY      MM011150
CARDERRX SUBOUT RESTORE=(R3,R4,R5,R7) RESTORE AND RETURN TO CALLER      MM011160
         EJECT                                                          MM011170
*********************************************************************** MM011180
*        TELL OF KEYWORD IN ERROR                                     * MM011190
*********************************************************************** MM011200
         SPACE 1                                                        MM011210
*        ON ENTRY :-                                                    MM011220
*         R1  - ADDRESS OF ERROR MESSAGE                                MM011230
*         R3  - ADDRESS OF RECORD SAVE AREA                             MM011240
*         R5  - ADDRESS OF KEYWORD DESCRIPTOR ( FROM 'SCAN' )           MM011250
         SPACE 1                                                        MM011260
FIELDERR SUBIN SAVE=(R3,R4,R5,R6,R7) PRESERVE RETURN ADDRESS            MM011270
         USING RECAREA,R3          ESTABLISH INPUT ADDRESSABILITY       MM011280
         LR    R6,R5               PUT KEYWORD ADDRESS IN R6            MM011290
         USING KEYCHAIN,R6         ESTABLISH KEYWORD ADDRESSABILITY     MM011300
         SPACE 1                                                        MM011310
         LR    R7,R1               SAVE MESSAGE ADDRESS                 MM011320
         $$WTO CARDWTO             WARN OPERATOR                        MM011330
         TM    PRINTSW,DDPRES+DDOPEN+DDINT ARE WE REPORTING?            MM011340
         BNO   FIELDERX            NO,SO LEAVE IT AT THAT               MM011350
         L     R5,NEXTLINE         PICK UP PRINT BUFFER                 MM011360
         USING PRNTLINE,R5         MAP IT                               MM011370
         MVC   PRNTCARD,RECREC     MOVE IN CARD IMAGE                   MM011380
         MVC   PRNTERR,0(R7)       MOVE IN ERROR MESSAGE                MM011390
         MVC   PRNTCNO,RIDMASK     MOVE IN EDIT MASK                    MM011400
         ED    PRNTCNO,RECNUMBR    SHOW CARD NUMBER                     MM011410
         SR    R2,R2               CLEAR WORK REGISTER                  MM011420
         ICM   R2,1,KEYLNGTH       PICK UP LENGTH OF KEYWORD            MM011430
         BZ    *+4+4               IF ZERO,LEAVE IT (=1)                MM011440
         BALR  R2,0                SUBTRACT ONE FOR EXECUTE             MM011450
         CH    R2,=H'7'            IS LENGTH TOO GREAT?                 MM011460
         BNH   *+4+4               NO,SKIP SHORTENING                   MM011470
         LA    R2,7                YES,SET MAXIMUM WE CAN PRINT         MM011480
         L     R1,KEYLCTN          GET KEYWORD LOCATION                 MM011490
         EX    R2,FIELDERI         EXECUTE MOVE INSTRUCTION             MM011500
         BAL   R4,PRINT            OUTPUT MESSAGE                       MM011510
         SPACE 1                                                        MM011520
FIELDERX SUBOUT RESTORE=(R3,R4,R5,R6,R7) RESTORE AND RETURN             MM011530
         SPACE 2                                                        MM011540
FIELDERI MVC   PRNTKEY(0),0(R1)    PRINT INVALID KEYWORD *EXECUTED*     MM011550
         DROP  R3,R5,R6            END LOCAL ADDRESSABILITY             MM011560
         TITLE 'MODS INITIALISATION - DATA LENGTH ROUTINE'              MM011570
*********************************************************************** MM011580
*        THIS SUB-ROUTINE FINDS THE POSITION AND LENGTH OF            * MM011590
*        KEYWORD DATA ELEMENTS.                                       * MM011600
*        ON ENTRY:                                                    * MM011610
*              R3  -->             RECORD SAVE AREA                   * MM011620
*              R5  -->             KEYWORD DESCRIPTOR                 * MM011630
*        ON RETURN:                                                   * MM011640
*              R0   =              LENGTH OF DATA                     * MM011650
*              R1  -->             POSITION OF DATA                   * MM011660
*********************************************************************** MM011670
         SPACE 3                                                        MM011680
DLENGTH  SUBIN SAVE=(R2,R4)        SUB-ROUTINE ENTRY                    MM011690
         USING RECAREA,R3          ESTABLISH RECORD ADDRESSABILITY      MM011700
         USING KEYCHAIN,R5         ESTABLISH KEYWORD ADDRESSABILITY     MM011710
         L     R1,KEYVERB          GET ADDRESS OF VERB DESCRIPTOR       MM011720
         SR    R2,R2               CLEAR WORK REGISTER                  MM011730
         IC    R4,KEYLNGTH         PICK UP LENGTH OF KEYWORD            MM011740
         IC    R2,VERBLEN-VERBDESC(R1) PICK UP VERB LENGTH              MM011750
         LA    R2,1(,R2)           ADD ONE TO CORRECT IT                MM011760
         SR    R4,R2               GET OPERAND LENGTH                   MM011770
         LR    R0,R4               SAVE IT                              MM011780
         L     R1,KEYLCTN          GET ADDRESS OF KEYWORD               MM011790
         LA    R1,0(R2,R1)         POINT AT DATA ELEMENT                MM011800
DLENGTHX SUBOUT RESTORE=(R2,R4)    RETURN TO CALLER                     MM011810
         SPACE 2                                                        MM011820
         DROP  R3,R5               END RECORD,KEYWORD ADDRESSABILITY    MM011830
         TITLE 'MODS INITIALISATION - TERMINATION ROUTINES'             MM011840
*********************************************************************** MM011850
*        TERMINAL ERROR ROUTINE                                       * MM011860
*********************************************************************** MM011870
         SPACE 1                                                        MM011880
TERMERR  SUBIN ,                   ENTER ROUTINE                        MM011890
         $$WTO (R1)                ISSUE ERROR DESCRIPTION              MM011900
         $$WTO TERMWTO             TELL OPERATOR WE GAVE UP             MM011910
         SUBOUT RETURN=JOBEND      TERMINATE PROGRAM                    MM011920
         SPACE 5                                                        MM011930
*******************************************************************     MM011940
*        JOB TERMINATION ROUTINE -                                *     MM011950
*         CLOSE ANY OPEN DATA SETS,                               *     MM011960
*         SET A COMPLETION CODE IN REGISTER 15, AND RETURN.       *     MM011970
*******************************************************************     MM011980
         SPACE 1                                                        MM011990
JOBEND   EQU   *                                                        MM012000
         LA    R3,MAXDS            ESTABLISH LOOP                       MM012010
         LA    R2,DCBTABLE         POINT AT START OF DCB TABLE          MM012020
         BAL   R4,CLOSE            CLOSE DATA SET IF OPEN               MM012030
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY            MM012040
         BCT   R3,*-8              CLOSE NEXT DATA SET                  MM012050
         FREEMAIN R,SP=1           DELETE WORKING STORAGE               MM012060
         PGMOUT RC=COMPCODE        SET COND CODE AND RETURN             MM012070
         TITLE 'MODS INITIALISATION - STORAGE MANAGEMENT'               MM012080
*********************************************************************** MM012090
*        STORAGE SUB-ALLOCATION ROUTINE.                              * MM012100
*                                                                     * MM012110
*        ON ENTRY                  R1  =  STORAGE REQUIRED            * MM012120
*        ON EXIT                   R1  =  ADDRESS OF STORAGE          * MM012130
*********************************************************************** MM012140
         SPACE 3                                                        MM012150
GETBLOCK SUBIN SAVE=(R4)           ENTRY                                MM012160
         L     R4,DYNACORE         GET STORAGE REMAINING                MM012170
         SR    R4,R1               SUBTRACT THIS BIT                    MM012180
         BM    GETBLOKX            EXIT IF NOT AVAILABLE                MM012190
         ST    R4,DYNACORE         SAVE NEW LOW FIGURE                  MM012200
         L     R4,DYNABLOK         GET ADDRESS OF STORAGE               MM012210
         LA    R4,0(R1,R4)         STEP OVER NEW ALLOCATION             MM012220
         L     R1,DYNABLOK         PICK UP START ADREES                 MM012230
         ST    R4,DYNABLOK         SAVE NEW START ADDRESS               MM012240
GETBLOKX SUBOUT RESTORE=(R4)       RETURN TO CALLER                     MM012250
         TITLE 'MODS INITIALISATION - ADCT LOCATE SUBROUTINE'           MM012260
*********************************************************************** MM012270
*        SUB-ROUTINE TO LOCATE THE ADCT FOR A DESIRED REMOTE          * MM012280
*        NUMBER.                                                      * MM012290
*        ON ENTRY                  R1  =  REMOTE NUMBER (LOCAL = ZERO)* MM012300
*        ON EXIT                   R1  =  ADDRESS OF ITS ADCT         * MM012310
*********************************************************************** MM012320
         SPACE 3                                                        MM012330
FINDADCT SUBIN SAVE=(R4,R6,R7)     ENTRY                                MM012340
         LA    R7,ADCTLGTH+CBPRLGTH SET LENGTH OF EACH ADCT             MM012350
         LR    R6,R1               GET NUMBER OF ADCT REQUIRED          MM012360
         MR    R6,R6               CALCULATE OFFSET IN ADCT LIST        MM012370
         L     R1,HCT$AHCT         GET AHCT ADDRESS                     MM012380
         L     R6,AHCTADCT-AHCTDSCT(R1) GET START OF ADCT LIST          MM012390
         LA    R1,0(R6,R7)         GET ADDRESS OF REQUIRED ADCT         MM012400
FINDADCX SUBOUT RESTORE=(R4,R6,R7) RETURN TO CALLER                     MM012410
         TITLE 'I/O SUB-ROUTINES'                                       MM012420
*******************************************************************     MM012430
*        WRITE SUBROUTINE FOR SYSPRINT                            *     MM012440
*******************************************************************     MM012450
         SPACE 1                                                        MM012460
PRINT    SUBIN ,                                                        MM012470
         TM    PRINTSW,DDINT+DDPRES+DDOPEN   TEST IF NEED TO WRITE      MM012480
         BNO   PRINTX              BRANCH IF NO                         MM012490
         PUT   SYSPRINT            WRITE RECORD TO SYSPRINT D/S         MM012500
         LR    R5,R1               SAVE BUFFER ADDRESS                  MM012510
         ST    R5,NEXTLINE         SAVE BUFFER ADDRESS                  MM012520
         MVI   0(R5),SPCE1AFT      DEFAULT SINGLE SPACING               MM012530
         MVI   1(R5),BLANK         MOVE BLANK TO START OF LINE          MM012540
         MVC   2(131,R5),1(R5)      AND PROPAGANTE THROUGH              MM012550
PRINTX   SUBOUT ,                  RETURN TO CALLER                     MM012560
         SPACE 2                                                        MM012570
*******************************************************************     MM012580
*        READ SUBROUTINE FOR SYSIN                                *     MM012590
*******************************************************************     MM012600
         SPACE 1                                                        MM012610
*        ON EXIT :_                                                     MM012620
*         R3  - ADDRESS OF RECORD SAVE AREA                             MM012630
         SPACE 1                                                        MM012640
RIN      SUBIN SAVE=(R5,R6)        SUB-ROUTINE ENTRY                    MM012650
         GET   SYSIN               READ RECORD FROM SYSIN D/S           MM012660
         LR    R6,R1               SAVE RECORD ADDRESS                  MM012670
         LA    R1,RECLGTH          SET LENGTH OF CORE REQUIRED          MM012680
         GETMAIN R,LV=(1),SP=1     GET CORE TO SAVE RECORD              MM012690
         XC    0(RECLGTH,R1),0(R1) SET CORE TO LOW VALUES               MM012700
         USING RECAREA,R5          ESTABLISH ADDRESSABILIY FOR AREA     MM012710
         LR    R5,R1               SET ELEMENT BASE ADDRESS             MM012720
         MVC   RECREC,0(R6)        PRESERVE RECORD IMAGE                MM012730
         L     R1,RECEND           GET ADDRESS OF LAST RECORD           MM012740
         ST    R1,RECPREV          POINT THIS ELEMENT AT LAST           MM012750
         ST    R5,RECNEXT-RECAREA(,R1) POINT LAST AT THIS ONE           MM012760
         ST    R5,RECEND           PRESERVE THIS AS LAST ADDRESS        MM012770
         LR    R3,R5               POINT TO RECORD AREA                 MM012780
         AP    CNTSYSIN,ONE        INCREMENT RECORD COUNTER             MM012790
         ZAP   RECNUMBR,CNTSYSIN   SHOW CARD NUMBER                     MM012800
         SUBOUT RESTORE=(R5,R6)    RETURN TO CALLER                     MM012810
         EJECT                                                          MM012820
*******************************************************************     MM012830
*        SUPPLY DEFAULT RECORD LENGTH AND/OR BLOCK SIZE           *     MM012840
*         IF NOT CODED.                                           *     MM012850
*******************************************************************     MM012860
         SPACE 1                                                        MM012870
BLKSZRTN SUBIN ,                   SUPPLY DEFAULT LRECL AND/OR BLKS     MM012880
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         MM012890
         CLC   DCBLRECL,ZEROWORD   TEST IF LRECL SUPPLIED               MM012900
         BNE   *+8                 BYPASS DEFAULT IF YES                MM012910
         MVI   DCBLRECL+1,80       FORCE LRECL TO 80                    MM012920
         CLC   DCBBLKSI,ZEROWORD   TEST IF BLKSIZE SUPPLIED             MM012930
         BNE   0(R14)              RETURN TO OPEN IF YES                MM012940
         MVC   DCBBLKSI,DCBLRECL   FORCE SINGLE BLOCKING                MM012950
         DROP  R1                  DROP DCB ADDRESSABILITY              MM012960
         SUBOUT RETURN=(R14)       RETURN TO OPEN ROUTINES              MM012970
         SPACE 2                                                        MM012980
*******************************************************************     MM012990
*        TEST IF A DD STATEMENT IS PRESENT BEFORE OPEN            *     MM013000
*******************************************************************     MM013010
         SPACE 1                                                        MM013020
TESTIOT  SUBIN ,                   TEST TASK INPUT/OUTPUT TABLE         MM013030
         TESTIOT DDNAME=4(R2)      TEST IF DDNAME FOUND IN TIOT         MM013040
         B     *+4(R15)            TEST CONDITION CODE                  MM013050
         OI    0(R2),DDPRES        TELL THAT DD STATEMENT SUPPLIED      MM013060
         SUBOUT ,                  RETURN TO CALLER                     MM013070
         EJECT                                                          MM013080
*******************************************************************     MM013090
*        OPEN ROUTINE                                             *     MM013100
*******************************************************************     MM013110
         SPACE 1                                                        MM013120
OPEN     SUBIN SAVE=(R3)           OPEN DATA SET                        MM013130
         TM    0(R2),DDINT+DDPRES  TEST IF DD INTERESTING AND           MM013140
         BNO   OPENX               BRANCH IF NO    / PRESENT.           MM013150
         L     R3,0(R2)            GET DCB ADDRESS                      MM013160
         CLC   12(8,R2),=C'INPUT   ' TEST FOR INPUT D/S                 MM013170
         BE    OPENZ               BRANCH IF INPUT D/S                  MM013180
         OPEN  ((R3),(OUTPUT))     OPEN OUTPUT DATA SET                 MM013190
         B     OPENY               GO SET SWITCH                        MM013200
OPENZ    OPEN  ((R3),(INPUT))      OPEN INPUT DATA SET                  MM013210
OPENY    OI    0(R2),DDOPEN        INDICATE DATA SET OPEN               MM013220
OPENX    SUBOUT RESTORE=(R3)       RETURN TO CALLER                     MM013230
         SPACE 3                                                        MM013240
*******************************************************************     MM013250
*        CLOSE ROUTINE                                            *     MM013260
*******************************************************************     MM013270
         SPACE 1                                                        MM013280
CLOSE    SUBIN SAVE=(R3)           CLOSE DATA SET                       MM013290
         TM    0(R2),DDOPEN        TEST IF DATA SET OPEN                MM013300
         BZ    CLOSEX              EXIT IF NOT                          MM013310
         L     R3,0(R2)            GET DCB ADDRESS                      MM013320
         CLOSE ((R3))              CLOSE DATA SET                       MM013330
         NI    0(R2),FF-DDOPEN     SET OFF 'OPEN' SWITCH                MM013340
         FREEPOOL (R3)             FREE BUFFERS                         MM013350
CLOSEX   SUBOUT RESTORE=(R3)       RETURN TO CALLER                     MM013360
         TITLE 'DCB''S AND I/O CONTROL TABLES'                          MM013370
*******************************************************************     MM013380
*        DCB'S TABLE                                              *     MM013390
*******************************************************************     MM013400
         SPACE 1                                                        MM013410
DCBTABLE DS    0F                                                       MM013420
PRINTSW  DC    X'00',AL3(SYSPRINT),CL8'MODPRINT',CL8'OUTPUT'            MM013430
SYSINSW  DC    X'00',AL3(SYSIN),CL8'MODPARMS',CL8'INPUT'                MM013440
         SPACE 1                                                        MM013450
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE                     MM013460
DCBNTRY  EQU   20                  LENGTH OF ONE TABLE ELEMENT          MM013470
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUN NUMBER OF DCB'S              MM013480
         SPACE 1                                                        MM013490
DDINT    EQU   16                  DD INTEREST                          MM013500
DDPRES   EQU   8                   DD PRESENT                           MM013510
DDOPEN   EQU   1                   DATA SET IS OPEN                     MM013520
         SPACE 2                                                        MM013530
EXITLIST DC    X'85',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION           MM013540
         EJECT                                                          MM013550
*******************************************************************     MM013560
*        DATA CONTROL BLOCKS                                      *     MM013570
*******************************************************************     MM013580
         SPACE 1                                                        MM013590
SYSPRINT DCB   DDNAME=MODPRINT,                                        CMM013600
               DSORG=PS,                                               CMM013610
               EXLST=EXITLIST,                                         CMM013620
               RECFM=FBM,                                              CMM013630
               MACRF=PL,                                               CMM013640
               LRECL=133                                                MM013650
         SPACE 3                                                        MM013660
SYSIN    DCB   DDNAME=MODPARMS,                                        CMM013670
               DSORG=PS,                                               CMM013680
               EXLST=EXITLIST,                                         CMM013690
               RECFM=FB,                                               CMM013700
               MACRF=GL,                                               CMM013710
               EODAD=PARSEND                                            MM013720
         TITLE 'MISCELLANIOUS EQUATES, CONSTANTS AND WORK AREAS'        MM013730
*******************************************************************     MM013740
*        EQUATES                                                  *     MM013750
*******************************************************************     MM013760
         SPACE 1                                                        MM013770
FF       EQU   255                 FOR 'NI' INSTRUCTION                 MM013780
BLANK    EQU   X'40'               BLANK                                MM013790
ON       EQU   X'FF'               ON                                   MM013800
OFF      EQU   X'00'               OFF                                  MM013810
HIGHVAL  EQU   X'FF'               HIGH VALUE                           MM013820
LOWVAL   EQU   X'00'               LOW VALUE                            MM013830
SIGN     EQU   X'F0'               FOR FORCE SIGN TO 'F'                MM013840
         SPACE 1                                                        MM013850
SPCE1AFT EQU   X'09'               SPACE 1 AFTER PRINTING               MM013860
SPCE2AFT EQU   X'11'               SPACE 2 AFTER PRINTING               MM013870
SPCE3AFT EQU   X'19'               SPACE 3 AFTER PRINTING               MM013880
PAGESKIP EQU   X'89'               SKIP TO NEW PAGE                     MM013890
         EJECT                                                          MM013900
*******************************************************************     MM013910
*        CONSTANTS                                                *     MM013920
*******************************************************************     MM013930
         SPACE 1                                                        MM013940
ZEROWORD DC    F'0'                BINARY ZERO FULLWORD FOR TESTS       MM013950
         SPACE 1                                                        MM013960
COND4    DC    H'4'                COMPLETION CODE OF 4                 MM013970
COND8    DC    H'8'                COMPLETION CODE OF 8                 MM013980
COND12   DC    H'12'               COMPLETION CODE OF 12                MM013990
COND16   DC    H'16'               COMPLETION CODE OF 16                MM014000
         SPACE 1                                                        MM014010
ZERO     DC    PL4'0'              PACKED CONSTANT OF ZERO              MM014020
ONE      DC    PL2'1'              PACKED CONSTANT OF ONE               MM014030
         SPACE 1                                                        MM014040
APCEXTRA DC    F'50'               NO. EXTRA APCE'S REQUIRED            MM014050
         SPACE 1                                                        MM014060
IDAHCT   DC    CL4'AHCT'           AHCT IDENTIFIER                      MM014070
IDMRCB   DC    CL4'MRCB'           MRCB IDENTIFIER                      MM014080
IDAPCE   DC    CL4'APCE'           APCE IDENTIFIER                      MM014090
IDADCT   DC    CL4'ADCT'           ADCT IDENTIFIER                      MM014100
         EJECT                                                          MM014110
*********************************************************************** MM014120
*        ERROR MESSAGES                                               * MM014130
*********************************************************************** MM014140
         SPACE 3                                                        MM014150
*                                                                       MM014160
*        A)    OPERATOR MESSAGES                                        MM014170
*                                                                       MM014180
         SPACE 1                                                        MM014190
TERMWTO  WTO   '$B001ERR0 INITIALISATION ERROR - CALL TSG',            CMM014200
               ROUTCDE=(2,10),DESC=(1),MF=L                             MM014210
B001ERR1 WTO   '$B001ERR1 NO CONTROL CARD FILE',                       CMM014220
               ROUTCDE=(2,10),DESC=(1),MF=L                             MM014230
B001ERR2 WTO   '$B001ERR2 EMPTY CONTROL CARD FILE',                    CMM014240
               ROUTCDE=(2,10),DESC=(1),MF=L                             MM014250
B001ERR3 WTO   '$B001ERR3 EXPECTED CONTINUATION NOT RECEIVED',         CMM014260
               ROUTCDE=(2,10),DESC=(1),MF=L                             MM014270
CARDWTO  WTO   '$B001ERR4 CONTROL CARD ERROR-CONTINUING',              CMM014280
               ROUTCDE=(2,10),DESC=(1),MF=L                             MM014290
         SPACE 1                                                        MM014300
*                                                                       MM014310
*        B)    REPORT MESSAGES                                          MM014320
*                                                                       MM014330
         SPACE 1                                                        MM014340
B001ERR4 DC    CL30'UNKNOWN CONTROL CARD-IGNORED'                       MM014350
B001ERR5 DC    CL30'UNKNOWN KEYWORD - IGNORED'                          MM014360
B001ERR6 DC    CL30'EXCLUSIVE KEYWORD - IGNORED'                        MM014370
B001ERR7 DC    CL30'REQUIRED KEYWORD ABSENT-IGNORED'                    MM014380
B001ERR8 DC    CL30'DUPLICATE KEYWORDS-FIRST TAKEN'                     MM014390
         EJECT                                                          MM014400
*******************************************************************     MM014410
*        WORK AREAS                                               *     MM014420
*******************************************************************     MM014430
         SPACE 1                                                        MM014440
DWORK    DC    D'0'                DOUBLEWORD GENERAL WORK AREA         MM014450
DECIMAL  DS    D                   WA FOR DECIMAL OPERATIONS            MM014460
COMPCODE DC    H'0'                CONDITION CODE                       MM014470
         SPACE 1                                                        MM014480
PARMLGTH DC    F'0'                LENGTH OF PARM OF EXEC CARD          MM014490
PARMADDR DS    F                   ADDRESS OF PARM INFO'S               MM014500
         SPACE 1                                                        MM014510
PAGECOUN DC    PL2'0'              COUNT OF PAGES                       MM014520
LINECOUN DC    PL2'0'              COUNT OF LINES                       MM014530
MAXLINE  DC    PL2'55'             MAXIMUM NUMBER OF LINES PER PAGE     MM014540
NEXTLINE DC    A(B001ERR4)         ADDRESS OF NEXT PRINT BUFFER         MM014550
         SPACE 1                                                        MM014560
CNTSYSIN DC    PL2'0'                                                   MM014570
CNTUT1   DC    PL2'0'                                                   MM014580
CNTUT3   DC    PL2'0'                                                   MM014590
         SPACE 1                                                        MM014600
REMOTENO DC    PL2'0'              REMOTE NUMBER IN ADCT INITILIALISTN  MM014610
RIDR0    DC    CL2'R0'             ADCT NAME PREFIX                     MM014620
RIDMASK  DC    XL4'40212020'       EDIT MASK FOR REMOTE/CARD NUMBER     MM014630
RIDLOCAL DC    CL4'LOCL'           SPECIAL NAME FOR LOCAL ADCT          MM014640
         SPACE 1                                                        MM014650
VERBS    DC    F'0'                POINTER TO CHAIN OF VERBS            MM014660
RECSTART DC    F'0'                ADDRESS OF 1ST REC SAVE AREA         MM014670
RECEND   DC    A(RECSTART)         ADDRESS OF LAST REC SAVE AREA        MM014680
         SPACE 2                                                        MM014690
CPUID    DC    D'0'                CPU IDENTIFICATION INFORMATION       MM014700
DYNACORE DC    F'0'                TOTAL DYNAMIC STORAGE ALLOCATION     MM014710
DYNABLOK DC    F'0'                ADDRESS OF DYNAMIC STORAGE           MM014720
AHCTPREF DC    F'0'                ADDRESS OF AHCT PREFIX               MM014730
PREFSAVE DC    F'0'                PREFIX ADDRESS SAVE AREA             MM014740
AHCTSIZE DC    F'0'                CALCULATED SIZE OF AHCT              MM014750
APCENUMB DC    F'0'                NUMBER OF APCE'S GENERATED           MM014760
PCENUMB  DC    F'0'                COUNT OF PCE'S IN SYSTEM             MM014770
PCECTR   DC    F'0'                COUNT OF ADDITIONAL PCE REQUESTS     MM014780
PCEWRK   DC    F'0'                TOTAL SIZE OF WORK AREAS REQUIRED    MM014790
         EJECT                                                          MM014800
*********************************************************************** MM014810
*        VERB PARSING CONTROL TABLES                                  * MM014820
*********************************************************************** MM014830
         SPACE 1                                                        MM014840
*        ABBREVIATED TABLE TO DETERMINE CONTROL CARD TYPE               MM014850
         SPACE 1                                                        MM014860
         CNOP  0,4                 ENSURE TABLE ALIGNMENT               MM014870
CCTABLE  EQU   *                   CONTROL CARD IDENTIFYING TABLE       MM014880
         VERB  'DCT=',VRB0DCT,EXCL=(VRB0EXIT),TABLE=ADCTTAB             MM014890
         VERB  'EXIT=',VRB0EXIT,EXCL=(VRB0DCT),TABLE=AXITTAB            MM014900
CCTABLG  EQU   *-CCTABLE           LENGTH OF TABLE                      MM014910
CCTABNO  EQU   CCTABLG/VERBLGTH    NUMBER OF ENTRIES IN TABLE           MM014920
ACCTAB   DC    AL1(CCTABNO),AL3(CCTABLE) TABLE CONTROL DATA             MM014930
         EJECT                                                          MM014940
*********************************************************************** MM014950
*        VERB PARSING CONTROL TABLES ( CONT'D )                       * MM014960
*********************************************************************** MM014970
         SPACE 1                                                        MM014980
*        TABLE OF VERB DESCRIPTORS FOR DCT CONTROL CARDS                MM014990
         SPACE 1                                                        MM015000
DCTTABLE EQU   *                   START OF DCT VERB TABLE              MM015010
         VERB  'DCT=',VRB0DCT,EXCL=VRB0EXIT,RTN=JES2B014                MM015020
         VERB  'CLASSO=YES',VRB0CLSO                                    MM015030
         VERB  'ALLCOMM',VRB0ALLC                                       MM015040
         VERB  'NOHOLD=(',VRB0NHLD                                      MM015050
         VERB  'REROUTE=',VRB0RERO                                      MM015060
         VERB  'LOGONQ',VRB1DMSG                                        MM015070
         VERB  'NOHOLDRD',VRB1NHRD                                      MM015071
         VERB  'NODRYNPR',VRB1NDPR                                      MM015072
         VERB  'NOHOLDOUT',VRB1PNHD                                     MM015080
         VERB  'NOTVR=(',VRB1NVR                                        MM015090
         VERB  'NOD100CP',VRB1D100                                      MM015091
DCTTABLG EQU   *-DCTTABLE          LENGTH OF TABLE                      MM015100
DCTTABNO EQU   DCTTABLG/VERBLGTH   NUMBER OF ENTRIES IN THE TABLE       MM015110
ADCTTAB  DC    AL1(DCTTABNO),AL3(DCTTABLE) TABLE CONTROL DATA           MM015120
         EJECT                                                          MM015130
*********************************************************************** MM015140
*        VERB PARSING CONTROL TABLES ( CONT'D )                       * MM015150
*********************************************************************** MM015160
         SPACE 1                                                        MM015170
*        TABLE OF VERB DESCRIPTORS FOR EXIT CONTROL CARDS               MM015180
         SPACE 1                                                        MM015190
XITTABLE EQU  *                    START OF EXIT VERB TABLE             MM015200
         VERB  'EXIT=',VRB0EXIT,EXCL=VRB0DCT,RTN=JES2B004               MM015210
         VERB  'SLOT(',VRB0SLOT,INCL=VRB0NOLD,EXCL=(VRB0INIT,VRB0PCE)   MM015220
         VERB  'PCE(',VRB0PCE,INCL=(VRB0INIT,VRB1PWRK),                *MM015230
               EXCL=(VRB0NOLD,VRB0SLOT),COUNTER=PCECTR                  MM015240
         VERB  'NOLOAD(',VRB0NOLD,EXCL=(VRB0INIT,VRB0PCE),INCL=VRB0SLOT MM015250
         VERB  'INIT',VRB0INIT,EXCL=(VRB0NOLD,VRB0SLOT)                 MM015260
         VERB  'NOEXEC',VRB1NOEX                                        MM015270
         VERB  'PCEWORK(',VRB1PWRK,INCL=VRB0PCE                         MM015280
         VERB  'FLAG(X)',VRB1FLGX,INCL=(VRB0SLOT,VRB0NOLD)              MM015290
         VERB  'VMONLY',VRB1VM                                          MM015300
XITTABLG EQU   *-XITTABLE          LENGTH OF TABLE                      MM015310
XITTABNO EQU   XITTABLG/VERBLGTH   NUMBER OF ENTRIES IN TABLE           MM015320
AXITTAB  DC    AL1(XITTABNO),AL3(XITTABLE) TABLE CONTROL DATA           MM015330
         TITLE 'MODS INITIALISTAION - PARAMETER LIST FORMAT'            MM015340
*********************************************************************** MM015350
*        PARAMETER LIST FORMAT PASSED TO VERB PROCESSING              * MM015360
*        ROUTINES VIA REGISTER 1.                                     * MM015370
*********************************************************************** MM015380
         SPACE 2                                                        MM015390
PARAMS   DS    0H                  PARAMETER LIST BLOCK                 MM015400
ARECAREA DS    F .                 ADDRESS OF RECORD SAVE AREA          MM015410
AKEYCHAN DS    F .                 ADDRESS OF KEYWORD DESCRIPTOR        MM015420
LVERBDAT DS    0CL1                LENGTH OF VERB DATA PORTION          MM015430
AVERBDAT DS    F .                 ADDRESS OF VERB DATA PORTION         MM015440
AVERBBLK DS    F .                 ADDRESS OF VERB DESCRIPTOR ELEMENT   MM015450
AMESSAGE DS    F .                 ADDRESS FOR AN ERROR MESSAGE         MM015460
         EJECT                                                          MM015470
*******************************************************************     MM015480
*        LITERAL POOL                                             *     MM015490
*******************************************************************     MM015500
         SPACE 1                                                        MM015510
         LTORG                                                          MM015520
         SPACE 3                                                        MM015530
         DROP  R12,R13             END PROGRAM ADDRESSABILITY           MM015540
         AIF   ('&DOC' EQ 'NO').NOEXP                                   MM015550
         TITLE 'JES2B001 - MONSANTO JES2 MACRO DOCUMENTATION'           MM015560
FAKEB001 DS    0H                  ESTABLISH FAKE ADDRESSABILITY        MM015570
         USING *,R9                USING FAKE BASE REGISTER             MM015580
         SPACE 3                                                        MM015590
*********************************************************************** MM015600
*        EXPANSION OF ALL '$MODXXXX' MACROS - DOCUMENTATION           * MM015610
*********************************************************************** MM015620
         SPACE 1                                                        MM015630
*        THE FOLLOWING MACRO EXPANSIONS ARE NOT INTENDED EXECUTABLE.    MM015640
*         THEY ARE INCLUDED FOR DOCUMENTATION PURPOSES.                 MM015650
         SPACE 1                                                        MM015660
*        THE MACROS DESCRIBED/GENERATED ARE :-                          MM015670
*              $CBAL                                                    MM015680
*              $MODMID                                                  MM015690
*              $MODNTRY                                                 MM015700
*              $MODEXIT                                                 MM015710
*              $MODLINK                                                 MM015720
*              $MODXCTL                                                 MM015730
*              $MODRET                                                  MM015740
*              $SUBIN                                                   MM015750
*              $SUBOUT                                                  MM015760
         EJECT                                                          MM015770
*********************************************************************** MM015780
*        MACRO EXPANSION ( CONT'D )                                   * MM015790
*********************************************************************** MM015800
         SPACE 1                                                        MM015810
HERE    $CBAL  JES2B313,NO=HERE,DOC=YES                                 MM015820
         EJECT                                                          MM015830
*********************************************************************** MM015840
*        MACRO EXPANSION ( CONT'D )                                   * MM015850
*********************************************************************** MM015860
         SPACE 1                                                        MM015870
        $MODMID B313,DOC=YES                                            MM015880
         EJECT                                                          MM015890
*********************************************************************** MM015900
*        MACRO EXPANSION ( CONT'D )                                   * MM015910
*********************************************************************** MM015920
         SPACE 1                                                        MM015930
JES2B999 $MODNTRY EXIT=EXITB999,DOC=YES                                 MM015940
         EJECT                                                          MM015950
*********************************************************************** MM015960
*        MACRO EXPANSION ( CONT'D )                                   * MM015970
*********************************************************************** MM015980
         SPACE 1                                                        MM015990
        $MODEXIT DOC=YES                                                MM016000
         EJECT                                                          MM016010
*********************************************************************** MM016020
*        MACRO EXPANSION ( CONT'D )                                   * MM016030
*********************************************************************** MM016040
         SPACE 1                                                        MM016050
        $MODLINK JES2B999,DOC=YES                                       MM016060
         EJECT                                                          MM016070
*********************************************************************** MM016080
*        MACRO EXPANSION ( CONT'D )                                   * MM016090
*********************************************************************** MM016100
         SPACE 1                                                        MM016110
        $MODXCTL JES2B999,DOC=YES                                       MM016120
         EJECT                                                          MM016130
*********************************************************************** MM016140
*        MACRO EXPANSION ( CONT'D )                                   * MM016150
*********************************************************************** MM016160
         SPACE 1                                                        MM016170
EXITB999 $MODRET DOC=YES                                                MM016180
         EJECT                                                          MM016190
*********************************************************************** MM016200
*        MACRO EXPANSION ( CONT'D )                                   * MM016210
*********************************************************************** MM016220
         SPACE 1                                                        MM016230
ANYRTN  $SUBIN SAVE=(R4,R5),DOC=YES                                     MM016240
         EJECT                                                          MM016250
*********************************************************************** MM016260
*        MACRO EXPANSION ( CONT'D )                                   * MM016270
*********************************************************************** MM016280
         SPACE 1                                                        MM016290
ANYRTNX $SUBOUT DOC=YES                 RESTORE SAVED REGS AND RETURN   MM016300
         SPACE 5                                                        MM016310
         EJECT                                                          MM016320
*********************************************************************** MM016330
*        MACRO EXPANSION ( CONT'D )                                   * MM016340
*********************************************************************** MM016350
         SPACE 1                                                        MM016360
         USING JQEDSECT,R1         ESTABLISH JQE DSECT ADDRESSABILITY   MM016361
         SPACE 1                                                        MM016362
SETFLAG $AUXFLAG ON,AJQFKEEP,DOC=YES SET ON AUXILIARY HOLD FLAG         MM016370
         SPACE 5                                                        MM016380
.NOEXP   ANOP                                                           MM016390
         END                                                            MM016400
