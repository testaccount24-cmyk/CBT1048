         MACRO                                                          MACD0200
&NAME   $CBAL  &RTN,&NO=,&YES=,&ERR=,&ALL=,&DOC=NO,&SKIP=NO,&EP=,&MRCB= MACD0210
         GBLC  &MODEQU                                                  MACD0220
         LCLA  &KRTN,&N                                                 MACD0230
         LCLC  &CODE,&NAME1,&REG,&EX                                    MACD0240
         AIF   ('&DOC' NE 'YES').NODOC                                  MACD0250
         SPACE 1                                                        MACD0260
*        CORRECT FORM IS :-                                             MACD0270
*        $CBAL <RTN-NAME>          NAME OF RTN REQUIRED (E.G. JES2B308) MACD0280
*                                  ALTERNATIVELY, AN 'EXECUTE' FORM     MACD0290
*                                  MAY BE CODED BY SUPPLYING THE        MACD0300
*                                  DISPLACEMENT OF THE MRCB IN A REG    MACD0310
*                                  (E.G. (R15) ).                       MACD0320
*              <,NO=ADDR>          BRANCH ADDRESS IF RTN RETURNS 'NO'   MACD0330
*              <,YES=ADDR>         BRANCH ADDRESS IF RTN RETURNS 'YES'  MACD0340
*              <,ERR=ADDR>         BRANCH ADDRESS IF RTN NO AVAILABLE   MACD0350
*              <,ALL=ADDR>         BRANCH ADDRESS REGARDLESS OF RESULT  MACD0360
*              <,SKIP=NO | YES>    BYPASS $CBAL IF PRIOR JES TEST HAPPY MACD0370
*              <,EP=VALUE>         ENTRY POINT CODE.  IF A $CBAL MUST   MACD0380
*                                  BE PLACED IN MORE THAN ONE PLACE,    MACD0390
*                                  THIS SUPPLIES A WAY OF TELLING THE   MACD0400
*                                  ROUTINE FROM WHERE IT IS BEING CALLD MACD0410
*                                  VALUE MAY BE ANYTHING VALID FOR MVI  MACD0420
*              <,MRCB=VALUE>       THIS $CBAL MUST HAVE ACCESS TO A     MACD0430
*                                  SPECIFIC MRCB AND MUST BE THE ONLY   MACD0440
*                                  ONE TO HAVE ACCESS TO THAT MRCB.     MACD0450
*                                  DUE TO THIS PARAMETER AN 'ENTRY'     MACD0460
*                                  AND AN 'EQU *' STATEMENTS WILL BE    MACD0470
*                                  GENERATED WITH AS SYMBOL NAME        MACD0480
*                                  '$CBALM..' ( .. = VALUE SPECIFIED).  MACD0490
*                                  THIS TO AVOID USAGE                  MACD0500
*                                  OF DUPLICATE ASSIGNMENT OF THE SAME  MACD0510
*                                  MRCB. IF SAME MRCB NUMBER SPECIFIED  MACD0520
*                                  TWICE IN THE SAME JES2 MODULE, IT    MACD0530
*                                  WILL GIVE 'ASSEMBLY ERROR'. IF SAME  MACD0540
*                                  MRCB NUMBER SPECIFIED SEVERAL TIME   MACD0550
*                                  IN DIFFERENT JES2 MODULES, IT WILL   MACD0560
*                                  GIVE PROBLEMS WITH THE LINKAGE-      MACD0570
*                                  EDITOR PROGRAM.                      MACD0580
*                                  THE '$CBALM..' MRCB'S ARE NOT        MACD0581
*                                  INITIALISED AS THE NORMAL MOD-MRCB'S MACD0582
*                                  BEFORE THE CONTROL WILL BE GIVEN     MACD0583
*                                  TO MONSANTO MODS DISPATCHER A MOVE   MACD0584
*                                  OF INFORMATION FROM MOD-MRCB TO      MACD0585
*                                  THE SPECIFIED MRCB WILL ARRANGE THIS MACD0586
*                                  INITIALISATION PROBLEM.              MACD0587
*              <,DOC=NO | YES>     PRODUCE DOCUMENTATION ( DEFAULT NO ) MACD0590
         SPACE 1                                                        MACD0600
*        THE FUNCTION OF THIS MACRO IS TO GENERATE THE NECESSARY        MACD0610
*         LINKAGE TO PASS CONTROL TO A USER MODIFICATION ROUTINE.       MACD0620
*         CONTROL IS PASSED VIA THE ROUTINE DISPATCHER, THE ADDRESS OF  MACD0630
*         WHICH IS IN THE HCT FIELD HCT$B000.                           MACD0640
*        THE NAME OF THE REQUESTED ROUTINE IS SET AS AN EQUATE BY THE   MACD0650
*         DSECT MACRO $AHCT, EXCEPT THAT 'JES2' IS REPLACED BY '$MOD'.  MACD0660
*         THE $CBAL VERIFIES THAT THE EQUATES HAVE BEEN SET - BY A      MACD0670
*         PRIOR $AHCT OR $CBAL - AND IF THEY HAVE NOT, $AHCT IS ISSUED  MACD0680
*         ( WITH PRINTING SUPPRESSED ) TO PRODUCE THE EQUATES ONLY ).   MACD0690
*         THIS EQUATE IS USED TO LOCATE THE MRCB OF THE DESIRED ROUTINE MACD0700
*         AND IT IS TESTED TO ENSURE THAT THE ROUTINE IS AVAILABLE,  IF MACD0710
*         IT IS AVAILABLE, CONTROL IS PASSED TO THE ROUTINE DISPATCHER. MACD0720
*        IF A $CBAL IS CODED MORE THAN ONCE, IT IS POSSIBLE TO INDICATE MACD0730
*         TO THE INVOKED ROUTINE FROM WHERE IT IS BEING CALLED.  THIS   MACD0740
*         IS DONE VIA THE 'EP=' OPERAND, WHICH PLACES THE SPECIFIED     MACD0750
*         VALUE IN THE HIGH-ORDER BYTE OF THE REGISTER 9 SAVE AREA IN   MACD0760
*         THE APCE ( APCESR9 ).                                         MACD0770
*        NOTE THAT INSTEAD OF SPECIFYING THE NAME OF THE MODIFICATION   MACD0780
*         ROUTINE TO BE INVOKED, THE CALLER MAY INSTEAD SPECIFY A       MACD0790
*         REGISTER ( IN PARENTHESES ), IN WHICH CASE THE REGISTER IS    MACD0800
*         ASSUMED TO CONTAIN THE DISPLACEMENT ( NOT THE ADDRESS ) OF    MACD0810
*         THE MRCB DEFINING THE ROUTINE TO BE INVOKED.  THIS FORMAT OF  MACD0820
*         $CBAL IS NOT INTENDED FOR USE IN MAIN-LINE JES2 CODE, BUT     MACD0830
*         IN JES MODIFICATION ROUTINES WHICH PERFORM A TASK SELECTION/  MACD0840
*         DISPATCHING FUNCTION ( E.G. THE AUXILIARY COMMAND PROCESSOR ) MACD0850
         SPACE 1                                                        MACD0860
*        NOTE THAT OUR LINKAGE CONVENTIONS ARE SUCH THAT, UPON RETURN   MACD0870
*         TO THE JES CODE, ONLY REGISTER 9 AND THE PSW COND CODE HAVE   MACD0880
*         BEEN ALTERED.  ALL OTHER REGISTERS ARE RESTORED TO THEIR      MACD0890
*         VALUES PRIOR TO THE $CBAL, EXCEPT IN THOSE CASES WHERE IT WAS MACD0900
*         THE SPECIFIC FUNCTION OF THE INVOKED ROUTINE TO ALTER JES'S   MACD0910
*         REGISTER CONTENTS.  ( NOTE: EVEN LINK IS RESTORED, AND RETURN MACD0920
*         IS VIA REGISTER 9 ).                                          MACD0930
         SPACE 1                                                        MACD0940
*        THE PURPOSE OF THE 'SKIP=YES' KEYWORD IS TO PERMIT A JES2      MACD0950
*         MODIFICATION ROUTINE TO BE PROCESSED ONLY IF THE TEST MADE    MACD0960
*         IN THE EXISTING JES CODE IS NOT SATISFIED.  IF THE TEST IS    MACD0970
*         SATISFIED, THEN THE $CBAL IS PERFORMED.                       MACD0980
*         E.G. IF THE JES2 CODE IS OF THE FORM :-                       MACD0990
*              TM    ABCDE,FGHIJ   MAKE A DECISION                      MACD1000
*              BC    *+8           BR IF JES HAPPY                      MACD1010
*              DO SOMETHING                                             MACD1020
*         THEN A $CBAL WITH 'SKIP=YES' MAY BE INSERTED AFTER THE 'BC'   MACD1030
*         SO THAT THE MODIFICATION IS ONLY PERFORMED IF JES DOES NOT    MACD1040
*         BRANCH TO *+8, WHILE THE 'DO SOMETHING' IS STILL BYPASSED IF  MACD1050
*         THE ORIGINAL JES TEST WAS SATISFIED.                          MACD1060
         SPACE 1                                                        MACD1070
.NODOC   ANOP                                                           MACD1080
         AIF   ('&RTN'(1,1) NE '(').NOTEX00                             MACD1090
&EX      SETC  'YES'                                                    MACD1100
&REG     SETC  '&RTN(1)'                                                MACD1110
         AGO   .ISEX00                                                  MACD1120
.NOTEX00 ANOP                                                           MACD1130
         AIF   ('&RTN' EQ '').ERR01                                     MACD1140
&CODE    SETC  '&RTN'                                                   MACD1150
         AIF   ('&RTN'(1,4) NE 'JES2').LAB01                            MACD1160
         AIF   (K'&RTN LT 5).ERR02                                      MACD1170
         AIF   ('&MODEQU' EQ 'YES').EQUFND                              MACD1180
         PUSH  PRINT               PRESERVE PRINT STATUS                MACD1190
         PRINT OFF                 SUPPRESS PRINTING THE EQUATES        MACD1200
        $AHCT  EQUONLY=YES         GENERATE THE EQUATES                 MACD1210
         POP   PRINT               RESTORE PRINT STATUS                 MACD1220
.EQUFND  ANOP                                                           MACD1230
&KRTN    SETA  K'&RTN                                                   MACD1240
&KRTN    SETA  &KRTN-4                                                  MACD1250
&CODE    SETC  '&RTN'(5,&KRTN)                                          MACD1260
.LAB01   ANOP                                                           MACD1270
&CODE    SETC  '$MOD'.'&CODE'                                           MACD1280
.ISEX00  ANOP                                                           MACD1290
&NAME1   SETC  '&NAME'                                                  MACD1300
&N       SETA  34                                                       MACD1310
         AIF   ('&NO' EQ '').NNO                                        MACD1320
&N       SETA  &N+4                                                     MACD1330
.NNO     AIF   ('&YES' EQ '').NYES                                      MACD1340
&N       SETA  &N+4                                                     MACD1350
.NYES    AIF   ('&ERR' EQ '').NERR                                      MACD1360
&N       SETA  &N+4                                                     MACD1370
.NERR    AIF   ('&ALL' EQ '').NALL                                      MACD1380
&N       SETA  &N+4                                                     MACD1390
.NALL    AIF   ('&SKIP' NE 'YES').NOSKIP                                MACD1400
&NAME1   B     *+8                 GO TO PERFORM $CBAL MODIFICATION     MACD1410
         B     CBLX&SYSNDX.+4      BR OVER $CBAL + FOLLOWING INSRUCTION MACD1420
&NAME1   SETC  ' '                                                      MACD1430
.NOSKIP  ANOP                                                           MACD1440
&N       SETA  &N-8                                                     MACD1450
&NAME1   ICM   R9,7,HCT$AHCT+1     PICK UP AHCT ADDRESS                 MACD1460
&NAME1   SETC  ' '                                                      MACD1470
         BZ    CBLX&SYSNDX         SKIP THE $CBAL IF NO AHCT            MACD1480
         AIF   ('&MRCB' EQ '').NOMRCB1                                  MACD1490
         ENTRY $CBALM&MRCB         FORCE AN ENTRY POINT TO AVOID        MACD1500
$CBALM&MRCB EQU * ^                 DUPLICATE USAGE OF A SPECIFIC MRCB  MACD1510
         A     R9,=A(($MODMR&MRCB.*MRCBSIZE)+MRCBSTRT) POINT R9 TO MRCB MACD1520
         STM   R13,R12,MRCBRSA(R9) PRESERVE ALL REGISTERS IN MRCB       MACD1530
         LR    R1,R9               SAVE MRCB ADDRESS IN R1              MACD1540
         ICM   R9,7,HCT$AHCT+1     PICK UP AHCT ADDRESS                 MACD1550
.NOMRCB1 ANOP                                                           MACD1560
         AIF   ('&EX' NE 'YES').NOTEX                                   MACD1570
         AIF   ('&REG' EQ 'R9').ENDEX                                   MACD1580
         LA    R9,0(R9,&REG)       GET DISPLACEMENT OF MRCB IN R9       MACD1590
         AGO   .ENDEX                                                   MACD1600
.NOTEX   ANOP                                                           MACD1610
         A     R9,=A((&CODE.*MRCBSIZE)+MRCBSTRT) GET ADDRESS OF MRCB    MACD1620
.ENDEX   ANOP                                                           MACD1630
         AIF   ('&MRCB' EQ '').NOMRCB2                                  MACD1640
         MVC   0(MRCBINFL,R1),0(R9)         MOVE INTO SPECIFIED MRCB    MACD1650
*        INFORMATION FROM MOD-MRCB (MODULE ENTRY POINT, FLAGS, ETC...). MACD1660
         LR    R9,R1               RESTORE ADDRESS OF SPECIFIED MRCB    MACD1670
         L     R1,MRCBRSA+16(R9)   RESTORE R1 WITH ORIGINAL INFO        MACD1680
.NOMRCB2 ANOP                                                           MACD1690
         CLI   MRCBAVAL(R9),C'Y'   TEST IF ROUTINE AVAILABLE            MACD1700
         BNE   CBLT&SYSNDX         BR IF NOT (WITH APPROP COND CODE)    MACD1710
         AIF   ('&MRCB' NE '').NOMRCB3                                  MACD1720
         STM   R13,R12,MRCBRSA(R9) PRESERVE ALL REGISTERS IN MRCB       MACD1730
.NOMRCB3 ANOP                                                           MACD1740
         AIF   ('&EP' EQ '').NOEP                                       MACD1750
         MVI   MRCBRSA+48(R9),&EP  SET 'ENTRY-POINT' INDICATION         MACD1760
.NOEP    ANOP                                                           MACD1770
         L     R15,HCT$B000        GET ADDRESS OF MOD DISPATCHER        MACD1780
         BALR  LINK,R15            GO TO DISPATCHER & THENCE THE RTN    MACD1790
CBLT&SYSNDX EQU *                  TEST THE COND CODE AS NECESSARY      MACD1800
         AIF   ('&NO' EQ '').NONO                                       MACD1810
         BL    &NO                 BR IF 'NO' RETURNED                  MACD1820
.NONO    AIF   ('&YES' EQ '').NOYES                                     MACD1830
         BE    &YES                BR IF 'YES' RETURNED                 MACD1840
.NOYES   AIF   ('&ERR' EQ '').NOERR                                     MACD1850
         BH    &ERR                BR IF ROUTINE NOT AVAILABLE          MACD1860
.NOERR   AIF   ('&ALL' EQ '').NOALL                                     MACD1870
         B     &ALL                BR REGARDLESS OF THE RETURN CODE     MACD1880
         MNOTE *,'CAUTION: THE FOLLOWING CODE WILL BE BYPASSED, ...'    MACD1890
         MNOTE *,' ... EVEN IF THE MODIFICATION ROUTINE IS SUPPRESSED'  MACD1900
.NOALL   ANOP                                                           MACD1910
CBLX&SYSNDX EQU *                  END OF $CBAL MACRO EXPANSION         MACD1920
         MEXIT                                                          MACD1930
.ERR01   MNOTE 16,'NO ROUTINE NAME SPECIFIED'                           MACD1940
         MEXIT                                                          MACD1950
.ERR02   MNOTE 16,'ROUTINE NAME MAY MOT BE ''JES2'''                    MACD1960
         MEXIT                                                          MACD1970
         MEND                                                           MACD1980
