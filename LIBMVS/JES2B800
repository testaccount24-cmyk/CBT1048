JES2B800 TITLE 'PROCESS /*GIMMEX CONTROL CARD - CONTROL BLOCK GENERATIO+B8000045
               N MACRO DEFINITIONS'                                     B8000050
*                                                                       B8000055
***** $HASPCB  *****          GENERATE HASP CONTROL BLOCKS              B8000060
*                                                                       B8000065
*                                                                       B8000070
         MACRO                                                          B8000075
         $HASPCB &DOC=NO,&LIST=NO                                       B8000080
         GBLC  &PRINT,&GEN,&DATA                                        B8000085
         PUSH  PRINT                                                    B8000090
         PRINT &PRINT                                                   B8000095
         $CVT  LIST=&LIST          GENERATE OS CVT DSECT                B8000100
         $DCB  LIST=&LIST          GENERATE OS DCB DSECT                B8000105
         $DEB  LIST=&LIST          GENERATE OS DEB DSECT                B8000110
         $UCB  LIST=&LIST          GENERATE OS UCB DSECT                B8000115
         $AHCT DOC=&DOC            GENERATE AHCT DSECT                  B8000120
         $ADCT DOC=&DOC            GENERATE HASP ADCT DSECT             B8000125
         $APCE DOC=&DOC            GENERATE MODS APCE DSECT             B8000130
         $APCE DOC=&DOC,TYPE=SPCE  GENERATE MODS SECONDARY APCE DSECT   B8000135
         $TGM  DOC=&DOC            GENERATE HASP TGM DSECT              B8000140
         $TAB  DOC=&DOC            GENERATE HASP TAB DSECT           R4 B8000145
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT             B8000150
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT              B8000155
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT              B8000160
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT              B8000165
         $SCR  DOC=&DOC            GENERATE HASP SCR DSECT           R4 B8000170
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT           B8000175
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT              B8000180
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT              B8000185
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT              B8000190
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT              B8000195
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT             B8000200
         $IOT  DOC=&DOC            GENERATE HASP IOT DSECT              B8000205
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT              B8000210
         $OCR  DOC=&DOC            GENERATE HASP OCR DSECT              B8000215
         $OCT  DOC=&DOC            GENERATE HASP OCT DSECT              B8000220
         $SCAT DOC=&DOC            GENERATE HASP SCAT DSECT             B8000225
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT              B8000230
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT              B8000235
         $RDRWORK DOC=&DOC         GENERATE INPUT PCE WORK AREA DSECT   B8000240
         SPACE 3                                                        B8000245
         POP   PRINT                                                    B8000250
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS           B8000255
         MEND                                                           B8000260
         TITLE 'JES2B800 - PROCESS /*GIMMEX CONTROL CARD'               B8000265
JES2B800 CSECT             PROCESS /*GIMMEX CONTROL CARD MOD PROGRAM    B8000270
         SPACE 2                                                        B8000275
*******************************************************************     B8000280
*                                                                 *     B8000285
*        PROGRAM ID. :             JES2B800                       *     B8000290
*                                                                 *     B8000295
*        DATE WRITTEN :            JULY 1977.                     *     B8000300
*                                                                 *     B8000305
*        AUTHOR :                  J.NOLS                         *     B8000310
*                                                                 *     B8000315
*        LOCATION :                MONSANTO MISD/TSG BRUSSELS     *     B8000320
*                                                                 *     B8000325
*******************************************************************     B8000330
         SPACE 3                                                        B8000335
*******************************************************************     B8000340
*                                                                 *     B8000345
*        PURPOSE                                                  *     B8000350
*       ---------                                                 *     B8000355
*                                                                 *     B8000360
*        THIS IS A MONSANTO JES2 MODIFICATION MODULE.             *     B8000365
*        IT IS LOADED AT JES2 INITIALISATION UPON REQUEST VIA     *     B8000370
*        JES2B001,THE MONSANTO INITIALISATION MODULE,AND IS       *     B8000375
*        ENTERED VIA A $CBAL FROM THE HASP INPUT SERVICE - MAIN   *     B8000380
*        PROCESSOR ROUTINE IN HASPRDR AT STATEMENT R0741500.      *     B8000385
*                                                                 *     B8000390
*        ON ENTRY HASPRDR HAS ESTABLISHED THE FOLLOWING           *     B8000395
*        REGISTER CONVENTIONS IN ADDITION TO NORMAL HASP USAGE:-  *     B8000400
*        R1    -->                 DCT                            *     B8000405
*        R3    -->                 BUFFER                         *     B8000410
*                                                                 *     B8000415
*******************************************************************     B8000420
         EJECT                                                          B8000425
         COPY  $HASPGEN            HASP OPTIONS                         B8000430
         TITLE 'CONTROL BLOCK OPTIONS'                                  B8000435
         $SYSPARM (OFF,GEN,DATA,NO,NO)      SET DOCUMENTATION OPTIONS   B8000440
         SPACE 3                                                        B8000445
*                                                                       B8000450
*        GENERATE HASP CONTROL BLOCKS                                   B8000455
*                                                                       B8000460
         SPACE 2                                                        B8000465
         $HASPCB DOC=&DOC,LIST=&LIST GENERATE HASP CONTROL BLOCKS       B8000470
         TITLE 'PROCESS /*GIMMEX CC - CONTROL CARD SCAN TABLE DSECT'    B8000475
         SPACE 5                                                        B8000480
RSCANTBL DSECT                     CONTROL CARD SCAN TABLE DSECT        B8000485
RSCANAME DS    CL7                 KEYWORD NAME (7 CHARACTERS MAX)      B8000490
RSCANABR DS    C                   KEYWORD ABREVIATION (1 CHARACTER)    B8000495
RSCANFLG DS    X                   KEYWORD VALUE FLAGS                  B8000500
RSCFLCOM EQU   B'10000000'              MASK IS COMPLEMENTED            B8000505
RSCFLNUM EQU   B'10000000'              VALUE MUST BE NUMERIC           B8000510
RSCFLBIN EQU   B'01000000'              CONVERT VALUE TO BINARY         B8000515
RSCFLEFT EQU   B'00100000'              LEFT ADJUST VALUE               B8000520
RSCFLBLK EQU   B'00010000'              BLANK-FILL VALUE                B8000525
RSCFLPCT EQU   B'00001111'              MAXIMUM NUMBER OF VALUES        B8000530
RSCANMSK DS    0X                  KEYWORD MASK                         B8000535
RSCANLEN DS    AL1                 KEYWORD VALUE LENGTH                 B8000540
RSCANDSP DS    AL2                 KEYWORD VALUE DISPLACEMENT           B8000545
RSCANEXT DS    0F                  ADDRESS OF NEXT TABLE ENTRY          B8000550
JES2B800 CSECT                     END OF CONTROL CARD SCAN DSECT       B8000555
         TITLE 'PROCESS /*GIMMEX CONTROL CARD'                          B8000560
*                                                                       B8000565
*                             READER REGISTER DEFINITIONS               B8000570
*                                                                       B8000575
         SPACE 3                                                        B8000580
RW       EQU   WA                  WORK REGISTER                        B8000585
RBI      EQU   WB                  INPUT BUFFER                         B8000590
RPI      EQU   WC                  INPUT POINTER                     R4 B8000595
RL1      EQU   WD                  INTERNAL LINK REGISTER 1          R4 B8000600
RL2      EQU   WE                  INTERNAL LINK REGISTER 2          R4 B8000605
RBASE2   EQU   WF                  INPUT SERVICE BASE REGISTER       R4 B8000610
         SPACE 4                                                        B8000615
*                                                                       B8000620
*                             READER BUFFER DEFINITIONS                 B8000625
*                                                                       B8000630
         SPACE 3                                                        B8000635
RBUFTRK  EQU   HDBNXTRK-BUFDSECT   BUFFER CHAIN TRACK DISPLACEMENT      B8000640
*                                  INPUT BUFFER START DISPLACEMENT      B8000645
ROBUFST  EQU   HDBSTART-BUFDSECT   OUTPUT BUFFER START DISPLACEMENT     B8000650
         SPACE 4                                                        B8000655
*                                                                       B8000660
*                             MISCELLANEOUS DEFINITIONS                 B8000665
*                                                                       B8000670
         SPACE 3                                                        B8000675
*                               RDRSW                                R4 B8000680
RJFLUSH  EQU   X'01'               JOB FLUSH SWITCH                     B8000685
RNOSCAN  EQU   X'02'               NO CARD SCAN SWITCH                  B8000690
RDREOFSW EQU   X'04'               END-OF-FILE SWITCH                   B8000695
RJCLSW   EQU   X'08'               JOB CONTROL LANGUAGE SWITCH          B8000700
RSYSINSW EQU   X'10'               GENERATED DD * PROCESSING SWITCH     B8000705
RXBJOBSW EQU   X'20'               XEQ BATCH CLASS JOB SWITCH           B8000710
RUNIEXCP EQU   X'01'               UNIT EXCEPTION BIT                   B8000715
*                               RDRSW2                               R4 B8000720
RJCLH    EQU   X'01'               TYPRUN=JCLHOLD                    R4 B8000725
*                                                                    R4 B8000730
RSIOCSWS EQU   X'10'               SIO CSW STORED BIT                   B8000735
RSIOCC   EQU   X'30'               SIO COMPLETION CODE BITS             B8000740
RDLMSKIP EQU   LRC1RSV7            DLM TEST BYPASS SWITCH            R4 B8000745
         TITLE 'JES2B800 - MAIN PROCESSING ROUTINE'                     B8000750
         EJECT                                                          B8000755
*********************************************************************** B8000760
*                                                                     * B8000765
*        MOD ENTRY                                                    * B8000770
*                                                                     * B8000775
*********************************************************************** B8000780
         SPACE 1                                                        B8000785
JES2B800 $MODNTRY CSECT=YES,EXIT=EXITB800,DOC=&DOC MODIFICATION ENTRY   B8000790
         SPACE 2                                                        B8000795
         USING BUFDSECT,RBI        ESTABLISH IOB ADDRESSABILITY         B8000800
         SPACE 1                                                        B8000805
         EJECT                                                          B8000810
*********************************************************************** B8000815
*                                                                     * B8000820
*        /*GIMMEX PROCESSING                                          * B8000825
*                                                                     * B8000830
*********************************************************************** B8000835
         SPACE 1                                                        B8000840
         $REGSAVE SAVE=(R6)        SAVE REGISTER 6                      B8000845
         CLC   0(9,RPI),=CL9'/*GIMMEX ' IS IT A '/*GIMMEX' CTRL CARD?   B8000850
         BNE   RETURNNO            NO, GO RETURN 'NO'                   B8000855
         MVI   0(RPI),C'*'         YES, REPLACE '/' BY '*'              B8000860
         MVI   RDRCCTL,X'89'       SET CARRIAGE CONTROL CHAR            B8000865
         B     ROUTCARD            GO TO ROUTE CARD PROCESSING ROUTINE  B8000870
         SPACE 1                                                        B8000875
B800RPUT BAL   RL1,RPUT            PUT CARD IN OUTPUT BUFFER            B8000880
B800RGET BAL   RL1,RGET            GET NEXT CARD                        B8000885
         B     B800EOF             BRANCH IF EOF                        B8000890
         OI    RCARDLRC,RDLMSKIP   INDICATE TO BYPASS DELIMITER TEST    B8000895
         CLC   0(6,RPI),=CL6'/*EOT ' IS IT A '/*EOT' CONTROL CARD       B8000900
         BE    B800EOT             YES, BRANCH                          B8000905
*                                  NO, MUST BE A RECORD TO PRINT OR     B8000910
*                                   PUNCH. PUT IT IN OUTPUT BUFFER AND  B8000915
*                                   GET NEXT CARD.                      B8000920
         ICM   RW,15,APCESNXT      TEST IF SECONDARY APCE HAS BEEN ACQ. B8000925
         BZ    B800RPUT            BRANCH IF NO                         B8000930
         MVI   SPCEAREA-SPCEDSCT(RW),X'40' CLEAR SPCE WORK AREA         B8000935
         MVC   SPCEAREA-SPCEDSCT+1(L'SPCEAREA-1,RW),SPCEAREA-SPCEDSCT(R*B8000940
               W)                                                       B8000945
         MVC   RDRCCTL,0(RPI)      SAVE CARRIAGE CONTROL CHAR.          B8000950
         L     RL1,JCTLINES        GET CURRENT LINE COUNT               B8000955
         LA    RL1,1(,RL1)         ADD ONE                              B8000960
         ST    RL1,JCTLINES        SAVE NEW LINE COUNT                  B8000965
         L     RL1,JCTXOUT         GET CURRENT OUTPUT COUNT             B8000970
         LA    RL1,1(,RL1)         ADD ONE                              B8000975
         ST    RL1,JCTXOUT         SAVE NEW OUTPUT TOTAL                B8000980
         MVC   SPCEAREA-SPCEDSCT(79,RW),1(RPI)  SAVE 79 FIRST POS       B8000985
         BAL   RL1,RGET            GET NEXT CARD                        B8000990
         B     B800EOFE            BRANCH IF END-OF-FILE                B8000995
         L     RW,APCESNXT         LOAD ADDRESS OF SECONDARY APCE       B8001000
         CLC   0(6,RPI),=C'/*EOT ' IS IT A '/*EOT' CONTROL CARD?        B8001005
         BE    *+10                YES, SKIP NEXT TWO INSTRUCTIONS      B8001010
         MVC   SPCEAREA-SPCEDSCT+79(80,RW),0(RPI) SAVE 53 LAST POS.     B8001015
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B8001020
         LA    RPI,SPCEAREA-SPCEDSCT(,RW) POINT RPI TO LINE TO BE PRT   B8001025
         BAL   RL1,RPUT            PUT LINE IN OUTPUT BUFFER            B8001030
         L     RPI,APCESR4         RESTORE REAL RPI                     B8001035
         CLC   0(6,RPI),=C'/*EOT ' IS IT A '/*EOT' CONTROL CARD ?       B8001040
         BE    B800EOT             BRANCH IF YES                        B8001045
         B     B800RGET            GO GET NEXT CARD                     B8001050
B800EOFE L     RW,APCESNXT         LOAD ADDRESS OF SECONDARY APCE       B8001055
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B8001060
         LA    RPI,SPCEAREA-SPCEDSCT(,RW) POINT RPI TO LINE TO BE PRT   B8001065
         BAL   RL1,RPUT            PUT LINE IN OUTPUT BUFFER            B8001070
         L     RPI,APCESR4         RESTORE REAL RPI                     B8001075
         B     B800EOF             GO TO END-OF-FILE PROCESSING         B8001080
         EJECT                                                          B8001085
******** (CONT'D)                                                       B8001090
         SPACE 1                                                        B8001095
B800EOT  MVI   0(RPI),C'*'         REPLACE '/' BY '*'                   B8001100
         LTR   JCT,JCT             TEST IF PRECEDING /*GIMMEX IS VALID  B8001105
         BZ    *+16                NO, SKIP NEXT THREE INSTRUCTIONS     B8001110
         L     RW,JCTCARDS         INCREMENT                            B8001115
         LA    RW,1(RW)             CARD                                B8001120
         ST    RW,JCTCARDS           COUNT                              B8001125
         MVI   RDRCCTL,X'8B'       SET CARRIAGE CONTROL CHAR.           B8001130
         BAL   RL1,RPUT            PUT CARD IN OUTPUT BUFFER            B8001135
         MVI   RDRCCTL,X'19'       SET CARRIAGE CONTROL CHAR.           B8001140
         BAL   RL1,RPUT            PUT CARD IN OUTPUT BUFFER            B8001145
         LA    RL1,0               ZEROISE RL1                          B8001150
         ST    RL1,APCESR5         ASSUME GOOD RETURN                   B8001155
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B8001160
         B     B800JEND            SKIP NEXT INSTRUCTIONS               B8001165
B800EOF  LA    RL1,4               SET RL1 TO 4                         B8001170
         ST    RL1,APCESR5         ASSUME GOOD RETURN                   B8001175
         ST    RPI,APCESR4         STORE ACTUAL RPI                     B8001180
         LA    RPI,=CL80'**EOT -- NOT SUPPLIED BY USER, GENERATED BY JE+B8001185
               S2 AT THE PHYSICAL END-OF-FILE.'                         B8001190
         MVI   RDRCCTL,X'8B'       SET CARRIAGE CONTROL CHAR.           B8001195
         BAL   RL1,RPUT            PUT MESSAGE IN OUTPUT BUFFER         B8001200
         MVI   RDRCCTL,X'19'       SET CARRIAGE CONTROL CHAR.           B8001205
         BAL   RL1,RPUT            PUT MESSAGE IN OUTPUT BUFFER         B8001210
         L     RPI,APCESR4         RESTORE RPI                          B8001215
B800JEND BAL   RL1,RJOBEND         GO TERMINATE JOB                     B8001220
         ST    JCT,APCESR10        STORE ACTUAL JCT                     B8001225
         OI    RDRSW,RJFLUSH       SET FOR JOB FLUSH                    B8001230
         MVC   RPRIORTY,=CL2' '    SET STANDARD PRIORITY                B8001235
         MVC   RDRDLM,=CL2'/*'     SET INPUT DATA SET DELIMITER         B8001240
         MVI   APCE$$X,$$X         SET CONDITION CODE TO 'YES'          B8001245
         B     REGREST              AND GO RESTORE REGISTER BEF. EXIT   B8001250
         SPACE 1                                                        B8001255
RETURNNO MVI   APCE$$X,$$Y         SET CONDITION CODE TO 'NO'           B8001260
         SPACE 1                                                        B8001265
REGREST  $REGREST                  RESTORE REGISTER 6                   B8001270
         EJECT                                                          B8001275
*********************************************************************** B8001280
*                                                                     * B8001285
*        MOD EXIT                                                     * B8001290
*                                                                     * B8001295
*********************************************************************** B8001300
         SPACE 1                                                        B8001305
EXITB800 $MODEXIT DOC=&DOC         RETURN TO JES2 CODE                  B8001310
         TITLE 'JES2B800 - SUB-ROUTINES FROM HASPRDR SOURCE MODULE'     B8001315
         SPACE 1                                                        B8001320
*********************************************************************** B8001325
*                                                                     * B8001330
*        ROUTCARD - MODIFIED                                          * B8001335
*        RDESTSCN - NOT MODIFIED                                      * B8001340
*        RJOBEND  - MODIFIED                                          * B8001345
*        RGET     - NOT MODIFIED                                      * B8001350
*        RPUT     - MODIFIED                                          * B8001355
*        RJOBKILL - NOT MODIFIED                                      * B8001360
*        RJCTTERM - NOT MODIFIED                                      * B8001365
*        RJOBTERM - MODIFIED                                          * B8001370
*        RTRACK   - NOT MODIFIED                                      * B8001375
*        RGETBUF  - NOT MODIFIED                                      * B8001380
*        CONSTANTS AND OPERATOR MESSAGES - MODIFIED                   * B8001385
*                                                                     * B8001390
*        A LINE MODIFIED IN ONE OF THE ABOVE SUB-ROUTINES IS          * B8001395
*         MARKED WITH '*B800*' POSITIONS 66 TO 71.                    * B8001400
*                                                                     * B8001405
*********************************************************************** B8001410
         SPACE 1                                                        B8001415
         EJECT                                                          B8001420
*                                                                       B8001425
*                                  HASP ROUTE CARD PROCESSING ROUTINE   B8001430
*                                                                       B8001435
ROUTCARD LTR   JCT,JCT             TEST FOR JOB                      R4 B8001440
*        BZ    RILLCCRD            IGNORE ROUTE CARD IF NOT IN J.*B800* B8001445
         BNZ   *+12                IF IN JOB, SKIP NEXT TWO INST.*B800* B8001450
         MVI   0(RPI),C'/'         REPLACE '*' BY '/'            *B800* B8001455
         B     RETURNNO            IGNORE ROUTE CARD IF NOT IN J.*B800* B8001460
         OI    RCARDLRC,LRC1INUL+RDLMSKIP  INDICATE SUPERFLUOUS CARD R4 B8001465
         BAL   RL1,RPUT            ADD ROUTE CARD TO OUTPUT FILE        B8001470
         TM    RDRSW,RJCLSW        TEST STATUS                          B8001475
         BO    *+12                BRANCH IF JCL FILE                   B8001480
         BAL   RL1,RPUT            TERMINATE DATA SET                   B8001485
         OI    RDRSW,RJCLSW        SET JCL SWITCH                       B8001490
         MVC   1(7,RPI),ROUTCODE   CHANGE /*ROUTE TO //*ROUTE           B8001495
         LA    R1,15(,RPI)         GET ADDRESS OF DESTINATION        R4 B8001500
         LA    RW,JCTPROUT         ASSUME PRINT ROUTING                 B8001505
         TRT   9(5,RPI),B800TAB    IS SPECIFIED REC. L' NUMERIC? *B800* B8001510
         BNZ   RILLROUT            ILLEGAL IF NOT                *B800* B8001515
         PACK  APCEUSER(8),9(5,RPI)   PACK RECORD LENGTH         *B800* B8001520
         CVB   R9,APCEUSER          AND CONVERT IT TO BINARY     *B800* B8001525
         BCTR  R9,0                DECREMENT LENGTH OF ONE       *B800* B8001530
         STC   R9,APCEUSER         STORE BINARY VALUE            *B800* B8001535
         CLI   APCEUSER,132        IS RECORD LENGTH > 132        *B800* B8001540
         BH    RILLROUT            ILLEGAL IF YES                *B800* B8001545
         CLC   30(7,RPI),=C'SYSOUT=' TEST IF 'SYSOUT' IS SPECIFED*B800* B8001550
         BNE   RILLROUT            ILLEGAL IF NO                 *B800* B8001555
         CLI   37(RPI),C'('        TEST IF FORM IS SPECIFIED     *B800* B8001560
         BE    *+14                NO, SKIP NEXT TWO INSTRUCTIONS*B800* B8001565
         MVC   JCTMCLAS(1),37(RPI) YES, SAVE CLASS CODE          *B800* B8001570
         B     RPROUTE              AND CONTINUE NORMAL PROC.    *B800* B8001575
         CLC   39(2,RPI),=C',,'    TEST IF SYNTAX CORRECT        *B800* B8001580
         BNE   RILLROUT            ILLEGAL IF NOT                *B800* B8001585
         CLI   45(RPI),C')'        TEST SYNTAX                   *B800* B8001590
         BNE   RILLROUT             AGAIN                        *B800* B8001595
         MVC   JCTMCLAS(1),38(RPI) SYNTAX CORRECT SAVE CLASS     *B800* B8001600
         MVC   JCTFORMS,41(RPI)     AND FORM CODES               *B800* B8001605
         B     RPROUTE             SKIP NEXT FEW INSTRUCTIONS    *B800* B8001610
         CLC   RPRINT,9(RPI)       TEST                                 B8001615
         BE    RPROUTE             BRANCH IF PRINT ROUTING              B8001620
         CLC   RPUNCH,9(RPI)       TEST AGAIN                           B8001625
         BNE   RILLROUT            ILLEGAL IF NOT PUNCH ROUTING         B8001630
         LA    RW,JCTPUOUT         SET FOR PUNCH ROUTING                B8001635
         SPACE 1                                                     R4 B8001640
RPROUTE  BAL   RL1,RDESTSCN        CONVERT DESTINATION TO ROUTE CODE R4 B8001645
         B     RILLROUT            BRANCH IF INVALID DESTINATION        B8001650
         EJECT                                                          B8001655
*OUTSHFT OI    RCARDLRC,LRC1ONUL   INDICATE INTERNALLY GENER'D R4*B800* B8001660
*        LA    RL2,RJCLCARD        LOAD ADDRESS OF EXIT          *B800* B8001665
*        $RETURN                    AND RETURN                   *B800* B8001670
        $GETAPCE  SPCE             ACQUIRE A SECONDARY APCE      *B800* B8001675
ROUTSHFT B     B800RGET             GO READ NEXT CARD            *B800* B8001680
         SPACE 1                                                     R4 B8001685
RILLROUT OI    RCARDLRC,LRC1CCTL+LRC1TASA  SET ASA CARRIAGE CONTROL  R4 B8001690
         MVI   JCTMCLAS,C'A'       ASSUME 'A' IN CASE OF 'B'     *B800* B8001695
         MVI   RDRCCTL,C'0'        FORCE DOUBLE SPACE                R4 B8001700
         MVI   0(RPI),C'*'         FILL OUT CARD IMAGE               R4 B8001705
         MVC   1(78,RPI),0(RPI)     WITH ASTERISKS                   R4 B8001710
         MVI   79(RPI),C' '        ADD TRAILING BLANK                R4 B8001715
         MVC   (79-22)/2(22,RPI),RRILEGAL+4  MOVE IN ERROR MESSAGE   R4 B8001720
         BAL   RL1,RPUT            ADD ERROR MESSAGE TO OUTPUT FILE     B8001725
        $WTO   RRILEGAL,L'RRILEGAL,JOB=YES,               ISSUE ERROR  CB8001730
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST         MESSAGE     B8001735
         BAL   RL1,RJOBKILL        KILL JOB                             B8001740
*        LA    RL2,RFLTEST         LOAD ADDRESS OF EXIT          *B800* B8001745
*       $RETURN                     AND RETURN                   *B800* B8001750
         B     B800RGET             AND RETURN                   *B800* B8001755
         EJECT                                                          B8001760
*********************************************************************** B8001765
*                                                                     * B8001770
*              RDESTSCN  -  DESTINATION CONVERSION SUBROUTINE         * B8001775
*                                                                     * B8001780
*                  OUTPUT  --  RW = ADDRESS OF BINARY DESTINATION     * B8001785
*                                                                     * B8001790
*                  INPUTS  --  R1 = ADDRESS OF DESTINATION            * B8001795
*                                                                     * B8001800
*                  FUNCTION  --  CONVERT DESTINATION TO ITS BINARY    * B8001805
*                                EQUIVALENT                           * B8001810
*                                                                     * B8001815
*                  RETURNS  --  RL1+0 = ERROR RETURN                  * B8001820
*                               RL1+4 = NORMAL RETURN                 * B8001825
*                                                                     * B8001830
*                  EXTERNAL ROUTINE  --  $SVDEST                      * B8001835
*                                                                     * B8001840
*********************************************************************** B8001845
         SPACE 3                                                     R4 B8001850
RDESTSCN NULL                                                        R4 B8001855
         TM    0(R1),X'BF'         TEST FIRST BYTE OF DESTINATION    R4 B8001860
         BZR   RL1                 ERROR IF ZERO OR BLANK            R4 B8001865
         MVC   RDEST,0(R1)         MOVE DESTINATION TO WORK AREA     R4 B8001870
         MVI   RDEST+8,C' '        SET SCAN TERMINATOR               R4 B8001875
         LA    R15,RDEST           SCAN                              R4 B8001880
         LA    R15,1(,R15)          FOR                              R4 B8001885
         CLI   0(R15),C' '           FIRST                           R4 B8001890
         BNE   *-8                    BLANK                          R4 B8001895
         MVC   1(6,R15),0(R15)     BLANK OUT REST OF DESTINATION     R4 B8001900
         STM   R0,R11,PCER0        SAVE REGISTERS                    R4 B8001905
         L     R1,RDRDCT           GET ADDRESS OF DCT                R4 B8001910
         SLR   R2,R2                   SET UP                        R4 B8001915
         IC    R2,DCTSYS-DCTDSECT(,R1)  SYSTEM ID                    R4 B8001920
         LA    R1,RDEST            GET ADDRESS OF DESTINATION        R4 B8001925
         L     R11,$SSVT           GET ADDRESS OF SSVT               R4 B8001930
         L     R15,$SVDEST-SSVT(,R11)  GET ADDRESS OF ROUTINE        R4 B8001935
         BALR  R14,R15             CONVERT NAME TO ROUTE CODE        R4 B8001940
         B     RDESTERR            ERROR RETURN                      R4 B8001945
         LR    R15,R2              NORMAL RETURN, MOVE CODE TO R15   R4 B8001950
         LM    R0,R11,PCER0        RESTORE REGISTERS                 R4 B8001955
         STH   R15,0(,RW)          SET ROUTE CODE                    R4 B8001960
         B     4(,RL1)              AND RETURN                       R4 B8001965
         SPACE 3                                                     R4 B8001970
RDESTERR LM    R0,R11,PCER0        RESTORE REGISTERS                 R4 B8001975
         BR    RL1                 ERROR RETURN                      R4 B8001980
         EJECT                                                       R4 B8001985
*                                                                       B8001990
*                             CONTROL CARD SCAN CONSTANTS               B8001995
*                                                                       B8002000
         SPACE 3                                                        B8002005
RPRINT   DC    CL6'PRINT'          ROUTE CONSTANTS                      B8002010
RPUNCH   DC    CL6'PUNCH'          *                                    B8002015
         SPACE 3                                                     R4 B8002020
*                                                                       B8002025
*                             OPERATOR AND ERROR MESSAGES               B8002030
*                                                                       B8002035
         SPACE 3                                                        B8002040
RRILEGAL $MSG  111,'-- INVALID /*GIMMEX CARD'                    *B800* B8002045
ROUTCODE EQU   *-13,7              /*ROUTE EBCDIC CONSTANT              B8002050
         SPACE 3                                                        B8002055
B800TAB  DC    256C'1'                                           *B800* B8002060
         ORG   B800TAB+C'0' SET ZERO VALUES IN THE               *B800* B8002065
         DC    XL10'00'      POSITIONS 0 THROUGH 9               *B800* B8002070
         DC    6C'1'                                             *B800* B8002075
         EJECT                                                          B8002080
*********************************************************************** B8002085
*                                                                     * B8002090
*        RJOBEND -- SUBROUTINE TO COMPLETE JOB INPUT PROCESSING       * B8002095
*                                                                     * B8002100
*              FUNCTIONS -- 1) TEST FOR ACTIVE JOB                    * B8002105
*                           2) TERMINATE JOB                          * B8002110
*                           3) PLACE JOB IN EXECUTION QUEUE           * B8002115
*                                                                     * B8002120
*              LINK REGISTER -- RL1                                   * B8002125
*                                                                     * B8002130
*              EXTERNAL ROUTINES -- 1) RJCTTERM                       * B8002135
*                                   2) RJOBTERM                       * B8002140
*                                                                     * B8002145
*********************************************************************** B8002150
         SPACE 5                                                        B8002155
RJOBEND  LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B8002160
         BZR   RL1                 RETURN IF NO JCT                     B8002165
         SPACE 1                                                     R4 B8002170
RJOBENDT BAL   RL2,RJCTTERM        PERFORM FINAL UPDATE OF JCT       R4 B8002175
         SPACE 2                                                        B8002180
         TM    JCTJBOPT,JCTPRICD   BRANCH IF NEITHER /*PRIO CARD     R4 B8002185
         BZ    RPRISCH0              NOR JOB CARD PRTY FIELD         R4 B8002190
         PACK  RTEMP,RPRIORTY      CONVERT EBCDIC PRIROITY           R4 B8002195
         CVB   RW,RTEMP              TO BINARY                       R4 B8002200
         B     RPRISET             PROCESS INCR AND LIMIT            R4 B8002205
         SPACE 2                                                        B8002210
RPRISCH0 L     R1,$RTIMTAB         PREPARE TO SEARCH                 R4 B8002215
         B     *+8                  TIME PRIORITY TABLE              R4 B8002220
RPRISCH1 LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY                B8002225
         CLC   JCTETIME+1(3),1(R1) COMPARE ESTIMATED EXECUTION TIME     B8002230
         BH    RPRISCH1            BRANCH IF GREATER THAN TABLE ENTRY   B8002235
         SR    R0,R0               NO                                   B8002240
         IC    R0,0(,R1)           USE ASSOCIATED PRIORITY              B8002245
         SPACE 2                                                        B8002250
         L     R1,$SSVT               PREPARE TO SEARCH              R4 B8002255
         LA    R1,$SVXPRI-SSVT-4(,R1)  OUTPUT PRIORITY TABLE         R4 B8002260
RPRISCH2 LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY                B8002265
         CLC   JCTESOUT+1(3),1(R1) COMPARE ESTIMATED OUTPUT             B8002270
         BH    RPRISCH2            BRANCH IF GREATER THAN TABLE ENTRY   B8002275
         SR    RW,RW               NO                                   B8002280
         IC    RW,0(,R1)           USE ASSOCIATED PRIORITY              B8002285
         SRL   RW,4                 IN 'PURE' FORM                   R4 B8002290
         ALR   RW,R0               COMPUTE AVERAGE OF                   B8002295
         SRL   RW,1                 THE TWO PRIORITIES                  B8002300
         EJECT                                                          B8002305
RPRISET  N     RW,=F'15'           CLEAR EXTRANEOUS BITS                B8002310
         L     R1,RDRDCT           R1 = ADDRESS OF INPUT DCT            B8002315
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         B8002320
         IC    R0,DCTPRINC         R0 = INPUT DEVICE PRIORITY INCREMENT B8002325
         ALR   RW,R0               INCREMENT PRIORITY                   B8002330
         CLM   RW,1,DCTPRLIM       COMPARE PRIORITY WITH LIMIT          B8002335
         BNH   *+8                 BR IF PRIORITY NOT GREATER           B8002340
         IC    RW,DCTPRLIM         SET PRIORITY TO LIMIT                B8002345
         DROP  R1                  DROP DCT ADDRESSABILITY              B8002350
         SPACE 2                                                        B8002355
         SLL   RW,4                USE FOUR LOW-ORDER BITS              B8002360
         STC   RW,JCTIPRIO         SAVE INITIAL EXECUTION PRIORITY      B8002365
         STC   RW,RMESSAGE         SAVE FOR LATER USE                   B8002370
         SPACE 2                                                        B8002375
         MVI   RMESSAGE+1,$XEQ     PRESET CONVERTER CLASS               B8002380
         TM    RDRSW,RXBJOBSW      TEST JOB TYPE                        B8002385
         BZ    RNOXBACH            BRANCH IF NOT EXECUTION BATCHING     B8002390
         OC    RMESSAGE+1(1),JCTJCLAS  SET JOB QUEUE TYPE               B8002395
         NI    RMESSAGE+1,QUECLASS RESET HIGH-ORDER BYTE                B8002400
         SPACE 2                                                        B8002405
RNOXBACH NULL                      *                                 R4 B8002410
         TM    JCTJOBFL,JCTTCOPY   TEST JOB FLAGS                    R4 B8002415
         BZ    *+12                BRANCH IF NOT 'TYPRUN=COPY'          B8002420
         NI    RDRSW,255-RXBJOBSW  YES, RESET EXECUTION BATCH SWITCH    B8002425
         MVI   RMESSAGE+1,$OUTPUT  RESET QUEUE TYPE TO OUTPUT           B8002430
         BAL   RL2,RJOBTERM        TERMINATE JOB                        B8002435
         SPACE 2                                                     R4 B8002440
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    B8002445
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B8002450
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B8002455
         MVC   JQEPRIO,RMESSAGE    SET NEW PRIORITY                     B8002460
         MVC   JQEFLAG2,RDRSIAFF   RESET SYSTEM AFFINITY                B8002465
*        SR    R0,R0               GET NEXT                      *B800* B8002470
*        IC    R0,RMESSAGE+1        JOB QUEUE TYPE               *B800* B8002475
*       $QMOD  (R1),(R0)           QUEUE JOB FOR EXECUTION SERV. *B800* B8002480
        $QPUT  (R1),$OUTPUT        PLACE JOB IN PRINT QUEUE      *B800* B8002485
         DROP  R1                  DROP JQE ADDRESSABILITY              B8002490
         SR    R0,R0               CLEAR ADDRESS                        B8002495
         ST    R0,RJOB              OF JOB QEUEUE ELEMENT               B8002500
         BR    RL1                   AND RETURN                         B8002505
         EJECT                                                          B8002510
*********************************************************************** B8002515
*                                                                     * B8002520
*        RGET -- SUBROUTINE TO GET NEXT CARD FROM INPUT BUFFER        * B8002525
*                                                                     * B8002530
*              FUNCTION -- SET INPUT POINTER TO NEXT CARD             * B8002535
*                                                                     * B8002540
*              OUTPUT -- RPI = ADDRESS OF NEXT CARD IMAGE             * B8002545
*                                                                     * B8002550
*              LINK REGISTER -- RL1                                   * B8002555
*                                                                     * B8002560
*              RETURNS -- RL1+0 - END OF FILE RETURN                  * B8002565
*                         RL1+4 - NORMAL RETURN                       * B8002570
*                                                                     * B8002575
*              EXTERNAL ROUTINE -- RJOBKILL                           * B8002580
*                                                                     * B8002585
*********************************************************************** B8002590
         SPACE 5                                                        B8002595
RGET     TM    RDRSW,RSYSINSW      TEST FOR GENERATED DD *              B8002600
         BZ    RGET1               BRANCH IF NOT                        B8002605
         L     RPI,RSAVE1          YES, RESTORE ORIGINAL POINTER        B8002610
         NI    RDRSW,255-RSYSINSW  RESET INDICATION                     B8002615
         B     4(,RL1)              AND RETURN                          B8002620
         SPACE 3                                                     R4 B8002625
RGET1    LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B8002630
         BZ    RGETNOCT            DO NOT COUNT IF NO JCT               B8002635
         L     RW,JCTCARDS         INCREMENT                            B8002640
         LA    RW,1(,RW)            CARD                                B8002645
         ST    RW,JCTCARDS           COUNT                              B8002650
         SPACE 1                                                     R4 B8002655
RGETNOCT MVI   RCARDLRL,80         PRESET CARD LENGTH TO 80          R4 B8002660
         TM    PCEID,PCERJEID      TEST DEVICE TYPE                  R4 B8002665
         BO    RJEGET              BRANCH IF REMOTE READER           R4 B8002670
         TM    PCEID,PCEINRID      NO, TEST AGAIN                    R4 B8002675
         BZ    RDRGET              BRANCH IF NOT INTERNAL READER     R4 B8002680
         EJECT                                                       R4 B8002685
*                                                                    R4 B8002690
*                             INTERNAL READER PROCESSING             R4 B8002695
*                                                                    R4 B8002700
         L     RW,RDRDCT           RW = ADDRESS OF INTRDR DCT        R4 B8002705
         USING DCTDSECT,RW         ESTABLISH DCT ADDRESSABILITY      R4 B8002710
         SPACE 1                                                     R4 B8002715
RINRLOOP DS    0H                                                       B8002720
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B8002725
         LTR   R1,R1               TEST                                 B8002730
         BZ    RINRTEST            BRANCH IF NO ACTIVE JOB              B8002735
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B8002740
         TM    JQEFLAGS,QUEOPCAN   TEST JOB QUEUE FLAGS                 B8002745
         BO    RINRDEL             BRANCH IF JOB CANCEL                 B8002750
         DROP  R1                  DROP JQE ADDRESSABILITY              B8002755
         SPACE 2                                                     R4 B8002760
RINRTEST TM    DCTFLAGS,DCTDELET+DCTRSTRT TEST FOR OPERATOR COMMANDS    B8002765
         BNZ   RINRDEL             BRANCH IF OPERATOR CANCEL            B8002770
         TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH              B8002775
         BOR   RL1                 RETURN IF ON                         B8002780
         L     RL2,RIDPBFO         GET NEXT RECORD POINTER              B8002785
         LTR   RL2,RL2             TEST                                 B8002790
         BZ    RINRWAIT            BRANCH IF ZERO                       B8002795
         USING LRCDSECT,RL2        ESTABLISH LOGICAL RECORD ADDR.       B8002800
         CLI   LRCTLENG,LRCBFEND   TEST RECORD LENGTH                   B8002805
         BE    RINRWAIT            BRANCH IF END-OF-BLOCK               B8002810
         MVC   RINFLAG1,LRCFLAG1   SAVE RECORD CHARACTERISTICS       R4 B8002815
         NI    RINFLAG1,LRC1CCTL+LRC1CTYP  ISOLATE CARRIAGE CONTROL  R4 B8002820
         MVC   RCARDLRL,LRCLRECL   SAVE LOGICAL RECORD LENGTH           B8002825
         LR    R0,RPI              R0 = ADDRESS OF INTRDR WORK AREA     B8002830
         LA    R1,254              R1 = LENGTH OF INTRDR WORK AREA      B8002835
         LA    R14,LRCTEXT         R14 = ADDRESS OF BLOCKED RECORD      B8002840
         TM    LRCFLAG1,LRC1CCTL   TEST RECORD CONTROL BYTE             B8002845
         BZ    RINRNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B8002850
         MVC   RDRCCTL,0(R14)      SAVE CARRIAGE CONTROL CHARACTER   R4 B8002855
         LA    R14,1(,R14)         SPACE OVER CARRIAGE CONTROL CHAR.    B8002860
RINRNOCC CLR   R14,RPI             TEST ADDRESS                      R4 B8002865
         BNL   RINRWAIT            BRANCH IF INVALID                    B8002870
         L     R15,=XL4'40000000'  R15 = BLANK PAD CHARACTER            B8002875
         IC    R15,LRCTLENG        ADD LOGICAL RECORD LENGTH            B8002880
         MVCL  R0,R14              MOVE RECORD TO INTRDR WORK AREA      B8002885
         ST    R14,RIDPBFO         UPDATE RECORD POINTER                B8002890
         DROP  RL2                 DROP LOGICAL RECORD ADDRESSABILITY   B8002895
         CLC   0(6,RPI),=CL6'/*EOF'  TEST FOR INTERNAL READER EOF       B8002900
         BE    RINREOF             BRANCH IF YES                        B8002905
         CLC   0(7,RPI),=CL7'/*SCAN'  TEST FOR INTERNAL READER SCAN     B8002910
         BE    RINRSCAN            BRANCH IF NOT                        B8002915
         CLC   0(6,RPI),=CL6'/*DEL'  TEST FOR INTERNAL READER DELETE    B8002920
         BNE   4(,RL1)             TAKE NORMAL RETURN IF NOT            B8002925
         NI    RDRSW,255-RNOSCAN   TURN ON CARD SCAN                    B8002930
         EJECT                                                       R4 B8002935
*                                                                       B8002940
*                             DELETE JOB ON INTERNAL READER             B8002945
*                                                                       B8002950
RINRDEL  DS    0H                                                       B8002955
         ST    RL1,RLSAVE1         SAVE RETURN REGISTER                 B8002960
         BAL   RL1,RJOBKILL        DELETE JOB                           B8002965
         L     RL1,RLSAVE1         RESTORE RETURN REGISTER              B8002970
         L     RW,RDRDCT           RESTORE ADDRESS OF DCT               B8002975
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT  RESET OPERATOR FLAGS     B8002980
         B     RINRTEST            GET NEXT RECORD                      B8002985
*                                                                       B8002990
*                             SCAN JOB ON INTERNAL READER               B8002995
*                                                                       B8003000
RINRSCAN DS    0H                                                       B8003005
         LTR   JCT,JCT             TEST FOR ACTIVE JOB                  B8003010
         BZ    RINRTEST            BRANCH IF NO JCT                     B8003015
         OI    JCTJOBFL,JCTTSCAN   FORCE 'TYPRUN=SCAN'                  B8003020
         B     RINRLOOP            GET NEXT RECORD                      B8003025
*                                                                       B8003030
*                             WAIT FOR DIRECTION FROM SSSM              B8003035
*                                                                       B8003040
RINRWAIT DS    0H                                                       B8003045
         OI    RIDFLAGS,RIDBUSY    PERMIT SSSM TO OPERATE               B8003050
         $XMPOST RIDECBP           POST SSSM                            B8003055
RINRW1   $WAIT IO                  $WAIT FOR INPUT FROM SSSM            B8003060
         TM    RIDFLAGS,RIDEND     DID SSSM TERMINATE INTRDR            B8003065
         BO    RINREOF             BRANCH IF YES                        B8003070
         TM    RIDFLAGS,RIDBUSY    HAS SSSM COMPLETED ITS WORK          B8003075
         BZ    RINRLOOP            GET NEXT RECORD IF SO                B8003080
         B     RINRW1              OTHERWISE WAIT AGAIN                 B8003085
*                                                                       B8003090
*                             END-OF-FILE ON INTERNAL READER            B8003095
*                                                                       B8003100
RINREOF  OI    RDRSW,RDREOFSW      SET END-OF-FILE SWITCH               B8003105
         BR    RL1                 TAKE END-OF-FILE RETURN              B8003110
         DROP  RW                  DROP DCT ADDRESSABILITY           R4 B8003115
         EJECT                                                       R4 B8003120
RJEGET   TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH           R4 B8003125
         BNZR  RL1                 RETURN IF ON                      R4 B8003130
        $EXTP  GET,RDRDCT,RTPCARD  GET CARD IMAGE FROM RTAM          R4 B8003135
         BP    RDCKCOM             BRANCH IF SUCCESSFUL              R4 B8003140
         OI    RDRSW,RDREOFSW      SET END-OF-FILE SWITCH            R4 B8003145
         B     RDCKCOM             CHECK FOR OPERATOR COMMANDS       R4 B8003150
         SPACE 1                                                     R4 B8003155
RDRGET   LA    RPI,80(,RPI)        ADVANCE INPUT PTR TO NEXT CARD    R4 B8003160
         SPACE 1                                                     R4 B8003165
RGETEST  CL    RPI,RBIEND          TEST FOR END OF BUFFER               B8003170
         BNH   4(,RL1)             BRANCH IF NOT END OF BUFFER          B8003175
         TM    RDRSW,RDREOFSW      TEST FOR READER EOF                  B8003180
         BNZR  RL1                 RETURN IF READER EOF                 B8003185
         CLI   BUFECBCC,X'7F'      TEST FOR CARD READER ERROR           B8003190
         BE    READ                BRANCH IF NO ERROR                   B8003195
         ST    RL1,RLSAVE1         SAVE LINK REGISTER                   B8003200
         BAL   RL1,RJOBKILL        KILL JOB IN ERROR                    B8003205
         L     RL1,RLSAVE1         RESTORE LINK REGISTER                B8003210
         L     R1,RDRDCT           GET ADDRESS OF INPUT DCT             B8003215
         L     R1,DCTDCB-DCTDSECT(,R1)  GET ADDRESS OF DCB              B8003220
         L     R1,DCBDEBAD-DCBDSECT(,R1)  GET ADDRESS OF DEB            B8003225
         L     R1,DEBSUCBA-DEBDSECT(,R1)  GET ADDRESS OF UCB            B8003230
         TM    UCBFLB-UCBDSECT(R1),UCBIORST  TEST UCB STATUS            B8003235
         BZ    READ                BR IF DEVICE STILL ACCESSIBLE     R4 B8003240
         CLC   $RELEASE,=C'02'     TEST OS/VS2 RELEASE NUMBER        R4 B8003245
         BE    RDABORT             BR IF RELEASE 2                   R4 B8003250
         L     R15,CVTPTR          GET ADDRESS OF CVT                R4 B8003255
         CLC   CVTCRCA-CVT(,R15),=XL4'0'  TEST RECOVERY MODE         R4 B8003260
         BE    RDABORT             BR IF DEVICE NOT ACCESSIBLE       R4 B8003265
         SPACE 1                                                     R4 B8003270
READ    $EXCP  RDRDCT              INITIATE CARD READ PROGRAM           B8003275
         SPACE 1                                                     R4 B8003280
RWAIT   $WAIT  IO                  WAIT FOR COMPLETION OF READ          B8003285
         SPACE 1                                                     R4 B8003290
RDCKCOM  L     R1,RDRDCT           R1 = READER DCT ADDRESS           R4 B8003295
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY         B8003300
         TM    DCTFLAGS,DCTSTOP    TEST FOR STOP COMMAND                B8003305
         BO    RWAIT               BRANCH IF STOP COMMAND               B8003310
         TM    DCTFLAGS,DCTDELET+DCTRSTRT    TEST FOR DELETE            B8003315
         BNZ   RDELETE             BRANCH IF DELETE OR RESTART          B8003320
         L     R15,RJOB            GET ADDRESS OF JOB QUEUE ELEMENT     B8003325
         LTR   R15,R15             TEST                                 B8003330
         BZ    RDNOCOM             BRANCH IF NO ACTIVE JOB              B8003335
         USING JQEDSECT,R15        ESTABLISH JQE ADDRESSABILITY         B8003340
         TM    JQEFLAGS,QUEOPCAN   TEST JOB QUEUE FLAGS                 B8003345
         BZ    RDNOCOM             BRANCH IF NO JOB CANCEL              B8003350
         DROP  R15                 DROP JQE ADDRESSABILITY              B8003355
         SPACE 2                                                     R4 B8003360
RDELETE  DS    0H                                                    R4 B8003365
         NI    DCTFLAGS,255-DCTDELET-DCTRSTRT    TURN OFF FLAGS      R4 B8003370
         DROP  R1                  DROP DCT ADDRESSABILITY              B8003375
         ST    RL1,RLSAVE1         SAVE LINK REGISTER                   B8003380
         BAL   RL1,RJOBKILL        DELETE JOB                           B8003385
         L     RL1,RLSAVE1         RESTORE LINK REGISTER                B8003390
         SPACE 1                                                     R4 B8003395
RDNOCOM  TM    PCEID,PCERJEID      IS THIS A REMOTE TERMINAL         R4 B8003400
         BZ    RNOTRJE4            BRANCH IF NOT                     R4 B8003405
         TM    RDRSW,RDREOFSW      TEST END-OF-FILE SWITCH           R4 B8003410
         BZ    4(,RL1)             NORMAL RETURN IF NO END-OF-FILE   R4 B8003415
         BR    RL1                 OTHERWISE, TAKE END OF FILE RETURN   B8003420
         SPACE 3                                                     R4 B8003425
RNOTRJE4 TM    BUFECBCC,X'7F'      TEST FOR READ COMPLETE            R4 B8003430
         BZ    RWAIT               BRANCH IF READ NOT COMPLETE          B8003435
         XI    IOBSIOCC,RSIOCSWS   TEST FOR                             B8003440
         TM    IOBSIOCC,RSIOCC     SUCCESSFUL SIO                       B8003445
         BNZ   RDTEST              BRANCH IF NO CSW STORED              B8003450
         XC    IOBCSW(3),IOBCSW    INSURE COMMAND ADDRESS IS ZERO       B8003455
         MVI   BUFECBCC,X'41'      INSURE UNSUCCESSFUL READ COMPLETION  B8003460
         SPACE 1                                                     R4 B8003465
RDTEST   CLI   BUFECBCC,X'7F'      TEST COMPLETION CODE                 B8003470
         BE    RCOMP               BRANCH IF SUCCESSFUL READ COMPLETION B8003475
         TM    IOBCSW+3,RUNIEXCP   TEST CSW IN IOB FOR UNIT EXCEPTION   B8003480
         BZ    RDERR               INDICATE READ ERROR         @OZ10356 B8003485
         SPACE 1                                                     R4 B8003490
RDABORT  OI    RDRSW,RDREOFSW      SET READER END-OF-FILE SWITCH        B8003495
         SPACE 1                                                     R4 B8003500
         B     RCOMP               CONTINUE PROCESSING         @OZ10356 B8003505
RDERR   $IOERROR (R3)              LOG I/O ERROR               @OZ10356 B8003510
RCOMP    L     RW,IOBCSW-1         GET CSW CMD ADDR FROM IOB CSW        B8003515
         LA    RW,0(,RW)           CLEAR HIGH-ORDER BYTE                B8003520
         LTR   RW,RW               TEST COMMAND ADDRESS                 B8003525
         BZ    RCOMPZ              BRANCH IF ZERO                       B8003530
         AL    RW,=F'-8'           ADJUST TO POINT TO LAST COMMAND      B8003535
         L     R1,0(,RW)           GET COMMAND DATA ADDRESS             B8003540
         AH    R1,6(RW)            ADD COMMAND BYTE COUNT               B8003545
         SH    R1,IOBCSW+5         SUBTRACT BYTE COUNT RESIDUE          B8003550
         SL    R1,=F'80'           COMPUTE ADDRESS OF LAST CARD         B8003555
         LA    RW,0(,R1)           CLEAR HIGH-ORDER BYTE                B8003560
         SPACE 1                                                     R4 B8003565
RCOMPZ   ST    RW,RBIEND           SAVE FOR COMPARE                     B8003570
         L     RPI,RIBUFST         SET INPUT POINTER                 R4 B8003575
         ALR   RPI,RBI              TO FIRST CARD                    R4 B8003580
         B     RGETEST             GO BACK AND TEST                     B8003585
         EJECT                                                          B8003590
*********************************************************************** B8003595
*                                                                     * B8003600
*        RPUT -- SUBROUTINE TO ADD CARD TO OUTPUT BUFFER              * B8003605
*                                                                     * B8003610
*              FUNCTIONS -- 1) IF OUTPUT BUFFER IS FULL, TERMINATE    * B8003615
*                              WRITE, AND START NEXT OUTPUT BUFFER    * B8003620
*                           2) ADD CARD TO OUTPUT BUFFER              * B8003625
*                                                                     * B8003630
*              LINK REGISTER -- RL1                                   * B8003635
*                                                                     * B8003640
*              EXTERNAL ROUTINE -- RGETBUF                            * B8003645
*                                                                     * B8003650
*********************************************************************** B8003655
         SPACE 1                                                        B8003660
RPUT     LTR   JCT,JCT             TEST FOR JOB                      R4 B8003665
         BZ    RESETYPE            BRANCH IF FLUSHING                   B8003670
         L     R1,RBONEXT          GET OUTPUT POINTER                   B8003675
*B800*   TM    RCARDLRC,RDLMSKIP   TEST DELIMITER BYPASS SWITCH      R4 B8003680
*B800*   BO    RPUTNOCT            IGNORE DELIMITER IF SET           R4 B8003685
*B800*   CLC   0(2,RPI),RDRDLM     TEST FOR DELIMITER CARD           R4 B8003690
*B800*   BNE   RPUTEST             BRANCH IF NOT                     R4 B8003695
*B800*   TM    RDRSW,RXBJOBSW      TEST FOR EXECUTION BATCHING          B8003700
*B800*   BZ    RPUTERM             BRANCH IF NOT                        B8003705
         SPACE 2                                                        B8003710
RPUTEST  TM    RDRSW,RJCLSW        TEST CURRENT MODE                    B8003715
*B800*   BNO   RPUTINCR            BR IF NOT JCL FILE               R41 B8003720
         L     RW,RDRIOT           ADDR OF 1ST IOT                  R41 B8003725
         AL    RW,$IOTPDDB         ADDR OF 1ST PDDB                 R41 B8003730
         L     R15,PDBRECCT-PDBDSECT+IOTPDBOJ(,RW)  INCREMENT       R41 B8003735
         LA    R15,1(,R15)                           JCL FILE       R41 B8003740
         ST    R15,PDBRECCT-PDBDSECT+IOTPDBOJ(,RW)    RECORD COUNT  R41 B8003745
*B800*   B     RPUTNOCT            BR TO CONTINUE                   R41 B8003750
         SPACE 1                                                    R41 B8003755
RPUTINCR L     RW,JCTJOBIN         INCREMENT                        R41 B8003760
         LA    RW,1(,RW)            SYSIN                               B8003765
         ST    RW,JCTJOBIN           COUNT                              B8003770
         SPACE 2                                                        B8003775
RPUTNOCT NI    RCARDLRC,255-RDLMSKIP  RESET DLM BYPASS SWITCH        R4 B8003780
         LA    R15,0(,RPI)         ELIMINATE TRAILING BLANKS         R4 B8003785
         BCTR  R15,0               SET SCAN LIMIT                       B8003790
         L     R14,=F'-8'          SET SCAN DECREMENT TO -8             B8003795
         OI    RCARDLRC,LRC1CCTL   SET ON CARRIAGE CONTROL BIT   *B800* B8003800
         CLC   0(6,RPI),=C'**EOT ' IS IT A '/*EOT' CONTROL CARD? *B800* B8003805
         BE    RB800A              YES, SKIP NEXT 5 INSTRUCTIONS *B800* B8003810
         ICM   RW,15,APCESNXT      TEST IF 2ND APCE HAS BEEN ACQ.*B800* B8003815
         BZ    RB800A              NO, SKIP NEXT 3 INSTRUCTIONS  *B800* B8003820
         SLR   RW,RW               ZEROISE                       *B800* B8003825
         IC    RW,APCEUSER         LOAD RECORD LENGTH            *B800* B8003830
         LA    RW,7(,RW)            AND                          *B800* B8003835
         NR    RW,R14                ROUND TO DOUBLE WORD        *B800* B8003840
         B     RPUTJCL             GO TO RPUTJCL                 *B800* B8003845
RB800A   DS    0H                  DEAL WITH CONTROL CARDS       *B800* B8003850
         LA    RW,80               ASSUME JCL FILE                      B8003855
         TM    RDRSW,RJCLSW        TEST CURRENT MODE                    B8003860
         BO    RPUTJCL             FORCE JCL LRECL TO 80                B8003865
         IC    RW,RCARDLRL         GET LOGICAL RECORD LENGTH            B8003870
         LA    RW,7(,RW)            AND                                 B8003875
         NR    RW,R14                ROUND TO DOUBLE WORD               B8003880
         TM    RCARDLRC,LRC1INUL+LRC1ONUL  TEST RECORD CONTROL BYTE  R4 B8003885
         BO    RPUTJCL             BRANCH IF CONTROL RECORD          R4 B8003890
         OC    RCARDLRC,RINFLAG1   ADD INPUT FLAGS TO LRC            R4 B8003895
         EJECT                                                       R4 B8003900
RPUTJCL  LA    RW,0(RW,RPI)        SET SCAN POINTER TO END OF RECORD    B8003905
         BXLE  RW,R14,RPUTBLNK     DECREMENT POINTER BY EIGHT           B8003910
         CLC   0(8,RW),RKBLANKS    CHECK FOR DOUBLE WORD OF BLANKS      B8003915
         BE    *-10                IF EIGHT BLANKS, KEEP GOING          B8003920
         SLR   RW,R14              NO, INCREMENT POINTER BY EIGHT       B8003925
         L     R14,=F'-1'          RESET SCAN DECREMENT TO -1           B8003930
         BXLE  RW,R14,RPUTBLNK     DECREMENT POINTER BY ONE             B8003935
         CLI   0(RW),C' '          CHECK FOR BLANK                      B8003940
         BE    *-8                 IF BLANK, KEEP GOING                 B8003945
         SR    RW,R15              GENERATE TRUNCATED LENGTH            B8003950
         BP    *+8                 BYPASS SPECIAL PROCESSING            B8003955
RPUTBLNK LA    RW,1                FORCE ALL-BLANK CARD TO ONE BLANK    B8003960
         STC   RW,RCARDLEN         SET CARD LENGTH                      B8003965
         TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B8003970
         BZ    *+8                 BRANCH IF NO CARRIAGE CONTROL     R4 B8003975
         LA    RW,1(,RW)           BUMP LENGTH FOR CARRIAGE CONTROL  R4 B8003980
         ALR   RW,R1               ADD CURRENT POINTER                  B8003985
         CL    RW,RBOEND           TEST FOR END OF OUTPUT BUFFER        B8003990
         BL    RPUTCOPY            BRANCH IF NOT END OF BUFFER          B8003995
         MVI   0(R1),X'FF'         SET LAST RCB                         B8004000
         BAL   RL2,RTRACK          GET NEXT TRACK ADDRESS               B8004005
         L     RW,RDROBUF          GET ADDRESS OF BUFFER             R4 B8004010
         ST    RW,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B8004015
         MVC   PCESEEK,RBUFTRK(RW)  SET TRACK ADDRESS FOR $EXCP      R4 B8004020
         ST    R1,RBUFTRK(,RW)     SET CHAIN TRACK                   R4 B8004025
         LR    RW,R1               SAVE NEXT TRACK                      B8004030
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8004035
        $EXCP  (R1)                INITIATE WRITE                       B8004040
         BAL   RL2,RGETBUF         GET NEXT BUFFER                      B8004045
         SPACE 2                                                     R4 B8004050
RPUTCOPY MVC   0(3,R1),RCARDLEN    SET RECORD LENGTH, LRC, AND LRECL R4 B8004055
         TM    RDRSW,RJCLSW        TEST CURRENT MODE                 R4 B8004060
         BZ    RPUTNJCL            BRANCH IF NOT JCL FILE            R4 B8004065
         MVI   LRCLRECL-LRCDSECT(R1),80  FORCE JCL LRECL TO 80       R4 B8004070
         TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B8004075
         BZ    RPUTNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B8004080
         MVI   LRCLRECL-LRCDSECT(R1),79  FORCE LRECL TO 79           R4 B8004085
         SPACE 1                                                     R4 B8004090
RPUTNJCL TM    RCARDLRC,LRC1CCTL   TEST RECORD CONTROL BYTE          R4 B8004095
         BZ    RPUTNOCC            BRANCH IF NO CARRIAGE CONTROL     R4 B8004100
         MVC   LRCCCTL-LRCDSECT(,R1),RDRCCTL  SET CARRIAGE CONTROL   R4 B8004105
         LA    R1,1(,R1)           INCREMENT TEXT ADDRESS            R4 B8004110
         SPACE 1                                                     R4 B8004115
RPUTNOCC SLR   R15,R15             CLEAR REGISTER                    R4 B8004120
         IC    R15,RCARDLEN        GET CARD LENGTH                   R4 B8004125
         EX    R15,RPUTMOVE        MOVE TEXT                         R4 B8004130
         LA    R1,3(R1,R15)        ADVANCE                           R4 B8004135
         ST    R1,RBONEXT           OUTPUT POINTER                   R4 B8004140
         SPACE 1                                                     R4 B8004145
RESETYPE MVI   RCARDLRC,0          RESET CARD TYPE                      B8004150
         BR    RL1                 RETURN                               B8004155
         EJECT                                                          B8004160
RPUTERM  MVI   0(R1),X'FF'         SET LAST RCB                         B8004165
         L     R1,RDROBUF          GET BUFFER ADDRESS                R4 B8004170
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B8004175
         MVC   PCESEEK,RBUFTRK(R1)  SET TRACK ADDRESS FOR $EXCP      R4 B8004180
         SR    RW,RW               TERMINATE                            B8004185
         ST    RW,RBUFTRK(,R1)      TRACK CHAIN                      R4 B8004190
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8004195
        $EXCP  (R1)                INITIATE WRITE                       B8004200
         L     R1,RDRIOT           GET ADDRESS OF FIRST IOT             B8004205
         ICM   RW,15,IOTIOT-IOTDSECT(R1)  FIND                          B8004210
         BZ    *+10                        END OF                       B8004215
         LR    R1,RW                        IOT                         B8004220
         B     *-10                          CHAIN                      B8004225
         L     RW,IOTPDDBP-IOTDSECT(,R1)  RW = ADDRESS OF               B8004230
         ALR   RW,R1                       CURRENT PDDB                 B8004235
         L     R0,JCTJOBIN         GET CURRENT CARD COUNT               B8004240
         S     R0,PDBRECCT-PDBDSECT(,RW)  COMPUTE DATA SET CARD COUNT   B8004245
         ST    R0,PDBRECCT-PDBDSECT(,RW)   AND STORE IN PDDB            B8004250
         LA    RW,PDBLENG(,RW)     ADVANCE TO NEXT PDDB                 B8004255
         SLR   RW,R1               GET DISPLACEMENT                     B8004260
         ST    RW,IOTPDDBP-IOTDSECT(,R1)  SAVE PDDB DISPLACEMENT        B8004265
         MVC   RDRDSKEY,=H'1'      SET JCL DATA KEY                     B8004270
         L     RW,RJCLTRAK         RW = NEXT JCL TRACK                  B8004275
         BAL   RL2,RGETBUF         GET NEXT JCL BUFFER                  B8004280
         BR    RL1                 RETURN                               B8004285
         SPACE 3                                                     R4 B8004290
*        EXECUTE  ONLY                                               R4 B8004295
RPUTMOVE MVC   3(*-*,R1),0(RPI)    INSTRUCTION TO MOVE TEXT          R4 B8004300
RKSCANSW EQU   $POSTSAV+16,4       *** MODEL EXECUTE STATEMENT ***   R4 B8004305
         EJECT                                                          B8004310
*********************************************************************** B8004315
*                                                                     * B8004320
*        RJOBKILL -- SUBROUTINE TO DELETE CURRENT JOB                 * B8004325
*                                                                     * B8004330
*              FUNCTIONS -- 1) TEST FOR ACTIVE JOB                    * B8004335
*                           2) NOTIFY OPERATOR OF DELETION            * B8004340
*                           3) TERMINATE JOB                          * B8004345
*                           4) PLACE JOB IN PRINT QUEUE               * B8004350
*                                                                     * B8004355
*              LINK REGISTER -- RL1                                   * B8004360
*                                                                     * B8004365
*              EXTERNAL ROUTINES -- 1) RJCTTERM                       * B8004370
*                                   2) RJOBTERM                       * B8004375
*                                                                     * B8004380
*********************************************************************** B8004385
         SPACE 3                                                        B8004390
RJOBKILL LTR   JCT,JCT             KILL JOB NOW BEING READ              B8004395
         BZR   RL1                 RETURN IF NO JCT                     B8004400
        $WTO   RDELMSG,L'RDELMSG,JOB=YES,           NOTIFY OPERATOR    CB8004405
               ROUTE=$LOG+$UR,CLASS=$ALWAYS,PRI=$ST  OF JOB KILL Z10356 B8004410
         MVI   JCTOPRIO,X'FF'      SET OUTPUT PRIORITY IN JCT           B8004415
         BAL   RL2,RJCTTERM        PERFORM FINAL UPDATE OF JCT          B8004420
         BAL   RL2,RJOBTERM        TERMINATE JOB                        B8004425
         OI    RDRSW,RJFLUSH       TURN ON FLUSH SWITCH                 B8004430
        $QSUSE                     REQUEST ACCESS TO CHECKPOINT DATA    B8004435
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B8004440
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B8004445
         NI    JQEFLAGS,255-QUEHOLD1  RESET JOB HOLD STATUS             B8004450
        $QPUT  (R1),$OUTPUT        PLACE JOB IN PRINT QUEUE             B8004455
         XC    RJOB,RJOB           CLEAR ADDRESS OF JOB QUEUE ELEMENT   B8004460
         DROP  R1                  DROP JQE ADDRESSABILITY              B8004465
         BR    RL1                 RETURN                               B8004470
         EJECT                                                          B8004475
*********************************************************************** B8004480
*                                                                     * B8004485
*        RJCTTERM -- SUBROUTINE TO PERFORM FINAL UPDATE OF JCT        * B8004490
*                                                                     * B8004495
*              FUNCTIONS -- 1) CONVERT TIME ESTIMATE TO SECONDS       * B8004500
*                           2) COMPUTE OUTPUT ESTIMATE FROM LINE      * B8004505
*                              AND CARD ESTIMATES                     * B8004510
*                                                                     * B8004515
*              LINK REGISTER -- RL2                                   * B8004520
*                                                                     * B8004525
*********************************************************************** B8004530
         SPACE 5                                                        B8004535
RJCTTERM L     R1,JCTETIME         CONVERT TIME ESTIMATE                B8004540
         M     R0,=F'60'            FROM MINUTES                        B8004545
         ST    R1,JCTETIME           TO SECONDS                         B8004550
         SPACE 2                                                        B8004555
         L     R1,JCTESTLN         MULTIPLY                             B8004560
         M     R0,=F'1000'          ESTIMATED LINE COUNT                B8004565
         ST    R1,JCTESTLN           BY 1000                            B8004570
         AL    R1,JCTESTPU            AND ADD ESTIMATED CARD COUNT      B8004575
         ST    R1,JCTESOUT             FOR ESTIMATED OUTPUT             B8004580
         BR    RL2                 RETURN                               B8004585
         EJECT                                                          B8004590
*********************************************************************** B8004595
*                                                                     * B8004600
*        RJOBTERM -- SUBROUTINE TO TERMINATE JOB                      * B8004605
*                                                                     * B8004610
*              FUNCTIONS -- 1) ADD TERMINATION MESSAGE                * B8004615
*                           2) TERMINATE AND WRITE LAST OUTPUT BUFFER * B8004620
*                           3) COMPLETE JOB CONTROL TABLE             * B8004625
*                           4) WRITE JCT                              * B8004630
*                           5) WRITE IOT                              * B8004635
*                                                                     * B8004640
*              LINK REGISTER -- RL2                                   * B8004645
*                                                                     * B8004650
*              EXTERNAL ROUTINE -- RPUT                               * B8004655
*                                                                     * B8004660
*********************************************************************** B8004665
         SPACE 5                                                        B8004670
RJOBTERM ST    RL1,RLSAVE2         SAVE                                 B8004675
         ST    RL2,RLSAVE3          RETURN REGISTERS                    B8004680
         ICM   RPI,8,RCARDLRL      SAVE CURRENT CARD LENGTH             B8004685
         ST    RPI,RSAVE2           AND ADDRESS                         B8004690
         TM    JCTJOBFL,JCTTCOPY   TEST JOB FLAGS                       B8004695
         BO    RTRCOPY             BRANCH IF 'TYPRUN=COPY'              B8004700
         LA    RPI,RDRDLM          GET ADDRESS OF DELIMITER CARD        B8004705
         TM    RDRSW,RJCLSW        TEST JCL SWITCH                      B8004710
         BO    *+8                 BRANCH IF PROCESSING JCL             B8004715
         BAL   RL1,RPUT            ADD DELIMITER CARD TO OUTPUT FILE    B8004720
         TM    RDRSW,RXBJOBSW      TEST FOR EXECUTION BATCHING       R4 B8004725
         BZ    RNOBATCH            BRANCH IF NOT EXECUTION BATCHING  R4 B8004730
         OI    RCARDLRC,LRC1ONUL   INDICATE INTERNALLY GENERATED     R4 B8004735
         LA    RPI,=CL80'//'       GET ADDRESS OF NULL CARD          R4 B8004740
         BAL   RL1,RPUT            ADD NULL CARD TO OUTPUT FILE         B8004745
         OI    JCTJOBFL,JCTNOJNL   FORCE NO JOURNAL                     B8004750
         SPACE 1                                                     R4 B8004755
RNOBATCH B     RTRCOPY             SKIP NEXT SIX INSTRUCTIONS    *B800* B8004760
*NOBATCH LA    RPI,RJOBDOC         GET ADDRESS OF MESSAGE     R4 *B800* B8004765
         OI    RCARDLRC,LRC1CCTL+LRC1TASA+LRC1INUL+RDLMSKIP SET TYPE R4 B8004770
         MVI   RDRCCTL,C'-'        FORCE TRIPLE SPACE                R4 B8004775
         MVI   RCARDLRL,80         SET CARD LENGTH TO 80                B8004780
         MVI   RINFLAG1,0          CLEAR 'INPUT' FLAG                R4 B8004785
         BAL   RL1,RPUT            ADD JOB DELETED OR CANCELLED MESSAGE B8004790
         SPACE 2                                                        B8004795
RTRCOPY  L     R1,RBONEXT          SET                                  B8004800
         MVI   0(R1),X'FF'          LAST RCB                            B8004805
         L     RW,RDROBUF          GET BUFFER ADDRESS                R4 B8004810
         ST    RW,PCEBUFAD         SET BUFFER ADDRESS FOR $EXCP      R4 B8004815
         MVC   PCESEEK,RBUFTRK(RW)  SET TRACK ADDRESS FOR $EXCP      R4 B8004820
         XC    RBUFTRK(,RW),RBUFTRK(RW)  ZERO CHAIN TRACK            R4 B8004825
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8004830
        $EXCP  (R1)                INITIATE WRITE                       B8004835
         EJECT                                                       R4 B8004840
         L     R1,RDROCT           GET ADDRESS OF OCT                   B8004845
         LTR   R1,R1               TEST                                 B8004850
         BZ    RNOOCT              BRANCH IF NO OCT                     B8004855
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS                   B8004860
         MVC   PCESEEK,OCTTRACK-OCTDSECT(R1)  SET TRACK ADDRESS         B8004865
         LA    R1,PCEDADCT         SET ADDRESS OF DIRECT-ACCESS DCT     B8004870
        $EXCP  (R1)                INITIATE WRITE OF OCT                B8004875
         SR    R1,R1               INDICATE                             B8004880
         ST    R1,RDROCT            NO OUTPUT CONTROL TABLE             B8004885
         SPACE 2                                                        B8004890
RNOOCT   L     R1,RDRIOT           GET ADDRESS OF FIRST IOT             B8004895
         AL    R1,$IOTPDDB         GET ADDRESS OF FIRST PDDB         R4 B8004900
         SR    R15,R15             GET                                  B8004905
*        IC    R15,JCTMCLAS         MESSAGE CLASS                *B800* B8004910
         IC    R15,=C'A'            MESSAGE CLASS ALWAYS 'A'     *B800* B8004915
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOJ(,R1)  SET IN JCL PDDB, R4 B8004920
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOL(,R1)   JOB LOG PDDB,   R4 B8004925
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOI(,R1)    JCL IMGS PDDB, R4 B8004930
         STC   R15,PDBCLASS-PDBDSECT+IOTPDBOM(,R1)     AND MSGS PDDB R4 B8004935
         CLI   JCTMCLAS,C'A'       IS CLASS = A?                 *B800* B8004940
         BE    *+10                YES,SKIP NEXT INSTRUCTION     *B800* B8004945
         MVC   PDBCLASS-PDBDSECT+IOTPDBOJ(L'PDBCLASS,R1),JCTMCLAS B800* B8004950
         L     R14,$SSVT           GET ADDRESS OF SSVT                  B8004955
         LA    R15,$SVSCAT-SSVT(R14,R15)  GET ADDRESS OF SCAT ENTRY     B8004960
         TM    SCATFLAG-SCADSECT(R15),SCATDUMM  TEST                    B8004965
         BO    RMCLDUMM            BRANCH IF MESSAGE CLASS IS DUMMY     B8004970
         TM    SCATFLAG-SCADSECT(R15),SCATTCEL  TEST FOR TRACK-CELL  R4 B8004975
         BNO   RNOOCT1             BR IF NOT                         R4 B8004980
         OI    PDBFLAG2-PDBDSECT+IOTPDBOI(R1),PDB2TCEL  TRACK-CELL   R4 B8004985
         OI    PDBFLAG2-PDBDSECT+IOTPDBOM(R1),PDB2TCEL   SYSTEM      R4 B8004990
         OI    PDBFLAG2-PDBDSECT+IOTPDBOL(R1),PDB2TCEL    PDDB'S     R4 B8004995
RNOOCT1  DS    0H                                                    R4 B8005000
         TM    JCTJOBFL,JCTNOUPT   TEST JOB FLAGS                       B8005005
         BO    RMCLDUMM            BRANCH IF NO OUTPUT OPTION           B8005010
         TM    JCTJBOPT,JCTNOLOG   TEST JOB OPTIONS                     B8005015
         BO    RNOLOG              BRANCH IF NOLOG OPTION               B8005020
         B     RFORMS              SET JOB FORMS                        B8005025
         SPACE 2                                                     R4 B8005030
RMCLDUMM OI    PDBFLAG1-PDBDSECT+IOTPDBOJ(R1),PDB1NSOT PRINT NO JCL, R4 B8005035
         OI    PDBFLAG1-PDBDSECT+IOTPDBOI(R1),PDB1NSOT  JCL IMAGES,  R4 B8005040
         OI    PDBFLAG1-PDBDSECT+IOTPDBOM(R1),PDB1NSOT   OR SYS MSGS R4 B8005045
         SPACE 1                                                     R4 B8005050
RNOLOG   OI    PDBFLAG1-PDBDSECT+IOTPDBOL(R1),PDB1NSOT  NO JOB LOG   R4 B8005055
         SPACE 1                                                     R4 B8005060
RFORMS   L     R15,JCTFORMS        GET JOB FORMS                        B8005065
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOJ(,R1)  SET IN JCL PDDB, R4 B8005070
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOL(,R1)   JOB LOG PDDB,   R4 B8005075
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOI(,R1)    JCL IMAGES,    R4 B8005080
         ST    R15,PDBFORMS-PDBDSECT+IOTPDBOM(,R1)     AND SYS MSGS  R4 B8005085
         EJECT                                                  OZ11741 B8005090
         TM    JCTFLAG1,JCTBURST   GET DEFAULT BURST OPTION     OZ11741 B8005095
         BZ    RJQECKP             BR IF NO, ELSE SET B=Y IN    OZ11741 B8005100
         OI    PDBFLAG2-PDBDSECT+IOTPDBOJ(R1),PDB2BRST  JCL PDDBOZ11741 B8005105
         OI    PDBFLAG2-PDBDSECT+IOTPDBOL(R1),PDB2BRST  JOB LOG OZ11741 B8005110
         OI    PDBFLAG2-PDBDSECT+IOTPDBOI(R1),PDB2BRST  JCL IMG OZ11741 B8005115
         OI    PDBFLAG2-PDBDSECT+IOTPDBOM(R1),PDB2BRST  AND SMB OZ11741 B8005120
         SPACE 1                                                OZ11741 B8005125
RJQECKP $QSUSE                     REQUEST ACCESS TO CKPT DATA  OZ11741 B8005130
         L     R1,RJOB             GET ADDRESS OF JOB QUEUE ELEMENT     B8005135
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B8005140
        $QCKPT (R1)                FORCE CKPT OF JQE                 R4 B8005145
         TM    JCTJBOPT,JCTSETUP   TEST JOB OPTIONS                     B8005150
         BZ    *+8                 BRANCH IF NO SETUP CARDS             B8005155
         OI    JQEFLAGS,QUEHOLD1   PLACE JOB IN HOLD STATUS             B8005160
         MVC   JQEPRTRT,JCTPROUT   SET PRINT AND                        B8005165
         MVC   JQEPUNRT,JCTPUOUT    PUNCH ROUTE CODES                   B8005170
         TM    RDRSW2,RJCLH        IF IMMEDIATE HOLD                 R4 B8005175
         BZ    RNOHOLD               SPECIFIED, TURN ON JQE          R4 B8005180
         OI    JQEFLAGS,QUEHOLD1     HOLD BIT & ISSUE $WTO           R4 B8005185
        $WTO   RJOBHELD,L'RJOBHELD,JOB=YES, ISSUE 'JOB HELD' MSG     R4CB8005190
               ROUTE=$LOG+$UR+$MAIN,CLASS=$NORMAL,PRI=$ST            R4 B8005195
        $QSUSE                     RE-GAIN QUEUE ACCESS AFTER $WTO   R4 B8005200
RNOHOLD  DS    0H                                                    R4 B8005205
         DROP  R1                  DROP JQE ADDRESSABILITY              B8005210
         XC    JCTJOBIN,JCTJOBIN   CLEAR JCTJOBIN                       B8005215
        $TIME                      GET CURRENT TIME                     B8005220
         STM   R0,R1,JCTRDROF      SET READER END TIME AND DATE         B8005225
         SPACE 2                                                        B8005230
RJCTCK   CLI   BUFECBCC-BUFDSECT(JCT),0  TEST I/O STATUS OF JCT         B8005235
         BNE   RJCTWR              BRANCH IF I/O IS NOT ACTIVE          B8005240
        $WAIT  IO                  WAIT FOR I/O TO COMPLETE             B8005245
         B     RJCTCK              GO BACK AND TRY AGAIN                B8005250
         SPACE 2                                                     R4 B8005255
RJCTWR   ST    JCT,PCEBUFAD        SET BUFFER ADDRESS FOR $EXCP         B8005260
         L     R1,RJOB             GET ADDR OF JOB QUEUE ELEMENT        B8005265
         USING JQEDSECT,R1         ESTABLISH JQE ADDRESSABILITY         B8005270
         MVC   PCESEEK,JQETRAK     SET TRACK ADDRESS FOR $EXCP          B8005275
         DROP  R1                  DROP JQE ADDRESSABILITY              B8005280
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8005285
        $EXCP  (R1)                INITIATE WRITE OF JCT                B8005290
         SLR   JCT,JCT             INDICATE NO JCT                      B8005295
         L     R1,RDRIOT           GET ADDRESS OF IOT                R4 B8005300
         SPACE 2                                                     R4 B8005305
RIOTCK   CLI   BUFECBCC-BUFDSECT(R1),0  TEST I/O STATUS                 B8005310
         BNE   RIOTWR              BRANCH IF I/O IS NOT ACTIVE          B8005315
        $WAIT  IO                  WAIF FOR I/O TO COMPLETE             B8005320
         B     RIOTCK              GO BACK AND TRY AGAIN                B8005325
         SPACE 2                                                     R4 B8005330
RIOTWR   ICM   R1,15,RDRIOT        GET ADDRESS OF NEXT IOT              B8005335
         BZ    RSYNCH              BRANCH IF DONE                       B8005340
         MVC   RDRIOT,IOTIOT-IOTDSECT(R1)  REMOVE IOT FROM CHAIN        B8005345
         ST    JCT,IOTIOT-IOTDSECT(,R1)  CLEAR CHAIN FIELD              B8005350
         ST    R1,PCEBUFAD         SET BUFFER ADDRESS                   B8005355
         MVC   PCESEEK,IOTTRACK-IOTDSECT(R1)  SET TRACK ADDRESS         B8005360
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8005365
        $EXCP  (R1)                INITIATE WRITE OF IOT                B8005370
         B     RIOTWR              WRITE NEXT IOT (IF ONE)              B8005375
         SPACE 2                                                     R4 B8005380
RSYNCH   CLI   PCEBUFCT,0          TEST ACTIVE BUFFER COUNT             B8005385
         BE    RTERMJOB            BRANCH IF ZERO                       B8005390
        $WAIT  BUF                 WAIT FOR COMPLETION OF ALL I/O       B8005395
         B     RSYNCH              TRY AGAIN                            B8005400
         SPACE 2                                                        B8005405
RTERMJOB MVC   RPRIORTY,=CL2' '    RESET PRIORITY                    R4 B8005410
         NI    RDRSW,255-RXBJOBSW  RESET XEQ BATCH JOB SWITCH           B8005415
         L     RPI,RSAVE2          RESTORE INPUT POINTER                B8005420
         STCM  RPI,8,RCARDLRL       AND CARD LENGTH                     B8005425
         LA    RPI,0(,RPI)         CLEAR HIGH-ORDER BYTE                B8005430
         L     RL1,RLSAVE2         RESTORE                              B8005435
         L     RL2,RLSAVE3          RETURN REGISTERS                    B8005440
         BR    RL2                   AND RETURN                         B8005445
         DROP  RBI                 KILL IOB ADDRESSABILITY              B8005450
         EJECT                                                          B8005455
*********************************************************************** B8005460
*                                                                     * B8005465
*        RTRACK -- SUBROUTINE TO ACQUIRE TRACK ADDRESS                * B8005470
*                                                                     * B8005475
*              FUNCTION -- TO ACQUIRE TRACK ADDRESS AND CHECKPOINT    * B8005480
*                          ALLOCATION IOT WHEN NECESSARY              * B8005485
*                                                                     * B8005490
*              OUTPUT -- R1 = TRACK ADDRESS                           * B8005495
*                                                                     * B8005500
*              LINK REGISTER -- RL2                                   * B8005505
*                                                                     * B8005510
*********************************************************************** B8005515
         SPACE 5                                                        B8005520
RTRACK   L     R1,RDRIOT           GET ADDRESS OF ALLOCATION IOT        B8005525
         LA    R1,IOTMSTAB-IOTDSECT(,R1) GET ADDR OF MASTER TAB      R4 B8005530
        $TRACK (R1)                GET NEXT TRACK ADDRESS               B8005535
         BNZR  RL2                 RETURN IF NOT NEW TRACK GROUP        B8005540
         SPACE 2                                                        B8005545
         L     R1,RDRIOT           GET ADDRESS OF ALLOCATION IOT        B8005550
RTRACKCK CLI   BUFECBCC-BUFDSECT(R1),0  TEST I/O STATUS                 B8005555
         BNE   RTRACKWR            BRANCH IF I/O IS NOT ACTIVE          B8005560
        $WAIT  IO                  WAIT FOR I/O TO COMPLETE             B8005565
         B     RTRACKCK            GO BACK AND TRY AGAIN                B8005570
         SPACE 3                                                     R4 B8005575
RTRACKWR ST    R1,PCEBUFAD         SET IOT BUFFER ADDRESS               B8005580
         MVC   PCESEEK,IOTTRACK-IOTDSECT(R1)  SET TRACK ADDRESS         B8005585
         ST    SAVE,PCEIOEWF       PREVENT BUFFER RELEASE               B8005590
         LA    R1,PCEDADCT         GET ADDRESS OF DIRECT-ACCESS DCT     B8005595
        $EXCP  (R1)                INITIATE WRITE OF IOT                B8005600
         SLR   R1,R1               RESET DIRECT-ACCESS                  B8005605
         ST    R1,PCEIOEWF          EVENT WAIT FIELD                    B8005610
         L     R1,RDRIOT           RESTORE TRACK ADDRESS TO OUTPUT      B8005615
         L     R1,TABMTTR-TABDSECT+IOTMSTAB-IOTDSECT(,R1)  REGISTER  R4 B8005620
         BR    RL2                 RETURN                               B8005625
         EJECT                                                          B8005630
*********************************************************************** B8005635
*                                                                     * B8005640
*        RGETBUF -- SUBROUTINE TO INITIALIZE OUTPUT BUFFERS           * B8005645
*                                                                     * B8005650
*              FUNCTION -- ACQUIRE AND INITIALIZE OUTPUT BUFFER       * B8005655
*                                                                     * B8005660
*              INPUT -- RW = TRACK ADDRESS                            * B8005665
*                                                                     * B8005670
*              OUTPUT -- RBO = ADDRESS OF OUTPUT BUFFER               * B8005675
*                                                                     * B8005680
*              LINK REGISTER -- RL2                                   * B8005685
*                                                                     * B8005690
*********************************************************************** B8005695
         SPACE 5                                                        B8005700
RGETBUF $GETBUF WAIT=YES           GET OUTPUT BUFFER                 R4 B8005705
         ST    R1,RDROBUF          SAVE BUFFER ADDRESS               R4 B8005710
         ST    RW,RBUFTRK(,R1)     SET TRACK ADDRESS IN BUFFER       R4 B8005715
         LTR   JCT,JCT             TEST FOR JCT                         B8005720
         BZ    *+10                BRANCH IF NO JCT                     B8005725
         MVC   HDBJBKEY-BUFDSECT(,R1),JCTJBKEY  SET JOB KEY          R4 B8005730
         MVC   HDBPDDBK-BUFDSECT(,R1),RDRDSKEY   AND DATA SET KEY    R4 B8005735
         LA    R15,BUFSTART-BUFDSECT-3(,R1)  COMPUTE END             R4 B8005740
         AH    R15,$BUFSIZE                   OF BUFFER              R4 B8005745
         ST    R15,RBOEND          SAVE FOR TEST                     R4 B8005750
         LA    R1,ROBUFST(,R1)     SET UP                            R4 B8005755
         ST    R1,RBONEXT           OUTPUT POINTER                      B8005760
         BR    RL2                 RETURN                               B8005765
         EJECT                                                          B8005770
*                                                                       B8005775
*                             READER CONSTANTS AND OPERATOR MESSAGES    B8005780
*                                                                       B8005785
         SPACE 3                                                        B8005790
RUSERID  EQU   $POSTSAV,9          TSU USERID WORK AREA              R4 B8005795
RDEST    EQU   $POSTSAV,8          DESTINATION WORK AREA             R4 B8005800
         DS    0D                                                    R4 B8005805
RKBLANKS DC    CL8' '              BLANK CONSTANT                    R4 B8005810
RJOBHELD $MSG  101,'HELD'          JOB HELD MSG                      R4 B8005815
RDELMSG  $MSG  119,'DELETED'                                            B8005820
RJOBDOC  DC    C'******** ERROR OF LOGIC IN JES2B800, CONT'  R4  *B800* B8005825
         DC    C'ACT T.S.G. BRUSSELS. ***************** '    R4  *B800* B8005830
         EJECT                                                          B8005835
         LTORG                                                          B8005840
         SPACE 1                                                        B8005845
         END                                                            B8005850
