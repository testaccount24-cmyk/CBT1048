         TITLE 'BUDGIE3B - INTERNAL MACROS'                             B 000010
         MACRO                                                          B 000020
         $CB   &PRINT=OFF                                               B 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        B 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           B 000050
               TITLE 'CBPREFIX - CONTROL BLOCK PREFIX'                  B 000060
      CBPREFIX ,                   GENERATE DSECT                       B 000070
               TITLE 'CB02 - CB02 CONTROL BLOCK'                        B 000080
         CB02  ,                   GENERATE DSECT                       B 000090
               TITLE 'CB03 - CB03 CONTROL BLOCK'                        B 000100
         CB03  ,                   GENERATE DSECT                       B 000110
               TITLE 'CB04 - CB04 CONTROL BLOCK'                        B 000120
         CB04  ,                   GENERATE DSECT                       B 000130
               TITLE 'CB05 - CB05 CONTROL BLOCK'                        B 000140
         CB05  ,                   GENERATE DSECT                       B 000150
               TITLE 'CB11 - PRIMARY MS11 CONTROL BLOCK'                B 000160
         CB11  ,                   GENERATE DSECT                       B 000170
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     B 000180
         CCB   ,                   GENERATE DSECT                       B 000190
               TITLE '     - CSECT IDENTIFICATION PREFIX'               B 000200
       CSECTID ,                   GENERATE DSECT                       B 000210
               TITLE '     - GENERAL EQUATES'                           B 000220
       EQUATES ,                   GENERATE EQUATES                     B 000230
               TITLE 'MS00 - MS00 CONTROL CARD'                         B 000240
         MS00  ,                   GENERATE DSECT                       B 000250
               TITLE 'MS01 - MS01 CONTROL CARD'                         B 000260
         MS01  ,                   GENERATE DSECT                       B 000270
               TITLE 'MS02 - MS02 CONTROL CARD'                         B 000280
         MS02  ,                   GENERATE DSECT                       B 000290
               TITLE 'MS03 - MS03 CONTROL CARD'                         B 000300
         MS03  ,                   GENERATE DSECT                       B 000310
               TITLE 'MS04 - MS04 CONTROL CARD'                         B 000320
         MS04  ,                   GENERATE DSECT                       B 000330
               TITLE 'MS05 - MS05 CONTROL CARD'                         B 000340
         MS05  ,                   GENERATE DSECT                       B 000350
               TITLE 'MS11 - MS11 CONTROL CARD'                         B 000360
         MS11  ,                   GENERATE DSECT                       B 000370
               TITLE '     - STORAGE POOL DESCRIPTOR BLOCK'             B 000380
      POOLDEFN ,                   GENERATE DSECT                       B 000390
               TITLE 'SB11 - SECONDARY CB11 CONTROL BLOCK'              B 000400
         SB11  ,                   GENERATE DSECT                       B 000410
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        B 000420
         MEND                                                           B 000430
         SPACE 5                                                        B 000440
BUDGIE3B CSECT                                                          B 000450
         $CB   ,                   GENERATE DSECTS AND EQUATES          B 000460
         TITLE 'BUDGIE3B - CONTROL CARD PROCESSING'                     B 000470
        SCSECT B                   DEFINE START OF CSECT BUDGIE3B       B 000480
         ENTRY READCC              PROCESS CONTROL CARDS                B 000490
         TITLE 'BUDGIE3B - CONTROL CARD PROCESSING'                     B 000500
*********************************************************************** B 000510
*        CONTROL CARD PROCESSING - MAIN-LINE                          * B 000520
*********************************************************************** B 000530
         SPACE 1                                                        B 000540
READCC   SUBIN SAVE=R4             PRESERVERETURN ADDRESS               B 000550
         CBAL  R4,CCINIT           PREPARE TO READ CONTROL CARDS        B 000560
CCREAD   CBAL  R4,READIN           GET CONTROL CARD                     B 000570
         BNE   CCREAD1             BR IF EOF ON SYSIN                   B 000580
         CBAL  R4,CCPROC           PROCESS CONTROL CARD                 B 000590
         B     CCREAD              GO GET NEXT CONTROL CARD             B 000600
CCREAD1  CBAL  R4,CCTERM           YERMINATE CONTROL CARD PROCESSING    B 000610
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   B 000620
         EJECT                                                          B 000630
*********************************************************************** B 000640
*        PREPARE TO READ CONTROL CARS                                 * B 000650
*********************************************************************** B 000660
         SPACE 1                                                        B 000670
CCINIT   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 000680
         OI    SWINIT,SWCCPRNT     INDCTAE C/C FOR EOP RTN              B 000690
         AP    SYSPRINT+IOPSRCNT(4),$PGELMIT FORCE LCNT TO PAGE LINIT   B 000700
         CBAL  R4,PRINT            PRINT BLANK LINE TO FORCE PAGE SKIP  B 000710
         IOM   OPEN,SYSIN          OPEN CONTROL CARD DATA SET           B 000720
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   B 000730
         EJECT                                                          B 000740
*********************************************************************** B 000750
*        PROCESS CONTROL CARDS                                        * B 000760
*********************************************************************** B 000770
         SPACE 1                                                        B 000780
CCPROC   SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              B 000790
         LA    R4,CCPROCX          SET CBAL RETURN ADDRESS              B 000800
         CCTST MS00                PROCESS MS00 CARD                    B 000810
         CCTST MS01                PROCESS MS01 CARD                    B 000820
         CCTST MS02                PROCESS MS02 CARD                    B 000830
         CCTST MS03                PROCESS MS03 CARD                    B 000840
         CCTST MS04                PROCESS MS04 CARD                    B 000850
         CCTST MS05                PROCESS MS05 CARD                    B 000860
         CCTST MS11                PROCESS MS11 CARD                    B 000870
         CCTST MS12                PROCESS 'MS12' CONTROL CARDS         B 000880
         CCTST MS13                PROCESS MS13 CARD                    B 000890
         CCTST MS14                GO PROCESS MS14 CONTROL CARDS        B 000900
         EJECT                                                          B 000910
*********************************************************************** B 000920
*        READ CONTROL CARDS ( CONT'D )                                * B 000930
*********************************************************************** B 000940
         SPACE 1                                                        B 000950
         CCTST MS20                GO PROCESS MS20 CONTROL CARDS        B 000960
         CCTST MS21                GO PROCESS MS21 CONTROL CARDS        B 000970
         CCTST MS30                GO PROCESS MS30 CONTROL CARDS        B 000980
         CCTST MS32                GO PROCESS MS32 CONTROL CARDS        B 000990
         CCTST MS33                GO PROCESS MS33 CONTROL CARDS        B 001000
         CCTST MS34                GO PROCESS MS34 CONTROL CARDS        B 001010
         EJECT                                                          B 001020
*********************************************************************** B 001030
*        READ CONTROL CARDS ( CONT'D )                                * B 001040
*********************************************************************** B 001050
         SPACE 1                                                        B 001060
         CCTST MS36                PROCESS MS36 CONTROL CARDS           B 001070
         CCTST MS37                PROCESS MS37 CONTROL CARDS           B 001080
         CCTST MS40                GO PROCESS MS40 CONTROL CADS         B 001090
         CCTST MS41                GO PROCESS MS41 CONTROL CADS         B 001100
         LINE  LINE15,P=Y          TELL OF UNKNOWN CARD TYPE            B 001110
CCPROCX SUBOUT RESTORE=R4          RESTORE AND RETURN TO MAINLINE       B 001120
         EJECT                                                          B 001130
*********************************************************************** B 001140
*        PROCESS MS00 CONTROL CARD                                    * B 001150
*********************************************************************** B 001160
         SPACE 1                                                        B 001170
         USING MS00CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 001180
CCMS00   SUBIN ,                   ENTER ROUTINE                        B 001190
         CLI   MS00TYPE,C'L'       IS IT BATCH LOG HEADING              B 001200
         BNE   CCMS0001            BR IF NOT                            B 001210
         CLI   MS00SPCE,C'2'       IS DOUBLE SPACING REQUESTED          B 001220
         BNE   *+8                 BR IF NOT                            B 001230
         OI    PRINTSW,PRSWBLS2    FLAG TO DOUBLE SPACE                 B 001240
         CLI   MS00SPCE,C'3'       IS TRIPLE SPACE REQUESTED            B 001250
         BNE   *+8                 BR IF NOT                            B 001260
         OI    PRINTSW,PRSWBLS3    FLAG TO TRIPLE SPACE                 B 001270
         L     R1,=V(LOGHEAD1)     GET ADDRESS OF HRADING LINE          B 001280
         CLC   MS00HEAD,$SPACES     IS HEADING SUPPLIED                 B 001290
         BE    *+10                BR IF NOT                            B 001300
         MVC   0(L'MS00HEAD,R1),MS00HEAD MOVE HEADING TO LINE           B 001310
CCMS0001 SUBOUT ,                  RETURN TO MAIN-LINE                  B 001320
        EJECT                                                           B 001330
*********************************************************************** B 001340
*        PROCESS MS01 CARD                                            * B 001350
*********************************************************************** B 001360
         SPACE 1                                                        B 001370
         USING MS01CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 001380
CCMS01   SUBIN ,                   ENTER ROUTINE                        B 001390
         L     R1,=V(BB01MS01)     GET ADDRESS OF B/B REPORT HEADING    B 001400
         CLC   MS01HEAD,$SPACES     IS HEADING SUPPLIED                 B 001410
         BE    *+10                BR IF NOT                            B 001420
         MVC   0(L'MS01HEAD,R1),MS01HEAD STORE USER-SUPPLIED HEADING    B 001430
         CLI   MS01LIST,C'N'       TEST IF DATA TO BE LISTED            B 001440
         BNE   *+8                 BRANCH IF YES                        B 001450
         OI    MASTER,SWMNLIST     INDICTAE B/C & DATA IN ERROR ONLY    B 001460
         CLI   MS01LIST,C'1'       IS ONLY DATA IN ERROR REQUIRED       B 001470
         BNE   *+8                 BR IF NOT                            B 001480
         OI    MASTER,SWMNLIST     SET FLAG TO LIST ERROR ONLY          B 001490
         CLI   MS01LIST,C'2'       ARE ONLY CONTROL TOTALS RZQUIRED     B 001500
         BNE   *+12                BR IF NOT                            B 001510
         OI    MASTER,SWMNLIST     FLAG THAT GOOD DATA NOT REQUIRED     B 001520
         OI    PRINTSW,PRSWNDTA    FLAG NOT TO PRINT ERRORS             B 001530
         CLI   MS01SPCE,C' '       TEST FOR SPACE RESUEST               B 001540
         BE    CCREAD              BRAVCH IF NO                         B 001550
         CLI   MS01SPCE,C'1'       TEST FOR SINGLE SPACING REQUEST      B 001560
         BE    CCREAD              DEFAULT VALUE SO BRANCH              B 001570
         CLI   MS01SPCE,C'2'       TEST FRR DOUBLE SPACING REQUEST      B 001580
         BNE   CCMS0101            BR IF NOT DOUBLE SPACE REQUEST       B 001590
         OI    PRINTSW,PRSWSPC2    SET TI SHOW DOUBLE SPACE REQUEST     B 001600
         L     R1,=V(BBSPCE)       GET ADDRESS OF CARRIAGE CONTROL CHAR B 001610
         MVI   0(R1),SPCE2AFT      SET DEFAULT TO DOUBLE SPACE          B 001620
         B     CCREAD              GET NEXT CONTROL CARD                B 001630
CCMS0101 CLI   MS01SPCE,C'3'       TEST FOR TRIPLE SPACE REQUEST        B 001640
         BNE   CCREAD              IF NOT, ALLOW DEFAULT SINGLE SPACE   B 001650
         MVI   0(R1),SPCE3AFT      ESTABLISH DEFAULT TRIPLE SPACE       B 001660
         OI    PRINTSW,PRSWSPC3    SET TO SHOW TRIPLE SPACE REQUESY     B 001670
        SUBOUT ,                   RETURN TO CALLER                     B 001680
         DROP  R6                  DROP ADDRESSABILITY                  B 001690
         EJECT                                                          B 001700
*********************************************************************** B 001710
*        PROCESS MS02 CARD                                            * B 001720
*********************************************************************** B 001730
         SPACE 1                                                        B 001740
         USING MS02CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 001750
         USING CB02NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESSAB'Y  B 001760
CCMS02   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 001770
         LA    R2,CB02LGTH         SET R2 TO LENGTH OF CONTROL BLOCK    B 001780
         GETCB CB02                ACQUIRE AND CHAIN CB02 C/B           B 001790
         CHNCB CB02,CB05,CB11,CB13,CB14 SET DUMMY POINTERS              B 001800
         EJECT                                                          B 001810
*********************************************************************** B 001820
*        PROCESS MS02 CONTROL CARD ( CONT'D )                         * B 001830
*********************************************************************** B 001840
         SPACE 1                                                        B 001850
         NI    SWINIT,FF-SWONMS11  INDICATE NO MEUU YET FOUND           B 001860
         ZAP   CB02CCNO,SYSIN+IOPSRCNT(4) MOVE C/C SEQ NO TO C/B        B 001870
         MVC   CB02BCI,MS02BCI     SET BATCH CARD ID                    B 001880
         ZAP   CB02CNT,$ZERO        $ZEROISE RECORD COUNTER             B 001890
         ZAP   CB02HCNT,$ZERO       $ZEROISE COUNT OF HARD ERRORS       B 001900
         ZAP   CB02SCNT,$ZERO       $ZEROISE COUNT OF SOFT ERRORS       B 001910
         ZAP   CB02CNTR,$ZERO       $ZEROISE BATCH CARD CARD COUNT      B 001920
         ZAP   CB02RCNT,$ZERO       $ZEROISE ACCUMULATED CARD COUNT     B 001930
         ZAP   CB02LCNT,$ZERO       $ZEROISE CARD NUMBER WITH IN BATCH  B 001940
         ZAP   CB02RETC,$ZERO       $ZEROISE COUNT OF RETAINED RECORDS  B 001950
         MVC   CB02URTN,MS02URTN   SET USER EXIT NAME (IF ANY)          B 001960
         CLC   MS02IRL,$SPACES     TEST IF INTERNAL LENGTH SUPPLIED     B 001970
         BE    *+26                BR IF NO INTERNAL LENGTH SUPPLIED    B 001980
         PACK  $WRKPACK,MS02IRL    PACK INTERNAL RECORD LENGTH          B 001990
         CVB   R1,$WRKPACK          ... AND CONVERT IT TO BINARY        B 002000
         CH    R1,$RECLINT         IS THIS THE LARGEST VALUE YET SUPPLI B 002010
         BNH   *+8                 BR IF NOT TO RETIAN OLD ( LARGER ) V B 002020
         STH   R1,$RECLINT         PRESERVE ( NEW ) INTERNAL RECORD LEN B 002030
         CLC   CB02URTN,$SPACES     TEST IF USER ROUTINE REQUIRED       B 002040
         BE    *+16                BR IF NO                             B 002050
         NI    $VBUDG3U,FF-POOLPFRE SUPPRESS FREEMAINING OF SUPPORT COD B 002060
         OI    SWINIT,SWONURTN     SHOW USER RTN ESQUESTED              B 002070
         OI    CB02SW,SW02URTN     SET USER RTN SWITCH ON               B 002080
         CLI   MS02DROP,C'D'       TEST IF DROP UNKNOWN CARDS           B 002090
         BNE   *+8                 BRANCH IF NO                         B 002100
         OI    CB02SW,SW02DROP     SET DROP SWITCH ON                   B 002110
         LA    R2,MS02PBCI         POINT AT CC BATCH CARD PPP           B 002120
         LA    R3,CB02PBCI         POINT AT CC BATCH CARD PL            B 002130
         CBAL  R4,PPLPL             CONVERT EBCDIC TO BINARY PL         B 002140
         LA    R10,5               ESTABLISH LOOP                       B 002150
         LA    R2,MS02PBN1         POINT AT CC 1ST BATCH NO COMPONENT   B 002160
         LA    R3,CB02PBN1         POINT AT CB 1ST BATCH NO COMPONENT   B 002170
         EJECT                                                          B 002180
*********************************************************************** B 002190
*        PROCESS MS02 CARD ( CONT'D )                                 * B 002200
*********************************************************************** B 002210
         SPACE 1                                                        B 002220
CCMS0201 CBAL  R4,PPLPL             CONVERT EBCDIC PPL TO BINARY PL     B 002230
         LA    R2,3(,R2)           POINT AT NEXT COMPONENT PPL          B 002240
         LA    R3,2(,R3)           POINT AT NEXT COMPOMENT PL           B 002250
         BCT   R10,CCMS0201        LOOP BACK IF COMPONENTS LEFT         B 002260
         OI    CB02SW,SW02WDC      SET TO  WRITE DETAIL CARDS           B 002270
         CLI   MS02OCTL,C'1'       TEST IF BATCH CARD TO BE WRITTEN     B 002280
         BNE   *+8                 BRANCH IF NOT                        B 002290
         OI    CB02SW,SW02WBC      TELL TO WRITE BATCH CARDS            B 002300
         CLI   MS02OCTL,C'2'       TEST IF CONTROL RECORD TO BE WRITTEN B 002310
         BNE   *+8                 BRANCH IF NOT                        B 002320
         OI    CB02SW,SW02WCR      TELL TO WRITE CONTROL RECORD         B 002330
         CLI   MS02OCTL,C'3'       IS IT C/R & B/C                      B 002340
         BNE   *+8                 BRANCH IF NOT                        B 002350
         OI    CB02SW,SW02WCR+SW02WBC SHOW TO WRITE B/C & C/R           B 002360
         TM    BRSWITCH,SWBRKB     IS 'KEYBREAK' SPECIFIED              B 002370
         BZ    *+8                 BR IF NO                             B 002380
         OI    CB02SW,SW02WBC      FLAG TO WRITE 1ST CARD ( B/C ) ALLWY B 002390
         PL    PPL,MS02PCRN,CB02PCRN CONVERT REC NO FLD PL TO BINARY    B 002400
         CLC   MS02ORL,$SPACES     TEST IF OUTPUT LRECL SUPPLIED        B 002410
         BE    CCMS0200            IF NO, DEFAULT TO 80                 B 002420
       NUMERIC MS02ORL             VERIFY THAT OUTPUT RECL IS NUMERIC   B 002430
         STH   R1,$RECLUT2         PRESERVE OUTPUT RECORD LENGTH        B 002440
CCMS0200 OC    $RECLINT,$RECLINT   HAS INTERNAL LGTH BEEN SUPPLIED      B 002450
         BNZ   *+10                BR IF YES TO AVOID ONERWRITING       B 002460
         MVC   $RECLINT,$RECLUT2   ASSUME INTERNAL LENGTH = OUTPUT      B 002470
         CLC   $RECLUT2,$RECLINT   VERIFY PSEUDO ^< OUTPUT LENGTH       B 002480
         BNH   CCMS0204            BR IF ^< OUTPUT LENGTH               B 002490
         ABEND 40                  PSEUDO < OUTPUT LENGTH SO ABEND      B 002500
         EJECT                                                          B 002510
*********************************************************************** B 002520
*        PROCESS MS02 CONTROL CARD ( CONT'D )                         * B 002530
*********************************************************************** B 002540
         SPACE 1                                                        B 002550
CCMS0204 CLC   MS02PID1(9),$SPACES IS SUBMITTOR ID DEFINED              B 002560
         BE    CCMS0203            BR IF NOT                            B 002570
         OI    CB02SW2,SW02PID     SET SW TO PRINT ID IN HEADINGS       B 002580
         LA    R10,3               ESTABLISG LOOP OF 3 COMPONETS        B 002590
         LA    R2,MS02PID1         POINT AT 1ST C/C COMPONENT           B 002600
         LA    R3,CB02PID1         POINT AT 1ST C/C COMPONENT           B 002610
CCMS0202 CBAL  R4,PPLPL            CONVERT PPL TO BINARY PL             B 002620
         LA    R2,3(,R2)           POINT AT NEXT C/C PPL                B 002630
         LA    R3,2(,R3)           POINT AT NEXT C/B PL                 B 002640
         BCT   R10,CCMS0202        LOOP BACK IF BUCKTES LEDT            B 002650
CCMS0203 SUBOUT RESTORE=R4         RESTORE AND RETURN                   B 002660
         DROP  R6,R8               DROP ADDRESSABILITY                  B 002670
         EJECT                                                          B 002680
*********************************************************************** B 002690
*        PROCESS MS03 CARD                                            * B 002700
*********************************************************************** B 002710
         SPACE 1                                                        B 002720
         USING MS03CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 002730
         USING CB03NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESSAB'Y  B 002740
CCMS03   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 002750
       NUMERIC MS03LCRK            VERIFY THAT KEY LENGTH IS NUMERIC    B 002760
         CVB   R2,$WRKPACK          ... & CONVERT IT TO BINARY          B 002770
         LA    R2,CB03CRK-CB03NTRY(,R2) ADD CONSTANT CB LENGTH          B 002780
        CBPREF CB03                ACQUIRE AND IDENTIFY CONTROL BLOCK   B 002790
         LR    R8,R1               POINT R8 AT GOTTEN CORE              B 002800
         ST    R8,$PTRCB03          PRESERVE CB03 POINTER AS CURRENT    B 002810
         ST    R8,$PTRCB04          TRAET CB03CB04 AS 1ST CB03 TO ...   B 002820
*                                   ... FACILITATE CH AINING            B 002830
         L     R1,$PTRCB02          RETRIEVE CURRENT CB02 POINTER       B 002840
         ST    R8,CB02CB03-CB02NTRY(R1) POINT CB02 AT CB03              B 002850
         LA    R2,MS03PCRK         POINT AT CC PPPLL                    B 002860
         LA    R3,CB03PCRK         POINT AT CB PL                       B 002870
         CBAL  R4,PPPLLPL          CONVERT EBCDIC PPPLL TO BINARY PL    B 002880
         SR    R1,R1               $ZEROISE WORK REGISTER               B 002890
         IC    R1,CB03LCRK         GET LENGTH OF KEY                    B 002900
         LTR   R1,R1               TEST FOR $ZERO LENGTH                B 002910
         BZ    *+10                BYPASS BCT & EXECUTE IF $ZERO LENGTH B 002920
         BCTR  R1,0                DECREMENT FOR EXECUTE                B 002930
         EX    R1,CCMS03MV         MOVE KEY TO CONTROL BLOCK            B 002940
         L     R1,$PTRCB02          POINT R1 AT CURRENT CB02            B 002950
         EJECT                                                          B 002960
*********************************************************************** B 002970
*        PROCESS MS03 CONTROL CARD ( CONT'D )                         * B 002980
*********************************************************************** B 002990
         SPACE 1                                                        B 003000
         USING CB02NTRY,R1         ESTABLISH CB02 ADDRESSABILITY        B 003010
         OI    BRSWITCH,SWBRCRT    ASSUME TRAILING C/R                  B 003020
         CLI   MS03POSN,C'1'       DOES CONTROL RECORD PRECEDE BATCH    B 003030
         BNE   *+12                BR IF NO (TRAILING C/R)              B 003040
         NI    BRSWITCH,FF-SWBRCRT SET FOR LEADING C/R                  B 003050
         OI    CB03SW,SW03POSN     SET TO SHOW LEADING C/R              B 003060
         CLI   MS03LIST,C'2'       TEST IF PRINT ONLY                   B 003070
         BNE   *+12                BR IN NOT PRINT ONLY                 B 003080
         OI    CB03SW,SW03LIST     SET TO PRINT ONLY                    B 003090
         B     CCMS0301            GO CONTINUE PROCESSING               B 003100
         CLI   MS03LIST,C'1'       TEST IF PRINT & WRITE                B 003110
         BNE   *+16                BR IF NOT PRINT & WRITE              B 003120
         OI    CB03SW,SW03LIST     SET TO PRINT                         B 003130
         OI    CB02SW,SW02WCR      SET TO WRITE TO SYSUT2               B 003140
         B     CCMS0301            BR TO CONTINUE PROCESSING            B 003150
*                                  ASSUME ' ' - WRITE ONLY              B 003160
         OI    CB02SW,SW02WCR      SET TO WRITE TO SYSUT2               B 003170
CCMS0301 EQU   *                   CONTINUE PROCESSING                  B 003180
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   B 003190
         SPACE 1                                                        B 003200
CCMS03MV MVC   CB03CRK(0),MS03CRK  EXECUTED MOVE INSTRUCTION            B 003210
         DROP  R1,R6,R8            DROP ADDRESSABILITY                  B 003220
         EJECT                                                          B 003230
*********************************************************************** B 003240
*        PROCESS MS04 CARD                                            * B 003250
*********************************************************************** B 003260
         SPACE 1                                                        B 003270
         USING CB04NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESSAB'Y  B 003280
         USING MS04CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 003290
CCMS04   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 003300
         LA    R2,CB04LGTH         GET LENGTH OF CONTROL BLOCK          B 003310
         GETCB CB04                ACQUIRE AND CHAIN CB04 CONTROL BLOCK B 003320
         LA    R2,MS04PCRF         POINT AT EBCDIC PPPLL                B 003330
         LA    R3,CB04PCRF         POINT AT BINARY PL                   B 003340
         CBAL  R4,PPPLLPL          CONVERT EBCDIC PPPLL TO BINARY PL    B 003350
         CLI   MS04PIND,C'P'       IS OUTPUT C/R FIELD TO BE PACKED     B 003360
         BNE   *+8                 BRANCH IF NOT                        B 003370
         OI    CB04SW,SW04PACK     SET ON PACK SWITCK                   B 003380
         SR    R1,R1               $ZEROISE WORJ REGISTER               B 003390
         IC    R1,CB04LCRF         GET LENGTH OF OUTPUT FIELD           B 003400
         BCTR  R1,0                DECREMENT FOR SUBSEQUENT EXECUTES    B 003410
         CLC   MS04BNO,$SPACES      IS THIS BNO OR FLD EXTRACT REQUEST  B 003420
         BNE   *+8                 BR IF YES COS NOT PACKED DEC OPERATI B 003430
         SLA   R1,4                SHIFT LENGTH FOR PD EXECUTE          B 003440
         STC   R1,CB04LCRF         RESTORE ADJUSTED FIELD               B 003450
         MVC   CB04FNO,MS04FNO     MOVE FRIELD NAME TO CONTROL BLOCK    B 003460
         CLI   MS04NDEC,C' '       TEST IF NO OF DECIMALS BLANK         B 003470
         BNE   *+8                 BRANCH IF NOT                        B 003480
         MVI   MS04NDEC,C'0'       SET TO DEFAULT OF $ZERO              B 003490
         PACK  CB04NDEC,MS04NDEC   ADD NO OF DECAMALS TO CONTROL BLOCK  B 003500
         ZAP   CB04BACC,$ZERO       $ZEROISE FIELD ACCUMULATOR          B 003510
         CLC   MS04BNO,=C'BNO'     IS THIS A RESUEST FOR THE BATCH NUMB B 003520
         BNE   *+12                BR IF NOT                            B 003530
         OI    CB04SW,SW04BNO      FLAG FOR BATCH NUMBER                B 003540
         B     CCMS0401            GO AROUNG NUMERIC TEST               B 003550
         EJECT                                                          B 003560
*********************************************************************** B 003570
*        PROCESS MS04 CONTROL CARD ( CONT'D )                         * B 003580
*********************************************************************** B 003590
         SPACE 1                                                        B 003600
         CLC   MS04PSRC,$SPACES     TEST IF POSN IS SUPPLIED            B 003610
         BE    CCMS0401            BR IF NOT                            B 003620
         OI    CB04SW,SW04SRC      FLAG THAT FLD IS TO BE EXTERCED      B 003630
       NUMERIC MS04PSRC            TEST IF SOURCE PARM IS NUMERIC       B 003640
         CVB   R1,$WRKPACK         CONVERT POSN TO BUNARY               B 003650
         STC   R1,CB04PSRC         PREVERVE POSN OF SURCE FIELD         B 003660
         CH    R1,$RECLUT1         DETERMINE IF SOURCE FLD IN INPUT REC B 003670
         BNL   CCMS0401            BR IF NOT WITHIN INPUT RREA          B 003680
         LINE  LINE14,P=Y          PRINT WARNING MESSAGE                B 003690
CCMS0401 SUBOUT RESTORE=R4         RESTORE AND RETURN                   B 003700
         DROP  R6,R8               DROP ADDRESSABILITY                  B 003710
         EJECT                                                          B 003720
*********************************************************************** B 003730
*        PROCESS MS05 CARD                                            * B 003740
*********************************************************************** B 003750
         SPACE 1                                                        B 003760
         USING CB05NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESSAN'Y  B 003770
         USING MS05CARD,R6         ESTABLISH CONTROL CARD ADDRESSAB'Y   B 003780
         USING CB02NTRY,R7         ESTABLISH CONTROL BLOCK ADDRESSABILI B 003790
CCMS05   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 003800
         OI    APSWITCH,APSWMS05   FLAG THAT MS05'S EXIST               B 003810
         L     R7,$PTRCB02          GET CURRENT CB02 ADDRESS            B 003820
         CLC   MS05FNO,=C'RC'      TEST FOR RECORD COUNT REQUEDT        B 003830
         BNE   CCMS0500            BR IF NOT REC CNT REQUEST            B 003840
         LA    R2,MS05PBCT         POINT AT EBCDIC PPLL                 B 003850
         LA    R3,CB02CNTP         POINT AT BIBARY PL IN CB02 CARD      B 003860
         CBAL  R4,PPLLPL            CONVERT EBCDIC TO BINARY            B 003870
         OI    CB02SW,SW02RCNT     INDICAE BATCH ACRD COUNT EXISTS      B 003880
         CLI   MS05ERID,C'1'       ETST IF ERROR IS SOFT                B 003890
         BNE   *+8                 BYPASS SETTING SW IF NOT SOFT        B 003900
         OI    CB02SW,SW02RCSF     INDICATE REC CNT ERROR IS SOFT       B 003910
         B     CCREAD              GO GET NEXT CONTROL CARD             B 003920
CCMS0500 LA    R2,CB05LGTH         DETERMINE LENGTH OF C/B              B 003930
         GETCB CB05                ACQUIRE AND CHAIN C/B                B 003940
         MVC   CB05FNO,MS05FNO     RETRIEV E FIELD OR TEST NAME         B 003950
         OI    CB05SW,SW05FLD      MUST BE FIELD REQUEST SO INDICATE    B 003960
         EJECT                                                          B 003970
*********************************************************************** B 003980
*        PROCESS MS05 CARD ( CONT'D )                                 * B 003990
*********************************************************************** B 004000
         SPACE 1                                                        B 004010
CCMS0501 LA    R2,MS05PBCT         POINT AT EBCDIC PPLL                 B 004020
         LA    R3,CB05PBCF         POINT AT BIBARY PL                   B 004030
         CBAL  R4,PPLLPL            CONVERT EBCDIC PPLL TO BINARY PL    B 004040
         CLI   MS05NDEC,C' '       TEST IF NO OF DECIMALS BLANK         B 004050
         BNE   *+8                 BRANCH IF NOT                        B 004060
         MVI   MS05NDEC,C'0'       SET TO DEFAULT OF SERO               B 004070
         PACK  CB05NDEC,MS05NDEC   ADD NO OF DECIMALS TO CB05           B 004080
         ZAP   CB05BVAL,$ZERO       $ZEROISE STORE FOR BATCH CARD VALUE B 004090
         ZAP   CB05BACC,$ZERO       $ZEROISE DETAIL CARD ACCUMULATOR    B 004100
         ZAP   CB05LVAL,$ZERO       $ZEROISE LITERAL VALUE STORE        B 004110
         MVC   CB05LNE1,MS05LNE1   SAVE 1ST & ...                       B 004120
         MVC   CB05LNE2,MS05LNE2    ... 2ND TITLE LINES                 B 004130
         CLI   MS05ABID,C'1'       TEST IF B/C TOTAL IS BALANCING       B 004140
         BNE   *+8                 BRANCJ IF NOT                        B 004150
         OI    CB05SW,SW05BAL      INDICATE VALUE IS BALANCING          B 004160
         CLI   MS05ERID,C'1'       TEST IF ERROR IS SORT                B 004170
         BNE   *+8                 BRANCH IF NOT                        B 004180
         OI    CB05SW,SW05SOFT     INDICATE ERROR IS SOFT               B 004190
         CLC   MS05NEGI,$SPACES     TEST IF NEG IND SPECIFIED           B 004200
         BE    CCMS0502            BR IF NO -VE INDICATOR               B 004210
         OI    CB05SW,SW05NGID     INDICATE -VE FLD PRESENT             B 004220
         OI    CB05SW,SW05NGNZ     ASSUME OON-$ZERO AUTO -VE            B 004230
         CLC   MS05IDNG,=C'NON$ZERO' TEST IF NON-$ZERO AUTO -VE         B 004240
         BE    CCMS0502            BR IF NON-$ZERO AUTO -BE             B 004250
         NI    CB05SW,FF-SW05NGNZ  SET OFF AUTO -VE FLAG                B 004260
         PL    PPL,MS05PNEG,CB05PNEG CONVERT EBCDIC TO BINARY           B 004270
         MVC   CB05IDNG,MS05IDNG   STORE -VE ID LITERAL                 B 004280
         EJECT                                                          B 004290
*********************************************************************** B 004300
*        PROCESS MS05 CONTROL CARD ( CONT'D )                         * B 004310
*********************************************************************** B 004320
         SPACE 1                                                        B 004330
CCMS0502 CLC   MS05VALU,$SPACES    IS LITERAL BALANCING VALUE SUPPLIED  B 004340
         BE    CCMS0503            BR IF NO BALANCING VALUE             B 004350
         OI    CB05SW,SW05VALU     FLA THAT VALUE IS SUPPLIED           B 004360
       NUMERIC MS05VALU,,SIGNED    VERIFY THAT FIELD IS NUMERIC         B 004370
         ZAP   CB05BVAL,$WRKPACK   PRESETVE BALANCING VALUE             B 004380
         ZAP   CB05LVAL,$WRKPACK   PRESERVE BALANCING VALUE IN STORE    B 004390
CCMS0503 CLC   MS05PBCT(4),$SPACES  WAS FIELD PPLL SUPPLIED             B 004400
         BNE   CCMS0504            BR IF YES                            B 004410
         CLC   MS05VALU,$SPACES     WAS LITERAL VALUE SUPPLIED          B 004420
         BNE   CCMS0504            BE IF YES                            B 004430
         LINE  LINE40              ERROR: ONE OR OTHER IS REQUIRED      B 004440
CCMS0504 CLI   MS05PIND,C'1'       ARE WE ONLY TO PRINT DISCREPANCIES   B 004450
         BNE   *+8                 BR IF NOT                            B 004460
         OI    CB05SW,SW05DPRT     FLAG TO PRINT ONLY ERRORS            B 004470
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   B 004480
         DROP  R6,R8               DROP ADDRESSABILITY                  B 004490
         DROP  R7                  DROP CONTROL BLOCK ADDRESS'T         B 004500
         EJECT                                                          B 004510
*********************************************************************** B 004520
*        PROCESS MS11 & MS12 CONTROL CARDS                            * B 004530
*********************************************************************** B 004540
*        NOTE - THIS CODING IS SHAREDE BY MS11 AND MS12                 B 004550
*                INITIALISATION AND CONTROL CARD PROCESSING             B 004560
         USING CB11NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESSAB'Y  B 004570
         USING MS11CARD,R6         ESTABLISH CONTROL CARD ADDRESSABILY  B 004580
CCMS11   EQU   *                   CONSTRUCT CB11/SB11 CONTROL BLOCKS   B 004590
CCMS12   EQU   *                   CONSTRUCT CB11/SB12 CONTROL BLOCKS   B 004600
CCMS1112 SUBIN SAVE=R4,FLOWTHR=YES PRESEVRVE RETURN ADDRESS             B 004610
         OI    SWINIT,SWONMS11     INDICATE MS11/12 FOUND (FOR MS13)    B 004620
         CLC   MS11ID,=C'MS11'     TEST FRR MS11 CARD                   B 004630
         BNE   *+8                 BR IF NOT - MUST BE MS12             B 004640
         OI    SWINIT,SWMS11       SHOW MS11 CARD BEING PROCESSED       B 004650
         LA    R2,MS11PRTI         POINT AT EBCDIC PPL                  B 004660
         LA    R3,XB11PRTI         POINTA AT BINARY PL TEMPOR ARU STORE B 004670
         CBAL  R4,PPLPL             CONVERT PPL TO BINARY PL            B 004680
         MVC   XB11RTI,MS11RTI     MOVE LITERAL ID TO TEMPORARY STORE   B 004690
*                                  THE PURPOSE OF THIS CODING IS TO     B 004700
*                                   DETERMINE IF THIS MS11 CARD DEFINES B 004710
*                                   AN IDENTICAL CARD TYPE TO A PREVIOI B 004720
*                                   CONTROL CARD.                       B 004730
         L     R8,$PTRCB11          RETRIEVE 1ST CB11 ADDRESS           B 004740
CCMS1101 LTRR  R8,R8               TEST FOR END OF CJAIN                B 004750
         BZ    CCMS1102            YES: THEN BLD CB11 FOR NEW REC TYPE  B 004760
         CLC   CB11PRTI(10),XB11PRTI MATCH WITH PREV REC TYPE DEFIN'N   B 004770
         BE    CCMS1125            MATCH: REC TYPE EXISTS ALREADY       B 004780
         L     R8,CB11CB11         GET NEXT CB11 ADDRESS                B 004790
         B     CCMS1101            LOOP BACK TO TEST FOR MATCH          B 004800
         EJECT                                                          B 004810
*********************************************************************** B 004820
*        PROCESS MS11 CONTROL CARD ( CONT'D )                         * B 004830
*********************************************************************** B 004840
         SPACE 1                                                        B 004850
CCMS1102 EQU   *                   BUILD CB11 CONTROL BLOCK             B 004860
         LA    R2,CB11LGTH         GTE LENGTH OF CONTROL BLOCK          B 004870
         GETCB CB11                ACQUIRE AND CHAIN C/B                B 004880
         LA    R1,CB11SB11         TREAT CB11 SB11 POINTER ...          B 004890
         ST    R1,$PTRSB11           ... AS 1ST SB11 IN CHAIN           B 004900
         LA    R1,CB11CB13         TREAT CB11CB13 AS A ''DUMMY'' CURREN B 004910
         ST    R1,$PTRCB13           CB13 TO FACILITATE CHAINING        B 004920
         MVC   CB11PRTI(10),XB11PRTI ADD RECORD TYPE PL & LITERAL       B 004930
         ZAP   CB11CNT,$ZERO        $ZEROISE RECORD COUNTER             B 004940
         CLC   MS11IGN,=C'IGN'     TEST FI RECORD TYPE TO BE IGNORED    B 004950
         BNE   *+12                BRANCH IF NOT                        B 004960
         OI    CB11SW,SW11IGN      INDICATE RECORD TO BE IGNORED        B 004970
         B     CCMS11X             GO TO ROUTINE EXIT                   B 004980
         DROP  R8                  DROP CB11 ADDRESSABILITY             B 004990
         EJECT                                                          B 005000
*********************************************************************** B 005010
*        PROCESS MS11 CARD ( CONT'D )                                 * B 005020
*********************************************************************** B 005030
         SPACE 1                                                        B 005040
         USING SB11NTRY,R8         ESATBLSH CONTROL BLOCK ADDRESSAB'Y   B 005050
CCMS1125 EQU   *                   CONSTRUCT SB11 CONTROL BLOCK         B 005060
         LA    R10,6               ESTABLISH LOOP                       B 005070
         TM    SWINIT,SWMS11       TEST IF MS12 CARD                    B 005080
         BO    *+8                 BRANCH IF NOT MS12                   B 005090
         LA    R10,3               ESTABLISH LOOP OF 3 MS12 BUCKETS     B 005100
CCMS1103 CLC   MS11FLD1,$SPACES     TEST IF FIELD DESCRIPTION PRESENT   B 005110
         BNE   CCMS1135            CONTINUE PROCESSING IF PRESENT       B 005120
         TM    SWINIT,SWMS11       TEST IF MS11 CARD                    B 005130
         BO    CCMS1107+4          GO INCREMENT TO NEXT MS11 BUCKET     B 005140
         B     CCMS1107            GO INCREMENT TO NEXT MS12 BUCKET     B 005150
CCMS1135 LA    R2,SB11LGTH         GET LENGTH OF CONTROL BLOCK          B 005160
         TM    SWINIT,SWMS11       TEST IF MS11 CARD                    B 005170
         BO    CCMS1108            BRANCH IF MS11 CARD                  B 005180
         CLC   MS12NGID,=C'NON$ZERO' TEST FOR 'MS12' WITH 'NON$ZERO'    B 005190
         BE    CCMS1108            BRANCH IF 'NON$ZERO' SPECIFIED       B 005200
         LA    R2,SB12LGTH         SET LENGTH OF CONTROL BLOCK          B 005210
CCMS1108 GETCB SB11                ACQUIRE AND CHAIN C/B                B 005220
         EJECT                                                          B 005230
*********************************************************************** B 005240
*        PROCESS MS11 CONTROL CARD ( CONT'D )                         * B 005250
*********************************************************************** B 005260
         SPACE 1                                                        B 005270
         MVC   SB11FNO,MS11NDC1    MOVE B/C FIELD NAME OE TEST TYPE     B 005280
         MVC   SB11CRFN,MS11NCR1   MOVE C/R FIELD NAME ( IF ANY )       B 005290
         TM    AFSWITCH,AFSWMLAB   ARE TEST TYPES PERMITTED             B 005300
         BO    CCMS1104            BR IF NO: ASSUME FIELD LABEL         B 005310
         LA    R2,MS11NDC1         POINT AT POSSIBLE TEST REQUEST       B 005320
         CBAL  R4,TESTREQ          DETERMINE IF FIELD IS TEST REQUEST   B 005330
         BNE   CCMS1104            BRANCH IF NOT                        B 005340
         MVC   SB11TID,3(R1)       SAVE INTERNAL CODE FOR TEST          B 005350
         OI    SB11SW,SW11DTID     INDICATE TEST REQUEST                B 005360
         CLI   2(R1),C'X'          IS ASSOCIATED C/C REQUIRED           B 005370
         BNE   CCMS1109            BR IF NOT                            B 005380
         MVI   SB11TID,X'53'       ESTABLISH DUMMY OPERATION AS NO-OP   B 005390
         MVC   LINE33TT,MS11NDC1   MOVE TEST ID TO ERROR MESSAGE        B 005400
         LINE  LINE33              PRINT ERROR MESSAGE                  B 005410
CCMS1109 EQU   *                   CONTINUE PROCESSING                  B 005420
         B     CCMS1105            AVOID INDICATING B/C FLD NAME        B 005430
         EJECT                                                          B 005440
*********************************************************************** B 005450
*        PROCESS MS11 CARD ( CONT'D )                                 * B 005460
*********************************************************************** B 005470
         SPACE 1                                                        B 005480
CCMS1104 CLC   MS11NDC1,$SPACES     TEST IF FIELD BLANK                 B 005490
         BE    *+8                 BRANCH IF YES                        B 005500
         OI    SB11SW,SW11DBCN     INDICATE B/C FLD NAME SUPPLIED       B 005510
CCMS1105 CLC   MS11NCR1,$SPACES     TEST IF C/R FLD NAME SUPPLIED       B 005520
         BE    *+8                 BRANCJ IF NO                         B 005530
         OI    SB11SW,SW11DCRN     INDICATE C/R FLD NAME SUPPLIED       B 005540
         CLI   MS11AID1,C'A'       TEST IF ACCUMULATE ABSOLUTE VALUES   B 005550
         BNE   *+8                 BRANCH IF NO                         B 005560
         OI    SB11SW,SW11DMOD     INDICATE MODULOS TOTAL               B 005570
         CLI   MS11AID1,C'P'       IS INPUT FIELD PACKED                B 005580
         BNE   *+8                 BR IF NOT                            B 005590
         OI    SB11SW,SW11INPD     INDICATE INPUT FIELD IS PACKED       B 005600
         LA    R2,MS11PDC1         POINT AT EBCDIC PPLL                 B 005610
         LA    R3,SB11PDC          POINT AT BINARY PL                   B 005620
         TM    SWINIT,SWMS11PL     IS IT MS11=PPPL                      B 005630
         BZ    CCMS1113            BR IF NOT TO TEST PPLL               B 005640
         CBAL  R4,PPPLPL           CONVERT PPPL TO BINARY PL            B 005650
         B     CCMS1114            BR OVER PPLL CONVERSION              B 005660
CCMS1113 CBAL  R4,PPLLPL           CONVERT EBCDIC PPLL TO BINARY        B 005670
CCMS1114 CLI   MS11DEC1,C' '       TEST IF NO. OF DECIMALS IS BLANK     B 005680
         BNE   *+8                 BRANCH IF NOT                        B 005690
         MVI   MS11DEC1,C'0'       SET TO DEFAULT OF $ZERO              B 005700
       NUMERIC MS11DEC1            ENSURE NO OF DECIMALS IS NUMERIC     B 005710
         PACK  SB11NDEC,MS11DEC1   ADD NO OF DECIMALS TO CB             B 005720
         EJECT                                                          B 005730
*********************************************************************** B 005740
*        PROCESS MS11 CONTROL CARD ( CONT'D )                         * B 005750
*********************************************************************** B 005760
         SPACE 1                                                        B 005770
CCMS1106 TM    SWINIT,SWMS11       TEST IF MS12 CARD                    B 005780
         BO    CCMS1107+4          BRANCH IF NOT                        B 005790
         OI    SB11SW,SW11NGNZ     ASSUME 'NON$ZERO' SPECIFIED          B 005800
         CLC   MS12NGID,=C'NON$ZERO' TEST IF 'NON$ZERO' SPECIFIED       B 005810
         BE    CCMS1107            BRANCH IF YES                        B 005820
         NI    SB11SW,FF-SW11NGNZ  SET OFF 'NON$ZERO' SWITCH            B 005830
         OI    SB11SW,SW11NGID     SHOW SEPARATE -VE FLD LITERAL        B 005840
         PL    PPL,MS12PNEG,SB12PNEG CONVERT POSN & LGTH TO BINARY      B 005850
         MVC   SB12NGID,MS12NGID   STORE LITERAL -VE IND                B 005860
CCMS1107 LA    R6,10(,R6)          INCREMANT BY EXTRA 10 FOR MS12 ONLY  B 005870
         LA    R6,10(,R6)          INCREMENT TO NEXT FIELD DESCRIPTION  B 005880
         BCT   R10,CCMS1103        LOOP BACK TO PROCESS DESCRIPTION     B 005890
         NI    SWINIT,FF-SWMS11    SET OFF MS11 INIICATOR               B 005900
CCMS11X  SUBOUT RESTORE=R4         RESTORE AND RETURN                   B 005910
         DROP  R6,R8               DROP ADDRESSABLLITY                  B 005920
         EJECT                                                          B 005930
*********************************************************************** B 005940
*        TERMINATE CONTROL CARD PROCESSING                            * B 005950
*********************************************************************** B 005960
         SPACE 1                                                        B 005970
CCTERM   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 005980
         CP    SYSIN+IOPSRCNT(4),$ZERO WERE ANY CONTROL CARDS FOUND     B 005990
         BNE   CCTERM01            AVOID ABEND IF C/C SUPPLIED          B 006000
         ABEND 64                  NO C/C SUPPLIED SI ABEND             B 006010
CCTERM01 NI    SWINIT,FF-SWCCPRNT  SHOW NO ONGER PRINTING C/C           B 006020
         IOM   EOF,SYSIN           FLAG SYSIN EOD                       B 006030
         IOM   CLOSE,SYSIN         CLOSE SYSIN DATA SET                 B 006040
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            B 006050
         LINE  LINE08,10,S=2       TELL OF END OF C/C LIST              B 006060
         L     R1,=V(MS40CNT)      GET ADDRESS OF MS40CNT               B 006070
         L     R2,=V(MS41CNT)      GET ADDRESS OF MS41 COUNT            B 006080
         LH    R1,0(R1)            RETRIEVE MS40 COUNT                  B 006090
         CH    R1,0(R2)            ARE COUNTS THE SAME                  B 006100
         BE    EODIN2              BR IF EQUAL                          B 006110
         OI    SWERROR,SWEFLUSH    FLAG THAT SEVERE ERROR FOUND         B 006120
         LINE  LINE17,P=Y          PRINT ERROR MESSAGE                  B 006130
         EJECT                                                          B 006140
*********************************************************************** B 006150
*        TERMINATE CONTROL CARD PROCESSING ( CONT'D )                 * B 006160
*********************************************************************** B 006170
         SPACE 1                                                        B 006180
EODIN2   EQU   *                   CONTINUE PROCESING                   B 006190
         TM    SWERROR,SWEFLUSH    TEST IF CONTROL CARD ERROR DETECTED  B 006200
         BZ    EODIN1              BRANCH IF NOT                        B 006210
         LINE  LINE16,S=2          TELL OR EROR AND TERMINATIOM         B 006220
         MVC   $COMPCDE,COND16     SET COMPLETION CODE TO 16            B 006230
         ABEND 36                  C/C ERROR SO ABEND                   B 006240
EODIN1   CBAL  R4,CCERRORS         PRINT ANY OTHER ERROR MESSAGES       B 006250
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         B 006260
         TITLE 'BUDGIE3B - PRINT ANY GLOBAL ERROR MESSAGES'             B 006270
*********************************************************************** B 006280
*        PRINT ANY GLOBAL ERROR MESSAGES                              * B 006290
*********************************************************************** B 006300
         SPACE 1                                                        B 006310
CCERRORS SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              B 006320
         SPACE 1                                                        B 006330
*        WARN USER IF:                                                  B 006340
*              .PARM=KEYBREAK      AND                                  B 006350
*              .MS02 CARD DOES NOT REQUEST BATCH CARD IN OUTPUT         B 006360
         SPACE 1                                                        B 006370
         TM    BRSWITCH,SWBRKB     TEST IF PARM=KEYBREAK                B 006380
         BZ    CCERR2              BR IF NOT TO TEST NEXT ERROR         B 006390
         L     R1,$FSTCB02         GET ADDRESS OF ONLY CB02             B 006400
         TM    CB02SW-CB02NTRY(R1),SW02WBC IS BATCH CARD REQUESTED      B 006410
         BO    CCERR2              BR IF YES TO TEST NEXT ERROR         B 006420
         LINE  LINE01              TELL USER OF CAUSE OF POTENTIAL ERRO B 006430
         LINE  LINE02              TELL USER WHAT POTENTIAL ERROR IS    B 006440
         SPACE 1                                                        B 006450
CCERR2   EQU   *                                                        B 006460
         SPACE 1                                                        B 006470
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         B 006480
         TITLE 'BUDGIE3B - EXECUTED INSTRUCTIONS'                       B 006490
*********************************************************************** B 006500
*        EXECUTED INSTRUCTIONS                                        * B 006510
*********************************************************************** B 006520
         SPACE 1                                                        B 006530
         TITLE 'BUDGIE3B - MISCELLANEOUS CONSTANTS AND FIELDS'          B 006540
LINE01   DC    C'BDG3B-001-W  PARM=KEYBREAK SPECIFIED AND MS02 CARD DOE*B 006550
               S NOT REQUEST B/C IN OUTPUT'                             B 006560
LINE02   DC    C'BDG3B-002-W  .... 1ST OUTPUT RECORD FOR EACH KEY WILL *B 006570
               BE SUPPRESSED'                                           B 006580
LINE08   DC    C'END OF BUDGIE CONTROL CARDS'                           B 006590
LINE14   DC    C'BDG3B-014-W  SOURCE OF CONTROL RECORD FIELD IS IN INPU*B 006600
               T AREA AND WILL ACCESS NEXT BATCH CARD'                  B 006610
LINE15   DC    C'BDG3B-015-W  THE PRECEDING CONTROL CARD IS UNRECOGNISA*B 006620
               BLE AND HAS BEEN IGNORED'                                B 006630
LINE16   DC    C'BDG3B-016-C  SEVERE CONTROL CARD ERRORS DETECTED - RUN*B 006640
                TERMINATED'                                             B 006650
LINE17   DC    C'BDG3B-017-C  NUMBER OF MS40 CARDS DOES NOT EQUAL THE N*B 006660
               UMBER OF MS41 CARDS - UNBALANCED SUB-ROUTINES - RUN TERM*B 006670
               INATED'                                                  B 006680
LINE33   DS    0CL58                                                    B 006690
         DC    C'BDG3B-033-E  TEST TYPE '''                             B 006700
LINE33TT DS    CL2                                                      B 006710
         DC    C''' MAY ONLY APPEAR IN AN MS13 CONTROL CARD'            B 006720
LINE40   DC    C'BDG3B-040-E  MS05 CARD REQUIRES EITHER A FIELD PPLL OR*B 006730
                A LITERAL BALANCING VALUE'                              B 006740
         SPACE 1                                                        B 006750
XB11PRTI DS    CL1                 TEMP STORE: POSN OF REC TYPE ID      B 006760
XB11LTRI DS    CL1                 TEMP STORE: LGTH OF REC TYPE ID      B 006770
XB11RTI  DS    CL8                 TEMP STORE: LITERAL REC TYPE ID      B 006780
         EJECT                                                          B 006790
        SCSEND B                   TERMINATE CSECT BUDGIE3B             B 006800
         END                                                            B 006810
         SPACE 1                                                        B 006820
         REPRO                                                          B 006830
 IDENTIFY BUDGIE3B('C/C PROCESSING: 00-12')                             B 006840
         END                                                            B 006850
