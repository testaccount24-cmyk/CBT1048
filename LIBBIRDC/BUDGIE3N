         TITLE 'BUDGIE3N - INTERNAL MACROS'                             N 000010
         MACRO                                                          N 000020
         $CB   &PRINT=OFF                                               N 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        N 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           N 000050
               TITLE 'CB02 - CB02 CONTROL BLOCK'                        N 000060
         CB02  ,                   GENERATE DSECT                       N 000070
               TITLE 'CB11 - PRIMARY MS11 CONTROL BLOCK'                N 000080
         CB11  ,                   GENERATE DSECT                       N 000090
               TITLE 'CB20 - CB20 CONTROL BLOCK'                        N 000100
         CB20  ,                   GENERATE DSECT                       N 000110
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     N 000120
         CCB   ,                   GENERATE DSECT                       N 000130
               TITLE '     - GENERAL EQUATES'                           N 000140
       EQUATES ,                   GENERATE EQUATES                     N 000150
               TITLE '     - STORAGE POOL DEFINITION'                   N 000160
      POOLDEFN ,                   GENERATE DSECT                       N 000170
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        N 000180
         MEND                                                           N 000190
         SPACE 5                                                        N 000200
BUDGIE3N CSECT                                                          N 000210
         $CB   ,                   GENERATE DSECTS AND EQUATES          N 000220
         TITLE 'BUDGIE3N - TERMINATION ROUTINES'                        N 000230
        SCSECT N                   START CSECT BUDGIE3N                 N 000240
         ENTRY DUMP                ABNORMAL TERMINATION ROUTINE         N 000250
         ENTRY TERMPH1             1ST PHASE OF TERMINATION PROCESSING  N 000260
         SPACE 1                                                        N 000270
         WXTRN ABNDMSG             TABLE OF ERROR MESSAGES IN BUDGIE3T  N 000280
         TITLE 'BUDGIE3N - TERMINATION ROUTINES'                        N 000290
*********************************************************************** N 000300
*        1ST PHASE OF TERMINATION PROCESSING                          * N 000310
*********************************************************************** N 000320
         SPACE 1                                                        N 000330
TERMPH1  SUBIN SAVE=R4             PRESERBE RETURN ADDRESS              N 000340
         CBAL  R4,TERMLOG          TERMINATE BATCH LOG PROCESSING       N 000350
         CBAL  R4,TERMSUSP         TERMINATE SUSPENSE FILE PROCESSING   N 000360
         CBAL  R4,TERMINT          TERMIATE INTERNAL READER PROCESSING  N 000370
         CBAL  R4,TERMREP          TERMINATE B/B REPORT                 N 000380
         CBAL  R4,IOSUMMRY         PRINT SUMMARY OF I/O ACTIVITY        N 000390
         CBAL  R4,UIOSUMM          PRINT SUMMARY OF I/O ACIVITY ON USER N 000400
         CBAL  R4,CORECB           TELL OF CORE USED FOR CONTROL BLOCKS N 000410
         CBAL  R4,WORKCAP          TELL OF CAPACITY OF WORK FILE        N 000420
         CBAL  R4,ISAMCORE         TELL OF SIZE OF ISAM MASTER INDICES  N 000430
         CBAL  R4,COREDYN          TELL OF CORE DYNAMICALLY ACQUIRED    N 000440
         CBAL  R4,PRNTERRS         PRINT ANY ERROR MESSAGES             N 000450
         CBAL  R4,RECSUMM          PRINT SUMMARY OF ACTIV BY RCC TYPE   N 000460
         CBAL  R4,USERTERM         TERMINATE ANY USER MODULES           N 000470
         CBAL  R4,FREEALL          FREEMAIN ANY ACQUIRED CORE           N 000480
         CP    $CNTACC,$ZERO       TEST IF ANY BATCHES ACCEPTED         N 000490
         BH    *+8                 BR IF YES                            N 000500
         MVI   $COMPCDE+1,COND16   SET COMPLETION CODE OF 16            N 000510
         CBAL  R4,PRINTCDE         PRONT COMPLETION CODE                N 000520
         CBAL  R4,CLOSEALL         CLOSE ANY OPEN DATA SETS             N 000530
        SUBOUT RESTORE=R4          RETURN TO CALLER                     N 000540
         EJECT                                                          N 000550
*********************************************************************** N 000560
*        TERMAINATE BATCH LOG PROCESSING                              * N 000570
*********************************************************************** N 000580
         SPACE 1                                                        N 000590
TERMLOG  SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              N 000600
PRINTERM MVI   $CURUT1,X'FF'       MOVE HIGH VALUES TO SYSUT1 ....      N 000610
         MVC   $CURUT1+1(L'$CURUT1-1),$CURUT1 ... B/NO STORE            N 000620
         CLC   $CURUT1,$CURLIN     HAVE WE REACHED EOF ON LOGIN         N 000630
         BE    TERMLOGX            BR IF YES                            N 000640
         CBAL  R4,GETLOG           READ LOGIN TO EOF & WRITE TO LOGOUT  N 000650
TERMLOGX SUBOUT RESTORE=R4         RESTORE AND RETURN                   N 000660
         SPACE 5                                                        N 000670
*********************************************************************** N 000680
*        TERMINATE SUSPENSE FILE PROCESSING                           * N 000690
*********************************************************************** N 000700
         SPACE 1                                                        N 000710
TERMSUSP SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 000720
         CLC   $CURUT1,$CURSUSP    HAVE WE REACHED EOF ON SUSPIN        N 000730
         BE    TERMSSPX            BR IF YES                            N 000740
         CBAL  R4,GETSUSP          READ SUSPIN TO EOF & PUT TO SUSPOUT  N 000750
TERMSSPX SUBOUT RESTORE=R4         RSTORE AND RETURN                    N 000760
         EJECT                                                          N 000770
*********************************************************************** N 000780
*        TERMINATE INTERNAL READER PROCESSING                         * N 000790
*********************************************************************** N 000800
         SPACE 1                                                        N 000810
TERMINT  SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              N 000820
         CP    INTRDR+IOPSRCNT(4),$ZERO WAS INTERNAL READER USED        N 000830
         BE    TERMINTX            BYPASS ROUTINE IF NOT USED           N 000840
         TM    YPSWITCH,YPSWNEOF   IS '/*EOF' SIPPRESSED                N 000850
         BO    TERMINTX            BYPASS ROUTINE IF YES                N 000860
         L     R6,$DBUFF           GET ADDRESS OF DUMMY BUFFER          N 000870
         MVI   0(R6),C' '          MOVE BLANK TO START OF BUFFER        N 000880
         MVC   1(79,R6),0(R6)      PROPAGATE BLANKS THROUGH 80 BYTES    N 000890
         MVC   0(5,R6),=C'/*EOF'   SET INTRDR TERMINATION CHARACTERS    N 000900
         CBAL  R4,PUTINTR          GO WRITE '/*EOF' TO INTRDR           N 000910
TERMINTX SUBOUT RESTORE=R4         RESTORE ANE RETRUN                   N 000920
         EJECT                                                          N 000930
*********************************************************************** N 000940
*        TERMINATE BATCH BALANCING REPORT                             * N 000950
*********************************************************************** N 000960
         SPACE 1                                                        N 000970
TERMREP  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 000980
         MVI   0(R7),PAGESKIP      ESTABLISH SKIP TO NEW PAGE           N 000990
         ZAP   PRINTBB+IOPSRCNT(4),$ZERO PREVENT HEADING ROUTINE        N 001000
         CBAL  R4,PRNTBBL          PRINT BLANK LINES                    N 001010
         MVC   $WRKAREA,EDITPL3    MOVE EDIT PATTERN TO WORK AREA       N 001020
         ED    $WRKAREA(L'EDITPL3),$CNTREJ EDIT COUNT OF REJECTED BATCH N 001030
         MVC   BBLINE10+36(4),$WRKAREA+3 ADD COUNT TO MESSAGE           N 001040
         BNZ   *+22                BR IF REJECT CNT NOT ZERO TO PRINT   N 001050
         MVC   BBLINE10+7(6),$SPACES BALNK OUT 'NUMBER'                 N 001060
         MVC   BBLINE10+34(6),$SPACES BLANK OUT '= 9999'                N 001070
         MVC   BBLINE10+14(2),=C'NO' SET ' NO BATCHES REJECTED '        N 001080
         LA    R3,10               ESTABLISH LOOP                       N 001090
TERMBBR1 MVC   3(L'BBLINE10,R7),BBLINE10 ADD MESSAGE TO BUFFER          N 001100
         CBAL  R4,PRNTBBL          PRINT COUNT OF REJECTS               N 001110
         BCT   R3,TERMBBR1         PRINT MESSAGE 10 TIMES               N 001120
         CBAL  R4,PRNTBBL          PRINT BLANK LINE                     N 001130
         MVC   3(L'BBLINE11,R7),BBLINE11 TELL OF END OF REPORT          N 001140
         L     R7,LOGLIST+IOPSRECA GET LOGLIST BUFFER ADDRESS           N 001150
         MVI   0(R7),SPCE2AFT      ESTABLISH DOUBLE SPACE               N 001160
         CBAL  R4,PRNTLOG           AND SPACE FORWARD 2 LINES           N 001170
         L     R7,LOGLIST+IOPSRECA GET LOGLIST BUFFER ADDRESS           N 001180
         MVC   3(L'LOGMESS3,R7),LOGMESS3 TELL OF END OF REPORT          N 001190
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 001200
         EJECT                                                          N 001210
*********************************************************************** N 001220
*        PRINT SUMMARY OF I/O ACTIVITY                                * N 001230
*********************************************************************** N 001240
         SPACE 1                                                        N 001250
IOSUMMRY SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 001260
         L     R5,SYSPRINT+IOPSRECA RETRIVE CURRENT BUFFER DDDRESS      N 001270
         OI    PRINTBB+IOPSSW,IOSWEOP   FORCE IND TO SHOW PRINT D/S     N 001280
         AP    SYSPRINT+IOPSRCNT(4),$PGELMIT FORCE LCNT TO PAGE LIMIT   N 001290
         CBAL  R4,PRINT            PRINT LINE TO FORCE EOP              N 001300
         OI    SYSPRINT+IOPSSW,IOSWEOP  FORCE IND TO SHOW PRINT D/S     N 001310
         OI    LOGLIST+IOPSSW,IOSWEOP   FORCE IND TO SHOW PRINT D/S     N 001320
         IOM   SUMMARY,SYSUT1,(R5),PRESENT,RTN=PRINT,LOOP=IOMMAXDD      N 001330
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 001340
         EJECT                                                          N 001350
*********************************************************************** N 001360
*        PRINT SUMMARY OF I/O ACTIVITY FOR USER-SPECIFIED D/S         * N 001370
*********************************************************************** N 001380
         SPACE 1                                                        N 001390
UIOSUMM  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 001400
         USING CB20NTRY,R10        ESTABLISG CB20 ADDRESSABILIYT        N 001410
         L     R10,$FSTCB20        GET ADDRESS OF 1ST CB20              N 001420
         B     *+8                 BYPASS FORWARD CHAINING              N 001430
IOSUMM   L     R10,CB20CB20        GET ADDRESS OF NEXT CB20             N 001440
         LTRR  R10,R10             TET FOR END OF CHAIN                 N 001450
         BZ    IOSUMMX             EXIT IF END OF CHAIN                 N 001460
         CLI   CB20FLAG,FLAGCB20   VERIFY THAT THIS IS A CB20           N 001470
         BNE   IOSUMM              BR IF NOT TO GET NEXT C/B            N 001480
         MVI   L'LINE12+8(R5),C'(' ADD PARENTHESES ...                  N 001490
         MVI   L'LINE12+11(R5),C')' ... TO LINE                         N 001500
         MVC   L'LINE12+9(2,R5),CB20TID ADD CB20 ID FOR IDENT           N 001510
         IOM   SUMMARY,CB20DCBS,(R5),RTN=PRINT PRINT SUMARY OF ACTIVITY N 001520
         LA    R2,CB20DCBS         POINT R2 AT DCB SW                   N 001530
         CBAL  R4,ISCLOSE          CLOSE DATA SET                       N 001540
         B     IOSUMM              LOOP BACK TO GET NEXT C/B            N 001550
IOSUMMX  CBAL  R4,PRINT            PRINT BLANK LINE                     N 001560
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 001570
         DROP  R10                 DROP CB20 ADDRESSABILITY             N 001580
         EJECT                                                          N 001590
*********************************************************************** N 001600
*        TELL OF CORE USED FOR CONTROL BLOCKS                         * N 001610
*********************************************************************** N 001620
         SPACE 1                                                        N 001630
CORECB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 001640
         L     R1,$GETMUSD         GET AMOUNT OF CORE USED              N 001650
         CVD   R1,$WRKDUBL         CONVERT TO DECIMAL                   N 001660
         ED    LINE18M,$WRKDUBL+5  ADD BYTE COUNT TO MESSAGE            N 001670
         LINE  LINE18,P=Y          PRINT MESSAGE                        N 001680
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 001690
         SPACE 3                                                        N 001700
*********************************************************************** N 001710
*        TELL CAPACITY OF INTERNAL STORAGE POOLS                      * N 001720
*********************************************************************** N 001730
         SPACE 1                                                        N 001740
WORKCAP  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 001750
         L     R1,$POOLMAX         GET CAPACITY OF STORAGE POOLS        N 001760
         CVD   R1,$WRKDUBL         CONVERT CAPACITY TO DECIMAL          N 001770
         ED    LINE28M,$WRKDUBL+5  EDIT CALACITY INTO MESSAGE           N 001780
         LINE  LINE28,P=Y          PRINT MESSAGE                        N 001790
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 001800
         EJECT                                                          N 001810
*********************************************************************** N 001820
*        TELL OF CORE REQUIRED FOR ISAM INDICES                       * N 001830
*********************************************************************** N 001840
         SPACE 1                                                        N 001850
ISAMCORE SUBIN SAVE=R4             PRESRVE RETURN ADDRESS               N 001860
         L     R1,$SIZEISX         GET SIZE OF ISAM MASTER INDICES      N 001870
         LTRR  R1,R1               DETREMONE IF SIZE IS ZERO            N 001880
         BZ    ISAMCORX            BYPASS MESSAGE IF NO CORE  USED      N 001890
         CVD   R1,$WRKDUBL         CONVERT SIZE TO DECIMAL              N 001900
         ED    LINE34M,$WRKDUBL+5  EDIT SIZE ITO MESSAGE                N 001910
         LINE  LINE34,P=Y          PRINT MESSAGE                        N 001920
         TM    YPSWITCH,YPSWNOIX   WERE INDICES SUPPREDSED              N 001930
         BZ    ISAMCORX            BR IF INDICES NOT SUPPRESSED         N 001940
         LINE  LINE35,P=Y          TELL THAT INDICES WERE SUPPREDSED    N 001950
ISAMCORX SUBOUT RESTORE=R4         RESTPRE @ND RETURN                   N 001960
         EJECT                                                          N 001970
*********************************************************************** N 001980
*        TELL OF CORE DYNAMICALLY ACQUIRED                            * N 001990
*********************************************************************** N 002000
         SPACE 1                                                        N 002010
COREDYN  SUBIN SAVE=R4             PRESERVE RETURN AFDRESS              N 002020
PRINTER0 L     R1,$GETMDYN         GET AMOUNT OF CORE DYNAMICALLY ACQUI N 002030
         LTRR  R1,R1               TEST IF NO CORE ACQUIRED             N 002040
         BZ    COREDYNX            BR IF NO CORE TO EXIT                N 002050
         CVD   R1,$WRKDUBL         CONVERT SIZE TO DECIMAL              N 002060
         ED    LINE38M,$WRKDUBL+4  INSERT SIZE INTO MESSAGE             N 002070
         LINE  LINE38,P=Y          PRINT MESSAGE                        N 002080
COREDYNX SUBOUT RESTORE=R4                                              N 002090
         EJECT                                                          N 002100
*********************************************************************** N 002110
*        PRINT ANY ERROR MESSAGES                                     * N 002120
*********************************************************************** N 002130
         SPACE 1                                                        N 002140
PRNTERRS SUBIN SAVE=R4             PRESRV REYURN ADDRESS                N 002150
         TM    SWERROR,SWEGETM     TEST IF STORAGE POOL TOO SMALL       N 002160
         BZ    PRINTER1            BRANCH IF NO                         N 002170
         L     R1,$GETMXES         GET AMOUNT OF ADDITIONAL GETMAINS    N 002180
         CVD   R1,$WRKDUBL         CONVERT AMOUNT TO DECIMAL            N 002190
         ED    LINE19M,$WRKDUBL+5  EDIT AOUNT INTO MESSAGE              N 002200
         LINE  LINE19,P=Y          TELL OF ERROR                        N 002210
PRINTER1 TM    SWERROR,SWEURTN     DID USER RTN PASS BAD PPLL DATA      N 002220
         BZ    PRINTER2            BRANCH IF NO                         N 002230
         LINE  LINE20,P=Y          TELL OF ERROR(S)                     N 002240
PRINTER2 EQU   *                   ERROR MESSAGE REMOVED                N 002250
PRINTER3 EQU   *                   ERROR MESSAGE REMOVED                N 002260
PRINTER4 EQU   *                   ERROR MESSAGE REMOVED                N 002270
PRINTER5 EQU   *                   ERROR MESSAGE REMOVED                N 002280
PRINTER6 EQU   *                   ( ERROR MESSAGE REMOVED )            N 002290
PRINTER8 EQU   *                   ERROR MESSAGE REMOVED                N 002300
PRINTER9 CLC   $RECLUT1,=H'256'    IS INPUT REC > 256 BYTES LONG        N 002310
         BH    PRINTR10            BR IF GREATER TO TELL OF ERROR       N 002320
         CLC   $RECLUT2,=H'256'    IS OUT PUT REC > 256 BYTES LOBG      N 002330
         BH    PRINTR10            BR IF GREATER TO TELL OF RRROR       N 002340
         CLC   $RECLINT,=H'256'    IS INTERNAL REC > 256 BYTES LONG     N 002350
         BNH   PRINTR11            BYPASS MESSAGE IF NOT                N 002360
PRINTR10 LINE  LINE37,P=Y          TELL OF UNADDRESSABLE LENGTH         N 002370
PRINTR11 EQU   *                                                        N 002380
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 002390
         EJECT                                                          N 002400
*********************************************************************** N 002410
*        PRINT SUMMARY OF ACTIVITY BY RECORD TYPE                     * N 002420
*********************************************************************** N 002430
         SPACE 1                                                        N 002440
RECSUMM  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 002450
         USING CB02NTRY,R8         ESTABLISH CB02 ADDRESSABILITY        N 002460
         USING CB11NTRY,R10        ESTABLISH CB11 ADDRESSABILITY        N 002470
         ZAP   SYSPRINT+IOPSRCNT(4),=P'0' ZEROISE LINE COUNT            N 002480
         LINE  S=P                 SKIP TO NEW PAGE                     N 002490
         LINE  LINE21              PRINT SUBHEADING                     N 002500
         L     R8,$FSTCB02          RETRIVE POINTER TO 1ST BATCH TYPE   N 002510
         B     *+8                 BYPASS FORWARD CHAINING              N 002520
SUMMACT  L     R8,CB02CB02         GET NEXT CB02 CONTROL BLOCK          N 002530
         LTRR  R8,R8               PURIFY & TETS IF ZERO                N 002540
         BZ    SUMMACTX            TERMINATE SUMMARY IF END OF CHAIN    N 002550
         LINE  ,                   PRINT BLANK LINE                     N 002560
         EJECT                                                          N 002570
*********************************************************************** N 002580
*        PRINT SUMMARY OF ACTIVITY BY RECORD TYPE ( CONT'D )          * N 002590
*********************************************************************** N 002600
         SPACE 1                                                        N 002610
         MVC   LINE22+27(8),CB02BCI MOVE BATCH CARD  ID TO MESSAGE      N 002620
         MVCD  5,LINE22            MOVE MESSAGE TO BUFFER               N 002630
         MVCD  5+L'LINE22,SUMMMASK EDIT MASK TO BUFFER                  N 002640
         ED    5+L'LINE22(L'SUMMMASK,R5),CB02CNT PUT COUNT IN BUFFER    N 002650
         CBAL  R4,PRINT            PRINT MESSAGE                        N 002660
         L     R10,CB02CB11        GET ADDRESS OF 1ST CB11 BLOCK        N 002670
         B     *+8                 BYPASS FORWARD CHAINING              N 002680
SUMMACT1 L     R10,CB11CB11        GET ADDRESS OF NEXT CB11 BLOCK       N 002690
         LTRR  R10,R10             PURIFY & TEST FOR END OF CHAIN       N 002700
         BZ    SUMMACT             IF END OF CB11 GET NEXT CB02         N 002710
         MVC   LINE23+27(8),CB11RTI MOVE DETAIL CARD ID TO MESSAGE      N 002720
         MVCD  5,LINE23            MESSAGE TO BUFFER                    N 002730
         MVCD  5+L'LINE23,SUMMMASK EDIT MASK TO BUFFER                  N 002740
         ED    5+L'LINE23(L'SUMMMASK,R5),CB11CNT PUT REC COUNT IN MESS  N 002750
         CBAL  R4,PRINT            PRINT MESSAGE                        N 002760
         B     SUMMACT1            LOOP TO NEXT CB11 BLOCK              N 002770
SUMMACTX LINE  ,                   PRINT BLANK LINE                     N 002780
         LINE  LINE24,S=2          PRINT 'END OF SUMMARY'               N 002790
        SUBOUT RESTORE=R4          RESTPRE AND RETURN                   N 002800
         DROP  R8,R10              DROP CONTROL BLOCK ADDRESSABILITY    N 002810
         EJECT                                                          N 002820
*********************************************************************** N 002830
*        TERMINATE ANY USER MODULES                                   * N 002840
*********************************************************************** N 002850
         SPACE 1                                                        N 002860
         USING CB02NTRY,R10        ESTABLISH CB02 ADDRESSABILITY        N 002870
USERTERM SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 002880
         L     R10,$FSTCB02         POINT AT 1ST CB02                   N 002890
         B     DLETRTN+4           BRANCH OVER FORWARD CHAINING         N 002900
DLETRTN  L     R10,CB02CB02        GET ADDRESS OF NEXT CB02             N 002910
         LTRR  R10,R10             PURIFY & TEST FOR END OF CHAIN       N 002920
         BZ    DLETRTNX            EXIT IF CHAIN EXHAUSTED              N 002930
         TM    CB02SW,SW02IRTN     WAS USER RTN INVOKED                 N 002940
         BZ    DLETRTN             GET NEXT CB02 IF NOT                 N 002950
         CBAL  R4,URTDLET          TERMINTE USER EXIT                   N 002960
         B     DLETRTN             GO GET NEXT CB02 ADDRESS             N 002970
DLETRTNX SUBOUT RESTORE=R4         RESTORE AND RETURN                   N 002980
         DROP R10                  DROP CB02 ADDRESSABILITY             N 002990
         EJECT                                                          N 003000
*********************************************************************** N 003010
*        FREE ANY DYNAMICALLY ACQUIRED CORE                           * N 003020
*********************************************************************** N 003030
         SPACE 1                                                        N 003040
         USING POOLDEFN,R5         ESTABLISH STORAGE POOL ADDRESSABILIT N 003050
FREEALL  SUBIN ,                   ENTER ROUTINE                        N 003060
         LA    R5,$GETPL1          POINT AT 1ST DYNAMICALLY ACQUIRED PO N 003070
         LA    R10,5               ESTABLISH LOOP OF 5 BUCKETS          N 003080
FRECORE1 TM    POOLSW,POOLUSE      WAS POOL USED                        N 003090
         BZ    FRECOREX            EXIT IF POOLS EXHAUSTED              N 003100
         MVC   GETMMCWA(8),POOLADR SET ADDRESS & SIZE IN W/A            N 003110
         FREEMAIN V,A=GETMMCWA     FREE CORE                            N 003120
         LA    R5,POOLLGTH(,R5)    POINT AT NEXT DEFINITION             N 003130
         BCT   R10,FRECORE1        LOOP BACK IF ANY BUCKETS LEFT        N 003140
FRECOREX SUBOUT ,                  RETURN TO CALLER                     N 003150
         DROP  R5                  DROP STORAGE POOL ADDRESSABILITY     N 003160
         EJECT                                                          N 003170
*********************************************************************** N 003180
*        PRINT CONDITION CODE                                         * N 003190
*********************************************************************** N 003200
         SPACE 1                                                        N 003210
PRINTCDE SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              N 003220
         L     R5,SYSPRINT+IOPSRECA RETRIEVE BUFFER ADDRESS             N 003230
         MVI   0(R5),SPCE2AFT      ESTABLISH DOUBLE SPACE               N 003240
         LINE  LINE02,P=N          SET UP MESSAGE                       N 003250
         LH    R2,$COMPCDE         GET COMPLETION CODE                  N 003260
         CVD   R2,$WRKDUBL         CONVERT TO DECIMA                    N 003270
         MVC   $WRKEDIT,EDITCOND   SET UP EDIT MASK                     N 003280
         ED    $WRKEDIT,$WRKDUBL+6 EDIT COMPLETION CODDE                N 003290
         MVC   L'LINE02+6(2,R5),$WRKEDIT+2 ADD CODE TO MESSAGE          N 003300
         CBAL  R4,PRINT            PRINT CONDITION CODE                 N 003310
         SPACE 1                                                        N 003320
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   N 003330
         SPACE 5                                                        N 003340
*********************************************************************** N 003350
*        CLOSE ALL OPEN DATA SETS                                     * N 003360
*********************************************************************** N 003370
         SPACE 1                                                        N 003380
CLOSEALL SUBIN SAVE=R4             PRESERVERETURN ADDRESS               N 003390
         IOM   CLOSE,SYSUT1,LOOP=IOMMAXDD CLOSE ANY OPEN FILES          N 003400
        SUBOUT RESTORE=R4          RESTPRE AND RETURN                   N 003410
         TITLE 'BUDGIE3N - ABNORMAL TERMINATION ROUTINE'                N 003420
*********************************************************************** N 003430
*        ABNORMAL TERMINATION ROUTINE                                 * N 003440
*********************************************************************** N 003450
         SPACE 1                                                        N 003460
*        THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS :-               N 003470
*              . PRESERVES ALL REGISTERS                                N 003480
*              . WRITES A MESSAGE TO THE OPERATOR                       N 003490
*              . ABNORMALLY TERMINATES                                  N 003500
         SPACE 1                                                        N 003510
*        ON ENTRY, $ABNDCDE CONTAINS THE ABEND CODE, WHICH IS A         N 003520
*         MULTIPLE OF 4.                                                N 003530
         SPACE 1                                                        N 003540
         DS    0F                  ENSURE ALIGNMENT                     N 003550
         DC    C' REGISTER CONTENTS AT ENTRY TO DUMP ROUTINE '          N 003560
DUMP     SUBIN SAVE=ALL            PRESERVE ALL REGISTERS               N 003570
       TTIMER CANCEL               CANCEL LOOP-DETECTING STIMER IF ANY  N 003580
*                                  TO PREVENT INTERCEPTING ABEND        N 003590
         TM    OSLEVEL,OSLMVS      ARE WE RUNNING UNDER MVS SOFTWARE    N 003600
         BZ    *+8                 BR IF NOT MVS                        N 003610
         OI    $ABNDCDE,FULLDUMP   FLAG TO PRODUCE DUMP ( TO ENSURE THA N 003620
*                                  PRODUCTION ERRORS ARE INTERCEPTED BY N 003630
*                                  WTOR ROUTINE IN OUR ABDUMP RTNS ).   N 003640
         TM    AFSWITCH,AFSWNABM   ARE ABEND MESSAGES SUPPRESSED        N 003650
         BO    DUMP02              BYPASS WTO ETC IF YES                N 003660
         L     R11,$ABNDCDE         RETRIEVE ABEND CODE                 N 003670
         LA    R11,0(,R11)           PURIFY HIGH ORDER BYTE             N 003680
         CVD   R11,$WRKDUBL        CONVERT ABEND COE TO DCEIMAL         N 003690
         MVC   $WRKAREA,ABCDEDIT   SET UP EDIT MASK                     N 003700
         ED    $WRKAREA(4),$WRKDUBL+6 EDIT USER CODEINTO EBCDIC         N 003710
         MVC   ABNDCODE,$WRKAREA+1 MOVE USER CODE TO MESSAGE            N 003720
         SLL   R11,4                MAKE ABEND CODE MULTIPLE OF 64      N 003730
         SH    R11,=H'64'          DECREMENT TO ALLOW FOR START OF TABL N 003740
         A     R11,=A(ABNDMSG)     POINT AT APPROPRIATE MESSAGE         N 003750
         MVC   ABNDMSG0,0(R11)      MOVE MESSGAE TO WTO AREA            N 003760
         WTO   MF=(E,ABNDMSGW)     TELL OPERATOR REASON OF ABEND        N 003770
         EJECT                                                          N 003780
*********************************************************************** N 003790
*        ABNORMAL TERMINATION ROUTINE ( CONT'D )                      * N 003800
*********************************************************************** N 003810
         SPACE 1                                                        N 003820
         TM    SYSPRINT+IOPSSW,IOSWOPEN IS SYSPRINT OPEN                N 003830
         BZ    DUMP02              BYPASS PRINTING MESSAGES IF NOT      N 003840
         L     R5,SYSPRINT+IOPSRECA GET SYSPRINT BUFFER ADDRESS         N 003850
         ZAP   SYSPRINT+IOPSRCNT(4),$ZERO ZEROISE LINE COUNT            N 003860
         MVI   0(R5),PAGESKIP      ESTABLISH PAGE SKIP                  N 003870
         CBAL  R4,PRINT            LEAP TO NEX PAGE                     N 003880
         LA    R10,10              SET LOOP VALUE                       N 003890
DUMP01   MVC   5(100,R5),ABNDMSGW+4 MOVE EOROR MESSAGE TO BUFFER        N 003900
         CBAL  R4,PRINT            PRINT ERROR MESSAGE ...              N 003910
         BCT   R10,DUMP01           ... 10 TIMES                        N 003920
DUMP02   L     R1,$ABNDCDE         SET ABEND CODE IN R1                 N 003930
         SVC   13                  ISSUE DUMP SVC                       N 003940
         TITLE 'BUDGIE3N - MISCELLANEOUS CONSTANTS AND FIELDS'          N 003950
GETMMCWA DS    2F                  WORK AREA FOR FREEMAIN               N 003960
         SPACE 1                                                        N 003970
         DS    0F                  ENSURE ALIGNMENT                     N 003980
ABNDMSGW DC    AL2(104),AL2(0)     WTO CONTROL INFORMATION              N 003990
         DC    C'BDG3N-001-C  '                                         N 004000
         DC    C'BUDGIE3 ERROR - U'                                     N 004010
ABNDCODE DC    CL3' ',C' - '        ** WTO AREA                         N 004020
ABNDMSG0 DC    CL64' '             **                                   N 004030
         SPACE 1                                                        N 004040
ABCDEDIT DC    X'F0212020'         EDIT MASK FOR USER ABEND CODE        N 004050
EDITCOND DC    X'40202120'                                              N 004060
EDITPL3  DC    X'4040202020212040'                                      N 004070
SUMMMASK DC    X'40206B2020206B202120'                                  N 004080
         SPACE 1                                                        N 004090
LOGMESS3 DC    C'END OF BATCH LOG STATUS REPORT'                        N 004100
BBLINE10 DC    C'****** NUMBER OF BATCHES REJECTED = 9999 ******'       N 004110
BBLINE11 DC    C'END OF BATCH BALANCING REPORT'                         N 004120
LINE02   DC    C'BDG3N-002-I  CONDITION CODE = '                        N 004130
LINE12   DS    0CL63                                                    N 004140
         DC    C'BDG3N-012-I  NUMBER OF RECORDS '                       N 004150
LINE12M1 DS    CL11                                                     N 004160
LINE12DD DS    CL8                                                      N 004170
         DC    C' '                                                     N 004180
         DC    C' ='                                                    N 004190
LINE12M2 DS    CL10                                                     N 004200
LINE12R  DC    C'READ FROM  '                                           N 004210
LINE12W  DC    C'WRITTEN TO '                                           N 004220
LINE12M  DC    X'40206B2020206B202120'                                  N 004230
LINE18   DS    0CL67                                                    N 004240
         DC    C'BDG3N-018-I  '                                         N 004250
         DC    C'AMOUNT OF CORE USED FOR CONTROL BLOCKS IS'             N 004260
LINE18M  DC    X'4020206B202021'   EDIT MASK FOR BYTE COUNT             N 004270
         DC    C' BYTES'                                                N 004280
LINE19   DS    0CL126                                                   N 004290
         DC    C'BDG3N-019-E  '                                         N 004300
         DC    C'STORAGE POOL TOO SMALL FOR BUDGIE CONTROL BLOCKS - GET*N 004310
               MAINS WERE REQUIRED - INCREASE BY'                       N 004320
LINE19M DC X'4020206B202021'                                            N 004330
 DC C' BYTES FOR NEXT RUN'                                              N 004340
LINE20   DC    C'BDG3N-020-E  USER EXIT PASSED INVALID POSN AND LGTH'   N 004350
LINE21   DC    C'BDG3N-021-I  SUMMARY OF ACTIVITY BY RECORD TYPE'       N 004360
LINE22   DC    C'BDG3N-022-I   BATCH CARD - ........ - RECORD COUNT ='  N 004370
LINE23   DC    C'BDG3N-023-I  DETAIL CARD - ........ - RECORD COUNT ='  N 004380
LINE24   DC    C'BDG3N-024-I  END OF RECORD TYPE SUMMARY'               N 004390
LINE28   DS    0CL75                                                    N 004400
         DC    C'BDG3N-028-I  '                                         N 004410
         DC    C'SIZE OF BATCH THAT CAN BE PROCESSED INTERNALLY IS'     N 004420
LINE28M  DC    X'4020206B202021'   EDIT MASK FOR POOL CAPACITY          N 004430
         DC    C' CARDS'                                                N 004440
LINE34   DS    0CL76                                                    N 004450
         DC    C'BDG3N-034-I  '                                         N 004460
         DC    C'AMOUNT OF CORE REQUIRED BY ISAM MASTER INDICES WAS'    N 004470
LINE34M  DC    X'4020206B202021'   EDIT MASK FOR CORE COUNT             N 004480
         DC    C' BYTES'                                                N 004490
LINE35   DC    C'BDG3N-035-I   BUT THE INDICES WERE SUPPRESSED ( BY PAR*N 004500
               M=NOISINDEX )'                                           N 004510
LINE37   DC    C'BDG3N-037-W  INPUT/INTERNAL/OUTPUT RECORD LENGTH EXCEE*N 004520
               DS 256 BYTES AND IS PARTIALLY UNADDRESSABLE'             N 004530
LINE38   DS    0CL68                                                    N 004540
         DC    C'BDG3N-038-I  '                                         N 004550
         DC    C'AMOUNT OF CORE DYNAMICALLY ACQUIRED WAS'               N 004560
LINE38M  DC    X'40206B2020206B202021' EDIT MASK FOR ACQUIRED CORE      N 004570
         DC    C' BYTES'                                                N 004580
        SCSEND N                   TERMINATE CSECT BUDGIE3N             N 004590
         END                                                            N 004600
         SPACE 1                                                        N 004610
         REPRO                                                          N 004620
 IDENTIFY BUDGIE3N('TERMINATION ROUTINES')                              N 004630
         END                                                            N 004640
