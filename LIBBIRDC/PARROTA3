         TITLE 'PARROTA3 - PARM FIELD PROCESSING'                       A3000100
         MACRO                                                          A3000200
         $CB   &PRINT=OFF                                               A3000300
         PUSH  PRINT                                                    A3000400
         PRINT &PRINT                                                   A3000500
               EJECT                                                    A3000600
         CBPREFIX ,                CONTROL BLOCK PREFIX                 A3000700
               EJECT                                                    A3000800
         CCB   ,                   CENTRAL CONTROL BLOCK                A3000900
               EJECT                                                    A3001000
         EQUATES ,                 GENERATE STANDARD EQUATES            A3001100
         POP   PRINT                                                    A3001200
         MEND                                                           A3001300
         SPACE 5                                                        A3001400
PARROTA3  CSECT                                                         A3001500
         $CB   ,                   GENERATE DSCETS                      A3001600
         SPACE 1                                                        A3001700
     SCSECT A3                                                          A3001800
         USING PARROTA3,R12         ESTABLISH ADDRESSABILITY FOR CSECT  A3001900
         USING CCBNTRY,R13         ESTABLISH ADDRESSABILITY FOR CCB C/B A3002000
         SPACE 1                                                        A3002100
         ENTRY PARENDA3            END OF CSECT                         A3002200
         ENTRY INITPRM             PROCESS PARM FIELDS                  A3002300
         ENTRY PARMINT             INITIALISE PARM PROCESSING           A3002400
         ENTRY PARMRTN             PROCESS SINGLE PARM VALUE            A3002500
         TITLE 'PARROTA3 - PARM FIELD PROCESSING'                       A3002600
         SPACE 1                                                        A3002700
*********************************************************************** A3002800
*        PROCESS PARM                                                 * A3002900
*********************************************************************** A3003000
         SPACE 1                                                        A3003100
INITPRM  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              A3003200
         SPACE 1                                                        A3003300
PARM01   CBAL  R4,PARMGET          RETRIEVE SUBFIELD                    A3003400
         BNE   EOPARM              BRANCH IF PARM EXHAUESTED            A3003500
         CBAL  R4,PARMRTN          IDENTIFY AND PROCESS SUB-FIELD       A3003600
         B     PARM01              LOOP BACK FOR NEXT SUBFIELD          A3003700
         SPACE 5                                                        A3003800
EOPARM   NI    SWINIT,FF-MINTPARM  INDICATE NO LONGER PROCESSING PARM   A3003900
        SUBOUT RESTORE=R4          RETURN TO MAIN-LINE                  A3004000
         TITLE 'PARROTA3 - IDENTIFY INDIVIDUAL PARM VALUES'             A3004100
*********************************************************************** A3004200
*        PROCESS PARM ( CONT'D ) - IDENTIFY INDIVIDUAL PARM VALUES    * A3004300
*********************************************************************** A3004400
         SPACE 1                                                        A3004500
PARMRTN  SUBIN SAVE=(R2,R3,R4,R14,R15) PRESERVE REGISTERS               A3004600
         LA    R4,PARMRTNX         SET RETURN ADDRESS FOR EXITS         A3004700
         CH    R3,=H'3'            TEST IF SUBFIELD AT LEAST 4 LONG     A3004800
         BL    PARMABRV            GO TEST FOR ABBREVIATION IF ^>=3     A3004900
         BE    PARM02              NO PARM HAS LENFTH 3 SO INVALID      A3005000
         SPACE 1                                                        A3005100
         CLC   0(5,R2),=C'ADUMP'   IS IT REQUEST FOR FULL USER DUMPS    A3005200
         BE    PARMADMP            GO PROCESS IF YES                    A3005300
         CLC   0(3,R2),=C'CB='     IS IT AMOUNT OF STORAGE FOR C/B'S    A3005400
         BE    PARMCB              BR IF YES TO PROCESS                 A3005500
         CLC   0(6,R2),=C'CBDUMP'  IS IT REQUEST FOR C/B FORMATING DUMP A3005600
         BE    PARMCBD             GO PROCESS IF YES                    A3005700
         CLC   0(8,R2),=C'DUMPEOFL' IS IT REQUEST NOT TO SUPPRESS OFLOW A3005800
         BE    PARMEOFL            GO PROCESS IF YES                    A3005900
         CLC   0(5,R2),=C'FDUMP'   IS IT REQUEST FOR DUMP IN TERMINATN  A3006000
         BE    PARMFDMP            GO PROCESS IF YES                    A3006100
         CLC   0(9,R2),=C'NOISINDEX' IS IT REQUEST TO SUPPRESS INCORE   A3006200
         BE    PARMNOIX            BR IF YES TO PROCESS                 A3006300
*        CLC   0(3,R2),=C'WA='     IS I WORK RAEA SPECIFICATION         A3006400
*        BE    PARMWA              GO PROCESS IF YES                    A3006500
         CLC   0(5,R2),=C'NOGEN'   IS IT REQUEST TO SUPPRESS SYSLIB C/C A3006600
         BE    PARMNGEN            GO PROCESS IF YES                    A3006700
         CLC   0(9,R2),=C'UT493MBB=' IS IT 'MUST BE BLANK' CHAR         A3006800
         BE    PARMMBB             GO PROCESSS IF YES                   A3006900
         CLC   0(4,R2),=C'TEST'    IS THIS S REQUEST FOR TESTING AIDS   A3007000
         BE    PARMTEST            GO PROCESS IF YES                    A3007100
         CLC   0(6,R2),=C'UEXIT='  IS THIS THE NAME OF THE USER EXIT    A3007200
         BE    PARMUXIT            GO PROCESS IF YES                    A3007300
         CLC   0(7,R2),=C'UINDS=(' IS THIS USER INDICATOR SPECIFICATION A3007400
         BE    PARMUIND            GO PROCESS IF YES                    A3007500
         CLC   0(5,R2),=C'NOSEQ'   IS IT REQUEST FOR NO SEQUENCE CHECKI A3007600
         BE    PARMNSEQ            GO PROCESS IF YES                    A3007700
         CLC   0(8,R2),=C'MAXDMPS=' IS IT MAX NO. OF DUMPS TO RETRY     A3007800
         BE    PARMMDMP            GO PROCESS IF YES                    A3007900
         CLC   0(6,R2),=C'STIMER'  ARE LOOP-DETECTING STIMERS REQUIRED  A3008000
         BE    PARMSTIM            GO PROCESS IF YES                    A3008100
         CLC   0(8,R2),=C'NOSTIMER' ARE LOOP-DETECTING STIMERS SUPPRESS A3008200
         BE    PARMNOST            GO PROCESS IF YES                    A3008300
         CLC   0(7,R2),=C'MONITOR' IS THIS REQUEST FOR SELF-MONITORING  A3008400
         BE    PARMMON             GO PROCESS IF YES                    A3008500
         EJECT                                                          A3008600
*********************************************************************** A3008700
*        PROCESS PARM ( CONT'D ) - IDENTIFY INDIVIDUAL PARMS ( CONT'D ) A3008800
*********************************************************************** A3008900
         SPACE 1                                                        A3009000
         CLC   0(12,R2),=C'TOTIND=KEYNO' IS IT TOTAL INDICATOR MODIFIER A3009100
         BE    PARMTIND            BR IF YES TO PROCESS                 A3009200
         CLC   0(6,R2),=C'GR90=('  IS THIS GR90 INDICATOR SPEC'N        A3009300
         BE    PARMGR90            BR IF YES TO PROCESS                 A3009400
         CLC   0(8,R2),=C'GR08XTRA' ARE ADDITIONAL GR08 FLDS SUPPLIED   A3009500
         BE    PARMGR08            BR IF YES TO PROCESS                 A3009600
         CLC   0(6,R2),=C'NOSTAE'  IS THIS REQUEST TO SUPPRESS ESTAE    A3009700
         BE    PARMNSTA            GO PROCESS IF YES                    A3009800
         CLC   0(3,R2),=C'SEQ'     IS IT REQUEST FOR SEQUNCE CHECKING   A3009900
         BE    PARMSEQ             BR IF YES TO PROCESS                 A3010000
         CLC   0(4,R2),=C'STAE'    IS IT REQUEST FOR STAE EXIT          A3010100
         BE    PARMSTAE            BR IF YES TO PROCESS                 A3010200
         CLC   0(8,R2),=C'VALIDATE' IS IT REQUEST FOR NUMERIC VALID N   A3010300
         BE    PARMVAL             BR IF YES TO PROCESS                 A3010400
         CLC   0(7,R2),=C'UINDS=(' IS IT USER INDICATOR SPEC'N          A3010500
         BE    PARMUIND            BR IF YES TO PROCESS                 A3010600
         EJECT                                                          A3010700
*********************************************************************** A3010800
*        PROCESS PARM ( CONT'D )                                      * A3010900
*********************************************************************** A3011000
         SPACE 1                                                        A3011100
PARM02   MVC   5(L'PARMESS3,R5),PARMESS3 'UNRECOGNISABLE' MESSAGE       A3011200
         BCTR  R3,0                DECREMENT R3 FOR EXECUTE             A3011300
         EX    R3,PARMEMVC         MOVE SUBFIELD TO ERROR MESSAGE       A3011400
         CBAL  R4,PRINT            PRINT ERROR MESSAGE                  A3011500
         B     PARMRTNX            GO TO ROUTINE EXIT                   A3011600
         SPACE 1                                                        A3011700
PARM03   MVC   5(L'PARMESS2,R5),PARMESS2 MOVE MESSAGE TO LINE           A3011800
         BCTR  R3,0                DECREMENT FOR EXECUTE                A3011900
         EX    R3,PARM2MVC         MOVE SUBFIELD TO MESSAGE             A3012000
         CBAL  R4,PRINT            PRINT ERROR MESSAGE                  A3012100
         B     PARMRTNX            GO TO ROUTINE EXIT                   A3012200
         EJECT                                                          A3012300
*********************************************************************** A3012400
*        PROCESS PARM ( CONT'D ) - RECOGNISE ABBREVIATIONS            * A3012500
*********************************************************************** A3012600
         SPACE 1                                                        A3012700
PARMABRV EQU   *                   ENTER SUBRTN                         A3012800
         CLC   0(2,R2),=C'ADUMP'   IS IT REQUEST FOR FULL USER DUMPS    A3012900
         BE    PARMADMP            GO PROCESS IF YES                    A3013000
         CLC   0(2,R2),=C'CBDUMP'  IS IT REQUEST FOR C/B FORMATING DUMP A3013100
         BE    PARMCBD             GO PROCES IF YES                     A3013200
         CLC   0(2,R2),=C'DE'      IS IT REQUEST NOT TO SUPPRESS OFLOW  A3013300
         BE    PARMEOFL            GO PROCESS IF YES                    A3013400
         CLC   0(2,R2),=C'FDUMP'   IS IT REQUEST FOR DUMP IN TERMINATN  A3013500
         BE    PARMFDMP            GO PROCESS IF YES                    A3013600
         CLC   0(2,R2),=C'NX'      IS IT REQUEST TO SUPPRESS IS INDICS  A3013700
         BE    PARMNOIX            BR IF YES TO PROCESS                 A3013800
         CLC   0(2,R2),=C'NG'      IS IT REQUEST TO SUPPRESS SYSLIB C/C A3013900
         BE    PARMNGEN            GO PROCESS IF YES                    A3014000
         CLC   0(2,R2),=C'TEST'    IS THIS A REQUEST FOR TESTING AIDS   A3014100
         BE    PARMTEST            GO PROCESS IF YES                    A3014200
         CLC   0(2,R2),=C'NS'      IS IT REQUEST FOR NO SEQUENCE CHECKI A3014300
         BE    PARMNSEQ            GO PROCESS IF YES                    A3014400
         CLC   0(2,R2),=C'STIMER'  ARE LOOP-DETECTING STIMERS REQUIRED  A3014500
         BE    PARMSTIM            GO PROCESS IF YES                    A3014600
         CLC   0(2,R2),=C'VALIDATE' IS IT REQUEST FOR NUMERIC VALID'N   A3014700
         BE    PARMVAL             BR IF YES TO PROCESS                 A3014800
         CLC   0(2,R2),=C'TK'      TOTIND=KEYNO ?                       A3014900
         BE    PARMTIND            BR IF YES TO PROCESS                 A3015000
         SPACE 1                                                        A3015100
         B     PARM02              UNKNOWN PARM SO TELL OF ERROR        A3015200
PARMRTNX SUBOUT RESTORE=(R2,R3,R4,R14,R15) RESTORE AND RETURN TO CALLER A3015300
         TITLE 'PARROTA3 - PARM FIELD PROCESSING'                       A3015400
*********************************************************************** A3015500
*        PROCESS PARM ( CONT'D ) - FULL DUMPS FOR ALL USER ABEND CODES* A3015600
*********************************************************************** A3015700
         SPACE 1                                                        A3015800
PARMADMP SUBIN ,                   ENTER ROUTINE                        A3015900
         OI    $ABNDCDE,FULLDUMP   SET BIT FOR FULL DUMPS               A3016000
        SUBOUT ,                   RETURN TO MAIN-LINE                  A3016100
         SPACE 5                                                        A3016200
*********************************************************************** A3016300
*        PROCESS PARM ( CONT'D ) - SPECIFY STORAGE FOR C/B'S          * A3016400
*********************************************************************** A3016500
         SPACE 1                                                        A3016600
PARMCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRES               A3016700
         LA    R14,3(,R2)          POINT R14 AT START OF NUMBER         A3016800
         LR    R15,R3              SET R15 TO FIELD LENGTH              A3016900
         SH    R15,=H'3'           DECREMENT TO ALLOW FOR 'CB='         A3017000
         BCTR  R15,0               DECREMENT FOF EXECUTE IN 'NUMERIC'   A3017100
         CBAL  R4,NUMERIC          VALIDATE THAT FIELD IS NUMERIC       A3017200
         BNE   PARM03              IF NOT NUMERIC TELL OF ZRROR         A3017300
         ST    R1,$GETCORE+4       MOVE BINARY VALUE TO C/B             A3017400
        SUBOUT RESTORE=R4          RETRUN TO CALLER                     A3017500
         SPACE 5                                                        A3017600
*********************************************************************** A3017700
*        PROCESS PARM ( CONT'D ) - FORCE DUMP IN TERMINATION          * A3017800
*********************************************************************** A3017900
         SPACE 1                                                        A3018000
PARMFDMP SUBIN ,                   ENTER ROUTINE                        A3018100
         OI    SWPARM,MPRMFDMP     FLAG TO FORCE DUMP IN TERMINATION    A3018200
        SUBOUT ,                   RETURN TO MAIN-LINE                  A3018300
         EJECT                                                          A3018400
*********************************************************************** A3018500
*        PROCESS PARM ( CONT'D ) - SUPPRESS IN-CORE IS MASTER INDICES * A3018600
*********************************************************************** A3018700
         SPACE 1                                                        A3018800
PARMNOIX SUBIN ,                   ENTER ROUTINE                        A3018900
         OI    SWINIT,MINTNOIX     FLAG TO SUPPRESS INDICES             A3019000
        SUBOUT ,                   RETURN TO MAIN-LINE                  A3019100
         SPACE 5                                                        A3019200
*********************************************************************** A3019300
*        PROCESS PARM ( CONT'D ) - WORK AREA LENGTH                     A3019400
*********************************************************************** A3019500
         SPACE 1                                                        A3019600
PARMWA   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              A3019700
         LA    R1,256              SET DEFAULT VALUE LEST NON-NUMERIC   A3019800
         STH   R1,WALGTH           PRESERVE DEFAULT VALUE               A3019900
         LA    R14,3(,R2)          POINT R14 AT START OF NUMBER         A3020000
         LR    R15,R3              SET R15 TO SUBFIELD LENGTH           A3020100
         SH    R15,=H'3'           DECREMENT TO ALLOW FOR 'WA='         A3020200
         BCTR  R15,0               DECREMENT FOR EXECUTE IN 'NUMERIC'   A3020300
         CBAL  R4,NUMERIC          VALIDATE NUMERIC FIELD               A3020400
         BNE   PARM03              IF NOT NUMERIC TELL OF ERROR         A3020500
         STH   R1,WALGTH           PRESERVE LENGTH OF WORK AREA         A3020600
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   A3020700
         SPACE 5                                                        A3020800
*********************************************************************** A3020900
*        PROCESS PARM ( CONT'D ) - SUPPRESS PRINTING OF SYSLIB C/C    * A3021000
*********************************************************************** A3021100
         SPACE 1                                                        A3021200
PARMNGEN SUBIN ,                   ENETR ROUTINE                        A3021300
         OI    SWCCARDS,MCRDNGEN   FLAG TO SUPPRESS PRINT OF SYSLIB C/C A3021400
        SUBOUT ,                   RETURN TO CALLER                     A3021500
         SPACE 5                                                        A3021600
*********************************************************************** A3021700
*        PROCESS PARM ( CONT'D ) - ALTER 'MUST BE BLANK' CHARACTER    * A3021800
*********************************************************************** A3021900
         SPACE 1                                                        A3022000
PARMMBB  SUBIN ,                   ENTER ROUTINE                        A3022100
         L     R1,=V(UT493MBB)     GET ADDRESS OF DEFAULT CHAR ( IN 'K' A3022200
         MVC   0(1,R1),9(R2)       ALTER DEFAULT TO SUPPLIED CHAR       A3022300
        SUBOUT ,                   RETURN TO CALLER                     A3022400
         SPACE 5                                                        A3022500
*********************************************************************** A3022600
*        PROCESS PARM ( CONT'D ) - SUPPLY TESTING AIDS                * A3022700
*********************************************************************** A3022800
         SPACE 1                                                        A3022900
PARMTEST SUBIN ,                   ENETR ROUTINE                        A3023000
TESTOI   OI    SWPARM,MPRMTEST+MPRMSTIM SET FLAGS FOR TESTING AIDS      A3023100
        SUBOUT ,                   RETURN TO CALLER                     A3023200
         SPACE 5                                                        A3023300
*********************************************************************** A3023400
*        PROCESS PARM ( CONT'D ) - ISSUE LOOP-DETECTING STIMERS       * A3023500
*********************************************************************** A3023600
         SPACE 1                                                        A3023700
PARMSTIM SUBIN ,                   ENTER ROUTINE                        A3023800
         OI    SWPARM,MPRMSTIM     SET FLAG FOR LOOP-DETECTING STIMERS  A3023900
        SUBOUT ,                   RETURN TO CALLER                     A3024000
         EJECT                                                          A3024100
*********************************************************************** A3024200
*        PROCESS PARM ( CONT'D ) - SUPPRESS LOOP-DETECTING STIMERS    * A3024300
*********************************************************************** A3024400
         SPACE 1                                                        A3024500
PARMNOST SUBIN ,                   ENTER ROUTINE                        A3024600
         NI    SWPARM,FF-MPRMSTIM  SET OFF STIMER FLAG LEST ON          A3024700
         NI    TESTOI,FF-MPRMSTIM  ALTER FLAGS SET BY PARM=TEST         A3024800
        SUBOUT ,                   RETURN TO CALLER                     A3024900
         SPACE 5                                                        A3025000
*********************************************************************** A3025100
*        PROCESS PARM ( CONT'D ) - FORCE C/B FORMATING DUMP IN TERM'N * A3025200
*********************************************************************** A3025300
         SPACE 1                                                        A3025400
PARMCBD  SUBIN ,                   ENETR ROUTINE                        A3025500
         OI    SWPARM,MPRMCBD      FLAG TO DUMP ( U044 ) IN TERMINATION A3025600
        SUBOUT ,                   RETURN TO CALLER                     A3025700
         SPACE 5                                                        A3025800
*********************************************************************** A3025900
*        PROCESS PARM ( CONT'D ) - MODIFY GR07 TOTAL INDICATORS       * A3026000
*********************************************************************** A3026100
         SPACE 1                                                        A3026200
PARMTIND SUBIN ,                   ENTER ROUTINE                        A3026300
         OI    SWPARM2,MPRMTIND    SET FLAG FOR KEYNO TOTAL TIME INDS   A3026400
        SUBOUT ,                   RETURN TO CALLER                     A3026500
         EJECT                                                          A3026600
*********************************************************************** A3026700
*        PROCESS PARM ( CONT'D ) - SUPPRESS SEQUNCE CHECKING ON SYSUT1* A3026800
*********************************************************************** A3026900
         SPACE 1                                                        A3027000
PARMNSEQ SUBIN ,                   ENETR ROUTINE                        A3027100
         NI    SWPARM,FF-MPRMSEQ   FLAG TO SUPPRESS SEQUENCE CHECKING   A3027200
        SUBOUT ,                   RETURN TO CALLER                     A3027300
         SPACE 5                                                        A3027400
*********************************************************************** A3027500
*        PROCESS PARM ( CONT'D ) - REQUEST SEQUENCE CHECKING          * A3027600
*********************************************************************** A3027700
         SPACE 1                                                        A3027800
PARMSEQ  SUBIN ,                   ENTER ROUTINE                        A3027900
         OI    SWPARM,MPRMSEQ      SET ON FLAG FOR SEQUENCE CHECKING    A3028000
        SUBOUT ,                   RETURN TO CALLER                     A3028100
         SPACE 5                                                        A3028200
*********************************************************************** A3028300
*        PROCESS PARM ( CONT'D ) - DUMP ON EXPONENT OVERFLOW          * A3028400
*********************************************************************** A3028500
         SPACE 1                                                        A3028600
PARMEOFL SUBIN ,                   ENTER ROUTINE                        A3028700
         OI    SWPARM,MPRMEOFL     FLAG TO DUMP IF EXPONENT OVERFLOW    A3028800
        SUBOUT ,                   RETURN TO CALLER                     A3028900
         SPACE 5                                                        A3029000
*********************************************************************** A3029100
*        PROCESS PARM ( CONT'D ) - ALLOW ADDITIONAL GR08 FIELDS       * A3029200
*********************************************************************** A3029300
         SPACE 1                                                        A3029400
PARMGR08 SUBIN ,                   ENTER ROUTINE                        A3029500
         OI    SWPARM2,MPRMGR08    SET FLAG TO ALLOW ADDITIONAL FIELDS  A3029600
        SUBOUT ,                   RETURN TO CALLER                     A3029700
         EJECT                                                          A3029800
*********************************************************************** A3029900
*        PROCESS PARM ( CONT'D ) - GR90 LITERAL COMPARAND SPEC'N      * A3030000
*********************************************************************** A3030100
         SPACE 1                                                        A3030200
PARMGR90 SUBIN ,                   ENTER ROUTINE                        A3030300
         LR    R15,R3              SET LENGTH OF PARM IN REG 15         A3030400
         SH    R15,=H'7'           DECREMENT TO ALLOW FOR 'GR90=()'     A3030500
         CH    R15,=H'40'          ENSURE THAT PARM IS NOT TOO LONG     A3030600
         BNH   *+8                 BR IF NOT TOO LONG                   A3030700
         LA    R15,40              SET TO MAXIMUM ALLOWABLE LENGTH      A3030800
         BCTR  R15,0               DECREMENT LENGTH FOR EXECUTE         A3030900
         EX    R15,GR90MOVE        PRESERVE GR90 LITERAL IN CCB         A3031000
        SUBOUT ,                   RETURN TO CALLER                     A3031100
         SPACE 5                                                        A3031200
*********************************************************************** A3031300
*        PROCESS PARM ( CONT'D ) - REQUEST NUMERIC VALIDATION         * A3031400
*********************************************************************** A3031500
         SPACE 1                                                        A3031600
PARMVAL  SUBIN ,                   ENTER ROUTINE                        A3031700
         OI    SWPARM,MPRMVAL      SET FLAG FOR NUMERIC VALIDATION      A3031800
        SUBOUT ,                   RETURN TO CALLER                     A3031900
         EJECT                                                          A3032000
*********************************************************************** A3032100
*        PROCESS PARM ( CONT'D ) - ESTABLISH ESTAE ENVIRONMENT        * A3032200
*********************************************************************** A3032300
         SPACE 1                                                        A3032400
PARMSTAE SUBIN ,                   ENTER ROUTINE                        A3032500
         TM    SWPARM2,MPRMNSTA    HAS NOSTAE ALREADY BEEN PROCESSED    A3032600
         BZ    PARMSTAX            EXIT IF NOT - ALL IS WELL            A3032700
         NI    SWPARM2,FF-MPRMNSTA SET OFF FLAG SUPPRESSING STAE        A3032800
         LA    R15,$STAEXIT        SET EXIT ADDRESS IN REG 15           A3032900
         ESTAE (R15),              ADDR OF ESTAE EXIT                  *A3033000
               PURGE=NONE,         I/O TO CONTINUE                     *A3033100
               ASYNCH=YES,         ASYNCHRONOUS EXIT PROCESSING        *A3033200
               TERM=YES            INTERCEPT OPERATOR CANCEL ETC        A3033300
PARMSTAX SUBOUT ,                  RETURN TO CALLER                     A3033400
         SPACE 5                                                        A3033500
*********************************************************************** A3033600
*        PROCESS PARM ( CONT'D ) - SUPPRESS ESTAE EXIT                * A3033700
*********************************************************************** A3033800
         SPACE 1                                                        A3033900
PARMNSTA SUBIN ,                   ENTER ROUTINE                        A3034000
         ESTAE 0                   DISENGAGE ESTAE EXIT                 A3034100
        SUBOUT ,                   RETURN TO CALLER                     A3034200
         EJECT                                                          A3034300
*********************************************************************** A3034400
*        PROCESS PARM ( CONT'D ) - ESTABLISH USER INDICATORS          * A3034500
*********************************************************************** A3034600
         SPACE 1                                                        A3034700
PARMUIND SUBIN ,                   ENTER ROUTINE                        A3034800
         SH    R15,=H'7'           DECREMENT LENGTH FOR 'UINDS=('       A3034900
         CH    R15,=H'8'           ENSURE THAT PARM IS NOT TOO LONG     A3035000
         BNH   *+8                 BR IF NOT TOO LONG                   A3035100
         LA    R15,8               SET TO MAXIMUM UIND LENGTH ALLOWED   A3035200
         LA    R14,7(,R2)          POINT R14 AT 1ST INDICATOR           A3035300
         LA    R1,X'80'            SET ON 'BIT 0' IN REG 1 LAST BYTE    A3035400
         ICM   R9,3,=X'FF7F'       SET UP MASK TO SET OFF BIT 1         A3035500
PARMUI01 CLI   0(R14),C' '         IS THE SPECIFICATION BLANK           A3035600
         BE    PARMUI02            BR IF BLANK: LEAVE IND UNCHANGED     A3035700
         CLI   0(R14),C')'         HAVE WE EXHAUSTED INDICATORS         A3035800
         BE    PARMUI04            BR IF YES                            A3035900
         CLI   0(R14),C'N'         IS INDICATOR TO BE SET OFF           A3036000
         BE    PARMUI03            BR IF YES TO SET OFF                 A3036100
         CLI   0(R14),C'0'         IS INDCIATOR TO BE SET OFF           A3036200
         BE    PARMUI03            BR IF YES TO SET OFF                 A3036300
         EX    R1,UINDOI           SET ON THE INDICATOR                 A3036400
         B     PARMUI02            BYPASS SETTING IND OFF AGAIN         A3036500
PARMUI03 EX    R9,UINDNI           SET  OFF ASSOCIATED INDICATOR        A3036600
PARMUI02 LA    R14,1(,R14)         INCREMENT TO NEXT IND SPEC'N         A3036700
         SRL   R1,1                MOVE 'OI' MASK 1 BIT TO RIGHT        A3036800
         SRL   R9,1                MOVE 'NI' MASK 1 BIT TO RIGHT        A3036900
         BCT   R15,PARMUI01        LOOP BACK IF ANY BYTES LEFT          A3037000
PARMUI04 SUBOUT ,                  RETURN TO CALLER                     A3037100
         EJECT                                                          A3037200
*********************************************************************** A3037300
*        PROCESS PARM ( CONT'D ) - NAME OF OPTIONAL USER EXIT         * A3037400
*********************************************************************** A3037500
         SPACE 1                                                        A3037600
PARMUXIT SUBIN ,                   ENTER ROUTINE                        A3037700
         LR    R15,R3              SET SUBPARM LENGTH IN R15            A3037800
         MVC   $XITNAME,$SPACES    BLANK OUT THE EXIT NAME IN THE CCB   A3037900
         NI    $STATUS,FF-STATEXIT SET OFF FLAG LEST NULL PARM ENTRY    A3038000
         SH    R15,=H'6'           DECREMENT TO ALLOW FOR 'UEXIT='      A3038100
         LTRR  R15                 ENSURE THAT LENGTH NO REDUCED TO 0   A3038200
         BZ    PARMUXX             GO TO EXIT IF 0: PARM='UEXIT=,'      A3038300
         BCTR  R15,0               DECREMENT FOR EXECUTE                A3038400
         EX    R15,MVCUEXIT        MOVE NAME OF USER EXIT TO CCB        A3038500
         OI    $STATUS,STATEXIT    FLAG THAT USER EXIT PROCESSING REQ'D A3038600
PARMUXX SUBOUT ,                   RETURN TO CALLER                     A3038700
         EJECT                                                          A3038800
*********************************************************************** A3038900
*        PROCESS PARM ( CONT'D ) - MAX NO OF ABENDS BEFORE TERMINATION* A3039000
*********************************************************************** A3039100
         SPACE 1                                                        A3039200
PARMMDMP SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              A3039300
         LA    R14,8(,R2)          POINT R14 AT START OF NUMBER         A3039400
         LR    R15,R3              SET R15 TO LENGTH OF PARM            A3039500
         SH    R15,=H'8'           COMPUTE LENGTH OF NUMBER             A3039600
         BNP   PARMMDMX            EXIT IF NULL PARM                    A3039700
         BCTR  R15,0               DECREMENT FOR EXECUTABLE LENGTH      A3039800
         CBAL  R4,NUMERIC          ENSURE FIELD IS NUMERIC              A3039900
         BNE   PARM03              IF NOT NUMERIC TELL OF ERROR         A3040000
         ZAP   $MAXDMPS,$PVALUE    SET VALUE IN CCB                     A3040100
PARMMDMX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         A3040200
         SPACE 5                                                        A3040300
*********************************************************************** A3040400
*        PROCESS PARM ( CONT'D ) - REQUEST INSTRUCTION MONITORING     * A3040500
*********************************************************************** A3040600
         SPACE 1                                                        A3040700
PARMMON  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              A3040800
         OI    SWPARM,MPRMMON      SET FLAG FOR PROGRAM MONITORING      A3040900
         OI    SWPARM,MPRMCBD      FORCE C/B DUMP FOR ADDITIONAL DATA   A3041000
         CLI   7(R2),C'='          IS A MONITORING INTERVAL SPECIFIED   A3041100
         BNE   PARMMONX            EXIT IF NO MONITORING INTERVAL       A3041200
         LA    R14,8(,R2)          POINT R14 AT START OF INTERVAL       A3041300
         LR    R15,R3              SET R15 TO LENGTH OF PARM            A3041400
         SH    R15,=H'8'           COMPUTE LENGTH OF NUMBER             A3041500
         BCTR  R15,0               DECREMENT FOR EXECUTABLE LENGTH      A3041600
         CBAL  R4,NUMERIC          ENSURE FIELD IS NUMERIC              A3041700
         BNE   PARM03              IF NOT NUMERIC TELL OF ERROR         A3041800
         MH    R1,$MONINT+2        MULTIPLY FACTOR BY DEFAULT INTERVAL  A3041900
         ST    R1,$MONINT          PRESERVE NEW MONITORING INTERVAL     A3042000
PARMMONX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         A3042100
         EJECT                                                          A3042200
*********************************************************************** A3042300
*        THIS SUB-ROUTINE RETRIEVES SUB-FIELDS FROM THE PARM          * A3042400
*         FIELD IN THE EXEC STATEMENT.  ON RETURN, R2 CONTAINS THE      A3042500
*         SUB-FIELD ADDRESS AND R3 CONTAINS THE LENGTH.  THE CONDITION  A3042600
*         CODE IS SET SUCH THAT THE USER CAN MAKE THE FOLLOWING TESTS - A3042700
*              BE  - PARM SUB-FIEOLD FOUNF                              A3042800
*              BNE - PARM IS EXHAUSTED                                  A3042900
*********************************************************************** A3043000
         SPACE 1                                                        A3043100
PARMGET  SUBIN SAVE=(R7,R8,R9,R4)  PRESEVRE REGISTERS                   A3043200
         NI    SWINIT,FF-MINTPARM  ASSUME PARM EXHAUSTED: SET OFF FLAG  A3043300
         MVI   PARMTSTX,C'Y'       ASSUME PARM EXHUASTED                A3043400
         LM    R7,R9,PARMR7R9      RETRIEVE R7 AND R8 VALUES & R9       A3043500
         LA    R8,1                ESTABLISH BXLE INCREMENT             A3043600
         CR    R7,R9               TEST IF PARM EXHAUSTED               A3043700
         BNL   PARMGX1             EXIT IF PARM EXHAUSTED               A3043800
         OI    SWINIT,MINTPARM     INDICATE PROCESSING PARM FIELD       A3043900
         LR    R2,R7               POINT R2 AT START OF SUBFIELD        A3044000
PARMLOOP CLI   0(R7),C','          TEST FOR COMMA                       A3044100
PARMT1   BE    PARMLGTH            BRANCH IF YES UNLESS WAITING FOR '   A3044200
         CLI   0(R7),C'('          TEST FOR START OF PARENTHESIS        A3044300
         BNE   *+8                 BR IF NOT                            A3044400
         NI    PARMT1+1,X'0F'      NULLIFY ','TEST UNTIL END PARENTHESI A3044500
         CLI   0(R7),C')'          TEST FOR       PARENTHESIS           A3044600
         BNE   *+8                 BRANCH IF NOT                        A3044700
         OI    PARMT1+1,X'80'      ALLOW SCAN FOR COMMA                 A3044800
         BXLE  R7,R8,PARMLOOP      TEST NEXT CHARACTER UNLESS END       A3044900
         EJECT                                                          A3045000
*********************************************************************** A3045100
*        RETRIEVE PARM SUB-FIELDS ( CONT'D )                          * A3045200
*********************************************************************** A3045300
         SPACE 1                                                        A3045400
PARMLGTH LR    R3,R7               POINT AT END OF SUBFIELD             A3045500
         SR    R3,R2               DETERMINE SUBFIELD LENGTH            A3045600
         LA    R7,1(,R7)           POINT AT START OF NEXT SUBFIELD      A3045700
         STM   R7,R9,PARMR7R9      PRESERVE WORK REGISTERS              A3045800
         MVI   PARMTSTX,C'X'       SET TO SHOW SUB-FIELD FOUND          A3045900
         MVI   $WRKAREA,C' '       INSERT LEADING BLANK                 A3046000
         MVC   $WRKAREA+1(L'$WRKAREA-1),$WRKAREA .. AND PROPAGATE       A3046100
         BCTR  R3,0                DECREMENT LENFTH FOR EXECUTE         A3046200
         LTR   R3,R3               ENSURE NOT -VE (INPLIES ',,')        A3046300
         BM    *+8                 BYPASS EX IF -VE                     A3046400
         EX    R3,PARMMVC          MOVE SUB-PARM TO WORKAREA            A3046500
         LA    R3,1(,R3)           RE-ESTABLISH PARM FIELD LENGTH       A3046600
PARMGX1  CLI   PARMTSTX,C'X'       SE  CONDITION CODE                   A3046700
        SUBOUT RESTORE=(R7,R8,R9,R4) RESTORE & RETURN                   A3046800
         EJECT                                                          A3046900
*********************************************************************** A3047000
*        INITIALISE PARM ROUTINE POINTERS                             * A3047100
*********************************************************************** A3047200
         SPACE 1                                                        A3047300
PARMINT  SUBIN SAVE=(R4)           PRESERVE REGISTERS                   A3047400
         CBAL  R4,PRINT            PRINT A BLANK LINE                   A3047500
         L     R9,4(,R13)          RETRIEVE PREVIOUS SAVE AREA POINTER  A3047600
         L     R9,24(,R9)          RETRIEVE R1 (PARM PTR) FROM S/A      A3047700
         L     R9,0(,R9)           POINT R9 AT PARA3METER AREA          A3047800
         LH    R8,0(R9)            RETRIEVE COUNT FIELD                 A3047900
         LA    R7,2(,R9)           POINT R7 AT START OF DATA            A3048000
         MVC   5(L'PARMESS0,R5),PARMESS0 ASSUME NO PARM & SET UP LINE   A3048100
         LTR   R8,R8               TEST IF PARM SUPPLIED                A3048200
         BZ    PARMP1              BRANCH IF NOT                        A3048300
         BCTR  R8,0                DECREMENT R8 FOR EXECUTE             A3048400
         MVC   5(L'PARMESS1,R5),PARMESS1 ADD MESSAGE TO LINE            A3048500
         EX    R8,PARMPMVC         ADD PARM TO MESSAGE                  A3048600
         LA    R8,1(,R8)           RESET R8 AFTER EXECUTE               A3048700
PARMP1   CBAL  R4,PRINT            PRIN LINE ON SYSPRINT                A3048800
         LR    R9,R7               POINT R9 AT START OF DATA            A3048900
         AR    R9,R8               POINT R9 AT EOD                      A3049000
         BCTR  R9,0                DECREMENT R9 FOR USE AS BXLE COMPARE A3049100
         STM   R7,R9,PARMR7R9      PRESERVE REGISTERS FOR LATER USE     A3049200
        SUBOUT RESTORE=(R4)        RETURN TO CALLER                     A3049300
         TITLE 'PARROTA3 - EXECUTED INSTRUCTIONS'                       A3049400
*********************************************************************** A3049500
*        EXECUTED INSTRUCTIONS                                        * A3049600
*********************************************************************** A3049700
         SPACE 1                                                        A3049800
PARMPMVC MVC   L'PARMESS1+5(0,R5),0(R7) ADD PARM FIELD TO LINE          A3049900
PARM2MVC MVC   L'PARMESS2+5(0,R5),$WRKAREA ADD SUBFIELD TO MESSAGE      A3050000
PARMEMVC MVC   L'PARMESS3+5(0,R5),$WRKAREA ADD SUBFIELD TO ERROR MESSAG A3050100
PARMMVC  MVC   $WRKAREA(0),0(R2)   MOVE PARM SUB-FIELD TO WORK AREA     A3050200
MVCUEXIT MVC   $XITNAME(0),6(R2)   MOVE EXIT NAME TO CCB FROM PARM FLD  A3050300
PARMUIOI OI    $INDS+13,0          SET ON USER INDICATOR                A3050400
GR90MOVE MVC   $GR90IND(0),6(R2)   MOVE GR90 COMPARAND TO CCB           A3050500
UINDOI   OI    $UINDS,0            SET USER INDICATOR ON                A3050600
UINDNI   NI    $UINDS,0            SET USER INDICATOR OFF               A3050700
         TITLE 'PARROTA3 - MISC CONSTANTS AND FIELDS'                   A3050800
ADDRTCB  DC    F'0'                ADDRESS OF TCB                       A3050900
ADDRJSCB DC    F'0'                ADDRESS OF JSCB                      A3051000
ADDRJCT  DC    F'0'                ADDRESS OF JCT                       A3051100
PARMR7R9 DS    3F                  REGISTER SAVE AREA                   A3051200
         SPACE 1                                                        A3051300
WALGTH   DC    H'0'                LEGTH OF WORK AREA TO BE APPENDED    A3051400
         SPACE 1                                                        A3051500
         DS    0F                  ENSURE ALIGNMENT                     A3051600
ACTSTORE DC    CL39' '             STORE FOR ACT                        A3051700
PARMTSTX DC    C' '                COMPARA3ND TO SET CONDITION CODE     A3051800
         SPACE 1                                                        A3051900
PARMESS0 DC    C'PTA3-001-I  THERE IS NO PARM FIELD'                    A3052000
PARMESS1 DC    C'PTA3-002-I  THE CONTENTS OF THE PARM FIELD ARE - '     A3052100
PARMESS2 DC    C'PTA3-003-W  PARM SUB-FIELD IS NON-NUMERIC - DEFAULT VA*A3052200
               LUE USED - '                                             A3052300
PARMESS3 DC    C'PTA3-004-W  UNRECOGNISABLE OR INVALID SUBFIELD IN THE *A3052400
               PARM - '                                                 A3052500
         SPACE 1                                                        A3052600
*LINE01  IS    PARMESS0                                                 A3052700
*LINE02  IS    PARMESS1                                                 A3052800
*LINE03  IS    PARMESS2                                                 A3052900
*LINE04  IS    PARMESS3                                                 A3053000
LINE05   DS    0CL133                                                   A3053100
         DC    CL5' ',C'PTA3-005-I',CL39' '                             A3053200
         DC    C'PARROT MESSAGE DATA SET',CL26' '                       A3053300
LINE05D  DC    CL9' '                                                   A3053400
         DC    CL3' '                                                   A3053500
LINE05T  DC    CL8' '                                                   A3053600
         DC    CL10' '                                                  A3053700
*LINE06  IS    AUDIT MESSAGE IDENTIFIER                                 A3053800
         SPACE 5                                                        A3053900
CODETABL EQU   *                   TABLE OF PRODUCTION CATEGORY CODES   A3054000
CODENTRY DS    0PL2                LENGTH OF EACH TABLE ELEMENT         A3054100
         DC    PL2'9'                                                   A3054200
         DC    PL2'11'                                                  A3054300
         DC    PL2'12'                                                  A3054400
         DC    PL2'13'                                                  A3054500
NUMCODES EQU   (*-CODETABL)/L'CODENTRY NUMBER OF ELEMENTS IN TABLE      A3054600
         SPACE 1                                                        A3054700
        SCSEND A3                  TERMIANTE CSECT PARROTA3             A3054800
         END                                                            A3054900
