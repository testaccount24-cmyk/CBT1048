         TITLE 'BUDGIE3S - INTERNAL MACROS'                             S 000010
         MACRO                                                          S 000020
         $CB   &PRINT=OFF                                               S 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        S 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           S 000050
               TITLE 'CBPREFIX - CONTROL BLOCK PREFIX'                  S 000060
      CBPREFIX ,                   GENERATE DSECT                       S 000070
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     S 000080
         CCB   ,                   GENERATE DSECT                       S 000090
               TITLE '     - CSECT IDENTIFICATION PREFIX'               S 000100
       CSECTID ,                   GENERATE DSECT                       S 000110
               TITLE '     - GENERAL EQUATES'                           S 000120
       EQUATES ,                   GENERATE EQUATES                     S 000130
               TITLE '     - POOL DESCRIPTOR BLOCK'                     S 000140
      POOLDEFN ,                   POOL DESCRIPTOR BLOCK                S 000150
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        S 000160
         MEND                                                           S 000170
         SPACE 5                                                        S 000180
BUDGIE3S CSECT                                                          S 000190
         $CB   ,                   GENERATE DSECTS AND EQUATES          S 000200
         TITLE 'BUDGIE3S - STAE: SYSTEM DIAGNOSTIC WORK AREA'           S 000210
       IHASDWA ,                   STAE WORK AREA DSECT                 S 000220
         TITLE 'BUDGIE3S - STAE: LOAD LIST ELEMENT DSECT'               S 000230
        IHALLE ,                   LOAD LIST ELEMENT DSECT              S 000240
         TITLE 'BUDGIE3S - STAE: CONTENTS DIRECTORY ELEMENT'            S 000250
        IHACDE ,                   CONTENTS DIRECTORY ENTRY DSECT       S 000260
         TITLE 'BUDGIE3S - STAE: DUMP FORMAT PRINT LINE'                S 000270
*********************************************************************** S 000280
*        DUMP FORMAT PRINT LINE DSECT                                 * S 000290
*********************************************************************** S 000300
         SPACE 1                                                        S 000310
DUMPLINE DSECT                                                          S 000320
DMPLCC   DS    CL1                 CARRIAGE CONTROL CHARACTERE          S 000330
         DS    CL4                 UNUSED                               S 000340
DMPLADR  DS    CL6                 ADDRESS OF FIRST BYTE IN LINE        S 000350
         DS    CL3                 UNUSED                               S 000360
DMPLHEX  DS    0CL74               32 BYTES OF DATA IN HEX FORMAT       S 000370
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000380
         DS    CL1                 UNUSED                               S 000390
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000400
         DS    CL1                 UNUSED                               S 000410
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000420
         DS    CL1                 UNUSED                               S 000430
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000440
         DS    CL4                 UNUSED                               S 000450
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000460
         DS    CL1                 UNUSED                               S 000470
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000480
         DS    CL1                 UNUSED                               S 000490
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000500
         DS    CL1                 UNUSED                               S 000510
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 000520
         DS    CL3                 UNUSED                               S 000530
DMPLAST1 DS    CL1                 1ST DELIMITING ASTERISK              S 000540
DMPLCHAR DS    CL32                32 BYTES OF DATA UNEXPANDED          S 000550
DMPLAST2 DS    CL1                 2ND DELIMITING ASTERISK              S 000560
         DS    CL8                 UNUSED                               S 000570
DUMPLGTH EQU   *-DUMPLINE          LENGTH OF DSECT                      S 000580
         TITLE 'BUDGIE3S - STAE ERROR ANALYSIS EXIT'                    S 000590
        SCSECT S                   ESTABLISH START OF CSECT BUDGIE3S    S 000600
         USING BUDGIE3S,R12,R9     ESTABLISH TWO BASE REGISTERS         S 000610
         ENTRY STAE                STAE ERROR ANALYSIS EXIT             S 000620
         SPACE 1                                                        S 000630
         USING SDWA,R8             ESTABLISH STAE WORK AREA ADDRESS'Y   S 000640
         SPACE 5                                                        S 000650
*        NOTE THAT THIS SUB-CSECT IS UNUSUAL, IN THAT IT USES TWO BASE  S 000660
*         REGISTERS ( R12 AND R9 ).  BECAUSE THE CSECT HAS ONLY ONE     S 000670
*         ENTRY POINT ( 'STAE' ), THIS USAGE IS EASY TO CONTROL, AND    S 000680
*         IN THIS SPECIFIC CASE IT IS EASIER TO USE TWO BASE REGISTERS  S 000690
*         THAN TO SPLIT THE CSECT INTO TWO, AND FLIP BACK AND FORTH     S 000700
*         WITH CBALS.                                                   S 000710
         EJECT                                                          S 000720
*********************************************************************** S 000730
*        STAE ERROR ANALYSIS EXIT                                     * S 000740
*********************************************************************** S 000750
         SPACE 1                                                        S 000760
*        THIS ROUTINE RECEIVES CONTROL FROM THE STAE EXIT INTERFACE     S 000770
*         ( STAEXIT IN BUDGIE3 ) AFTER THE INTERFACE HAS RE-ESTABLISHED S 000780
*         BUDGIE'S REGISTERS                                            S 000790
         SPACE 1                                                        S 000800
*        ON ENTRY, R0 CONTAINS A CODE INDICATING IF THE SDWA WAS        S 000810
*         CREATED.  IF THE SDWA IS NOT AVAILABLE, STAE RTN IS BYPASSED. S 000820
         SPACE 1                                                        S 000830
STAE     SUBIN SAVE=(R1,R14)       PRESERVE W/A & RETURN ADDRESSES      S 000840
         LA    R9,2048(,R12)       ESTABLISH R9 AS ....                 S 000850
         LA    R9,2048(,R9)         ... SECOND BASE REGISTER            S 000860
         B     *+4(R0)             PREFORM INDEXED BRANCH               S 000870
         B     STAECONT     (R0=0) I/O QUIESCED & RESTORABLE - CONTINUE S 000880
         B     STAECONT     (R0=4) I/O HALTED & ^ RESTORABLE - CONTINUE S 000890
         B     STAECONT     (R0=8) NO ACTIVE I/O             - CONTINUE S 000900
         B     STAEOUT      (R0=C) NO STORAGE FOR SDWA       - BYPASS   S 000910
STAECONT LR    R8,R1               POINT R8 AT STAE WORK AREA           S 000920
         TTIMER CANCEL             CANCEL LOOP-DETECTING STIMER IF ANY  S 000930
         MVC   SAVAREA(64),$SAVAREA PRESERVE SAVE AREA AT ENTRY TO ABEN S 000940
         CBAL  R4,STAE00           ENSURE SYSPRINT OPEN IF PRESENT      S 000950
         CBAL  R4,STAE01           INITIALISE SYSPRINT FOR ABEND DATA   S 000960
         CBAL  R4,STAE02           IDENTIFY CODE AND PSW                S 000970
         CBAL  R4,STAE03           IDENTIFY LOCATION OF INSTRUCTION     S 000980
         CBAL  R4,STAE04           PRINT FAILING INSTRUCTION            S 000990
         CBAL  R4,STAE05           PRINT GENERAL PURPOSE REGISTERS      S 001000
         CBAL  R4,STAE06           PRINT DATA ABOUT LAST CBAL ISSUED    S 001010
         EJECT                                                          S 001020
*********************************************************************** S 001030
*        STAE ERROR ANALYSIS EXIT: MAIN-LINE ( CONT'D )               * S 001040
*********************************************************************** S 001050
         SPACE 1                                                        S 001060
         CBAL  R4,STAE11           PRINT DATA ABOUT CURRENT R4 RETURN A S 001070
         CBAL  R4,STAE12           PRINT DATA ABOUT R12 AS BASE REGISTE S 001080
         CBAL  R4,STAE07           PRINT BUDGIE3 REGISTER SAVE AREA     S 001090
         CBAL  R4,STAE08           PRINT CURRENT RECORD & WORK AREA     S 001100
         CBAL  R4,STAE09           PRINT CONTENTS OF CCB                S 001110
         CBAL  R4,STAE10           PRINT ALL BUDGIE CONTROL BLOCKS      S 001120
         CBAL  R4,STAE98           PRINT SDWA TO ENSURE ITS RIGHT       S 001130
*        CBAL  R4,STAE99           DECIDE WHETHER TO CONTINUE WITH DUMP S 001140
         LINE  LINE99              TELL OF END OF ABEND ANALYSIS        S 001150
STAEOUT  LA    R15,16              TELL SYSTEM TO CONTINUE ABEND        S 001160
        SUBOUT RESTORE=R14,RETURN=(R14) RETURN TO SYSTEM FOR ABEND PROC S 001170
         TITLE 'BUDGIE3S - STAE: OPEN SYSPRINT IF NECESSARY'            S 001180
*********************************************************************** S 001190
*        STAE: OPEN SYSPRINT DATA SET IF NECESSARY                    * S 001200
*********************************************************************** S 001210
         SPACE 1                                                        S 001220
STAE00   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 001230
         TM    SYSPRINT+IOPSSW,IOSWPRES IS SYSPRINT PRESENT             S 001240
         BZ    STAE00X             BYPASS ROUTINE IF NOT THERE          S 001250
         TM    SYSPRINT+IOPSSW,IOSWOPEN TEST IF SYSPRINT OPEN           S 001260
         BO    STAE00X             BR IF ITS ALREADY OPEN               S 001270
         IOM   OPEN,SYSPRINT       GO AND (RE-)OPEN SYSPRINT            S 001280
         CBAL  R4,PRINT            ISSUE 1ST PUT TO GET BUFFER ADDRESS  S 001290
STAE00X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 001300
         TITLE 'BUDGIE3S - STAE: INITIALISE PRINT DATA SET'             S 001310
*********************************************************************** S 001320
*        STAE: INITIALISE PRINT DATA SET                              * S 001330
*********************************************************************** S 001340
         SPACE 1                                                        S 001350
STAE01   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 001360
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 001370
         L     R5,SYSPRINT+IOPSRECA RETRIVE SYSPRINT BUFFER ADDRESS     S 001380
         MVI   0(R5),PAGESKIP      SET UP TO SKIP TO NEW PAGE           S 001390
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     S 001400
         COUNT SYSPRINT,2          ALLOW FOR FOLLOWING TRIPLE SPACE     S 001410
         LINE  LINE00,S=3          SET UP HEADING AND PRINT             S 001420
         LR    R10,R13             POINT R10 AT START OF CCB            S 001430
         S     R10,=A(CSIDLGTH)    DECREMENT BY LENGTH OF PREFIX        S 001440
         USING CSECTID,R10         ESTABLISH PREFIX ADDRESSABILITY      S 001450
         MVC   LINE01V,CSIDVERS+5  SET UP VERSION NUMBER IN LINE        S 001460
         MVC   LINE01T,CSIDTIME    SET UP TIME OF ASSEMBLY              S 001470
         MVC   LINE01D,CSIDDATE    SET UP DATE OF ASSEMBLY              S 001480
         DROP  R10                 DROP PREFIX ADDRESSABILITY           S 001490
         LINE  LINE01              PRINT LINE IDENTIFYING BUDGIE VERSIO S 001500
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 001510
         TITLE 'BUDGIE3S - STAE: PRINT ABEND CODE AND PSW'              S 001520
*********************************************************************** S 001530
*        STAE: PRINT ABEND CODE AND PSW                               * S 001540
*********************************************************************** S 001550
         SPACE 1                                                        S 001560
STAE02   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 001570
         MVC   5(L'LINE02,R5),LINE02 MOVE IN BASIC MESSAGE              S 001580
         MVI   5+L'LINE02(R5),C'S' ASSUME IT IS A SYSTEM ABEND          S 001590
         UNPK  $WRKAREA(9),SDWAABCC(5) UNPACK ABEND CODE DATA           S 001600
         TR    $WRKAREA(8),HEXTABLE-C'0' CONVERT TO PRINTABLE           S 001610
         MVC   6+L'LINE02(3,R5),$WRKAREA+2 ADD CODE TO MESSAGE          S 001620
         CLC   $WRKAREA+2(3),$ZEROES IS SYSTEM ABEND CODE THERE         S 001630
         BNE   STAE0202            BR IF IT IS SYSTEM CODE              S 001640
         MVI   5+L'LINE02(R5),C'U' INDICATE USER ABEND CODE             S 001650
         LH    R1,SDWAABCC+2       RETRIEVE BINARY USER ABEND CODE      S 001660
         CVD   R1,$WRKDUBL         CONVERT USER CODE TO DECIMAL         S 001670
         EDIT  $WRKEDIT,$WRKDUBL+5,'X0XXX' EDIT CODE TO EBCDIC          S 001680
         OI    $WRKEDIT+5,X'F0'    CONVERT SIGN TO X'F'                 S 001690
         MVC   6+L'LINE02(4,R5),$WRKEDIT+2 MOVE ABEND CODE TO MESSAGE   S 001700
         OI    STAEFLG1,STF1USER   FLAG THAT THIS IS A USER ABEND       S 001710
STAE0202 CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 001720
         MVC   5(L'LINE03,R5),LINE03 MOVE IN BASIC PSW MESSAGE          S 001730
         LA    R6,5+L'LINE03(,R5)  POINT AT POSN FOR PSW                S 001740
         LA    R1,SDWACTL1         POINT AT PSW AT TIME OF ABEND        S 001750
         LA    R2,2                SET TO HEXPRINT 8 BYTES              S 001760
         CBAL  R4,HEXPRINT         EXPAND PSW AND SET IN LINE           S 001770
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 001780
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 001790
         TITLE 'BUDGIE3S - STAE: PRINT LOCATION OF INSTRUCTION'         S 001800
*********************************************************************** S 001810
*        STAE: PRINT LOCATION OF INSTRUCTION IF IN BUDGIE3 CODE       * S 001820
*********************************************************************** S 001830
         SPACE 1                                                        S 001840
STAE03   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 001850
         L     R1,SDWAPMKA         GET ADDRESS OF NEXT INSTRUCTION TO E S 001860
         LA    R1,0(,R1)           PURIFY HIGH ORDER BYTE               S 001870
         SR    R10,R10             ZEROISE WORK REGISTER                S 001880
         IC    R10,SDWAPMKA        RETRIEVE ILC ET AL                   S 001890
         SRL   R10,6               REMOVE CC AND PROGRAM MASK           S 001900
         SLL   R10,1               SET TRUE LENGTH                      S 001910
         LTR   R10,R10             IS LENGTH SOMEHOW ZERO               S 001920
         BNZ   *+8                 BR IF NOT ZERO                       S 001930
         LA    R10,6               SET LENGTH TO 6 FOR SAFETY           S 001940
         STC   R10,INSLGTH         PRESERVE INSTRUCTION LENGTH FOR LATE S 001950
         CLC   SDWAINTA,PAGEFLT    IS THIS SOME SORT OF PAGE FAULT      S 001960
         BNL   *+6                 BR IF PAGE FAULT BECAUSE THIS IS FAI S 001970
*                                   FAILING INSTRUCTION FOR PAGE FAULTS S 001980
         SR    R1,R10              POINT AT FAILING INSTRUCTION         S 001990
         ST    R1,INSADDR          PRESERVE ADDRESS OF FAILING INSTRUCT S 002000
         CBAL  R4,GETCSECT         FIND WHICH CSECT ADDRESS IS IN       S 002010
         BNE   STAE0303            BRANCH IF NOT IN BUDGIE CSECT        S 002020
*                                  R14 POINTS AT CSECT CONTAINING INSTR S 002030
         MVC   LINE05D,$WRKAREA+2  MOVE DISPLACEMENT TO MESSAGE         S 002040
         USING CSECTID,R14         ESTABLISH PREFIX ADDRESSABILITY      S 002050
         MVC   LINE05C,CSIDNAME    MOVE NAME TO MESSAGE                 S 002060
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 002070
         MVC   5(L'LINE05,R5),LINE05 MOVE MESSAGE TO PRINT LINE         S 002080
         OI    STAEFLG1,STF1BDGY   FLAG THAT INSTRUCTION IN BUDGIE3     S 002090
         B     STAE03X             GO TO ISSUE MESSAGE                  S 002100
STAE0303 MVC   5(L'LINE06,R5),LINE06 MOVE IN 'NOT BUDGIE' MESSAGE       S 002110
STAE03X  CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 002120
         TM    STAEFLG1,STF1BDGY   IS INSTRUCTION IN BUDGIE             S 002130
         BZ    STAE03XT            BYPASS CSECT IDENTIFICATION IF NOT   S 002140
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 002150
STAE03XT SUBOUT RESTORE=R4         RESTORE AND RETURN                   S 002160
         TITLE 'BUDGIE3S - STAE: PRINT FAILING INSTRUCTION'             S 002170
*********************************************************************** S 002180
*        PRINT FAILING INSTRUCTION IF IN BUDGIE3 CODE                 * S 002190
*********************************************************************** S 002200
         SPACE 1                                                        S 002210
STAE04   SUBIN SAVE=R4             PRESEZRVE RETURN ADDRESS             S 002220
         TM    STAEFLG1,STF1BDGY   IS ABEND IN BUDGIE3 CODE             S 002230
         BZ    STAE04X             EXIT IF NOT                          S 002240
         MVC   5(L'LINE04,R5),LINE04 SET UP BASIC MESSAGE               S 002250
         L     R1,INSADDR          RETRIEVE ADDRESS OF FAILING INSTRAUC S 002260
         UNPK  $WRKAREA(13),0(7,R1) UNPACK 7 BYTES FOR PRINTING         S 002270
         TR    $WRKAREA(12),HEXTABLE-C'0' TRANLATE TO PRINTABLE         S 002280
         IC    R1,INSLGTH          RETRIEVE INSTRUCTION LENGTH          S 002290
         SLL   R1,1                DOUBLE FOR UNPACKED FORMAT           S 002300
         BCTR  R1,0                DECREMENT FOR EXECUTE                S 002310
         EX    R1,INSMVC           ADD INSTRUCTION IMAGE TO LINE        S 002320
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 002330
STAE04X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 002340
         TITLE 'BUDGIE3S - STAE: PRINT GENERAL PURPOSE REGISTERS'       S 002350
*********************************************************************** S 002360
*        STAE: PRINT GENERAL PURPOSE REGISTERS AT TIME OF ABEND       * S 002370
*********************************************************************** S 002380
         SPACE 1                                                        S 002390
STAE05   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 002400
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 002410
         LINE  LINE10              PRINT SUB-HEADING LINE               S 002420
         LA    R1,SDWAGR00         POINT AT CONTENTS OF REG 0           S 002430
         LA    R6,30(,R5)          POINT AT DESTINATION IN LINE         S 002440
         LA    R2,8                ESTABLISH LOOP OF 8 REGISTERS TO HEX S 002450
         MVC   18(9,R5),=C'R0 - R7 :' SET EXPLANATORY HEADING           S 002460
         CBAL  R4,HEXPRINT         EXPAND REGISTERS AND SET IN LINE     S 002470
         CBAL  R4,PRINT            PRINT 1ST 8 GENERAL PURPOSE REGISTER S 002480
         LA    R1,SDWAGR08         POINT AT CONTENTS OF REG 8           S 002490
         LA    R2,8                ESTABLISH LOOP OF 8 REGISTERS TO HEX S 002500
         LA    R6,30(,R5)          POINT AT DESTINATION IN PRINT LINE   S 002510
         MVC   18(9,R5),=C'R8 - R15:' SET EXPLANATORY HEADING           S 002520
         MVI   0(R5),SPCE2AFT      ESTABLISH FOLLOWING BLANK LINE       S 002530
         CBAL  R4,HEXPRINT         EXPAND REGISTERS AND STE IN LINE     S 002540
         CBAL  R4,PRINT            PRINT LAST 8 GENERAL PURPOSE REGISTE S 002550
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 002560
         TITLE 'BUDGIE3S - STAE: PRINT DATA ABOUT LAST CBAL'            S 002570
*********************************************************************** S 002580
*        PRINT DATA ABOUT LAST CBAL ISSUED PRIOR TO ABEND             * S 002590
*********************************************************************** S 002600
         SPACE 1                                                        S 002610
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 002620
STAE06   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 002630
         L     R1,$CBALR4          RETRIEVE CBAL RETURN ADDRESS         S 002640
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 002650
         L     R14,$CBALR12        RETRIEVE CALLER'S BASE ADDRESS       S 002660
         CBAL  R4,GETCSECT         DETERMINE DISPLACEMENT OF CBAL       S 002670
         MVC   LINE08M,CSIDNAME    ADD NAME OF ISSUING CSECT            S 002680
         MVC   LINE08D,$WRKAREA+2  ADD DISPLACEMENT OF ISSUING CBAL     S 002690
         MVC   5(L'LINE08,R5),LINE08 ADD MESSAGE TO PRINT LINE          S 002700
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 002710
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 002720
STAE0601 L     R1,$CBALRTN         RETRIEVE ADDRESS OF RTN CBAL'ED TO   S 002730
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 002740
         CBAL  R4,GETCSECT         DETERMINE CSECT WHICH CONTAINS RTN   S 002750
         BNE   STAE0602            BR IF NOT FOUND: CAN'T HAPPEN, BUT.. S 002760
         MVC   LINE09M,CSIDNAME    ADD NAME OF CSECT TO MESSAGE         S 002770
         MVC   LINE09D,$WRKAREA+2  ADD DISPLACEMENT OF RTN TO MESSAGE   S 002780
         MVC   5(L'LINE09,R5),LINE09 ADD MESSAGE TO PRINT LINE          S 002790
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 002800
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 002810
STAE0602 SUBOUT RESTORE=R4         RESTORE AND RETURN                   S 002820
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 002830
         TITLE 'BUDGIE3S - STAE: PRINT BUDGIE3 REGISTER SAVE AREA'      S 002840
*********************************************************************** S 002850
*        STAE: PRINT BUDGIE3 REGISTER SAVE AREA ( AT ENTRY TO ABEND ) * S 002860
*********************************************************************** S 002870
         SPACE 1                                                        S 002880
STAE07   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 002890
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 002900
         LINE  LINE13              PRINT HEADING TO EXPLAIN DATA        S 002910
         MVC   18(9,R5),=C'R0 - R7 :' ADD SUB-HEADING                   S 002920
         LA    R2,8                SET TO HEXPAND 8 REGISTERS ( 0-7 )   S 002930
         LA    R6,30(,R5)          POINT AT POSITION OF OUTPUT IN LINE  S 002940
         LA    R1,SAVAREA+20       POINT AT REG0 IN PRESERVED S/A       S 002950
         CBAL  R4,HEXPRINT         CONVERT TO PRONTABLE & ADD TO LINE   S 002960
         CBAL  R4,PRINT            PRINT LINE OF REGISTERS              S 002970
         MVC   18(9,R5),=C'R8 - R15:' ADD EXPLANATORY SUB-HEADING       S 002980
         LA    R2,5                SET TO HEXPAND 5 REGISTERS ( 8-12 )  S 002990
         LA    R6,30(,R5)          POINT AT OUTPUT POSN IN LINE         S 003000
         LA    R1,SAVAREA+52       POINT AT REG8 IN PRESERVED S/A       S 003010
         CBAL  R4,HEXPRINT         HEXPAND 5 REGISTERS AND ADD TO LINE  S 003020
         LA    R6,9(,R6)           POINT R6 PAST MISSING R13            S 003030
         LA    R2,2                SET TO HEXPAND 2 REGISTERS ( 14-15 ) S 003040
         LA    R1,SAVAREA+12       POINT AT R14 IN PRESERVED S/A        S 003050
         CBAL  R4,HEXPRINT         HEXPAND REGISTERS AND ADD TO LINE    S 003060
         CBAL  R4,PRINT            PRINT LINE OF HEXPANDED REGISTERS    S 003070
         MVC   18(9,R5),=C'CHAINS  :' ADD EXPLANATORY SUBHEADING        S 003080
         LA    R2,3                SET TO HEXPAND 3 FULL WORDS          S 003090
         LA    R6,30(,R5)          POINT AT OUTPUT POSN IN LINE         S 003100
         LA    R1,SAVAREA          POINT AT S/A CHAIN FIELDS            S 003110
         CBAL  R4,HEXPRINT         HEXPAND CHAIN FIELDS AND ADD TO LINE S 003120
         MVI   0(R5),SPCE2AFT      ESTABLISG FOLLOWING DOUBLE SPACE     S 003130
         CBAL  R4,PRINT            PRINT SAVE AREA CHAIN FIELDS         S 003140
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 003150
         TITLE 'BUDGIE3S - STAE: PRINT CURRENT RECORD AND WORK AREA'    S 003160
*********************************************************************** S 003170
*        STAE: PRINT CURRENT RECORD AND WORKING STORAGE AREA          * S 003180
*********************************************************************** S 003190
         SPACE 1                                                        S 003200
STAE08   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 003210
         TM    SYSUT1+IOPSSW,IOSWOPEN IS SYSUT1 OPEN                    S 003220
         BZ    STAE08X             BYPASS ROUTINE IF NOT OPEN           S 003230
         TM    SYSUT1+IOPSSW,IOSWEOF HAS EOF BEEN REACHED               S 003240
         BO    STAE08X             BYPASS ROUTINE IF EOF                S 003250
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 003260
         LINE  LINE14              PRINT EXPLANATORY MESSAGE            S 003270
         L     R1,SYSUT1+IOPSRECA  POINT R1 AT RECORD||WORK AREA        S 003280
         LH    R3,$RECLINT         SET LENGTH OF WORKING STORAGE AREA   S 003290
         CBAL  R4,DUMPRINT         PRINT W/S IN DUMP FORMAT             S 003300
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 003310
         LINE  LINE15              PRINT ANOTHER EXPLANATION            S 003320
         LH    R3,$RECLUT1         SET LENGTH OF INPUT RECORD           S 003330
         L     R1,$PTRPARM         POINT R1 AT INPUT RECORD IMAGE       S 003340
         CBAL  R4,DUMPRINT         PRINT INPUT REC IMAGE IN DUMP FORMAT S 003350
STAE08X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 003360
         TITLE 'BUDGIE3S - STAE: PRINT CONTENTS OF CCB'                 S 003370
*********************************************************************** S 003380
*        STAE: PRINT CONTENTS OF CENTRAL CONTROL BLOCK                * S 003390
*********************************************************************** S 003400
         SPACE 1                                                        S 003410
STAE09   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 003420
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 003430
         MVI   0(R5),PAGESKIP      ESTABLISH PAGE SKIP                  S 003440
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     S 003450
         LINE  LINE00,S=3          PRINT HEADING LINE                   S 003460
         COUNT SYSPRINT,2          ALLOW FOR TRIPLE SPACE               S 003470
         LINE  LINE18              PRINT EXPLANATION OF FOLLOWING DATA  S 003480
         LR    R1,R13              POINT R1 AT CCB                      S 003490
         LA    R3,CCBLGTH          SET LENGTH OF CCB                    S 003500
         CBAL  R4,DUMPRINT         PRINT CCB IN DUMP FORMAT             S 003510
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 003520
         TITLE 'BUDGIE3S - STAE: PRINT BUDGIE CONTROL BLOCKS'           S 003530
*********************************************************************** S 003540
*        STAE: PRINT BUDGIE CONTROL BLOCKS                            * S 003550
*********************************************************************** S 003560
         SPACE 1                                                        S 003570
         USING CBPREFIX,R7         SATBLISH C/B PREFIX ADDRESS'Y        S 003580
STAE10   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 003590
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 003600
         MVI   0(R5),PAGESKIP      ESTABLISH PAGE SKIP                  S 003610
         CBAL  R4,PRINT            SKIP TO HEAD OF PAGE                 S 003620
         LINE  LINE00,S=3          PRINT HEADING LINE                   S 003630
         COUNT SYSPRINT,2          ALLOW FOR TRIPLE SPACE               S 003640
         L     R7,$CBP1ST          GET ADDRESS OF 1ST C/B PREFIX        S 003650
STAE10L  LTRR  R7,R7               PURIFY & TEST FOR END OF CHAIN       S 003660
         BZ    STAE10X             EXIT IF END OF CHAIN                 S 003670
         CBAL  R4,CBCURENT         DETERMINE IF C/B IS CURRENTLY IN USE S 003680
         MVC   5(L'LINE19,R5),LINE19 MOVE MESSAGE TO LINE               S 003690
         MVC   5+L'LINE19(L'CBPRNAME,R5),CBPRNAME ADD C/B ID TO MESSAGE S 003700
         CBAL  R4,PRINT            PRINT IDENTIFYING MESSAGE            S 003710
         LR    R1,R7               POINT R1 AT PREFIX                   S 003720
         LH    R3,CBPRLEN          SET LENGTH OF C/B IN R3              S 003730
         CBAL  R4,DUMPRINT         PRINT C/B IN DUMP FORMAT             S 003740
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 003750
         L     R7,CBPRCBPR         GET ADDRESS OF NEXT C/B PREFIX       S 003760
         B     STAE10L             LOOP BACK TO PROCESSS NEW PREFIX     S 003770
STAE10X  LINE  LINE20              TELL OF END OF CONTROL BLOCKS        S 003780
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 003790
         DROP  R7                  DROP CONTROL BLOCK PREFIX ADDR'Y     S 003800
         EJECT                                                          S 003810
*********************************************************************** S 003820
*        STAE: PRINT DATA ABOUT CURRENT RETURN ADDRESS IN R4          * S 003830
*********************************************************************** S 003840
         SPACE 1                                                        S 003850
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 003860
STAE11   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 003870
         L     R1,SDWAGR04         RETRIEVE R4 AT TIME OF ABEND         S 003880
         LA    R1,0(,R1)           PURIFY HIGH ORDER BYTE               S 003890
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS IT    S 003900
         BE    STAE1102            BR IF ADDRESS FOUND IN A CSECT       S 003910
         MVC   LINE21+12(L'LINE21SA),LINE21SA ALTER MESSAGE TEXT FOR S/ S 003920
         L     R1,SAVAREA+36       RETRIEVE R4 FROM SAVED SAVE AREA     S 003930
         LA    R1,0(,R1)           PURIFY ADDRESS                       S 003940
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS THE A S 003950
         BNE   STAE11X             EXIT IF ADDRESS NOT LOCATABLE        S 003960
STAE1102 MVC   LINE21M,CSIDNAME    ADD CSECT NAME TO MESSAGE            S 003970
         MVC   LINE21D,$WRKAREA+2  ADD DISPLACEMENT TO MESSAGE          S 003980
         MVC   5(L'LINE21,R5),LINE21 ADD MESSAGE TO LINE                S 003990
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 004000
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 004010
STAE11X SUBOUT RESTORE=R4          RESTORE & RETURN TO CALLER           S 004020
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 004030
         EJECT                                                          S 004040
*********************************************************************** S 004050
*        STAE: PRINT DATA ABOUT CSECTS OF WHICH R12 IS THE BASE       * S 004060
*********************************************************************** S 004070
         SPACE 1                                                        S 004080
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 004090
STAE12   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 004100
         L     R1,SDWAGR12         GET R12 AT ENTRY TO ABEND            S 004110
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 004120
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS ADDR  S 004130
         BE    STAE1201            BR IF CSECT OFUND                    S 004140
         MVC   5(L'LINE23,R5),LINE23 MOVE MESSAGE TO LINE               S 004150
         CBAL  R4,WTOPRINT         TELL THAT R12 IS NOT A BASE          S 004160
         B     STAE1202            GO PROCESS SAVE AREA R12             S 004170
STAE1201 MVC   LINE22M(8),CSIDNAME ADD CSECT NAME TO MESSGAE            S 004180
         MVC   5(L'LINE22,R5),LINE22 ADD MESSAGE TO LINE                S 004190
         CBAL  R4,WTOPRINT         TELL OF CSECT FOR WHICH R12 IS BASE  S 004200
STAE1202 L     R1,SAVAREA+68       GET R12 FROM PROGRAM SAVE AREA       S 004210
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 004220
         CBAL  R4,GETCSECT         GET NAME OF ASSOCIATED CSECT IF ANY  S 004230
         BE    STAE1203            BR IF CSECT MATCH FOUND              S 004240
         MVC   5(L'LINE25,R5),LINE25 ADD MESSAGE TO LINE                S 004250
         CBAL  R4,WTOPRINT         GO TELL THAT R12 NOT A BASE          S 004260
         B     STAE1204            GO TO EXIT                           S 004270
STAE1203 MVC   LINE24M(8),CSIDNAME ADD CSECT NAME TO MESSAGE            S 004280
         MVC   5(L'LINE24,R5),LINE24 ADD MESSAGE TO LINE                S 004290
         CBAL  R4,WTOPRINT         TELL OF R12 AS BASE REGISTER         S 004300
STAE1204 EQU   *                   EXIT FROM ROUTINE                    S 004310
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 004320
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 004330
         TITLE 'BUDGIE3S - STAE: PRINT SYSTEM DIAGNOSTIC WORK AREA'     S 004340
*********************************************************************** S 004350
*        STAE: PRINT SYSTEM DIAGNOSTIC WORK AREA                      * S 004360
*********************************************************************** S 004370
         SPACE 1                                                        S 004380
STAE98   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 004390
         CBAL  R4,PRINT            SPACE BLANK LINE                     S 004400
         LINE  LINE98              ISSUE EXPLANATORY HEADING            S 004410
         LR    R1,R8               POINT AT STAE WORK AREA              S 004420
         LA    R3,SDWALEN          SET LENGTH OF ESTAE WORK AREA        S 004430
         CBAL  R4,DUMPRINT         PRINT STAE WORK AREA                 S 004440
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 004450
         TITLE 'BUDGIE3S - STAE: DECIDE WHETHER TO ALLOW DUMP'          S 004460
*********************************************************************** S 004470
*        STAE: DECIDE WHETHER TO ALLOW DUMP TO BE PRODUCED            * S 004480
*********************************************************************** S 004490
         SPACE 1                                                        S 004500
STAE99   SUBIN SAVE=R4             ENTER ROUTINE                        S 004510
         TM    SYSPRINT+IOPSSW,IOSWPRES+IOSWOPEN WAS SYSPRINT AVAILABLE S 004520
         BNO   STAE99X             ALLOW DUMP IF NOT AVAILABLE          S 004530
         TM    $ABNDCDE,FULLDUMP   WERE FULL DUMPS REQUESTED ( ADUMP )  S 004540
         BO    STAE99X             BR IF YES TO ALLOW FULL DUMP         S 004550
         NI    SDWACMPF,FF-SDWAREQ SET OFF REQUEST FOR DUMP             S 004560
         MVI   SDWASDAT,0          NULLIFY SDATA OPTIONS                S 004570
         MVI   SDWAPDAT,0          NULLIFY PDATA OPTIONS                S 004580
         OI    SDWAPDAT,SDWADPSW   REQUEST PSW SO WE DO GET ABDUMP PROC S 004590
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 004600
         LINE  LINE17              TELL THAT DUMP SUPPRESSED            S 004610
STAE99X SUBOUT RESTORE=R4          RETURN TO CALLER                     S 004620
         TITLE 'BUDGIE3S - STAE: DETERMINE IF CONTROL BLOCK IS CURRENT' S 004630
*********************************************************************** S 004640
*        STAE: DETERMINE IF CONTROL BLOCK IS CURRENT                  * S 004650
*********************************************************************** S 004660
         SPACE 1                                                        S 004670
*        DETERMINE IF THE CONTROL BLOCK WHOSE PREFIX IS POINTED TO BY   S 004680
*         R7 IS 'CURRENT' BY DETERMINING IF ITS ADDRESS IS IN ANY       S 004690
*         OF THE REGISTERS IN THE RELEVANT SAVE AREA.                   S 004700
         SPACE 1                                                        S 004710
         USING DUMPLINE,R5         ESTABLISH PRINT LINE ADDRESSABILITY  S 004720
CBCURENT SUBIN ,                   ENETR ROUTINE                        S 004730
         MVC   DMPLCHAR,CURRMESS   ASSUME CURRENT AND SET UP MESSAGE    S 004740
         LA    R15,16              SET TO LOOP THRU 16 REGISTERS IN S/A S 004750
         LA    R14,SDWAGRSV        POINT AT S/A IN SDWA                 S 004760
         TM    STAEFLG1,STF1BDGY   IS INSTRUCTION IN BUDGIE CODE        S 004770
         BO    *+8                 BR IF YES                            S 004780
         LA    R14,SAVAREA         POINT AT BUDGIE'S SAVED S/A          S 004790
         LA    R1,CBPRLGTH(,R7)    POINT R1 AT START OF CONTROL BLOCK   S 004800
CBCUR01  L     R2,0(R14)           GET REGISTER FROM S/A                S 004810
         LA    R2,0(,R2)           PURIFY HIGHORDER BYTE                S 004820
         CR    R2,R1               DOES THIS REG CONTAIN C/B ADDRESS    S 004830
         BE    CBCURX              EXIT IF YES BECAUSE C/B IS CURENT    S 004840
         LA    R14,4(,R14)         POINT AT NEXT REG IN S/A             S 004850
         BCT   R15,CBCUR01         LOOP BACK IF ANY LEFT                S 004860
         MVC   DMPLCHAR,$SPACES    BLANK OUT WRONG MESSAGE              S 004870
CBCURX  SUBOUT ,                   RETURN TO CALLER                     S 004880
         DROP  R5                  DROP DUMP-LINE ADDRESSABILITY        S 004890
         TITLE 'BUDGIE3S - STAE: ISSUE WTO AND PRINT LINE TO SYSPRINT'  S 004900
*********************************************************************** S 004910
*        STAE: ISSUE WTO AND PRINT LINE ON SYSPRINT                   * S 004920
*********************************************************************** S 004930
         SPACE 1                                                        S 004940
*        THIS ROUTINE CONVERTS A PRINT LINE TEMPORARILY INTO A          S 004950
*         'WTO MF=L' BY INSERTING THE NECESSARY WTO FLAGS ( MESSAGE     S 004960
*         LENGTH AND ROUTING FLAGS ) IMMEDIATELY BEFORE THE MESSAGE     S 004970
*         WHICH STARTS AT POSITION 5 IN THE PRINT LINE.  THE ROUTINE    S 004980
*         THEN ISSUES THE WTO, BLANKS OUT THE FLAGS, AND PRINTS THE     S 004990
*         LINE.                                                         S 005000
         SPACE 1                                                        S 005010
WTOPRINT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 005020
         LA    R1,132(,R5)         POINT AT END OF PRINT LINE           S 005030
WTOPRNT1 CLI   0(R1),C' '          IS THIS A BLANK                      S 005040
         BNE   WTOPRNT2            IF NOT BLANK THEN FOUND MESSAGE END  S 005050
         BCT   R1,WTOPRNT1         DECREMENT TO PREVIOUS CHARACTER & TE S 005060
WTOPRNT2 SR    R1,R5               DETERMINE LENGTH OF MESSAGE          S 005070
         STH   R1,WTOFLAGS         STORE LENGTH IN WTO FLAG AREA        S 005080
         MVC   1(4,R5),WTOFLAGS    SET UP FLAGS PRIOR TO MESSAGE        S 005090
         LA    R1,1(,R5)           POINT AT PSEUDO 'WTO MF=L'           S 005100
         SVC   35                  ISSUE PRINT LINE AS WTO              S 005110
         MVC   1(4,R5),$SPACES     BLANK OUT WTO FLAGS                  S 005120
         CBAL  R4,PRINT            PRINT LINE ON SYSPRINT               S 005130
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 005140
         TITLE 'BUDGIE3S - STAE: CONVERT HEX TO PRINTABLE'              S 005150
*********************************************************************** S 005160
*        STAE: CONVERT HEX TO PRINTABLE AND SET UP IN PRINT LINE      * S 005170
*********************************************************************** S 005180
         SPACE 1                                                        S 005190
*        THIS SUBROUTINE CONVERTS A NUMBER OF ADJACENT 4-BYTE AREAS     S 005200
*         FROM HEXADECIMAL TO THE PRINTABLE EQUIVALENT, AND SETS THE    S 005210
*         8-CHARACTER STRINGS IN THE PRINT LINE.                        S 005220
         SPACE 1                                                        S 005230
*        ON ENTRY:                                                      S 005240
*         R1  - ADDRESS OF 1ST 4-BYTE AREA TO PRINT                     S 005250
*         R2  - NUMBER OF 4-BYTE AREAS TO PRINT                         S 005260
*         R6  - POSITION IN PRINT LINE OF 1ST 8-CHARACTER STRING        S 005270
         SPACE 1                                                        S 005280
*        ON EXIT:                                                       S 005290
*         R1  - BYTE FOLLOWING LAST ONE EXPANDED                        S 005300
*         R6  - NEXT AVAILABLE PRINT POSITION                           S 005310
         SPACE 1                                                        S 005320
*        THE FORMAT OF THE OUTPUT DATA IN THE PRINT LINE IS AN EIGHT    S 005330
*         CHARACTER EXPANSION OF FOUR BYTES, FOLLOWED BY A SPACE,       S 005340
*         FOLLOWED BY THE NEXT EIGHT CHARACTER EXPANSION.  AFTER EVERY  S 005350
*         FOURTH SET OF EIGHT CHARACTERS, THE SPACE IS 4 BYTES LONG     S 005360
*         INSTEAD OF 1 BYTE LONG.                                       S 005370
*        NOTE THAT R15 IS USED BY THIS ROUTINE TO CONTROL THE INTERNAL  S 005380
*         SPACING LOOP THAT YIELDS THIS OUTPUT FORMAT.                  S 005390
         SPACE 1                                                        S 005400
HEXPRINT SUBIN ,                   ENTER ROUTINE                        S 005410
         LA    R15,4               SET TO LOOP 4 TIMES BEFORE BIG SPACE S 005420
HEXPRNT1 MVC   $WRKAREA+9(4),0(R1) MOVE FOUR BYTES TO WORK AREA         S 005430
         UNPK  $WRKAREA(9),$WRKAREA+9(5) UNPACK 4 + GARBAGE BYTE        S 005440
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 005450
         MVC   0(8,R6),$WRKAREA    MOVE PRINTABLE TO LINE               S 005460
         LA    R6,9(,R6)           INCREMENT TO NEXT PRINT POSITION     S 005470
         BCT   R15,HEXPRNT2        BR IF NOT TIME FOR BIG SPACE         S 005480
         LA    R6,3(,R6)           INCREMENT OVER BIG SPACE             S 005490
         LA    R15,4               RE-ESTABLISH LOOP FOR NEXT TIME      S 005500
HEXPRNT2 LA    R1,4(,R1)           POINT AT NEXT 4 BYTES TO PRINT       S 005510
         BCT   R2,HEXPRNT1         LOOP BACK FOR NEXT ELEMENT           S 005520
        SUBOUT ,                   RETURN TO CALLER                     S 005530
         TITLE 'BUDGIE3S - STAE: CREATE DUMP FORMAT OUTPUT'             S 005540
*********************************************************************** S 005550
*        STAE: CREATE DUMP-FORMAT PRINT OUTPUT                        * S 005560
*********************************************************************** S 005570
         SPACE 1                                                        S 005580
*        THIS ROUTINE PRINTS DATA IN THE SAME FORMAT AS THE ABEND RTNS. S 005590
         SPACE 1                                                        S 005600
*        ON ENTRY:                                                      S 005610
*         R1  - ADDRESS OF START OF AREA TO PRINT                       S 005620
*         R3  - LENGTH TO PRINT IN DUMP FORMAT                          S 005630
         SPACE 1                                                        S 005640
         USING DUMPLINE,R5         ESTABLISH DUMP LINE ADDRESSABILITY   S 005650
DUMPRINT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 005660
DUMPRNT1 ST    R1,$WRKSNGL         STORE CURRENT START ADDRESS          S 005670
         UNPK  $WRKAREA(9),$WRKSNGL(5) UNPACK FOR TRANSLATE             S 005680
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 005690
         MVC   DMPLADR,$WRKAREA+2  SET ADDRESS IN LINE                  S 005700
         MVI   DMPLAST1,C'*'       SET 1ST DELIMITING ASTERISK          S 005710
         MVI   DMPLAST2,C'*'       SET 2ND DELIMITING ASTERISK          S 005720
         CH    R3,=H'32'           IS LENGTH LEFT GREATER THAN 32 BYTES S 005730
         BNH   DUMPRNT2            BR IF 32 BYTES OR LESS LEFT          S 005740
         MVC   DMPLCHAR,0(R1)      SET UNEXPANDED DATA IN LINE          S 005750
         TR    DMPLCHAR,DUMPTABL   TRANSLATE UNPRINTABLE TO '.'         S 005760
         LA    R2,8                SET UP TO HEXPAND 8 4-BYTE AREAS     S 005770
         LA    R6,DMPLHEX          POINT AT STARTING PRINT POSN         S 005780
         CBAL  R4,HEXPRINT         EXPAND 32 BYTES & MOVE TO LINE       S 005790
         CBAL  R4,PRINT            PRINT LINE                           S 005800
         L     R1,$WRKSNGL         RETRIEVE ADDRESS OF AREA             S 005810
         LA    R1,32(,R1)          INCREMENT PAST DATA JUST PRINTED     S 005820
         SH    R3,=H'32'           DECREMENT LENGTH BY AMOUNT PRINTED   S 005830
         B     DUMPRNT1            LOOP BACK FOR NEXT BIT OF DATA       S 005840
         EJECT                                                          S 005850
*********************************************************************** S 005860
*        CREATE DUMP-FORMAT PRINT OUTPUT ( CONT'D )                   * S 005870
*********************************************************************** S 005880
         SPACE 1                                                        S 005890
DUMPRNT2 BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE         S 005900
         EX    R3,DUMPMVC1         MOVE UNEXPANDED DATA TO LINE         S 005910
         LA    R6,DMPLHEX          POINT AT STARTING POSITION           S 005920
         LA    R3,1(,R3)           RESET TRUE LENGTH                    S 005930
         LR    R2,R3               SET LENGTH IN R2                     S 005940
         SRL   R2,2                DIVIDE BY 4 TO GET NO. OF 4-BYTE UNI S 005950
         LTR   R2,R2               IS R2=0: I.E. RESIDUE WAS < 4 BYTES  S 005960
         BZ    *+8                 BYPASS HEXPRINT IF NOTHING TO HEXPAN S 005970
         CBAL  R4,HEXPRINT         HEXPAND DATA AND SET IN LINE         S 005980
         SLL   R3,30               CLEAR HIGH ORDER BITS ....           S 005990
         SRL   R3,29                ... TO GET RESIDUAL LENGTH * 2      S 006000
         LTR   R3,R3               TEST IF RESIDUAL LENGTH IS ZERO      S 006010
         BZ    DUMPRNT3            BR IF 0 COS LGTH WAS DIVISIBLE BY 4  S 006020
         UNPK  $WRKAREA(7),0(4,R1) UNPACK MAXIMUM LENGTH LEFT           S 006030
         TR    $WRKAREA(6),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 006040
         BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE         S 006050
         EX    R3,DUMPMVC2         MOVE LAST HEXPANDED DATA TO LINE     S 006060
DUMPRNT3 TR    DMPLCHAR,DUMPTABL   TRANSLATE UNPRINTABLE TO '.'         S 006070
         CBAL  R4,PRINT            PRINT LAST LINE OF DUMP DATA         S 006080
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 006090
         DROP  R5                  DROP DUMP-FORMAT LINE ADDRESSABILITY S 006100
         TITLE 'BUDGIE3S - STAE: DETERMINE WHICH CSECT CONTAINS ADDRES' S 006110
*********************************************************************** S 006120
*        STAE: DETERMINE WHICH BUDGIE CSECT CONTAINS ADDRESS          * S 006130
*********************************************************************** S 006140
         SPACE 1                                                        S 006150
*        THIS ROUTINE DETERMINES WHICH BUDGIE3 CSECT CONTAINS THE       S 006160
*         SUPPLIED ADDRESS.                                             S 006170
*        ON ENTRY: R1  - ADDRESS TO BE LOCATED                          S 006180
*        ON EXIT : R14 - ADDRESS OF CSECT IF APPROPRIATE                S 006190
*                  $WRKAREA(8) - DISPLACEMENT OF ADDRESS IN CSECT       S 006200
         SPACE 1                                                        S 006210
*        UPON RETURN, THE PSW COND CODE IS SET SUCH THAT THE CALLER     S 006220
*         CAN MAKE THE FOLLOWING CONDITIONAL TESTS :-                   S 006230
*              BE  - MATCH FOUND: R14 CONTAINS CSECT ADDRESS            S 006240
*              BH  - ADDRESS NOT MATCHED: R14 IRRELEVANT                S 006250
*              BNE - ADDRESS NOT MATCHED: R14 IRRELEVANT                S 006260
GETCSECT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 006270
         LTRR  R1,R1               PURIFY R1 AND TEST FOR VALUE         S 006280
         BZ    GETCSCTY            EXIT SHOWING NOT FOUND IF ZERO       S 006290
         LA    R14,0(,R13)         POINT R14 AT CCB = START OF BUDGIE3  S 006300
         S     R14,=A(CSIDLGTH)    POINT AT PRIMARY PREFIX              S 006310
         L     R15,$VBUDG3A        POINT R15 AT BUDGIE3A = END OF BDG3  S 006320
         LA    R15,0(,R15)         PURIFY HIGH ORDER BYTE               S 006330
         CR    R1,R14              IS ADDRESS BELOW START OF BUDGIE3    S 006340
         BL    GETCSCT0            BR IF BELOW TO LOOP THRU DESCRIPTORS S 006350
         CR    R1,R15              IS ADDRESS WITHIN BUDGIE3 CODING     S 006360
         BNH   GETCSCT3            BR IF WITHIN BUDGIE3 TO GET DISPLACE S 006370
GETCSCT0 LA    R10,26              ESTABLISH LOOP OF 26 CSECT DESCRIPTO S 006380
         LA    R2,$VBUDG3A         POINT AT FIRST CSECT DESCRIPTOR      S 006390
GETCSCT1 LM    R14,R15,0(R2)       RETRIEVE CSECT ADDRESS AND LENGTH    S 006400
         LA    R14,0(R14)          PURIFY HIGH ORDER BYTE OF ADDRESS    S 006410
         LA    R15,0(,R15)         PURIFY HIGH ORDER BYTE OF LENGTH     S 006420
         AR    R15,R14             POINT R15 AT END OF CSECT            S 006430
         CR    R1,R14              IS INSTRUCTION BELOW START OF CSECT  S 006440
         BL    GETCSCT2            GO TO NEXT DESRIPTOR IF BELOW        S 006450
         CR    R1,R15              IS INSTRUCTION ABOVE START OF CSECT  S 006460
         BNH   GETCSCT3            BR IF ADDRESS IS IN THIS CSECT       S 006470
GETCSCT2 LA    R2,POOLLGTH(,R2)    INCREMENT TO NEXT DESCRIPTOR         S 006480
         BCT   R10,GETCSCT1        LOOP BACK IF DESCRIPTORS LEFT        S 006490
GETCSCTY CLI   *,Y                 SET COND CODE HIGH TO SHOW NO MATCH  S 006500
         B     GETCSCTX            GO TO EXIT                           S 006510
GETCSCT3 CBAL  R4,GETDISP          DETERMINE DISPLACEMENT OF INSTRUCTIO S 006520
*                                  SET UP STATION-IDENTIFICATION        S 006530
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 006540
         MVC   LINE16N,CSIDNAME    ADD CSECT NAME TO MESSAGE            S 006550
         MVC   LINE16V,CSIDVERS+5  ADD VERSION NUMBER TO MESSAGE        S 006560
         MVC   LINE16T,CSIDTIME    ADD TIME OF ASSEMBLY TO MESSAGE      S 006570
         MVC   LINE16D,CSIDDATE    ADD DATE OF ASSEMBLY TO MESSAGE      S 006580
         DROP  R14                 DROP SECT PREFIX ADDRESSABILITY      S 006590
         CLI   *,X                 SET COND CODE TO SHOW CSECT FOUND    S 006600
GETCSCTX SUBOUT RESTORE=R4         RETURN TO CALLER                     S 006610
         TITLE 'BUDGIE3S - STAE: DETERMINE DISPLACEMENT OF INSTRUCTION' S 006620
*********************************************************************** S 006630
*        STAE: DETERMINE DISPLACEMENT OF ADDRESS WITHIN CSECT         * S 006640
*********************************************************************** S 006650
         SPACE 1                                                        S 006660
*        ON ENTRY: R1  - ADDRESS WHOSE DISPLACEMENT IS REQUIRED         S 006670
*                  R14 - ADDRESS OF APPROPRIATE CSECT                   S 006680
*        ON EXIT : R1  - DISPLACEMENT AS A BINARY FULLWORD              S 006690
*                  $WRKAREA(8) - PRINTABLE EQUIVALENT OF DISPLACEMENT   S 006700
         SPACE 1                                                        S 006710
GETDISP  SUBIN ,                   ENETR ROUTINE                        S 006720
         SR    R1,R14              DETERMINE DISPLACEMENT               S 006730
         ST    R1,$WRKSNGL         STORE DISP IN WORK AREA              S 006740
         UNPK  $WRKAREA(9),$WRKSNGL(5) EXPAND FOR CONVERSION TO PRINTAB S 006750
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE INTO PRINTABLE       S 006760
        SUBOUT ,                   RETURN TO CALLER                     S 006770
         TITLE 'BUDGIE3S - HEXADECIMAL-EBCDIC EXPANSION ROUTINE'        S 006780
*********************************************************************** S 006790
*        HEXADECIMAL-TO-EBCDIC EXPANSION ROUTINE                      * S 006800
*********************************************************************** S 006810
         SPACE 1                                                        S 006820
*        THIS ROUTINE, OF WHICH I AM INORDINATELY PROUD, IS THE FIRST   S 006830
*         BAL ROUTINE I WROTE AFTER COMPLETING MY TRAINING.  AT THE     S 006840
*         TIME I NEEDED THIS ROUTINE, THE ONLY ALTERNATIVE OF WHICH     S 006850
*         MY WORTHY LEADER COULD INFORM ME WAS A 512-BYTE TABLE OF 256  S 006860
*         2-BYTE ELEMENTS TO BE INDEXED BY THE BYTE TO PRINT.  EVEN IN  S 006870
*         THOSE EARLY DAYS, MY GENIUS WAS APPARENT.                     S 006880
         SPACE 1                                                        S 006890
*        THE ROUTINE 'DOUBLE SPACES' A FULLWORD OF CORE INTO TWO WORDS, S 006900
*         EACH BYE OF WHICH CONSISTS OF A HEX ZERO FOLLOWED BY A HEX    S 006910
*         DIGIT.  THESE TWO WORDS ARE THEN TRANSLATED AGAINST THE       S 006920
*         16-BYTE TABLE TO GIVE AN EIGHT-BYTE AREA WHICH WHEN PRINTED   S 006930
*         IS EQUIVALENT TO THE ORIGINAL EIGHT HEX CHARACTERS IN THE     S 006940
*         SUPPLIED FULLWORD.                                            S 006950
         SPACE 1                                                        S 006960
*        UPON ENTRY, R1 CONTAINS THE ADDRESS OF THE FOUR BYTES          S 006970
*         TO BE CONVERTED FOR PRINTING, AND UPON EXIT THE FIRST EIGHT   S 006980
*         BYTES OF $WRKAREA CONTAIN THE PRINTABLE EQUIVALENT.           S 006990
         SPACE 1                                                        S 007000
*        NOTE THAT THE LOGIC OF THIS ROUTINE REQUIRES A WORK AREA ( IN  S 007010
*         THIS CASE '$WRKAREA' ) OF AT LEAST 12 BYTES IN LENGTH ).      S 007020
         SPACE 1                                                        S 007030
HEXPAND  SUBIN ,                   ENTER ROUTINE                        S 007040
         MVC   $WRKAREA(4),0(R1)   MOVE BYTES TO WORK AREA              S 007050
         LA    R1,$WRKAREA         POINT AT START OF WORK AREA          S 007060
         LA    R2,8                ESTABLISH LOOP                       S 007070
HEXPNDL  MVO   0(5,R1),0(4,R1)     CREATE HEX-0,HEX-DIGIT IN POS 1      S 007080
         LA    R1,1(,R1)           INCREMENT TO NEXT BYTE               S 007090
         BCT   R2,HEXPNDL          LOOP BACK TO PERFORM MVO EIGHT TIMES S 007100
         TR    $WRKAREA(8),HEXTABLE TRANSLATE TO PRINTABLE CHARS        S 007110
        SUBOUT ,                   RETURN TO CALLER                     S 007120
         SPACE 5                                                        S 007130
*        TO EXPLAIN FURTHER:                                            S 007140
*         ASSUME THAT UPON ENTRY $WRKAREA CONTAINS                      S 007150
*              X'ABCDEF12XXXXXXXXXXXXXXXX'                              S 007160
*         AFTER EXECUTION OF THE FIRST MVO IT WILL CONTAIN              S 007170
*              X'0ABCDEF12XXXXXXXXXXXXXXX'                              S 007180
*         AFTER EXECUTION OF THE SECOND MVO IT WILL CONTAIN             S 007190
*              X'0A0BCDEF12XXXXXXXXXXXXXX'                              S 007200
*         AFTER EXECUTION OF ALL 8 MVO'S IT WILL CONTAIN                S 007210
*              X'0A0B0C0D0E0F0102XXXXXXXX'                              S 007220
*         AND THIS WILL TRANSLATE TO                                    S 007230
*              X'C1C2C3C4C5C6F1F2XXXXXXXX'  ( C'ABCDEF12' )             S 007240
         SPACE 1                                                        S 007250
*        CLEVER ISN'T IT ?                                              S 007260
         EJECT                                                          S 007270
*********************************************************************** S 007280
*        HEXADECIMAL-TO-EBCDIC CONVERSION ROUTINE 2.                  * S 007290
*********************************************************************** S 007300
         SPACE 1                                                        S 007310
*        HOWEVER, CLEVER THOUGH MY ROUTINE IS, IT IS STILL UNNECESSARIL S 007320
*         CUMBERSOME.  THE FOLLOWING ROUTINE, WHICH I NOTICED WHILE     S 007330
*         BROWSING THROUGH J.E.ABBEY'S CODE, PERFORMS A SIMILAR FUNCTIO S 007340
*         IN FAR FEWER INSTRUCTIONS.                                    S 007350
         SPACE 1                                                        S 007360
HEXPAND2 SUBIN ,                   ENETR ROUTINE                        S 007370
         UNPK  $WRKAREA(9),0(5,R1)    CREATE HEX-F,HEX-DIGIT            S 007380
         TR    $WRKAREA(8),HEXTABLE-C'0' CONVERT TO PRINTABLE           S 007390
        SUBOUT ,                   RETURN TO CALLER                     S 007400
         SPACE 5                                                        S 007410
*        ASSUME THAT UPON ENTRY $WRKAREA CONTAINS                       S 007420
*              X'ABCDEF12XXXXXXXXXXXXXXXX'                              S 007430
*        AFETR THE UNPK IT WILL CONTAIN                                 S 007440
*              X'FAFBFCFDFEFFF1F2XXXXXXXXXX'                            S 007450
*        AND AFTER THE TARNSLATE WILL CONTAIN                           S 007460
*              X'C1C2C3C4C5C6F1F2XXXXXXXXXX'  ( C'ABCDEF12' )           S 007470
         SPACE 1                                                        S 007480
*        I HAVE TO ADMIT THAT THIS IS EVEN CLEVERER.                    S 007490
         TITLE 'BUDGIE3S - STAE: EXECUTED INSTRUCTIONS'                 S 007500
*********************************************************************** S 007510
*        STAE: EXECUTED INSTRUCTIONS                                  * S 007520
*********************************************************************** S 007530
         SPACE 1                                                        S 007540
INSMVC   MVC   5+L'LINE04(0,R5),$WRKAREA MOVE INSRTUCTION IMAGE TO LINE S 007550
DUMPMVC1 MVC   DMPLCHAR-DUMPLINE(0,R5),0(R1) MOVE DATA TO DUMP LINE     S 007560
DUMPMVC2 MVC   0(0,R6),$WRKAREA    ADD RESIDUAL DATA TO HEXPANDED DATA  S 007570
         TITLE 'BUDGIE3S - MISCELLANEOUS CONSTANTS AND FIELDS'          S 007580
*********************************************************************** S 007590
*        MISCELLANEOUS CONSTANTS                                      * S 007600
*********************************************************************** S 007610
         SPACE 1                                                        S 007620
WTOFLAGS DC    AL2(130),AL2(0)     LENGTH AND ROUTING FLAGS FOR WTO     S 007630
INSADDR  DC    F'0'                ADDRESS OF FAILING INSTRUCTION       S 007640
SAVAREA  DS    18F                 COPY OF BUDGIE3 S/A AT ENTRY TO ABEN S 007650
         SPACE 1                                                        S 007660
PAGEFLT  DC    H'16'               LOWEST INTERRUPT CODE ASSOC WITH PAG S 007670
         SPACE 1                                                        S 007680
INSLGTH  DC    X'0'                LENGTH OF FAILING INSTRUCTION        S 007690
         EJECT                                                          S 007700
*********************************************************************** S 007710
*        PRINTER MESSAGES                                             * S 007720
*********************************************************************** S 007730
         SPACE 1                                                        S 007740
LINE00   DS    0CL70                                                    S 007750
         DC    C'BDG3S-000-I',CL35' ',C'BUDGIE3 - ABEND ANALYSIS'       S 007760
LINE01   DS    0CL80                                                    S 007770
         DC    C'BDG3S-001-I  THIS IS BUDGIE3 VERSION '                 S 007780
LINE01V  DC    C'XYZ'                                                   S 007790
         DC    C'    ( ASSEMBLED AT '                                   S 007800
LINE01T  DC    C'HH.MM.SS'                                              S 007810
         DC    C' ON '                                                  S 007820
LINE01D  DC    C'99JAN31'                                               S 007830
         DC    C' )'                                                    S 007840
LINE02   DC    C'BDG3S-002-I  ABEND CODE IS : '                         S 007850
LINE03   DC    C'BDG3S-003-I  PSW AT TIME OF ABEND WAS: '               S 007860
LINE04   DC    C'BDG3S-004-I  IMAGE OF FAILING INSTRUCTION WAS: '       S 007870
LINE05   DS    0CL72                                                    S 007880
         DC    C'BDG3S-005-I  INSTRUCTION IS WITHIN CSECT '             S 007890
LINE05C  DC    C'XXXXXXXX'                                              S 007900
         DC    C' AT DISPLACEMENT '                                     S 007910
LINE05D  DC    C'DDDDDD'                                                S 007920
LINE06   DC    C'BDG3S-006-I  FAILING INSTRUCTION IS NOT WITHIN BUDGIE' S 007930
LINE07   DS    0CL79                                                    S 007940
         DC    C'BDG3S-007-I  FAILING INSTRUCTION IS IN MODULE . '      S 007950
LINE07M  DC    C'XXXXXXXX'                                              S 007960
         DC    C' AT DISPLACEMENT '                                     S 007970
LINE07D  DC    C'DDDDDD'                                                S 007980
LINE08   DS    0CL75                                                    S 007990
         DC    C'BDG3S-008-I  LAST CBAL WAS ISSUED BY MODULE '          S 008000
LINE08M  DC    C'XXXXXXXX'                                              S 008010
         DC    C' AT DISPLACEMENT '                                     S 008020
LINE08D  DC    C'DDDDDD'                                                S 008030
LINE09   DS    0CL75                                                    S 008040
         DC    C'BDG3S-009-I  LAST CBAL WAS ISSUED TO MODULE '          S 008050
LINE09M  DC    C'XXXXXXXX'                                              S 008060
         DC    C' AT DISPLACEMENT '                                     S 008070
LINE09D  DC    C'DDDDDD'                                                S 008080
LINE09ND EQU   *                   END OF LINE09                        S 008090
LINE10   DC    C'BDG3S-010-I  CONTENTS OF REGISTERS AT TIME OF ABEND:-' S 008100
LINE11   DC    C'BDG3S-011-I  CONTENTS OF THE INPUT RECORD IMAGE:-'     S 008110
LINE12   DC    C'BDG3S-012-I  CONTENTS OF THE OUTPUT RECORD||WORKING ST*S 008120
               ORAGE AREA:-'                                            S 008130
LINE13   DC    C'BDG3S-013-I  CONTENTS OF BUDGIE3 REGISTER SAVE AREA AT*S 008140
                ENTRY TO ABEND:-'                                       S 008150
LINE14   DC    C'BDG3S-014-I  CONTENTS OF CURRENT RECORD||WORK AREA:-'  S 008160
LINE15   DC    C'BDG3S-015-I  IMAGE OF CURRENT INPUT (SYSUT1) RECORD:-' S 008170
LINE16   DS    0CL95                                                    S 008180
         DC    C'BDG3S-016-I            MODULE '                        S 008190
LINE16N  DC    CL8' '              CSECT NAME                           S 008200
         DC    C' IS VERSION '                                          S 008210
LINE16V  DC    CL3' '              MODULE VERSION NUMBER                S 008220
         DC    C' AND WAS ASSEMBLED AT '                                S 008230
LINE16T  DC    CL8' '              TIME OF ASSEMBLY                     S 008240
         DC    C' ON '                                                  S 008250
LINE16D  DC    CL8' '              DATE OF ASSEMBLY                     S 008260
LINE17   DC    C'BDG3S-017-I  DUMP OUTPUT HAS BEEN SUPPRESSED.  CODE PA*S 008270
               RM=ADUMP TO GET DUMP'                                    S 008280
LINE18   DC    C'BDG3S-018-I  CONTENTS OF THE CCB ( CENTRAL CONTROL BLO*S 008290
               CK ) :-'                                                 S 008300
LINE19   DC    C'BDG3S-019-I  CONTENTS OF CONTROL BLOCK '               S 008310
LINE20   DC    C'BDG3S-020-I  END OF BUDGIE3 CONTROL BLOCKS'            S 008320
LINE21   DS    0CL75                                                    S 008330
         DC    C'BDG3S-021-I  CURRENT RETURN ADDRESS IS TO - '          S 008340
LINE21M  DC    C'XXXXXXXX'                                              S 008350
         DC    C' AT DISPLACEMENT '                                     S 008360
LINE21D  DC    C'DDDDDD'                                                S 008370
LINE21SA DC    C'SAVE AREA RETURN ADDRESS IS TO'                        S 008380
LINE22   DS    0CL57                                                    S 008390
         DC    C'BDGS-022-I  R12 AT ENTRY TO ABEND IS THE BASE OF '     S 008400
LINE22M  DC    8C'$'                                                    S 008410
LINE23   DC    C'BDGS-023-I  R12 AT ENTRY TO ABEND IS NOT A BASE REGIST*S 008420
               ER'                                                      S 008430
LINE24   DS    0CL59                                                    S 008440
         DC    C'BDGS-024-I  R12 IN THE BUDGIE SAVE AREA IS BASE OF '   S 008450
LINE24M  DC    8C'$'                                                    S 008460
LINE25   DC    C'BDGS-025-I  R12 IN THE SAVE AREA IS NOT A BASE REGISTE*S 008470
               R'                                                       S 008480
LINE98   DC    C'BDG3S-098-I  CONTENTS OF SDWA ( SYSTEM DIAGNOSTIC WORK*S 008490
                AREA ) :-'                                              S 008500
LINE99   DC    C'BDG3S-099-I  END OF ABEND ANALYSIS REPORT'             S 008510
         SPACE 1                                                        S 008520
CURRMESS DC    CL32'***** CURRENT CONTROL BLOCK ****'                   S 008530
         EJECT                                                          S 008540
*********************************************************************** S 008550
*        HEX-TO-EBCDIC TRANSLATION TABLE                              * S 008560
*********************************************************************** S 008570
         SPACE 1                                                        S 008580
HEXTABLE DC    C'0123456789ABCDEF' TRANSLATE TABLE                      S 008590
         SPACE 5                                                        S 008600
*********************************************************************** S 008610
*        STAE PROCESSING FLAGS                                        * S 008620
*********************************************************************** S 008630
         SPACE 1                                                        S 008640
STAEFLG1 DC    X'00'               PROCESSING FLAG BYTE 1               S 008650
         SPACE 1                                                        S 008660
STF1USER EQU   1                   USER ABEND IN PROCESS                S 008670
STF1BDGY EQU   2                   INSTRUCTION IS WITHIN BUDGIE CODE    S 008680
         SPACE 5                                                        S 008690
         LTORG                                                          S 008700
         TITLE 'BUDGIE3S - STAE: DUMP TRANSLATE TABLE'                  S 008710
*********************************************************************** S 008720
*        DUMP TRANLATE TABLE ( TO CONVERT UNPRINTABLE TO '.' )        * S 008730
*********************************************************************** S 008740
         SPACE 1                                                        S 008750
DUMPTABL DC    256C'.'             TABLE OF PERIODS                     S 008760
         ORG   DUMPTABL+C' '       POINT AT POSJ OF BLANK               S 008770
         DC    C' '                                                     S 008780
         ORG   DUMPTABL+C'A'       POINT AT START OF ALPHA              S 008790
         DC    C'ABCDEFGHI'                                             S 008800
         ORG   DUMPTABL+C'J'                                            S 008810
         DC    C'JKLMNOPQR'                                             S 008820
         ORG   DUMPTABL+C'S'                                            S 008830
         DC    C'STUVWXYZ'                                              S 008840
         ORG   DUMPTABL+C'0'                                            S 008850
         DC    C'0123456789'                                            S 008860
         ORG                                                            S 008870
         SPACE 5                                                        S 008880
        SCSEND S                   TERMINATE CSECT BUDGIE3S             S 008890
         END                                                            S 008900
         SPACE 1                                                        S 008910
         REPRO                                                          S 008920
 IDENTIFY BUDGIE3S('STAE ERROR PROCESSING')                             S 008930
         END                                                            S 008940
