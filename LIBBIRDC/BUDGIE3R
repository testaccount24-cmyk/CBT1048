         TITLE 'BUDGIE3R - INTERNAL MACROS'                             R 000010
         MACRO                                                          R 000020
         $CB   &PRINT=OFF                                               R 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        R 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           R 000050
               TITLE 'CB02 - CB02 CONTROL BLOCK'                        R 000060
         CB02  ,                   GENERATE DSECT                       R 000070
               TITLE 'CB03 - CB03 CONTROL BLOCK'                        R 000080
         CB03  ,                   GENERATE DSECT                       R 000090
               TITLE 'CB04 - CB04 CONTROL BLOCK'                        R 000100
         CB04  ,                   GENERATE DSECT                       R 000110
               TITLE 'CB05 - CB05 CONTROL BLOCK'                        R 000120
         CB05  ,                   GENERATE DSECT                       R 000130
               TITLE 'CB11 - PRIMARY MS11 CONTROL BLOCK'                R 000140
         CB11  ,                   GENERATE DSECT                       R 000150
               TITLE 'CB13 - CB13 CONTROL BLOCK'                        R 000160
         CB13  ,                   GENERATE DSECT                       R 000170
               TITLE 'CB20 - CB20 CONTROL BLOCK'                        R 000180
         CB20  ,                   GENERATE DSECT                       R 000190
               TITLE 'CB40 - CB40 CONTROL BLOCK'                        R 000200
         CB40  ,                   GENERATE DSECT                       R 000210
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     R 000220
         CCB   ,                   GENERATE DSECT                       R 000230
               TITLE '     - GENERAL EQUATES'                           R 000240
       EQUATES ,                   GENERATE EQUATES                     R 000250
               TITLE '     - STORAGE POOL DESCRIPTOR BLOCK'             R 000260
      POOLDEFN ,                   GENERATE DSECT                       R 000270
               TITLE 'SB11 - SECONDARY CB11 CONTROL BLOCK'              R 000280
         SB11  ,                   GENERATE DSECT                       R 000290
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        R 000300
         MEND                                                           R 000310
         SPACE 5                                                        R 000320
BUDGIE3R CSECT                                                          R 000330
         $CB   ,                   GENERATE DSECTS AND EQUATES          R 000340
         TITLE 'BUDGIE3R - INTERCONNECT CONTROL BLOCKS'                 R 000350
        SCSECT R                   DEFINE START OF CSECT BUDGIE3R       R 000360
         ENTRY JOINCB              INTERCONNECT CONTROL BLOCKS          R 000370
         ENTRY TESTREQ             DETERMINE INTERNAL TEST CODE         R 000380
         TITLE 'BUDGIE3R - INTERCONNECT CONTROL BLOCKS'                 R 000390
*********************************************************************** R 000400
*        INTERCONNECT CONTROL BLOCKS - MAIN-LINE                      * R 000410
*********************************************************************** R 000420
         SPACE 1                                                        R 000430
JOINCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              R 000440
         CBAL  R4,JOINSB11         POINT SB11'S AT CB05'S AND CB04'S    R 000450
         CBAL  R4,JOINCB13         POINT CB13'S AT RELENANT CB2X03X04X  R 000460
         CBAL  R4,CHECKREF         VERIFY THAT ALL C/B ARE REFERENCED   R 000470
         CBAL  R4,WARN999          ISSUE WARNING IF >999 C/C SEQ NOS    R 000480
         CBAL  R4,ISDCB            DYNAMICALLY BUILD ISAM DCB'S & CHAIN R 000490
        SUBOUT RESTORE=R4          RSTORE AND RETURN                    R 000500
         TITLE 'BUDGIE3R - CONNECT SB11''S TO CB04''S AND CB05''S'      R 000510
*********************************************************************** R 000520
*        CONNECT SB11'S TO CB04/05 C/B'S - MAIN-LINE                  * R 000530
*********************************************************************** R 000540
         SPACE 1                                                        R 000550
JOINSB11 SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              R 000560
         USING CB02NTRY,R6         ESTABLISH CB02 ADDRESSABILITY        R 000570
         USING CB04NTRY,R7         ESTABLISH CB04 ADDRESSABILITY        R 000580
         USING CB05NTRY,R8         ESTABLISH CB05 ADDRESSABILITY        R 000590
         USING CB11NTRY,R11         ESTABLISG CB11 ADDRESSABILITY       R 000600
         USING SB11NTRY,R10        ESTABLISH SB11 ADDRESSABILITY        R 000610
CCLINK00 L     R6,$FSTCB02         GET ADDRESS OF 1ST CB02              R 000620
         SPACE 1                                                        R 000630
*                                  TEST FOR END OF CB02 CHAIN           R 000640
CCLINK   LA    R6,0(,R6)           PURIFY HIGH ORFER BYTE               R 000650
         LTR   R6,R6               TEST FOR END OF CHAIN                R 000660
         BZ    CCLINKX             EXIT IF END                          R 000670
         L     R11,CB02CB11         GET ADDR OF 1ST CB11 FOR THIS CB02  R 000680
         SPACE 1                                                        R 000690
*                                  TEST FOR END CB11'S FOR THIS CB02    R 000700
CCLINK01 LA    R11,0(,R11)           PURIFY HIGH ORDER BYTE             R 000710
         L     R10,CB11SB11        GET ADDR OF 1ST SB11 FOR CB11        R 000720
         LTR   R11,R11               TEST FOR END OF CB11 CHAIN         R 000730
         BNZ   CCLINK02            BRANCH IF NOT                        R 000740
         L     R6,CB02CB02         GET ADDR OF NEXT CB02                R 000750
         B     CCLINK              LOOP BACK TO PROCESS                 R 000760
         SPACE 1                                                        R 000770
*                                  TEST FOR END OF SB11'S FOR THIS CB11 R 000780
CCLINK02 LA    R10,0(,R10)         PURIFY HIGH ORDER BYTE               R 000790
         LTR   R10,R10             TEST FOR END OF SB11 CHAIN           R 000800
         BNZ   CCLINK03            BRANCH IF NOT                        R 000810
         L     R11,CB11CB11         GET ADDR OF NEXT CB11 FOR THIS CB02 R 000820
         B     CCLINK01            LOOP BACK TO PROCESS                 R 000830
         SPACE 1                                                        R 000840
*                                  ESTABLISH CONTROL BLOCK POINTERS     R 000850
CCLINK03 L     R1,CB02CB03         GET ADDRESS OF CB03                  R 000860
         L     R7,CB03CB04-CB03NTRY(R1) GET ADDR OF 1ST CB04 FOR TH CB2 R 000870
         L     R8,CB02CB05         GET ADDR OF 1ST CB05                 R 000880
         TM    SB11SW,SW11DBCN     DOES SB11 CONTAIN B/C FLD NAME       R 000890
         BZ    CCLINK06            BRANCH IF NOT                        R 000900
         EJECT                                                          R 000910
*********************************************************************** R 000920
*        CONNECT SB11'S TO CB05 C/B'S                                 * R 000930
*********************************************************************** R 000940
         SPACE 1                                                        R 000950
*                                  POINT SB11 AT ASSOC CB05             R 000960
CCLINK04 LA    R8,0(,R8)           PURIFY HIGH ORDER BYTE               R 000970
         ST    R8,SB11CB05         ASSUME MATCH: POINT SB11 AT CB05     R 000980
         LTR   R8,R8               TEST IF END OF CB05 CHAIN            R 000990
         BNZ   CCLINK05            BRANCH IF NOT                        R 001000
         NI    SB11SW,FF-SW11DBCN  SET OFF B/C FLD NAME INDICATOR       R 001010
         MVC   LINE26ID,SB11FNO    MOVE C/B LABEL TO MESSAGE            R 001020
         CCNO  LINE26N1,SB11       MOBE C/C SEQ NO TO MESSAGE           R 001030
         LINE  LINE26,P=Y          PRINT ERROR MESSAGE                  R 001040
         B     CCLINK06            PROCESS C/R FLD NAME                 R 001050
CCLINK05 CLC   SB11FNO,CB05FNO     TEST FOR FLD NAME MATCH              R 001060
         BE    CCLINK06            MATCH: CB'S LINKED SO BRANCH         R 001070
         L     R8,CB05CB05         GET ADDR OF NEXT CB05 FOR THIS CB02  R 001080
         B     CCLINK04            LOOP BACK TO PROCESS                 R 001090
         EJECT                                                          R 001100
*********************************************************************** R 001110
*        CONNECT SB11'S TO CB04 C/B'S                                 * R 001120
*********************************************************************** R 001130
         SPACE 1                                                        R 001140
*                                  POINT SB11 AT ASSOC CB04             R 001150
CCLINK06 TM    CB05SW,SW05SOFT     IS THIS A SOFT ERROR                 R 001160
         BZ    *+8                 BR IF NOT                            R 001170
         OI    SB11SW,SW11SOFT     FLAG SB11 AS SOFT AS WELL            R 001180
         TM    SB11SW,SW11DCRN     DOES IT CONTAIN C/R FLD NAME         R 001190
         BZ    CCLINK09            BRANC IF NOT                         R 001200
CCLINK07 LA    R7,0(,R7)           PURIFY HIGH ORDER BYTE               R 001210
         ST    R7,SB11CB04         ASSUME MATCH : POINT SB11 AT CB04    R 001220
         LTR   R7,R7               TEST IF END OF CB04 CHAIN            R 001230
         BNZ   CCLINK09            BRANCH IF NOT                        R 001240
         NI    SB11SW,FF-SW11DCRN  SET OFF C/R FLD NAME INDICATOR       R 001250
         MVC   LINE27ID,SB11CRFN   MOVE C/B LABEL TO MESSAGE            R 001260
         CCNO  LINE27N1,SB11       ADD C/C SEQ NO TO MESSAGE            R 001270
         LINE  LINE27,P=Y          PRINT ERROR MESSAGE                  R 001280
         B     CCLINK09            GO GET NEXT SB11 FOR THIS CB11       R 001290
CCLINK08 CLC   SB11CRFN,CB04FNO    TEST FOR FIELD NAME MATCH            R 001300
         BE    CCLINK09            MATCH: CB'S LINKED SO BRANCH         R 001310
         L     R7,CB04CB04         GET EDDR OF NEXT CB04 FOR THIS CB02  R 001320
         B     CCLINK07            LOOP BACK TO PROCESS                 R 001330
         SPACE 1                                                        R 001340
*                                  GET NEXT SB11                        R 001350
CCLINK09 L     R10,SB11SB11        GET NEXT SB11 FOR THIS CB11          R 001360
         B     CCLINK02            LOOP BACK TO PROCESS                 R 001370
CCLINKX  EQU   *                   END OF CB LINKAGE CODING             R 001380
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   R 001390
         TITLE 'BUDGIE3R - CONNECT CB13''S TO CBXX''S'                  R 001400
*********************************************************************** R 001410
*        CONNECT CB13 TO APPROPRIATE CB2X/3X/4X                       * R 001420
*********************************************************************** R 001430
         SPACE 1                                                        R 001440
*        POINT CB13 C/BS AT THE ASSOCIATED CB2X/3X/4X, IF ANY           R 001450
*         ( ALL CB2X/3X/4X C/BS START WITH A CHAINING FIELD FOLLOWED BY R 001460
*         THE TEST ID - LABEL - SO ALL SUCH BLOCKS MAY BE TREATED AS    R 001470
*         CB20'S FOR THE PURPOSES OF THIS CODING ).                     R 001480
         SPACE 1                                                        R 001490
         USING CB02NTRY,R6         ESTABLISH CB02 ADDRESSABILITY        R 001500
         USING CB11NTRY,R8         ESTABLISH CB11 ADDRESSABILITY        R 001510
         USING CB13NTRY,R11         ESTABLISH CB13 ADDRESSABILITY       R 001520
         USING CB20NTRY,R10        ESTABLISH CB20 ADDRESSABILITY        R 001530
         SPACE 1                                                        R 001540
JOINCB13 SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              R 001550
         L     R6,$FSTCB02         GET ADDESS OF 1ST CB02               R 001560
*                                  TEST FOR END OF CB02 CHAIN           R 001570
CCLINK10 LTRR  R6,R6               TEST FOR END OF CHAIN                R 001580
         BZ    CCLINK15            EXIT IF END                          R 001590
         L     R8,CB02CB11         GET ADDRESS OF 1ST CB11 FOR THIS C02 R 001600
         L     R11,CB02CB14         GET ADDR OF 1ST BATCH LEVEL CB13    R 001610
*                                  TEST FOR LAST BATCH LEVEL CB13       R 001620
CCLINK20 LTRR  R11,R11               TEST FOR END OF CHAIN              R 001630
         BZ    CCLINK21            BR IF END OFCHAAIN                   R 001640
         CBAL  R4,CCLCB13          GET ADDRESS OF ASSOC CB40 C/B        R 001650
         L     R11,CB13CB13         GET ADDRESS OF NEXT CB13 (BATCH LEV R 001660
         B     CCLINK20            LOOP BACK TO PROCESS                 R 001670
CCLINK21 L     R11,CB02CB13         GET ADDR OF 1ST B/C CB13 FOR CB02   R 001680
*                                  TEST FOR LAST CB13 FOR THIS CB02     R 001690
CCLINK11 LTRR  R11,R11               TEST FOR END OF CHAIN              R 001700
         BZ    CCLINK12            BR IF END OF CHAIN                   R 001710
         CBAL  R4,CCLCB13          GET ADDR OF AASSOC CB2X/3X/4X C/B    R 001720
         L     R11,CB13CB13         GET ADDRESS OF NEXT CB13            R 001730
         B     CCLINK11            LOOP BACK TO PROCESS                 R 001740
*                                  TEST FOR LST CB11 FOR THIS CB02      R 001750
CCLINK12 L     R11,CB11CB13         GET ADDR OF 1ST CB13 FOR THIS CB11  R 001760
         LTRR  R8,R8               TEST FOR END OF CB11 CHAIN           R 001770
         BNZ   CCLINK13            BR IF NOT END OF CHAIN               R 001780
         L     R6,CB02CB02         GET ADDR OF NEXT CB02                R 001790
         B     CCLINK10            LOOP BACK TO PROCESS                 R 001800
         EJECT                                                          R 001810
*********************************************************************** R 001820
*        INTERCONNECT CONTROL BLOCKS ( CONT'D )                       * R 001830
*********************************************************************** R 001840
         SPACE 1                                                        R 001850
*                                  TES FOR LAST CB13 FOR THIS CB11      R 001860
CCLINK13 LTRR  R11,R11               TEST FOR END OF CB13 CHAIN         R 001870
         BNZ   CCLINK14            BR IF NOT END OF CHAIN               R 001880
         L     R8,CB11CB11         GET ADDR OF NEXT CB11                R 001890
         B     CCLINK12            LOOP BACK TO PROCESS                 R 001900
         SPACE 1                                                        R 001910
*                                  CONNECT UP CB13                      R 001920
CCLINK14 CBAL  R4,CCLCB13          GET ADDR OF ASSOX CB2X/3X/4X         R 001930
         L     R11,CB13CB13         GET ADDR OF NEXT CB13               R 001940
         B     CCLINK13            LOOP BACK TO PROCESS                 R 001950
         SPACE 1                                                        R 001960
*        NOW MAKE ANY NECESSARY CONNECTIONS FOR CB13'S WITHIN CB40'S    R 001970
         SPACE 1                                                        R 001980
         DROP  R6                  DROP CB02 ADDRESSABILITY             R 001990
         USING CB40NTRY,R6         ESTABLISH CB40 ADDRESSABILITY        R 002000
CCLINK15 L     R6,$FSTCB20         GET ADDRESS OF 1ST CBXX C/B          R 002010
*                                  TEST FOR END OF CB40 CHAIN           R 002020
CCLINK16 LTRR  R6,R6               TEST FOR END OF CHAIN                R 002030
         BZ    CCLINKX1            EXIT IF END OF CHAIN                 R 002040
         CLI   CB40FLAG,FLAGCB40   VERIFY THAT THIS IS A CB40           R 002050
         BE    CCLINK18            BR IF YES                            R 002060
CCLINK17 L     R6,CB40CB40         GET ADDRESS OF NEXT CB40             R 002070
         B     CCLINK16            LOOP BACK TO PROCESS                 R 002080
CCLINK18 L     R11,CB40FRST         GET ADDR OF 1ST CB13 FOR THIS CB40  R 002090
*                                  TEST FOR END OF CB13 CHAIN           R 002100
CCLINK19 LTRR  R11,R11               TEST FOR END OF CHAIN              R 002110
         BZ    CCLINK17            GO GET NEXT CB40 IF END OF CHAIN     R 002120
         CBAL  R4,CCLCB13          GET ADDR OF ASSOC CB2X/3X/4X IF ANY  R 002130
         L     R11,CB13CB13         GET ADDRESS OF NEXT CB13            R 002140
         B     CCLINK19            LOOP BACK TO PROCESS                 R 002150
CCLINKX1 SUBOUT RESTORE=R4         RESTORE AND RETURN                   R 002160
         EJECT                                                          R 002170
*********************************************************************** R 002180
*        CONNECT CB13'S ( CONT'D )                                    * R 002190
*********************************************************************** R 002200
         SPACE 1                                                        R 002210
CCLCB13  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              R 002220
         L     R10,$FSTCB20        GET ADDRESS OF 1ST CB2X/3X/4X        R 002230
         TM    CB13SW,SW13CBXX     IS ASSOC CBXX ADDRESS REQUIRED       R 002240
         BZ    CCLCB13X            BYPASS ROUTINE IF NOT                R 002250
         SPACE 1                                                        R 002260
CCLCB131 LTRR  R10,R10             TEST FOR END OF CHAIN                R 002270
         BZ    CCLCB13E            EXIT IF END OF CHAIN TO FLAG CB13    R 002280
         CLC   CB20FLAG,CB13TEST   IS THIS REQUIRED TYPE OF C/B         R 002290
         BE    CCLCB133            BR TO NEXT TEST I YES                R 002300
         CLI   CB20FLAG,FLAGCB33   IS THIS A CB33                       R 002310
*                                   (CB33'S ARE CHAINED TO BY MORE THAN R 002320
*                                   1 TYPE OF TEST CODE )               R 002330
         BNE   CCLCB134            GO SEE IF CB30 IF NOT                R 002340
         CLI   CB13TEST,X'31'      IS THIS AN E1 - PARTIAL KEY MATCH    R 002350
         BE    CCLCB133            GO SEE IF IDS MATCH IF YES           R 002360
CCLCB134 EQU   *                   CONTINUE PROCESSING                  R 002370
         CLI   CB20FLAG,FLAGCB30   IS THIS A CB30                       R 002380
*                                  ( CB30 C/B'S ARE CHAINED TO BY A     R 002390
*                                   NUMBER OF DIFFERENT TEST CODES )    R 002400
         BNE   CCLCB132            GO GET NEXT CBXX IF NOT              R 002410
         CLI   CB13TEST,X'09'      IS TEST IN RANGE LT-GE               R 002420
         BL    CCLCB132            BR IF BELOW TEST RANGE               R 002430
         CLI   CB13TEST,X'0E'      IS TEST IN RANGE LT-GE               R 002440
         BH    CCLCB132            BR IF ABOVE RANGE                    R 002450
CCLCB133 CLC   CB20TID,CB13CBID    IS THIS THE REQUIRED LABEL           R 002460
         BNE   CCLCB132            GO GET NEXT CBXX IF NOT              R 002470
         ST    R10,CB13CBXX        CHAIN CB13                           R 002480
         OI    CB20CCNO+1,X'0F'    ALTER SIGN FROM 'C' TO 'F' TO IND RF R 002490
         EJECT                                                          R 002500
*********************************************************************** R 002510
*        CONNECT CB13'S ( CONT'D ) DETECT DUPLICATE LABELS            * R 002520
*********************************************************************** R 002530
         SPACE 1                                                        R 002540
*        ASSUME, PESSIMISTICALLY, THAT THERE ARE DUPLICATE LABELS FOR   R 002550
*         THIS TYPE OF CONTROL BLOCK, AND TEST FOR THEM                 R 002560
         SPACE 1                                                        R 002570
         MVC   LINE39ID,CB20FLAG   PRESERVE TYPE OF C/B FOR TESTING     R 002580
         CCNO  LINE39N2            MOVE C/C SEQ NO OF CURRENT C/B TO LN R 002590
CCLCB135 L     R10,CB20CB20        GET ADDRESS OF NEXT CB2X/3X/4X       R 002600
         LTRR  R10,R10             TEST FOR END OF CHAIN                R 002610
         BZ    CCLCB13X            EXIT FROM SUBRTN IF END OF CHAIN     R 002620
         CLC   CB20FLAG,LINE39ID   IS THIS SAME TYPE OF C/B             R 002630
         BNE   CCLCB135            BR IF NOT SAME TO TEST NEXT          R 002640
         CLC   CB20TID,CB13CBID    IS IT THE SAME LABEL                 R 002650
         BNE   CCLCB135            BR IF NOT SAME LABEL TO TEST NEXT    R 002660
         CCNO  LINE39N1            SET C/C SEQ NO OF THIS C/B IN LINE   R 002670
         LINE  LINE39,P=Y          PRINT ERROR MESSAGE IDENTIFYING DUPL R 002680
         MVI   CB20FLAG,X'00'      ALTER C/B ID TO IGNORE IN FUTURE     R 002690
         B     CCLCB135            LOOP BACK TO TEST NEXT C/B FOR DUP   R 002700
         SPACE 1                                                        R 002710
CCLCB132 L     R10,CB20CB20        GET ADDR OF NEXT CB2X/3X/4X          R 002720
         B     CCLCB131            LOOP BACK TO PROCESS                 R 002730
         EJECT                                                          R 002740
*********************************************************************** R 002750
*        CONNECT CB13'S ( CONT'D ) FLAG MISSING STATEMENTS            * R 002760
*********************************************************************** R 002770
         SPACE 1                                                        R 002780
CCLCB13E OI    SWERROR,SWENMSXX    SHOW AN MSXX CARD IS MISSING         R 002790
         OI    CB13SW,SW13NTST     NO ASSOC C/B SO NO-OP CB13           R 002800
         MVC   LINE36TL,CB13CBID   ADD DSEIRED CBXX LABEL TO MASSAGE    R 002810
         CCNO  LINE36N1,CB13       ADD C/C SEQ NO TO MESSAGE            R 002820
         LINE  LINE36,P=Y          PRINT ERROR MESSAGE IDENTIFYING MS13 R 002830
CCLCB13X SUBOUT RESTORE=R4         RESTORE & RETURN TO CALLER           R 002840
         SPACE 1                                                        R 002850
         DROP  R6,R8,R11,R10        DROP C/B ADDRESSABILITY             R 002860
         TITLE 'DETECT UNREFERENCED CONTROL BLOCKS'                     R 002870
*********************************************************************** R 002880
*        DETECT UNREFERENCED CONTROL BLOCKS                           * R 002890
*********************************************************************** R 002900
         SPACE 1                                                        R 002910
         USING CB20NTRY,R10        ESTABLISH CB2X/3X/4X ADDRESSABILITY  R 002920
CHECKREF SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              R 002930
         L     R10,$FSTCB20        GETADDRESS OF 1ST CB20/2X/3X/4X      R 002940
         B     *+8                 BYPASS FORWARD CHAINING              R 002950
CHECKRF1 L     R10,CB20CB20        GET ADDRESS OF NEXT CBXX C/B         R 002960
         LTRR  R10,R10             PURIFY AND TEST FOR END OF CHAIN     R 002970
         BZ    CHECKRFX            EXIT IF END OF CHAIN                 R 002980
         TM    CB20CCNO+1,X'03'    HAS C/B BEEN REFERENCED              R 002990
         BO    CHECKRF1            BR IF YES TO GET NEXT                R 003000
         CCNO  LINE40N1            MOVE C/C SEQ NO TO ERROR MESSAGE     R 003010
         LINE  LINE40,P=Y          PRINT ERROR MESSAGE                  R 003020
         B     CHECKRF1            LOOP BACJ FOR NEXT C/B               R 003030
CHECKRFX SUBOUT RESTORE=R4         RESTORE AND RETRUM                   R 003040
         DROP  R10                 DROP CBXX ADDRESSABILITY             R 003050
         TITLE 'ISSUE WARNING IF MORE THAN 999 C/C SEQ NOS ASSIGNED'    R 003060
*********************************************************************** R 003070
*        ISSUE WARNING IF MORE THAN 999 C/C SEQUENCE NO.S ASSIGNED    * R 003080
*********************************************************************** R 003090
         SPACE 1                                                        R 003100
WARN999  SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              R 003110
         TM    SWERROR2,SWE2S999   HAS CONDITION ARISEN                 R 003120
         BZ    WARN999X            EXIT IF ERROR DOES NOT EXIST         R 003130
         LINE  LINE01              TELL OF MORE THAN 999 SEQUENCE NUMBE R 003140
         LINE LINE02               ISSUE WARNING OF POSSIBLE TRUNCATION R 003150
WARN999X SUBOUT RESTORE=R4         RESTORE AND RETURN                   R 003160
         TITLE 'BUDGIE3R - DETERMINE INTERNAL TEST CODE'                R 003170
*********************************************************************** R 003180
*        THIS ROUTINE DETERMINES WHETHER OR NOT A FIELD CONTAINS      * R 003190
*         A TEST REQUEST.  AT ENTRY, R2 POINTS AT THE FIELD TO        * R 003200
*         BE TESTED, AND AT EXIT, R1 POINTS AT THE APPROPRIATE        * R 003210
*         TEST TABLE ENTRY, IF RELEVANT.  THE CONDITION CODE IS       * R 003220
*         SET SUCH THAT UPON RETURN THE CALLER CAN -                  * R 003230
*              BE  - FIELD CONTAINS TEST REQUEST                      * R 003240
*              BNE - FIELD DOES NOT CONTAIN TEST REQUEST              * R 003250
*********************************************************************** R 003260
         SPACE 1                                                        R 003270
TESTREQ  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              R 003280
         MVI   TESTY,C'X'          ASSUME MATCH FOUND AND SET FOR CC    R 003290
         LA    R1,TESTTABL         POIUN AT STRAT OF TABLE              R 003300
TESTI1   CLC   0(2,R2),0(R1)       COMPARE FIELD WIRH TABLE             R 003310
         BE    TESTI2              BRANCH IF EQUAL FOR TEST FOUNF       R 003320
         LA    R1,4(,R1)           INCREMENT TO NEXT ENTRY              R 003330
         CLC   0(4,R1),=C'****'    TEST FOR END OF TABLE                R 003340
         BNE   TESTI1              LOOP BACK IF NOT                     R 003350
         MVI   TESTY,C'Y'          SHOW MATCH NOT FOUND                 R 003360
         B     TESTI3              GO SET COND CODE                     R 003370
TESTI2   CBAL  R4,TESTSPEC         PERFORM ANY SPECIAL PROCESSING REQD  R 003380
TESTI3   CLC   TESTX,TESTY         SET COND CODE FOR CALLER             R 003390
        SUBOUT RESTORE=R4          RETURN TO CALLER                     R 003400
         EJECT                                                          R 003410
*********************************************************************** R 003420
*        PERFORM ANY SPECIAL INITIALISATION PROCESSING REQUIRED       * R 003430
*********************************************************************** R 003440
         SPACE 1                                                        R 003450
TESTSPEC SUBIN ,                   ENTRT ROUTINE                        R 003460
         CLI   0(R1),C'D'          IS IT DATE VALIDATION REQUEST        R 003470
         BNE   *+8                 BR IF NOT DATE TEST                  R 003480
         OI    SWINIT,SWLDDATE     SET TO LOAD UT457                    R 003490
         CLC   0(2,R1),=C'L9'      TEST FOR CURRECY CONVERSION          R 003500
         BE    *+10                BR IF YES TO SET SWIRCH              R 003510
         CLC   0(2,R1),=C'L6'      IS THIS A CURRENCY TEST              R 003520
         BNE   *+8                 BR IF NOT CURR CDE VALIDATION        R 003530
         OI    SWINIT,SWLD435      SET TO LOAD UT435                    R 003540
         CLC   0(2,R1),=C'J '      IS THIS A RIGAM REQUEST              R 003550
         BNE   *+8                 BR IF NOT RIGAM                      R 003560
         OI    SWINIT,SWLDRIGM     SET TO LOAD RIGAM                    R 003570
         CLC   0(2,R1),=C'L9'      IS THIS CURRENCY CONVERSION          R 003580
         BNE   *+8                 BR IF NOT CURRENCY CONVERSION        R 003590
         OI    SWINIT,SWLD435      SET TO OLAD UT435                    R 003600
         CLC   0(2,R1),=C'E1'      IS IT PARTIAL KEY MATCHING           R 003610
         BNE   *+8                 BR IF NOT                            R 003620
         NI    $VBUDG3P,FF-POOLPFRE SUPPRESS FREEMAIN OF SUPPORT CODE   R 003630
         CLC   0(2,R1),=C'C7'      IS IT MATHEMATICAL OPERATION         R 003640
         BNE   *+8                 BR IF NOT                            R 003650
         NI    $VBUDG3Q,FF-POOLPFRE SUPPRESS FREEMAIN OF SUPPORT CODE   R 003660
         CLC   0(2,R1),=C'I '      IS IT ISAM LOOKUP                    R 003670
         BNE   *+8                 BR IF NOT                            R 003680
         NI    $VBUDG3M,FF-POOLPFRE SUPPRESS FREEMAIN OF SUPPORT CODE   R 003690
        SUBOUT ,                   RETURN TO CALLER                     R 003700
         SPACE 1                                                        R 003710
TESTX    DC    C'X'                CONSTANT                             R 003720
TESTY    DC    C' '                ALTERED TO SET CONDITION CODE        R 003730
         TITLE 'BUDGIE3R - EXECUTED INSTRUCTIONS'                       R 003740
*********************************************************************** R 003750
*        EXECUTED INSTRUCTIONS                                        * R 003760
*********************************************************************** R 003770
         SPACE 1                                                        R 003780
         TITLE 'BUDGIE3R - TABLE OF INTERNAL TEST CODES'                R 003790
*        NOTE: AN X IN POSN 3 MEANS AN ADDITIONAL CONTROL CARD IS NEEDD R 003800
         SPACE 1                                                        R 003810
TESTTABL EQU   *                   INTERNAL & EXTERNAL TEST CODES       R 003820
         DC    CL3'L1 ',X'00',CL3'L2 ',X'01',CL3'L3 ',X'02'             R 003830
         DC    CL3'L4 ',X'03',CL3'L5 ',X'04',CL3'L6 ',X'05'             R 003840
         DC    CL3'L7 ',X'06',CL3'L8 ',X'07',CL3'L9X',X'08'             R 003850
         DC    CL3'LTX',X'09',CL3'LEX',X'0A',CL3'EQX',X'0B'             R 003860
         DC    CL3'NEX',X'0C',CL3'GTX',X'0D',CL3'GEX',X'0E'             R 003870
         DC    CL3'NN ',X'0F',CL3'NS ',X'10',CL3'NZ ',X'11'             R 003880
         DC    CL3'NB ',X'12',CL3'T X',X'13',CL3'C1X',X'14'             R 003890
         DC    CL3'C2 ',X'15',CL3'C3X',X'16',CL3'C4X',X'17'             R 003900
         DC    CL3'C5X',X'18',CL3'C6 ',X'19',CL3'C7X',X'1A'             R 003910
         DC    CL3'C8X',X'1B',CL3'R1X',X'1C',CL3'R2 ',X'1D'             R 003920
         DC    CL3'R3 ',X'1E',CL3'R4 ',X'1F',CL3'R5 ',X'20'             R 003930
         DC    CL3'R6 ',X'21',CL3'R7 ',X'22',CL3'R8 ',X'23'             R 003940
         DC    CL3'R11 ',X'24',CL3'D1 ',X'25',CL3'D2 ',X'26'            R 003950
         DC    CL3'D3 ',X'27',CL3'D4 ',X'28',CL3'D5 ',X'29'             R 003960
         DC    CL3'D6 ',X'2A',CL3'D7 ',X'2B',CL3'D8 ',X'2C'             R 003970
         DC    CL3'D9 ',X'2D',CL3'I X',X'2E',CL3'J X',X'2F'             R 003980
         DC    CL3'C9X',X'30',CL3'E1X',X'31',CL3'E2 ',X'32'             R 003990
         DC    CL3'E3 ',X'33',CL3'E4 ',X'34',CL3'E5 ',X'35'             R 004000
         DC    CL3'E6 ',X'36',CL3'E7 ',X'37',CL3'E8 ',X'38'             R 004010
         DC    CL3'E9 ',X'39',CL3'F1 ',X'3A',CL3'F2 ',X'3B'             R 004020
         DC    CL3'F3 ',X'3C',CL3'F4 ',X'3D',CL3'F5 ',X'3E'             R 004030
         DC    CL3'F6 ',X'3F',CL3'M1X',X'40',CL3'M2 ',X'41'             R 004040
         DC    CL3'M3 ',X'42',CL3'M4 ',X'43',CL3'M5 ',X'44'             R 004050
         DC    CL3'M6 ',X'45',CL3'M7 ',X'46',CL3'M8 ',X'47'             R 004060
         DC    CL3'M9 ',X'48',CL3'US ',X'49',CL3'UZ ',X'4A'             R 004070
         DC    CL3'UB ',X'4B',CL3'S X',X'4C',CL3'NM ',X'4D'             R 004080
TESTSXCD DC    CL3'SX ',X'4E'                                           R 004090
TESTITCD DC    CL3'IT ',X'4F'                                           R 004100
         DC    CL3'ON ',X'50',CL3'OF ',X'51',CL3'WR ',X'52'             R 004110
         DC    CL3'SBX',X'4C',CL3'DM ',X'53',CL3'ER ',X'54'             R 004120
         DC    CL3'NR ',X'55',CL3'UR ',X'56',CL3'AB ',X'57'             R 004130
         DC    CL3'WI ',X'58',CL3'DWX',X'4C'                            R 004140
TESTTEND DC    CL4'****'           END OF CONVERSION TABLE              R 004150
         TITLE 'BUDGIE3R - MISCELLANEOUS CONSTANTS AND FIELDS'          R 004160
LINE01   DC    C'BDG3R-001-W  MORE THAN 999 CONTROL CARD SEQUENCE NUMBE*R 004170
               RS HAVE BEEN ASSIGNED:'                                  R 004180
LINE02   DC    C'BDG3R-002-W   CONSEQUENTLY, SEQUENCE NUMBERS IN ERROR *R 004190
               MESSAGES MAY HAVE SENIOR DIGITS TRUNCATED'               R 004200
LINE26   DS    0CL83                                                    R 004210
         DC    C'BDG3R-026-E  MS11/12 CARD NO.'                         R 004220
LINE26N1 DS    CL4                                                      R 004230
         DC    C' SPECIFIES AN UNMATCHED BATCH CARD FIELD NAME ('       R 004240
LINE26ID DS    CL2                                                      R 004250
         DC    C')'                                                     R 004260
LINE27   DS    0CL85                                                    R 004270
         DC    C'BDG3R-027-E  MS11/12 CARD NO.'                         R 004280
LINE27N1 DS    CL4                                                      R 004290
         DC    C' SPECIFIES AN UNMATCHED CONTROL RECORD FIELD NAME ('   R 004300
LINE27ID DS    CL2                                                      R 004310
         DC    C')'                                                     R 004320
LINE36   DS    0CL68                                                    R 004330
         DC    C'BDG3R-036-E  MS13 CARD NO.'                            R 004340
LINE36N1 DS    CL4                                                      R 004350
         DC    C' REQUIRES AN MSXX CARD WITH LABEL '''                  R 004360
LINE36TL DS    CL2                                                      R 004370
         DC    C''''                                                    R 004380
LINE39   DS    0CL90                                                    R 004390
         DC    C'BDG3R-039-E  CONTROL CARD NO.'                         R 004400
LINE39N1 DS    CL4                                                      R 004410
         DC    C' HAS DUPLICATE LABEL TO CARD NO.'                      R 004420
LINE39N2 DS    CL4                                                      R 004430
         DC    C' AND HAS BEEN IGNORED'                                 R 004440
LINE39ID DS    CL1                 ID OS MSXX TYPE BEING CHECKED        R 004450
LINE40   DS    0CL104                                                   R 004460
         DC    C'BDG3R-040-E  CONTROL CARD NO.'                         R 004470
LINE40N1 DS    CL4                                                      R 004480
         DC    C' IS NOT REFERENCED BY ANY MS13 CONTROL CARD'           R 004490
         DC    C' AND IS CONSEQUENTLY UNUSED'                           R 004500
         SPACE 1                                                        R 004510
EDITPATN DC    X'40202120'         EDIT ASK FOR C/C SEQ NUMBER          R 004520
         SPACE 1                                                        R 004530
        SCSEND R                   TERMINATE CSECT BUDGIE3R             R 004540
         END                                                            R 004550
         SPACE 1                                                        R 004560
         REPRO                                                          R 004570
 IDENTIFY BUDGIE3R('INTERCONNECT CONTROL BLOCKS')                       R 004580
         END                                                            R 004590
