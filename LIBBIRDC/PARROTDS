./ ADD NAME=CCB                                                           000010
         MACRO                                                            000020
&NAME    CCB   &DSECT=YES                                                 000030
         AIF   ('&DSECT' EQ 'NO').DSN01                                   000040
CCBNTRY  DSECT                                                            000050
         AGO   .DSY01                                                     000060
.DSN01   ANOP                                                             000070
CCBNTRY  EQU   *                   START OF CENTRAL CONTROL BLOCK         000080
.DSY01   ANOP                                                             000090
$SAVAREA DC    18F'0'              REGISTER SAVE AREA                     000100
         SPACE 1                                                          000110
$WRKDUBL DS    PL8                 DOUBLE WORD WORK AREA                  000120
$FPFP    DC    D'0'                FLOATING POINT NUMBER                  000130
$FPVAL1  DC    D'0'                FLOATING POINT WORK AREA               000140
$FPVAL2  DC    D'0'                FLOATING POINT WORK AREA               000150
$FPDEC   DC    PL16'0'             PACKED DECIMAL EQUIVALENT OF FP NO.    000160
$WRKSNGL DS    F                   SINGLE WORD WORK AREA                  000170
         EJECT                                                            000180
***********************************************************************   000190
*        CSECT ADDRESSES                                              *   000200
***********************************************************************   000210
         SPACE 1                                                          000220
$ADRVCON DS    0F                  ADDRESS OF 1ST CSECT DEFINITION        000230
$NUMPOOL DC    AL1(($POOLEND-$VPARTA)/8) NUMBER OF STORAGE POOL DEF'NS    000240
         DC    AL3($VPARTA)        ADDRESS OF 1ST FOLLOWING CSECT DEFIN   000250
       POOLFER A,FREE              DEFINE CSECT PARROTA                   000260
       POOLFER A1,FREE             DEFINE CSECT PARROTA1                  000270
       POOLFER A2,FREE             DEFINE CSECT PARROTA2                  000280
       POOLFER A3,FREE             DEFINE CSECT PARROTA3                  000290
       POOLFER B,FREE              DEFINE CSECT PARROTB                   000300
       POOLFER B1,FREE             DEFINE CSECT PARROTB1                  000310
       POOLFER C,FREE              DEFINE CSECT PARROTC                   000320
       POOLFER C1,FREE             DEFINE CSECT PARROTC1                  000330
       POOLFER C2,FREE             DEFINE CSECT PARROTC2                  000340
       POOLFER C3,FREE             DEFINE CSECT PARROTC3                  000350
       POOLFER C4,FREE             DEFINE CSECT PARROTC4                  000360
       POOLFER D,FREE              DEFINE CSECT PARROTD                   000370
       POOLFER E                   DEFINE CSECT PARROTE                   000380
       POOLFER E1                  DEFINE CSECT PARROTE1                  000390
       POOLFER F                   DEFINE CSECT PARROTF                   000400
       POOLFER G                   DEFINE CSECT PARROTG                   000410
       POOLFER H,FREE              DEFINE CSECT PARROTH                   000420
       POOLFER I,FREE              DEFINE CSECT PARROTI                   000430
       POOLFER J,FREE              DEFINE CSECT PARROTJ                   000440
       POOLFER K                   DEFINE CSECT PARROTK                   000450
       POOLFER K1                  DEFINE CSECT PARROTK1                  000460
       POOLFER L                   DEFINE CSECT PARROTL                   000470
       POOLFER M,FREE              DEFINE CSECT PARROTM                   000480
       POOLFER N                   DEFINE CSECT PARROTN                   000490
       POOLFER O,FREE              DEFINE CSECT PARROTO                   000500
       POOLFER O1,FREE             DEFINE CSECT PARROTO1                  000510
       POOLFER P                   DEFINE CSECT PARROTP                   000520
       POOLFER Q                   DEFINE CSECT PARROTQ                   000530
       POOLFER R                   DEFINE CSECT PARROTR                   000540
       POOLFER S                   DEFINE CSECT PARROTS                   000550
       POOLFER T                   DEFINE CSECT PARROTT                   000560
       POOLFER U,FREE              DEFINE CSECT PARROTU                   000570
       POOLFER V                   DEFINE CSECT PARROTV                   000580
       POOLFER W                   DEFINE CSECT PARROTW                   000590
       POOLFER X                   DEFINE CSECT PARROTX                   000600
       POOLFER Y                   DEFINE CSECT PARROTY                   000610
       POOLFER Z                   DEFINE CSECT PARROTZ                   000620
         EJECT                                                            000630
***********************************************************************   000640
*        CSECT ADDRESSES ( CONT'D )                                   *   000650
***********************************************************************   000660
         SPACE 1                                                          000670
*        SPARE FIELDS FOR EXTRA CSECT DEFINITIONS                         000680
         SPACE 1                                                          000690
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000700
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000710
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000720
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000730
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000740
         DC    A(0),A(0)           SPARE FIELDS FOR EXTRA CSECT DEFIN'N   000750
         SPACE 1                                                          000760
$GETCORE DC    A(0),A(5000)        DEFINITION OF GETMAINED STORAGE AREA   000770
$POOLEND EQU   *                   END OF CSECT/POOL DEFINITIONS          000780
         EJECT                                                            000790
***********************************************************************   000800
*        ROUTINE ADDRESSES                                            *   000810
***********************************************************************   000820
         SPACE 1                                                          000830
$ADRRTNS DS    0F                  ADDRESS OF FIRST RTN DESCRIPTOR        000840
$NUMRTNS DC    AL1(($RTNEND-$RTNSTRT)/8) NO. OF ROUTINE DESCRIPTORS       000850
         DC    AL3($RTNSTRT)       ADDRESS OF FIRST RTN DESCRIPTOR        000860
$RTNSTRT EQU   *                   START OF ROUTINE DESCRIPTORS           000870
        RTNDEF BLDFSAS             ACQUIRE AND CHAIN ANY REQ'D FSAS       000880
        RTNDEF BLDFTYP             DETERMINE FIELD TYPE ( IN C/C)         000890
        RTNDEF BLDISCB             BUILD I.S. DCB DYNAMICALLY             000900
        RTNDEF BLDSCE              CONSTRUCT SELECTION CRITERION ELEMEN   000910
        RTNDEF BLDTTYP             DETERMINE TEST TYPE ( IN C/C )         000920
        RTNDEF CCGR00              ANALYSE GR00 CONTROL CARDS             000930
        RTNDEF CCGR01              ANALYSE GR01 CONTROL CARDS             000940
        RTNDEF CCGR02              ANALYSE GR02 CONTROL CARDS             000950
        RTNDEF CCGR03              ANALYSE GR03 CONTROL CARDS             000960
        RTNDEF CCGR04              ANALYSE GR04 CONTROL CARDS             000970
        RTNDEF CCGR05              ANALYSE GR05 CONTROL CARDS             000980
        RTNDEF CCGR06              ANALYSE GR06 CONTROL CARDS             000990
        RTNDEF CCGR07              ANALYSE GR07 CONTROL CARDS             001000
        RTNDEF CCGR08              ANALYSE GR08 CONTROL CARDS             001010
        RTNDEF CCGR09              ANALYSE GR09 CONTROL CARDS             001020
        RTNDEF CCGR10              ANALYSE GR10 CONTROL CARDS             001030
        RTNDEF CCGR11              ANALYSE GR11 CONTROL CARDS             001040
        RTNDEF CCGR12              ANALYSE GR12 CONTROL CARDS             001050
        RTNDEF CCGR13              ANALYSE GR13 CONTROL CARDS             001060
        RTNDEF CCGR20              ANALYSE GR20 CONTROL CARDS             001070
        RTNDEF CCGR21              ANALYSE GR21 CONTROL CARDS             001080
        RTNDEF CCGR40              ANALYSE GR40 CONTROL CARDS             001090
        RTNDEF CCGR41              ANALYSE GR41 CONTROL CARDS             001100
        RTNDEF CLEARBL             PREVENT DUPLICATE SUPPRESSION ON EOP   001110
        RTNDEF CLOSE               CLOSE DATA SETS                        001120
        RTNDEF COMPARE             PERFOM SPECIFIED RELATIONSHIP TEST     001130
        RTNDEF CONVIND             CONVERT IND SPEC'N TO INTERNAL FORM    001140
        RTNDEF CNVTOFP             CONVERT FIELD TO FLOATING POINT        001150
        RTNDEF CNVFRFP             CONVERT FIELD FROM FLOATING POINT      001160
         EJECT                                                            001170
***********************************************************************   001180
*        ROUTINE ADDRESSES ( CONT'D )                                 *   001190
***********************************************************************   001200
         SPACE 1                                                          001210
        RTNDEF DETAIL              PROCESS DETAIL RECORD                  001220
        RTNDEF DETLHD              PRINT GEADINGS FOR ALL REPORT D/S      001230
        RTNDEF DETLSPC             SET SPACING PRIOR TO DETAIL LINE       001240
        RTNDEF DUMP                WRITE MESSAGE TO OP AND ABEND          001250
        RTNDEF FDBCONS             TEST IF FDB CONSISTENT WITH LIB        001260
        RTNDEF FINDKBD             LOCATE KBD WITH SPECIFIED LABEL        001270
        RTNDEF FINDLIB             LOCATE LIB WITH SPECIFIED LABEL        001280
        RTNDEF GETIREC             GET NEXT SELECTED SORTED INPUT REC     001290
        RTNDEF GETMAIN             SUB-ALLOCATE CORE                      001300
        RTNDEF INITPRM             PROCESS PARM FIELDS                    001310
        RTNDEF INITPH1             PHASE 1 INITIALISATION                 001320
        RTNDEF INITPH2             PHASE 2 OF INITIALISATION              001330
        RTNDEF IOERRTN             I/O ERROR ANALYSIS ROUTINE             001340
        RTNDEF ISCLOSE             CLOSE I.S. DATA SETS                   001350
        RTNDEF ISOPEN              OPEN I.S. DATA SETS                    001360
        RTNDEF ISRANDM             READ I.S. RANDOMLY                     001370
        RTNDEF JOINCB              INTER-CONNECT CONTROL BLOCKS           001380
        RTNDEF JOINCB2             INTER-CONNECT CONTROL BLOCKS CONT'D    001390
        RTNDEF KEYBLCT             RESET LINECNT IF PAGESKIP SUPPRESSED   001400
        RTNDEF KEYBRAK             DETECT KEY BREAKS                      001410
        RTNDEF NUMERIC             VALIDATE UNSIGNED DISPLAY NUMERIC      001420
        RTNDEF NUMRICP             VALIDATE PACKED DECIMAL NUMERIC        001430
        RTNDEF NUMRICS             VALIDATE SIGNED/UNSIGNED DISPLAY NUM   001440
        RTNDEF OPEN                OPEN DATA SETS                         001450
        RTNDEF PARMRTN             PROCESS SINGLE PARM FIELD              001460
        RTNDEF PARTKEY             PARTIAL KEY MATCH OF TWO FIELDS        001470
        RTNDEF PCBPROC             PROCESS CHAIN OF PCB'S OF SPEC TYPE    001480
        RTNDEF PPPLL               CONVERT PPPLL TO BINARY                001490
        RTNDEF PRINT               SYSPRINT WRITE ROUTINE                 001500
        RTNDEF PROCKBD             PROCESS SINGLE KBD                     001510
        RTNDEF PROCLCD             PROCESS SINGLE LCD                     001520
        RTNDEF PROCLIB             PROCESS SINGLE LIB                     001530
        RTNDEF PROCPCB             PROCESS SINGLE PCB                     001540
        RTNDEF PUTMON              WRITE MONITOR RECORDS TO SYSMONTR      001550
        RTNDEF PUTUT2              WRITE TO SYSUT2                        001560
        RTNDEF PUTUT3              WRITE TO SYSUT3                        001570
         EJECT                                                            001580
***********************************************************************   001590
*        ROUTINE ADDRESSES ( CONT'D )                                 *   001600
***********************************************************************   001610
         SPACE 1                                                          001620
        RTNDEF READCC              READ CONTROL CARDS AND INTERPRET       001630
        RTNDEF READIN              SYSIN READ ROUTINE                     001640
        RTNDEF READLIB             SYSLIB READ ROUTINE                    001650
        RTNDEF READLIN             READ ROUTINE FOR SYSLIN                001660
        RTNDEF READUT1             SYSUT1 READ ROUTINE                    001670
        RTNDEF REPORT              PRINT WRITE ROUTINE                    001680
        RTNDEF RSTPROC             PROCESS RST CHAIN                      001690
        RTNDEF SCEPROC             PROCESS SCE CHAIN                      001700
        RTNDEF STAE                STAE ERROR ANALYSIS ROUTINE            001710
        RTNDEF TERMPH1             1ST PHASE OF TERMINATION               001720
        RTNDEF TIOTSCN             SCAN TIOT FOR DD STATEMENTS            001730
        RTNDEF TW80ADD             TW80 ACCUMULATION ROUTINE              001740
        RTNDEF TW80INT             TW80 CONTROL BLOCK INITIALISATION      001750
        RTNDEF TW80KEY             TW80 MAJOR KEY BREAK PROCESSING        001760
        RTNDEF TW80TOT             TW80 FILE TOTAL ROUTINE                001770
        RTNDEF UXITCAL             CALL USER EXIT                         001780
        RTNDEF VARMOVE             VARIABLE LENGTH MOVES                  001790
        RTNDEF WRITE               WRITE TO ANY DDNAME WITHOUT PAGES      001800
        RTNDEF WRITEH              HEADING ROUTINE FOR REPORT D/S         001810
        RTNDEF WRITEP              WRITE TO ANY DDNAME WITH PAGES         001820
$RTNEND  EQU   *                   END OF ROUTINE DESCRIPTORS             001830
         EJECT                                                            001840
***********************************************************************   001850
*        BRANCHES TO CENTRAL CONTROL ROUTINES                         *   001860
***********************************************************************   001870
         SPACE 1                                                          001880
         AIF   ('&DSECT' EQ 'YES').DSY02                                  001890
$CBALINK B     CBALINK             ESTABLISH CBAL LINKAGE                 001900
         SPACE 1                                                          001910
         USING $IOERROR,R15        ESTABLISH SYNAD EXIT ADDRESSABILITY    001920
#IOERROR EQU   *                   'ALIAS' OF $IOERROR FOR DCB ADCONS     001930
$IOERROR B     IOEREXIT            BR TO I/O ERROR INTERFACE ROUTINE      001940
         DROP  R15                 DROP SYNAD EXIT ADDRESSABILITY         001950
         SPACE 1                                                          001960
         USING $STAEXIT,R15        ESTABLISH ESTAE EXIT ADDRESSABILITY    001970
$STAEXIT B     STAEXIT             BR TO STAE INTERFACE ROUTINE           001980
         DROP  R15                 DROP ESTAE EXIT ADDRESSABILITY         001990
         SPACE 1                                                          002000
         USING $STIMEND,R15        ESTABLISH STIMER EXIT ADDRESSABILITY   002010
$STIMEND B     STIMEND             INTERCEPT PROBABLE USER LOOP           002020
         DROP  R15                 DROP STIMER EXIT ADDRESSABILITY        002030
         SPACE 1                                                          002040
         USING $MONITOR,R15        ESTABLISH TEMPORARY ADDRESSABILITY     002050
$MONITOR B     MONITOR             BRANCH TO MONITORING ROUTINE           002060
         DROP  R15                 DROP TEMPORARY ADDRESSABILITY          002070
         AGO   .DSY03                                                     002080
.DSY02   ANOP                                                             002090
$CBALINK DS    F                   ESTABLISH CBAL LINKAGE                 002100
$IOERROR DS    F                   BR TO I/O ERROR INTERFACE ROUTINE      002110
$STAEXIT DS    F                   BR TO STAE INTERFACE ROUTINE           002120
$STIMEND DS    F                   INTERCEPT PROBABLE USER LOOP           002130
$MONITOR DS    F                   BRANCH TO MONITORING ROUTINE           002140
.DSY03   ANOP                                                             002150
         EJECT                                                            002160
***********************************************************************   002170
*        CONTROL BLOCK CHAIN ADDRESSES                                *   002180
***********************************************************************   002190
         SPACE 1                                                          002200
$FDBFDB  DC    A(0)                FDB CHAIN GENERATED FORM GR04/07       002210
$ISRISR  DC    A(0)                ISR CHAIN GENERATED FROM GR20 CARDS    002220
$JCLJCL  DC    A(0)                JCL CHAIN GENERATED FROM GR94 CARDS    002230
$KBDKBD  DC    A(0)                KBD CHAIN GENERATED FORM GR03 CARDS    002240
$LCDDETL DC    A(0)                LCD CHAIN GENERATED FROM GR11 CARDS    002250
$LCDHEAD DC    A(0)                LCD CHAIN GENERATED FORM GR10 CARDS    002260
$LCDTOTL DC    A(0)                LCD CHAIN GENERATED FORM GR12 CARDS    002270
$LIBLIB  DC    A(0)                LIB CHAIN GENERATED FORM GR03/4/5/7    002280
$OCBOCB  DC    A(0)                OCB CHAIN GENERATED FORM GR00 CARDS    002290
$PCBPCB  DC    A(0)                PCB CHAIN GENERATED FORM GR07 CARDS    002300
$RSTRST  DC    A(0)                RST CHAIN BENERATED FROM GR02 CARDS    002310
$SABSAB  DC    A(0)                SAB CHAIN BENERATED FROM GR40 CARDS    002320
$SPDSPD  DC    A(0)                HEAD OF STORAGE POOL DEFINITION CHAI   002330
$TRDTRD  DC    A(0)                TRD CHAIN GENERATED FORM GR08/09       002340
         SPACE 5                                                          002350
***********************************************************************   002360
*        CURRENT                   CONTROL BLOCK POINTERS             *   002370
***********************************************************************   002380
         SPACE 1                                                          002390
$PTRACE  DC    A(0)                CURRENT ACE ADDRESS                    002400
$PTRFDB  DC    A($FDBFDB)          CURRENT FDB ADDRESS                    002410
$PTRHDG  DC    A(0)                CURRENT HDG ADDRESS                    002420
$PTRJCL  DC    A($JCLJCL)          CURRENT JCL ADDRESS                    002430
$PTRKBD  DC    A($KBDKBD)          CURRENT KBD ADDRESS                    002440
$PTRLCD  DC    A(0)                CURRENT LCD ADDRESS                    002450
$PTRLIB  DC    A($LIBLIB)          CURRENT LIB ADDRESS                    002460
$PTROCB  DC    A($OCBOCB)          CURRENT OCB ADDRESS                    002470
$PTRPCB  DC    A($PCBPCB)          CURRENT PCB ADDRESS                    002480
$PTRPTE  DC    A(0)                CURRENT PTE ADDRESS                    002490
$PTRRST  DC    A($RSTRST)          CURRENT RST ADDRESS                    002500
$PTRSAB  DC    A($SABSAB)          CURRENT SAB ADDRESS                    002510
$PTRSCE  DC    A(0)                CURRENT SCE ADDRESS                    002520
$PTRTRD  DC    A($TRDTRD)          CURRENT TRD ADDRESS                    002530
         SPACE 1                                                          002540
$LPTRFDB DC    A(0)                ADDRESS OF LAST FDB                    002550
$LPTRKBD DC    A(0)                ADDRESS OF LAST KBD                    002560
$LPTRLIB DC    A(0)                ADDRESS OF LAST LIB                    002570
         SPACE 1                                                          002580
$CBP1ST  DC    A(0)                ADDRESS OF 1ST CONTROL BLOCK PREFIX    002590
$CBPLAST DC    A($CBP1ST)          ADDRESS OF LAST CONTROL BLOCK PREFIX   002600
         EJECT                                                            002610
***********************************************************************   002620
*        DCBSW SUB CONTROL BLOCKS                                     *   002630
***********************************************************************   002640
         SPACE 1                                                          002650
SYSPRINT IOM   DCBSW,SYSPRINT,DCB01,PRINT DEFINE SYSPRINT DATA SET        002660
PRINTDS  IOM   DCBSW,PRINT,DCB02,PRINT DESCRIBE 'PRINT' DATA SET          002670
SYSIN    IOM   DCBSW,SYSIN,DCB03,INPUT,MANDAT                             002680
SYSUT1   IOM   DCBSW,SYSUT1,DCB04,INPUT,MANDAT                            002690
TW80     IOM   DCBSW,TW80,DCB05,PRINT DESCRIBE 'TW80' DATA SET            002700
SYSLIN   IOM   DCBSW,SYSLIN,DCB06,INPUT                                   002710
SYSLIB   IOM   DCBSW,SYSLIB,DCB07,INPUT                                   002720
SYSMONTR IOM   DCBSW,SYSMONTR,DCB08,OUTPUT                                002730
SYSUT3   IOM   DCBSW,SYSUT3,DCB09,OUTPUT                                  002740
SYSUT2   IOM   DCBSW,SYSUT2,DCB10,OUTPUT                                  002750
         SPACE 5                                                          002760
         DC    7A(0)               SPARE IOM FOR FUTURE EXPANSION         002770
         DC    7A(0)               SPARE IOM FOR FUTURE EXPANSION         002780
         DC    7A(0)               SPARE IOM FOR FUTURE EXPANSION         002790
         DC    7A(0)               SPARE IOM FOR FUTURE EXPANSION         002800
         DC    7A(0)               SPARE IOM FOR FUTURE EXPANSION         002810
         EJECT                                                            002820
***********************************************************************   002830
*        MISCELLANEOUS FIELDS                                         *   002840
***********************************************************************   002850
         SPACE 1                                                          002860
$ABNDCDE DC    A(1)                ABEND CODE FOR ABNORMAL TERMINATION    002870
FULLDUMP EQU   X'80'               PRODUCE A CORE DUMP                    002880
$ADRIGAM DC    A(0)                ADDRESS OF RIGAM ROUTINE               002890
$ADUT458 DC    A(0)                ADDRESS OF UT458 ( DATE ROUTINE )      002900
$ADUT460 DC    A(0)                ADDRESS OF UT460 ( CURRENCY ROUTINE)   002910
$BVALUE  DC    F'0'                VALUE OF FIELD INSPECED BY NUMERIC     002920
$CBALRTD DC    F'0'                CURRENT ROUTINE DESCRIPTOR ADDRESS     002930
$CBALRTN DC    F'0'                CURRENT CBAL ROUTINE ADDRESS           002940
$CBALR12 DC    F'0'                BASE ADDRESS FOR CBAL RETURN ADDRESS   002950
$CBALR4  DC    F'0'                CURRENT CBAL RETURN ADDRESS            002960
$CCSEQNO DC    PL4'0'              CURRENT CONTROL CARD SEQUENCE NUMBER   002970
$CDEADDR DC    A(0)                ADDRESS OF PARROT'S CDE                002980
$DBUFF   DC    A(0)                ADDRESS OF DUMMY BUFFER ARA            002990
$FPBIN   DC    F'0'                BINARY EQUIVALENT OF FP NO.            003000
$GETMUSD DC    F'0'                AMOUNT OF CORE USED FOR C/B'S ETC      003010
$GETMXES DC    F'0'                AMOUNT ACQUIRED BY OS GETMAINS         003020
$MONINT  DC    F'38'               MONITORING INTERVAL ( 1/1000 SEC )     003030
$PMRIGAM DC    A(0)                ADDRESS OF RIGAM LINKAGE AREA          003040
$PMUT458 DC    A(0)                ADDRESS OF UT458 LINKAGE AREA          003050
$PMUT460 DC    A(0)                ADDRESS OF UT460 LINKAGE AREA          003060
$PTRPARM DC    A(0)                ADDRESS OF USER ROUTINE LINKAGE AREA   003070
$PTRUT1R DC    A(0)                ADDRESS OF 1ST DATA BYTE OF SYSUT1     003080
$RBADDR  DC    A(0)                ADDRESS OF PARROT'S RB                 003090
$SIZEISX DC    F'0'                SIZE OF ISAM MASTER INDICES            003100
$SORTREC DC    F'0'                ADDRESS OF LENGTH || RECORD || W/A     003110
$TCBADDR DC    A(0)                ADDRESS OF PARROT'S JOBSTEP TCB        003120
         SPACE 1                                                          003130
$COMPCDE DC    H'0'                COMPLETION CODE                        003140
$KEYNO   DC    H'0'                CURRENT KEY BREAK NUMBER ( 0 - 8 )     003150
$MAXPPL  DC    H'0'                MAXIMUM PP+L DEFINED                   003160
$NUMKEYS DC    H'0'                NUMBER OF KEYS DEFINED                 003170
$RECLINT DC    H'0'                LENGTH OF 'INTERNAL' RECORD            003180
$RECLUT1 DC    H'0'                LENGTH OF SYSUT1 RECORD                003190
         EJECT                                                            003200
***********************************************************************   003210
*        MISCELLANEOUS FIELDS ( CONT'D )                              *   003220
***********************************************************************   003230
         SPACE 1                                                          003240
$ARECCNT DC    PL4'0'              COUNT OF RECORDS SELECTED TO PROCESS   003250
$CNTEOFL DC    PL4'0'              COUNT OF EXPONENT OVERFLOWS            003260
$CNT0DIV DC    PL4'0'              NO. OF ATTEMPTS TO DIVIDE BY ZERO      003270
$DATEREP DC    C'01 JAN 99'        IPL DATE IN REPORT FORMAT              003280
$DINTVL  DC    C'00000500'         INTERVAL OF 5 SECONDS                  003290
$FPDISP  DC    CL33'0'             SIGNED DISPLAY NUMERIC EQUIV TO FP     003300
$FPEDISP DC    CL45'0'             EDITED SIGNED DISPLAY NUMERIC FP EQI   003310
$FPNDEC  DC    BL1'0'              NUMBER OF DECIMAL PLACES IN FP NUMBE   003320
$GR90IND DC    CL40' '             40 INDICATORS USED FOR GR90 PROCESSI   003330
$INDS    DC    XL14'00'            INDICATORS 00-99, H0-H3, U1-U8         003340
         ORG   *-2                 OVERLAY LAST TWO INDICATOR BYTES       003350
$HINDS   DC    X'00'               HALT INDS H0-H3 ( LAST 4 BITS )        003360
$UINDS   DC    X'00'               USER INDICATORS U1 - U8                003370
$IPLDATE DC    CL9'01 JAN 99'      CURRENT DATE IN REPORT FORMAT          003380
$MAXDMPS DC    PL2'10'             MAX NUMBER OF ABENDS BEFORE TERMIN'N   003390
$ONE     DC    PL1'1'              PACKED CONSTANT OF 1                   003400
$PGELMIT DC    PL2'55'             NO OF LINES / PAGE                     003410
$PRNTCC  DC    X'09'               USER-SUPPLIED REPORT SPACING:DEFLT 1   003420
$PROCTYP DC    CL1' '              PROCESSING TYPE (A,B ETC) FOR PCB'S    003430
$PVALUE  DC    PL8'0'              VALUE OF FIELD INSPECTED BY NUMERIC    003440
$RUNTIME DC    8C'.'               TIME STEP STARTED                      003450
$SPACES  DC    CL30' '             LITERAL VALUE OF SPACES                003460
$TEST    DC    C' '                CHARACTER USED TO SET CONDITION CODE   003470
$TSTAREA DC    CL100' '            GENERAL PURPOSE TEST AREA              003480
$VERSNO  DC    C'99/99'            VERSION NUMBER OF CURRENCY ROUTINE     003490
$WRKAREA DC    CL80' '             GENERAL PURPOSE WORK AREA              003500
$WRKEDIT DC    CL6' '              EDIT WORK AREA                         003510
$XITNAME DC    CL8' '              NAME OF OPTIONAL USER EXIT             003520
$ZERO    DC    PL1'0'              PACKED CONSTANT OF ZERO                003530
$ZEROES  DC    30C'0'              LITERAL VALUE OF EBCDIC ZEROES         003540
         EJECT                                                            003550
***********************************************************************   003560
*        SWITCHES                                                     *   003570
***********************************************************************   003580
         SPACE 1                                                          003590
***********************************************************************   003600
SWPARM   DC    AL1(MPRMTEST)       PARM PROCESSING SWITCHES           *   003610
***********************************************************************   003620
         SPACE 1                                                          003630
MPRM1ST  EQU   1                   1ST TIME SWITCH                        003640
MPRMFDMP EQU   2                   FORCE U004 ABEND IN TERMINATION        003650
MPRMTEST EQU   4                   TESTING AIDS REQUIRED                  003660
MPRMCBD  EQU   8                   FORCE U044 ABEND IN TERMINATION        003670
MPRMSEQ  EQU   16                  SEQUENCE CHECKING ON SYSUT1            003680
MPRMSTIM EQU   32                  ISSUE LOOP-DETECTING STIMERS           003690
MPRMMON  EQU   64                  MONITOR PARROT EXECUTION               003700
MPRMEOFL EQU   128                 DO NOT SUPPRESS EXPONENT OVERFLOWS     003710
         SPACE 5                                                          003720
***********************************************************************   003730
SWPARM2  DC    X'00'               2ND BYTE OF PARM SWITCHES          *   003740
***********************************************************************   003750
         SPACE 1                                                          003760
MPRMTIND EQU   1                   PARM TOTIND=KEYNO WAS SUPPLIED         003770
MPRMGR90 EQU   2                   PARM GR90=(....) WAS SUPPLIED          003780
MPRMGR08 EQU   4                   PARM GR08XTRA WAS SUPPLIED             003790
MPRMVAL  EQU   8                   PARM=VALIDATE: ZEROISE NON-NUMERICS    003800
MPRMNSTA EQU   16                  PARM=NOSTAE: SUPPRESS ESTAE ROUTINE    003810
         EJECT                                                            003820
***********************************************************************   003830
SWERROR  DC    X'00'               ERROR SWITCHES                     *   003840
***********************************************************************   003850
         SPACE 1                                                          003860
MERRGETM EQU   1                   GETMAINS REQUIRED FOR C/B'S            003870
MERRCCER EQU   2                   CONTROL CARD ERROR HAS BEEN FOUND      003880
MERRCBAL EQU   4                   CBAL ISSUED TO NON-EXISTENT ROUTINE    003890
MERRNNUM EQU   8                   INPUT CONTAINED NON-NUMERIC DATA       003900
MERRIOER EQU   16                  I/O ERROR HAS OCCURRED                 003910
MERRBRTN EQU   32                  RTN DESCRIPTOR HAS NO KNOWN CSECT      003920
MERRCVB  EQU   64                  FP ACCUM'R EXCEEDED MAX/MIN BIN VALU   003930
MERR0DIV EQU   128                 ATTEMPTS MADE TO DIVIDE BY ZERO        003940
         SPACE 5                                                          003950
***********************************************************************   003960
SWERROR2 DC    X'00'               2ND BYTE OF ERROR SWITCHES         *   003970
***********************************************************************   003980
         SPACE 1                                                          003990
MERREOFL EQU   1                   EXPONENT OVERFLOW CONDITION FOUND      004000
         SPACE 5                                                          004010
***********************************************************************   004020
SWINIT   DC    X'00'               INITIALISATION SWITCHES            *   004030
***********************************************************************   004040
         SPACE 1                                                          004050
MINTCC   EQU   1                   CURRENTLY PROCESSING CONTROL CARDS     004060
MINTPARM EQU   2                   CURRENTLY PROCESSING PARM FIELDS       004070
MINTCCER EQU   4                   CONTROL CRD ERROR FOUND IN CURR RTN    004080
MINTNOIX EQU   8                   ISAM MASTER INDICES NOT REQUIRED       004090
MINTGR92 EQU   16                  PROCESSING SYSLIB ( GR92 ) ENTRY       004100
         EJECT                                                            004110
***********************************************************************   004120
*        SWITCHES ( CONT'D )                                          *   004130
***********************************************************************   004140
         SPACE 1                                                          004150
***********************************************************************   004160
SWCCARDS DC    X'00'               CONTROL CARD PROCESSING SWITCHES   *   004170
***********************************************************************   004180
         SPACE 1                                                          004190
MCRDNGEN EQU   1                   FDSYSIN/SYSLIB C/C NOT TO BE PRINTED   004200
MCRDXTRA EQU   2                   FDSYSIN/SYSLIB C/C BEING PROCESSED     004210
MCRDNPRT EQU   4                   'NOPRINT' CONTROL CARD IN EFFECT       004220
MCRD1GR3 EQU   8                   1ST GR03 HAS BEEN PROCESSED            004230
         SPACE 5                                                          004240
***********************************************************************   004250
$OSLEVEL DC    X'00'               LEVEL OF OPERATING SYSTEM          *   004260
***********************************************************************   004270
         SPACE 1                                                          004280
OSLMFT   EQU   X'20'               MFT                                    004290
OSLMVT   EQU   X'10'               MVT                                    004300
OSLMP65  EQU   X'04'               MP 360/65                              004310
OSLMVTMP EQU   X'14'               MP UNDER MVT                           004320
OSLVS1   EQU   X'02'               VS1                                    004330
OSLSVS   EQU   X'02'               SVS                                    004340
OSLMVS   EQU   X'01'               MVS                                    004350
OSLPCP   EQU   X'40'               PCP                                    004360
         SPACE 1                                                          004370
CVTDCB   EQU   X'74'               OSLEVEL FLAG IN CVT                    004380
         SPACE 5                                                          004390
***********************************************************************   004400
$PCBTYPS DC    X'0000'             FLAGS INDICATING PCB TYPES PRESENT     004410
***********************************************************************   004420
         SPACE 1                                                          004430
PCBTYPEA EQU   1                   ( BYTE 1 ) - PCB TYPE A                004440
PCBTYPEB EQU   2                   ( BYTE 1 ) - PCB TYPE B                004450
PCBTYPEC EQU   4                   ( BYTE 1 ) - PCB TYPE C                004460
PCBTYPED EQU   8                   ( BYTE 1 ) - PCB TYPE D                004470
PCBTYPEE EQU   16                  ( BYTE 1 ) - PCB TYPE E                004480
PCBTYPET EQU   1                   ( BYTE 2 ) - PCB TYPE T                004490
         EJECT                                                            004500
***********************************************************************   004510
$STATUS  DC    X'00'               PARROT ENVIRONMENT STATUS FLAG     *   004520
***********************************************************************   004530
         SPACE 1                                                          004540
STATPROD EQU   1                   THIS IS A PRODUCTION JOB               004550
STATDETL EQU   2                   GR05 ENCOUNTERED: DETAIL LINES REQ'D   004560
STATEXIT EQU   4                   USER EXIT PROCESSING REQUIRED          004570
STATNGRT EQU   8                   SUPPRESS GRAND TOTAL (GR12:DELET)      004580
STATCHD  EQU   16                  CONTROL HEADINGS REQUIRED              004590
STATEOD  EQU   32                  END OF FILE ON INPUT                   004600
STATKBDT EQU   64                  GR12'S EXIST FOR KEY 0 (FILE TOTAL)    004610
STATINIT EQU   128                 CURRENTLY PERFORMING INITIALISATION    004620
         SPACE 5                                                          004630
***********************************************************************   004640
$STATUS2 DC    X'00'               2ND BYTE OF STATUS SWITCHES        *   004650
***********************************************************************   004660
         SPACE 1                                                          004670
STAT2080 EQU   1                   TWENTY80 PROCESSING IS REQUIRED        004680
STAT2NKH EQU   2                   FLAG FOR 'KEYBHEAD' - DONT REDO HDGS   004690
STAT2EOF EQU   4                   SECONDARY EOF FLAG.                    004700
         SPACE 5                                                          004710
***********************************************************************   004720
$PROCESS DC    X'00'               PROCESSING CONTROL FLAGS           *   004730
***********************************************************************   004740
         SPACE 1                                                          004750
PROCDETL EQU   1                   CURRENTLY PROCESSING AT DETAIL LEVEL   004760
PROCF$   EQU   2                   USE FLOATING $ WITH FP CONVERSION      004770
PROCKEYH EQU   4                   KEY-BREAK HAS TRIGGERED NEW PAGE       004780
PROCINIT EQU   8                   INITIALISATION (1ST-TIME) FOR MAINLN   004790
PROCLINE EQU   16                  LINE SHOULD BE WRITTEN TO CURENT OCB   004800
PROCFDMP EQU   32                  PSEUDO DUMP OF C/B IN PROGRESS (U44)   004810
PROCBL   EQU   64                  AT LEAST 1 LCD SPECIFIES 'BL'          004820
PROCBLAL EQU   128                 KEYBREAK SO CLEAR ALL 'BL' LCD'S       004830
         EJECT                                                            004840
***********************************************************************   004850
SORTSW   DC    X'00'               INTERNAL SORT PROCESSING FLAGS     *   004860
***********************************************************************   004870
         SPACE 1                                                          004880
MSRTREQD EQU   1                   SORT REQUIRED ( GR06 ENCOUNTERED )     004890
MSRTSORT EQU   2                   GR06 SORT STATEMENT ENCOUNTERED        004900
MSRTREC  EQU   4                   GR06 RECORD STATEMENT ENCOUNTERED      004910
         SPACE 5                                                          004920
***********************************************************************   004930
$TOTLSW  DC    X'00'               TOTAL ( KEY-BREAK ) PROCESSING FLAGS   004940
***********************************************************************   004950
         SPACE 1                                                          004960
MTOTPCB  EQU   1                   'T' TYPE PCB'S EXIST                   004970
         SPACE 5                                                          004980
***********************************************************************   004990
$DETLSW  DC    X'00'               DETAIL-TIME PROCESSING FLAGS       *   005000
***********************************************************************   005010
         SPACE 1                                                          005020
MDET$1   EQU   1                   GR07 TEST RETURNED '$1' CONDITION      005030
MDET$2   EQU   2                   GR07 TEST RETURNED '$2' CONDITION      005040
MDETNAME EQU   4                   NAME FIELD EXISTS FOR DETAIL RECORD    005050
         SPACE 5                                                          005060
         DC    X'0000'             SPARE FIELDS FOR FUTURE SWITCHES       005070
         SPACE 3                                                          005080
         DS    0H                  ENSURE ALIGNMENT OF PATCH AREA         005090
         EJECT                                                            005100
***********************************************************************   005110
*        PATCH AREA                                                   *   005120
***********************************************************************   005130
         AIF   ('&DSECT' EQ 'NO').DSY04                                   005140
         USING CCBNTRY,13          ESTABLISH ADDRESSABILITY FOR S-TYPE    005150
.DSY04   ANOP                                                             005160
$PATCH   DC    S(*),S(*)                                                  005170
         DC    S(*),S(*)                                                  005180
         DC    S(*),S(*)                                                  005190
         DC    S(*),S(*)                                                  005200
         DC    S(*),S(*)                                                  005210
         DC    S(*),S(*)                                                  005220
         DC    S(*),S(*)                                                  005230
         DC    S(*),S(*)                                                  005240
         DC    S(*),S(*)                                                  005250
         DC    S(*),S(*)                                                  005260
         DC    S(*),S(*)                                                  005270
         DC    S(*),S(*)                                                  005280
         DC    S(*),S(*)                                                  005290
         DC    S(*),S(*)                                                  005300
         DC    S(*),S(*)                                                  005310
         DC    S(*),S(*)                                                  005320
         DC    S(*),S(*)                                                  005330
         DC    S(*),S(*)                                                  005340
         DC    S(*),S(*)                                                  005350
         DC    S(*),S(*)                                                  005360
         DC    S(*),S(*)                                                  005370
         DC    S(*),S(*)                                                  005380
         DC    S(*),S(*)                                                  005390
         DC    S(*),S(*)                                                  005400
         DC    S(*),S(*)                                                  005410
         DC    S(*),S(*)                                                  005420
         DC    S(*),S(*)                                                  005430
         DC    S(*),S(*)                                                  005440
         DC    S(*),S(*)                                                  005450
         DC    S(*),S(*)                                                  005460
         DC    S(*),S(*)                                                  005470
         DC    S(*),S(*)                                                  005480
         DC    S(*),S(*)                                                  005490
         DC    S(*),S(*)                                                  005500
         DC    S(*),S(*)                                                  005510
         DC    S(*),S(*)                                                  005520
         DC    S(*),S(*)                                                  005530
         DC    S(*),S(*)                                                  005540
         DC    S(*),S(*)                                                  005550
         DC    S(*),S(*)                                                  005560
         DC    S(*),S(*)                                                  005570
         DC    S(*),S(*)                                                  005580
         DC    S(*),S(*)                                                  005590
         DC    S(*),S(*)                                                  005600
         DC    S(*),S(*)                                                  005610
         DC    S(*),S(*)                                                  005620
         DC    S(*),S(*)                                                  005630
         DC    S(*),S(*)                                                  005640
         DC    S(*),S(*)                                                  005650
         DC    S(*),S(*)                                                  005660
         EJECT                                                            005670
***********************************************************************   005680
*        SPARE FIELDS                                                 *   005690
***********************************************************************   005700
         SPACE 1                                                          005710
*        THESE SPARE FIELDS ARE INTENDED TO ALLOW ADDITIONAL FIELDS       005720
*         TO BE ADDED TO THE CCB WITHOUT NECESSITATING A RECOMPILATION    005730
*         OF EVERY PARROT MODULE.  WHENEVER ALL THE MODULES ARE           005740
*         RECOMPILED, ANY FIELDS HEREIN SHOULD BE MOVED TO THE            005750
*         APPROPRIATE LOCATION IN THE CCB.                                005760
         SPACE 1                                                          005770
*        ( THIS EXPANSION AREA CONTAINS 40 FULLWORDS ).                   005780
         SPACE 1                                                          005790
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005800
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005810
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005820
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005830
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005840
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005850
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005860
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005870
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005880
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005890
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005900
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005910
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005920
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005930
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005940
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005950
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005960
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005970
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005980
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           005990
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006000
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006010
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006020
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006030
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006040
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006050
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006060
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006070
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006080
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006090
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006100
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006110
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006120
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006130
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006140
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006150
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006160
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006170
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006180
         DC    F'0'                SPARE TO ALLOW FOR EXPANSION           006190
         EJECT                                                            006200
***********************************************************************   006210
*        SPARE ROUTINE DESCRIPTORS                                    *   006220
***********************************************************************   006230
         SPACE 1                                                          006240
*        THESE ADDITIONAL ROUTINE DESCRIPTORS ARE INTENDED TO ALLOW       006250
*         ADDITIONAL CBAL'ABLE ROUTINES TO BE DEFINED WITHOUT             006260
*         NECESSITATING A RECOMPILATION OF EVERY PARROT MODULE.           006270
*        WHENEVER ALL THE MODULES ARE RECOMPILED, ANY ROUTINES DEFINED    006280
*         HEREUNDER SHOULD BE MOVED TO THEIR PROPER LOCATION IN THE CCB   006290
         SPACE 1                                                          006300
$ADRSRTN DS    0F                  ADDRESS OF 1ST ADDITIONAL RTN DESC     006310
$NUMSRTN DC    AL1(($SRTNEND-$SRTNSTR)/8) NO. OF ADDITIONAL RTNS          006320
         DC    AL3($SRTNSTR)       ADDRESS OF 1ST ADDITIONAL RTN DESC     006330
$SRTNSTR EQU   *                   START OF ADDITIONAL RTN DESCRIPTORS    006340
*        |                                                                006350
*        |                                                                006360
*        |                                                                006370
*        V                                                                006380
        RTNDEF CNVFREE             CONVERT FREE FORMAT DISPLAY NUMERIC    006390
        RTNDEF PARMINT             INITIASISE PARM PROCESSING             006400
**********                                                                006410
*        A                                                                006420
*        |                                                                006430
*        |                                                                006440
*        |                                                                006450
$SRTNEND EQU   *                   END OF ADDITIONAL RTN DESCRIPTORS      006460
         SPACE 5                                                          006470
CCBLGTH  EQU   *-CCBNTRY           LENGTH OF CCB                          006480
$CCBEND  EQU   *                   END OF CCB                             006490
         MEND                                                             006500
./ ADD NAME=ACE                                                           006510
         MACRO                                                            006520
&NAME    ACE   &DUMMY                                                     006530
***********************************************************************   006540
*        ACE - ARITHMETIC CALCULATION ELEMENT                         *   006550
***********************************************************************   006560
         SPACE 1                                                          006570
*        DEFINE A SINGLE ELEMENT OF A GR07 CALCULATION                    006580
         SPACE 1                                                          006590
ACENTRY  DSECT                                                            006600
ACEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               006610
ACEACE   DS    F                   ADDRESS OF NEXT ASSOCIATED ACE         006620
ACELIB   DS    F                   ADDRESS OF LIB OF FIELD TO BE PROC     006630
ACELABL  DS    CL2                 LABEL OF FIELD TO BE PROCESSED         006640
ACEOPCD  DS    CL1                 INTERNAL REPRESENTATION OF OPERATN     006650
ACESW    DS    CL1                 SWITCH BYTE                            006660
ACELGTH  EQU   *-ACENTRY           LENGTH OF DSECT                        006670
ACELIT   DS    CL8                 LITERAL VALUE IN FLOATING POINT FORM   006680
         SPACE 5                                                          006690
MACELIT  EQU   1                   DEFINES LITERAL VALUE                  006700
MACENEG  EQU   2                   MULTIPLY BY (-1) PRIOR TO USE          006710
         MEND                                                             006720
./ ADD NAME=CBPREFIX                                                      006730
         MACRO                                                            006740
&NAME CBPREFIX &DUMMY                                                     006750
***********************************************************************   006760
*        CONTROL BLOCK PREFIX DSECT                                   *   006770
***********************************************************************   006780
         SPACE 1                                                          006790
CBPREFIX DSECT                                                            006800
CBPRSW   DS    0CL1                SWITCH BYTE                            006810
CBPRCBPR DS    F                   ADDRESS OF NEXT C/B PREFIX IN CHAIN    006820
CBPRLEN  DS    H                   LENGTH OF C/B ( INCLUDING PREFIX )     006830
CBPRLABL DS    CL2                 LABEL OF ATTACHED CONTROL BLOCK        006840
*                                   E.G. LABEL FROM GR20 CARD.            006850
*                                   THIS FIELD IS INITIALISED IF THE      006860
*                                   'CBLABL=' OPERAND OF GETCB IS USED.   006870
CBPRCCNO DS    PL4                 SEQUENCE NO. OF ASSOCIATED C/C         006880
CBPRNAME DS    CL4                 EBCDIC CONTROL BLOCK IDENTIFIER        006890
CBPRLGTH EQU   *-CBPREFIX          LENGTH OF CONTROL BLOCK PREFIX         006900
         SPACE 5                                                          006910
***********************************************************************   006920
*        EQUATES FOR CBPRSW                                           *   006930
***********************************************************************   006940
         SPACE 1                                                          006950
MCBPGR13 EQU   1                   C/B SHOULD BE REFERENCED BY GR13       006960
MCBPREF  EQU   2                   C/B IS REFERENCED BY A GR13 CARD       006970
         MEND                                                             006980
./ ADD NAME=CSECTID                                                       006990
         MACRO                                                            007000
&NAME CSECTID  &DUMMY,&DSECT=YES,&ID=                                     007010
         AIF   ('&DSECT' EQ 'NO').A01                                     007020
***********************************************************************   007030
*        CSECT IDENTIFICATION PREFIX                                  *   007040
***********************************************************************   007050
         SPACE 1                                                          007060
CSECTID  DSECT                                                            007070
CSIDBOOT DS    CL16                BOOTSTRAP TEXT TO BRANCH TO PARROT     007080
*                                   ( TO ALLOW FOR USE OF THIS CSECT      007090
*                                   NAME AS AN ALIAS OF PARROT)           007100
CSIDNAME DS    CL8                 NAME OF THE CSECT ( 'PARROTXX' )       007110
CSIDVERS DC    CL8'VERS N.N'       VERSION NUMBER OF PARROT               007120
CSIDDATE DC    CL8'01JAN99'        DATE WHEN MODULE WAS ASSEMBLED         007130
CSIDTIME DC    CL8'HH.MM.SS'       TIME WHEN MODULE WAS ASSEMBLED         007140
CSIDLGTH EQU   *-CSECTID           LENGTH OF CSECT IDENTIFCIATION PREFX   007150
         SPACE 5                                                          007160
*        EVERY SUB-CSECT IN THE PARROT SUITE OF MODULES STARTS WITH       007170
*         THIS 32-BYTE PREFIX TO IDENTIFY THE MODULE FOR DEBUGGING        007180
*         PURPOSES.  ALSO, THE CCB ( CENTRAL CONTROL BLOCK ) IS           007190
*         IMMEDIATELY PRECEDED BY AN IDENTICAL PREFIX.                    007200
         MEXIT                                                            007210
.A01     ANOP                                                             007220
         AIF   ('&SYSECT' NE 'PARROT').A02                                007230
         DC    CL16'MONSANTO EUROPE'                                      007240
         AGO   .A03                                                       007250
.A02     ANOP                                                             007260
         L     R15,8(R15)          GET ADDRESS OF PRIMARY ENTRY POINT     007270
         BR    R15                 GO TO TRUE ENTRY POINT                 007280
         DC    V(PARROT)           ADDRESS OF PRIMARY ENTRY POINT         007290
         DS    0D                  ENSURE ALIGNMENT                       007300
.A03     ANOP                                                             007310
         DC    CL8'PARROT&ID'      CSECT NAME                             007320
         DC    C'VERS 3.0'         PARROT VERSION NUMBER                  007330
         DC    CL8'&SYSDATE'       DATE CSECT ASSEMBLED                   007340
         DC    CL8'&SYSTIME'       TIME CSECT ASSEMBLED                   007350
         MEND                                                             007360
./ ADD NAME=FDB                                                           007370
         MACRO                                                            007380
&NAME    FDB  &DUMMY                                                      007390
***********************************************************************   007400
*        FDB - FIELD DEFINITION BLOCK                                 *   007410
***********************************************************************   007420
         SPACE 1                                                          007430
*        DEFINE A SINGLE FIELD FROM A GR04/07 CAD                         007440
         SPACE 1                                                          007450
FDBNTRY  DSECT                                                            007460
FDBID    DS    0CL1                CONTROL BLOCK IDENTIFIER               007470
FDBFDB   DS    F                   ADDRESS OF NEXT FDB                    007480
FDBSCE   DS    F                   ADDRESS OF 1ST ASSOC SCE IF ANY        007490
FDBFSA   DS    F                   ADDRESS OF ASSOCIATED STORAGE AREA     007500
FDBLABL  DS    CL2                 FIELD LABEL                            007510
FDBFLDP  DS    H                   DISP OF FIELD IN RECORD                007520
FDBFLDL  DS    CL1                 LGTH OF FIELD                          007530
FDBFLDT  DS    CL1                 TYPE OF FIELD                          007540
FDBNDEC  DS    BL1                 NO OF ECIMAL PLACES IN INPUT FIELD     007550
FDBMKEYN DS    BL1                 KEY LEVEL UP TO WHICH VALUE IS MOVED   007560
*                                   AND NOT ACCUMULATED                   007570
FDBSW    DS    CL1                 SWITCH BYTE                            007580
FDBLGTH  EQU   *-FDBNTRY           LENGTH OF DSECT                        007590
         SPACE 5                                                          007600
MFDBINP  EQU   1                   FIELD IS EXTRACTED FROM RECORD         007610
MFDBSCAL EQU   2                   DEFINED FIELD IS A SCALAR              007620
MFDBCALC EQU   4                   FIELD VALUE COMES FROM CALCULATION     007630
MFDBMOVE EQU   8                   VALUE TO BE MOVED, ^ACCUMULATED, UP    007640
MFDBREF  EQU   16                  FDB HAS BEEN REFERENCED                007650
MFDBNZD  EQU   32                  DO NOT CLEAR DETAIL VALUE ON READ      007660
         SPACE 5                                                          007670
*        THE VALUE OF 'FDBFLDT' WILL BE ONE OF THE FOLLOWING:-            007680
FDBTCHAR EQU   CHAR                CHARCATER FIELD                        007690
FDBTNUM  EQU   NUM                 DISPLAY NUMERIC                        007700
FDBTPD   EQU   PD                  PACKED DECIMAL                         007710
FDBTHEX  EQU   HEX                 HEXADECIMAL STRING                     007720
FDBTBIN  EQU   BIN                 BINARY VALUE                           007730
         SPACE 5                                                          007740
*        FCB'S ARE CREATED TO DEFINE KEY AND NAME FIELDS.  THE 1ST BYTE   007750
*         OF THE NAME FIELD 'FDBFID' IS X'00' FOR A NAME, AND X'FF' FOR   007760
*         A KEY, WHILE THE 2ND BYTE IS THE KEY NUMBER.                    007770
         MEND                                                             007780
./ ADD NAME=FSA                                                           007790
         MACRO                                                            007800
&NAME    FSA  &DUMMY                                                      007810
***********************************************************************   007820
*        FSA - FIELD STORAGE AREA                                     *   007830
***********************************************************************   007840
         SPACE 1                                                          007850
*        THIS CONTROL BLOCK IS A STORAGE AREA FOR THE VALUE(S) OF A       007860
*         SINGLE FIELD.  FOR NON-NUMERIC FIELDS, IT IS A SINGLE AREA OF   007870
*         THE APPROPRITAE LENGTH, INITIALISED AT END OF RECORD            007880
*         PROCESSING.  FOR THE NUMERIC FIELDS, THERE IS A FLOATING        007890
*         POINT ACCUMULATOR FOR THE TOTAL FILE, FOR THE INDIVIDUAL        007900
*         RECORD, AND FOR EVERY KEY BREAK.                                007910
         SPACE 1                                                          007920
*        FSA'S ARE ALSO ACQUIRED TO STORE THE CURRENT AND NEXT KEY AND    007930
*         KEY-NAME VALUES.  IN EACH CASE, A DOUBLE-SIZE STORAGE AREA IS   007940
*         ACQUIRED, AND IS ADDRESSED BY THE KBD AS WELL AS THE LIB.       007950
*         NOT THAT, EVEN THOUGH THE KEY FIELD MAY BEA NUMERIC FIELD,      007960
*         NUMERIC ACCUMULATORS FOR EVERY KEY LEVEL ARE NOT ACQUIRED.      007970
         SPACE 1                                                          007980
*        THE LOGIC OF THE INTERNAL GETMAIN ROUTINE IS SUCH THAT CONTROL   007990
*         BLOCKS ARE NOT NECESSARILY DOUBLEWORD ALIGNED, ALTHOUGH THEY    008000
*         ARE ALWAYS FULLWORD ALIGNED.  TO PREVENT SYSTEM DEGREDATION     008010
*         IN THE EVENT OF NON-DOUBLEWORD ALIGNMENT, THE FLOATING POINT    008020
*         ACCUMULATORS ARE NEVER USED DIRECTLY WITH FLOATING POINT        008030
*         REGISTERS, BUT ARE MOVED TO/FROM INTERMEDIATE, ALIGNED WORK     008040
*         AREAS.                                                          008050
         SPACE 1                                                          008060
FSANTRY  DSECT                                                            008070
FSALABL  DS    CL2                 LABEL OF FIELD STORED HEREIN           008080
FSASW    DS    CL1                 SWITCH BYTE                            008090
         DS    CL1                 UNUSED                                 008100
FSALGTH  EQU   *-FSANTRY           LENGTH OF BASIC DSECT                  008110
FSASTORE DS    0CL1                START OF STORAGE AREA                  008120
FSACHAR  DS    0CL1                VARIABLE LENGTH CHARACTER FIELD        008130
FSAVALUS DS    0CL8                ACCUMULATOR FOR SCALAR VALUE           008140
FSAVALUR DS    CL8                 ACCUMULATOR FOR INDIVIDUAL RECORD      008150
FSASLGTH EQU   *-FSANTRY           LENFRG OF FSA FOR SCALAR VALUE         008160
FSAVALUT DS    CL8                 ACCUMULATOR FOR TOTAL FILE             008170
FSANLGTH EQU   *-FSANTRY           LENGTH OF MINIMUM NUMERIC FSA          008180
FSAVALU1 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 1            008190
FSAVALU2 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 2            008200
FSAVALU3 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 3            008210
FSAVALU4 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 4            008220
FSAVALU5 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 5            008230
FSAVALU6 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 6            008240
FSAVALU7 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 7            008250
FSAVALU8 DS    CL8                 ACCUMULATOR FOR KEY LEVEL 8            008260
         MEND                                                             008270
./ ADD NAME=ISD                                                           008280
         MACRO                                                            008290
&NAME    ISD  &DUMMY                                                      008300
***********************************************************************   008310
*        ISD - IS DATA FIELD DEFINITION                               *   008320
***********************************************************************   008330
         SPACE 1                                                          008340
*        DESCRIBE SINGLE FIELF TO BE RETRIEVED FROM ISAM RECORD           008350
         SPACE 1                                                          008360
ISDNTRY  DSECT                     DEFINE DATA TO BE EXTRACTED            008370
ISDID    DS    0CL1                CONTROL BLOCK IDENTIFIER               008380
ISDISD   DS    F                   ADDRESS OF NEXT ISD                    008390
ISDSPOS  DS    H                   POSN OF FIELD IN IS RECORD             008400
ISDSLEN  DS    CL1                 LGTH OF FIELD IN IS RECORD             008410
ISDSW    DS    CL1                 SWITCH BYTE                            008420
ISDDPOS  DS    H                   POSN OF FIELD IN DESTINATION           008430
ISDDLEN  DS    CL1                 LGTH OF FIELD IN DESTINATION           008440
ISDLGTH  EQU   *-ISDNTRY           LENGTH OF BASIC DSECT                  008450
ISDPADC  DS    0CL1                PAD CHARACTER IF RELEVANT              008460
ISDLIT   DS    CL20                DEFAULT LITERAL IF RELEVANT            008470
         SPACE 5                                                          008480
MISDPACK EQU   1                   PACK SOURCE BEFORE MOVE                008490
MISDUNP  EQU   2                   UNPACK SOURCE BEFORE MOVE              008500
MISDLIT  EQU   4                   USE DEFUALT LITERAL IF NO MATCH        008510
MISDPAD  EQU   8                   PAD DERIVED FIELD IF NO MATCH          008520
         MEND                                                             008530
./ ADD NAME=ISR                                                           008540
         MACRO                                                            008550
&NAME    ISR  &DUMMY                                                      008560
***********************************************************************   008570
*        ISR - INDEXED SEQUENTAL RETRIEVALD DEFINE FILE & KEY         *   008580
***********************************************************************   008590
         SPACE 1                                                          008600
*        DEFINE AN ISAM FILE AND KEY CONSTRUCTION                         008610
         SPACE 1                                                          008620
ISRNTRY  DSECT                     DEFINE KEY CONSTRUCTION                008630
ISRID    DS    0CL1                CONTROL BLOACK IDENTIFIER              008640
ISRISR   DS    F                   ADDRESS OF NEXT ISR                    008650
ISRTID   DS    CL2                 TEST ID ( LABEL )                      008660
         DS    CL2                 UNUSED                                 008670
ISRISD   DS    F                   ADDRESS OF UST ASSOC ISD               008680
ISRPOOL  DS    F                   ADDR OF LITERAL POOL OF KEY COMPONE    008690
ISRTKEY  DS    F                   ADDRESS OF CURRENT KEY                 008700
ISRLKEY  DS    F                   ADDRESS OF LAST KEY                    008710
ISRDCBSW DS    7F                  DCBSW FOR IS FILE                      008720
ISRSW    DS    CL1                 SWITCH BYTE                            008730
ISRKLEN  DS    CL1                 KEY LENGTH                             008740
ISRFLD1  DS    0CL4                1ST KEY COMPONENT DESCRIPTION          008750
ISRPOS1  DS    H                   POSN OF COMPONENT IN SOURCE            008760
ISRLEN1  DS    CL1                 LENGHT OF COMPONENT                    008770
ISRTYP1  DS    CL1                 NATURE OF COMPONENT ( L / S REC )      008780
ISRFLD2  DS    CL4                 AS ISRPOS1 - ISRTYP1                   008790
ISRFLD3  DS    CL4                 AS ISRPOS1 - ISRTYP1                   008800
ISRFLD4  DS    CL4                 AS ISRPOS1 - ISRTYP1                   008810
ISRFLD5  DS    CL4                 AS ISRPOS1 - ISRTYP1                   008820
ISRFLD6  DS    CL4                 AS ISRPOS1 - ISRTYP1                   008830
ISRLGTH  EQU   *-ISRNTRY           LENGTH OF DSECT                        008840
         MEND                                                             008850
./ ADD NAME=KBD                                                           008860
         MACRO                                                            008870
&NAME    KBD  &DUMMY                                                      008880
***********************************************************************   008890
*        KBD - KEY BREAK DEFINITION                                   *   008900
***********************************************************************   008910
         SPACE 1                                                          008920
*        DEFINE A SINGLE KEY FIELD FROM THE GR03 CARRDS                   008930
         SPACE 1                                                          008940
KBDNTRY  DSECT                                                            008950
KBDID    DS    0CL1                CONTROL BLOCK IDENTIFIER               008960
KBDKBD   DS    F                   ADDRESS OF NEXT (LOGICAL) KBD          008970
KBDLKBD  DS    F                   ADDRESS OF PREVIOUS KBD                008980
KBDKLIB  DS    F                   ADDRESS OF LIB FOR KEY FIELD           008990
KBDNLIB  DS    F                   ADDRESS OF LIB FOR NAME FIELD          009000
*                                                                         009010
*        THE FOLLOWING STORAGE AREAS ARE WITHIN THE FSA WHICH IS HUNG     009020
*         OFF THE APPROPRIATE LIB.                                        009030
*                                                                         009040
KBDCURRK DS    F                   ADDRESS OF STORE FOR CURRENT KEY VAL   009050
KBDNEXTK DS    F                   ADDRESS OF STORE OF NEXT KEY VALUE     009060
KBDCURRN DS    F                   ADDRESS OF STORE FOR CURRENT NAME      009070
KBDNEXTN DS    F                   ADDRESS OF STORE FOR NEXT NAME         009080
KBDKNUM  DS    H                   NUMBER OF THIS KEY                     009090
*BDKFLDP DS    H                   DISP OF KEY FIELD IN RECORD            009100
*BDKFLDL DS    CL1                 LGTH OF KEY FIELD                      009110
*BDKFLDT DS    CL1                 TYPE OF KEY FIELD                      009120
*BDNFLDP DS    H                   DISP OF NAME FIELD IN RECORD           009130
*BDNFLDL DS    CL1                 LGTH OF NAME FIELD                     009140
*BDNFLDT DS    CL1                 TYPE OF NAME FIELD (FORCED TO CHAR)    009150
KBDLABL  DS    CL2                 (OPTIONAL) LABEL OF KEY                009160
KBDDLABL DS    CL2                 GR04 LABEL FOR DEFERRED FLD DEF'N      009170
KBDRCNT  DS    PL4                 KEY-BREAK TO DATE RECORD COUNT         009180
KBDSW    DS    CL1                 SWITCH BYTE                            009190
KBDKEYNO DS    CL1                 EBCDIC KEY NO. ( 1 - 8 )               009200
KBDPSW   DS    CL1                 PROCESSING SWITCH BYTE                 009210
KBDSW2   DS    CL1                 SECOND SWITCH BYTE                     009220
KBDLGTH  EQU   *-KBDNTRY           LENGTH OF DSECT                        009230
         EJECT                                                            009240
***********************************************************************   009250
*        EQUATES FOR KBDSW         ( SWITCH BYTE )                    *   009260
***********************************************************************   009270
         SPACE 1                                                          009280
MKBDTOTL EQU   1                   KEY BREAK IS TOTAL BREAK               009290
MKBDPSKP EQU   2                   PAGE SKIP ON KEY BREAK                 009300
MKBD2080 EQU   4                   MAKE 20/80 SUB-ANALYSIS                009310
MKBDCURR EQU   8                   THIS KEY TRIGGERED CURRENT BREAK       009320
MKBDNAME EQU   16                  NAME FIELD DEFINITION SUPPLIED         009330
MKBDDEF  EQU   32                  FIELD DEFINITION DEFERRED TO GR04      009340
MKBDGR12 EQU   64                  GR12'S EXIST FOR THIS KEY              009350
MKBDPCB  EQU   128                 PCB'S EXIST FOR THIS SPECIFIC KEY      009360
         SPACE 5                                                          009370
***********************************************************************   009380
*        EQUATES FOR KBDSW2        ( SECOND SWITCH BYTE )             *   009390
***********************************************************************   009400
         SPACE 1                                                          009410
MKBDNKEY EQU   1                   FLAG THAT KBD DOES NOT DEFINE A KEY    009420
         SPACE 5                                                          009430
***********************************************************************   009440
*        EQUATES FOR KBDPSW        ( PROCESSING SWITCH BYTE )         *   009450
***********************************************************************   009460
         SPACE 1                                                          009470
MKBD$1   EQU   1                   A TEST HAS TRIGGERED '$1' PROCESSING   009480
MKBD$2   EQU   2                   A TEST HAS TRIGGERED '$2' PROCESSING   009490
MKBDRPC  EQU   4                   RESET PAGE COUNTER ON CHANGE OF KEY    009500
         MEND                                                             009510
./ ADD NAME=LCD                                                           009520
         MACRO                                                            009530
&NAME    LCD   &DUMMY                                                     009540
***********************************************************************   009550
*        LCD - LINE COMPONENT DESCRIPTION                             *   009560
***********************************************************************   009570
         SPACE 1                                                          009580
*        DEFINE A SINGLE FIELD IN AN OUTPUT RECORD                        009590
         SPACE 1                                                          009600
LCDNTRY  DSECT                                                            009610
LCDID    DS    0CL1                CONTROL BLOCK IDENTIFIER               009620
LCDLCD   DS    F                   ADDRESS OF NEXTLCD                     009630
LCDOCB   DS    F                   ADDRESS OF ASSOCIATED OCB              009640
LCDSCE   DS    F                   ADDRESS OF ASSOC SCE IF ANY            009650
LCDKBD   DS    F                   ADDRESS OF ASSOC KBD IF KEY,NAME,CNT   009660
LCDLIB   DS    F                   ADDRESS OF LABEL IDENTIFICATION BLCK   009670
LCDFLDP  DS    H                   DISP OF FIELD IN OUTPUT RECORD         009680
LCDFLDL  DS    CL1                 LGTH OF FIELD IN OUTPUT RECORD         009690
LCDFLDF  DS    CL1                 FORMAT OF OUTPUT FIELD                 009700
LCDNDEC  DS    BL1                 NO OF DECIMAL PLACES REQUIRED          009710
LCDLINE  DS    CL1                 FBM EQUIVALENT OF 'LINE+' REQUEST      009720
LCDIOLB  DS    CL2                 LABEL OF ASSOCIATED GR00 (DD DEF'N)    009730
LCDLABL  DS    CL2                 LABEL OF FIELD TO BE PRINTED           009740
*                                   ... OR INTERNAL REP'N OF NAMEN ETC    009750
LCDKEYN  DS    BL1                 KEY LEVEL TO WHICH APPLIES (TOTALS)    009760
LCDSW    DS    CL1                 SWITCH BYTE                            009770
LCDSW2   DS    CL1                 2ND SWITCH BYTE                        009780
LCDLGTH  EQU   *-LCDNTRY           LENGTH OF DSECT                        009790
LCDLIT   DS    0CL1                VARIABLE LENGTH LITERAL                009800
*CDBLST  DS    0CL1                STORE OF LAST VALUE PRINTED (BL ONLY   009810
*                                   NOTE: THIS FIELD FOLLOWS THE          009820
*                                   VARIABLE LENGTH LITERAL AND CANNOT    009830
*                                   BE DIRECTLY ADDRESSED.                009840
         SPACE 3                                                          009850
*        EQUATES FOR LCDSW                                                009860
         SPACE 1                                                          009870
MLCDBL   EQU   1                   SUPPRESS VALUE IF SAME AS LAST LINE    009880
MLCDZZ   EQU   2                   PRINT VALUE EVEN IF ZERO               009890
MLCDPRNT EQU   4                   THIS IS A 'LINE+' REQUEST              009900
MLCDLIT  EQU   8                   LCD DEFINES AND CONTAINS LITERAL       009910
MLCDCNT  EQU   16                  LCD DEFINES REQUEST FOR RECORD COUNT   009920
MLCDGR11 EQU   32                  GR12 'GR11' REQUEST: USE DETAIL LCDS   009930
MLCDKEYN EQU   64                  KEY NUMBER SUPPLIED TO RESTRICT PROC   009940
MLCDBSIC EQU   128                 GENERATE BASIC PARROT REPORT FORMAT    009950
         SPACE 3                                                          009960
*        EQUATES FOR LCDSW2                                               009970
         SPACE 1                                                          009980
MLCDDETL EQU   1                   ALWAYS USE DETAIL VALUE OF ACCUM       009990
MLCDOLAY EQU   2                   THIS FIELD OVERLAYED ANOTHER NON-BL    010000
MLCDELET EQU   4                   LCD IS A GR12N DELETE SPECIFICATION    010010
         EJECT                                                            010020
***********************************************************************   010030
*        EQUATES FOR LCDFLDF - FORMAT OF OUTPUT FIELD                 *   010040
***********************************************************************   010050
         SPACE 1                                                          010060
FLCDCHAR EQU   1                   ALPHAMERIC, LEFT-ALIGNED               010070
FLCDHEX  EQU   2                   HEXADECIMAL, LEFT-ALIGNED              010080
FLCDBIT  EQU   3                   BIT STRING, LEFT-ALIGNED               010090
FLCDNUM9 EQU   4                   UNEDITED NUMERIC WITH LEADING ZEROES   010100
FLCDNUMZ EQU   5                   UNEDITED NUMERIC WITH LEADING BLANKS   010110
FLCDNUME EQU   6                   EDITED NUMERIC                         010120
FLCDNUM$ EQU   7                   EDITED NUMERIC WITH FLOATING DOLLAR    010130
FLCDPD   EQU   8                   PACKED DECIMAL                         010140
FLCDBIN  EQU   9                   BINARY                                 010150
FLCDDISP EQU   10                  DISPLAY SIGNED NUMERIC                 010160
FLCDFP   EQU   11                  FLOATING POINT                         010170
         SPACE 5                                                          010180
***********************************************************************   010190
*        TECHNIQUE FOR ESTABLISHING ADDRESSABILITY TO LCDBLST         *   010200
***********************************************************************   010210
         SPACE 1                                                          010220
*        SR    R15,R15             ZEROISE WORK REGISTER                  010230
*        IC    R15,LCDFLDL         OBTAIN LENGTH OF LITERAL ( IF ANY )    010240
*        LA    R1,LCDLIT           POINT REG 1 AT START OF LITERAL        010250
*        TM    LCDSW,MLCDLIT       DETERMINE IF THERE IS A LITERAL VALU   010260
*        BZ    *+8                 BR IF NO LITERAL IS PRESENT            010270
*        LA    R1,1(R15,R1)        STEP OVER LITERAL TO 'BL' STORE        010280
         MEND                                                             010290
./ ADD NAME=LIB                                                           010300
         MACRO                                                            010310
&NAME    LIB   &DUMMY                                                     010320
***********************************************************************   010330
*        LIB - LABEL IDENTIFICATION BLOCK                             *   010340
***********************************************************************   010350
         SPACE 1                                                          010360
LIBNTRY  DSECT                                                            010370
LIBID    DS    0CL1                CONTROL BLOCK IDENTIFIER               010380
LIBLIB   DS    F                   ADDRESS OF NEXT LIB                    010390
LIBFDB   DS    F                   ADDRESS OF 1ST ASSOCIATED FDB          010400
LIBFSA   DS    F                   ADDRESS OF ASSOC FIELD STORAGE AREA    010410
LIBLABL  DS    CL2                 FIELD LABEL                            010420
LIBFLDL  DS    CL1                 LENGTH OF FIELD DEFINED IN FDB(S)      010430
LIBFLDT  DS    CL1                 INTERNAL REPRESENTATION OF FLD TYPE    010440
LIBTYPE  DS    CL1                 TYPE OF LABEL (KEY, NAME, ETC)         010450
LIBMKEYN DS    BL1                 KEY LEVEL UP TO WHICH VALS BE MOVED    010460
LIBSW    DS    CL1                 SWITCH BYTE                            010470
LIBLGTH  EQU   *-LIBNTRY           LENGTH OF DSECT                        010480
         SPACE 5                                                          010490
MLIBMOVE EQU   1                   VALUE TO BE MOVED, ^ACCUMULATED, UP    010500
MLIBNZD  EQU   2                   DO NOT CLEAR DETAIL VALUE ON READ      010510
MLIBNROL EQU   4                   VALUES NOT TO BE ROLLED UPWARDS        010520
MLIBEXT  EQU   8                   VALUE EXTRACTED FROM CURRENT RECORD    010530
MLIBDKEY EQU   16                  GR04 FLD DEFINES DEFERRED KEY          010540
*                                   (I.E. SELECTION CRITERIA SATISFIED)   010550
         SPACE 5                                                          010560
***********************************************************************   010570
*        EQUATES FOR LIBTYPE ( TYPE OF LABEL - KEY, NAME, ETC. )      *   010580
***********************************************************************   010590
         SPACE 1                                                          010600
LIBTKEY  EQU   1                   LIB DEFINES KEY FIELD                  010610
LIBTNAME EQU   2                   LIB DEFINES NAME FIELD                 010620
LIBTCHAR EQU   4                   LIB DEFINES A NON-NUMERIC FIELD        010630
LIBTNUM  EQU   8                   LIB DEFINES A NUMERIC FIELD            010640
LIBTACUM EQU   16                  LIB DEFINES A ( GR07 ) ACCUMULATOR     010650
LIBTSCAL EQU   32                  LIB DEFINES A SCALAR                   010660
LIBTDETN EQU   64                  LIB DEFINES NAME9 (GR05) NAME FIELD    010670
         MEND                                                             010680
./ ADD NAME=PCB                                                           010690
         MACRO                                                            010700
&NAME    PCB   &DUMMY                                                     010710
***********************************************************************   010720
*        PCB - PROCESSING CONTROL BLOCK                               *   010730
***********************************************************************   010740
         SPACE 1                                                          010750
*        DEFINE A GR07 / GR13 STATEMENT                                   010760
         SPACE 1                                                          010770
PCBNTRY  DSECT                                                            010780
PCBID    DS    0CL1                CONTROL BLOCK IDENTIFIER               010790
PCBPCB   DS    F                   ADDRESS OF NEXT PDB                    010800
PCBNPCB  DS    F                   ADDRESS OF PCB TO WHICH TO GO NEXT     010810
*                                  (NORMALLY THE SAME AS 'PCBPCB', BUT    010820
*                                  BRANCHES & SUB-ROUTINES MAY ALTER)     010830
PCBLIB   DS    F                   ADDRESS OF LIB OF RESULT FIELD         010840
PCBSCE   DS    F                   ADDRESS OF 1ST SCE IN CHAIN            010850
PCBPTE   DS    0F                  ADDRESS OF 1ST ASSOCIATED PTE          010860
PCBACE   DS    0F                  ADDRESS OF 1ST ASSOCIATED ACE          010870
PCBCB    DS    F                   ADDRESS OF 1ST ASSOCIATED CONTROL BL   010880
PCBIND   DS    0CL3                INDICATOR SPECIFICATION                010890
PCBINDD  DS    H                   DISPLACEMENT OF INDICATOR BYTE         010900
PCBINDM  DS    CL1                 BIT MASK FOR APPROPRIATE INDICATOR     010910
PCBOPCD  DS    CL2                 OPERATION CODE ( FROM GR13 )           010920
PCBOPCM  DS    CL1                 OPERATION CODE MODIFIER (FROM GR13)    010930
PCBFUNC  DS    CL1                 INTERNAL REPRESENTATION OF OP-CODE     010940
PCBLABL  DS    CL2                 LABEL OF GR07 STATEMENT (RESULT FLD)   010950
*                                  OR LABEL OF ASSOCIATED CBXX C/B        010960
PCBTYPE  DS    CL1                 PROCESSING TYPE                        010970
*                                  ( A,B,C,D,E,T,Z,0-8 )                  010980
PCBCBID  DS    CL1                 C/B IDENTIFIER OF ASSOCIATED C/B       010990
PCBSW    DS    CL1                 SWITCH BYTE                            011000
PCBLGTH  EQU   *-PCBNTRY           LENGTH OF BASIC DSECT                  011010
PCBLIT   DS    CL11                LITERAL VALUE ( FROM GR13 CARD )       011020
         SPACE 5                                                          011030
MPCBTEST EQU   1                   PCB DEFINES A TEST                     011040
MPCBCALC EQU   2                   PCB DEFINES AN ARITHMETIC CALCULATIO   011050
MPCBFUNC EQU   4                   PCB DEFINES A SPECIAL FUCTION          011060
MPCBLIT  EQU   8                   PCB CONTAINS LITERAL VALUE             011070
MPCBCBXX EQU   16                  PCB HAS ASSOCIATED CBXX C/B            011080
MPCBIND  EQU   32                  INDICATOR SPECIFICATION EXISTS         011090
         MEND                                                             011100
./ ADD NAME=PTE                                                           011110
         MACRO                                                            011120
&NAME    PTE   &DUMMY                                                     011130
***********************************************************************   011140
*        PTE - PROCESSING TEST ELEMENT                                *   011150
***********************************************************************   011160
         SPACE 1                                                          011170
*        DEFINE A GR/M 'TEST'                                             011180
         SPACE 1                                                          011190
PTENTRY  DSECT                                                            011200
PTEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               011210
PTEPCB   DS    F                   ADDRESS OF PCB TO WHICH TO PASS CONT   011220
*                                   IF THIS TEST IS SATISFIED             011230
PTELIBT  DS    F                   ADDRESS OF LIB OF FIELD BEING TESTED   011240
PTELIBC  DS    F                   ADDRESS OF LIB OF COMPARAND            011250
PTE$LACE DS    F                   ADDRESS OF ACE CONTAINING $L VALUE     011260
PTECCNO  DS    CL2                 CONTROL CARD SEQ NO                    011270
PTELABLT DS    CL2                 LABEL OF FIELD BEONG TSTED             011280
PTELABLC DS    CL2                 LABEL OF COMAPRAND                     011290
PTELABLD DS    CL2                 LABEL OF GR07 TO WHICH TO BRANCH       011300
PTECTYPE DS    CL1                 INTERNAL REPRESENTATION OF TEST TYP    011310
PTESW    DS    CL1                 SWITCH BYTE                            011320
PTELGTH  EQU   *-PTENTRY           LENGTH OF DSECT                        011330
         SPACE 5                                                          011340
MPTE$1   EQU   1                   PERFORM FUNCTION '$1' IF TEST GOOD     011350
MPTE$2   EQU   2                   PERFORM FUNCTION '$2' IF TEST GOOD     011360
MPTE$K1  EQU   4                   FIELD 1 ( TEST FLD ) SPECIFIES $K      011370
MPTE$K2  EQU   8                   FIELD 2 ( COMPARAND ) SPECIFIES $K     011380
MPTE$L1  EQU   16                  FIELD 1 SECIFIES '$L' LITERAL          011390
MPTE$L2  EQU   32                  FIELD 2 SECIFIES '$L' LITERAL          011400
         MEND                                                             011410
./ ADD NAME=RAE                                                           011420
         MACRO                                                            011430
&NAME    RAE   &DUMMY                                                     011440
***********************************************************************   011450
*        RAE - RANGE ANALYSIS ELEMENT                                 *   011460
***********************************************************************   011470
         SPACE 1                                                          011480
*        ACCCUMULATORS FOR A SINGLE RANGE VALUE                           011490
         SPACE 1                                                          011500
RAENTRY  DSECT                                                            011510
RAEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               011520
RAERAE   DS    F                   ADDRESS OF NEXTRAE                     011530
RAESW    DS    CL1                 SWITCH BYTE                            011540
RAERVAL  DS    CL8            (FP) UPPER RANGE LIMIT                      011550
RAETNO   DS    PL4                 NO OF ENTRIES FROM TOTAL FILE          011560
RAETVAL  DS    CL8            (FP) ACCUMULATED TOTAL FOR FILE             011570
RAELGTH  EQU   *-RAENTRY           LENGTH OF BASIC DSECT                  011580
RAEKNO   DS    PL4                 NO OF ENTRIES FOR MAJOR KEY            011590
RAEKVAL  DS    CL8            (FP) ACCUMULATED VALUE FOR MAJOR KEY        011600
RAESLGTH EQU   *-RAENTRY           LENGTH OF RAE WITH SUBANAL FIELDS      011610
         SPACE 5                                                          011620
MRAELOW  EQU   1                   THIS RAE ACCUMULATES BELOW BOTTOM      011630
MRAEHIGH EQU   2                   THIS RAE ACCUMULATES ABOVE TOP         011640
         MEND                                                             011650
./ ADD NAME=RST                                                           011660
         MACRO                                                            011670
&NAME    RST   &DUMMY                                                     011680
***********************************************************************   011690
*        RST - RECORD SELECTION TEST                                  *   011700
**********************************************************************    011710
         SPACE 1                                                          011720
RSTNTRY  DSECT                                                            011730
RSTID    DS    0CL1                CONTROL BLOCK IDENTIFIER               011740
RSTRST   DS    F                   ADDRESS OF NEXT RST                    011750
RSTSCE   DS    F                   ADDRESS OF 1ST ASSOC SCE               011760
RSTRCNT  DS    PL4                 NO OF RECORDS SELECTED BY THIS TEST    011770
RSTSW    DS    CL1                 SWITCH BYTE                            011780
RSTLGTH  EQU   *-RSTNTRY           LENGTH OF DSECT                        011790
         SPACE 5                                                          011800
MRSTDEL  EQU   1                   REJECT RECORD IF ALL TESTS SATISFIED   011810
         MEND                                                             011820
./  ADD NAME=RTNDES                                                       011830
         MACRO                                                            011840
&NAME  RTNDES  &DUMMY                                                     011850
***********************************************************************   011860
*        RTNDES - CBAL ROUTINE DESCRIPTOR                             *   011870
***********************************************************************   011880
         SPACE 1                                                          011890
*        DEFINES A ROUTINE THAT IS INVOKED BY CBAL.                       011900
         SPACE 1                                                          011910
RTNDNTRY DSECT                                                            011920
RTNDFLAG DS    0CL1                FLAG BYTE                              011930
RTNDADDR DS    F                   ADDRESS OF ROUTINE                     011940
RTNDINDX DS    CL1                 INDEX OF ASSOCIATED CSECT DESCRIPTOR   011950
RTNDSR12 DS    CL3                 SAVE AREA FOR CURRENT SUBCSECT BASE    011960
RTNDLGTH EQU   *-RTNDNTRY          LENGTH OF ROUTINE DESCRIPTOR           011970
         SPACE 5                                                          011980
*        EQUATES FOR RTNDFLAG - FLAG BYTE                                 011990
         SPACE 1                                                          012000
RTNFBRTN EQU   1                   RTN ADDRESS HAS NO KNOWN CSECT         012010
RTNFCBAL EQU   2                   RTN NULLIFIED BUT INVOKED BY CBAL      012020
         MEND                                                             012030
./  ADD NAME=SCE                                                          012040
         MACRO                                                            012050
&NAME    SCE   &DUMMY                                                     012060
***********************************************************************   012070
*        SCE - SELECTION CRITERION ELEMENT                            *   012080
***********************************************************************   012090
         SPACE 1                                                          012100
*        DEFINES A SINGLE TEST AGAINST A LITERAL VALUE FOR CONDIOTIONLY   012110
*         PROCESSING GR02/04/10/11/12 CARDS AT EXECUTION TIME             012120
         SPACE 1                                                          012130
SCENTRY  DSECT                                                            012140
SCEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               012150
SCESCE   DS    F                   ADDRESS OF NXT ASSOCIATED SCE          012160
SCELIB   DS    F                   ADDR OF LIB FROM WHICH TO DERIVE FLD   012170
SCEFLDP  DS    H                   DISP OF FIELD TO BE TESTED             012180
SCEFLDL  DS    CL1                 LGTH OF FIELD TO BE TESTED             012190
SCEFLDT  DS    CL1                 FIELD TYPE                             012200
SCECTYPE DS    CL1                 INTERNAL REPRESENTAION OF COMPARE TY   012210
SCEDLABL DS    CL2                 LABEL OF LIB (FOR DEFERRED DEF'N)      012220
SCESW    DS    CL1                 SWITCH BYTE                            012230
         DS    CL1                 UNUSED                                 012240
SCELITL  DS    CL1                 LENGTH OF LITERAL                      012250
         DS    0F                  ENSURE ALIGNMENT LEST BINARY LITERAL   012260
SCELGTH  EQU   *-SCENTRY           LENGTH OF DSECT                        012270
SCELIT   DS    CL1                 LITERAL COMPARAND (VARIABLE LENGTH)    012280
         SPACE 5                                                          012290
MSCEPCKD EQU   1                   TEST & COMPARAND ARE PACKED DECIMAL    012300
MSCELIB  EQU   2                   DERIVE FIELD TO TEST FROM LIB          012310
MSCERECL EQU   4                   COMPARE COMPARAND WITH CURRENT LRECL   012320
         SPACE 5                                                          012330
*        THE VALUE OF 'SCEFLDT' WILL BE ONE OF THE FOLLOWING:-            012340
SCEFCHAR EQU   CHAR                CHARACTER                              012350
SCEFNUM  EQU   NUM                 UNPACKED NUMERIC                       012360
SCEFPD   EQU   PD                  PACKED DECIMAL                         012370
SCEFHEX  EQU   HEX                 HEXADECIMAL CONSTANT                   012380
SCEFBIT  EQU   BIT                 BIT STRING                             012390
SCEFMASK EQU   MASK                PARTIAL ( CHACRACTER ) MAK             012400
SCEBIN   EQU   BIN                 BINARY VALUE                           012410
*        THESE VALUES ARE MULTIPLIED BY 4 AND ARE USED IN AN INDEXED      012420
*         BRANCH INSTRUCTION TO GO DIRECTLY TO THE APPROPRIATE            012430
*         PROCESSING ROUTINE                                              012440
         MEND                                                             012450
./ ADD NAME=SPD                                                           012460
         MACRO                                                            012470
&NAME    SPD   &DUMMY                                                     012480
***********************************************************************   012490
*        SPD - STORAGE POOL DEFINITION                                *   012500
***********************************************************************   012510
         SPACE 1                                                          012520
*        DEFINES AN AREA OF CORE ( EITHER ACQUIRED BY GETMAIN, OR         012530
*         CONSISTING OF A REDUNDANT CSECT ) AVAILABLE TO THE INTERNAL     012540
*         GETMAIN AND WORKFILE ROUTINES                                   012550
         SPACE 1                                                          012560
SPDNTRY  DSECT                                                            012570
SPDSW    DS    0CL1                SWITCH BYTE                            012580
SPDAPOOL DS    F                   ADDRESS OF STORAGE POOL                012590
SPDSPOOL DS    F                   SIZE OF STORAGE POOL                   012600
SPDLGTH  EQU   *-SPDNTRY           LENGTH OF DSECT                        012610
         SPACE 5                                                          012620
MSPDUSE  EQU   1                   STORAGE POOL AVAILABLE FOR USE         012630
MSPDWF   EQU   2                   STORAGE POOL BEING USED BY WORK FILE   012640
MSPDGETM EQU   4                   STORAGE POOL MUST BE ACQUIRED BY GET   012650
MSPDPFRE EQU   8                   STORAGE POOL MAY BE FREEMAINED         012660
MSPDFREE EQU   16                  STORAGE POOL HAS BEEN FREEMAINED       012670
MSPDCSCT EQU   32                  STORAGE POOL DEFINES A CSECT           012680
         MEND                                                             012690
./ ADD NAME=EQUATES                                                       012700
         MACRO                                                            012710
&NAME    EQUATES &DUMMY                                                   012720
***********************************************************************   012730
*        REGISTER EQUATES AND USAGE                                   *   012740
***********************************************************************   012750
         SPACE 1                                                          012760
R0       EQU   0                                                          012770
R1       EQU   1                   GP WORK REGISTER                       012780
R2       EQU   2                   GP WORK REGISTER                       012790
R3       EQU   3                   GP WORK REGISTER                       012800
R4       EQU   4                   BAL/CBAL RETURN ADDRESS                012810
R5       EQU   5                   SYSPRINT / PRINT BUFFER ADDRESS        012820
R6       EQU   6                   SYSIN/SYSUT1 BUFFER POINTER            012830
R7       EQU   7                   GP BUFFER POINTER                      012840
R8       EQU   8                   GP FIELD POINTER                       012850
R9       EQU   9                   GENERAL PURPOSE WORK REGISTER          012860
R10      EQU   10                  GP C/B BASE REGISTER                   012870
R11      EQU   11                  SECOND BASE REGISTER FOR 'PARROT'      012880
R12      EQU   12                  SUB-CSECT BASE REGISTER                012890
R13      EQU   13                  CCB PTR / SAVE AREA PTR / BASE REGIS   012900
R14      EQU   14                  BALR RETURN ADDRESS                    012910
R15      EQU   15                  BALR ROUTINE ADDRSS / EXECUTE REG      012920
         SPACE 5                                                          012930
FPR0     EQU   0                   FLOATING POINT REGISTER 0              012940
FPR2     EQU   2                   FLOATING POINT REGISTER 2              012950
FPR4     EQU   4                   FLOATING POINT REGISTER 4              012960
FPR6     EQU   6                   FLOATING POINT REGISTER 6              012970
         EJECT                                                            012980
***********************************************************************   012990
*        DCBSW EQUATES ( FOR IOM MACRO )                              *   013000
***********************************************************************   013010
         SPACE 1                                                          013020
         IOM   EQUATES,10,AUTOPEN=NO EQUATES FOR IOM                      013030
         EJECT                                                            013040
***********************************************************************   013050
*        EQUATES FOR HALT INIDCATORS                                  *   013060
***********************************************************************   013070
         SPACE 1                                                          013080
$HINDH0  EQU   X'08'               HALT INDICATOR H0                      013090
$HINDH1  EQU   X'04'               HALT INDICATOR H1                      013100
$HINDH2  EQU   X'02'               HALT INDICATOR H2                      013110
$HINDH3  EQU   X'01'               HALT INDICATOR H3                      013120
         EJECT                                                            013130
***********************************************************************   013140
*        MISCELLANEOUS EQUATES                                        *   013150
***********************************************************************   013160
         SPACE 1                                                          013170
KEY      EQU   X'01'               INTERNAL REPRESENTATION OF 'KEY'       013180
NAME     EQU   X'02'               INTERNAL REPRESENTATION OF 'NAME'      013190
CNT      EQU   X'03'               INTERNAL REPRESENTATION OF 'CNT'       013200
FF       EQU   255                 ALL-1 MASK                             013210
OO       EQU   0                   ALL-0 MASK                             013220
F0       EQU   X'F0'               MASK WITH ALL-1 IN HIGH ORDER 4 BITS   013230
OF       EQU   X'0F'               MASK WITH ALL-1 IN LOW ORDER 4 BITS    013240
CSIGN    EQU   X'03'               DETECT SIGN X'C' & CONVERT TO X'F'     013250
SPCE0AFT EQU   X'01'               WRITE WITHOUT SACING                   013260
SPCE1AFT EQU   X'09'               SPACE 1 AFTER PRINTING                 013270
SPCE2AFT EQU   X'11'               SPACE 2 AFTER PRINTING                 013280
SPCE3AFT EQU   X'19'               SPACE 3 AFTER PRINTING                 013290
PAGESKIP EQU   X'8B'               SKIP TO NEW PAGE                       013300
SPCE1NPR EQU   X'0B'               SPACE 1: NO PRINT                      013310
SPCE2NPR EQU   X'13'               SPACE 2: NO PRINT                      013320
SPCE3NPR EQU   X'1B'               SPACE 3: NO PRINT                      013330
NULLPL   EQU   128                 PL IS NULLIFIED ( EMPTY )              013340
NULLCB   EQU   X'7F'               C/B IS NULLIFIED ( DUE TO ERRORS )     013350
REFCB    EQU   X'5C'               LIB HAS BEEN REFERENCED                013360
W        EQU   X'96'               EQUATE USED TO SET COND CODE LOW       013370
X        EQU   X'95'               EQUATE USED TO SET COND CODE EQUAL     013380
Y        EQU   X'94'               EQUATE USED TO SET COND CODE HIGH      013390
*                                   E.G.     CLI   FLD,Y                  013400
*                                            CLI   *,Y                    013410
         EJECT                                                            013420
***********************************************************************   013430
*        EQUATES USED TO ESTABLISH INDEXED BRANCHES AFTER A TEST      *   013440
***********************************************************************   013450
         SPACE 1                                                          013460
EQ       EQU   1                   INTERNAL REPRESENTATION OF 'EQ'        013470
NE       EQU   2                   INTERNAL REPRESENTATION OF 'NE'        013480
GT       EQU   3                   INTERNAL REPRESENTATION OF 'GT'        013490
GE       EQU   4                   INTERNAL REPRESENTATION OF 'GE'        013500
LT       EQU   5                   INTERNAL REPRESENTATION OF 'LT'        013510
LE       EQU   6                   INTERNAL REPRESENTATION OF 'LE'        013520
ON       EQU   7                   INTERNAL REPRESENTATION OF 'ON'        013530
OFF      EQU   8                   INTERNAL REPRESENTATION OF OFF         013540
         SPACE 5                                                          013550
***********************************************************************   013560
*        INTERNAL REPRESENTATION OF ARITHMETIC OPERATIONS             *   013570
***********************************************************************   013580
         SPACE 1                                                          013590
ADD      EQU   1                   INTERNAL REPRESENTATION OF ADD         013600
SUBTRACT EQU   2                   INTERNAL REPRESENTATION OF SUBTRACT    013610
MULTIPLY EQU   3                   INTERNAL REPRESENTATION OF MULTIPLY    013620
DIVIDE   EQU   4                   INTERNAL REPRESENTATION OF DIVIDE      013630
EXPONENT EQU   5                   INTERNAL REPRESENTATION OF EXPONENTI   013640
         EJECT                                                            013650
***********************************************************************   013660
*        EQUATES FOR FIELD TYPES ( USED FOR INDEXED BRANCHES )        *   013670
***********************************************************************   013680
         SPACE 1                                                          013690
CHAR     EQU   1                   CHARACTER                              013700
NUM      EQU   2                   DISPLAY NUMERIC                        013710
PD       EQU   3                   PACKED DECIMAL                         013720
HEX      EQU   4                   HEXADECIMAL STRING                     013730
BIT      EQU   5                   BIT STRING                             013740
MASK     EQU   6                   PARTIAL MASK                           013750
BIN      EQU   7                   BINARY VALUE                           013760
FLOAT    EQU   8                   FLOATING POINT NUMBER                  013770
STRING   EQU   9                   CHAR STRING TO OCCUR WITHIN FIELD      013780
IND      EQU   10                  INDICATOR                              013790
FREEFORM EQU   11                  FREE FORMAT DISPLAY NUMERIC            013800
*        EQU   12                  RESERVED FOR FUTURE USE                013810
         SPACE 5                                                          013820
***********************************************************************   013830
*        EQUATES FOR INTERNAL SORT PROCESSING                         *   013840
***********************************************************************   013850
         SPACE 1                                                          013860
DELETE   EQU   4                   DELETE CURRENT RECORD                  013870
NORETURN EQU   8                   DO NOT RETURN TO THIS EXIT             013880
INSERT   EQU   12                  INSERT CURRENT RECORD                  013890
         EJECT                                                            013900
***********************************************************************   013910
*        CONTROL BLOCK IDENTIFIERS                                    *   013920
***********************************************************************   013930
         SPACE 1                                                          013940
FLAGACE  EQU   1                   ARITHMETIC CALCULATION ELEMENT         013950
FLAGCCE  EQU   20                  CURRENCY CONVERSION ELEMENT            013960
FLAGDCE  EQU   19                  DATE CONVERSION ELEMENT                013970
FLAGFDB  EQU   2                   FIELD DEFINITION BLOCK                 013980
FLAGHDG  EQU   14                  HEADING LINE STORAGE AREA              013990
FLAGISD  EQU   3                   IS DATA FIELF DEFINITION               014000
FLAGISR  EQU   4                   IS FILE KEY DEFINITION                 014010
FLAGJCL  EQU   16                  JCL STATEMENT                          014020
FLAGKBD  EQU   5                   KET BREAK DEFINITION                   014030
FLAGLCD  EQU   6                   LINE COMPONENT DESCRIPTION             014040
FLAGLIB  EQU   12                  LABEL IDENTIFICATION BLOCK             014050
FLAGMFD  EQU   18                  MOVE FIELD DEFINITION                  014060
FLAGOCB  EQU   13                  INPUT/OUTPUT CONTROL BLOCK             014070
FLAGPCB  EQU   7                   PROCESSING CONTROL BLOCK               014080
FLAGPTE  EQU   8                   PROCESSING TEST ELEMENT                014090
FLAGRAE  EQU   9                   RANGE ANALYSIS ELEMENT                 014100
FLAGRST  EQU   11                  RECORD SELCTION TEST                   014110
FLAGSAB  EQU   17                  SUB-ROUTINE ANCHOR BLOCK               014120
FLAGSCE  EQU   10                  SELECTION CRITERION ELEMENT            014130
FLAGTRD  EQU   15                  TWENTY80 REPORT DEFINITION             014140
FLAGUEB  EQU   21                  USER EXIT BLOCK                        014150
         SPACE 5                                                          014160
***********************************************************************   014170
*        PARROT COMPLETION CODES                                      *   014180
***********************************************************************   014190
         SPACE 1                                                          014200
COND4    EQU   4                   CONDITION CODE OF 4                    014210
COND8    EQU   8                   CONDITION CODE OF 8                    014220
COND12   EQU   12                  CONDITION CODE OF 12                   014230
COND16   EQU   16                  CONDITION CODE OF 16                   014240
         MEND                                                             014250
./   ADD     NAME=PARROTT                                                 014260
         MACRO                                                            014270
&NAME    PARROTT &DSECT=YES,&CSECT=NO                                     014280
         AIF   ('&DSECT' EQ 'YES' AND '&CSECT' EQ 'YES').ERR01            014290
         AIF   ('&DSECT' EQ 'NO' AND '&CSECT' EQ 'NO').ERR01              014300
         AIF   ('&CSECT' NE 'YES').A01                                    014310
         SCSECT T                  GENERATE CSECT IDENTIFIER              014320
         DROP  R12                 DROP STANDARD ADDRESSABILITY           014330
         AGO   .A02                                                       014340
.A01     ANOP                                                             014350
PARROTT  DSECT                                                            014360
         VERSID T                  GENERATE CSECT IDENTIFIER              014370
.A02     ANOP                                                             014380
         USING PARROTT,R9          ESTABLISH ADDRESSABILITY               014390
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY           014400
         TITLE 'PARROTT - CONVERSION TABLE FOR TEST TYPES'                014410
*        THIS TABLE IS USED TO CONVERT RELATIONSHIP TESTS SPECIFIED       014420
*         IN SELECTION CRITERIA BUCKETS ( IN GR02 AND GR04 CARDS )        014430
*         INTO THE EQUIVALENT INTERNAL NOTATION ( WHICH IS A VALUE        014440
*         USED FOR TRIGGERING INDEXED BRANCHES ).                         014450
         SPACE 5                                                          014460
TESTTAB  EQU   *                   TABLE OF EBCDIC AND FLAG TEST TYPES    014470
         DC    CL2'EQ',AL1(EQ)     EQ - EQUAL TO                          014480
         DC    CL2'NE',AL1(NE)     NE - NOT EQUAL TO                      014490
         DC    CL2'LT',AL1(LT)     LT - LESS THAN                         014500
         DC    CL2'LE',AL1(LE)     LE - LESS THAN OR EQUAL TO             014510
         DC    CL2'GT',AL1(GT)     GT - GREATER THAN                      014520
         DC    CL2'GE',AL1(GE)     GE - GREATER THAN OR EQUAL TO          014530
         DC    CL2'ON',AL1(ON)     ON - SPECIFIED INDICATORS ON           014540
         DC    CL2'OF',AL1(OFF)    OF - SPECIFIED INDICATORS OFF          014550
         DC    X'FFFFFF'           END OF TABLE                           014560
TESTTABL EQU   3                   LENGTH OF EACH TABLE ELEMENT           014570
TESTTABN EQU   (*-TESTTAB)/TESTTABL NO OF ELEMENTS                        014580
         TITLE 'PARROTT - CONVERSION TABLE OF FIELD TYPES'                014590
*        THIS TABLE IS USED TO CONVERT THE FIELD TYPE SPECIFICATION       014600
*         ( IN GR02, GR03, GR04 CONTROL CARDS ) INTO THE EQUIVALENT       014610
*         INTERNAL VALUE ( WHICH IS A VALUE USED TO TRIGGER INDEXED       014620
*         BRANCHES ).                                                     014630
         SPACE 5                                                          014640
TYPETAB  EQU   *                   CONVERSION TABLE OF FIELD TYPES        014650
         DC    CL1'CHAR',AL1(CHAR) CHAR - CHARACTER                       014660
         DC    CL1'   ',AL1(CHAR)  BL   - DEFAULT TO CHARACTER            014670
         DC    CL1'NUM',AL1(NUM)   NUM  - DISPLAY NUMERIC                 014680
         DC    CL1'PD',AL1(PD)     PD   - PACKED DECIMAL                  014690
         DC    CL1'XHEX',AL1(HEX)  HEX  - HEXADECIMAL STRING              014700
         DC    CL1'BIT',AL1(BIT)   BIT  - BIT STRING                      014710
         DC    CL1'MASK',AL1(MASK) MASK - PARTIAL MASK                    014720
         DC    CL1'1-C',AL1(BIN)   BIN  - BINARY VALUE ( COMP-1 )         014730
         DC    CL1'FLOAT',AL1(FLOAT) FLOAT - FLOATING POINT VALUE         014740
         DC    CL1'STR',AL1(STRING) STR - CHAR STRING TO OCCUR IN FLD     014750
         DC    CL1'IND',AL1(IND)        - INDICATOR                       014760
         DC    CL1'GUESS',AL1(FREEFORM) - FREE FORMAT DISPLAY NUMERIC     014770
         DC    CL1'UNUSED',AL1(12)      - RESERVED FOR FUTURE USE         014780
         DC    X'FFFF'             END OF TABLE                           014790
TYPETABL EQU   2                   LENGTH OF TABLE ELEMENTS               014800
TYPETABN EQU   (*-TYPETAB)/TYPETABL NO OF ELEMENTS IN TABLE               014810
         TITLE 'PARROTT - TRANSLATE TABLES FOR FIELD VALIDATION'          014820
*        THESE TABLES ARE USED BY VARIOUS ROUTINES TO DETERMINE THE       014830
*         VALIDITY OF, OR FORMAT OF, FIELDS.  THE MAIN TABLE MERELY       014840
*         TRANSLATES THE VARIOUS TYPES OF CHARACTERS INTO SPECIFIC        014850
*         CODES, WHILE THE SMALL TABLES ARE USED TO TRANSLATE AND TEST    014860
*         THE RESULT OF THE FIRST TRANSLATION TO DETERMINE THE TYPES      014870
*         OF CHARACTERS THAT THE SOURCE FIELD CONTAINED.  THUS, MANY      014880
*         TESTS CAN BE MADE WITH ONE 'TR' AND ONE 'TRT', OBVIATING        014890
*         THE NEED FOR ITERATIVE MULTIPLE TESTS.                          014900
         SPACE 1                                                          014910
*        NOTE THAT THIS CSECT IS UNIQUE, IN THAT ITS ADDRESSABILITY IS    014920
*         ESTABLISHED VIA R9 AND NOT R12.  THIS IS SO THAT OTHER          014930
*         CSECTS, MAY EXECUTE THE INSTRUCTIONS HEREIN WHILE               014940
*         MAINTAINING THEIR OWN ADDRESSABILTIY.                           014950
         EJECT                                                            014960
*        THE SPECIFIC TRANLATION CODES ASSIGNED ARE:-                     014970
*              X'01' : 0 - 9                                              014980
*              X'02' : A - R                                              014990
*              X'03' : S - Z                                              015000
*              X'04' : SPECIAL CHARACTERS                                 015010
*              X'05' : INVALID MULTI-PUNCHES                              015020
*              X'06' : 12-0 & 11-0 MULTI-PUNCHES                          015030
*              X'07' : BLANK                                              015040
         SPACE 1                                                          015050
TTABLE   DS    0CL256              TRANSLATION TABLE FOR TESTS            015060
         DC    64X'05'                                                    015070
         DC    X'07'               BLANK                                  015080
         DC    9X'05'                                                     015090
         DC    7X'04'              SPECIAL:- H.<(+|&                      015100
         DC    9X'05'                                                     015110
         DC    8X'04'              SPECIAL:- !$*);^-/                     015120
         DC    9X'05'                                                     015130
         DC    5X'04'              SPECIAL:- ,%_>?                        015140
         DC    10X'05'                                                    015150
         DC    6X'04'              SPECIAL:- :#@.="                       015160
         DC    64X'05'                                                    015170
         DC    X'06'               12-0 PUNCH                             015180
         DC    9X'02'              ALPHA:-   ABCDEFGHI                    015190
         DC    6X'05'                                                     015200
         DC    X'06'               11-0 PUNCH                             015210
         DC    9X'02'              ALPHA:-   JKLMNOPQR                    015220
         DC    8X'05'                                                     015230
         DC    8X'03'              ALPHA:-   STUVWXYZ                     015240
         DC    6X'05'                                                     015250
         DC    10X'01'             NUMERIC:- 0123456789                   015260
         DC    6X'05'                                                     015270
         SPACE 1                                                          015280
TTABLEL1 DC    X'0101000001010100' ALLOW A-Z, BLANK                       015290
TTABLEL2 DC    X'0100000001010100' ALLOW A-Z, 0-9, BLANK                  015300
TTABLEL3 DC    X'0100000000010100' ALLOW A-Z, 0-9, BLANK, SPECIAL         015310
TTABLENN DC    X'0100010101010101' ALLOW 0-9                              015320
TTABLEN  DC    X'0100010101010100' ALLOW 0-9, BLANK                       015330
TTABLES  DC    X'0100000101010000' ALLOW 0-9, A-R, BLANK, 12-0, 11-0      015340
TTABLEBL DC    X'0000000000000001' LOCATE FIRST BLANK                     015350
TTABLENO DC    X'0001000000000000' LOCATE FIRST 0-9                       015360
TTABLENS DC    X'0001010000000100' LOCATE FIRST 0-9, A-R, 11-0, 12-0      015370
         EJECT                                                            015380
***********************************************************************   015390
*        EXECUTABLE INSTRUCTIONS                                      *   015400
***********************************************************************   015410
         SPACE 1                                                          015420
TESTTR   TR    $TSTAREA(0),TTABLE  TRANSLATE AGAINST MAIN TABLE           015430
TESTTRL1 TRT   $TSTAREA(0),TTABLEL1 ACCEPT A-Z AND BLANK                  015440
TESTTRL2 TRT   $TSTAREA(0),TTABLEL2 ACCEPT A-Z, BLANK, 0-9                015450
TESTTRL3 TRT   $TSTAREA(0),TTABLEL3 ACCEPT A-Z,0-9, BLANK, SPECIAL CHA    015460
TESTTRNN TRT   $TSTAREA(0),TTABLENN ACCEPT 0-9                            015470
TESTTRN  TRT   $TSTAREA(0),TTABLEN  ACCEPT 0-9, BLANK                     015480
TESTTRS  TRT   $TSTAREA(0),TTABLES  ACCEPT 0-9, BLANK, A-R, 11-0, 12-0    015490
TESTTRNS TRT   $TSTAREA(0),TTABLENS LOCATE 1ST 0-9, A-R, 11-0, 12-0       015500
TESTTRNO TRT   $TSTAREA(0),TTABLENO LOCATE 1ST 0-9                        015510
TESTTRBL TRT   0(0,R14),TTABLEBL    LOCATE 1ST BLANK                      015520
         SPACE 5                                                          015530
***********************************************************************   015540
*        EXECUTABLE INSTRUCTIONS FOR PARTIAL KEY MATCHING ROUTINE     *   015550
***********************************************************************   015560
         SPACE 1                                                          015570
E1TRTEST TR    $TSTAREA+50(0),E1TABLE2 TRANSLATE PARTIAL KEY BL TO '00'   015580
E1NCMAST NC    $TSTAREA(0),$TSTAREA+50 TURN OFF UNTESTED BYTES            015590
E1NCTEST NC    $TSTAREA+50(0),0(R14) RESTORE PARTIAL KEY WITH BL='00'     015600
E1TRTAB  TR    $TSTAREA+50(0),E1TABLE1 TRANSLATE 'MBB' CHAR TO BLANK      015610
E1COMPAR CLC   $TSTAREA(0),$TSTAREA+50 COMPARE NON-BLANK PARTS OF KEYS    015620
E1MVCKEY MVC   $TSTAREA+50(0),0(R14) MOVE PARTIAL KEY TO WORK AREA        015630
E1MVCFLD MVC   $TSTAREA(0),0(R6)   MOVE FIELD UNDER TEST TO TEST AREA     015640
         SPACE 5                                                          015650
***********************************************************************   015660
*        EXECUTABLE INSTRUCTIONS FOR HEX STRING VALIDATION/CONVERSION *   015670
***********************************************************************   015680
         SPACE 1                                                          015690
HEXVALID TRT   0(0,R14),HEXTAB1    ENSURE ONLY VALID HEX CHARACTERS       015700
HEXCONV  TR    0(0,R14),HEXTAB2    CONVERT 'A' TO X'FA' ETC               015710
         TITLE 'PARROTT - TABLES FOR PARTIAL KEY MATCHING'                015720
*        THESE TABLES ARE USED BR THE PARTIAL KEY MATCHING ROUTINE.       015730
         SPACE 5                                                          015740
***********************************************************************   015750
*        ALTER 'MUST BE BLANK' CHARACTER TO BLANK                     *   015760
***********************************************************************   015770
         SPACE 1                                                          015780
E1TABLE1 DS    0CL256                                                     015790
         DC    X'000102030405060708090A0B0C0D0E0F'                        015800
         DC    X'101112131415161718191A1B1C1D1E1F'                        015810
         DC    X'202122232425262728292A2B2C2D2E2F'                        015820
         DC    X'303132333435363738393A3B3C3D3E3F'                        015830
         DC    X'404142434445464748494A4B4C4D4E4F'                        015840
         DC    X'505152535455565758595A5B5C5D5E5F'                        015850
         DC    X'606162636465666768696A6B6C6D6E6F'                        015860
         DC    X'707172737475767778797A7B7C7D7E7F'                        015870
         DC    X'808182838485868788898A8B8C8D8E8F'                        015880
         DC    X'909192939495969798999A9B9C9D9E9F'                        015890
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                        015900
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                        015910
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'                        015920
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'                        015930
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'                        015940
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'                        015950
         SPACE 5                                                          015960
***********************************************************************   015970
*        NULLIFY BLANKS                                               *   015980
***********************************************************************   015990
         SPACE 1                                                          016000
E1TABLE2 DS    0CL256                                                     016010
         DC    64X'FF'             EVERYTHING EXCEPT ...                  016020
         DC    X'00'                ... BLANK ...                         016030
         DC    191X'FF'             ... IS HIGH VALUES                    016040
         TITLE 'PARROTT - TRANSLATE TABLE FOR SCANNING FOR CHARACTERS'    016050
***********************************************************************   016060
*        TABLE FOR SCANNING A FIELD TO LOCATE A STRING                *   016070
***********************************************************************   016080
         SPACE 1                                                          016090
*        THIS TABLE IS USED BY A NUMBER OF ROUTINES TO SCAN FOR A         016100
*         FIELD FOR A SPECIFIC CHARACTER.  THE TABLE IS THUS SUBJECT TO   016110
*         MODIICATION, IN THAT EACH TIME IT IS USED, THE USER WILL :-     016120
*              . SET TABLE TO ALL LOW VALUES                              016130
*              . SET THE POSITION CORRESPONDING TO THE SEARCH CHARACTER   016140
*                TO A VALUE OTHER THAN X'00'                              016150
*        THE USER CAN THEN USE 'TRT' TO LOCATE THE DESIRED CHARACTER.     016160
         SPACE 5                                                          016170
STRTAB   DC    256X'00'            TABLE FOR 'TRT'                        016180
         TITLE 'PARROTT - TABLES FOR HEX STRING VALIDATION/CONVERSION'    016190
***********************************************************************   016200
*        TABLES FOR HEX STRING VALIDATION/CONVERSION                  *   016210
***********************************************************************   016220
         SPACE 1                                                          016230
*        THESE TABLES ARE USED FOR VALIDATING AND CONVERTING HEX          016240
*         STRING LITERALS.  THE FIRST TABLE IS USED TO ENSURE THAT THE    016250
*         LITERAL CONTAINS ONLY VALID ( CHARACTER REPRESENTATION OF )     016260
*         HEXADECIMAL CHARACTERS, WHILE THE SECOND TABLE CONVERTS         016270
*         'A'-'F' INTO X'FA'-X'FF' SO THAT A PACK OPERATION WILL ALTER    016280
*         THE STRING INTO A TRUE HEX LITERAL.                             016290
         SPACE 5                                                          016300
HEXTAB1  DC    256X'01'            VALIDATE HEX CHARACTERS                016310
         ORG   HEXTAB1+C'A'                                               016320
         DC    6X'00'              A - F                                  016330
         ORG   HEXTAB1+C'0'                                               016340
         DC    10X'00'             0 - 9                                  016350
         ORG                                                              016360
         SPACE 5                                                          016370
HEXTAB2  DC    256AL1(*-HEXTAB2)   CONVERT 'A' TO X'FA' ETC               016380
         ORG   HEXTAB2+C' '        BLANK                                  016390
         DC    X'00'               CONVERT PADDING BLANKS TO PADDING 00   016400
         ORG   HEXTAB2+C'A'                                               016410
         DC    X'FAFBFCFDFEFF'     A - F INTO X'FA' - X'FF'               016420
         ORG                                                              016430
         TITLE 'PARROTT - TABLE FOR LOCATING 1ST NON-BLANK CHARACTER'     016440
*        THIS TABLE CAN BE USED BY 'TRT' TO LOCATE THE 1ST NON-BLANK      016450
*         CHARACTER IN A FIELD.                                           016460
         SPACE 5                                                          016470
NONBLTAB DC    256AL1(*-NONBLTAB)  BASIC TABLE                            016480
         ORG   NONBLTAB+X'00'      POINT AT LOW-VALUES POSITION           016490
         DC    X'01'               ALTER SO AS TO FAIL 'TRT'              016500
         ORG   NONBLTAB+C' '       POINT AT BLANK                         016510
         DC    X'00'               ALTER TO PASS 'TRT'                    016520
         ORG                                                              016530
         TITLE 'PARROTT - TABLE TO TRANSLATE BLANKS TO ZEROES'            016540
         SPACE 5                                                          016550
BLTOZERO DC    256AL1(*-BLTOZERO)  BASIC TRANSLATE TABLE                  016560
         ORG   BLTOZERO+C' '       ORG TO BLANK                           016570
         DC    C'0'                CONVERT BLANK TO ZERO                  016580
         ORG                                                              016590
         TITLE 'PARROTT - TRANSLATE TABLE FOR MATHEMATICAL OPERATIONS'    016600
*        THIS TABLE IS USED BY THE MATHEMATICAL ROUTINES TO LOCATE        016610
*         THE 1ST NON-ZERO BYTE IN A PACKED DECIMAL FIELD.  IT IS ALSO    016620
*         USED TO VALIDATE PACKED DECIMAL FIELDS.                         016630
         SPACE 5                                                          016640
PDTABLE  EQU   *                                                          016650
         DC    X'00'               '00'                                   016660
         DC    9X'02',6X'03'       '01' - '09', '0A' - '0F'               016670
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016680
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016690
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016700
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016710
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016720
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016730
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016740
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016750
         DC    10X'01',6X'03'      'N0' - 'N9', 'NA' -'NF'                016760
         DC    96X'04'             'A0' - 'FF'                            016770
         SPACE 5                                                          016780
*        THE SIGNIFICANCE OF THE FUNCTION BYTES IS:-                      016790
         SPACE 1                                                          016800
*        '00' - SOURCE BYTE CONTAINS LOW VALUES                           016810
*        '01' - 1ST HALF OF SOURCE BYTE CONTAINS DIGIT (NN)               016820
*        '02' - 2ND HALF OFSOURCE BYTE CONTAINS DIGIT (0N)                016830
*        '03' - SOURCE BYTE CONTAINS DIGIT AND SIGN                       016840
*        '04' - 1ST HALF OF SOURCE BYTE CONTAINS A - F (INVALID)          016850
         DROP  R9                  DROP ADDRESSABILITY                    016860
         MEXIT                                                            016870
.ERR01   MNOTE 16,'MUTUALLY EXCLUSIVE KEYWORD SPECIFICATION'              016880
         MEXIT                                                            016890
         MEND                                                             016900
./   ADD NAME=OCB                                                         016910
         MACRO                                                            016920
&NAME    OCB  &DUMMY                                                      016930
***********************************************************************   016940
*        OCB - INPUT/OUTPUT CONTROL BLOCK                             *   016950
***********************************************************************   016960
         SPACE 1                                                          016970
*        DEFINE AN OPTIONAL OUTPUT DD STATEMENT                           016980
         SPACE 1                                                          016990
OCBNTRY  DSECT                                                            017000
OCBID    DS    0CL1                CONTROL BLOCK IDENTIFIER               017010
OCBOCB   DS    F                   ADDRESS OF NEXT OCB IN CHAIN           017020
OCBIOSW  DS    F                   ADDRESS OF ASSOCIATED IOSW (FOR IOM)   017030
OCBHDG   DS    F                   ADDRESS OF 1ST HEADING LINE STORE      017040
OCBHCNT  DS    H                   NUMBER OF HEADING LINES                017050
OCBLOGO  DS    CL8                 MEMBER NAME OF OPTIONAL LOGO           017060
OCBRID   DS    CL8                 OPTIONAL REPORT ID (1ST HEADING LNE)   017070
OCBLABL  DS    CL2                 LABEL OF OCB ( FROM GR00 CARD )        017080
OCBLPGE  DS    PL2                 LINES / PAGE                           017090
OCBPCNT  DS    PL4                 PAGE COUNT                             017100
OCBLCNT  DS    PL4                 STORE FOR LINE COUNT DURING TOTAL PR   017110
OCBPCC   DS    CL1                 LINE SPACING CARRIAGE CONTROL CHARAC   017120
OCBSW    DS    CL1                 SWITCH BYTE                            017130
         DS    0F                  ENSURE FULLWORD ALIGNMENT LEST DCBSW   017140
*                                   IS CONCATENATED WITH OCB              017150
OCBLGTH  EQU   *-OCBNTRY           LENGTH OF ( BASIC ) OCB                017160
         SPACE 5                                                          017170
MOCBREPT EQU   1                   OCB DEFINES A REPORT DATA SET          017180
MOCBDETL EQU   2                   DETAIL LINES REQUIRED FOR THIS D/S     017190
MOCBRITE EQU   4                   'WRITE' IS OUTSTANDING FOR THIS D/S    017200
MOCBTOTL EQU   8                   LAST LINE WRITTEN WAS A TOTAL LINE     017210
MOCBHEAD EQU   16                  LAST LINE WRITTEN WAS HEADING LINE     017220
MOCBACNT EQU   32                  LINE COUNT ADJUSTED TO PREVENT PSKIP   017230
MOCB2080 EQU   64                  THOCB DEFINES TWENTY80 REPORT D/S      017240
         MEND                                                             017250
./ ADD NAME=HDG                                                           017260
         MACRO                                                            017270
&NAME    HDG   &DUMMY                                                     017280
***********************************************************************   017290
*        HEADING LINE STORAGE AREA                                    *   017300
***********************************************************************   017310
         SPACE 1                                                          017320
HDGNTRY  DSECT                                                            017330
HDGID    DS    0CL1                CONTROL BLOCK FLAG                     017340
HDGHDG   DS    F                   ADDRESS OF NEXT HEADING STORE          017350
HDGSW    DS    CL1                 SWITCH BYTE                            017360
HDGHEAD  DS    0CL133              HEADING LINE                           017370
HDGCC    DS    CL1                 CARRIAGE CONTROL CHARACTER             017380
HDGCARD1 DS    CL75                DATA FROM 1ST GR01 OF PAIR             017390
HDGCARD2 DS    CL57                DATA FROM 2ND GR01 OF PAIR             017400
HDGLGTH  EQU   *-HDGNTRY           LENGTH OF DSECT                        017410
         SPACE 5                                                          017420
MHDGHD1  EQU   1                   THIS IS THE 1ST HEADING LINE           017430
MHDG1CRD EQU   2                   ONLY 1 CARD PLACED IN STORAGE AREA     017440
         MEND                                                             017450
./ ADD NAME=MONITREC                                                      017460
         MACRO                                                            017470
&NAME    MONITREC &DUMMY                                                  017480
***********************************************************************   017490
*        FORMAT OF MONITOR DATA SET RECORDS                           *   017500
***********************************************************************   017510
         SPACE 1                                                          017520
MONITREC DSECT                                                            017530
MONRADDR DS    CL6                 HEXPANDED ADDR OF NEXT INSTRUCTION     017540
*                                   IF OUTSIDE OF PARROT CODE, OR         017550
*                                   HEXPANDED DISPLACEMENT WITHIN CSECT   017560
MONRLOCN DS    CL2                 LOCATION INDICATOR:                    017570
*                                   X'0000' - BELOW START OF PARROT       017580
*                                   X'FFFF' - ABOVE END OF PARROT         017590
*                                   C'XX'   - PARROT CSECT SUFFIX         017600
MONRINS  DS    CL12                HEXPANDED INSTRUCTION IMAGE            017610
MONRHADR DS    CL4                 ADDR OF NEXT INSTRUCTION ( IN HEX )    017620
MONRLGTH EQU   *-MONITREC          LENGTH OF DSECT                        017630
         MEND                                                             017640
./ ADD   NAME=TRD                                                         017650
         MACRO                                                            017660
&NAME    TRD   &DUMMY                                                     017670
***********************************************************************   017680
*        TRD - TWENTY80 REPORT DEFINITION                             *   017690
***********************************************************************   017700
         SPACE 1                                                          017710
TRDNTRY  DSECT                                                            017720
TRDID    DS    0CL1                CONTROL BLOCK IDENTIFIER               017730
TRDTRD   DS    F                   ADDRESS OF NEXT TRD                    017740
TRDRAE   DS    F                   ADDRESS OF 1ST ASSOCIATED RAE          017750
TRDLIB   DS    F                   ADDRESS OF LIB OF FIELD TO STUDY       017760
TRDLIBA  DS    F                   ADDRESS OF LIB OF FIELD TO ACCUMULAT   017770
TRDOCB   DS    F                   ADDRESS OF ASSOCIATED OCB              017780
TRDPOSN  DS    F                   ADDRESS OF NEXT OUTPUT FIELD           017790
TRDTVAL  DS    CL8                 CUMULATIVE FILE TOTAL OF VALUES        017800
TRDKVAL  DS    CL8                 CUMULATIVE TOTAL FOR MAJOR KEY         017810
TRDCVAL  DS    CL8                 ACCUMULATOR FOR RAE PROCESSING         017820
TRDLBND  DS    CL8                 LOWER BOUND OF CURRENT RAE             017830
TRDCNO   DS    PL4                 ACCUMULATOR FOR RAE PROCESSING         017840
TRDTNO   DS    PL4                 NO OF ENTRIES ON FILE                  017850
TRDKNO   DS    PL4                 NO OF ENTRIES WITHIN MAJOR KEY         017860
TRDLAB   DS    CL2                 LABEL OF FIELD TO STUDY                017870
TRDLABA  DS    CL2                 LABEL OF FIELD TO ACCUMULATE           017880
TRDRID   DS    CL2                 LABEL OF ASSOCIATED OCB                017890
TRDDESC  DS    CL30                DESCRIPTION OF VARIABLE                017900
TRDSW    DS    CL1                 SWITCH BYTE                            017910
TRDLGTH  EQU   *-TRDNTRY           LENGTH OF DSECT                        017920
         SPACE 5                                                          017930
MTRDNOLO EQU   1                   DO NOT INCLUDE LOWER BOUND IN LINE     017940
         MEND                                                             017950
./ ADD   NAME=TW80LINE                                                    017960
         MACRO                                                            017970
&NAME    TW80LINE &DUMMY                                                  017980
***********************************************************************   017990
*        FORMAT OF TWENTY80 REPORT DETAIL LINE                        *   018000
***********************************************************************   018010
         SPACE 1                                                          018020
TW80LINE DSECT                                                            018030
TW80CC   DS    CL1                 CARRIAGE CONTROL CHARACTER             018040
TW80LORA DS    CL11  'ZZZZZZZZZ9-' LOWER BOUND OF RANGE                   018050
         DS    CL2                 UNUSED                                 018060
TW80TO   DS    CL2                 LITERAL 'TO'                           018070
         DS    CL1                 UNUSED                                 018080
TW80HIRA DS    CL11  'ZZZZZZZZZ9-' UPPER BOUND OF RANGE                   018090
         DS    CL4                 UNUSED                                 018100
TW80NO   DS    CL9   'ZZZZZZZ9-'   NO OF ENTRIES IN THIS RANGE            018110
TW80NOP  DS    CL8   ' ZZ9.99-'    NO OF ENTRIES AS %AGE OF TOTAL         018120
TW80VAL  DS    CL11  'ZZZZZZZZZ9-' VALUE OF ENTRIES IN THIS RANGE         018130
TW80VALP DS    CL8   'ZZZ9.99-'    VALUE OF ENTRIES AS %AGE OF TOTAL      018140
         DS    CL4                 UNUSED                                 018150
TW80CNO  DS    CL9   ' ZZZZZZ9-'   CUMULATIVE NO OF ENTRIS                018160
TW80CNOP DS    CL8   ' ZZ9.99-'    CUMULATIVE NO OF ENTRIES AS %AGE       018170
         DS    CL1                 UNUSED                                 018180
TW80CVAL DS    CL11  'ZZZZZZZZZ9-' CUMULATIVE VALUE OF ENTRIES            018190
TW80CVP  DS    CL8   'ZZZ9.99-'    CUMULATIVE VALUE AS %AGE               018200
         DS    CL24                UNUSED                                 018210
TW80LLEN EQU   *-TW80LINE          LENGTH OF DSECT                        018220
         MEND                                                             018230
./ ADD   NAME=JCL                                                         018240
         MACRO                                                            018250
&NAME    JCL   &DUMMY                                                     018260
***********************************************************************   018270
*        JCL - JCL STATEMENT CONTROL LINKAGE                          *   018280
***********************************************************************   018290
         SPACE 1                                                          018300
JCLNTRY  DSECT                                                            018310
JCLID    DS    0CL1                CONTROL BLOCK IDENTIFIER               018320
JCLJCL   DS    F                   ADDRESS OF NEXT JCL                    018330
JCLSW    DS    CL1                 SWITCH BYTE                            018340
         DS    CL1                 UNUSED                                 018350
JCLLEN   DS    H                   LENGTH OF DD STATEMENT                 018360
JCLCARD  EQU   *                   VARIABLE LENGTH DD STATEMENT           018370
JCLLGTH  EQU   *-JCLNTRY           LENGTH OF BASIC C/B                    018380
         SPACE 5                                                          018390
         MEND                                                             018400
./ ADD   NAME=SAB                                                         018410
         MACRO                                                            018420
&NAME    SAB   &DUMMY                                                     018430
***********************************************************************   018440
*        SAB - SUBROUTINE ANCHOR BLOCK                                *   018450
***********************************************************************   018460
         SPACE 1                                                          018470
SABNTRY  DSECT                                                            018480
SABID    DS    0CL1                CONTROL BLOCK IDENTIFIER               018490
SABSAB   DS    F                   ADDRESS OF NEXT SAB                    018500
SAB1ST   DS    F                   ADDRESS OF 1ST PCB IN SUBROUTINE       018510
SABLAST  DS    F                   ADDRESS OF LAST PCB IN SUBROUTINE      018520
SABTID   DS    CL2                 SUBROUTINE NAME ( GR40 LABEL )         018530
SABSW    DS    CL1                 SWITCH BYTE                            018540
SABLGTH  EQU   *-SABNTRY           LENGTH OF SUBROUTINE                   018550
         MEND                                                             018560
./   ADD NAME=MFD                                                         018570
         MACRO                                                            018580
&NAME    MFD   &DUMMY                                                     018590
***********************************************************************   018600
*        MFD - MOVE FIELD DEFINITION                                  *   018610
***********************************************************************   018620
         SPACE 1                                                          018630
MFDNTRY  DSECT                                                            018640
MFDID    DS    0CL1                CONTROL BLOCK IDENTIFIER               018650
MFDMFD   DS    F                   ADDRESS OF NEXT MFD IN CHAIN           018660
MFDLABL  DS    CL2                 LABEL FROM CONTROL CARD                018670
MFDSW    DS    CL1                 SWITCH BYTE                            018680
MFDLGTH  EQU   *-MFDNTRY           LENGTH OF CONTROL BLOCK                018690
         MEND                                                             018700
./   ADD NAME=DCE                                                         018710
         MACRO                                                            018720
&NAME    DCE   &DUMMY                                                     018730
***********************************************************************   018740
*        DCE - DATE CONVERSION ELEMENT                                *   018750
***********************************************************************   018760
         SPACE 1                                                          018770
DCENTRY  DSECT                                                            018780
DCEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               018790
DCEDCE   DS    F                   ADDRESS OF NEXT DCE IN CHAIN           018800
DCELABL  DS    CL2                 LABEL FROM CONTROL CARD                018810
DCESW    DS    CL1                 SWITCH BYTE                            018820
DCELGTH  EQU   *-DCENTRY           LENGTH OF CONTROL BLOCK                018830
         MEND                                                             018840
./   ADD NAME=CCE                                                         018850
         MACRO                                                            018860
&NAME    CCE   &DUMMY                                                     018870
***********************************************************************   018880
*        CCE - CURRENCY CONVERSION ELEMENT                            *   018890
***********************************************************************   018900
         SPACE 1                                                          018910
CCENTRY  DSECT                                                            018920
CCEID    DS    0CL1                CONTROL BLOCK IDENTIFIER               018930
CCECCE   DS    F                   ADDRESS OF NEXT CCE IN CHAIN           018940
CCELABL  DS    CL2                 LABEL FROM CONTROL CARD                018950
CCESW    DS    CL1                 SWITCH BYTE                            018960
CCELGTH  EQU   *-CCENTRY           LENGTH OF CONTROL BLOCK                018970
         MEND                                                             018980
./   ADD NAME=UEB                                                         018990
         MACRO                                                            019000
&NAME    UEB   &DUMMY                                                     019010
***********************************************************************   019020
*        UEB - USER EXIT BLOCK                                        *   019030
***********************************************************************   019040
         SPACE 1                                                          019050
UEBNTRY  DSECT                                                            019060
UEBID    DS    0CL1                CONTROL BLOCK IDENTIFIER               019070
UEBUEB   DS    F                   ADDRESS OF NEXT UEB IN CHAIN           019080
UEBLABL  DS    CL2                 LABEL FROM CONTROL CARD                019090
UEBSW    DS    CL1                 SWITCH BYTE                            019100
UEBLGTH  EQU   *-UEBNTRY           LENGTH OF CONTROL BLOCK                019110
         MEND                                                             019120
./ ADD NAME=GR00                                                          019130
         MACRO                                                            019140
&NAME    GR00  &DUMMY                                                     019150
***********************************************************************   019160
*        FORMAT OF GR00 CONTROL CARD                                  *   019170
***********************************************************************   019180
         SPACE 1                                                          019190
*        DEFINES AN ADDITIONAL OUTPUT DATA SET                            019200
         SPACE 1                                                          019210
GR00CARD DSECT                                                            019220
GR00ID   DS    CL4                 CONTROL CARD ID ( 'GR00' )             019230
GR00LABL DS    CL2                 CONTROL CARD LABEL (FOR XREF FROM      019240
*                                   GR10/11/12 CONTROL CARDS )            019250
GR00DDN  DS    CL8                 DD NAME                                019260
GR00REPT DS    CL1                 REPORT INDICATOR ( 'Y'/'N'/' ' )       019270
GR00DETL DS    CL1                 DETAIL LINES REQUIRED ( 'Y'/'N'/' ')   019280
GR002080 DS    CL1                 TWENTY80 REPORT INDICATOR (Y/N/' ')    019290
GR00LCNT DS    CL2                 LINES / PAGE ( REPORT ONLY )           019300
GR00RID  DS    CL8                 OPTIONAL REPORT IDENTIFIER (1ST HDG)   019310
GR00LOGO DS    CL8                 MEMBER NAME OF OPTIONAL LOGO           019320
GR00UNUS DS    CL45                UNUSED                                 019330
GR00LGTH EQU   *-GR00CARD          LENGTH OF DSCET                        019340
         MEND                                                             019350
./ ADD NAME=GR01                                                          019360
         MACRO                                                            019370
&NAME    GR01  &DUMMY                                                     019380
***********************************************************************   019390
*        FORMAT OF GR01 CONTROL CARD                                  *   019400
***********************************************************************   019410
         SPACE 1                                                          019420
*        SPECIFIES THE REPORT HEADINGS -                                  019430
*         1ST LINE : CARD 1                                               019440
*         2ND LINE : CARDS 2 & 3                                          019450
*         3RD LINE : CARDS 4 & 5                                          019460
GR01CARD DSECT                                                            019470
GR01ID   DS    CL4                 CARD ID ('GR01')                       019480
GR01CC   DS    CL1                 'BEFORE PRINT' CARRIAGE CONTROL CHAR   019490
*                                   '0' - NO SPACE                        019500
*                                   '1' - SPACE 1 LINE ( DEFAULT )        019510
*                                   '2' - SPACE 2 LINES                   019520
*                                   '3' - SPACE 3 LINES                   019530
GR01LNE1 DS    CL75                1ST PART OF LINE                       019540
GR01LGTH EQU   *-GR01CARD          LENGTH OF DSECT                        019550
         MEND                                                             019560
./ ADD NAME=GR02                                                          019570
         MACRO                                                            019580
&NAME    GR02  &DUMMY                                                     019590
***********************************************************************   019600
*        FORMAT OF GR02 CONTROL CARD                                  *   019610
***********************************************************************   019620
         SPACE 1                                                          019630
*        SPECIFY CRITERIA FOR SELECTING RECORDS                           019640
         SPACE 1                                                          019650
GR02CARD DSECT                                                            019660
GR02ID   DS    CL4                 CARD ID ('GR02')                       019670
GR02TST1 DS    0CL19               1ST TEST DEFINITIOON                   019680
GR02POS  DS    CL3                 POSN OF FIELD TO BE TESTED             019690
*                                  1ST TEST OF CONTINUATION CARDS WILL    019700
*                                   CONTAIN AN 'AND' IN THIS FILED        019710
GR02LEN  DS    CL2                 LGTH OF FIELD TO BE TESTED             019720
GR02TYP  DS    CL1                 TYPE OF FIELD                          019730
*                                   ' ' - UNPACKED NUMERIC                019740
*                                   'N' - UNPACKED NUMERIC                019750
*                                   'C' - CHARACTER                       019760
*                                   'P' - PACKED DECIMAL                  019770
*                                   'X' - HEXADECIMAL                     019780
*                                   'B' - BIT STRING                      019790
*                                   'M' - PARTIAL (CHARACTER) MASK        019800
*                                   'S' - CHARACTER STRING                019810
*                                   '1' - BINARY                          019820
*                                   'F' - FLOATING POINT                  019830
*                                   'G' - FREE FORMAT DISPLAY NUMERIC     019840
GR02TEST DS    CL2                 TEST TYPE                              019850
*                                   EQ/NE/GT/GE/LT/LE/ON/OF               019860
GR02VALU DS    CL11                COMPARAND VALUE                        019870
*                                   NUMERIC: RIGHT-ADJUSTED               019880
*                                   OTHER: ANY ALIGNMENT IN QUOTES        019890
GR02TST2 DS    CL19                AS GR02POS - GR02VALU                  019900
GR02TST3 DS    CL19                AS GR02POS - GR02VALU                  019910
GR02TST4 DS    CL19                AS GR02POS - GR02VALU                  019920
GR02LGTH EQU   *-GR02CARD          LENGTH OF DSECT                        019930
         SPACE 5                                                          019940
*        IF PPPLL CONTAINS 'DELETE', THEN THE RECORD WILL BE DELETED      019950
*         IF ALL THE SPECIFIED TESTS ARE SATISFIED.                       019960
         MEND                                                             019970
./ ADD NAME=GR03                                                          019980
         MACRO                                                            019990
&NAME    GR03  &DUMMY                                                     020000
***********************************************************************   020010
*        FORMAT OF GR03 CONTROL CARDS                                 *   020020
***********************************************************************   020030
         SPACE 1                                                          020040
*        SPECIFY THE KEEY FIELDS                                          020050
         SPACE 1                                                          020060
GR03CARD DSECT                                                            020070
GR03ID   DS    CL4                 CARD ID ('GR03')                       020080
GR03KEY1 DS    0CL19               1ST KEY DEFINITION                     020090
GR03POS  DS    CL3                 POSN OF KEY FIELD                      020100
GR03LEN  DS    CL2                 LGTH OF KEY FIELD                      020110
GR03TYP  DS    CL1                 TYPE OF KEY FIELD                      020120
*                                   ' ' - UNPACKED NUMERIC                020130
*                                   'N' - UNPACKED NUMERIC                020140
*                                   'C' - CHARACTER                       020150
*                                   'P' - PACKED DECIMAL                  020160
*                                   'X' - HEXADECIMAL                     020170
GR03TOT  DS    CL1                 TOTAL BREAK INDICATOR                  020180
*                                   ' ' - NO TOTAL BREAK                  020190
*                                   'N' - NO TOTAL BREAK                  020200
*                                   'Y' - TOTAL BREAK                     020210
GR03PSKP DS    CL1                 PAGE SKIP INDICATOR                    020220
*                                   ' ' - NO PAGE SKIP                    020230
*                                   'N' - NO PAGE SKIP                    020240
*                                   'Y' - PAGE SKIP ON TOTAL BREAK        020250
*                                   'R' - PAGESKIP & RESET PAGE COUNTER   020260
GR03NPOS DS    CL3                 POSN O ASSOC NAME FIELD                020270
GR03NLEN DS    CL2                 LGTH O ASSOC NAME FIELD                020280
GR032080 DS    CL1                 TWENTY-80 INDICATOR ( KEY 1 ONLY )     020290
*                                   ' ' - NO TWENTY-80 REQUIRED           020300
*                                   'N' - NO TWENTY-80 REQUIRED           020310
*                                   'Y' - TWENTY-80 REQUIRED              020320
GR03PLIM DS    CL2                 PAGE LIMIT ( 1ST KEY ONLY )            020330
         ORG   GR032080            REDEFINE FOF ALL BUT 1ST KEY           020340
         DS    CL4                 UNUSED                                 020350
GR03KLBL DS    CL2                 (OPTIONAL) LABEL ASSOC WITH KEY FIEL   020360
GR03KEY2 DS    CL19                AS GR03POS - GR03NLEN                  020370
GR03KEY3 DS    CL19                AS GR03POS - GR03NLEN                  020380
GR03KEY4 DS    CL19                AS GR03POS - GR03NLEN                  020390
GR03LGTH EQU   *-GR03CARD          LENGTH OF DSECT                        020400
         SPACE 5                                                          020410
*        IF THE FIRST POSITION OF A KEY DEFINITION BUCKET CONTAINS '*',   020420
*         THEN THE BUCKET IS TREATED AS A COMMENT.                        020430
*        KEY DEFINITION MAY BE DEFERRED BY SPECIFYING 'FLDXX' IN PLACE    020440
*         OF THE  FIELD'S PPPLL.                                          020450
         MEND                                                             020460
./ ADD NAME=GR04                                                          020470
         MACRO                                                            020480
&NAME    GR04  &DUMMY                                                     020490
***********************************************************************   020500
*        FORMAT OF GR04 CONTROL CADS                                  *   020510
***********************************************************************   020520
         SPACE 1                                                          020530
*        DEFINE INPUT FIELDS                                              020540
         SPACE 1                                                          020550
GR04CARD DSECT                                                            020560
GR04ID   DS    CL4                 CARD ID ('GR04')                       020570
GR04FID  DS    CL2                 FIELD IDENTIFIER                       020580
GR04POS  DS    CL3                 POSN OF FIELD IN INPUT RECORD          020590
GR04LEN  DS    CL2                 LGTH OF FIELD IN INPUT RECORD          020600
GR04TYP  DS    CL1                 FIELD TYPE                             020610
*                                   ' ' - UNPACKED NUMERIC                020620
*                                   'N' - UNPACKED NUMERIC                020630
*                                   'P' - PACKED DECIMAL                  020640
*                                   'C' CHARACTER                         020650
*                                   'X' HEXADECIMAL                       020660
*                                   'S' - CREATE A SCALAR (NOT INPUT)     020670
GR04NDEC DS    CL1                 NUMBER OF DECIMALS ( ' ' = '0' )       020680
GR04KEY  DS    CL1                 KEY LEVEL UP TO WHICH VALUE IS TO BE   020690
*                                   MOVED INSTEAD OF ACCUMULATED.  BY     020700
*                                   DEFAULT, VALUE IS ACCUMULATED AT      020710
*                                   EVERY LEVEL.                          020720
GR04NZD  DS    CL1                 IF 'N', DO NOT ZEROISE ASSOCIATED      020730
*                                  ACCUMULATOR AT DETAIL LEVEL, BUT AT    020740
*                                  KEY LEVEL IN PREVIOUS BYTE.  THUS      020750
*                                  VALUE FROM 1 RECORD TYPE AVAILABLE     020760
*                                  WHEN ANOTHER TYPE IS PROCESSED.        020770
GR04UNUS DS    CL8                 UNUSED                                 020780
GR04TST1 DS    0CL19               OPTIONAL TEST TO QUALIFY FIELD.        020790
*                                   VALUE IS ASSOCIATED WITH A FIELD ID   020800
*                                   ONLY IF THESE TESTS ARE SATISFIED.    020810
*                                   OTHERWISE THE VALUE IS SET TO ZERO.   020820
GR04TPOS DS    CL3                 POSN OF FIELD TO BE TESTED             020830
GR04TLEN DS    CL2                 LGTH OF FIELD TO BE TESTED             020840
GR04TTYP DS    CL1                 FIELD TYPE                             020850
*                                   ' '/N/P/C/X/B                         020860
GR04TTST DS    CL2                 TEST TYPE ( GE/GT/LE/LT/EQ/NE/ON/OF)   020870
GR04TLIT DS    CL11                LITERAL OPERAND                        020880
GR04TST2 DS    CL19                AS GR04TPOS - GR04TLIT                 020890
GR04TST3 DS    CL19                AS GR04TPOS - GR04TLIT                 020900
GR04LGTH EQU   *-GR04CARD          LENGTH OF DSECT                        020910
         MEND                                                             020920
./ ADD NAME=GR05                                                          020930
         MACRO                                                            020940
&NAME    GR05  &DUMMY                                                     020950
***********************************************************************   020960
*        FPRMAT OF GR05 CONTROL CARDS                                 *   020970
***********************************************************************   020980
         SPACE 1                                                          020990
*        SPECIFY DETAIL LEVEL REPORT ( BY MERE PRESENCE )                 021000
*        IDENTIFY DETAIL LEVEL NAME FIELD ( IF ANY )                      021010
         SPACE 1                                                          021020
GR05CARD DSECT                                                            021030
GR05ID   DS    CL4                 CARD ID ('GR05')                       021040
GR05POS  DS    CL3                 POSN OF DETAIL LEVEL NAME FIELD        021050
GR05LEN  DS    CL2                 LGTH OF DETAIL LEVEL NAME FIELD        021060
         DS    CL71                UNUSED                                 021070
GR05LGTH EQU   *-GR05CARD          LENGTH OF DSECT                        021080
         MEND                                                             021090
./ ADD NAME=GR06                                                          021100
         MACRO                                                            021110
&NAME    GR06  &DUMMY                                                     021120
***********************************************************************   021130
*        FORMAT OF GR06 CONTROL CARDS                                 *   021140
***********************************************************************   021150
         SPACE 1                                                          021160
*        DEFINE THE SORT FIELDS FOR THE INTERNAL SORT                     021170
         SPACE 1                                                          021180
GR06CARD DSECT                                                            021190
GR06ID   DS    CL4                 CARD ID ('GR06')                       021200
GR06SORT DS    CL76                SORT FIELDS STATEMENT                  021210
GR06LGTH EQU   *-GR06CARD          LENGTH OF DSECT                        021220
         MEND                                                             021230
./ ADD NAME=GR07                                                          021240
         MACRO                                                            021250
&NAME    GR07  &DUMMY                                                     021260
***********************************************************************   021270
*        FORMAT OF GR07 CONTROL CARD                                  *   021280
***********************************************************************   021290
         SPACE 1                                                          021300
*        SPECIFY CALCULATIONS                                             021310
         SPACE 1                                                          021320
GR07CARD DSECT                                                            021330
GR07ID   DS    CL4                 CARD ID ('GR07')                       021340
GR07FID  DS    CL2                 FIELD NAME OR STATEMENT LABEL          021350
GR07CALC DS    0CL73               ARITHMETIC EXPRESSION                  021360
GR07TEST DS    CL4                 TEST IDENTIFIER ('TEST')               021370
GR07FLD1 DS    CL2                 ID OF FIELD TO BE TEESTED              021380
GR07TTYP DS    CL2                 TEST TYPE (EQ/NE/LT/LE/GT/GE/ON/OF)    021390
GR07FLD2 DS    CL2                 ID OF COMPARAND                        021400
*                                   OR '$K' ( CURRENT KEY LEVEL )         021410
GR07FLD3 DS    CL2                 ID OF GR07 STATEMENT TO WHICH TO       021420
*                                   TRANSFER CONTROL IF TEST SATISFIED    021430
*                                   OR $1 -ACCUMULATE BUT DO NOT PRINT    021440
*                                   OR $2 - DO NOT ACCUMULATE OR PRINT    021450
GR07$LIT DS    CL61                LITERAL COMPARAND ( FOR $L )           021460
GR07TOTT DS    CL1                 PROCESSING TIME INDICATOR              021470
*                                   ' ' - PERFORM AT DETAIL TIME          021480
*                                   'D' - PERFORM AT DETAIL TIME          021490
*                                   'T' - PERFORM AT TOTAL TIME           021500
*                                   OR A/B/C/E PROCESSING TIME            021510
GR07LGTH EQU   *-GR07CARD          LENGTH OF DSECT                        021520
         SPACE 5                                                          021530
*        SPECIAL FUNCTION GR07 CARDS                                      021540
         SPACE 1                                                          021550
*        GR07LLDATEPPPTPPPT        CONVERT DATE FROM 1 FORMAT TO ANOTHE   021560
*        GR07LLTIMEPPP             CONVERT EBCDIC HHMM (IN PPP) TO MINU   021570
*        GR07LLAVE(XX)                                                    021580
*        GR07LLMAX(XX)                                                    021590
*        GR07LLMIN(XX)                                                    021600
*        GR07LLRMS(XX)             ROOT MEAN SQUARE                       021610
*        GR07LLSDEV(XX)            STANDARD DEVIATION                     021620
         SPACE 5                                                          021630
*        ANYTHING FOLLOWING A '/*' IS TREATED AS A COMMENT.               021640
         MEND                                                             021650
./ ADD NAME=GR08                                                          021660
         MACRO                                                            021670
&NAME    GR08 &DUMMY                                                      021680
***********************************************************************   021690
*        FORMAT OF GR08 CONTROL CARD                                  *   021700
***********************************************************************   021710
         SPACE 1                                                          021720
*        DEFINE PRINT LAYOUT IN BASIC BUDGIE                              021730
*        DEFINE FIELD TO BE TWENTY80 ANALYSED ( IF ANY )                  021740
         SPACE 1                                                          021750
GR08CARD DSECT                                                            021760
GR08ID   DS    CL4                 ('GR08')                               021770
GR08BSIC DS    0CL15               FLD DEF'NS FOR BASIC REPORT FORMAT     021780
GR08PRT1 DS    0CL3                DEFINITION OF 1ST PRINT FIELD          021790
GR08FID  DS    CL2                 FIELD IDENTIFIER                       021800
GR08NDEC DS    CL1                 NUMBER OF DECIMALS TO BE PRINTED       021810
GR08PRT2 DS    CL3                 AS GR08FID - GR08NDEC                  021820
GR08PRT3 DS    CL3                 AS GR08FID - GR08NDEC                  021830
GR08PRT4 DS    CL3                 AS GR08FID - GR08NDEC                  021840
GR08PRT5 DS    CL3                 AS GR08FID - GR08NDEC                  021850
GR08TW80 DS    CL2                 ID OF FIELD TO BE TWENTY80'ED          021860
GR08DESC DS    CL30                HEADING FOR TWENTY80 ANALYSIS          021870
GR08UNUS DS    CL24                UNUSED                                 021880
GR08XTRA DS    0CL5                EXTRA FIELDS, ONLY IF PARM=GR08XTRA    021890
GR08NOLO DS    CL1                 PRINT LOWER BOUND INDICATOR (Y/N/ )    021900
GR08RID  DS    CL2                 ID OF ASSOCIATED 'GR00' CARD           021910
GR08ACUM DS    CL2                 LABEL OF FIELD TO ACCUMULATE           021920
GR08LGTH EQU   *-GR08CARD          LRNGTH OF DSECT                        021930
         MEND                                                             021940
./ ADD NAME=GR09                                                          021950
         MACRO                                                            021960
&NAME    GR09  &DUMMY                                                     021970
***********************************************************************   021980
*        FORMAT OF GR09 CONTROL CARD                                  *   021990
***********************************************************************   022000
         SPACE 1                                                          022010
*        DESCRIBE BOUNDARY LEVELS FOR TWENTY80 ANALYSIS                   022020
         SPACE 1                                                          022030
GR09CARD DSECT                                                            022040
GR09ID   DS    CL4                 CARD ID ('GR09')                       022050
GR09UNUS DS    CL6                 UNUSED                                 022060
GR09VAL1 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022070
GR09VAL2 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022080
GR09VAL3 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022090
GR09VAL4 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022100
GR09VAL5 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022110
GR09VAL6 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022120
GR09VAL7 DS    CL10                SIGNED/UNSIGNED BOUNDARY VALUE OR BL   022130
GR09LGTH EQU   *-GR09CARD          LENGTH OF DSECT                        022140
         MEND                                                             022150
./ ADD NAME=GR10                                                          022160
         MACRO                                                            022170
&NAME    GR10  &DUMMY                                                     022180
***********************************************************************   022190
*        FORMAT OF GR10/11/12 CONTROL CARDS                           *   022200
***********************************************************************   022210
         SPACE 1                                                          022220
*        DEFINE PRINT FIELD CONTENTS                                      022230
         SPACE 1                                                          022240
GR10CARD DSECT                                                            022250
GR10ID   DS    CL4                 CARD ID ('GR10'/GR11'/'GR12')          022260
GR10KEYN DS    CL1                 KEY LEVEL TO WHICH THIS APPLIES        022270
GR10STRT DS    CL3                 START POSN IN PRINT LINE               022280
GR10END  DS    CL3                 END POSN IN PRINT LINE                 022290
GR10FLD  DS    CL5                 FIELD IDENTIFIER                       022300
*                                   GR04/GR07 ID                          022310
*                                   KEYN     ( N = 1 - 8 )                022320
*                                   CNTN     ( N = 1 - 8 )                022330
*                                   NAMEN    ( N = 1 - 8 )                022340
*                                   'DELET' (GR12 ONLY: SUPPRESS GRAND)   022350
*                                   NAME9 - DETAIL LEVEL NAME             022360
*                                   'LIT' - LITERAL VALUE SUPPLIED        022370
*                                   LINE+ - SKIP TO NEW LINE              022380
*                                   'GR11' - GR12 ONLY: TAKE GR11 VALUS   022390
GR10FMAT DS    CL1                 OUTPUT FORMAT                          022400
*                                   'X' - ALPHAMERIC, LEFT-ALIGNED        022410
*                                   '9' - NUMERIC, RIGTH-ALIGNED          022420
*                                   'Z' - NUMERIC, SUPPRESS LEADING 0'S   022430
*                                   ',' - EDITED NUMERIC                  022440
*                                   '$' - EDITED, WITH FLOATING $ SIGN    022450
*                                   'H' - HEXPANDED                       022460
*                                   'B' - PRINT AS BIT STRING             022470
*                                   'P' - PACKED DECIMAL                  022480
*                                   'D' - DISPLAY NUMERIC & SIGN OVERPU   022490
*                                   'F' - FLOATING POINT                  022500
*                                   '1' - BINARY                          022510
*                                   '1'/'2'/'3'/'E' - WITH LINE+ ONLY     022520
GR10NDEC DS    CL1                 NO OF DECIMAL PLACES TO BE PRINTED     022530
GR10PMOD DS    CL2                 PRINT MODIFIER                         022540
*                                   'ZZ' - PRINT ZERO VALUES              022550
*                                   'BL' OMIT IF SAME AS PRECEDING LINE   022560
GR10LIT  DS    0CL20               LITERAL VALUE ('LIT' ONLY)             022570
GR10DETL DS    CL4                 'DETL' - ALWAYS USE CURRENT DETL VAL   022580
         DS    CL16                UNUSED ( EXCEPT FOR 'LIT' SPEC'N )     022590
GR10IOLB DS    CL2                 LABEL OF ASSOCIATED GR00 CARD          022600
*                                  IF BLANK, THEN 'PRINT' IS DEFAULT      022610
GR10TST  DS    0CL19               OPTIONAL TEST TO MAKE FLD CONDITIANL   022620
GR10TPOS DS    CL3                 POSN OF FIE LD TO BE TESTED            022630
GR10TLEN DS    0CL2                LGTH OF FIE LD TO BE TESTED            022640
GR10TID  DS    CL2                  OR ID OF GR04/07 FLD TO BE TESTED     022650
GR10TTYP DS    CL1                 FIELD TYPE                             022660
*                                   ' '/N/P/C/X/B                         022670
GR10TTST DS    CL2                 TEST TYPE (GE/GT/LE/LT/EQ/NE/ON/OF)    022680
GR10TLIT DS    CL11                LITERAL COMPARAND                      022690
GR10TST2 DS    CL19                SECOND SELECTION CRITERION BUCKET      022700
GR10LGTH EQU   *-GR10CARD          LENGT OF DSECT                         022710
         MEND                                                             022720
./ ADD NAME=GR13                                                          022730
         MACRO                                                            022740
&NAME    GR13  &DUMMY                                                     022750
***********************************************************************   022760
*        FORMAT OF GR13 CONTROL CARD                                  *   022770
***********************************************************************   022780
         SPACE 1                                                          022790
*        DEFINE AN OPERATION / FUNCTION                                   022800
         SPACE 1                                                          022810
GR13CARD DSECT                                                            022820
GR13ID   DS    CL4                 CARD ID ( 'GR13' )                     022830
GR13OPCD DS    CL2                 OPERATION/FUNCTION CODE                022840
GR13OPCM DS    CL1                 OPERATION CODE MODIFIER                022850
*                                  (E.G. LANGUAGE FOR DATE CONVERSION)    022860
GR13LABL DS    CL2                 LABEL OF PRIMARY DESTINATION FIELD     022870
GR13PTYP DS    CL1                 PROCESSING TYPE INDICATOR (A,B, ETC)   022880
GR13IND  DS    CL2                 INDICATOR NUMBER                       022890
GR13LIT  DS    CL11                LITERAL VALUE                          022900
GR13TST1 DS    CL19                SELECTION CRITERION BUCKET             022910
GR13TST2 DS    CL19                SELECTION CRITERION BUCKET             022920
GR13TST3 DS    CL19                SELECTION CRITERION BUCKET             022930
GR13LGTH EQU   *-GR13CARD          LENGTH OF DSECT                        022940
         MEND                                                             022950
./ ADD NAME=GR40                                                          022960
         MACRO                                                            022970
&NAME    GR40  &DUMMY                                                     022980
***********************************************************************   022990
*        FORMAT OF GR40 CONTROL CARD                                  *   023000
***********************************************************************   023010
         SPACE 1                                                          023020
*        DEFINE THE START OF A SUB-ROUTINE OF GR07/13 CONTROL CARDS       023030
         SPACE 1                                                          023040
GR40CARD DSECT                                                            023050
GR40ID   DS    CL4                 CARD ID ( 'GR40' )                     023060
GR40FID  DS    CL2                 NAME OF SUB-ROUTINE                    023070
         DS    CL74                UNUSED                                 023080
GR40LGTH EQU   *-GR40CARD          LENGTH OF DSECT                        023090
         MEND                                                             023100
./ ADD NAME=GR41                                                          023110
         MACRO                                                            023120
&NAME    GR41  &DUMMY                                                     023130
***********************************************************************   023140
*        FORMAT OF GR41 CONTROL CARD                                  *   023150
***********************************************************************   023160
         SPACE 1                                                          023170
*        DEFINE THE END OF A SUB-ROUTINE OF GR07/13 CONTROL CARDS         023180
         SPACE 1                                                          023190
GR41CARD DSECT                                                            023200
GR41ID   DS    CL4                 CARD ID ( 'GR41' )                     023210
GR41FID  DS    CL2                 NAME OF SUB-ROUTINE                    023220
         DS    CL74                UNUSED                                 023230
GR41LGTH EQU   *-GR41CARD          LENGTH OF DSECT                        023240
         MEND                                                             023250
./ ADD NAME=GR90                                                          023260
         MACRO                                                            023270
&NAME    GR90  &DUMMY                                                     023280
***********************************************************************   023290
*        FORMAT OF GR90 CONTROL CARD                                  *   023300
***********************************************************************   023310
         SPACE 1                                                          023320
*        DEFINE THE REQUIRED STATE OF UP TO 40 INDICATORS ( SET BY THE    023330
*         PARM OF BY SYSINB INPUT ) TO MAKE THE INCLUSION OF THE FILLOW   023340
*         CONTROL CARDS CONDITIONAL AT EXECUTION TIME                     023350
         SPACE 1                                                          023360
GR90CARD DSECT                                                            023370
GR90ID   DS    CL4                 CARD ID ('GR90')                       023380
GR90UNU1 DS    CL6                 UNUSED                                 023390
GR90INDS DS    CL40                INDICATOR STATUS                       023400
*                                   'Y' - MUST BE ON ('Y')                023410
*                                   'N' - MUST BE OFF ('N')               023420
*                                   ' ' - MAY BE EITHER ON OR OFF         023430
GR90UNU2 DS    CL30                UNUSED                                 023440
GR90LGTH EQU   *-GR90CARD          LENGTH OF DSECT                        023450
         MEND                                                             023460
./ ADD NAME=GR91                                                          023470
         MACRO                                                            023480
&NAME    GR91  &DUMMY                                                     023490
***********************************************************************   023500
*        FPRMAT OF GR91 CONTROL CARD                                  *   023510
***********************************************************************   023520
         SPACE 1                                                          023530
*        DEFINE THE END OF A SET OF CONDITIONAL CONTROL CARDS             023540
         SPACE 1                                                          023550
GR91CARD DSECT                                                            023560
GR91ID   DS    CL4                 CARD ID ('GR91')                       023570
GR91UNUS DS    CL76                UNUSED                                 023580
GR91LGTH EQU   *-GR91CARD          LENGHT OF DSCET                        023590
         MEND                                                             023600
./ ADD NAME=GR92                                                          023610
         MACRO                                                            023620
&NAME    GR92  &DUMMY                                                     023630
***********************************************************************   023640
*        FORMAT OF GR92 CONTROL CARD                                  *   023650
***********************************************************************   023660
         SPACE 1                                                          023670
*        SPECIFY NAME OF MEMBER TO BE READ FROM SYSLIB                    023680
         SPACE 1                                                          023690
GR92CARD DSECT                                                            023700
GR92ID   DS    CL4                 CARD ID ( 'GR92' )                     023710
GR92NAME DS    CL8                 MEMBER NAME                            023720
GR92UNUS DS    CL68                UNUSED                                 023730
GR92LGTH EQU   *-GR92CARD          LENGTH OF DSECT                        023740
         MEND                                                             023750
./ ADD NAME=GR93                                                          023760
         MACRO                                                            023770
&NAME    GR93  &DUMMY                                                     023780
***********************************************************************   023790
*        FORMAT OF GR93 CONTROL CARD                                  *   023800
***********************************************************************   023810
         SPACE 1                                                          023820
*        SPECIFY STRING OF PARAMETER VALUES                               023830
         SPACE 1                                                          023840
*        ANY NUMBER OF GR93 CARDS MAY BE SUPPLIED, AND EACH MAY           023850
*         CONTAIN ONE OR MORE PARM VALUES SEPARATED BY COMMAS.  SINCE     023860
*         CONTROL CARDS ARE PROCESSED AFTER THE PARM STRING SUPPLIED      023870
*         IN THE EXEC STATEMENT, THESE VALUES OVERRIDE THE EXEC PARM.     023880
         SPACE 1                                                          023890
GR93CARD DSECT                                                            023900
GR93ID   DS    CL4                 CARD ID ( 'GR93' )                     023910
         DS    CL1                 UNUSED                                 023920
GR93PARM DS    CL74                PARM STRING                            023930
GR93DELM DS    CL1                 DELIMITER ( ' ' )                      023940
GR93LGTH EQU   *-GR93CARD          LENGTH OF DSECT                        023950
         MEND                                                             023960
./ ADD   NAME=GR94                                                        023970
         MACRO                                                            023980
&NAME    GR94  &DUMMY                                                     023990
***********************************************************************   024000
*        FORMAT OF GR94 CONTROL CARD                                  *   024010
***********************************************************************   024020
         SPACE 1                                                          024030
*        CONTAINS JCL FOR DYNAMIC ALLOCATION                              024040
         SPACE 1                                                          024050
GR94CARD DSECT                                                            024060
GR94CID  DS    CL4                 CARD ID ( 'GR94' )                     024070
GR94UNUS DS    CL1                 UNUSED                                 024080
GR94JCL  DS    CL75                JCL STATEMENT                          024090
GR94LGTH EQU   *-GR94CARD          LENGTH OF DSECT                        024100
         MEND                                                             024110
./ ADD NAME=GR99                                                          024120
         MACRO                                                            024130
&NAME    GR99  &DUMMY                                                     024140
***********************************************************************   024150
*        FORMAT OF GR99 CONTROL CARD                                  *   024160
***********************************************************************   024170
         SPACE 1                                                          024180
*        COMMENTS CARD                                                    024190
         SPACE 1                                                          024200
GR99CARD DSECT                                                            024210
GR99CID  DS    CL4                 CARD ID ('GR99')                       024220
GR99COMM DS    CL76                COMMENTS                               024230
GR99LGTH EQU   *-GR99CARD          LENGTH OG DSECT                        024240
         MEND                                                             024250
./ ADD NAME=SCBUCKET                                                      024260
         MACRO                                                            024270
&NAME SCBUCKET &DUMMY                                                     024280
***********************************************************************   024290
*        FORMAT OF SELECTION CRITERION 'BUCKET'                       *   024300
***********************************************************************   024310
         SPACE 1                                                          024320
*        THIS 'BUCKET' OF FIELDS OCCURS IN GR02/04/10/11/12 CARDS         024330
         SPACE 1                                                          024340
*        THE FIRST SIX BYTES ( PPPLL AND FIELD TYPE ) ALSO OCCURS IN      024350
*         GR03 KEY DEFINITION BUCKETS.                                    024360
         SPACE 1                                                          024370
TESTBKET DSECT                                                            024380
TESTPOS  DS    CL3                 POSN OF FIELD TO BE TESTED             024390
TESTLEN  DS    0CL2                LGTH OF FIELD TO BE TESTED             024400
TESTID   DS    CL2                  OR ID OF GR04/07 FLD TO BE TESTED     024410
*                                   ( GR10/11/12 CARDS ONLY )             024420
TESTTYP  DS    CL1                 TYPE OF FIELD                          024430
*                                   ' ' - UNPACKED NUMERIC                024440
*                                   'N' - UNPACKED NUMERIC                024450
*                                   'C' - CHARACTER                       024460
*                                   'P' - PACKED DECIMAL                  024470
*                                   'X' - HEXADECIMAL CONSTANT            024480
*                                   'B' - BIT STRING                      024490
*                                   'M' - PARTIAL (CHARACTER) MASK        024500
*                                   '1' - BINARY                          024510
*                                   'F' - FLOATING POINT                  024520
*                                   'S' - CHARACTER STRING                024530
*                                   'G' - FREE FORMAT DISPLAY NUMERIC     024540
TESTTEST DS    CL2                 TEST TYPE                              024550
*                                   (EQ/NE/GT/GE/LT/LE/ON/OF)             024560
TESTVALU DS    CL11                LITERAL COMPARAND VALUE                024570
*                                   NUMERIC: RIGHT-JUSTIFIED              024580
*                                   OTHER: ANY ALIGNMENT IN QUOTES        024590
TESTLGTH EQU   *-TESTBKET          LENGTH OF DSECT                        024600
         MEND                                                             024610
./ ADD NAME=IOM                                                           024620
         MACRO                                                            024630
&NAME    IOM   &SUBTYPE,&PARM1,&PARM2,&PARM3,&PARM4,                   *  024640
               &TYPE=,&LOOP=,&RTN=,&MSGID=,&AUTOPEN=                      024650
.*                                                                        024660
.*       EQUATES,MAXDD                                                    024670
.*                                                                        024680
.*       DCBSW,DDNAME,DCBNAME,INPUT ,MANDAT                               024690
.*       DCBSW,DDNAME,DCBNAME,OUTPUT,MANDAT                               024700
.*       DCBSW,DDNAME,DCBNAME,PRINT,MANDAT                                024710
.*                                                                        024720
.*       PUT,DCBSW,(REG),PRINT,LNECNT,RTN=HEADING                         024730
.*                                                                        024740
.*       PUTM,DCBSW,(REG)                                                 024750
.*                                                                        024760
.*       GET,DCBSW,(REG)                                                  024770
.*                                                                        024780
.*       GETM,DCBSW,(REG)                                                 024790
.*                                                                        024800
.*       OPEN,TYPE=DEF                                                    024810
.*       CLOSE,TYPE=DEF                                                   024820
.*       TIOTSCAN,TYPE=DEF                                                024830
.*                                                                        024840
.*       OPEN,DCBSW,NOREOPEN,LOOP=1,RTN=OPEN                              024850
.*       OPEN,DCBSW,NOREOPEN,LOOP=N,RTN=NAME                              024860
.*                                                                        024870
.*       CLOSE,DCBSW,LOOP=1,RTN=CLOSE                                     024880
.*       CLOSE,DCBSW,LOOP=N,RTN=NAME                                      024890
.*                                                                        024900
.*       TIOTSCAN,DCBSW,LOOP=1,RTN=TIOTSCAN                               024910
.*       TIOTSCAN,DCBSW,LOOP=N,RTN=NAME                                   024920
.*                                                                        024930
.*       SUMMARY,DCBSW,(REG),PRESENT,RTN=NAME,LOOP=N                      024940
.*                                                                        024950
.*       AUDIT,DCBSW,(REG),ENDJOB,RTN=NAME,LOOP=N                         024960
.*                                                                        024970
.*       EOF,DCBSW,BUFF-ADDR                                              024980
.*                                                                        024990
.*       BLKSZRTN,TYPE=DEF                                                025000
.*                                                                        025010
.*       IOERROR,(REG),PRINTRTN,EOJRTN,TYPE=DEF                           025020
.*                                                                        025030
.*       ISRANDOM,DCBSW-ADDR,KEY-ADDR                                     025040
.*                                                                        025050
         GBLC  &OPEN                                                      025060
         LCLA  &MAXDD                                                     025070
         LCLC  &BIT0,&BIT1,&DCB                                           025080
         LCLC  &BIT8                                                      025090
         LCLC  &B,&D                                                      025100
         LCLA  &BA,&DA                                                    025110
         LCLC  &LABEL,&RTNE,&REG                                          025120
         LCLC  &EOJRTNE                                                   025130
         LCLC  &LNECNT                                                    025140
.*                                                                        025150
.*                                                                        025160
.*       DETERMINE IF AUTOPEN WAS SPECIFIED                               025170
.*                                                                        025180
         AIF   ('&AUTOPEN' EQ '').A00                                     025190
&OPEN    SETC  'Y'                                                        025200
         AIF   ('&AUTOPEN' EQ 'YES').A00                                  025210
&OPEN    SETC  'N'                                                        025220
         AIF   ('&AUTOPEN' EQ 'NO').A00                                   025230
         MNOTE 1,'UNKNOWN ''AUTOPEN'' SPECIFICATION - TREATED AS NO'      025240
.A00     ANOP                                                             025250
         AIF   ('&SUBTYPE' NE 'EQUATES').B00                              025260
IOSWMAND EQU   128 0               DDNAME MANDATORY                       025270
IOSWINPT EQU   64 0                INPUT DATA SET (DEFAULT)               025280
IOSWOUTP EQU   191 0               OUTPUT DATA SET            (NI ONLY)   025290
IOSWPRES EQU   32 0                DDNAME PRESENT                         025300
IOSWOPEN EQU   16 0                DCB NOW OPEN                           025310
IOSWCLOS EQU   239 0               CLOSE DCB                  (NI ONLY)   025320
IOSWEOF  EQU   8 0                 EOF DETECTED                           025330
IOSWIOER EQU   4 0                 I/O ERROR DETECTED                     025340
IOSWOPNH EQU   2 0                 DCB HAS BEEN OPENED                    025350
IOSWEOP  EQU   1 0                 PRINT DATA SET WITH EOP ROUTINE        025360
IOPSSW   EQU   0                   DISPLACEMENT OF SWITCH BYTE            025370
IOPSEOD  EQU   1                   DISPLACEMENT OF EOD INDICATOR          025380
IOPSISI  EQU   2                   DISPLACEMENT OF IS STATUS FLAG         025390
IOPSDCB  EQU   4                   DISPLACEMENT OF DCB ADDRESS            025400
IOPSDDN  EQU   8                   DISPLACEMENT OF DDNAME                 025410
IOPSRECA EQU   16                  DISPLACEMENT OF RECORD ADDRESS         025420
IOPSRCNT EQU   20                  DISPLACEMENT OF RECORD COUNT           025430
IOPSR4SA EQU   24                  DISPLACEMENT OF R4 SAVE AREA           025440
IOPSLGTH EQU   28                  LENGTH OF DCBSW C/B                    025450
         AIF   ('&PARM1' EQ '').A02                                       025460
         AIF   (T'&PARM1 NE 'N').A01                                      025470
&MAXDD   SETA  &PARM1                                                     025480
IOMMAXDD EQU   &MAXDD 0            MAX NO. OF DD STATEMENTS               025490
         AGO   .A02                                                       025500
.A01     MNOTE 1,'MAX NO OF DD STATEMENTS IS NON-NUMERIC'                 025510
.A02     AIF   ('&PARM2' NE '').A03                                       025520
         AIF   ('&PARM3' NE '').A03                                       025530
         AIF   ('&PARM4' NE '').A03                                       025540
         AIF   ('&TYPE' NE '').A03                                        025550
         AIF   ('&LOOP' NE '').A03                                        025560
         AIF   ('&RTN' NE '').A03                                         025570
         AGO   .A04                                                       025580
.A03     MNOTE *,'THE SUPERFLUOUS OPERANDS CODED WERE IGNORED'            025590
.A04     MEXIT                                                            025600
.B00     AIF   ('&SUBTYPE' NE 'DCBSW').C00                                025610
         AIF   ('&PARM1' NE '').B01                                       025620
         MNOTE 16,'NO DDNAME SUPPLIED FOR DCBSW OPERATION'                025630
         MEXIT                                                            025640
.B01     AIF   ('&PARM2' NE '').B02                                       025650
&DCB     SETC  '&PARM1'                                                   025660
         MNOTE *,'NO DCB NAME SUPPLIED - DDNAME ASSUMED'                  025670
         AGO   .B03                                                       025680
.B02     ANOP                                                             025690
&DCB     SETC  '&PARM2'                                                   025700
.B03     ANOP                                                             025710
&BIT0    SETC  '0'                                                        025720
&BIT1    SETC  '1'                                                        025730
&BIT8    SETC  '0'                                                        025740
         AIF   ('&PARM3' EQ '').B04                                       025750
         AIF   ('&PARM3' EQ 'INPUT').B05                                  025760
         AIF   ('&PARM3' EQ 'PRINT').B20                                  025770
         AIF   ('&PARM3' NE 'OUTPUT').B10                                 025780
&BIT1    SETC  '0'                                                        025790
         AGO   .B05                                                       025800
.B20     ANOP                                                             025810
&BIT8    SETC  '1'                                                        025820
&BIT1    SETC  '0'                                                        025830
         AGO   .B05                                                       025840
.B04     MNOTE *,'I/O TYPE NOT SPECIFIED - INPUT ASSUMED'                 025850
.B05     AIF   ('&PARM4' EQ '').B06                                       025860
         AIF   ('&PARM4' NE 'MANDAT').B10                                 025870
&BIT0    SETC  '1'                                                        025880
         AGO   .B07                                                       025890
.B06     MNOTE *,'DD STATEMENT IS OPTIONAL'                               025900
.B07     ANOP                                                             025910
&B       SETC  '00000'                                                    025920
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT               025930
&B       SETC  '&BIT0&BIT1.00000&BIT8'                                    025940
&NAME    DC    B'&B',C'X  ',V(&DCB),CL8'&PARM1',A(0),PL4'0',A(0)          025950
         AIF   ('&TYPE' NE '').A03                                        025960
         AIF   ('&LOOP' NE '').A03                                        025970
         AIF   ('&RTN' NE '').A03                                         025980
         MEXIT                                                            025990
.B10     MNOTE 16,'UNKNOWN POSITIONAL PARAMETER'                          026000
         MEXIT                                                            026010
.*                                                                        026020
.*                                                                        026030
.*       IOM   PUT,DCBSW (,(REG) (,PRINT) (,LNECNT) (,RTN=HEADING)        026040
.*                                                                        026050
.*       IOM   GET,DCBSW (,(REG))                                         026060
.*                                                                        026070
.C00     AIF   ('&SUBTYPE' EQ 'PUT').C01                                  026080
         AIF   ('&SUBTYPE' NE 'GET').D00                                  026090
.C01     AIF   ('&PARM1' NE '').C021                                      026100
.C011    MNOTE 16,'MANDATORY DCBSW ADDRESS NOT SUPPLIED'                  026110
         MEXIT                                                            026120
.C021    ANOP                                                             026130
&NAME    TM    &PARM1.+IOPSSW,IOSWPRES 0IS DD STATEMENT PRESENT           026140
         BZ    IOMC&SYSNDX 0       BYPASS I/O IF NO DD STATEMENT          026150
         AIF   ('&OPEN' EQ 'N').C100                                      026160
         TM    &PARM1.+IOPSSW,IOSWOPEN 0 TEST IF DCB OPEN                 026170
         BO    IOME&SYSNDX 0       BRANCH IF OPEN                         026180
         ST    R4,&PARM1.+IOPSR4SA 0 PRESERVE R4 RETUR  ADDRESS           026190
         LA    R2,&PARM1           POINT R2 AT DCBSW                      026200
         CBAL  R4,OPEN,LOOP=NO     OPEN DATA SET                          026210
         L     R4,&PARM1.+IOPSR4SA 0 RESTORE SAVED R4 VALUE               026220
IOME&SYSNDX EQU * 0                BYPASS OPEN PROCESSING                 026230
.C100    ANOP                                                             026240
         AIF   ('&SUBTYPE' NE 'GET').C023                                 026250
         TM    &PARM1.+IOPSSW,IOSWEOF 0TEST FOR END OF FILE ALREADY       026260
         BO    IOMC&SYSNDX 0       BR IF EOF ALREADY REACHED              026270
.C023    ANOP                                                             026280
         AIF   ('&SUBTYPE' NE 'PUTM').C024                                026290
         LR    R0,&REG             POINT R0 AT DATA                       026300
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS                026310
         L     R15,48(0,R1)        LOAD PUT ROUTINE ADDRESS               026320
         BALR  R14,R15             LINK TO PUT ROUTINE                    026330
         AGO   .C05                                                       026340
.C024    ANOP                                                             026350
         AIF   ('&SUBTYPE' NE 'GETM').C025                                026360
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS                026370
         LR    R0,&REG             POINT R0 AT DESTINATION                026380
         L     R15,48(0,R1)        LOAD GET ROUTINE ADDRESS               026390
         BALR  R14,R15             LINK TO GET ROUTINE                    026400
         AGO   .C05                                                       026410
.C025    ANOP                                                             026420
         AIF   ('&PARM3' NE 'PRINT' OR '&RTN' NE'').C022                  026430
IOMD&SYSNDX EQU * 0                LOOP BACK FOR EOP POOCESSING           026440
.C022    ANOP                                                             026450
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS                026460
         L     R15,48(,R1) 0       GET I/O RTN ADDRESS                    026470
         BALR  R14,R15             LINK TO I/O ROUTINE                    026480
         ST    R1,&PARM1.+IOPSRECA STORE BUFFER ADDRESS                   026490
         AIF   ('&PARM2' EQ '').C05                                       026500
         AIF   ('&PARM2'(1,1) EQ '(').C04                                 026510
.C031    MNOTE 16,'INVALID REGISTER SPECIFICATION FOR &SUBTYPE'           026520
         MEXIT                                                            026530
.C04     LR    &PARM2(1),R1 0      SET BUFFER ADDRESS IN WORK REGISTER    026540
.C05     AP    &PARM1.+IOPSRCNT(4),=P'1' 0 INCREMENT RECORD COUNT         026550
         AIF   ('&PARM3' NE 'PRINT').C9                                   026560
&LNECNT  SETC  '&PARM4'                                                   026570
         AIF   ('&PARM4' NE '').C6                                        026580
         MNOTE *,'NO LINE COUNT SUPPLIED - 60 ASSUMED'                    026590
         CP    &PARM1.+IOPSRCNT(4),=P'60' TEST FOR END OF PAGE            026600
         AGO   .C63                                                       026610
.C6      ANOP                                                             026620
         AIF   (T'&PARM4 EQ 'N').C62                                      026630
         CP    &PARM1.+IOPSRCNT(4),&PARM4 TEST FOR END OF PAGE            026640
         AGO   .C63                                                       026650
.C62     CP    &PARM1.+IOPSRCNT(4),=P'&LNECNT' 0TEST FOR END OF PAGE      026660
.C63     BL    IOMC&SYSNDX 0       BRANCH IF NOT                          026670
         ZAP   &PARM1.+IOPSRCNT(4),=P'0' 0 ZEROISE LINE COUNT             026680
         AIF   ('&RTN' NE '').C7                                          026690
         MNOTE *,'NO EOP ROUTINE SUPPLIED - PAGE SKIP FORCED'             026700
         MVI   0(R1),PAGESKIP 0    ESTABLISH PAGE SKIP                    026710
         B     IOMD&SYSNDX 0       SKIP TO NEW PAGE                       026720
IOMC&SYSNDX EQU * 0                END OF ROUTINE                         026730
.C8      AIF   ('&TYPE' NE '').A03                                        026740
         AIF   ('&LOOP' NE '').A03                                        026750
         MEXIT                                                            026760
.C7      ST    R4,IOMD&SYSNDX 0    PRESERVE RETURN ADDRESS                026770
         CBAL  R4,&RTN,LOOP=NO     PERFORM HEADING ROUTINE                026780
         L     R4,IOMD&SYSNDX 0    RESTORE RETURN ADDRESS                 026790
         B     IOMC&SYSNDX 0       BRANCH OVER SAVE AREA                  026800
IOMD&SYSNDX DS F 0                 SAVE AREA FOR R4                       026810
IOMC&SYSNDX EQU * 0                END OF ROUTINE                         026820
         AGO   .C8                                                        026830
.C9      ANOP                                                             026840
IOMC&SYSNDX EQU * 0                 END OF ROUTINE                        026850
         AIF   ('&PARM3' NE '').A03                                       026860
         AIF   ('&PARM4' NE '').A03                                       026870
         AIF   ('&TYPE' NE '').A03                                        026880
         AIF   ('&LOOP' NE '').A03                                        026890
         AIF   ('&RTN' NE '').A03                                         026900
         MEXIT                                                            026910
.D00     AIF   ('&SUBTYPE' NE 'OPEN').E00                                 026920
         AIF   ('&TYPE' EQ '').D04                                        026930
         AIF   ('&TYPE' EQ 'DEF').D02                                     026940
.D01     MNOTE 16,'UNKNOWN TYPE OPERAND'                                  026950
         MEXIT                                                            026960
.*                                                                        026970
.*                                                                        026980
.*       IOM   OPEN,DCBSW-ADDR, (,NOREOPEN) (,LOOP=N) (,RTN=AAA)          026990
.*                                                                        027000
.D02     ANOP                                                             027010
&LABEL   SETC  'OPEN'                                                     027020
         AIF   ('&NAME' EQ '').D03                                        027030
&LABEL   SETC  '&NAME'                                                    027040
.D03     ANOP                                                             027050
&LABEL   DS    0H 0                ENTRY TO OPEN SUBROUTINE               027060
         L     R1,IOPSDCB(,R2) 0   GET DCB ADDRESS                        027070
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT           027080
         BNO   0(R4) 0             RETURN IF NOT                          027090
         TM    IOPSSW(R2),IOSWOPEN 0 TEST IF DATA SET OPEN                027100
         BO    0(R4) 0             RETURN IF DATA STE OPEN                027110
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT               027120
         ST    R1,*+8 0            STORE DCB ADDRESS                      027130
         BAL   R1,*+8              LOAD REG 1 WITH LIST ADDRESS           027140
         DC    A(0) 0              DCB ADDRESS                            027150
         TM    IOPSSW(R2),IOSWINPT 0 TEST IF INPUT                        027160
         BO    IOMD&SYSNDX 0       BRANCH IF YES                          027170
         MVI   0(R1),143 0         SET OPTION BYTE FOR INPUT              027180
         B     *+8 0               GO TO SVC                              027190
IOMD&SYSNDX MVI 0(R1),128          SET OPTION BYTE                        027200
         SVC   19 0                ISSUE OPEN SVC                         027210
         OI IOPSSW(R2),IOSWOPEN+IOSWOPNH INDICATE DATA SET OPEN           027220
         MVI   IOPSEOD(R2),C'X'    RESET EOD INDICATOR IF NECESSARY       027230
         BR    R4 0                RETURN TO MAIN-LINE                    027240
.D031    AIF   ('&PARM1' NE '').A03                                       027250
         AIF   ('&PARM2' NE '').A03                                       027260
         AIF   ('&PARM3' NE '').A03                                       027270
         AIF   ('&PARM4' NE '').A03                                       027280
         AIF   ('&LOOP' NE '').A03                                        027290
         AIF   ('&RTN' NE '').A03                                         027300
         MEXIT                                                            027310
.D04     AIF   ('&PARM1' EQ '').C011                                      027320
         AIF   ('&LOOP' EQ '').D05                                        027330
&NAME    LA    R10,&LOOP 0         ESTABLISH LOOP                         027340
.D05     ANOP                                                             027350
&LABEL   SETC  '&NAME'                                                    027360
         AIF   ('&LOOP' EQ '').D06                                        027370
&LABEL   SETC  ' '                                                        027380
.D06     ANOP                                                             027390
&LABEL   LA    R2,&PARM1 0         POINT AT DCBSW                         027400
         AIF   ('&RTN' EQ '').D07                                         027410
&RTNE    SETC  '&RTN'                                                     027420
         AGO   .D09                                                       027430
.D07     AIF   ('&SUBTYPE' EQ 'CLOSE').D08                                027440
&RTNE    SETC  'OPEN'                                                     027450
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                                 027460
&RTNE    SETC  'TIOTSCAN'                                                 027470
         AGO   .D09                                                       027480
.D08     ANOP                                                             027490
&RTNE    SETC  'CLOSE'                                                    027500
.D09     ANOP                                                             027510
         AIF   ('&PARM2' NE 'NOREOPEN').D081                              027520
         TM    IOPSSW(R2),IOSWOPNH TEST IF OPENED ALREADY                 027530
         BO    IOME&SYSNDX         BR IF ALREADY OPENED ONCE              027540
.D081    ANOP                                                             027550
IOMD&SYSNDX CBAL R4,&RTNE 0        PERFORM SUB-ROUTINE                    027560
IOME&SYSNDX    EQU *               CONTINUE PROCESSING                    027570
         AIF   ('&LOOP' EQ '').D10                                        027580
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW                027590
         BCT   R10,IOMD&SYSNDX 0   LOOP BACK TO PROCESS NEXT              027600
.D10     AIF   ('&PARM2' NE '').A03                                       027610
         AIF   ('&PARM3' NE '').A03                                       027620
         AIF   ('&PARM4' NE '').A03                                       027630
         MEXIT                                                            027640
.E00     AIF   ('&SUBTYPE' NE 'CLOSE').F00                                027650
         AIF   ('&TYPE' EQ 'DEF').E01                                     027660
         AIF   ('&TYPE' EQ '').D04                                        027670
         AGO   .D01                                                       027680
.E01     ANOP                                                             027690
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                                 027700
&RTNE    SETC  'TIOTSCAN'                                                 027710
&LABEL   SETC  'CLOSE'                                                    027720
         AIF   ('&NAME' EQ '').E02                                        027730
&LABEL   SETC  '&NAME'                                                    027740
.E02     ANOP                                                             027750
&LABEL   DS    0H 0                ENTRY TO CLOSE SUBROUTINE              027760
         TM    IOPSSW(R2),IOSWOPEN TEST IF DATA SET OPEN                  027770
         BZ    0(R4) 0             RETURN IF NOT                          027780
         L     R1,IOPSDCB(R2) 0    GET DCB ADDRESS                        027790
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT               027800
         ST    R1,*+8 0            STORE DCB ADDRESS                      027810
         BAL   R1,*+8              POINT R1 AT PARM LIST                  027820
         DC    A(0) 0              DCB ADDRESS                            027830
         MVI   0(R1),128 0         SET OPTION BYTE                        027840
         SVC   20 0                ISSUE CLOSE SVC                        027850
         L     R1,IOPSDCB(R2)      GET DCB ADDRESS                        027860
       FREEPOOL (R1)               FREE ACQUIRED BUFFER POOL              027870
         NI    IOPSSW(R2),IOSWCLOS INDICATE CLOSED                        027880
         BR    R4 0                RETURN TO MAIN-LINE                    027890
         AIF   ('&PARM1' NE '').A03                                       027900
         AIF   ('&PARM2' NE '').A03                                       027910
         AIF   ('&PARM3' NE '').A03                                       027920
         AIF   ('&PARM4' NE '').A03                                       027930
         AIF   ('&LOOP' NE '').A03                                        027940
         AIF   ('&RTN' NE '').A03                                         027950
         MEXIT                                                            027960
.*                                                                        027970
.*                                                                        027980
.*       IOM   EOF,DCBSW-NAME (,DUMMY BUFFER ADDRESS)                     027990
.*                                                                        028000
.F00     AIF   ('&SUBTYPE' NE 'EOF').G00                                  028010
         AIF   ('&PARM1' EQ '').C011                                      028020
&NAME    OI    &PARM1.+IOPSSW,IOSWEOF INDICATE EOF                        028030
         MVI   &PARM1.+IOPSEOD,C'Y' SET CHARACTER FOR EOF INDICATION      028040
         AIF   ('&PARM2' EQ '').F01                                       028050
         L     R1,&PARM2           POINT R1 AT DUMMY BUFFER               028060
         ST    R1,&PARM1.+IOPSRECA 0PRESERVE DUMMY BUFFER ADDRESS         028070
         AGO   .F02                                                       028080
.F01     XC    &PARM1.+IOPSRECA(4),&PARM1.+IOPSRECA NULLIFY RECORD ADD    028090
.F02     ANOP                                                             028100
         AGO   .A02                                                       028110
.G00     AIF   ('&SUBTYPE' NE 'TIOTSCAN').H00                             028120
         AIF   ('&TYPE' EQ 'DEF').G01                                     028130
         AIF   ('&TYPE' NE '').D01                                        028140
         AGO   .D04                                                       028150
.G01     ANOP                                                             028160
&LABEL   SETC  'TIOTSCAN'                                                 028170
         AIF   ('&NAME' EQ '').G02                                        028180
&LABEL   SETC  '&NAME'                                                    028190
.G02     ANOP                                                             028200
&LABEL   DS    0H 0                ENTRY TO TIOT SCAN ROUTINE             028210
*                                                                         028220
*        EXTRACT TIOT ADDRESS EVERY TIME LEST TIOT ALTERED BY             028230
*         DYNAMICALLY ALLOCATED DD STATEMENTS.                            028240
*                                                                         028250
         EXTRACT IOMATIOT,'S',FIELDS=TIOT  OBTAIN ADDRESS OF TOOT         028260
         B     IOMG&SYSNDX         BRANCH AROUND SAVE AREAS               028270
IOMATIOT DS    F 0                 ADDRESS OF TIOT                        028280
IOMTIOT1 DS    F 0                 SAVE AREA FOR R3                       028290
IOMTIOT2 DS    F 0                 SAVE AREA FOR R10                      028300
IOMG&SYSNDX EQU * 0                SUBSEQUENT PROCESSING                  028310
         ST    R3,IOMTIOT1 0       PRESERVE CONTENTS                      028320
         ST    R10,IOMTIOT2 0       OF R3 AND R10                         028330
         L     R3,IOMATIOT 0       GET ADDRESS OF TIOT                    028340
         LA    R3,24(,R3) 0        POINT AT FIRST DD ENTRY                028350
IOMH&SYSNDX CLC 0(4,R3),=F'0' 0     TEST FOR END OF TIOT                  028360
         BE    IOMI&SYSNDX.+4      RETURN IF YES                          028370
         CLC   4(8,R3),IOPSDDN(R2) TEST FOR DDNAME MATCH                  028380
         BE    IOMI&SYSNDX 0       BRANCH IF YES                          028390
         SR    R10,R10 0           ZEROISE WORK REGISTER                  028400
         IC    R10,0(R3) 0         INSERT ENTRY LENGTH                    028410
         AR    R3,R10 0            INCREMENT TO NEXT ENTRY                028420
         B     IOMH&SYSNDX 0       LOOP TO PROCESS NEXT ENTRY             028430
IOMI&SYSNDX OI IOPSSW(R2),IOSWPRES INDICATE DD STATEMENT PRESENT          028440
         L     R3,IOMTIOT1 0       RETRIEVE CONTENTS                      028450
         L     R10,IOMTIOT2 0       OF R3 AND R10                         028460
         BR    R4 0                RETURN TO MAIN LINE                    028470
         AGO   .D031                                                      028480
.H00     AIF   ('&SUBTYPE' NE 'BLKSZRTN').I00                             028490
         AIF   ('&TYPE' EQ 'DEF').H02                                     028500
         AIF   ('&TYPE' NE '').D01                                        028510
         MNOTE 16,'INCOMPLETE BLKSIZE REQUEST'                            028520
         MEXIT                                                            028530
.H02     ANOP                                                             028540
&LABEL   SETC  'BLKSZRTN'                                                 028550
         AIF   ('&NAME' EQ '').H01                                        028560
&LABEL   SETC  '&NAME'                                                    028570
.H01     ANOP                                                             028580
&LABEL   DS    0H 0                SUPPLY DEFAULT IF NO BLOCK SIZE        028590
         USING IHADCB,R1 0         ESTABLISH DCB ADDRESSABILITY           028600
         CLC   DCBBLKSI,=F'0' 0    TEST IF BLKSIZE SUPPLIED               028610
         BNE   0(R14) 0            RETURN TO OPEN IF YES                  028620
         MVC   DCBBLKSI,DCBLRECL 0 MOVE LRECL TO BLKSIZE                  028630
         BR    R14 0               RETURN TO OS OPEN ROUTINE              028640
         DROP  R1 0                DROP DCB ADDRESSABILITY                028650
         AGO   .D031                                                      028660
.*                                                                        028670
.*                                                                        028680
.*       IOM   SUMMARY,DCBSW-ADDR,(REG),RTN= (,MSGID=)                    028690
.*                                                                        028700
.I00     AIF   ('&SUBTYPE' NE 'SUMMARY').J00                              028710
         AIF   ('&PARM1' EQ '').C011                                      028720
         AIF   ('&PARM2' NE '').I01                                       028730
.I001    MNOTE 16,'MANDATORY REGISTER SPECIFICATION IS MISSING'           028740
         MEXIT                                                            028750
.I01     AIF   ('&PARM2'(1,1) NE '(').C031                                028760
         AIF   ('&RTN' NE '').I02                                         028770
.I011    MNOTE 16,'MANDATORY RTN NAME IS MISSING'                         028780
         MEXIT                                                            028790
.I02     ANOP                                                             028800
&NAME    DS    0H 0                PRINT SUMMARY OF D/S ACTIVITY          028810
         LA    R2,&PARM1 0         GET DCBSW ADDRESS                      028820
         AIF   ('&LOOP' EQ '').I03                                        028830
         LA    R10,&LOOP 0         ESTABLISH LOOP                         028840
IOMI&SYSNDX EQU * 0                RETURN POINT FOR LOOP                  028850
.I03     AIF   ('&PARM3' EQ '').I05                                       028860
         AIF   ('&PARM3' NE 'PRESENT').B10                                028870
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT           028880
         BZ    IOMJ&SYSNDX 0       BYPASS PROCESSING IF NOT               028890
.I05     ANOP                                                             028900
&REG     SETC  '&PARM2(1)'                                                028910
         TM    IOPSSW(R2),IOSWEOP  TEST IF PRINT DATA SET                 028920
         BO    IOMJ&SYSNDX         BYPASS PROCESSING IF YES               028930
&BA      SETA  0                                                          028940
         AIF   ('&MSGID' EQ '').I10                                       028950
&BA      SETA  K'&MSGID                                                   028960
         AIF   ('&MSGID'(1,1) NE '''').I30                                028970
&BA      SETA  &BA-2                                                      028980
.I30     ANOP                                                             028990
         AIF   ('&MSGID'(1,1) NE '''').I20                                029000
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE               029010
         AGO   .I21                                                       029020
.I20     ANOP                                                             029030
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE              029040
.I21     ANOP                                                             029050
&BA      SETA  &BA+2                                                      029060
.I10     ANOP                                                             029070
&DA      SETA  &BA+5                                                      029080
         MVC   &DA.(18,&REG),=C'NUMBER OF RECORDS ' ADD MESSSAGE TO BUF   029090
&DA      SETA  &BA+23                                                     029100
         MVC   &DA.(11,&REG),=C'READ FROM  ' ADD FUTHER MESSAGE           029110
         TM    IOPSSW(R2),IOSWINPT TEST IF INPUT DATA SET                 029120
         BO    *+10                BR IF INPUT                            029130
         MVC   &DA.(11,&REG),=C'WRITTEN TO ' SHOW WHITTEN TO NOT READ     029140
&DA      SETA  &BA+34                                                     029150
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DNAME TO MESSAGE              029160
&DA      SETA  &BA+42                                                     029170
         MVC   &DA.(2,&REG),=C' =' ADD EQUALS SIGN TO MESSGGE             029180
&DA      SETA  &BA+44                                                     029190
         MVC   &DA.(10,&REG),=X'40206B2020206B202120' EDIT MASK TO MSG    029200
         ED    &DA.(10,&REG),IOPSRCNT(R2) EDIT THE RECORD COUNT           029210
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                  029220
IOMJ&SYSNDX EQU * 0                BYPASS BRANCH ADDRESS                  029230
.I06     AIF   ('&LOOP' EQ '').I07                                        029240
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW                029250
         BCT   R10,IOMI&SYSNDX 0   LOOP TO PROCESS NEXT                   029260
.I07     AIF   ('&PARM4' NE '').A03                                       029270
         AIF   ('&TYPE' NE '').A03                                        029280
         MEXIT                                                            029290
.*                                                                        029300
.*                                                                        029310
.*       IOM   AUDIT,DCBSW-ADDR,(REG),EOJRTN,RTN= (,MSGID=)               029320
.*                                                                        029330
.J00     AIF   ('&SUBTYPE' NE 'AUDIT').K00                                029340
         AIF   ('&PARM1' EQ '').C011                                      029350
         AIF   ('&PARM3' NE '').J001                                      029360
         MNOTE *,'NO END-OF-JOB ROUTINE ADDRESS SUPPLIED'                 029370
         MNOTE *,'PROGRAM WILL ABEND WITH 0C1 IF MANDATORY STATEMENT MI$  029380
               SSING'                                                     029390
.J001    ANOP                                                             029400
         AIF   ('&PARM2' EQ '').I001                                      029410
         AIF   ('&PARM2'(1,1) NE '(').C031                                029420
         AIF   ('&RTN' EQ '').I011                                        029430
&NAME    DS    0H 0                REPORT ON PRESENCE OF DD STATEMENTS    029440
         LA    R2,&PARM1           GET DCBSW ADDRESS                      029450
         AIF   ('&LOOP' EQ '').J01                                        029460
         LA    R10,&LOOP 0         ESTABLISH LOOP                         029470
IOMJ&SYSNDX EQU * 0                RETURN POINT FOR LOOP                  029480
.J01     ANOP                                                             029490
&REG     SETC  '&PARM2(1)'                                                029500
&BA      SETA  0                                                          029510
         AIF   ('&MSGID' EQ '').J10                                       029520
&BA      SETA  K'&MSGID                                                   029530
         AIF   ('&MSGID'(1,1) NE '''').J30                                029540
&BA      SETA  &BA-2                                                      029550
.J30     ANOP                                                             029560
         AIF   ('&MSGID'(1,1) NE '''').J20                                029570
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE               029580
         AGO   .J21                                                       029590
.J20     ANOP                                                             029600
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE              029610
.J21     ANOP                                                             029620
&BA      SETA  &BA+2                                                      029630
.J10     ANOP                                                             029640
&DA      SETA  &BA+5                                                      029650
         MVC   &DA.(35,&REG),=C'MANDATORY DATA SET          PRESENT'      029660
&DA      SETA  &BA+24                                                     029670
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DDNAME TO MESSAGE             029680
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                      029690
         BO    *+10 0              BRANCH IF YES                          029700
&DA      SETA  &BA+5                                                      029710
         MVC   &DA.(9,&REG),=C' OPTIONAL' SHOW DATA SET IS OPTIONAL       029720
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                        029730
         BO    *+10 0              BRANCH IF YES                          029740
&DA      SETA  &BA+33                                                     029750
         MVC   &DA.(7,&REG),=C'MISSING' SHOW DATA SET IS MISSING          029760
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                  029770
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                      029780
         BZ    IOMK&SYSNDX 0       BRANCH IF NOT                          029790
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                        029800
         BO    IOMK&SYSNDX 0       BRANCH IF YES                          029810
         OI    IOML&SYSNDX.+1,X'F0' 0    SET TO BRANCH AT END OF JOB      029820
         MVC   IOMM&SYSNDX.+27(8),IOPSDDN(R2) ADD DD NAME TO WRO          029830
IOMM&SYSNDX WTO 'MANDATORY DATA SET ******** MISSING'                     029840
IOMK&SYSNDX EQU * 0                                                       029850
         AIF   ('&LOOP' EQ '').J02                                        029860
         LA    R2,IOPSLGTH(,R2) 0  POINT AT NEXT DCBSW                    029870
         BCT   R10,IOMJ&SYSNDX 0   LOOP BACK TO PROCESS                   029880
.J02     ANOP                                                             029890
&RTNE    SETC  '*+2'                                                      029900
         AIF   ('&PARM3' NE '').J03                                       029910
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED'                         029920
         AGO   .J04                                                       029930
.J03     ANOP                                                             029940
&RTNE    SETC  '&PARM3'                                                   029950
.J04     ANOP                                                             029960
IOML&SYSNDX BC 0,&RTNE 0           GO TO END-OF-JOB IF MAND MISSING       029970
         AGO   .I07                                                       029980
.*                                                                        029990
.*                                                                        030000
.*       IOM   IOERROR,(REG),PRINTRTN,EOJRTN,MSGID=TEXT' (,TYPE=DEF)      030010
.*                                                                        030020
.K00     AIF   ('&SUBTYPE' NE 'IOERROR').L00                              030030
         AIF   ('&TYPE' EQ 'DEF').K01                                     030040
         AIF   ('&TYPE' NE '').D01                                        030050
         MNOTE 16,'INVALID I/O ERROR REQUEST'                             030060
         MEXIT                                                            030070
.K01     ANOP                                                             030080
&RTNE    SETC  'PRINT'                                                    030090
&EOJRTNE SETC  'PRINTCDE'                                                 030100
&REG     SETC  'R5'                                                       030110
&LABEL   SETC  'IOERROR'                                                  030120
         AIF   ('&NAME' EQ '').K02                                        030130
&LABEL   SETC  '&NAME'                                                    030140
.K02     AIF   ('&PARM3' NE '').K03                                       030150
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED - ''PRINTCDE'' ASSUMD'   030160
         AGO   .K04                                                       030170
.K03     ANOP                                                             030180
&EOJRTNE SETC  '&PARM3'                                                   030190
.K04     AIF   ('&PARM2' NE '').K05                                       030200
         MNOTE *,'NO PRINT ROUTINE ADDRESS - ''PRINT'' ASSUMED'           030210
         AGO   .K06                                                       030220
.K05     ANOP                                                             030230
&RTNE    SETC  '&PARM2'                                                   030240
.K06     AIF   ('&PARM1' EQ '').K07                                       030250
         AIF   ('&PARM1'(1,1) NE '(').C031                                030260
&REG     SETC  '&PARM1(1)'                                                030270
         AGO   .K08                                                       030280
.K07     MNOTE *,'NO REGISTER SPECIFIED - R5 ASSUMED'                     030290
.K08     ANOP                                                             030300
&LABEL   DS    0H 0                ENSURE ALIGNMENT                       030310
        SYNADAF ACSMETH=QSAM 0     CALL ANALYSIS ROUTINE                  030320
         MVC   IOMM&SYSNDX,50(R1) ADD RESULT OF ANALYSIS                  030330
        SYNADRLS , 0               RELEASE OS BUFFER                      030340
         WTO   MF=(E,IOML&SYSNDX) 0TELL OPERATOR OF ERROR                 030350
         MVI   0(&REG),SPCE2AFT 0  ESTABLISH DOUBLE BLANK LINES           030360
         CBAL  R4,&RTNE,LOOP=NO     AND WRITE THEM                        030370
         MVC   5(98,&REG),IOMM&SYSNDX 0 MOVE IN ERROR MESSAGE             030380
         CBAL  R4,&RTNE,LOOP=NO    WRITE ERROR MESSAGE                    030390
        SUBOUT RETURN=&EOJRTNE 0   TERMINATE JOB                          030400
         SPACE 1                                                          030410
IOML&SYSNDX DS 0F                                                         030420
         DC    AL2(IOMN&SYSNDX.-*),AL2(0)                                 030430
         AIF   ('&MSGID' EQ '').K09                                       030440
         DC    C&MSGID             MESSAGE IDENTIFIER                     030450
.K09     DC    C'I/O ERROR - '                                            030460
IOMM&SYSNDX DC CL86' '             TEXT OF ERROR ANALYSIS                 030470
IOMN&SYSNDX EQU *                  END OF I/O ERROR MESSAGE               030480
         MEXIT                                                            030490
.L00     AIF   ('&SUBTYPE' NE 'PUTM').M00                                 030500
.L01     ANOP                                                             030510
         AIF   ('&PARM1' EQ '').C011                                      030520
&REG     SETC  'R1'                                                       030530
         AIF   ('&PARM2' EQ '').C021                                      030540
         AIF   ('&PARM2'(1,1) NE '(').C031                                030550
&REG     SETC  '&PARM2(1)'                                                030560
         AGO   .C021                                                      030570
.M00     AIF   ('&SUBTYPE' EQ 'GETM').L01                                 030580
.N00     AIF   ('&SUBTYPE' NE 'ISRANDOM').O00                             030590
.*                                                                        030600
.*                                                                        030610
.*       IOM   ISRANDOM,DCBSW-ADDR,KEY-ADDR                               030620
.*                                                                        030630
&NAME    LA    R2,&PARM1           POINT R2 AT DCBSW                      030640
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD NOT FOUND                030650
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMNT PRESENT            030660
         BZ    IOMN&SYSNDX         BYPASS I/O IF DD STAT MISSING          030670
         AIF   ('&OPEN' EQ 'N').N01                                       030680
         TM    IOPSSW(R2),IOSWOPEN TEST IF DD STATEMENT OPEN              030690
         BO    IOON&SYSNDX         BR IF OPEN                             030700
         CBAL  R4,ISOPEN           OPEN DCB                               030710
.N01     ANOP                                                             030720
IOON&SYSNDX LA R1,IOPSDCB(R2)      GET DCB ADDRESS                        030730
         LA    R15,&PARM2          GET KEY ADDRESS                        030740
         READ  DECB&SYSNDX,K,(R1),'S','S',(R15) READ IS RANDOMLY          030750
         CHECK DECB&SYSNDX,DSORG=IS WAIT FOR COMPLETION OF I/O            030760
.*       WAIT  ECB=DECB&SYSNDX     WAIT FR COMPLETION OF I/O              030770
         TM    DECB&SYSNDX.+24,DCBEXNKY TEST IF RECORD NOT FOUND          030780
         BO    IOMN&SYSNDX         EXIT TEST IF RECORD NOT FOUND          030790
.*       MVI   IOPSISI(R2),C'W'    ASSUME SOME SORT OF ERROR OCCURRED     030800
.*       CLC   DECB&SYSNDX.+24(2),=X'0000' TEST IF ERROR CONDITION        030810
.*       BNE   IOMN&SYSNDX         EXIT IF ANY ERROR CONDITION            030820
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD IS DELETED               030830
         L     R1,IOPSDCB(R2)      GET ADDRESS OF DCB                     030840
         TM    DCBOPTCD-IHADCB(R1),DCBOPTL DOES DELETE FLAG EXIST         030850
         BZ    *+16                BR IF NO DELETE FLAG                   030860
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                     030870
         CLI   0(R1),X'FF'         TEST IF RECORD IS DELETED              030880
         BE    IOMN&SYSNDX         EXIT IF RECORD DELETED                 030890
         MVI   IOPSISI(R2),C'X'    SHOW RECORD FOUND                      030900
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                     030910
IOMN&SYSNDX EQU *                  CONTINUE PROCESSING                    030920
         MEXIT                                                            030930
.O00     ANOP                                                             030940
         MNOTE 16,'UNKNOWN MACRO SUBTYPE'                                 030950
         MEND                                                             030960
./ ADD NAME=RTNDEF                                                        030970
         MACRO                                                            030980
       RTNDEF  &RTN                                                       030990
.*                                                                        031000
.*       CREATE ROUTINE DEFINITION OF THE FORM                            031010
.*             . V(ROUTINE)                                               031020
.*             . AL1(CSECT SUFFIX NO)                                     031030
.*             . AL3(BASE REGISTER SAVE AREA)                             031040
.*                                                                        031050
         AIF   ('&SYSECT' EQ 'BUDGIE3').GEN                               031060
         AIF   ('&SYSECT' EQ 'PARROT').GEN                                031070
         AGO   .NOGEN                                                     031080
.GEN     ANOP                                                             031090
$&RTN    DC    V(&RTN),AL1(0),AL3(0)                                      031100
         MEXIT                                                            031110
.NOGEN   ANOP                                                             031120
$&RTN    DC    A(0),AL1(0),AL3(0) DEFINE ROUTINE                          031130
         MEND                                                             031140
./ ADD NAME=CBAL                                                          031150
         MACRO                                                            031160
&NAME    CBAL  &R,&RTN,&LOOP=YES,&NESTED=NO                               031170
         GBLC  &CBAL                                                      031180
         LCLC  &T                                                         031190
.*                                                                        031200
.*       ESTABLISH LINKAGE TO SUB-ROUTINE                                 031210
.*                                                                        031220
.*       &R    - RETURN REGISTER ( MAY BE OMITTED )                       031230
.*       &RTN  - ROUTINE NAME                                             031240
.*       &LOOP=YES - SET GLOBAL SYMOLIC '&CBAL' TO 'Y' TO TRIGGER         031250
.*                   DETECTION OF SUBROUTINES WITH POTENTIAL LOOPS        031260
.*       &LOOP=NO  - DO NOT SET GLOBAL SYMBOL '&CBAL'                     031270
.*       &NESTED=NO - USE NORMAL CBAL REGISTER PRESERVATION TECHNIQUES    031280
.*       &NESTED=YES - PRESERVE BASE REGISTER WITHIN CODE                 031290
.*                                                                        031300
.*       CBAL TECHNOLOGY PRECLUDES ISSUING A CBAL TO A ROUTINE THAT IN    031310
.*        TURN CBALS TO THE ORIGINAL ROUTINE, IF THE ROUTINES ARE IN      031320
.*        DIFFERENT CSECTS, BECAUSE WHEN THE ORIGINAL ROUTINE RETURNS     031330
.*        CONTROL TO THE ROUTINE THAT INVOKED IT, THE WROND BASE          031340
.*        REGISTER WILL BE RESTORED.  SUCH A SEQUENCE IS UNUSUAL - IT     031350
.*        HAS TAKEN ME THREE YEARS TO ENCOUNTER IT - BUT IT CAN HAPPEN.   031360
.*        (VIZ 'WRITEP', A WRITE ROUTINE THAT CAN INVOKE A HEADING RTN    031370
.*        WHICH CAN INVOKE A PROCESSING ROUTINE WHICH CAN IN TUNR         031380
.*        INVOKE WRITEP).  TO CATER FOR THIS EVENTUALITY, 'NESTED=YES'    031390
.*        CAUSES THE BASE REGISTER TO BE PRESERVED WITHIN THE MACRO       031400
.*        EXPANSION, AND THUS ENSURING THE CORRECT VALUE IS RESTORED.     031410
.*                                                                        031420
         AIF   ('&R' EQ '').X00                                           031430
         AIF   ('&LOOP' EQ 'NO').X00                                      031440
&CBAL    SETC  'Y'                                                        031450
.X00     ANOP                                                             031460
&T       SETC  T'&RTN                                                     031470
         AIF   (T'&RTN EQ 'U').A01 BR IF ROUTINE UNDEFINED                031480
         AIF   (T'&RTN EQ 'T').A01 BRANCH IF ROUTINE EXTRN                031490
         AIF   (T'&RTN EQ '$').A01 BRANCH IF ROUTINE WXTRN                031500
.*                                                                        031510
.*       ASSUME THAT THE ROUTINE EXISTS IN THIS CSECT                     031520
.*                                                                        031530
         AIF   ('&R' NE '').A00                                           031540
&NAME    B     &RTN                GO TO REQUESTED ROUTINE                031550
         MEXIT                                                            031560
.A00     ANOP                                                             031570
&NAME    BAL   &R,&RTN             PERFORM REQUESTED ROUTINE              031580
         MEXIT                                                            031590
.A01     ANOP                                                             031600
.*                                                                        031610
.*       ROUTINE IS IN ANOTHER CSECT SO ESTABLISH LINKAGE VIA CCB         031620
.*                                                                        031630
&NAME    LA    R9,$&RTN            POINT AT RTN DEFINITION IN CCB         031640
         AIF   ('&R' NE '').A03                                           031650
         B     $CBALINK            BR TO LINKAGE ROUTINE                  031660
         AGO   .A04                                                       031670
.A03     ANOP                                                             031680
         AIF   ('&NESTED' NE 'YES').N01                                   031690
         CNOP  0,4                 ENSURE ALIGNMENT                       031700
         ST    R12,*+16            PRESERVE BASE REGISTER IN S/A          031710
.N01     ANOP                                                             031720
         BAL   R4,$CBALINK         BR TO LINKAGE ROUTINE                  031730
.A04     ANOP                                                             031740
         AIF   ('&SYSECT' EQ 'PARROT').A02                                031750
         AIF   ('&SYSECT' EQ 'BUDGIE3').A02                               031760
         AIF   ('&NESTED' NE 'YES').N02                                   031770
         L     R12,8(R4)           RESTORE BASE REGISTER FROM S/A         031780
         B     *+8                 BRANCH OVER REGISTER SAVE AREA         031790
         DS    F                   SAVE AREA FOR BASE REGISTER            031800
         AGO   .A02                                                       031810
.N02     ANOP                                                             031820
         L     R12,$&RTN.+4        RESTORE SUB-CSECT BASE REGISTER        031830
.A02     ANOP                                                             031840
         MEND                                                             031850
./ ADD NAME=GETCB                                                         031860
         MACRO                                                            031870
&NAME    GETCB &CB,&BACK,&START,&CBLABL=,&GR13=NO                         031880
.*                                                                        031890
.*       ACQUIRE CORE FOR AND CHAIN A NEW C/B                             031900
.*       ACQUIRE AND INITIALISE CONTROL BLOCK PREFIX                      031910
.*       REGISTER 2 MUST CONTAIN THE REQUIRED LENGTH                      031920
.*       C/B ADDRESSABILITY MUST BE ESTABLISHED VIA R8                    031930
.*       &BACK=BACK - REQUESTS THAT BACK CHAINING BE ESTABLISHED          031940
.*       &BACK=NOCHAIN - NO CHAINING OTHER THAN C/B PREFIX                031950
.*       &START - IDENTIFES THE DUMMY FIRST ELEMENT AT THE START OF CHN   031960
.*       &CBLABL - NAME OF FIELD CONTAINING LABEL TO GO IN 'CBPRLABL'     031970
.*       &GR13=NO|YES - FLAG PREFIX FOR GR13 RESOLUTION                   031980
.*                                                                        031990
&NAME    LA    R2,CBPRLGTH(,R2)    INCREMENT BY LENGTH OF C/B PREFIX      032000
         CBAL  R4,GETMAIN          ACQUIRE CORE FOR CONTROL BLOCK         032010
         USING CBPREFIX,R1         ESTABLISH PREFIX ADDRESSABILITY        032020
         MVC   CBPRNAME,=CL4'&CB'  SET C/B IDENTIFIER IN PREFIX           032030
         STH   R2,CBPRLEN          PRESERVE C/B LENGTH IN PREFIX          032040
         ZAP   CBPRCCNO,$CCSEQNO   SET C/C SEQ NO IN PREFIX               032050
         L     R15,$CBPLAST        GET ADDRESS OF PREVIOUS C/B PREFIX     032060
         ST    R1,CBPRCBPR-CBPREFIX(R15) POINT PREV PREFIX AT THIS ONE    032070
         ST    R1,$CBPLAST         SAVE THIS PREFIX ADDRESS AS THE LAST   032080
         MVI   CBPRSW,0            INITIALISE SWITCH BYTE                 032090
         AIF   ('&CBLABL' EQ '').A02                                      032100
         MVC   CBPRLABL,&CBLABL    SET LABEL IN PREFIX FOR LATER          032110
.A02     AIF   ('&GR13' EQ 'NO').A03                                      032120
         OI    CBPRSW,MCBPGR13     FLAG THAT PCB REFERENCE IS REQUIRED    032130
.A03     ANOP                                                             032140
         DROP  R1                  DROP PREFIX ADDRESSABILITY             032150
         LA    R1,CBPRLGTH(,R1)    POINT R1 PAST PREFIX AT C/B            032160
         LR    R8,R1               POINT BASE REGISTER AT C/B             032170
         AIF   ('&BACK' EQ 'NOCHAIN').A01                                 032180
         L     R1,$PTR&CB          RETRIEVE CURRENT C/B POINTER           032190
         ST    R8,$PTR&CB          ESTABLISH NEW C/B AS CURRENT           032200
         MVC   &CB&CB-&CB.NTRY+1(3,R1),$PTR&CB+1 POINT LAST AT THIS ONE   032210
         MVI   &CB.ID,FLAG&CB      IDENTIFY CURRENT C/B                   032220
.*       ZAP   &CB.CCNO,SYSIN+IOPSRCNT(4) ADD C/C SEQ NO TO C/B           032230
         AIF   ('&BACK' NE 'BACK').A01                                    032240
         ST    R1,&CB.L&CB         POINT NEW C/B AT LAST                  032250
         ST    R8,$LPTR&CB         PRESERVE ADDRESS OF LAST IN CHAIN      032260
         AIF   ('&START' EQ '').A01                                       032270
         CLM   R8,7,&START.+1      IS THIS C/B THE 1ST IN THE CHAIN       032280
         BNE   *+10                BR IF NOT 1ST IN CHAIN                 032290
         XC    &CB.L&CB.(4),&CB.L&CB ZEROISE BACK POINTER IF 1ST C/B      032300
.A01     ANOP                                                             032310
         MEND                                                             032320
./ ADD NAME=CHNCB                                                         032330
         MACRO                                                            032340
&NAME    CHNCB &CB,&A                                                     032350
.*                                                                        032360
.*       SET CURRENT C/B POINTERS ( IN CCB ) TO POINT AT CHAIN ADDRESSE   032370
.*        IN THIS C/B TO FACILITATE CHAINING OF DEPENDENT C/B'S           032380
.*                                                                        032390
         LCLA  &CNT,&LMIT,&L,&D                                           032400
         LCLC  &CC,&CC2                                                   032410
&LMIT    SETA  N'&SYSLIST                                                 032420
         AIF   (&LMIT GT 1).A00                                           032430
         MNOTE 1,'INSUFFICIENT OPERANDS'                                  032440
         MEXIT                                                            032450
.A00     ANOP                                                             032460
&CNT     SETA  1                                                          032470
.A01     ANOP                                                             032480
&CNT     SETA  &CNT+1                                                     032490
         AIF   ('&CNT' GT '&LMIT').A02                                    032500
&CC      SETC  '&SYSLIST(&CNT)'                                           032510
&L       SETA  K'&SYSLIST(&CNT)                                           032520
&D       SETA  &L-2                                                       032530
&CC2     SETC  '&CC'(&D,3)                                                032540
         AIF   ('&SYSECT'(1,6) EQ 'PARROT').A03                           032550
&CC2     SETC  '&CC'                                                      032560
.A03     ANOP                                                             032570
         LA    R1,&CB&CC           POINT AT CHAIN ADDRESS WITHIN C/B      032580
         ST    R1,$PTR&CC2         PRESERVE AS CURRENT TO FACILITATE CH   032590
         AGO   .A01                                                       032600
.A02     MEND                                                             032610
./ ADD NAME=ABEND                                                         032620
         MACRO                                                            032630
&NAME    ABEND &N,&FULL                                                   032640
.*                                                                        032650
.*       PREPARE TO ABNORMALLY TERMIATE                                   032660
.*                                                                        032670
&NAME    LA    R9,&N               SET ABEND CODE IN WORK REGISTER        032680
         STH   R9,$ABNDCDE+2       PRESERVE ABEND CODE IN CCB             032690
         AIF   ('&FULL' NE 'FULL').A01                                    032700
         OI    $ABNDCDE,FULLDUMP   SET FOR FULL CORE DUMP                 032710
.A01     ANOP                                                             032720
         CBAL  ,DUMP               GO TO DUMP ROUTINE                     032730
         MEND                                                             032740
./ ADD NAME=COUNT                                                         032750
         MACRO                                                            032760
&NAME    COUNT &DCBSW,&NO                                                 032770
.*                                                                        032780
.*       INCREMENT RECORD COUNTER IN DCBSW                                032790
.*                                                                        032800
         AIF   ('&NO' NE '0').A03                                         032810
&NAME    ZAP   &DCBSW.+IOPSRCNT(4),=P'0' ZEROISE LINE COUNT               032820
         MEXIT                                                            032830
.A03     ANOP                                                             032840
&NAME    AP    &DCBSW.+IOPSRCNT(4),=P'&NO' INCREMENT LINE COUNT           032850
         MEND                                                             032860
./ ADD NAME=LINE                                                          032870
         MACRO                                                            032880
&NAME    LINE  &MSG,&DISP,&SKIPCHR,&PRINT=,&S=,&ELEVEL=NO,&LA=NO          032890
.*                                                                        032900
.*       SET UP MESSAGE FOR SYSPRINT AND PRINT IT                         032910
.*                                                                        032920
.*       &MSG  - NAME OF MESSAGE                                          032930
.*       &DISP - DISPLACEMENT IN LINE: DEFAULT=5                          032940
.*       &SKIPCHR - CARRIAGE CONTROL CHARACTER: DEFAULT-NOT ALTERED       032950
.*       &PRINT - NAME OF PRINT ROUTINE: DEFAULT=PRINT                    032960
.*       &S=   - NO. OF LINES TO SPACE: DEFAULT-NOT ALTERED               032970
.*       &ELEVEL= - 'YES' = E-LEVEL ERROR: DEFAULT=NO                     032980
.*       &LA=  - 'YES' = MESSAGE NOT DIRECTLY ADDRESSABLE SO 'LA'         032990
.*                                                                        033000
         LCLC  &D,&L                                                      033010
         LCLA  &LEN,&DD                                                   033020
&L       SETC  'L'''                                                      033030
&D       SETC  '5'                                                        033040
         AIF   ('&DISP' EQ '').A01                                        033050
&D       SETC  '&DISP'                                                    033060
.A01     ANOP                                                             033070
&DD      SETA  5                                                          033080
         AIF   ('&DISP' EQ '').A05                                        033090
&DD      SETA  &DISP                                                      033100
.A05     ANOP                                                             033110
&LEN     SETA  L'&MSG                                                     033120
&LEN     SETA  &LEN+&DD                                                   033130
         AIF   (&LEN LE 133).A06                                          033140
         MNOTE 4,'WARNING - MESSAGE IS TOO LONG FOR THE LINE'             033150
.A06     ANOP                                                             033160
         AIF   ('&LA' EQ 'NO').A01A                                       033170
         L     R1,=A(&MSG)         GET ADDRESS OF MESSAGE                 033180
         MVC   &D.(&L&MSG,R5),0(R1) MOVE MESSAGE TO LINE                  033190
         AGO   .A01B                                                      033200
.A01A    ANOP                                                             033210
&NAME    MVC   &D.(&L&MSG,R5),&MSG MOVE MESSAGE TO LINE                   033220
.A01B    AIF   ('&SKIPCHR' EQ '').A02                                     033230
         MVI   0(R5),&SKIPCHR      ESTABLISH SKIP CHARCETER               033240
.A02     AIF   ('&S' EQ '').A02A                                          033250
         MVI   0(R5),SPCE&S.AFT    ESTABLISH SKIP CHARACTER               033260
.A02A    AIF   ('&PRINT' EQ 'NO').A03                                     033270
         CBAL  R4,PRINT            PRINT LINE                             033280
.A03     ANOP                                                             033290
         AIF   ('&ELEVEL' NE 'YES').A04                                   033300
         OI    SWERROR,MERRCCER    FLAG THAT 'E' LEVEL ERROR OCCURRED     033310
.A04     ANOP                                                             033320
         MEND                                                             033330
./ ADD NAME=SPDGEN                                                        033340
         MACRO                                                            033350
&NAME    SPDGEN                    &NUMB,&LAST                            033360
.*                                                                        033370
.*       GENERATE STORAGE POOL DEFINITION BLOCK                           033380
.*                                                                        033390
.*      SPDGEN NNN                 SPD FER NNN BYTES TO BE GETMAINED      033400
.*      SPDGEN CSECT               SPD FOR CSECT NAMED PARROT&NUMB        033410
.*      SPDGEN      ,LAST          SET CHAIN FIELD TO ZEROES              033420
.*      SPDGEN    ,FLDNAME         SET TO CHAIN TO FLDNAME                033430
.*                                                                        033440
         LCLC  &CADR,&FLAG,&CSECT,&SIZE                                   033450
&CADR    SETC  '*+SPDLGTH'                                                033460
&FLAG    SETC  '0'                                                        033470
&SIZE    SETC  '0'                                                        033480
         AIF   (T'&NUMB EQ 'C').A02                                       033490
         AIF   (T'&NUMB EQ 'Z').A01                                       033500
         MNOTE 16,&NUMB IS INVALID'                                       033510
         MEXIT                                                            033520
.A01     ANOP                                                             033530
&FLAG    SETC  'MSPDGETM'                                                 033540
.A02     AIF   ('&LAST' EQ '').A03                                        033550
&CADR    SETC  '0'                                                        033560
         AIF   ('&LAST' EQ '       AST').A03                              033570
&CADR    SETC  '&LAST'                                                    033580
.A03     AIF   (T'&NUMB EQ 'C').A04                                       033590
&SIZE    SETC  '&NUMB'                                                    033600
&CSECT   SETC  '0'                                                        033610
         AGO   .A05                                                       033620
.A04     ANOP                                                             033630
&CSECT   SETC  'PARROT&NUMB'                                              033640
&SIZE    SETC  'LGTH&NUMB.-PARROT&NUMB'                                   033650
.A05     ANOP                                                             033660
&NAME    DC    AL1(&FLAG),AL3(&CADR)SWITCH BYTE AND CHAIN ADDRESS         033670
         DC    A(&CSECT)           ADDRESS OF STORAGE POOL                033680
         DC    A(&SIZE)            SIZE OF STORAGE POOL                   033690
         DC    A(0),A(0)           WORK FILE CAPACITY AND POINTER         033700
         MEND                                                             033710
./ ADD NAME=POOLFER                                                       033720
         MACRO                                                            033730
       POOLFER &S,&FREE                                                   033740
.*                                                                        033750
.*       DEFINE A CSECT, INDICATING IF I MAY BE FREEMAINED                033760
.*                                                                        033770
         LCLC  &A                                                         033780
&A       SETC  '32'                                                       033790
         AIF   ('&FREE' NE 'FREE').A00                                    033800
&A       SETC  '40'                                                       033810
.A00     ANOP                                                             033820
         AIF   ('&SYSECT' NE 'PARROT').NOGEN                              033830
$VPART&S DC    AL1(&A),AL3(PARROT&S),A(PAREND&S) DEFINE CSECT             033840
         MEXIT                                                            033850
.NOGEN   ANOP                                                             033860
$VPART&S DC    AL1(&A),AL3(0),A(0) DEFINE CSECT                           033870
         MEND                                                             033880
./ ADD NAME=SCSECT                                                        033890
         MACRO                                                            033900
        SCSECT &S                                                         033910
.*                                                                        033920
.*       GENERATE 'CSECT' AND 'USING' STATEMENTS FOR SUB-CSECT            033930
.*                                                                        033940
         LCLC  &CSECT                                                     033950
&CSECT   SETC  'PARROT&S'                                                 033960
&CSECT   CSECT                                                            033970
        VERSID &S                  GENERATE CSECT IDENTIFIER              033980
         USING &CSECT,R12          ESTABLISH ADDRESSABILITY FOR CSECT     033990
         USING CCBNTRY,R13         ESTABLISH ADDRESSABILITY FOR CCB       034000
         SPACE 1                                                          034010
         MEND                                                             034020
./ ADD NAME=SCSEND                                                        034030
         MACRO                                                            034040
        SCSEND &S                                                         034050
.*       TERMINATE CSECT & DROP ADDRESSABILITY                            034060
         SPACE 1                                                          034070
         LTORG                                                            034080
         CNOP  0,8                 ENSURE THAT CSECT LEN IS MULTIPLE 8    034090
PAREND&S EQU   *                   END OF CSECT                           034100
         DROP  R12,R13             DROP CSECT AND CCB ADDRESSABILITY      034110
         MEND                                                             034120
./ ADD NAME=VERSID                                                        034130
         MACRO                                                            034140
&NAME    VERSID &A                                                        034150
         CSECTID DSECT=NO,ID=&A    GENERATE IDENTIFYING FIELDS            034160
         MEND                                                             034170
./ ADD NAME=NUMERIC                                                       034180
         MACRO                                                            034190
&NAME  NUMERIC &FLD,&LEN,&SIGNED                                          034200
.*                                                                        034210
.*       GENERATE LINKAGE TO VALIDATE NUMERIC FIELD                       034220
.*                                                                        034230
         LCLA  &LL                                                        034240
         LCLC  &R,&L,&NAME1                                               034250
&NAME1   SETC  '&NAME'                                                    034260
         AIF   ('&FLD'(1,1) NE '(').C1                                    034270
&R       SETC  '&FLD(1)'                                                  034280
         AIF   ('&R' EQ 'R14').C2                                         034290
&NAME1   LA    R14,0(,&R)          POINT AT R14 AT FIELD                  034300
&NAME1   SETC  ' '                                                        034310
         AGO   .C2                                                        034320
.C1      ANOP                                                             034330
&NAME1   LA    R14,&FLD            POINT R14 AT FIELD                     034340
&NAME1   SETC  ' '                                                        034350
.C2      AIF   ('&LEN' EQ '').C3                                          034360
&LL      SETA  &LEN                                                       034370
&LL      SETA  &LL-1                                                      034380
&NAME1   LA    R15,&LL             SET EXECUTABLE LENGTH IN R15           034390
&NAME1   SETC  ' '                                                        034400
         AGO   .C4                                                        034410
.C3      ANOP                                                             034420
&LL      SETA  L'&FLD                                                     034430
&LL      SETA  &LL-1                                                      034440
&NAME1   LA    R15,&LL             SET EXECUTABLE LENGTH IN R15           034450
&NAME1   SETC  ' '                                                        034460
.C4      AIF   ('&SIGNED' NE 'PACKED').C5                                 034470
         CBAL  R4,NUMRICP          VALIDAT PACKED DECIMAL FIELD           034480
         MEXIT                                                            034490
.C5      AIF   ('&SIGNED' NE 'SIGNED').C6                                 034500
         CBAL  R4,NUMRICS          VALIDATE SIGNED/UNSIGNED EBCDIC        034510
         MEXIT                                                            034520
.C6      CBAL  R4,NUMERIC          VALIDATE UNSIGNED EBCDIC               034530
         MEND                                                             034540
./ ADD NAME=SUBIN                                                         034550
         MACRO                                                            034560
&NAME    SUBIN &SAVE=,&PREFIX=,&FLOWTHR=                                  034570
         GBLA  &SUBINC                                                    034580
         GBLC  &SUBALL                                                    034590
         GBLC  &CBAL                                                      034600
         LCLA  &N,&S                                                      034610
         LCLC  &R,&P,&PP                                                  034620
         LCLC  &NAME1                                                     034630
&CBAL    SETC  'N'                                                        034640
&SUBALL  SETC  ' '                                                        034650
&SUBINC SETA   &SUBINC+1                                                  034660
&NAME1   SETC  '&NAME'                                                    034670
         AIF   ('&SAVE' NE 'ALL').F00                                     034680
&P       SETC  '&PREFIX'                                                  034690
         AIF   ('&P' NE '').G00                                           034700
&P       SETC  '$&SUBINC'                                                 034710
.G00     ANOP                                                             034720
&NAME1   SETC  '&P.ALL'                                                   034730
&SUBALL  SETC  '&NAME1'                                                   034740
&NAME1   DS    16F                 SAVE AREA FOR ALL REGISTERS            034750
&NAME    STM   R0,R15,*-64         PRESERVE ALL REGISTERS                 034760
         MEXIT                                                            034770
.F00     ANOP                                                             034780
         AIF   ('&FLOWTHR' EQ '').D00                                     034790
         AIF   ('&FLOWTHR' EQ 'YES').D01                                  034800
         MNOTE 4,'UNKNOWN ''FLOWTHR'' SPECIFICATION - IGNORED'            034810
         AGO   .D00                                                       034820
.D01     B     &NAME               BR AROUND SAVE AREAS                   034830
.D00     ANOP                                                             034840
&N       SETA  N'&SAVE                                                    034850
         AIF   (&N GT 0).C1                                               034860
&NAME    DS    0H                                                         034870
         MEXIT                                                            034880
.C1      ANOP                                                             034890
&P       SETC  '&PREFIX'                                                  034900
         AIF   ('&P' EQ '').C2                                            034910
&PP      SETC  '&P.SAVE'                                                  034920
         AGO   .C3                                                        034930
.C2      ANOP                                                             034940
&PP      SETC  '$&SUBINC'                                                 034950
.C3      ANOP                                                             034960
.C5      ANOP                                                             034970
&S       SETA  &S+1                                                       034980
         AIF   (&S GT &N).C6                                              034990
&PP&SAVE(&S) DS F 0                SAVE AREA                              035000
         AGO   .C5                                                        035010
.C6      ANOP                                                             035020
&S       SETA  0                                                          035030
.E01     ANOP                                                             035040
&S       SETA  &S+1                                                       035050
         AIF   (&S GT &N).C4                                              035060
&NAME1   ST    &SAVE(&S),&PP&SAVE(&S) 0      PRESERVE REGISTER            035070
&NAME1   SETC  ' '                                                        035080
         AGO   .E01                                                       035090
.C4      ANOP                                                             035100
         MEND                                                             035110
./ ADD NAME=SUBLR                                                         035120
         MACRO                                                            035130
&NAME    SUBLR &REG,&REG2                                                 035140
.*                                                                        035150
.*       REFRESH REGISTER FROM SUBIN SAVE AREA                            035160
.*                                                                        035170
.* OR    LOAD &REG WITH CONTENTS OF SUBIN SAVE AREA FOR &REG2             035180
.*                                                                        035190
         GBLA  &SUBINC                                                    035200
         GBLC  &SUBALL                                                    035210
         LCLC  &R                                                         035220
&R       SETC  '&REG'                                                     035230
         AIF   ('&REG2' EQ '').A01                                        035240
&R       SETC  '&REG2'                                                    035250
.A01     ANOP                                                             035260
         AIF   ('&SUBALL' EQ ' ').A02                                     035270
&NAME    L     &REG,&SUBALL.+(4*&R) REFRESH REGISTER FROM SUBIN SAVAREA   035280
         MEXIT                                                            035290
.A02     ANOP                                                             035300
&NAME    L     &REG,$&SUBINC.&R    REFRESH REGISTER FROM SUBIN SAVEAREA   035310
         MEND                                                             035320
./ ADD NAME=SUBOUT                                                        035330
         MACRO                                                            035340
&NAME   SUBOUT &RESTORE=,&PREFIX=,&RETURN=                                035350
         GBLA  &SUBINC                                                    035360
         GBLC  &CBAL                                                      035370
         LCLA  &N,&S                                                      035380
         LCLC  &R,&P,&PP,&B,&SWR4                                         035390
         AIF   ('&RESTORE' EQ '').X00                                     035400
&SWR4    SETC  'Y'                                                        035410
.X00     ANOP                                                             035420
         AIF   ('&NAME' EQ '').NONAME                                     035430
&NAME    DS    0H 0                                                       035440
.NONAME  ANOP                                                             035450
&N       SETA  N'&RESTORE                                                 035460
         AIF   (&N NE 0).C3                                               035470
.C1      ANOP                                                             035480
&B       SETC  'R4'                                                       035490
         AIF   ('&RETURN' EQ '').C2                                       035500
         AIF   ('&RETURN'(1,1) NE '(').C11                                035510
&B       SETC  '&RETURN(1)'                                               035520
         AGO   .C2                                                        035530
.C11     ANOP                                                             035540
&B       SETC  '&RETURN'                                                  035550
         B     &B 0                RETURN TO CALLER                       035560
         AGO   .C22                BYPASS CBAL LOOP TEST                  035570
         MEXIT                                                            035580
.C2      BR    &B 0                RETURN TO CALLER                       035590
.C21     AIF   ('&CBAL' EQ 'Y' AND '&RESTORE' EQ '').ERR01                035600
         AIF   ('&CBAL' EQ 'Y' AND '&SWR4' NE 'Y').ERR01                  035610
.C22     ANOP                                                             035620
         MEXIT                                                            035630
.C3      ANOP                                                             035640
         AIF   ('&RESTORE' EQ 'ALL').G00                                  035650
&P       SETC  '&PREFIX'                                                  035660
         AIF   ('&P' EQ '').C4                                            035670
&PP      SETC  '&P.SAVE'                                                  035680
         AGO   .C5                                                        035690
.C4      ANOP                                                             035700
&PP      SETC  '$&SUBINC'                                                 035710
.C5      ANOP                                                             035720
&S       SETA  &S+1                                                       035730
         AIF   (&S GT &N).C1                                              035740
         L     &RESTORE(&S),&PP&RESTORE(&S) 0     RESTORE REGISTER        035750
         AIF   ('&RESTORE(&S)' NE 'R4').BR01                              035760
&SWR4    SETC  'Y'                                                        035770
.BR01    ANOP                                                             035780
         AGO   .C5                                                        035790
         MEXIT                                                            035800
.G00     ANOP                                                             035810
&SWR4    SETC  'Y'                                                        035820
&P       SETC  '&PREFIX'                                                  035830
         AIF   ('&P' NE '').G01                                           035840
&P       SETC  '$&SUBINC'                                                 035850
.G01     ANOP                                                             035860
&PP      SETC  '&P.ALL'                                                   035870
         LM    R0,R15,&PP          RESTORE ALL REGISTERS                  035880
         AGO   .C1                                                        035890
.ERR01   MNOTE 1,'CBALS ISSUED BUT R4 NOT RESTORED - POTENTIAL LOOPS'     035900
         MEXIT                                                            035910
         MEND                                                             035920
./ ADD NAME=BLOCTABL                                                      035930
         MACRO                                                            035940
&NAME BLOCTABL &LIST                                                      035950
.*                                                                        035960
.*       CONSTRUCT TRANSLATE TABLE ( FOR USE WITH 'TRT' ) THAT WILL       035970
.*        LOCATE THE ELEMENTS IN THE SUPPLIED LIST                        035980
.*                                                                        035990
         LCLA  &N,&S                                                      036000
&N       SETA  N'&LIST                                                    036010
&NAME    DC    256X'00'            BASIC 'TRT' TABLE: IGNORE ALL          036020
         AIF   (&N EQ 0).EXIT                                             036030
.LOOP    ANOP                                                             036040
&S       SETA  &S+1                                                       036050
         AIF   (&S GT &N).ORG                                             036060
         ORG   &NAME.+C'&LIST(&S)' ORG TO VALUE TO BE LOCATED             036070
         DC    CL1'&LIST(&S)'      SET TO DETECT ENTRY WITH TRT           036080
         AGO   .LOOP                                                      036090
.ORG     ORG                                                              036100
.EXIT    ANOP                                                             036110
         MEND                                                             036120
./ ADD   NAME=PPPLL                                                       036130
         MACRO                                                            036140
&NAME    PPPLL &SOURCE,&DEST                                              036150
.*                                                                        036160
.*       GENERATE LINKAGE TO PPPLL CONVERSION ROUTINE                     036170
.*                                                                        036180
&NAME    LA    R2,&SOURCE          POINT R2 AT SOURCE EBCDIC PPPLL        036190
         LA    R3,&DEST            POINT R3 AT DESTINATION BINARY PPL     036200
         CBAL  R4,PPPLL            PERFORM CONVERSION ROUTINE             036210
         MEND                                                             036220
./ ADD   NAME=FLDTYPE                                                     036230
         MACRO                                                            036240
&NAME    FLDTYPE &SOURCE,&DEST                                            036250
.*                                                                        036260
.*       GENERATE LINKAGE TO ROUTINE THAT CONVERTS CONTROL CARD           036270
.*        FIELD TYPE TO THE EQUIVALENT INTERNAL REPRESENTATION.           036280
.*                                                                        036290
&NAME    LA    R15,&SOURCE         POINT R15 AT THE SOURCE FIELD TYPE     036300
         LA    R1,&DEST            POINT R1 AT THE DESTINATION FIELD      036310
         CBAL  R4,BLDFTYP          CONVERT TO INTERNAL REPRESENTATION     036320
         MEND                                                             036330
./ ADD   NAME=TBLANK                                                      036340
         MACRO                                                            036350
&NAME    TBLANK &FLD                                                      036360
.*                                                                        036370
.*       TEST IF A FIELD CONTAINS SPACES                                  036380
.*                                                                        036390
         LCLC  &L                                                         036400
&L       SETC  'L'''                                                      036410
&NAME    CLI   &FLD,C' '           TEST IF THE FIRST POSITION IS BLANK    036420
         BNE   *+10                BR IF NOT BLANK                        036430
         CLC   &FLD.+1(&L&FLD.-1),&FLD TEST IF REMAINDER IS BLANK         036440
         MEND                                                             036450
./ ADD   NAME=BTYPE                                                       036460
         MACRO                                                            036470
&NAME    BTYPE &PREFIX=,&DCHAR=,&DNUM=,&REG=R1,&UNUSED=,               *  036480
               &CHAR=,&NUM=,&PD=,&HEX=,&BIT=,&MASK=,&BIN=,&FLOAT=,     *  036490
               &STR=,&IND=,&FREE=                                         036500
.*                                                                        036510
.*       GENERATE THE CODE TO PERFROM AN INDEXED BRANCH TO THE            036520
.*        APPROPRIATE PROCESSING ROUTINE, BASED UPON THE INTERNAL         036530
.*        REPRESENTATION OF THE FIELD TYPE ( WHICH IS IN &REG ).          036540
.*                                                                        036550
.*       DEFAULTS MAY BE SPECIFIED FOR THE TWO LOGICAL GROUPS OF          036560
.*        FIELD TYPES ( NUMERIC - DNUM= - AND NON-NUMERIC - DCHAR= ).     036570
.*                                                                        036580
         LCLC  &B1,&B2,&B3,&B4,&B5,&B6,&B7,&B8,&B9,&B10,&B11,&B12         036590
&B1      SETC  '&PREFIX&DCHAR'                                            036600
         AIF   ('&CHAR' EQ '').B2                                         036610
&B1      SETC  '&PREFIX&CHAR'                                             036620
.B2      ANOP                                                             036630
&B2      SETC  '&PREFIX&DNUM'                                             036640
         AIF   ('&NUM' EQ '').B3                                          036650
&B2      SETC  '&PREFIX&NUM'                                              036660
.B3      ANOP                                                             036670
&B3      SETC  '&PREFIX&DNUM'                                             036680
         AIF   ('&PD' EQ '').B4                                           036690
&B3      SETC  '&PREFIX&PD'                                               036700
.B4      ANOP                                                             036710
&B4      SETC  '&PREFIX&DCHAR'                                            036720
         AIF   ('&HEX' EQ '').B5                                          036730
&B4      SETC  '&PREFIX&HEX'                                              036740
.B5 ANOP                                                                  036750
&B5      SETC  '&PREFIX&DCHAR'                                            036760
         AIF   ('&BIT' EQ '').B6                                          036770
&B5      SETC  '&PREFIX&BIT'                                              036780
.B6      ANOP                                                             036790
&B6      SETC  '&PREFIX&DCHAR'                                            036800
         AIF   ('&MASK' EQ '').B7                                         036810
&B6      SETC  '&PREFIX&MASK'                                             036820
.B7      ANOP                                                             036830
&B7      SETC  '&PREFIX&DNUM'                                             036840
         AIF   ('&BIN' EQ '').B8                                          036850
&B7      SETC  '&PREFIX&BIN'                                              036860
.B8      ANOP                                                             036870
&B8      SETC  '&PREFIX&DNUM'                                             036880
         AIF   ('&FLOAT' EQ '').B9                                        036890
&B8      SETC  '&PREFIX&FLOAT'                                            036900
.B9      ANOP                                                             036910
&B9      SETC  '&PREFIX&DCHAR'                                            036920
         AIF   ('&STR' EQ '').B10                                         036930
&B9      SETC  '&PREFIX&STR'                                              036940
.B10     ANOP                                                             036950
&B10     SETC  '&PREFIX&DCHAR'                                            036960
         AIF   ('&IND' EQ '').B11                                         036970
&B10     SETC  '&PREFIX&IND'                                              036980
.B11     ANOP                                                             036990
&B11     SETC  '&PREFIX&DNUM'                                             037000
         AIF   ('&FREE' EQ '').B12                                        037010
&B11     SETC  '&PREFIX&FREE'                                             037020
.B12     ANOP                                                             037030
&B12     SETC  '&PREFIX&DCHAR'                                            037040
         AIF   ('&UNUSED' EQ '').B13                                      037050
&B12     SETC  '&PREFIX&UNUSED'                                           037060
.B13     ANOP                                                             037070
&NAME    SLL   &REG,2              CONVERT TYPE CODE INTO AN INDEX        037080
         B     *(&REG)             GO TO APPROPRIATE BRANCH INSTRUCTION   037090
         B     &B1                 CHARACTER                              037100
         B     &B2                 DISPLAY NUMERIC                        037110
         B     &B3                 PACKED DECIMAL                         037120
         B     &B4                 HEXADECIMAL                            037130
         B     &B5                 BIT STRING                             037140
         B     &B6                 PARTIAL KEY MASK                       037150
         B     &B7                 BINARY                                 037160
         B     &B8                 FLOATING POINT                         037170
         B     &B9                 CHARACTER STRING                       037180
         B     &B10                INDICATOR                              037190
         B     &B11                FREE FORMAT DISPLAY NUMERIC            037200
         B     &B12                UNASSIGNED                             037210
         MEND                                                             037220
./ ADD   NAME=CCNO                                                        037230
         MACRO                                                            037240
&NAME    CCNO  &LINE,&ELEVEL=NO,&NULLCB=NO,&REG=R8,&LA=NO,&LABEL=,     *  037250
               &CCNO=YES,&PREFIX=NO                                       037260
.*                                                                        037270
.*       INSERT CONTROL CARD SEQUENCE NUMBER INTO ERROR MESSAGE AND       037280
.*        ISSUE THE ERROR MESSAGE.  THE CONTROL CARD SEQUENCE NUMBER IS   037290
.*        EXTRACTED FROM THE PREFIX OF THE CONTROL BLOCK WHOSE ADDRESS    037300
.*        IS IN &REG.                                                     037310
.*                                                                        037320
.*       ELEVEL=NO|YES             SET FLAG THAT E-LEVEL ERROR FOUND      037330
.*       NULLCB=NO|YES             NULLIFY (NO-OP) CONTROL BLOCK          037340
.*       REG=R8|XX                 REGISTER CONTAINING C/B ADDRESS        037350
.*       LA=NO|YES                 SPECIFY LA=YES IF LINE NOT DIRECTLY    037360
.*                                  ADDRESSABLE ( I.E. BEYOND 1ST 4K )    037370
.*       LABEL=AAAAA               NAME OF FIELD CONTAINING LABEL TO BE   037380
.*                                  INSERTED INTO ERROR MESSAGE           037390
.*       CCNO=YES|NO               SUPPRESS INSERTION OF C/C SEQ NO.      037400
.*       PREFIX=NO|YES             REGISTER ALREADY CONTAINS PREFIX ADR   037410
.*                                                                        037420
         LCLC  &L                                                         037430
&L       SETC  'L'''                                                      037440
         AIF   ('&LA' NE 'YES').NOLA                                      037450
&NAME    L     R1,=A(&LINE)        GET ADDRESS OF MESSAGE                 037460
         MVC   5(&L&LINE,R5),0(R1) MOVE MESSAGE TO BUFFER                 037470
         AGO   .YESLA                                                     037480
.NOLA    ANOP                                                             037490
&NAME    MVC   5(&L&LINE,R5),&LINE MOVE MESSAGE TO BUFFER                 037500
.YESLA   AIF   ('&CCNO' EQ 'NO').NOCCNO                                   037510
         LR    R1,&REG             POINT R1 AT THE CONTROL BLOCK          037520
         AIF   ('&PREFIX' EQ 'YES').C03                                   037530
         S     R1,=A(CBPRLGTH)     POINT R1 AT THE CONTROL BLOCK PREFIX   037540
.C03     USING CBPREFIX,R1         ESTABLISH PREFIX ADDRESSABILITY        037550
         ED    5+&LINE.C-&LINE.(&L&LINE.C,R5),CBPRCCNO ADD C/C SEQ NO.    037560
         DROP  R1                  DROP PREFIX ADDRESSABILITY             037570
.NOCCNO  AIF   ('&LABEL' EQ '').C00                                       037580
         MVC   5+&LINE.L-&LINE.(&L&LABEL,R5),&LABEL SET LABEL IN LINE     037590
.C00     CBAL  R4,PRINT            PRINT THE ERROR MESSAGE                037600
         AIF   ('&ELEVEL' NE 'YES').C01                                   037610
         OI    SWERROR,MERRCCER    FLAG THAT E-LEVEL ERROR ENCOUNTERED    037620
.C01     AIF   ('&NULLCB' NE 'YES').C02                                   037630
         MVI   0(&REG),NULLCB      NULLIFY THE CONTROL BLOCK              037640
.C02     ANOP                                                             037650
         MEND                                                             037660
./ ADD NAME=NULCB                                                         037670
         MACRO                                                            037680
&NAME    NULCB &CB,&LABEL                                                 037690
.*                                                                        037700
.*       TEST IF THE CURRENT CONTROL BLOCK HAS BEEN NULLIFIED, AND        037710
.*        GO TO THE SPECIFIED LABEL IF SO.                                037720
.*                                                                        037730
&NAME    CLI   &CB.ID,NULLCB       TEST IF CONTROL BLOCK IS NULLIFIED     037740
         BE    &LABEL              BR IF YES TO BYPASS PROCESSING         037750
         MEND                                                             037760
./ ADD NAME=LTRR                                                          037770
         MACRO                                                            037780
&NAME    LTRR  &R1,&R2                                                    037790
         AIF   ('&R2' NE '').A01                                          037800
&NAME    LA    &R1,0(,&R1)         PURIFY HIGH-ORDER BYTE                 037810
         AGO   .A02                                                       037820
.A01     ANOP                                                             037830
&NAME    LA    &R1,0(,&R2)         PURIFY HIGH-ORDER BYTE                 037840
.A02     LTR   &R1,&R1             TEST REGISTER VALUE                    037850
         MEND                                                             037860
./ ADD NAME=LTA                                                           037870
         MACRO                                                            037880
&NAME    LTA   &R,&FLD,&EXIT                                              037890
.*                                                                        037900
.*       THIS MACRO FACILITATES THE USE OF 'ICM' FOR OBTAINING THE        037910
.*        ADDRESS OF THE NEXT CONTROL BLOCK IN A CHAIN, AND TESTING       037920
.*        FOR END OF CHAIN.  I ALWAYS FORGET TO ADD '+1' TO THE NAME      037930
.*        OF THE CHAINING FIELD, WHICH LEADS TO UNPREDICTABLE, BUT        037940
.*        ALWAYS UNDESIRABLE RESULTS.                                     037950
.*                                                                        037960
&NAME    ICM   &R,7,&FLD.+1        GET ADDRESS OF NEXT CONTROL BLOCK      037970
         AIF   ('&EXIT' EQ '').A01                                        037980
         BZ    &EXIT               BR IF END OF CHAIN                     037990
.A01     ANOP                                                             038000
         MEND                                                             038010
./  ADD  NAME=DEFOPCD                                                     038020
         MACRO                                                            038030
&NAME    DEFOPCD &OPCD=,&MOD=N,&IND=N,&LIT=N,                          *  038040
               &DSECT=NO,&CARD=NONE,&DTYP=D,&ICODE=,&DFLDT=N,&DFLDL=8, *  038050
               &CBID=                                                     038060
.*                                                                        038070
.*       OPCD  - OPERATION CODE ( E.G. I, DW, C3 )                        038080
.*       ICODE - INTERNAL CODE EQUIVALENT OF OPERATION CODE               038090
.*       CBID  - ID OF ASSOCIATED CBXX CONTROL BLOCK                      038100
.*       MOD   - MODIFIER REQUIRED FLAG ( Y / N )                         038110
.*       IND   - INDICATOR SPECIFICATION REQUIRED FLAG ( Y / N )          038120
.*       LIT   - LITERAL REQUIRED ( Y / N )                               038130
.*                                                                        038140
.*       DSECT - REQUEST FOR DSECT GENERATION ( YES / NO )                038150
.*       CARD  - LABEL OF ASSOCIATED GRXX CONTROL CARD                    038160
.*       DTYP  - DEFAULT PROCESSING TYPE ( E.G. N, A, T )                 038170
.*       DFLDT - DEFAULT DESTINATION FIELD TYPE                           038180
.*       DFLDL - DEFAULT DESTINATION FIELD LENGTH                         038190
.*                                                                        038200
         LCLC  &FLAG1,&FLAG2,&ID                                          038210
         LCLC  &CURFLD                                                    038220
         LCLA  &NFLDS                                                     038230
         AIF   ('&DSECT' EQ 'YES').DSECT                                  038240
         AIF   ('&OPCD' EQ '').ERR01                                      038250
         AIF   ('&ICODE' EQ '').ERR04                                     038260
&ID      SETC  '0'                                                        038270
         AIF   ('&CBID' EQ '').B00                                        038280
&ID      SETC  'FLAG&CBID'                                                038290
.B00     ANOP                                                             038300
&FLAG1   SETC  '0'                                                        038310
&FLAG2   SETC  '0'                                                        038320
         AIF   ('&MOD' EQ 'N').A03                                        038330
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPMOD'                                     038340
.A03     AIF   ('&IND' EQ 'N').A04                                        038350
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPIND'                                     038360
.A04     AIF   ('&LIT' EQ 'N').A05                                        038370
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPLIT'                                     038380
.A05     AIF   ('&CARD' EQ 'NONE').A06                                    038390
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPCARD'                                    038400
.A06     ANOP                                                             038410
.*       INSERT TEST FOR BIT 6 WHEN IT IS ASSIGNED                        038420
.A07     ANOP                                                             038430
&NAME    DC    CL2'&OPCD',AL1(&ID),CL4'&CARD',AL1(&ICODE),CL1'&DTYP'      038440
         DC    CL1'&DFLDT',AL1(&DFLDL),AL1(&FLAG1),AL1(&FLAG2)            038450
         MEXIT                                                            038460
.DSECT   ANOP                                                             038470
***********************************************************************   038480
*        OPERATION/FUNCTION CODE DESCRIPTOR                           *   038490
***********************************************************************   038500
         SPACE 1                                                          038510
OPCDNTRY DSECT                                                            038520
OPCDOPCD DS    CL2                 OPERATION/FUNCTION CODE                038530
OPCDCBID DS    CL1                 ID OF ASSOCIATED CONTROL BLOCK         038540
OPCDCARD DS    CL4                 ID OF ASSOCIATED CONTROL CARD          038550
OPCDICDE DS    CL1                 INTERNAL REPRESENTATION OF FUNCTION    038560
OPCDDTYP DS    CL1                 DEFAULT PROCESSING TYPE ( $PROCTYP )   038570
OPCDFLDT DS    CL1                 DEFAULT DESTINATION FIELD TYPE         038580
OPCDFLDL DS    CL1                 DEFAULT FIELD LENGTH                   038590
OPCDFLG1 DS    CL1                 FLAG BYTE 1                            038600
OPCDFLG2 DS    CL1                 FLAG BYTE 2                            038610
OPCDLGTH EQU   *-OPCDNTRY          LENGTH OF DSECT                        038620
         SPACE 5                                                          038630
***********************************************************************   038640
*        EQUATES FOR FLAG BYTE 1                                      *   038650
***********************************************************************   038660
         SPACE 1                                                          038670
F1OPMOD  EQU   1                   OP-CODE MODIFIER REQUIRED              038680
F1OPIND  EQU   2                   INDICATOR SPECIFICATION REQUIRED       038690
F1OPLIT  EQU   4                   LITERAL VALUE REQUIRED                 038700
F1OPCARD EQU   8                   LABEL OF ASSOCIATED CARD REQUIRED      038710
         SPACE 5                                                          038720
***********************************************************************   038730
*        EQUATES FOR FLAG BYTE 2                                      *   038740
***********************************************************************   038750
         SPACE 1                                                          038760
         MEXIT                                                            038770
.ERRO1   MNOTE 16,'''OPCD='' KEYWORD IS MANDATORY'                        038780
         MEXIT                                                            038790
.ERR04   MNOTE 16,'''ICODE='' KEYWORD IS MANDATORY'                       038800
         MEXIT                                                            038810
         MEND                                                             038820
