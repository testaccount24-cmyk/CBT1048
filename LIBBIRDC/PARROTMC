./ ADD NAME=IOM                                                         PM000010
         MACRO                                                          PM000020
&NAME    IOM   &SUBTYPE,&PARM1,&PARM2,&PARM3,&PARM4,                   *PM000030
               &TYPE=,&LOOP=,&RTN=,&MSGID=,&AUTOPEN=                    PM000040
.*                                                                      PM000050
.*       EQUATES,MAXDD                                                  PM000060
.*                                                                      PM000070
.*       DCBSW,DDNAME,DCBNAME,INPUT ,MANDAT                             PM000080
.*       DCBSW,DDNAME,DCBNAME,OUTPUT,MANDAT                             PM000090
.*       DCBSW,DDNAME,DCBNAME,PRINT,MANDAT                              PM000100
.*                                                                      PM000110
.*       PUT,DCBSW,(REG),PRINT,LNECNT,RTN=HEADING                       PM000120
.*                                                                      PM000130
.*       PUTM,DCBSW,(REG)                                               PM000140
.*                                                                      PM000150
.*       GET,DCBSW,(REG)                                                PM000160
.*                                                                      PM000170
.*       GETM,DCBSW,(REG)                                               PM000180
.*                                                                      PM000190
.*       OPEN,TYPE=DEF                                                  PM000200
.*       CLOSE,TYPE=DEF                                                 PM000210
.*       TIOTSCAN,TYPE=DEF                                              PM000220
.*                                                                      PM000230
.*       OPEN,DCBSW,NOREOPEN,LOOP=1,RTN=OPEN                            PM000240
.*       OPEN,DCBSW,NOREOPEN,LOOP=N,RTN=NAME                            PM000250
.*                                                                      PM000260
.*       CLOSE,DCBSW,LOOP=1,RTN=CLOSE                                   PM000270
.*       CLOSE,DCBSW,LOOP=N,RTN=NAME                                    PM000280
.*                                                                      PM000290
.*       TIOTSCAN,DCBSW,LOOP=1,RTN=TIOTSCAN                             PM000300
.*       TIOTSCAN,DCBSW,LOOP=N,RTN=NAME                                 PM000310
.*                                                                      PM000320
.*       SUMMARY,DCBSW,(REG),PRESENT,RTN=NAME,LOOP=N                    PM000330
.*                                                                      PM000340
.*       AUDIT,DCBSW,(REG),ENDJOB,RTN=NAME,LOOP=N                       PM000350
.*                                                                      PM000360
.*       EOF,DCBSW,BUFF-ADDR                                            PM000370
.*                                                                      PM000380
.*       BLKSZRTN,TYPE=DEF                                              PM000390
.*                                                                      PM000400
.*       IOERROR,(REG),PRINTRTN,EOJRTN,TYPE=DEF                         PM000410
.*                                                                      PM000420
.*       ISRANDOM,DCBSW-ADDR,KEY-ADDR                                   PM000430
.*                                                                      PM000440
         GBLC  &OPEN                                                    PM000450
         LCLA  &MAXDD                                                   PM000460
         LCLC  &BIT0,&BIT1,&DCB                                         PM000470
         LCLC  &BIT8                                                    PM000480
         LCLC  &B,&D                                                    PM000490
         LCLA  &BA,&DA                                                  PM000500
         LCLC  &LABEL,&RTNE,&REG                                        PM000510
         LCLC  &EOJRTNE                                                 PM000520
         LCLC  &LNECNT                                                  PM000530
.*                                                                      PM000540
.*                                                                      PM000550
.*       DETERMINE IF AUTOPEN WAS SPECIFIED                             PM000560
.*                                                                      PM000570
         AIF   ('&AUTOPEN' EQ '').A00                                   PM000580
&OPEN    SETC  'Y'                                                      PM000590
         AIF   ('&AUTOPEN' EQ 'YES').A00                                PM000600
&OPEN    SETC  'N'                                                      PM000610
         AIF   ('&AUTOPEN' EQ 'NO').A00                                 PM000620
         MNOTE 1,'UNKNOWN ''AUTOPEN'' SPECIFICATION - TREATED AS NO'    PM000630
.A00     ANOP                                                           PM000640
         AIF   ('&SUBTYPE' NE 'EQUATES').B00                            PM000650
IOSWMAND EQU   128 0               DDNAME MANDATORY                     PM000660
IOSWINPT EQU   64 0                INPUT DATA SET (DEFAULT)             PM000670
IOSWOUTP EQU   191 0               OUTPUT DATA SET            (NI ONLY) PM000680
IOSWPRES EQU   32 0                DDNAME PRESENT                       PM000690
IOSWOPEN EQU   16 0                DCB NOW OPEN                         PM000700
IOSWCLOS EQU   239 0               CLOSE DCB                  (NI ONLY) PM000710
IOSWEOF  EQU   8 0                 EOF DETECTED                         PM000720
IOSWIOER EQU   4 0                 I/O ERROR DETECTED                   PM000730
IOSWOPNH EQU   2 0                 DCB HAS BEEN OPENED                  PM000740
IOSWEOP  EQU   1 0                 PRINT DATA SET WITH EOP ROUTINE      PM000750
IOPSSW   EQU   0                   DISPLACEMENT OF SWITCH BYTE          PM000760
IOPSEOD  EQU   1                   DISPLACEMENT OF EOD INDICATOR        PM000770
IOPSISI  EQU   2                   DISPLACEMENT OF IS STATUS FLAG       PM000780
IOPSDCB  EQU   4                   DISPLACEMENT OF DCB ADDRESS          PM000790
IOPSDDN  EQU   8                   DISPLACEMENT OF DDNAME               PM000800
IOPSRECA EQU   16                  DISPLACEMENT OF RECORD ADDRESS       PM000810
IOPSRCNT EQU   20                  DISPLACEMENT OF RECORD COUNT         PM000820
IOPSR4SA EQU   24                  DISPLACEMENT OF R4 SAVE AREA         PM000830
IOPSLGTH EQU   28                  LENGTH OF DCBSW C/B                  PM000840
         AIF   ('&PARM1' EQ '').A02                                     PM000850
         AIF   (T'&PARM1 NE 'N').A01                                    PM000860
&MAXDD   SETA  &PARM1                                                   PM000870
IOMMAXDD EQU   &MAXDD 0            MAX NO. OF DD STATEMENTS             PM000880
         AGO   .A02                                                     PM000890
.A01     MNOTE 1,'MAX NO OF DD STATEMENTS IS NON-NUMERIC'               PM000900
.A02     AIF   ('&PARM2' NE '').A03                                     PM000910
         AIF   ('&PARM3' NE '').A03                                     PM000920
         AIF   ('&PARM4' NE '').A03                                     PM000930
         AIF   ('&TYPE' NE '').A03                                      PM000940
         AIF   ('&LOOP' NE '').A03                                      PM000950
         AIF   ('&RTN' NE '').A03                                       PM000960
         AGO   .A04                                                     PM000970
.A03     MNOTE *,'THE SUPERFLUOUS OPERANDS CODED WERE IGNORED'          PM000980
.A04     MEXIT                                                          PM000990
.B00     AIF   ('&SUBTYPE' NE 'DCBSW').C00                              PM001000
         AIF   ('&PARM1' NE '').B01                                     PM001010
         MNOTE 16,'NO DDNAME SUPPLIED FOR DCBSW OPERATION'              PM001020
         MEXIT                                                          PM001030
.B01     AIF   ('&PARM2' NE '').B02                                     PM001040
&DCB     SETC  '&PARM1'                                                 PM001050
         MNOTE *,'NO DCB NAME SUPPLIED - DDNAME ASSUMED'                PM001060
         AGO   .B03                                                     PM001070
.B02     ANOP                                                           PM001080
&DCB     SETC  '&PARM2'                                                 PM001090
.B03     ANOP                                                           PM001100
&BIT0    SETC  '0'                                                      PM001110
&BIT1    SETC  '1'                                                      PM001120
&BIT8    SETC  '0'                                                      PM001130
         AIF   ('&PARM3' EQ '').B04                                     PM001140
         AIF   ('&PARM3' EQ 'INPUT').B05                                PM001150
         AIF   ('&PARM3' EQ 'PRINT').B20                                PM001160
         AIF   ('&PARM3' NE 'OUTPUT').B10                               PM001170
&BIT1    SETC  '0'                                                      PM001180
         AGO   .B05                                                     PM001190
.B20     ANOP                                                           PM001200
&BIT8    SETC  '1'                                                      PM001210
&BIT1    SETC  '0'                                                      PM001220
         AGO   .B05                                                     PM001230
.B04     MNOTE *,'I/O TYPE NOT SPECIFIED - INPUT ASSUMED'               PM001240
.B05     AIF   ('&PARM4' EQ '').B06                                     PM001250
         AIF   ('&PARM4' NE 'MANDAT').B10                               PM001260
&BIT0    SETC  '1'                                                      PM001270
         AGO   .B07                                                     PM001280
.B06     MNOTE *,'DD STATEMENT IS OPTIONAL'                             PM001290
.B07     ANOP                                                           PM001300
&B       SETC  '00000'                                                  PM001310
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM001320
&B       SETC  '&BIT0&BIT1.00000&BIT8'                                  PM001330
&NAME    DC    B'&B',C'X  ',V(&DCB),CL8'&PARM1',A(0),PL4'0',A(0)        PM001340
         AIF   ('&TYPE' NE '').A03                                      PM001350
         AIF   ('&LOOP' NE '').A03                                      PM001360
         AIF   ('&RTN' NE '').A03                                       PM001370
         MEXIT                                                          PM001380
.B10     MNOTE 16,'UNKNOWN POSITIONAL PARAMETER'                        PM001390
         MEXIT                                                          PM001400
.*                                                                      PM001410
.*                                                                      PM001420
.*       IOM   PUT,DCBSW (,(REG) (,PRINT) (,LNECNT) (,RTN=HEADING)      PM001430
.*                                                                      PM001440
.*       IOM   GET,DCBSW (,(REG))                                       PM001450
.*                                                                      PM001460
.C00     AIF   ('&SUBTYPE' EQ 'PUT').C01                                PM001470
         AIF   ('&SUBTYPE' NE 'GET').D00                                PM001480
.C01     AIF   ('&PARM1' NE '').C021                                    PM001490
.C011    MNOTE 16,'MANDATORY DCBSW ADDRESS NOT SUPPLIED'                PM001500
         MEXIT                                                          PM001510
.C021    ANOP                                                           PM001520
&NAME    TM    &PARM1.+IOPSSW,IOSWPRES 0IS DD STATEMENT PRESENT         PM001530
         BZ    IOMC&SYSNDX 0       BYPASS I/O IF NO DD STATEMENT        PM001540
         AIF   ('&OPEN' EQ 'N').C100                                    PM001550
         TM    &PARM1.+IOPSSW,IOSWOPEN 0 TEST IF DCB OPEN               PM001560
         BO    IOME&SYSNDX 0       BRANCH IF OPEN                       PM001570
         ST    R4,&PARM1.+IOPSR4SA 0 PRESERVE R4 RETUR  ADDRESS         PM001580
         LA    R2,&PARM1           POINT R2 AT DCBSW                    PM001590
         CBAL  R4,OPEN,LOOP=NO     OPEN DATA SET                        PM001600
         L     R4,&PARM1.+IOPSR4SA 0 RESTORE SAVED R4 VALUE             PM001610
IOME&SYSNDX EQU * 0                BYPASS OPEN PROCESSING               PM001620
.C100    ANOP                                                           PM001630
         AIF   ('&SUBTYPE' NE 'GET').C023                               PM001640
         TM    &PARM1.+IOPSSW,IOSWEOF 0TEST FOR END OF FILE ALREADY     PM001650
         BO    IOMC&SYSNDX 0       BR IF EOF ALREADY REACHED            PM001660
.C023    ANOP                                                           PM001670
         AIF   ('&SUBTYPE' NE 'PUTM').C024                              PM001680
         LR    R0,&REG             POINT R0 AT DATA                     PM001690
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001700
         L     R15,48(0,R1)        LOAD PUT ROUTINE ADDRESS             PM001710
         BALR  R14,R15             LINK TO PUT ROUTINE                  PM001720
         AGO   .C05                                                     PM001730
.C024    ANOP                                                           PM001740
         AIF   ('&SUBTYPE' NE 'GETM').C025                              PM001750
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001760
         LR    R0,&REG             POINT R0 AT DESTINATION              PM001770
         L     R15,48(0,R1)        LOAD GET ROUTINE ADDRESS             PM001780
         BALR  R14,R15             LINK TO GET ROUTINE                  PM001790
         AGO   .C05                                                     PM001800
.C025    ANOP                                                           PM001810
         AIF   ('&PARM3' NE 'PRINT' OR '&RTN' NE'').C022                PM001820
IOMD&SYSNDX EQU * 0                LOOP BACK FOR EOP POOCESSING         PM001830
.C022    ANOP                                                           PM001840
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001850
         L     R15,48(,R1) 0       GET I/O RTN ADDRESS                  PM001860
         BALR  R14,R15             LINK TO I/O ROUTINE                  PM001870
         ST    R1,&PARM1.+IOPSRECA STORE BUFFER ADDRESS                 PM001880
         AIF   ('&PARM2' EQ '').C05                                     PM001890
         AIF   ('&PARM2'(1,1) EQ '(').C04                               PM001900
.C031    MNOTE 16,'INVALID REGISTER SPECIFICATION FOR &SUBTYPE'         PM001910
         MEXIT                                                          PM001920
.C04     LR    &PARM2(1),R1 0      SET BUFFER ADDRESS IN WORK REGISTER  PM001930
.C05     AP    &PARM1.+IOPSRCNT(4),=P'1' 0 INCREMENT RECORD COUNT       PM001940
         AIF   ('&PARM3' NE 'PRINT').C9                                 PM001950
&LNECNT  SETC  '&PARM4'                                                 PM001960
         AIF   ('&PARM4' NE '').C6                                      PM001970
         MNOTE *,'NO LINE COUNT SUPPLIED - 60 ASSUMED'                  PM001980
         CP    &PARM1.+IOPSRCNT(4),=P'60' TEST FOR END OF PAGE          PM001990
         AGO   .C63                                                     PM002000
.C6      ANOP                                                           PM002010
         AIF   (T'&PARM4 EQ 'N').C62                                    PM002020
         CP    &PARM1.+IOPSRCNT(4),&PARM4 TEST FOR END OF PAGE          PM002030
         AGO   .C63                                                     PM002040
.C62     CP    &PARM1.+IOPSRCNT(4),=P'&LNECNT' 0TEST FOR END OF PAGE    PM002050
.C63     BL    IOMC&SYSNDX 0       BRANCH IF NOT                        PM002060
         ZAP   &PARM1.+IOPSRCNT(4),=P'0' 0 ZEROISE LINE COUNT           PM002070
         AIF   ('&RTN' NE '').C7                                        PM002080
         MNOTE *,'NO EOP ROUTINE SUPPLIED - PAGE SKIP FORCED'           PM002090
         MVI   0(R1),PAGESKIP 0    ESTABLISH PAGE SKIP                  PM002100
         B     IOMD&SYSNDX 0       SKIP TO NEW PAGE                     PM002110
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       PM002120
.C8      AIF   ('&TYPE' NE '').A03                                      PM002130
         AIF   ('&LOOP' NE '').A03                                      PM002140
         MEXIT                                                          PM002150
.C7      ST    R4,IOMD&SYSNDX 0    PRESERVE RETURN ADDRESS              PM002160
         CBAL  R4,&RTN,LOOP=NO     PERFORM HEADING ROUTINE              PM002170
         L     R4,IOMD&SYSNDX 0    RESTORE RETURN ADDRESS               PM002180
         B     IOMC&SYSNDX 0       BRANCH OVER SAVE AREA                PM002190
IOMD&SYSNDX DS F 0                 SAVE AREA FOR R4                     PM002200
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       PM002210
         AGO   .C8                                                      PM002220
.C9      ANOP                                                           PM002230
IOMC&SYSNDX EQU * 0                 END OF ROUTINE                      PM002240
         AIF   ('&PARM3' NE '').A03                                     PM002250
         AIF   ('&PARM4' NE '').A03                                     PM002260
         AIF   ('&TYPE' NE '').A03                                      PM002270
         AIF   ('&LOOP' NE '').A03                                      PM002280
         AIF   ('&RTN' NE '').A03                                       PM002290
         MEXIT                                                          PM002300
.D00     AIF   ('&SUBTYPE' NE 'OPEN').E00                               PM002310
         AIF   ('&TYPE' EQ '').D04                                      PM002320
         AIF   ('&TYPE' EQ 'DEF').D02                                   PM002330
.D01     MNOTE 16,'UNKNOWN TYPE OPERAND'                                PM002340
         MEXIT                                                          PM002350
.*                                                                      PM002360
.*                                                                      PM002370
.*       IOM   OPEN,DCBSW-ADDR, (,NOREOPEN) (,LOOP=N) (,RTN=AAA)        PM002380
.*                                                                      PM002390
.D02     ANOP                                                           PM002400
&LABEL   SETC  'OPEN'                                                   PM002410
         AIF   ('&NAME' EQ '').D03                                      PM002420
&LABEL   SETC  '&NAME'                                                  PM002430
.D03     ANOP                                                           PM002440
&LABEL   DS    0H 0                ENTRY TO OPEN SUBROUTINE             PM002450
         L     R1,IOPSDCB(,R2) 0   GET DCB ADDRESS                      PM002460
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         PM002470
         BNO   0(R4) 0             RETURN IF NOT                        PM002480
         TM    IOPSSW(R2),IOSWOPEN 0 TEST IF DATA SET OPEN              PM002490
         BO    0(R4) 0             RETURN IF DATA STE OPEN              PM002500
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM002510
         ST    R1,*+8 0            STORE DCB ADDRESS                    PM002520
         BAL   R1,*+8              LOAD REG 1 WITH LIST ADDRESS         PM002530
         DC    A(0) 0              DCB ADDRESS                          PM002540
         TM    IOPSSW(R2),IOSWINPT 0 TEST IF INPUT                      PM002550
         BO    IOMD&SYSNDX 0       BRANCH IF YES                        PM002560
         MVI   0(R1),143 0         SET OPTION BYTE FOR INPUT            PM002570
         B     *+8 0               GO TO SVC                            PM002580
IOMD&SYSNDX MVI 0(R1),128          SET OPTION BYTE                      PM002590
         SVC   19 0                ISSUE OPEN SVC                       PM002600
         OI IOPSSW(R2),IOSWOPEN+IOSWOPNH INDICATE DATA SET OPEN         PM002610
         MVI   IOPSEOD(R2),C'X'    RESET EOD INDICATOR IF NECESSARY     PM002620
         BR    R4 0                RETURN TO MAIN-LINE                  PM002630
.D031    AIF   ('&PARM1' NE '').A03                                     PM002640
         AIF   ('&PARM2' NE '').A03                                     PM002650
         AIF   ('&PARM3' NE '').A03                                     PM002660
         AIF   ('&PARM4' NE '').A03                                     PM002670
         AIF   ('&LOOP' NE '').A03                                      PM002680
         AIF   ('&RTN' NE '').A03                                       PM002690
         MEXIT                                                          PM002700
.D04     AIF   ('&PARM1' EQ '').C011                                    PM002710
         AIF   ('&LOOP' EQ '').D05                                      PM002720
&NAME    LA    R10,&LOOP 0         ESTABLISH LOOP                       PM002730
.D05     ANOP                                                           PM002740
&LABEL   SETC  '&NAME'                                                  PM002750
         AIF   ('&LOOP' EQ '').D06                                      PM002760
&LABEL   SETC  ' '                                                      PM002770
.D06     ANOP                                                           PM002780
&LABEL   LA    R2,&PARM1 0         POINT AT DCBSW                       PM002790
         AIF   ('&RTN' EQ '').D07                                       PM002800
&RTNE    SETC  '&RTN'                                                   PM002810
         AGO   .D09                                                     PM002820
.D07     AIF   ('&SUBTYPE' EQ 'CLOSE').D08                              PM002830
&RTNE    SETC  'OPEN'                                                   PM002840
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               PM002850
&RTNE    SETC  'TIOTSCAN'                                               PM002860
         AGO   .D09                                                     PM002870
.D08     ANOP                                                           PM002880
&RTNE    SETC  'CLOSE'                                                  PM002890
.D09     ANOP                                                           PM002900
         AIF   ('&PARM2' NE 'NOREOPEN').D081                            PM002910
         TM    IOPSSW(R2),IOSWOPNH TEST IF OPENED ALREADY               PM002920
         BO    IOME&SYSNDX         BR IF ALREADY OPENED ONCE            PM002930
.D081    ANOP                                                           PM002940
IOMD&SYSNDX CBAL R4,&RTNE 0        PERFORM SUB-ROUTINE                  PM002950
IOME&SYSNDX    EQU *               CONTINUE PROCESSING                  PM002960
         AIF   ('&LOOP' EQ '').D10                                      PM002970
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              PM002980
         BCT   R10,IOMD&SYSNDX 0   LOOP BACK TO PROCESS NEXT            PM002990
.D10     AIF   ('&PARM2' NE '').A03                                     PM003000
         AIF   ('&PARM3' NE '').A03                                     PM003010
         AIF   ('&PARM4' NE '').A03                                     PM003020
         MEXIT                                                          PM003030
.E00     AIF   ('&SUBTYPE' NE 'CLOSE').F00                              PM003040
         AIF   ('&TYPE' EQ 'DEF').E01                                   PM003050
         AIF   ('&TYPE' EQ '').D04                                      PM003060
         AGO   .D01                                                     PM003070
.E01     ANOP                                                           PM003080
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               PM003090
&RTNE    SETC  'TIOTSCAN'                                               PM003100
&LABEL   SETC  'CLOSE'                                                  PM003110
         AIF   ('&NAME' EQ '').E02                                      PM003120
&LABEL   SETC  '&NAME'                                                  PM003130
.E02     ANOP                                                           PM003140
&LABEL   DS    0H 0                ENTRY TO CLOSE SUBROUTINE            PM003150
         TM    IOPSSW(R2),IOSWOPEN TEST IF DATA SET OPEN                PM003160
         BZ    0(R4) 0             RETURN IF NOT                        PM003170
         L     R1,IOPSDCB(R2) 0    GET DCB ADDRESS                      PM003180
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM003190
         ST    R1,*+8 0            STORE DCB ADDRESS                    PM003200
         BAL   R1,*+8              POINT R1 AT PARM LIST                PM003210
         DC    A(0) 0              DCB ADDRESS                          PM003220
         MVI   0(R1),128 0         SET OPTION BYTE                      PM003230
         SVC   20 0                ISSUE CLOSE SVC                      PM003240
         L     R1,IOPSDCB(R2)      GET DCB ADDRESS                      PM003250
       FREEPOOL (R1)               FREE ACQUIRED BUFFER POOL            PM003260
         NI    IOPSSW(R2),IOSWCLOS INDICATE CLOSED                      PM003270
         BR    R4 0                RETURN TO MAIN-LINE                  PM003280
         AIF   ('&PARM1' NE '').A03                                     PM003290
         AIF   ('&PARM2' NE '').A03                                     PM003300
         AIF   ('&PARM3' NE '').A03                                     PM003310
         AIF   ('&PARM4' NE '').A03                                     PM003320
         AIF   ('&LOOP' NE '').A03                                      PM003330
         AIF   ('&RTN' NE '').A03                                       PM003340
         MEXIT                                                          PM003350
.*                                                                      PM003360
.*                                                                      PM003370
.*       IOM   EOF,DCBSW-NAME (,DUMMY BUFFER ADDRESS)                   PM003380
.*                                                                      PM003390
.F00     AIF   ('&SUBTYPE' NE 'EOF').G00                                PM003400
         AIF   ('&PARM1' EQ '').C011                                    PM003410
&NAME    OI    &PARM1.+IOPSSW,IOSWEOF INDICATE EOF                      PM003420
         MVI   &PARM1.+IOPSEOD,C'Y' SET CHARACTER FOR EOF INDICATION    PM003430
         AIF   ('&PARM2' EQ '').F01                                     PM003440
         L     R1,&PARM2           POINT R1 AT DUMMY BUFFER             PM003450
         ST    R1,&PARM1.+IOPSRECA 0PRESERVE DUMMY BUFFER ADDRESS       PM003460
         AGO   .F02                                                     PM003470
.F01     XC    &PARM1.+IOPSRECA(4),&PARM1.+IOPSRECA NULLIFY RECORD ADD  PM003480
.F02     ANOP                                                           PM003490
         AGO   .A02                                                     PM003500
.G00     AIF   ('&SUBTYPE' NE 'TIOTSCAN').H00                           PM003510
         AIF   ('&TYPE' EQ 'DEF').G01                                   PM003520
         AIF   ('&TYPE' NE '').D01                                      PM003530
         AGO   .D04                                                     PM003540
.G01     ANOP                                                           PM003550
&LABEL   SETC  'TIOTSCAN'                                               PM003560
         AIF   ('&NAME' EQ '').G02                                      PM003570
&LABEL   SETC  '&NAME'                                                  PM003580
.G02     ANOP                                                           PM003590
&LABEL   DS    0H 0                ENTRY TO TIOT SCAN ROUTINE           PM003600
*                                                                       PM003610
*        EXTRACT TIOT ADDRESS EVERY TIME LEST TIOT ALTERED BY           PM003620
*         DYNAMICALLY ALLOCATED DD STATEMENTS.                          PM003630
*                                                                       PM003640
         EXTRACT IOMATIOT,'S',FIELDS=TIOT  OBTAIN ADDRESS OF TOOT       PM003650
         B     IOMG&SYSNDX         BRANCH AROUND SAVE AREAS             PM003660
IOMATIOT DS    F 0                 ADDRESS OF TIOT                      PM003670
IOMTIOT1 DS    F 0                 SAVE AREA FOR R3                     PM003680
IOMTIOT2 DS    F 0                 SAVE AREA FOR R10                    PM003690
IOMG&SYSNDX EQU * 0                SUBSEQUENT PROCESSING                PM003700
         ST    R3,IOMTIOT1 0       PRESERVE CONTENTS                    PM003710
         ST    R10,IOMTIOT2 0       OF R3 AND R10                       PM003720
         L     R3,IOMATIOT 0       GET ADDRESS OF TIOT                  PM003730
         LA    R3,24(,R3) 0        POINT AT FIRST DD ENTRY              PM003740
IOMH&SYSNDX CLC 0(4,R3),=F'0' 0     TEST FOR END OF TIOT                PM003750
         BE    IOMI&SYSNDX.+4      RETURN IF YES                        PM003760
         CLC   4(8,R3),IOPSDDN(R2) TEST FOR DDNAME MATCH                PM003770
         BE    IOMI&SYSNDX 0       BRANCH IF YES                        PM003780
         SR    R10,R10 0           ZEROISE WORK REGISTER                PM003790
         IC    R10,0(R3) 0         INSERT ENTRY LENGTH                  PM003800
         AR    R3,R10 0            INCREMENT TO NEXT ENTRY              PM003810
         B     IOMH&SYSNDX 0       LOOP TO PROCESS NEXT ENTRY           PM003820
IOMI&SYSNDX OI IOPSSW(R2),IOSWPRES INDICATE DD STATEMENT PRESENT        PM003830
         L     R3,IOMTIOT1 0       RETRIEVE CONTENTS                    PM003840
         L     R10,IOMTIOT2 0       OF R3 AND R10                       PM003850
         BR    R4 0                RETURN TO MAIN LINE                  PM003860
         AGO   .D031                                                    PM003870
.H00     AIF   ('&SUBTYPE' NE 'BLKSZRTN').I00                           PM003880
         AIF   ('&TYPE' EQ 'DEF').H02                                   PM003890
         AIF   ('&TYPE' NE '').D01                                      PM003900
         MNOTE 16,'INCOMPLETE BLKSIZE REQUEST'                          PM003910
         MEXIT                                                          PM003920
.H02     ANOP                                                           PM003930
&LABEL   SETC  'BLKSZRTN'                                               PM003940
         AIF   ('&NAME' EQ '').H01                                      PM003950
&LABEL   SETC  '&NAME'                                                  PM003960
.H01     ANOP                                                           PM003970
&LABEL   DS    0H 0                SUPPLY DEFAULT IF NO BLOCK SIZE      PM003980
         USING IHADCB,R1 0         ESTABLISH DCB ADDRESSABILITY         PM003990
         CLC   DCBBLKSI,=F'0' 0    TEST IF BLKSIZE SUPPLIED             PM004000
         BNE   0(R14) 0            RETURN TO OPEN IF YES                PM004010
         MVC   DCBBLKSI,DCBLRECL 0 MOVE LRECL TO BLKSIZE                PM004020
         BR    R14 0               RETURN TO OS OPEN ROUTINE            PM004030
         DROP  R1 0                DROP DCB ADDRESSABILITY              PM004040
         AGO   .D031                                                    PM004050
.*                                                                      PM004060
.*                                                                      PM004070
.*       IOM   SUMMARY,DCBSW-ADDR,(REG),RTN= (,MSGID=)                  PM004080
.*                                                                      PM004090
.I00     AIF   ('&SUBTYPE' NE 'SUMMARY').J00                            PM004100
         AIF   ('&PARM1' EQ '').C011                                    PM004110
         AIF   ('&PARM2' NE '').I01                                     PM004120
.I001    MNOTE 16,'MANDATORY REGISTER SPECIFICATION IS MISSING'         PM004130
         MEXIT                                                          PM004140
.I01     AIF   ('&PARM2'(1,1) NE '(').C031                              PM004150
         AIF   ('&RTN' NE '').I02                                       PM004160
.I011    MNOTE 16,'MANDATORY RTN NAME IS MISSING'                       PM004170
         MEXIT                                                          PM004180
.I02     ANOP                                                           PM004190
&NAME    DS    0H 0                PRINT SUMMARY OF D/S ACTIVITY        PM004200
         LA    R2,&PARM1 0         GET DCBSW ADDRESS                    PM004210
         AIF   ('&LOOP' EQ '').I03                                      PM004220
         LA    R10,&LOOP 0         ESTABLISH LOOP                       PM004230
IOMI&SYSNDX EQU * 0                RETURN POINT FOR LOOP                PM004240
.I03     AIF   ('&PARM3' EQ '').I05                                     PM004250
         AIF   ('&PARM3' NE 'PRESENT').B10                              PM004260
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         PM004270
         BZ    IOMJ&SYSNDX 0       BYPASS PROCESSING IF NOT             PM004280
.I05     ANOP                                                           PM004290
&REG     SETC  '&PARM2(1)'                                              PM004300
         TM    IOPSSW(R2),IOSWEOP  TEST IF PRINT DATA SET               PM004310
         BO    IOMJ&SYSNDX         BYPASS PROCESSING IF YES             PM004320
&BA      SETA  0                                                        PM004330
         AIF   ('&MSGID' EQ '').I10                                     PM004340
&BA      SETA  K'&MSGID                                                 PM004350
         AIF   ('&MSGID'(1,1) NE '''').I30                              PM004360
&BA      SETA  &BA-2                                                    PM004370
.I30     ANOP                                                           PM004380
         AIF   ('&MSGID'(1,1) NE '''').I20                              PM004390
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             PM004400
         AGO   .I21                                                     PM004410
.I20     ANOP                                                           PM004420
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            PM004430
.I21     ANOP                                                           PM004440
&BA      SETA  &BA+2                                                    PM004450
.I10     ANOP                                                           PM004460
&DA      SETA  &BA+5                                                    PM004470
         MVC   &DA.(18,&REG),=C'NUMBER OF RECORDS ' ADD MESSSAGE TO BUF PM004480
&DA      SETA  &BA+23                                                   PM004490
         MVC   &DA.(11,&REG),=C'READ FROM  ' ADD FUTHER MESSAGE         PM004500
         TM    IOPSSW(R2),IOSWINPT TEST IF INPUT DATA SET               PM004510
         BO    *+10                BR IF INPUT                          PM004520
         MVC   &DA.(11,&REG),=C'WRITTEN TO ' SHOW WHITTEN TO NOT READ   PM004530
&DA      SETA  &BA+34                                                   PM004540
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DNAME TO MESSAGE            PM004550
&DA      SETA  &BA+42                                                   PM004560
         MVC   &DA.(2,&REG),=C' =' ADD EQUALS SIGN TO MESSGGE           PM004570
&DA      SETA  &BA+44                                                   PM004580
         MVC   &DA.(10,&REG),=X'40206B2020206B202120' EDIT MASK TO MSG  PM004590
         ED    &DA.(10,&REG),IOPSRCNT(R2) EDIT THE RECORD COUNT         PM004600
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                PM004610
IOMJ&SYSNDX EQU * 0                BYPASS BRANCH ADDRESS                PM004620
.I06     AIF   ('&LOOP' EQ '').I07                                      PM004630
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              PM004640
         BCT   R10,IOMI&SYSNDX 0   LOOP TO PROCESS NEXT                 PM004650
.I07     AIF   ('&PARM4' NE '').A03                                     PM004660
         AIF   ('&TYPE' NE '').A03                                      PM004670
         MEXIT                                                          PM004680
.*                                                                      PM004690
.*                                                                      PM004700
.*       IOM   AUDIT,DCBSW-ADDR,(REG),EOJRTN,RTN= (,MSGID=)             PM004710
.*                                                                      PM004720
.J00     AIF   ('&SUBTYPE' NE 'AUDIT').K00                              PM004730
         AIF   ('&PARM1' EQ '').C011                                    PM004740
         AIF   ('&PARM3' NE '').J001                                    PM004750
         MNOTE *,'NO END-OF-JOB ROUTINE ADDRESS SUPPLIED'               PM004760
         MNOTE *,'PROGRAM WILL ABEND WITH 0C1 IF MANDATORY STATEMENT MI$PM004770
               SSING'                                                   PM004780
.J001    ANOP                                                           PM004790
         AIF   ('&PARM2' EQ '').I001                                    PM004800
         AIF   ('&PARM2'(1,1) NE '(').C031                              PM004810
         AIF   ('&RTN' EQ '').I011                                      PM004820
&NAME    DS    0H 0                REPORT ON PRESENCE OF DD STATEMENTS  PM004830
         LA    R2,&PARM1           GET DCBSW ADDRESS                    PM004840
         AIF   ('&LOOP' EQ '').J01                                      PM004850
         LA    R10,&LOOP 0         ESTABLISH LOOP                       PM004860
IOMJ&SYSNDX EQU * 0                RETURN POINT FOR LOOP                PM004870
.J01     ANOP                                                           PM004880
&REG     SETC  '&PARM2(1)'                                              PM004890
&BA      SETA  0                                                        PM004900
         AIF   ('&MSGID' EQ '').J10                                     PM004910
&BA      SETA  K'&MSGID                                                 PM004920
         AIF   ('&MSGID'(1,1) NE '''').J30                              PM004930
&BA      SETA  &BA-2                                                    PM004940
.J30     ANOP                                                           PM004950
         AIF   ('&MSGID'(1,1) NE '''').J20                              PM004960
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             PM004970
         AGO   .J21                                                     PM004980
.J20     ANOP                                                           PM004990
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            PM005000
.J21     ANOP                                                           PM005010
&BA      SETA  &BA+2                                                    PM005020
.J10     ANOP                                                           PM005030
&DA      SETA  &BA+5                                                    PM005040
         MVC   &DA.(35,&REG),=C'MANDATORY DATA SET          PRESENT'    PM005050
&DA      SETA  &BA+24                                                   PM005060
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DDNAME TO MESSAGE           PM005070
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    PM005080
         BO    *+10 0              BRANCH IF YES                        PM005090
&DA      SETA  &BA+5                                                    PM005100
         MVC   &DA.(9,&REG),=C' OPTIONAL' SHOW DATA SET IS OPTIONAL     PM005110
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      PM005120
         BO    *+10 0              BRANCH IF YES                        PM005130
&DA      SETA  &BA+33                                                   PM005140
         MVC   &DA.(7,&REG),=C'MISSING' SHOW DATA SET IS MISSING        PM005150
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                PM005160
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    PM005170
         BZ    IOMK&SYSNDX 0       BRANCH IF NOT                        PM005180
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      PM005190
         BO    IOMK&SYSNDX 0       BRANCH IF YES                        PM005200
         OI    IOML&SYSNDX.+1,X'F0' 0    SET TO BRANCH AT END OF JOB    PM005210
         MVC   IOMM&SYSNDX.+27(8),IOPSDDN(R2) ADD DD NAME TO WRO        PM005220
IOMM&SYSNDX WTO 'MANDATORY DATA SET ******** MISSING'                   PM005230
IOMK&SYSNDX EQU * 0                                                     PM005240
         AIF   ('&LOOP' EQ '').J02                                      PM005250
         LA    R2,IOPSLGTH(,R2) 0  POINT AT NEXT DCBSW                  PM005260
         BCT   R10,IOMJ&SYSNDX 0   LOOP BACK TO PROCESS                 PM005270
.J02     ANOP                                                           PM005280
&RTNE    SETC  '*+2'                                                    PM005290
         AIF   ('&PARM3' NE '').J03                                     PM005300
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED'                       PM005310
         AGO   .J04                                                     PM005320
.J03     ANOP                                                           PM005330
&RTNE    SETC  '&PARM3'                                                 PM005340
.J04     ANOP                                                           PM005350
IOML&SYSNDX BC 0,&RTNE 0           GO TO END-OF-JOB IF MAND MISSING     PM005360
         AGO   .I07                                                     PM005370
.*                                                                      PM005380
.*                                                                      PM005390
.*       IOM   IOERROR,(REG),PRINTRTN,EOJRTN,MSGID=TEXT' (,TYPE=DEF)    PM005400
.*                                                                      PM005410
.K00     AIF   ('&SUBTYPE' NE 'IOERROR').L00                            PM005420
         AIF   ('&TYPE' EQ 'DEF').K01                                   PM005430
         AIF   ('&TYPE' NE '').D01                                      PM005440
         MNOTE 16,'INVALID I/O ERROR REQUEST'                           PM005450
         MEXIT                                                          PM005460
.K01     ANOP                                                           PM005470
&RTNE    SETC  'PRINT'                                                  PM005480
&EOJRTNE SETC  'PRINTCDE'                                               PM005490
&REG     SETC  'R5'                                                     PM005500
&LABEL   SETC  'IOERROR'                                                PM005510
         AIF   ('&NAME' EQ '').K02                                      PM005520
&LABEL   SETC  '&NAME'                                                  PM005530
.K02     AIF   ('&PARM3' NE '').K03                                     PM005540
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED - ''PRINTCDE'' ASSUMD' PM005550
         AGO   .K04                                                     PM005560
.K03     ANOP                                                           PM005570
&EOJRTNE SETC  '&PARM3'                                                 PM005580
.K04     AIF   ('&PARM2' NE '').K05                                     PM005590
         MNOTE *,'NO PRINT ROUTINE ADDRESS - ''PRINT'' ASSUMED'         PM005600
         AGO   .K06                                                     PM005610
.K05     ANOP                                                           PM005620
&RTNE    SETC  '&PARM2'                                                 PM005630
.K06     AIF   ('&PARM1' EQ '').K07                                     PM005640
         AIF   ('&PARM1'(1,1) NE '(').C031                              PM005650
&REG     SETC  '&PARM1(1)'                                              PM005660
         AGO   .K08                                                     PM005670
.K07     MNOTE *,'NO REGISTER SPECIFIED - R5 ASSUMED'                   PM005680
.K08     ANOP                                                           PM005690
&LABEL   DS    0H 0                ENSURE ALIGNMENT                     PM005700
        SYNADAF ACSMETH=QSAM 0     CALL ANALYSIS ROUTINE                PM005710
         MVC   IOMM&SYSNDX,50(R1) ADD RESULT OF ANALYSIS                PM005720
        SYNADRLS , 0               RELEASE OS BUFFER                    PM005730
         WTO   MF=(E,IOML&SYSNDX) 0TELL OPERATOR OF ERROR               PM005740
         MVI   0(&REG),SPCE2AFT 0  ESTABLISH DOUBLE BLANK LINES         PM005750
         CBAL  R4,&RTNE,LOOP=NO     AND WRITE THEM                      PM005760
         MVC   5(98,&REG),IOMM&SYSNDX 0 MOVE IN ERROR MESSAGE           PM005770
         CBAL  R4,&RTNE,LOOP=NO    WRITE ERROR MESSAGE                  PM005780
        SUBOUT RETURN=&EOJRTNE 0   TERMINATE JOB                        PM005790
         SPACE 1                                                        PM005800
IOML&SYSNDX DS 0F                                                       PM005810
         DC    AL2(IOMN&SYSNDX.-*),AL2(0)                               PM005820
         AIF   ('&MSGID' EQ '').K09                                     PM005830
         DC    C&MSGID             MESSAGE IDENTIFIER                   PM005840
.K09     DC    C'I/O ERROR - '                                          PM005850
IOMM&SYSNDX DC CL86' '             TEXT OF ERROR ANALYSIS               PM005860
IOMN&SYSNDX EQU *                  END OF I/O ERROR MESSAGE             PM005870
         MEXIT                                                          PM005880
.L00     AIF   ('&SUBTYPE' NE 'PUTM').M00                               PM005890
.L01     ANOP                                                           PM005900
         AIF   ('&PARM1' EQ '').C011                                    PM005910
&REG     SETC  'R1'                                                     PM005920
         AIF   ('&PARM2' EQ '').C021                                    PM005930
         AIF   ('&PARM2'(1,1) NE '(').C031                              PM005940
&REG     SETC  '&PARM2(1)'                                              PM005950
         AGO   .C021                                                    PM005960
.M00     AIF   ('&SUBTYPE' EQ 'GETM').L01                               PM005970
.N00     AIF   ('&SUBTYPE' NE 'ISRANDOM').O00                           PM005980
.*                                                                      PM005990
.*                                                                      PM006000
.*       IOM   ISRANDOM,DCBSW-ADDR,KEY-ADDR                             PM006010
.*                                                                      PM006020
&NAME    LA    R2,&PARM1           POINT R2 AT DCBSW                    PM006030
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD NOT FOUND              PM006040
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMNT PRESENT          PM006050
         BZ    IOMN&SYSNDX         BYPASS I/O IF DD STAT MISSING        PM006060
         AIF   ('&OPEN' EQ 'N').N01                                     PM006070
         TM    IOPSSW(R2),IOSWOPEN TEST IF DD STATEMENT OPEN            PM006080
         BO    IOON&SYSNDX         BR IF OPEN                           PM006090
         CBAL  R4,ISOPEN           OPEN DCB                             PM006100
.N01     ANOP                                                           PM006110
IOON&SYSNDX LA R1,IOPSDCB(R2)      GET DCB ADDRESS                      PM006120
         LA    R15,&PARM2          GET KEY ADDRESS                      PM006130
         READ  DECB&SYSNDX,K,(R1),'S','S',(R15) READ IS RANDOMLY        PM006140
         CHECK DECB&SYSNDX,DSORG=IS WAIT FOR COMPLETION OF I/O          PM006150
.*       WAIT  ECB=DECB&SYSNDX     WAIT FR COMPLETION OF I/O            PM006160
         TM    DECB&SYSNDX.+24,DCBEXNKY TEST IF RECORD NOT FOUND        PM006170
         BO    IOMN&SYSNDX         EXIT TEST IF RECORD NOT FOUND        PM006180
.*       MVI   IOPSISI(R2),C'W'    ASSUME SOME SORT OF ERROR OCCURRED   PM006190
.*       CLC   DECB&SYSNDX.+24(2),=X'0000' TEST IF ERROR CONDITION      PM006200
.*       BNE   IOMN&SYSNDX         EXIT IF ANY ERROR CONDITION          PM006210
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD IS DELETED             PM006220
         L     R1,IOPSDCB(R2)      GET ADDRESS OF DCB                   PM006230
         TM    DCBOPTCD-IHADCB(R1),DCBOPTL DOES DELETE FLAG EXIST       PM006240
         BZ    *+16                BR IF NO DELETE FLAG                 PM006250
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                   PM006260
         CLI   0(R1),X'FF'         TEST IF RECORD IS DELETED            PM006270
         BE    IOMN&SYSNDX         EXIT IF RECORD DELETED               PM006280
         MVI   IOPSISI(R2),C'X'    SHOW RECORD FOUND                    PM006290
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                   PM006300
IOMN&SYSNDX EQU *                  CONTINUE PROCESSING                  PM006310
         MEXIT                                                          PM006320
.O00     ANOP                                                           PM006330
         MNOTE 16,'UNKNOWN MACRO SUBTYPE'                               PM006340
         MEND                                                           PM006350
./ ADD NAME=RTNDEF                                                      PM006360
         MACRO                                                          PM006370
       RTNDEF  &RTN                                                     PM006380
.*                                                                      PM006390
.*       CREATE ROUTINE DEFINITION OF THE FORM                          PM006400
.*             . V(ROUTINE)                                             PM006410
.*             . AL1(CSECT SUFFIX NO)                                   PM006420
.*             . AL3(BASE REGISTER SAVE AREA)                           PM006430
.*                                                                      PM006440
         AIF   ('&SYSECT' EQ 'BUDGIE3').GEN                             PM006450
         AIF   ('&SYSECT' EQ 'PARROT').GEN                              PM006460
         AGO   .NOGEN                                                   PM006470
.GEN     ANOP                                                           PM006480
$&RTN    DC    V(&RTN),AL1(0),AL3(0)                                    PM006490
         MEXIT                                                          PM006500
.NOGEN   ANOP                                                           PM006510
$&RTN    DC    A(0),AL1(0),AL3(0) DEFINE ROUTINE                        PM006520
         MEND                                                           PM006530
./ ADD NAME=CBAL                                                        PM006540
         MACRO                                                          PM006550
&NAME    CBAL  &R,&RTN,&LOOP=YES,&NESTED=NO                             PM006560
         GBLC  &CBAL                                                    PM006570
         LCLC  &T                                                       PM006580
.*                                                                      PM006590
.*       ESTABLISH LINKAGE TO SUB-ROUTINE                               PM006600
.*                                                                      PM006610
.*       &R    - RETURN REGISTER ( MAY BE OMITTED )                     PM006620
.*       &RTN  - ROUTINE NAME                                           PM006630
.*       &LOOP=YES - SET GLOBAL SYMOLIC '&CBAL' TO 'Y' TO TRIGGER       PM006640
.*                   DETECTION OF SUBROUTINES WITH POTENTIAL LOOPS      PM006650
.*       &LOOP=NO  - DO NOT SET GLOBAL SYMBOL '&CBAL'                   PM006660
.*       &NESTED=NO - USE NORMAL CBAL REGISTER PRESERVATION TECHNIQUES  PM006670
.*       &NESTED=YES - PRESERVE BASE REGISTER WITHIN CODE               PM006680
.*                                                                      PM006690
.*       CBAL TECHNOLOGY PRECLUDES ISSUING A CBAL TO A ROUTINE THAT IN  PM006700
.*        TURN CBALS TO THE ORIGINAL ROUTINE, IF THE ROUTINES ARE IN    PM006710
.*        DIFFERENT CSECTS, BECAUSE WHEN THE ORIGINAL ROUTINE RETURNS   PM006720
.*        CONTROL TO THE ROUTINE THAT INVOKED IT, THE WROND BASE        PM006730
.*        REGISTER WILL BE RESTORED.  SUCH A SEQUENCE IS UNUSUAL - IT   PM006740
.*        HAS TAKEN ME THREE YEARS TO ENCOUNTER IT - BUT IT CAN HAPPEN. PM006750
.*        (VIZ 'WRITEP', A WRITE ROUTINE THAT CAN INVOKE A HEADING RTN  PM006760
.*        WHICH CAN INVOKE A PROCESSING ROUTINE WHICH CAN IN TUNR       PM006770
.*        INVOKE WRITEP).  TO CATER FOR THIS EVENTUALITY, 'NESTED=YES'  PM006780
.*        CAUSES THE BASE REGISTER TO BE PRESERVED WITHIN THE MACRO     PM006790
.*        EXPANSION, AND THUS ENSURING THE CORRECT VALUE IS RESTORED.   PM006800
.*                                                                      PM006810
         AIF   ('&R' EQ '').X00                                         PM006820
         AIF   ('&LOOP' EQ 'NO').X00                                    PM006830
&CBAL    SETC  'Y'                                                      PM006840
.X00     ANOP                                                           PM006850
&T       SETC  T'&RTN                                                   PM006860
         AIF   (T'&RTN EQ 'U').A01 BR IF ROUTINE UNDEFINED              PM006870
         AIF   (T'&RTN EQ 'T').A01 BRANCH IF ROUTINE EXTRN              PM006880
         AIF   (T'&RTN EQ '$').A01 BRANCH IF ROUTINE WXTRN              PM006890
.*                                                                      PM006900
.*       ASSUME THAT THE ROUTINE EXISTS IN THIS CSECT                   PM006910
.*                                                                      PM006920
         AIF   ('&R' NE '').A00                                         PM006930
&NAME    B     &RTN                GO TO REQUESTED ROUTINE              PM006940
         MEXIT                                                          PM006950
.A00     ANOP                                                           PM006960
&NAME    BAL   &R,&RTN             PERFORM REQUESTED ROUTINE            PM006970
         MEXIT                                                          PM006980
.A01     ANOP                                                           PM006990
.*                                                                      PM007000
.*       ROUTINE IS IN ANOTHER CSECT SO ESTABLISH LINKAGE VIA CCB       PM007010
.*                                                                      PM007020
&NAME    LA    R9,$&RTN            POINT AT RTN DEFINITION IN CCB       PM007030
         AIF   ('&R' NE '').A03                                         PM007040
         B     $CBALINK            BR TO LINKAGE ROUTINE                PM007050
         AGO   .A04                                                     PM007060
.A03     ANOP                                                           PM007070
         AIF   ('&NESTED' NE 'YES').N01                                 PM007080
         CNOP  0,4                 ENSURE ALIGNMENT                     PM007090
         ST    R12,*+16            PRESERVE BASE REGISTER IN S/A        PM007100
.N01     ANOP                                                           PM007110
         BAL   R4,$CBALINK         BR TO LINKAGE ROUTINE                PM007120
.A04     ANOP                                                           PM007130
         AIF   ('&SYSECT' EQ 'PARROT').A02                              PM007140
         AIF   ('&SYSECT' EQ 'BUDGIE3').A02                             PM007150
         AIF   ('&NESTED' NE 'YES').N02                                 PM007160
         L     R12,8(R4)           RESTORE BASE REGISTER FROM S/A       PM007170
         B     *+8                 BRANCH OVER REGISTER SAVE AREA       PM007180
         DS    F                   SAVE AREA FOR BASE REGISTER          PM007190
         AGO   .A02                                                     PM007200
.N02     ANOP                                                           PM007210
         L     R12,$&RTN.+4        RESTORE SUB-CSECT BASE REGISTER      PM007220
.A02     ANOP                                                           PM007230
         MEND                                                           PM007240
./ ADD NAME=GETCB                                                       PM007250
         MACRO                                                          PM007260
&NAME    GETCB &CB,&BACK,&START,&CBLABL=,&GR13=NO                       PM007270
.*                                                                      PM007280
.*       ACQUIRE CORE FOR AND CHAIN A NEW C/B                           PM007290
.*       ACQUIRE AND INITIALISE CONTROL BLOCK PREFIX                    PM007300
.*       REGISTER 2 MUST CONTAIN THE REQUIRED LENGTH                    PM007310
.*       C/B ADDRESSABILITY MUST BE ESTABLISHED VIA R8                  PM007320
.*       &BACK=BACK - REQUESTS THAT BACK CHAINING BE ESTABLISHED        PM007330
.*       &BACK=NOCHAIN - NO CHAINING OTHER THAN C/B PREFIX              PM007340
.*       &START - IDENTIFES THE DUMMY FIRST ELEMENT AT THE START OF CHN PM007350
.*       &CBLABL - NAME OF FIELD CONTAINING LABEL TO GO IN 'CBPRLABL'   PM007360
.*       &GR13=NO|YES - FLAG PREFIX FOR GR13 RESOLUTION                 PM007370
.*                                                                      PM007380
&NAME    LA    R2,CBPRLGTH(,R2)    INCREMENT BY LENGTH OF C/B PREFIX    PM007390
         CBAL  R4,GETMAIN          ACQUIRE CORE FOR CONTROL BLOCK       PM007400
         USING CBPREFIX,R1         ESTABLISH PREFIX ADDRESSABILITY      PM007410
         MVC   CBPRNAME,=CL4'&CB'  SET C/B IDENTIFIER IN PREFIX         PM007420
         STH   R2,CBPRLEN          PRESERVE C/B LENGTH IN PREFIX        PM007430
         ZAP   CBPRCCNO,$CCSEQNO   SET C/C SEQ NO IN PREFIX             PM007440
         L     R15,$CBPLAST        GET ADDRESS OF PREVIOUS C/B PREFIX   PM007450
         ST    R1,CBPRCBPR-CBPREFIX(R15) POINT PREV PREFIX AT THIS ONE  PM007460
         ST    R1,$CBPLAST         SAVE THIS PREFIX ADDRESS AS THE LAST PM007470
         MVI   CBPRSW,0            INITIALISE SWITCH BYTE               PM007480
         AIF   ('&CBLABL' EQ '').A02                                    PM007490
         MVC   CBPRLABL,&CBLABL    SET LABEL IN PREFIX FOR LATER        PM007500
.A02     AIF   ('&GR13' EQ 'NO').A03                                    PM007510
         OI    CBPRSW,MCBPGR13     FLAG THAT PCB REFERENCE IS REQUIRED  PM007520
.A03     ANOP                                                           PM007530
         DROP  R1                  DROP PREFIX ADDRESSABILITY           PM007540
         LA    R1,CBPRLGTH(,R1)    POINT R1 PAST PREFIX AT C/B          PM007550
         LR    R8,R1               POINT BASE REGISTER AT C/B           PM007560
         AIF   ('&BACK' EQ 'NOCHAIN').A01                               PM007570
         L     R1,$PTR&CB          RETRIEVE CURRENT C/B POINTER         PM007580
         ST    R8,$PTR&CB          ESTABLISH NEW C/B AS CURRENT         PM007590
         MVC   &CB&CB-&CB.NTRY+1(3,R1),$PTR&CB+1 POINT LAST AT THIS ONE PM007600
         MVI   &CB.ID,FLAG&CB      IDENTIFY CURRENT C/B                 PM007610
.*       ZAP   &CB.CCNO,SYSIN+IOPSRCNT(4) ADD C/C SEQ NO TO C/B         PM007620
         AIF   ('&BACK' NE 'BACK').A01                                  PM007630
         ST    R1,&CB.L&CB         POINT NEW C/B AT LAST                PM007640
         ST    R8,$LPTR&CB         PRESERVE ADDRESS OF LAST IN CHAIN    PM007650
         AIF   ('&START' EQ '').A01                                     PM007660
         CLM   R8,7,&START.+1      IS THIS C/B THE 1ST IN THE CHAIN     PM007670
         BNE   *+10                BR IF NOT 1ST IN CHAIN               PM007680
         XC    &CB.L&CB.(4),&CB.L&CB ZEROISE BACK POINTER IF 1ST C/B    PM007690
.A01     ANOP                                                           PM007700
         MEND                                                           PM007710
./ ADD NAME=CHNCB                                                       PM007720
         MACRO                                                          PM007730
&NAME    CHNCB &CB,&A                                                   PM007740
.*                                                                      PM007750
.*       SET CURRENT C/B POINTERS ( IN CCB ) TO POINT AT CHAIN ADDRESSE PM007760
.*        IN THIS C/B TO FACILITATE CHAINING OF DEPENDENT C/B'S         PM007770
.*                                                                      PM007780
         LCLA  &CNT,&LMIT,&L,&D                                         PM007790
         LCLC  &CC,&CC2                                                 PM007800
&LMIT    SETA  N'&SYSLIST                                               PM007810
         AIF   (&LMIT GT 1).A00                                         PM007820
         MNOTE 1,'INSUFFICIENT OPERANDS'                                PM007830
         MEXIT                                                          PM007840
.A00     ANOP                                                           PM007850
&CNT     SETA  1                                                        PM007860
.A01     ANOP                                                           PM007870
&CNT     SETA  &CNT+1                                                   PM007880
         AIF   ('&CNT' GT '&LMIT').A02                                  PM007890
&CC      SETC  '&SYSLIST(&CNT)'                                         PM007900
&L       SETA  K'&SYSLIST(&CNT)                                         PM007910
&D       SETA  &L-2                                                     PM007920
&CC2     SETC  '&CC'(&D,3)                                              PM007930
         AIF   ('&SYSECT'(1,6) EQ 'PARROT').A03                         PM007940
&CC2     SETC  '&CC'                                                    PM007950
.A03     ANOP                                                           PM007960
         LA    R1,&CB&CC           POINT AT CHAIN ADDRESS WITHIN C/B    PM007970
         ST    R1,$PTR&CC2         PRESERVE AS CURRENT TO FACILITATE CH PM007980
         AGO   .A01                                                     PM007990
.A02     MEND                                                           PM008000
./ ADD NAME=ABEND                                                       PM008010
         MACRO                                                          PM008020
&NAME    ABEND &N,&FULL                                                 PM008030
.*                                                                      PM008040
.*       PREPARE TO ABNORMALLY TERMIATE                                 PM008050
.*                                                                      PM008060
&NAME    LA    R9,&N               SET ABEND CODE IN WORK REGISTER      PM008070
         STH   R9,$ABNDCDE+2       PRESERVE ABEND CODE IN CCB           PM008080
         AIF   ('&FULL' NE 'FULL').A01                                  PM008090
         OI    $ABNDCDE,FULLDUMP   SET FOR FULL CORE DUMP               PM008100
.A01     ANOP                                                           PM008110
         CBAL  ,DUMP               GO TO DUMP ROUTINE                   PM008120
         MEND                                                           PM008130
./ ADD NAME=COUNT                                                       PM008140
         MACRO                                                          PM008150
&NAME    COUNT &DCBSW,&NO                                               PM008160
.*                                                                      PM008170
.*       INCREMENT RECORD COUNTER IN DCBSW                              PM008180
.*                                                                      PM008190
         AIF   ('&NO' NE '0').A03                                       PM008200
&NAME    ZAP   &DCBSW.+IOPSRCNT(4),=P'0' ZEROISE LINE COUNT             PM008210
         MEXIT                                                          PM008220
.A03     ANOP                                                           PM008230
&NAME    AP    &DCBSW.+IOPSRCNT(4),=P'&NO' INCREMENT LINE COUNT         PM008240
         MEND                                                           PM008250
./ ADD NAME=LINE                                                        PM008260
         MACRO                                                          PM008270
&NAME    LINE  &MSG,&DISP,&SKIPCHR,&PRINT=,&S=,&ELEVEL=NO,&LA=NO        PM008280
.*                                                                      PM008290
.*       SET UP MESSAGE FOR SYSPRINT AND PRINT IT                       PM008300
.*                                                                      PM008310
.*       &MSG  - NAME OF MESSAGE                                        PM008320
.*       &DISP - DISPLACEMENT IN LINE: DEFAULT=5                        PM008330
.*       &SKIPCHR - CARRIAGE CONTROL CHARACTER: DEFAULT-NOT ALTERED     PM008340
.*       &PRINT - NAME OF PRINT ROUTINE: DEFAULT=PRINT                  PM008350
.*       &S=   - NO. OF LINES TO SPACE: DEFAULT-NOT ALTERED             PM008360
.*       &ELEVEL= - 'YES' = E-LEVEL ERROR: DEFAULT=NO                   PM008370
.*       &LA=  - 'YES' = MESSAGE NOT DIRECTLY ADDRESSABLE SO 'LA'       PM008380
.*                                                                      PM008390
         LCLC  &D,&L                                                    PM008400
         LCLA  &LEN,&DD                                                 PM008410
&L       SETC  'L'''                                                    PM008420
&D       SETC  '5'                                                      PM008430
         AIF   ('&DISP' EQ '').A01                                      PM008440
&D       SETC  '&DISP'                                                  PM008450
.A01     ANOP                                                           PM008460
&DD      SETA  5                                                        PM008470
         AIF   ('&DISP' EQ '').A05                                      PM008480
&DD      SETA  &DISP                                                    PM008490
.A05     ANOP                                                           PM008500
&LEN     SETA  L'&MSG                                                   PM008510
&LEN     SETA  &LEN+&DD                                                 PM008520
         AIF   (&LEN LE 133).A06                                        PM008530
         MNOTE 4,'WARNING - MESSAGE IS TOO LONG FOR THE LINE'           PM008540
.A06     ANOP                                                           PM008550
         AIF   ('&LA' EQ 'NO').A01A                                     PM008560
         L     R1,=A(&MSG)         GET ADDRESS OF MESSAGE               PM008570
         MVC   &D.(&L&MSG,R5),0(R1) MOVE MESSAGE TO LINE                PM008580
         AGO   .A01B                                                    PM008590
.A01A    ANOP                                                           PM008600
&NAME    MVC   &D.(&L&MSG,R5),&MSG MOVE MESSAGE TO LINE                 PM008610
.A01B    AIF   ('&SKIPCHR' EQ '').A02                                   PM008620
         MVI   0(R5),&SKIPCHR      ESTABLISH SKIP CHARCETER             PM008630
.A02     AIF   ('&S' EQ '').A02A                                        PM008640
         MVI   0(R5),SPCE&S.AFT    ESTABLISH SKIP CHARACTER             PM008650
.A02A    AIF   ('&PRINT' EQ 'NO').A03                                   PM008660
         CBAL  R4,PRINT            PRINT LINE                           PM008670
.A03     ANOP                                                           PM008680
         AIF   ('&ELEVEL' NE 'YES').A04                                 PM008690
         OI    SWERROR,MERRCCER    FLAG THAT 'E' LEVEL ERROR OCCURRED   PM008700
.A04     ANOP                                                           PM008710
         MEND                                                           PM008720
./ ADD NAME=SPDGEN                                                      PM008730
         MACRO                                                          PM008740
&NAME    SPDGEN                    &NUMB,&LAST                          PM008750
.*                                                                      PM008760
.*       GENERATE STORAGE POOL DEFINITION BLOCK                         PM008770
.*                                                                      PM008780
.*      SPDGEN NNN                 SPD FER NNN BYTES TO BE GETMAINED    PM008790
.*      SPDGEN CSECT               SPD FOR CSECT NAMED PARROT&NUMB      PM008800
.*      SPDGEN      ,LAST          SET CHAIN FIELD TO ZEROES            PM008810
.*      SPDGEN    ,FLDNAME         SET TO CHAIN TO FLDNAME              PM008820
.*                                                                      PM008830
         LCLC  &CADR,&FLAG,&CSECT,&SIZE                                 PM008840
&CADR    SETC  '*+SPDLGTH'                                              PM008850
&FLAG    SETC  '0'                                                      PM008860
&SIZE    SETC  '0'                                                      PM008870
         AIF   (T'&NUMB EQ 'C').A02                                     PM008880
         AIF   (T'&NUMB EQ 'Z').A01                                     PM008890
         MNOTE 16,&NUMB IS INVALID'                                     PM008900
         MEXIT                                                          PM008910
.A01     ANOP                                                           PM008920
&FLAG    SETC  'MSPDGETM'                                               PM008930
.A02     AIF   ('&LAST' EQ '').A03                                      PM008940
&CADR    SETC  '0'                                                      PM008950
         AIF   ('&LAST' EQ '       AST').A03                            PM008960
&CADR    SETC  '&LAST'                                                  PM008970
.A03     AIF   (T'&NUMB EQ 'C').A04                                     PM008980
&SIZE    SETC  '&NUMB'                                                  PM008990
&CSECT   SETC  '0'                                                      PM009000
         AGO   .A05                                                     PM009010
.A04     ANOP                                                           PM009020
&CSECT   SETC  'PARROT&NUMB'                                            PM009030
&SIZE    SETC  'LGTH&NUMB.-PARROT&NUMB'                                 PM009040
.A05     ANOP                                                           PM009050
&NAME    DC    AL1(&FLAG),AL3(&CADR)SWITCH BYTE AND CHAIN ADDRESS       PM009060
         DC    A(&CSECT)           ADDRESS OF STORAGE POOL              PM009070
         DC    A(&SIZE)            SIZE OF STORAGE POOL                 PM009080
         DC    A(0),A(0)           WORK FILE CAPACITY AND POINTER       PM009090
         MEND                                                           PM009100
./ ADD NAME=POOLFER                                                     PM009110
         MACRO                                                          PM009120
       POOLFER &S,&FREE                                                 PM009130
.*                                                                      PM009140
.*       DEFINE A CSECT, INDICATING IF I MAY BE FREEMAINED              PM009150
.*                                                                      PM009160
         LCLC  &A                                                       PM009170
&A       SETC  '32'                                                     PM009180
         AIF   ('&FREE' NE 'FREE').A00                                  PM009190
&A       SETC  '40'                                                     PM009200
.A00     ANOP                                                           PM009210
         AIF   ('&SYSECT' NE 'PARROT').NOGEN                            PM009220
$VPART&S DC    AL1(&A),AL3(PARROT&S),A(PAREND&S) DEFINE CSECT           PM009230
         MEXIT                                                          PM009240
.NOGEN   ANOP                                                           PM009250
$VPART&S DC    AL1(&A),AL3(0),A(0) DEFINE CSECT                         PM009260
         MEND                                                           PM009270
./ ADD NAME=SCSECT                                                      PM009280
         MACRO                                                          PM009290
        SCSECT &S                                                       PM009300
.*                                                                      PM009310
.*       GENERATE 'CSECT' AND 'USING' STATEMENTS FOR SUB-CSECT          PM009320
.*                                                                      PM009330
         LCLC  &CSECT                                                   PM009340
&CSECT   SETC  'PARROT&S'                                               PM009350
&CSECT   CSECT                                                          PM009360
        VERSID &S                  GENERATE CSECT IDENTIFIER            PM009370
         USING &CSECT,R12          ESTABLISH ADDRESSABILITY FOR CSECT   PM009380
         USING CCBNTRY,R13         ESTABLISH ADDRESSABILITY FOR CCB     PM009390
         SPACE 1                                                        PM009400
         MEND                                                           PM009410
./ ADD NAME=SCSEND                                                      PM009420
         MACRO                                                          PM009430
        SCSEND &S                                                       PM009440
.*       TERMINATE CSECT & DROP ADDRESSABILITY                          PM009450
         SPACE 1                                                        PM009460
         LTORG                                                          PM009470
         CNOP  0,8                 ENSURE THAT CSECT LEN IS MULTIPLE 8  PM009480
PAREND&S EQU   *                   END OF CSECT                         PM009490
         DROP  R12,R13             DROP CSECT AND CCB ADDRESSABILITY    PM009500
         MEND                                                           PM009510
./ ADD NAME=VERSID                                                      PM009520
         MACRO                                                          PM009530
&NAME    VERSID &A                                                      PM009540
         CSECTID DSECT=NO,ID=&A    GENERATE IDENTIFYING FIELDS          PM009550
         MEXIT                                                          PM009560
&NAME    DC    CL8'PARROT&A'       CSECT NAME                           PM009570
         DC    CL8'VERS 2.1'       PARROT VERSION NUMBER                PM009580
         DC    CL8'&SYSDATE'       DATE CSECT ASSEMBLED                 PM009590
         DC    CL8'&SYSTIME'       TIME CSECT ASSEMBLED                 PM009600
         MEND                                                           PM009610
./ ADD NAME=NUMERIC                                                     PM009620
         MACRO                                                          PM009630
&NAME  NUMERIC &FLD,&LEN,&SIGNED                                        PM009640
.*                                                                      PM009650
.*       GENERATE LINKAGE TO VALIDATE NUMERIC FIELD                     PM009660
.*                                                                      PM009670
         LCLA  &LL                                                      PM009680
         LCLC  &R,&L,&NAME1                                             PM009690
&NAME1   SETC  '&NAME'                                                  PM009700
         AIF   ('&FLD'(1,1) NE '(').C1                                  PM009710
&R       SETC  '&FLD(1)'                                                PM009720
         AIF   ('&R' EQ 'R14').C2                                       PM009730
&NAME1   LA    R14,0(,&R)          POINT AT R14 AT FIELD                PM009740
&NAME1   SETC  ' '                                                      PM009750
         AGO   .C2                                                      PM009760
.C1      ANOP                                                           PM009770
&NAME1   LA    R14,&FLD            POINT R14 AT FIELD                   PM009780
&NAME1   SETC  ' '                                                      PM009790
.C2      AIF   ('&LEN' EQ '').C3                                        PM009800
&LL      SETA  &LEN                                                     PM009810
&LL      SETA  &LL-1                                                    PM009820
&NAME1   LA    R15,&LL             SET EXECUTABLE LENGTH IN R15         PM009830
&NAME1   SETC  ' '                                                      PM009840
         AGO   .C4                                                      PM009850
.C3      ANOP                                                           PM009860
&LL      SETA  L'&FLD                                                   PM009870
&LL      SETA  &LL-1                                                    PM009880
&NAME1   LA    R15,&LL             SET EXECUTABLE LENGTH IN R15         PM009890
&NAME1   SETC  ' '                                                      PM009900
.C4      AIF   ('&SIGNED' NE 'PACKED').C5                               PM009910
         CBAL  R4,NUMRICP          VALIDAT PACKED DECIMAL FIELD         PM009920
         MEXIT                                                          PM009930
.C5      AIF   ('&SIGNED' NE 'SIGNED').C6                               PM009940
         CBAL  R4,NUMRICS          VALIDATE SIGNED/UNSIGNED EBCDIC      PM009950
         MEXIT                                                          PM009960
.C6      CBAL  R4,NUMERIC          VALIDATE UNSIGNED EBCDIC             PM009970
         MEND                                                           PM009980
./ ADD NAME=SUBIN                                                       PM009990
         MACRO                                                          PM010000
&NAME    SUBIN &SAVE=,&PREFIX=,&FLOWTHR=                                PM010010
         GBLA  &SUBINC                                                  PM010020
         GBLC  &SUBALL                                                  PM010030
         GBLC  &CBAL                                                    PM010040
         LCLA  &N,&S                                                    PM010050
         LCLC  &R,&P,&PP                                                PM010060
         LCLC  &NAME1                                                   PM010070
&CBAL    SETC  'N'                                                      PM010080
&SUBALL  SETC  ' '                                                      PM010090
&SUBINC SETA   &SUBINC+1                                                PM010100
&NAME1   SETC  '&NAME'                                                  PM010110
         AIF   ('&SAVE' NE 'ALL').F00                                   PM010120
&P       SETC  '&PREFIX'                                                PM010130
         AIF   ('&P' NE '').G00                                         PM010140
&P       SETC  '$&SUBINC'                                               PM010150
.G00     ANOP                                                           PM010160
&NAME1   SETC  '&P.ALL'                                                 PM010170
&SUBALL  SETC  '&NAME1'                                                 PM010180
&NAME1   DS    16F                 SAVE AREA FOR ALL REGISTERS          PM010190
&NAME    STM   R0,R15,*-64         PRESERVE ALL REGISTERS               PM010200
         MEXIT                                                          PM010210
.F00     ANOP                                                           PM010220
         AIF   ('&FLOWTHR' EQ '').D00                                   PM010230
         AIF   ('&FLOWTHR' EQ 'YES').D01                                PM010240
         MNOTE 4,'UNKNOWN ''FLOWTHR'' SPECIFICATION - IGNORED'          PM010250
         AGO   .D00                                                     PM010260
.D01     B     &NAME               BR AROUND SAVE AREAS                 PM010270
.D00     ANOP                                                           PM010280
&N       SETA  N'&SAVE                                                  PM010290
         AIF   (&N GT 0).C1                                             PM010300
&NAME    DS    0H                                                       PM010310
         MEXIT                                                          PM010320
.C1      ANOP                                                           PM010330
&P       SETC  '&PREFIX'                                                PM010340
         AIF   ('&P' EQ '').C2                                          PM010350
&PP      SETC  '&P.SAVE'                                                PM010360
         AGO   .C3                                                      PM010370
.C2      ANOP                                                           PM010380
&PP      SETC  '$&SUBINC'                                               PM010390
.C3      ANOP                                                           PM010400
.C5      ANOP                                                           PM010410
&S       SETA  &S+1                                                     PM010420
         AIF   (&S GT &N).C6                                            PM010430
&PP&SAVE(&S) DS F 0                SAVE AREA                            PM010440
         AGO   .C5                                                      PM010450
.C6      ANOP                                                           PM010460
&S       SETA  0                                                        PM010470
.E01     ANOP                                                           PM010480
&S       SETA  &S+1                                                     PM010490
         AIF   (&S GT &N).C4                                            PM010500
&NAME1   ST    &SAVE(&S),&PP&SAVE(&S) 0      PRESERVE REGISTER          PM010510
&NAME1   SETC  ' '                                                      PM010520
         AGO   .E01                                                     PM010530
.C4      ANOP                                                           PM010540
         MEND                                                           PM010550
./ ADD NAME=SUBLR                                                       PM010560
         MACRO                                                          PM010570
&NAME    SUBLR &REG,&REG2                                               PM010580
.*                                                                      PM010590
.*       REFRESH REGISTER FROM SUBIN SAVE AREA                          PM010600
.*                                                                      PM010610
.* OR    LOAD &REG WITH CONTENTS OF SUBIN SAVE AREA FOR &REG2           PM010620
.*                                                                      PM010630
         GBLA  &SUBINC                                                  PM010640
         GBLC  &SUBALL                                                  PM010650
         LCLC  &R                                                       PM010660
&R       SETC  '&REG'                                                   PM010670
         AIF   ('&REG2' EQ '').A01                                      PM010680
&R       SETC  '&REG2'                                                  PM010690
.A01     ANOP                                                           PM010700
         AIF   ('&SUBALL' EQ ' ').A02                                   PM010710
&NAME    L     &REG,&SUBALL.+(4*&R) REFRESH REGISTER FROM SUBIN SAVAREA PM010720
         MEXIT                                                          PM010730
.A02     ANOP                                                           PM010740
&NAME    L     &REG,$&SUBINC.&R    REFRESH REGISTER FROM SUBIN SAVEAREA PM010750
         MEND                                                           PM010760
./ ADD NAME=SUBOUT                                                      PM010770
         MACRO                                                          PM010780
&NAME   SUBOUT &RESTORE=,&PREFIX=,&RETURN=                              PM010790
         GBLA  &SUBINC                                                  PM010800
         GBLC  &CBAL                                                    PM010810
         LCLA  &N,&S                                                    PM010820
         LCLC  &R,&P,&PP,&B,&SWR4                                       PM010830
         AIF   ('&RESTORE' EQ '').X00                                   PM010840
&SWR4    SETC  'Y'                                                      PM010850
.X00     ANOP                                                           PM010860
         AIF   ('&NAME' EQ '').NONAME                                   PM010870
&NAME    DS    0H 0                                                     PM010880
.NONAME  ANOP                                                           PM010890
&N       SETA  N'&RESTORE                                               PM010900
         AIF   (&N NE 0).C3                                             PM010910
.C1      ANOP                                                           PM010920
&B       SETC  'R4'                                                     PM010930
         AIF   ('&RETURN' EQ '').C2                                     PM010940
         AIF   ('&RETURN'(1,1) NE '(').C11                              PM010950
&B       SETC  '&RETURN(1)'                                             PM010960
         AGO   .C2                                                      PM010970
.C11     ANOP                                                           PM010980
&B       SETC  '&RETURN'                                                PM010990
         B     &B 0                RETURN TO CALLER                     PM011000
         AGO   .C22                BYPASS CBAL LOOP TEST                PM011010
         MEXIT                                                          PM011020
.C2      BR    &B 0                RETURN TO CALLER                     PM011030
.C21     AIF   ('&CBAL' EQ 'Y' AND '&RESTORE' EQ '').ERR01              PM011040
         AIF   ('&CBAL' EQ 'Y' AND '&SWR4' NE 'Y').ERR01                PM011050
.C22     ANOP                                                           PM011060
         MEXIT                                                          PM011070
.C3      ANOP                                                           PM011080
         AIF   ('&RESTORE' EQ 'ALL').G00                                PM011090
&P       SETC  '&PREFIX'                                                PM011100
         AIF   ('&P' EQ '').C4                                          PM011110
&PP      SETC  '&P.SAVE'                                                PM011120
         AGO   .C5                                                      PM011130
.C4      ANOP                                                           PM011140
&PP      SETC  '$&SUBINC'                                               PM011150
.C5      ANOP                                                           PM011160
&S       SETA  &S+1                                                     PM011170
         AIF   (&S GT &N).C1                                            PM011180
         L     &RESTORE(&S),&PP&RESTORE(&S) 0     RESTORE REGISTER      PM011190
         AIF   ('&RESTORE(&S)' NE 'R4').BR01                            PM011200
&SWR4    SETC  'Y'                                                      PM011210
.BR01    ANOP                                                           PM011220
         AGO   .C5                                                      PM011230
         MEXIT                                                          PM011240
.G00     ANOP                                                           PM011250
&SWR4    SETC  'Y'                                                      PM011260
&P       SETC  '&PREFIX'                                                PM011270
         AIF   ('&P' NE '').G01                                         PM011280
&P       SETC  '$&SUBINC'                                               PM011290
.G01     ANOP                                                           PM011300
&PP      SETC  '&P.ALL'                                                 PM011310
         LM    R0,R15,&PP          RESTORE ALL REGISTERS                PM011320
         AGO   .C1                                                      PM011330
.ERR01   MNOTE 1,'CBALS ISSUED BUT R4 NOT RESTORED - POTENTIAL LOOPS'   PM011340
         MEXIT                                                          PM011350
         MEND                                                           PM011360
./ ADD NAME=BLOCTABL                                                    PM011370
         MACRO                                                          PM011380
&NAME BLOCTABL &LIST                                                    PM011390
.*                                                                      PM011400
.*       CONSTRUCT TRANSLATE TABLE ( FOR USE WITH 'TRT' ) THAT WILL     PM011410
.*        LOCATE THE ELEMENTS IN THE SUPPLIED LIST                      PM011420
.*                                                                      PM011430
         LCLA  &N,&S                                                    PM011440
&N       SETA  N'&LIST                                                  PM011450
&NAME    DC    256X'00'            BASIC 'TRT' TABLE: IGNORE ALL        PM011460
         AIF   (&N EQ 0).EXIT                                           PM011470
.LOOP    ANOP                                                           PM011480
&S       SETA  &S+1                                                     PM011490
         AIF   (&S GT &N).ORG                                           PM011500
         ORG   &NAME.+C'&LIST(&S)' ORG TO VALUE TO BE LOCATED           PM011510
         DC    CL1'&LIST(&S)'      SET TO DETECT ENTRY WITH TRT         PM011520
         AGO   .LOOP                                                    PM011530
.ORG     ORG                                                            PM011540
.EXIT    ANOP                                                           PM011550
         MEND                                                           PM011560
./ ADD   NAME=PPPLL                                                     PM011570
         MACRO                                                          PM011580
&NAME    PPPLL &SOURCE,&DEST                                            PM011590
.*                                                                      PM011600
.*       GENERATE LINKAGE TO PPPLL CONVERSION ROUTINE                   PM011610
.*                                                                      PM011620
&NAME    LA    R2,&SOURCE          POINT R2 AT SOURCE EBCDIC PPPLL      PM011630
         LA    R3,&DEST            POINT R3 AT DESTINATION BINARY PPL   PM011640
         CBAL  R4,PPPLL            PERFORM CONVERSION ROUTINE           PM011650
         MEND                                                           PM011660
./ ADD   NAME=FLDTYPE                                                   PM011670
         MACRO                                                          PM011680
&NAME    FLDTYPE &SOURCE,&DEST                                          PM011690
.*                                                                      PM011700
.*       GENERATE LINKAGE TO ROUTINE THAT CONVERTS CONTROL CARD         PM011710
.*        FIELD TYPE TO THE EQUIVALENT INTERNAL REPRESENTATION.         PM011720
.*                                                                      PM011730
&NAME    LA    R15,&SOURCE         POINT R15 AT THE SOURCE FIELD TYPE   PM011740
         LA    R1,&DEST            POINT R1 AT THE DESTINATION FIELD    PM011750
         CBAL  R4,BLDFTYP          CONVERT TO INTERNAL REPRESENTATION   PM011760
         MEND                                                           PM011770
./ ADD   NAME=TBLANK                                                    PM011780
         MACRO                                                          PM011790
&NAME    TBLANK &FLD                                                    PM011800
.*                                                                      PM011810
.*       TEST IF A FIELD CONTAINS SPACES                                PM011820
.*                                                                      PM011830
         LCLC  &L                                                       PM011840
&L       SETC  'L'''                                                    PM011850
&NAME    CLI   &FLD,C' '           TEST IF THE FIRST POSITION IS BLANK  PM011860
         BNE   *+10                BR IF NOT BLANK                      PM011870
         CLC   &FLD.+1(&L&FLD.-1),&FLD TEST IF REMAINDER IS BLANK       PM011880
         MEND                                                           PM011890
./ ADD   NAME=BTYPE                                                     PM011900
         MACRO                                                          PM011910
&NAME    BTYPE &PREFIX=,&DCHAR=,&DNUM=,&REG=R1,&UNUSED=,               *PM011920
               &CHAR=,&NUM=,&PD=,&HEX=,&BIT=,&MASK=,&BIN=,&FLOAT=,     *PM011930
               &STR=,&IND=,&FREE=                                       PM011940
.*                                                                      PM011950
.*       GENERATE THE CODE TO PERFROM AN INDEXED BRANCH TO THE          PM011960
.*        APPROPRIATE PROCESSING ROUTINE, BASED UPON THE INTERNAL       PM011970
.*        REPRESENTATION OF THE FIELD TYPE ( WHICH IS IN &REG ).        PM011980
.*                                                                      PM011990
.*       DEFAULTS MAY BE SPECIFIED FOR THE TWO LOGICAL GROUPS OF        PM012000
.*        FIELD TYPES ( NUMERIC - DNUM= - AND NON-NUMERIC - DCHAR= ).   PM012010
.*                                                                      PM012020
         LCLC  &B1,&B2,&B3,&B4,&B5,&B6,&B7,&B8,&B9,&B10,&B11,&B12       PM012030
&B1      SETC  '&PREFIX&DCHAR'                                          PM012040
         AIF   ('&CHAR' EQ '').B2                                       PM012050
&B1      SETC  '&PREFIX&CHAR'                                           PM012060
.B2      ANOP                                                           PM012070
&B2      SETC  '&PREFIX&DNUM'                                           PM012080
         AIF   ('&NUM' EQ '').B3                                        PM012090
&B2      SETC  '&PREFIX&NUM'                                            PM012100
.B3      ANOP                                                           PM012110
&B3      SETC  '&PREFIX&DNUM'                                           PM012120
         AIF   ('&PD' EQ '').B4                                         PM012130
&B3      SETC  '&PREFIX&PD'                                             PM012140
.B4      ANOP                                                           PM012150
&B4      SETC  '&PREFIX&DCHAR'                                          PM012160
         AIF   ('&HEX' EQ '').B5                                        PM012170
&B4      SETC  '&PREFIX&HEX'                                            PM012180
.B5 ANOP                                                                PM012190
&B5      SETC  '&PREFIX&DCHAR'                                          PM012200
         AIF   ('&BIT' EQ '').B6                                        PM012210
&B5      SETC  '&PREFIX&BIT'                                            PM012220
.B6      ANOP                                                           PM012230
&B6      SETC  '&PREFIX&DCHAR'                                          PM012240
         AIF   ('&MASK' EQ '').B7                                       PM012250
&B6      SETC  '&PREFIX&MASK'                                           PM012260
.B7      ANOP                                                           PM012270
&B7      SETC  '&PREFIX&DNUM'                                           PM012280
         AIF   ('&BIN' EQ '').B8                                        PM012290
&B7      SETC  '&PREFIX&BIN'                                            PM012300
.B8      ANOP                                                           PM012310
&B8      SETC  '&PREFIX&DNUM'                                           PM012320
         AIF   ('&FLOAT' EQ '').B9                                      PM012330
&B8      SETC  '&PREFIX&FLOAT'                                          PM012340
.B9      ANOP                                                           PM012350
&B9      SETC  '&PREFIX&DCHAR'                                          PM012360
         AIF   ('&STR' EQ '').B10                                       PM012370
&B9      SETC  '&PREFIX&STR'                                            PM012380
.B10     ANOP                                                           PM012390
&B10     SETC  '&PREFIX&DCHAR'                                          PM012400
         AIF   ('&IND' EQ '').B11                                       PM012410
&B10     SETC  '&PREFIX&IND'                                            PM012420
.B11     ANOP                                                           PM012430
&B11     SETC  '&PREFIX&DNUM'                                           PM012440
         AIF   ('&FREE' EQ '').B12                                      PM012450
&B11     SETC  '&PREFIX&FREE'                                           PM012460
.B12     ANOP                                                           PM012470
&B12     SETC  '&PREFIX&DCHAR'                                          PM012480
         AIF   ('&UNUSED' EQ '').B13                                    PM012490
&B12     SETC  '&PREFIX&UNUSED'                                         PM012500
.B13     ANOP                                                           PM012510
&NAME    SLL   &REG,2              CONVERT TYPE CODE INTO AN INDEX      PM012520
         B     *(&REG)             GO TO APPROPRIATE BRANCH INSTRUCTION PM012530
         B     &B1                 CHARACTER                            PM012540
         B     &B2                 DISPLAY NUMERIC                      PM012550
         B     &B3                 PACKED DECIMAL                       PM012560
         B     &B4                 HEXADECIMAL                          PM012570
         B     &B5                 BIT STRING                           PM012580
         B     &B6                 PARTIAL KEY MASK                     PM012590
         B     &B7                 BINARY                               PM012600
         B     &B8                 FLOATING POINT                       PM012610
         B     &B9                 CHARACTER STRING                     PM012620
         B     &B10                INDICATOR                            PM012630
         B     &B11                FREE FORMAT DISPLAY NUMERIC          PM012640
         B     &B12                UNASSIGNED                           PM012650
         MEND                                                           PM012660
./ ADD   NAME=CCNO                                                      PM012670
         MACRO                                                          PM012680
&NAME    CCNO  &LINE,&ELEVEL=NO,&NULLCB=NO,&REG=R8,&LA=NO,&LABEL=,     *PM012690
               &CCNO=YES,&PREFIX=NO                                     PM012700
.*                                                                      PM012710
.*       INSERT CONTROL CARD SEQUENCE NUMBER INTO ERROR MESSAGE AND     PM012720
.*        ISSUE THE ERROR MESSAGE.  THE CONTROL CARD SEQUENCE NUMBER IS PM012730
.*        EXTRACTED FROM THE PREFIX OF THE CONTROL BLOCK WHOSE ADDRESS  PM012740
.*        IS IN &REG.                                                   PM012750
.*                                                                      PM012760
.*       ELEVEL=NO|YES             SET FLAG THAT E-LEVEL ERROR FOUND    PM012770
.*       NULLCB=NO|YES             NULLIFY (NO-OP) CONTROL BLOCK        PM012780
.*       REG=R8|XX                 REGISTER CONTAINING C/B ADDRESS      PM012790
.*       LA=NO|YES                 SPECIFY LA=YES IF LINE NOT DIRECTLY  PM012800
.*                                  ADDRESSABLE ( I.E. BEYOND 1ST 4K )  PM012810
.*       LABEL=AAAAA               NAME OF FIELD CONTAINING LABEL TO BE PM012820
.*                                  INSERTED INTO ERROR MESSAGE         PM012830
.*       CCNO=YES|NO               SUPPRESS INSERTION OF C/C SEQ NO.    PM012840
.*       PREFIX=NO|YES             REGISTER ALREADY CONTAINS PREFIX ADR PM012850
.*                                                                      PM012860
         LCLC  &L                                                       PM012870
&L       SETC  'L'''                                                    PM012880
         AIF   ('&LA' NE 'YES').NOLA                                    PM012890
&NAME    L     R1,=A(&LINE)        GET ADDRESS OF MESSAGE               PM012900
         MVC   5(&L&LINE,R5),0(R1) MOVE MESSAGE TO BUFFER               PM012910
         AGO   .YESLA                                                   PM012920
.NOLA    ANOP                                                           PM012930
&NAME    MVC   5(&L&LINE,R5),&LINE MOVE MESSAGE TO BUFFER               PM012940
.YESLA   AIF   ('&CCNO' EQ 'NO').NOCCNO                                 PM012950
         LR    R1,&REG             POINT R1 AT THE CONTROL BLOCK        PM012960
         AIF   ('&PREFIX' EQ 'YES').C03                                 PM012970
         S     R1,=A(CBPRLGTH)     POINT R1 AT THE CONTROL BLOCK PREFIX PM012980
.C03     USING CBPREFIX,R1         ESTABLISH PREFIX ADDRESSABILITY      PM012990
         ED    5+&LINE.C-&LINE.(&L&LINE.C,R5),CBPRCCNO ADD C/C SEQ NO.  PM013000
         DROP  R1                  DROP PREFIX ADDRESSABILITY           PM013010
.NOCCNO  AIF   ('&LABEL' EQ '').C00                                     PM013020
         MVC   5+&LINE.L-&LINE.(&L&LABEL,R5),&LABEL SET LABEL IN LINE   PM013030
.C00     CBAL  R4,PRINT            PRINT THE ERROR MESSAGE              PM013040
         AIF   ('&ELEVEL' NE 'YES').C01                                 PM013050
         OI    SWERROR,MERRCCER    FLAG THAT E-LEVEL ERROR ENCOUNTERED  PM013060
.C01     AIF   ('&NULLCB' NE 'YES').C02                                 PM013070
         MVI   0(&REG),NULLCB      NULLIFY THE CONTROL BLOCK            PM013080
.C02     ANOP                                                           PM013090
         MEND                                                           PM013100
./ ADD NAME=NULCB                                                       PM013110
         MACRO                                                          PM013120
&NAME    NULCB &CB,&LABEL                                               PM013130
.*                                                                      PM013140
.*       TEST IF THE CURRENT CONTROL BLOCK HAS BEEN NULLIFIED, AND      PM013150
.*        GO TO THE SPECIFIED LABEL IF SO.                              PM013160
.*                                                                      PM013170
&NAME    CLI   &CB.ID,NULLCB       TEST IF CONTROL BLOCK IS NULLIFIED   PM013180
         BE    &LABEL              BR IF YES TO BYPASS PROCESSING       PM013190
         MEND                                                           PM013200
./ ADD NAME=LTRR                                                        PM013210
         MACRO                                                          PM013220
&NAME    LTRR  &R1,&R2                                                  PM013230
         AIF   ('&R2' NE '').A01                                        PM013240
&NAME    LA    &R1,0(,&R1)         PURIFY HIGH-ORDER BYTE               PM013250
         AGO   .A02                                                     PM013260
.A01     ANOP                                                           PM013270
&NAME    LA    &R1,0(,&R2)         PURIFY HIGH-ORDER BYTE               PM013280
.A02     LTR   &R1,&R1             TEST REGISTER VALUE                  PM013290
         MEND                                                           PM013300
./ ADD NAME=LTA                                                         PM013310
         MACRO                                                          PM013320
&NAME    LTA   &R,&FLD,&EXIT                                            PM013330
.*                                                                      PM013340
.*       THIS MACRO FACILITATES THE USE OF 'ICM' FOR OBTAINING THE      PM013350
.*        ADDRESS OF THE NEXT CONTROL BLOCK IN A CHAIN, AND TESTING     PM013360
.*        FOR END OF CHAIN.  I ALWAYS FORGET TO ADD '+1' TO THE NAME    PM013370
.*        OF THE CHAINING FIELD, WHICH LEADS TO UNPREDICTABLE, BUT      PM013380
.*        ALWAYS UNDESIRABLE RESULTS.                                   PM013390
.*                                                                      PM013400
&NAME    ICM   &R,7,&FLD.+1        GET ADDRESS OF NEXT CONTROL BLOCK    PM013410
         AIF   ('&EXIT' EQ '').A01                                      PM013420
         BZ    &EXIT               BR IF END OF CHAIN                   PM013430
.A01     ANOP                                                           PM013440
         MEND                                                           PM013450
./  ADD  NAME=DEFOPCD                                                   PM013460
         MACRO                                                          PM013470
&NAME    DEFOPCD &OPCD=,&MOD=N,&IND=N,&LIT=N,                          *PM013480
               &DSECT=NO,&CARD=NONE,&DTYP=D,&ICODE=,&DFLDT=N,&DFLDL=8, *PM013490
               &CBID=                                                   PM013500
.*                                                                      PM013510
.*       OPCD  - OPERATION CODE ( E.G. I, DW, C3 )                      PM013520
.*       ICODE - INTERNAL CODE EQUIVALENT OF OPERATION CODE             PM013530
.*       CBID  - ID OF ASSOCIATED CBXX CONTROL BLOCK                    PM013540
.*       MOD   - MODIFIER REQUIRED FLAG ( Y / N )                       PM013550
.*       IND   - INDICATOR SPECIFICATION REQUIRED FLAG ( Y / N )        PM013560
.*       LIT   - LITERAL REQUIRED ( Y / N )                             PM013570
.*                                                                      PM013580
.*       DSECT - REQUEST FOR DSECT GENERATION ( YES / NO )              PM013590
.*       CARD  - LABEL OF ASSOCIATED GRXX CONTROL CARD                  PM013600
.*       DTYP  - DEFAULT PROCESSING TYPE ( E.G. N, A, T )               PM013610
.*       DFLDT - DEFAULT DESTINATION FIELD TYPE                         PM013620
.*       DFLDL - DEFAULT DESTINATION FIELD LENGTH                       PM013630
.*                                                                      PM013640
         LCLC  &FLAG1,&FLAG2,&ID                                        PM013650
         LCLC  &CURFLD                                                  PM013660
         LCLA  &NFLDS                                                   PM013670
         AIF   ('&DSECT' EQ 'YES').DSECT                                PM013680
         AIF   ('&OPCD' EQ '').ERR01                                    PM013690
         AIF   ('&ICODE' EQ '').ERR04                                   PM013700
&ID      SETC  '0'                                                      PM013710
         AIF   ('&CBID' EQ '').B00                                      PM013720
&ID      SETC  'FLAG&CBID'                                              PM013730
.B00     ANOP                                                           PM013740
&FLAG1   SETC  '0'                                                      PM013750
&FLAG2   SETC  '0'                                                      PM013760
         AIF   ('&MOD' EQ 'N').A03                                      PM013770
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPMOD'                                   PM013780
.A03     AIF   ('&IND' EQ 'N').A04                                      PM013790
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPIND'                                   PM013800
.A04     AIF   ('&LIT' EQ 'N').A05                                      PM013810
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPLIT'                                   PM013820
.A05     AIF   ('&CARD' EQ 'NONE').A06                                  PM013830
&FLAG1   SETC  '&FLAG1'.'+'.'F1OPCARD'                                  PM013840
.A06     ANOP                                                           PM013850
.*       INSERT TEST FOR BIT 6 WHEN IT IS ASSIGNED                      PM013860
.A07     ANOP                                                           PM013870
&NAME    DC    CL2'&OPCD',AL1(&ID),CL4'&CARD',AL1(&ICODE),CL1'&DTYP'    PM013880
         DC    CL1'&DFLDT',AL1(&DFLDL),AL1(&FLAG1),AL1(&FLAG2)          PM013890
         MEXIT                                                          PM013900
.DSECT   ANOP                                                           PM013910
*********************************************************************** PM013920
*        OPERATION/FUNCTION CODE DESCRIPTOR                           * PM013930
*********************************************************************** PM013940
         SPACE 1                                                        PM013950
OPCDNTRY DSECT                                                          PM013960
OPCDOPCD DS    CL2                 OPERATION/FUNCTION CODE              PM013970
OPCDCBID DS    CL1                 ID OF ASSOCIATED CONTROL BLOCK       PM013980
OPCDCARD DS    CL4                 ID OF ASSOCIATED CONTROL CARD        PM013990
OPCDICDE DS    CL1                 INTERNAL REPRESENTATION OF FUNCTION  PM014000
OPCDDTYP DS    CL1                 DEFAULT PROCESSING TYPE ( $PROCTYP ) PM014010
OPCDFLDT DS    CL1                 DEFAULT DESTINATION FIELD TYPE       PM014020
OPCDFLDL DS    CL1                 DEFAULT FIELD LENGTH                 PM014030
OPCDFLG1 DS    CL1                 FLAG BYTE 1                          PM014040
OPCDFLG2 DS    CL1                 FLAG BYTE 2                          PM014050
OPCDLGTH EQU   *-OPCDNTRY          LENGTH OF DSECT                      PM014060
         SPACE 5                                                        PM014070
*********************************************************************** PM014080
*        EQUATES FOR FLAG BYTE 1                                      * PM014090
*********************************************************************** PM014100
         SPACE 1                                                        PM014110
F1OPMOD  EQU   1                   OP-CODE MODIFIER REQUIRED            PM014120
F1OPIND  EQU   2                   INDICATOR SPECIFICATION REQUIRED     PM014130
F1OPLIT  EQU   4                   LITERAL VALUE REQUIRED               PM014140
F1OPCARD EQU   8                   LABEL OF ASSOCIATED CARD REQUIRED    PM014150
         SPACE 5                                                        PM014160
*********************************************************************** PM014170
*        EQUATES FOR FLAG BYTE 2                                      * PM014180
*********************************************************************** PM014190
         SPACE 1                                                        PM014200
         MEXIT                                                          PM014210
.ERRO1   MNOTE 16,'''OPCD='' KEYWORD IS MANDATORY'                      PM014220
         MEXIT                                                          PM014230
.ERR04   MNOTE 16,'''ICODE='' KEYWORD IS MANDATORY'                     PM014240
         MEXIT                                                          PM014250
         MEND                                                           PM014260
