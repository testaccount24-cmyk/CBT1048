         TITLE 'BUDGIE3X - INTERNAL MACROS'                             C 000010
         MACRO                                                          C 000020
         $CB   &PRINT=OFF                                               C 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        C 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           C 000050
               TITLE 'CBPREFIX - CONTROL BLOCK PREFIX'                  C 000060
      CBPREFIX ,                   GENERATE DSECT                       C 000070
               TITLE 'CB13 - CB13 CONTROL BLOCK'                        C 000080
         CB13  ,                   GENERATE DSECT                       C 000090
               TITLE 'CB14 - CB14 CONTROL BLOCK'                        C 000100
         CB14  ,                   GENERATE DSECT                       C 000110
               TITLE 'CB20 - CB20 CONTROL BLOCK'                        C 000120
         CB20  ,                   GENERATE DSECT                       C 000130
               TITLE 'CB21 - CB21 CONTROL BLOCK'                        C 000140
         CB21  ,                   GENERATE DSECT                       C 000150
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     C 000160
         CCB   ,                   GENERATE DSECT                       C 000170
               TITLE '     - CSECT IDENTIFICATION PREFIX'               C 000180
       CSECTID ,                   GENERATE DSECT                       C 000190
               TITLE '     - GENERAL EQUATES'                           C 000200
       EQUATES ,                   GENERATE EQUATES                     C 000210
               TITLE 'MS13 - MS13 CONTROL CARD'                         C 000220
         MS13  ,                   GENERATE DSECT                       C 000230
               TITLE 'MS14 - MS14 CONTROL CARD'                         C 000240
         MS14  ,                   GENERATE DSECT                       C 000250
               TITLE 'MS20 - MS20 CONTROL CARD'                         C 000260
         MS20  ,                   GENERATE DSECT                       C 000270
               TITLE 'MS21 - MS21 CONTROL CARD'                         C 000280
         MS21  ,                   GENERATE DSECT                       C 000290
               TITLE 'SB11 - SECONDARY CB11 CONTROL BLOCK'              C 000300
         SB11  ,                   GENERATE DSECT                       C 000310
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        C 000320
         MEND                                                           C 000330
         SPACE 5                                                        C 000340
BUDGIE3C CSECT                                                          C 000350
         $CB   ,                   GENERATE DSECTS AND EQUATES          C 000360
         TITLE 'BUDGIE3C - CONTROL CARD PROCESSING ( CONT''D )'         C 000370
        SCSECT C                   DEFINE START OF CSECT BUDGIE3C       C 000380
         ENTRY MS13COMM            CHAR IDENTIFYING MS13/14/15 COMMENTS C 000390
         ENTRY READCC2             PROCESS CONTRL CARDS - CONT'D        C 000400
         TITLE 'BUDGIE3C - CONTROL CARD PROCESSING - CONT''D'           C 000410
*********************************************************************** C 000420
*        PROCESS CONTROL CARDS ( CONT'D )                             * C 000430
*********************************************************************** C 000440
         SPACE 1                                                        C 000450
READCC2  SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              C 000460
         LA    R4,READCC2X         SET CBAL RETURN ADDRESS (FOR MSXX)   C 000470
         CCTST MS13                PROCESS MS13 CONTROL CARDS           C 000480
         CCTST MS14                PROCESS MS14 CONTROL CARDS           C 000490
         CCTST MS20                GO PROCESS MS20 CONTROL CARDS        C 000500
         CCTST MS21                GO PROCESS MS21 CONTROL CARDS        C 000510
READCC2X SUBOUT RESTORE=R4         RESTORE AND RETURN                   C 000520
         EJECT                                                          C 000530
*********************************************************************** C 000540
*        PROCESS MS13 CONTROL CARD                                    * C 000550
*********************************************************************** C 000560
         SPACE 1                                                        C 000570
         USING MS13CARD,R6         ESTABLISH CONTRO CARD ADDRESS'Y      C 000580
         USING CB13NTRY,R8         ESTABLISH CONTROL BLOCK ADDRESS'Y    C 000590
CCMS13   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 000600
         CLI   MS13ERRI,C'3'       IS IT SET IND ONLY                   C 000610
         BE    CCMS1300            SUPPRESS MESSAGE IF ANY IF YES       C 000620
         CLC   MS13COMM,MS13MESS   IS THIS A COMMENT                    C 000630
         BE    CCMS1300            BLANK OUT COMMENT IF YES             C 000640
         B     CCMS1300+6          BYPASS BLANKING OUT MESSAGE          C 000650
CCMS1300 MVC   MS13MESS,$SPACES    BLANK OUT MESSAGE (WILL NEVER PRNT)  C 000660
         LA    R2,CB13LGTH         GET BASIC CONTROL BLOCK LENGTH       C 000670
         CLC   MS13MESS,$SPACES     TEST IF OPTIONAL MESSAGE SPECIFIED  C 000680
         BE    *+8                 BRANCH IF NOT                        C 000690
         LA    R2,30(,R2)          ALLOW FOR MESSAGE IN CONTROL BLOCK   C 000700
CCMS1311 CBPREF CB13               ACQUIRE AND IDENTIFY CONTROL BLOCK   C 000710
         LR    R8,R1               PRESERVE ADDRESS OF NEW BLOCK        C 000720
         L     R1,$PTRCB13          RETRIEVE CURRENT CB13 POINTER       C 000730
         CLC   MS13TEST,=C'SB'     IS THIS A BATCH LEVEL SUBROUTINE     C 000740
         BNE   *+16                BR IF NOT                            C 000750
         L     R1,$PTRCB14          RETRIEVE BATCH LEVEL C/B POINTER    C 000760
         ST    R8,$PTRCB14          SET NEW BATCH LEVEL C/B POINTER     C 000770
         B     *+8                 BR OVER OTHER SETTING                C 000780
         ST    R8,$PTRCB13          ESTAVLISH NEW AS CURRENT            C 000790
         STCM  R8,7,CB13CB13-CB13NTRY+1(R1) POINT LAST AT THIS ONE      C 000800
         LA    R2,MS13PRT1         POINT AT 1ST CC COMPARAND SEGMENT    C 000810
         LA    R3,CB13PRT1         POINT AT 1ST CB COMPARAND SEGMENT    C 000820
         LA    R10,3               ESTABLISH LOOP                       C 000830
CCMS1302 CLI   2(R2),C'O'          IS THIS AN INDICATOR SPECIFICATION   C 000840
         BNE   CCMS1308            BR IF NOT TO TEST NUMERIC            C 000850
         OI    CB13SW2,SW13INDS    SET FLAG TO SHOW INDICATORS PRESENT  C 000860
         B     CCMS1304            BR TO GET NEXT BUCKET                C 000870
CCMS1308 CBAL  R4,PPPLPL           CONVERT EBCDIC PPPL TO BINARY PL     C 000880
CCMS1304 LA    R2,4(,R2)           POINT AT NEXT COMPONENT PPPL         C 000890
         LA    R3,2(,R3)           POINT AT NEXT COMPONENT PL           C 000900
         BCT   R10,CCMS1302        LOOP BACK IF COMPONENTS LEFT         C 000910
         MVC   CB13LIT,MS13LIT     STORE COMPARAND IN CONTROL BLOCK     C 000920
         CLC   MS13LTYP,$SPACES     SEE IF COMPARISON SPECIFIED         C 000930
         BE    *+8                 BRANCH IF NO                         C 000940
         OI    CB13SW,SW13LIT      INDICATE COMPARAND IS PRESENT        C 000950
         MVI   CB13IND0,FF         NULLIFY 1ST INDICATOR TEST           C 000960
         MVI   CB13IND1,FF         NULLIFY 2ND INDICATOR TEST           C 000970
         MVI   CB13IND2,FF         NULLIFY 3RD INDICATOR TEST           C 000980
         TM    CB13SW2,SW13INDS    ARE THERE ANY INDICATORS PRESENT     C 000990
         BZ    CCMS1307            BR IF NO INDS                        C 001000
         EJECT                                                          C 001010
*********************************************************************** C 001020
*        PROCESS MS13 CONTROL CARD ( CONT'D )                         * C 001030
*********************************************************************** C 001040
         SPACE 1                                                        C 001050
         LA    R2,MS13IND0         POINT AT 1ST C/C BUCKET              C 001060
         LA    R3,CB13IND0         POINT AT 1ST C/B BUCKET              C 001070
         LA    R10,3               ESTABLISH 3 BUCKET LOOP              C 001080
CCMS1305 CLI   2(R2),C'O'          IS THIS AN INDICATOR SPECIFICATION   C 001090
         BNE   CCMS1306            BR IF NOR AN IND                     C 001100
         PACK  $WRKPACK,0(2,R2)    PACK INDICATOR NUMBER                C 001110
         CVB   R1,$WRKPACK         CONVERT IND NUMBER TO BUNARY         C 001120
         STC   R1,0(R3)            PRESERVE NUMBER IN C/B               C 001130
         MVI   1(R3),OF            ASSUME DESIDED STATUS IS OFF         C 001140
         CLC   2(2,R2),=C'OF'      TEST IF OFF SPECIFIED                C 001150
         BE    *+8                 BR IF YES                            C 001160
         MVI   1(R3),ON            DESIRED STAUS MUST BE ON             C 001170
CCMS1306 LA    R3,2(,R3)           INCREMENT TO NEXT C/B BUCKET         C 001180
         LA    R2,4(,R2)           INCREMENT TO NEXT C/C BUCKET         C 001190
         BCT   R10,CCMS1305        LOOP BACK IF ANY LEFT                C 001200
CCMS1307 CLI   MS13ERRI,C'1'       TEST FOR SOFT ERROR                  C 001210
          BNE  *+8                 BR IF NOT SOFT ERROR                 C 001220
          OI   CB13SW,SW13SOFT     INDICTAE SOFT ERROR                  C 001230
         CLI   MS13ERRI,C'2'       TEST FOR DELETE REQUEST              C 001240
         BNE   *+8                 BR IF NOT DELETE REQUEST             C 001250
         OI    CB13SW,SW13DLET     INDICATE DELETE RECORD               C 001260
         CLI   MS13ERRI,C'3'       TEST FOR INDICATOR SETTING REQUEST   C 001270
         BNE   *+8                 BR IF NOT INDICATOR REQUEST          C 001280
         OI    CB13SW,SW13OIND     INDICATE INDICATOR ONLY REQUIRED     C 001290
         MVI   CB13RIND,X'FF'      ASSUME NO ERROR IND SUPPLIED         C 001300
         CLI   MS13RIND,C' '       TET IF ERROR IND NUMBER SUPPLIED     C 001310
         BE    CCMS1310            BR IF NOT SUPPLIED                   C 001320
         PACK  $WRKPACK,MS13RIND   PACK IND NUMBER                      C 001330
       NUMERIC MS13RIND            VERIFY INDICATOR NUMBER ISNUMERIC    C 001340
         CVB   R1,$WRKPACK         CONVERT NO TO BINARY                 C 001350
         STC   R1,CB13RIND         PRESERVE ERROR IND NUMBER            C 001360
CCMS1310 MVC   CB13CBID,MS13MSXX   MOVE ID OF ASSOC C/B                 C 001370
         MVC   CB13TMOD,MS13TMOD   PRESERVE TEST MODIFIER, IF ANY       C 001380
         CLI   MS13CONT,C'1'       DO WE TERMINATE IF TESTS FAILS       C 001390
         BNE   *+8                 BR IF NOT                            C 001400
         OI    CB13SW2,SW132TMB    FLAG TO TERMIANET                    C 001410
         CLI   MS13CONT,C'2'       DO WE TERMINATE IF TEST SUCCEDDS     C 001420
         BNE   *+8                 BR IF NOT                            C 001430
         OI    CB13SW2,SW132TMG    FLAG TO TERMINTE                     C 001440
         CLI   MS13CONT,C'3'       DO WE TERMINATE REGARDLESS           C 001450
         BNE   *+8                 BR IF NOT                            C 001460
         OI    CB13SW2,SW132TMB+SW132TMG FLAG TO TERMINATE              C 001470
         EJECT                                                          C 001480
*********************************************************************** C 001490
*        PROCESS MS13 CARD ( CONT'D )                                 * C 001500
*********************************************************************** C 001510
         SPACE 1                                                        C 001520
         PL    PPPLL,MS13PFLD,CB13PFLD CONVERT PPPLL TO BINARY PL       C 001530
         CLC   MS13MESS,$SPACES     TEST IF MESSAGE SPECIFED            C 001540
         BE    *+14                BRANCH IF NO MESSAGE                 C 001550
         MVC   CB13MESS,MS13MESS   MOVE MESSAGE TO CB                   C 001560
         OI    CB13SW,SW13MESS     INDICATE MESSAGE IS PRESENT          C 001570
         LA    R2,MS13TEST         POINTA AT TEST REQUEST               C 001580
         CBAL  R4,TESTREQ          GET INTERNAL REPRESENTATION OF TEST  C 001590
         BE    CCMS1312            BR IF TEST VALID                     C 001600
         OI    CB13SW,SW13NTST     FLAG C/B AS NO-OP                    C 001610
         LINE  LINE32              PRINT ERROR MESSAGE                  C 001620
CCMS1312 EQU   *                   CONTINUE PROCESSING                  C 001630
         MVC   CB13TEST,3(R1)      MOVE INTERNAL CODE TO CB             C 001640
         MVC   CB13TST0,MS13TEST   PRESERVE CHARACTER TEST ID           C 001650
         CLI   2(R1),C'X'          DOES THIS TEST REQUIRE AN ASSOC MSXX C 001660
         BNE   *+8                 BR IF NOT                            C 001670
         OI    CB13SW,SW13CBXX     FLAG TO SWOW A(CBXX) IS REQUIRED     C 001680
         MVI   CB13LTYP,NE         ASSUME 'NE' LITERAL TEST             C 001690
         CLC   MS13LTYP,=C'NE'     TEST IF 'NE'                         C 001700
         BE    CCMS1303            BR IF YES                            C 001710
         MVI   CB13LTYP,GT         ASSUME 'GT' LITERAL TEST             C 001720
         CLC   MS13LTYP,=C'GT'     TEST IF 'GT'                         C 001730
         BE    CCMS1303            BR IF YES                            C 001740
         MVI   CB13LTYP,GE         ASSUME 'GE' LITERAL TEST             C 001750
         CLC   MS13LTYP,=C'GE'     TEST IF 'GE'                         C 001760
         BE    CCMS1303            BR IF YES                            C 001770
         MVI   CB13LTYP,LT         ASSUME 'LT' LITERAL TEST             C 001780
         CLC   MS13LTYP,=C'LT'     TEST IF 'LT'                         C 001790
         BE    CCMS1303            BR IF YES                            C 001800
         MVI   CB13LTYP,LE         ASSUME 'LE' LITERAL TEST             C 001810
         CLC   MS13LTYP,=C'LE'     TEST IF 'LE'                         C 001820
         BE    CCMS1303            BR IF YES                            C 001830
         MVI   CB13LTYP,EQ         ALLOW 'EQ' AS DEFAULT                C 001840
         EJECT                                                          C 001850
*********************************************************************** C 001860
*        PROCESS MS13 CARD ( CONT'D )                                 * C 001870
*********************************************************************** C 001880
         SPACE 1                                                        C 001890
CCMS1303 EQU   *                   CONTINUE PROCESSING                  C 001900
         SPACE 1                                                        C 001910
*        OPERATION CODES R6-R9 REPRESENT CONDITIONAL B/C (MS05) AND C/R C 001920
*         (MS04) ACCUMULATING, AND REQUIRE AN SB11 TO BE CREATED AND    C 001930
*         CHAINED TO THE CURRENT CB11.                                  C 001940
         SPACE 1                                                        C 001950
         CLI   MS13TEST,C'R'       IS IT AN 'RX' OPERATION              C 001960
         BNE   CCMS1309            BYPASS ROUTINE IF NOT                C 001970
         CLI   MS13TEST+1,C'6'     IS IT IN RANGE R6-R9                 C 001980
         BL    CCMS1309            BR IF LOW                            C 001990
         CLI   MS13TEST+1,C'9'     TEST IF IN RANGE R6-R9               C 002000
         BH    CCMS1309            BYPASS ROUTINE IF HIGH               C 002010
         LA    R2,SB11LGTH         SET LENGTH OF SB11                   C 002020
        CBPREF SB11                ACQUIRE AND IDENTIFY CONTROL BLOCK   C 002030
         ST    R1,CB13CBXX         PRESERVE SB11 ADDR IN CB13           C 002040
         USING SB11NTRY,R1         ESTABLISH TEMPORARY SB11 ADDRESS'Y   C 002050
         MVC   SB11FNO,MS13MSXX    ASSUME B/C ACCUM AND SAVE NAME       C 002060
         MVC   SB11CRFN,MS13MSXX   ASSUME C/R ACCUM AND SAVE NAME       C 002070
         MVC   SB11PDC(2),CB13PFLD PRESERVE PPPLL IN SB11               C 002080
         OI    SB11SW2,SW11COND    FLAG AS CONDITIONAL ACCUMULATOR      C 002090
         CLI   MS13TEST+1,C'6'     TEST IF TEST TYPE 'R6'               C 002100
         BNE   *+8                 BR IF NOT                            C 002110
         OI    SB11SW,SW11DBCN     FLAG AS B/C ACCUM                    C 002120
         CLI   MS13TEST+1,C'7'     TEST IF TEST TYPE 'R7'               C 002130
         BNE   *+8                 BR IF NOT                            C 002140
         OI    SB11SW,SW11DBCN+SW11INPD FLAG AS B/C ACCUM WITH PACKED   C 002150
         CLI   MS13TEST+1,C'8'     TEST IF TEST TYPE 'R8'               C 002160
         BNE   *+8                 BR IF NOT                            C 002170
         OI    SB11SW,SW11DCRN     FLAG AS C/R ACCUM                    C 002180
         CLI   MS13TEST+1,C'9'     TEST IF TEST TYPE 'R9'               C 002190
         BNE   *+8                 BR IF NOT                            C 002200
         OI    SB11SW,SW11DCRN+SW11INPD FLAG AS C/R ACCUM WITH PACKED   C 002210
         DROP  R1                  DROP TEMAPRARY SB11 ADDRESS'Y        C 002220
         LR    R2,R1               POINT R2 AT THIS SB11                C 002230
         L     R1,$PTRSB11          POINT R1 AT PREVIOUS SB11           C 002240
         ST    R2,SB11SB11-SB11NTRY(,R1) POINT PREVIOUS AT THIS         C 002250
         ST    R2,$PTRSB11          ESTABLISH THIS SB11 AS PREVIOUS     C 002260
         OI    SB11FLAG-SB11NTRY(R1),FLAGSB11 INDICATE OLD IS SB11      C 002270
         OI    SB11FLAG-SB11NTRY(R2),FLAGSB11 INDICATE NEW IS SB11      C 002280
CCMS1309 EQU   *                   CONTINUE PROCEESSING                 C 002290
        SUBOUT RESTORE=R4          RESORE AND RETURN                    C 002300
         DROP  R6,R8               DROP ADDRESSABILITY                  C 002310
         EJECT                                                          C 002320
*********************************************************************** C 002330
*        PROCESS MS14 CONTROL CARD                                    * C 002340
*********************************************************************** C 002350
         SPACE 1                                                        C 002360
*        NOTE THAT AN MS14 CARD CREATES BOTH A CB13 - TO FACILITATE     C 002370
*         CHAINING - AND A CB14 WHICH IS POINTED TO BY THE CB13.        C 002380
         SPACE 1                                                        C 002390
         USING CB13NTRY,R8         ESTABLISH C/B ADDRESSABILITY         C 002400
         USING MS14CARD,R6         ESTABLISH C/C ADDRESSABILITY         C 002410
CCMS14   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 002420
         CLC   MS13COMM,MS14MESS   IS THIS MESSAGE A COMMENT            C 002430
         BNE   *+10                BR I NOT                             C 002440
         MVC   MS14MESS,$SPACES     BLANK OUT MESSAGE IF COMMENT        C 002450
         LA    R2,CB13LGTH         GET BASIC CONTROL BLOCK LENGTH       C 002460
         CLC   MS14MESS,$SPACES     IS THERE A MESSAGE SUPPLIED         C 002470
         BE    *+8                 BR IF NO MESSAGE                     C 002480
         LA    R2,30(,R2)          INCREMENT LENGTH TO ALLOW FOR MESSAG C 002490
        CBPREF CB13                ACQUIRE AND IDENTIFY CONTROL BLOCK   C 002500
         LR    R8,R1               PRESERVE ADDRESS OF NEW BLOCK        C 002510
         L     R1,$PTRCB13          RETRIEVE CURRENT CB13 POINTER       C 002520
         CLI   MS14BORD,C'B'       DOES TEST APPLY AT BATCH LEVEL       C 002530
         BNE   *+16                BR IF APPLIES AT CARD LEVEL          C 002540
         L     R1,$PTRCB14          RETRIEVE BATCH LEVEL C/B POINTER    C 002550
         ST    R8,$PTRCB14          SET NEW BATCH LEVEL C/B PINTER      C 002560
         B     *+8                 BR OVER OTHER SETTING                C 002570
         ST    R8,$PTRCB13          STORE NEW DETAIL LEVEE C/B POINTER  C 002580
         ST    R8,CB13CB13-CB13NTRY(R1) POINT LAST AT NEW               C 002590
         MVI   CB13FLAG-CB13NTRY(R1),FLAGCB13 RE-ESTABLISH LAST AS CB13 C 002600
         CLC   MS14MESS,$SPACES     WAS MESSAGE SUPPLIED                C 002610
         BE    *+14                BR IF NO MESSAGE                     C 002620
         MVC   CB13MESS,MS14MESS   ADD MESSAG ETO C/B                   C 002630
         OI    CB13SW,SW13MESS     SET SW TO SHOW MESSAGE PRESENT       C 002640
         MVI   CB13RIND,FF         NULLIFY RESULT INDICATOR NUMBER      C 002650
         CLC   MS14RIND,$SPACES     TEST IF RESURT IND SUPPLIED         C 002660
         BE    *+18                BR IF NOT SUPPLIED                   C 002670
         PACK  $WRKPACK,MS14RIND   PACK RESULT IND NUMBER               C 002680
         CVB   R1,$WRKPACK         CONVERT TO BNARY                     C 002690
         STC   R1,CB13RIND         PRESERVE IND NUMBER IN C/B           C 002700
         MVI   CB13TEST,X'4F'      SET INTERNAL REP OF INDICATOR TEST   C 002710
         PL    PPLL,MS14PFLD,CB13PFLD CONVERT PPLL TO BINARY PL         C 002720
         EJECT                                                          C 002730
*********************************************************************** C 002740
*        PROCESS MS14 CONTROL CARD ( CONT'D )                         * C 002750
*********************************************************************** C 002760
         SPACE 1                                                        C 002770
         CLI   MS14ERRI,C'1'       TEST FOR SOFT ERRPR                  C 002780
         BNE   *+8                 BR IF NOT SOFT ERROR                 C 002790
         OI    CB13SW,SW13SOFT     INDICATE SOFT ERROR                  C 002800
         CLI   MS14ERRI,C'2'       TEST FOR DELETE REQUEST              C 002810
         BNE   *+8                 BR IF NOT DELETE                     C 002820
         OI    CB13SW,SW13DLET     INDICATE DELETE REQUEST              C 002830
         CLI   MS14ERRI,C'3'       TEST FOR INS SETTING REQUEST         C 002840
         BNE   *+8                 BR IF NOT IND REQUEST                C 002850
         OI    CB13SW,SW13OIND     INDICATE INDICATOR ONLY REQUIREDD    C 002860
         LA    R2,CB14LGTH         SET LENBTH OF CB14                   C 002870
         CBAL  R4,GETMAIN          ACQUIRE CORE FOR CB14                C 002880
         ST    R1,CB13CBXX         POINT CB13 AT CB14                   C 002890
         DROP  R8                  DROP CB13 ADDRESSABILITY             C 002900
         USING CB14NTRY,R8         ESTABLISH CB14 ADDRESSABILITY        C 002910
         LR    R8,R1               POINT R8 AT CB14                     C 002920
         MVI   CB14FLAG,FLAGCB14   ESTABLISH AS CB14                    C 002930
         ZAP   CB14CCNO,SYSIN+IOPSRCNT(4) ADD C/C SEQ NO TO C/B         C 002940
         CLI   MS14BORD,C'B'       IS THIS A BATCH LEVEL TEST           C 002950
         BNE   *+8                 BR IF NOT                            C 002960
         OI    CB14SW,SW14BTCH     FLAG AS BATCH LEVEL TEST             C 002970
         CLI   MS14BORD,C'C'       IS THIS A SEQ BATCH LEVEL TEST       C 002980
         BNE   *+8                 BR IF NOT                            C 002990
         OI    CB14SW,SW14BTCH     FLAG AS BATCH LEVEL TEST             C 003000
         LA    R10,9               ESTABLISH LOOP OF 9 BUCKETS          C 003010
         LA    R3,MS14TST0         POINT AT 1ST C/C BUCKET              C 003020
         LA    R2,CB14TST0         POINT AT 1ST C/B BUCKET              C 003030
CCMS1401 MVI   0(R2),FF            NULLIFY INDICATOR TEST               C 003040
         CLC   0(2,R3),$SPACES      IS INDICATOR SPECIFIED              C 003050
         BE    CCMS1402            BR IF NO INDICATOR                   C 003060
         PACK  $WRKPACK,0(2,R3)    PACK IND NUMBER                      C 003070
         CVB   R1,$WRKPACK         CONVERT TO BINARY                    C 003080
         STC   R1,0(R2)            PESERVE INDICATOR NUMBER             C 003090
         MVI   1(R2),OF            ASSUME DESIRED STATE IS 'OFF'        C 003100
         CLC   2(2,R3),=C'OF'      TEST IF OFF SPECOFED                 C 003110
         BE    *+8                 BR IF YES                            C 003120
         MVI   1(R2),ON            DESIRES STATE MUST BE ON             C 003130
CCMS1402 LA    R3,4(,R3)           INCREMENT TO NEXT C/C BUCKET         C 003140
         LA    R2,2(,R2)           INCREMENT TO NEXT C/B BUCKET         C 003150
         BCT   R10,CCMS1401        LOOP BACK IF BUCKETS LEFT            C 003160
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   C 003170
         DROP  R6,R8               DROP ADDRESSABILITY                  C 003180
         EJECT                                                          C 003190
*********************************************************************** C 003200
*        PROCESS MS20 CARD                                            * C 003210
*********************************************************************** C 003220
         SPACE 1                                                        C 003230
         USING MS20CARD,R6         ASTABBLISH C/C ADDRESSABILITY        C 003240
         USING CB20NTRY,R8         ESTABLISH C/B ADDRESSABILITY         C 003250
CCMS20   SUBIN SAVE=R4             PRESERV RETURN ADDRESS               C 003260
         LA    R2,CB20LGTH         SET CONTROL BLOCK LENGTH             C 003270
         GETCB CB20,SAVE1ST        ACQUIRE NEW CONTROL BLOCK            C 003280
         XC    SAVELITL(12),SAVELITL $ZEROISE WORK AREAS                C 003290
         MVC   CB20IDDN,MS20DDN    MOVE ISAM/RIGAM INFO TO C/B          C 003300
         CLI   MS20FNO,C'0'        TEST IF DDNAME ( IE ISAM )           C 003310
         BH    *+8                 BR IF RIGAM                          C 003320
         OI    CB20SW,SW20IS       FLAG AS ISAM                         C 003330
         MVC   CB20TID,MS20TEST    ADD TEST NAME (LABELE TO C/B         C 003340
         TM    CB20SW,SW20IS       TEST IF RIGAM                        C 003350
         BO    *+8                 BR IF ISAM                           C 003360
         MVI   CB20FLAG,FLAGCB2R   ALTER C/B FLAG TO SHOW RIGAM         C 003370
         ZAP   CB20ICNT,$ZERO       $ZEROISE RECORD COUNT               C 003380
         LA    R1,1                SET R1 TI 1                          C 003390
         ST    R1,SAVELITP         SET POSN WITHIN LITERAL POOL TO 1    C 003400
         LA    R10,8               ESTABLISH LOOP OF 8 KEY COMPONETS    C 003410
CCMS2001 CLI   MS20LITI,C'L'       TEST FOR LITERAL                     C 003420
         BE    *+12                BR IF LITERAL SPECIFICATION          C 003430
         CLI   MS20LITI,C'S'       TEST IF DERIVED FROM CB13 AT EXEC    C 003440
         BNE   CCMS2002            BR IF NOT                            C 003450
         MVC   CB20TYP,MS20LITI    STORE IDENTIFYING INFO               C 003460
         PACK  $WRKPACK,MS20LITL   PACK LITERAL LENGTH                  C 003470
         CVB   R1,$WRKPACK         CONVERT LENGTH TO BINARY             C 003480
         STC   R1,CB20LEN          PRESERVE LENGTH OF LITERAL           C 003490
         L     R2,SAVELITP         RETRIEVE POSN OF LITERAL             C 003500
         STC   R2,CB20POS          PRESERVE POSN OF LIERAL              C 003510
         AR    R2,R1               INCREMENT FOR LENGTH OF NEXT LITERAL C 003520
         ST    R2,SAVELITP         STORE POSN OF NEXT LITERAL           C 003530
         L     R2,SAVELITL         GET LENGTH OF LITERAL POOL           C 003540
         AR    R2,R1               INCREMENT FOR NEW LITERAL            C 003550
         ST    R2,SAVELITL         PRESERVE UPDATED POOL LENTH          C 003560
         IC    R2,CB20LEN          GET LENGTH OF KEY ELEMENT            C 003570
         A     R2,SAVEKEYL         ADD PREVIOUS KEY LENGTH              C 003580
         ST    R2,SAVEKEYL         STORE UPDATED KEY LENGTH             C 003590
         B     CCMS2003            GO INCREMENT TO NEXT BUCET           C 003600
         EJECT                                                          C 003610
*********************************************************************** C 003620
*        PROCESS MS20 CONTROL CARD ( CONT'D )                         * C 003630
*********************************************************************** C 003640
         SPACE 1                                                        C 003650
CCMS2002 CLC   MS20FLD1,$SPACES     TEST IF COMPONENT UNUSED            C 003660
         BE    CCMS2003            BR TO NEXT BUCKET IF UNUSED          C 003670
         MVC   CB20TYP,MS20DORB    PRESERVE SOURCE OF COMPOMENT         C 003680
         CLI   CB20TYP,C' '        IS THE SOURCE LEFT BLANK             C 003690
         BNE   *+8                 BR IF NOT BLANK                      C 003700
         MVI   CB20TYP,C'D'        FORCE DEFAULT VALUE OF 'D' (DETAIL)  C 003710
         PL    PPPLL,MS20POSN,CB20POS CONVERT PPPLL TO PL               C 003720
         SR    R2,R2               $ZEROISE WORK REGISTER               C 003730
         IC    R2,CB20LEN          GET LENGTH OF KEY ELEMENT            C 003740
         A     R2,SAVEKEYL         ADD PREVIOUS KEY LENGTH              C 003750
         ST    R2,SAVEKEYL         STORE UPDATED KEY LENGTH             C 003760
CCMS2003 LA    R6,8(,R6)           INCREMENT TO NEXT CONTROL CARD BUCKT C 003770
         LA    R8,3(,R8)           INCREMENT TO NEXT C/B BUCKET         C 003780
         BCT   R10,CCMS2001        GO PROCESS NEXT BUCKET, IF ANY       C 003790
         L     R8,$PTRCB20          ADJUST R8 TO START OF C/B           C 003800
         L     R6,SYSIN+IOPSRECA   ADJUST R6 TO STAT OF CONTROL CARD    C 003810
         L     R2,SAVELITL         GET LENGTH OF LITERAL POOL           C 003820
         LA    R1,CB20CB21         TREAT CB20 CB21 POINTER ...          C 003830
         ST    R1,$PTRCB21          ... AS 1ST CB21 IN CHAIN            C 003840
         LTRR  R2,R2               TEST IF LITERAL POOL REQUIRED        C 003850
         BZ    CCMS2006            BR IF NO LITERAL POOL                C 003860
         CBAL  R4,GETMAIN          ACQUIRE CORE FOR LITERAL POOL        C 003870
         ST    R1,CB20POOL         SAVE ADDRES  OF LITERAL POOL         C 003880
         LR    R3,R1               PRESERVE ADDRESS OF LITERAL POOL     C 003890
         LA    R10,8               ESTABLISH LOOP OF 8 BUCKETS          C 003900
CCMS2004 CLI   CB20TYP,C'L'        TEST IF LITERAL COMPONENT            C 003910
         BNE   CCMS2005            BR IF NOT LITERAL                    C 003920
         SR    R1,R1               $ZEROISE ....                        C 003930
         SR    R2,R2                ... WORK REGISTERS                  C 003940
         IC    R1,CB20LEN          GET LENGTH OT LITERAL                C 003950
         BCTR  R1,0                DECREMENT FOR EXECUTE                C 003960
         IC    R2,CB20POS          GET POSN OF LITERAL IN POOL          C 003970
         BCTR  R2,0                ALTER POSN TO DISPLACEMENT           C 003980
         AR    R2,R3               ADD ADDR OF POOL TO DISPLACEMENT     C 003990
         EX    R1,CB20MOVL         ADD LITERAL TO POOL                  C 004000
         EJECT                                                          C 004010
*********************************************************************** C 004020
*        PROCESS MS20 CONTROL CARD ( CONT'D )                         * C 004030
*********************************************************************** C 004040
         SPACE 1                                                        C 004050
CCMS2005 LA    R8,3(,R8)           POINT AT NEXT C/B BUCKET             C 004060
         LA    R6,8(,R6)           INCREMENT TO NEXT CONTROL CARD BUCKE C 004070
         BCT   R10,CCMS2004        GO PROCESS NEXT BUCKET IF ANY        C 004080
CCMS2006 L     R8,$PTRCB20          ADJUST R8 TO START OF C/B           C 004090
         L     R6,SYSUT1+IOPSRECA  ADJUST R6 TO START OF CONTROL CARD   C 004100
         L     R2,SAVEKEYL         RETRIEVE KEY LENGTH                  C 004110
         STC   R2,CB20KLEN         PRESERVE KEY LENGTH IN C/B           C 004120
         SLA   R2,1                MULTIPLY LENGTH BY 2                 C 004130
         CBAL  R4,GETMAIN          GET CORE TO SAVE 2 KEYS              C 004140
         ST    R1,CB20TKEY         SAVE ADDRESS OF 1ST KEY              C 004150
         A     R1,SAVEKEYL         INCREMENT TO 2ND KEY ADDRESS         C 004160
         ST    R1,CB20LKEY         SAVE ADDRESS OF LAST KEY             C 004170
         TM    CB20SW,SW20IS       TEST IF ISAM FILE                    C 004180
         BZ    CCMS2007            BR IF NOT ISAM                       C 004190
         OI    CB20ISW,IOSWINPT    FLAG ISAM FILE AS INPUT              C 004200
         IOM   TIOTSCAN,CB20DCBS,RTN=TIOTSCN DETERMINE IF DD STAT PRES  C 004210
CCMS2007 SUBOUT RESTORE=R4         RETURN TO MAIN-LINE                  C 004220
         DROP  R6,R8               DROP ADDRESSABILITY                  C 004230
         EJECT                                                          C 004240
*********************************************************************** C 004250
*        PROCESS MS21 CARD                                            * C 004260
*********************************************************************** C 004270
         SPACE 1                                                        C 004280
         USING MS21CARD,R6         ASTABLISH C/C ADDRESSABILITY         C 004290
         USING CB21NTRY,R8         ESTABLISH C/B ADDRESSABILITY         C 004300
CCMS21   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 004310
         LA    R10,2               ESTABLISH LOOP OF 2 BUCKETS          C 004320
CCMS2101 CLC   MS21FLD1,$SPACES     TEST IF BUCKET IN USE               C 004330
         BE    CCMS2102            BR IF NOT IN USE                     C 004340
         LA    R2,CB21LGTH         SET BASIC C//B LENGTH                C 004350
         CLI   MS21ERRI,C'1'       IS PD CHARACTER DESIRED              C 004360
         BNE   *+8                 BR IF NOT                            C 004370
         LA    R2,1(,R2)           INCREMENT LGTH FOR PAD CGARACTER     C 004380
         CLI   MS21ERRI,C'2'       IS DEFEULT LITERAL DESIRED           C 004390
         BNE   *+8                 BR IF NOT LITERAL                    C 004400
         LA    R2,20(,R2)          INCREMENT LGTH FOR LITERAL           C 004410
         GETCB CB21                ACQUIRE & CHAIN C/B                  C 004420
         PL    PPPLL,MS21SPOS,CB21SPOS CONVERT PPPLL TO PL              C 004430
         PACK  $WRKPACK,MS21DPOS   PACK OUTPUT POSN                     C 004440
         CVB   R1,$WRKPACK         CONVERT POSN TO BINARY               C 004450
         STC   R1,CB21DPOS         PRESERVE OUTPUT POSN                 C 004460
         CLI   MS21PIND,C'U'       TEST IF UNPACKING REQUIRED           C 004470
         BNE   *+8                 BR IF NO UNPACKING                   C 004480
         OI    CB21SW,SW21UNP      FLAG TO SHOW UNPACK                  C 004490
         CLI   MS21PIND,C'P'       TEST IF PACKING REQUIRED             C 004500
         BNE   *+8                 BR IF NO PACKING                     C 004510
         OI    CB21SW,SW21PACK     FLAG TO SHOW PACK                    C 004520
         CLI   MS21ERRI,C'1'       TEST IF PADDING REQUIRED             C 004530
         BNE   *+14                BR IF NO PADDING                     C 004540
         EJECT                                                          C 004550
*********************************************************************** C 004560
*        PROCESS MS21 CARD ( CONT'D )                                 * C 004570
*********************************************************************** C 004580
         SPACE 1                                                        C 004590
         MVC   CB21PADC,MS21PADC   PRESERVE PAD CGARACTER IN C/B        C 004600
         OI    CB21SW,SW21PAD      FLAG TO  SHOW PADDING REQIURED       C 004610
         CLI   MS21ERRI,C'2'       TEST IF DEFAULY LITERAL SUPPLIED     C 004620
         BNE   *+14                BR IF NO ITERAL                      C 004630
         MVC   CB21LIT,MS21LIT     PRESERVE DEFAULT LITERAL             C 004640
         OI    CB21SW,SW21LIT      FLAG TO SHOW LITERAL                 C 004650
         SR    R3,R3               $ZEROISE WORK REGISTER               C 004660
         IC    R3,CB21SLEN         GET LENGTH OF SOURCE FIELD           C 004670
         TM    CB21SW,SW21PACK     IS RETRIVED FIELD TO BE PACKED       C 004680
         BZ    CCMS2103            BR IF NOT TO BE PACKED               C 004690
*                                                                       C 004700
*                                  ALGORITHM IS L2 = (L1 + 1) / 2       C 004710
*                                                                       C 004720
         SR    R2,R2               $ZEROISE WORK REGISTER               C 004730
         LA    R3,1(,R3)           INCREMENT LENGTH BY 1                C 004740
         LA    R1,2                SET R1 TO VALUE OF 2                 C 004750
         DR    R2,R1               DIVIDE INCREMENTED LENGTH BY 2       C 004760
         BCTR  R3,0                DECREMENT FOR SUBSEQUENT EXECUTES    C 004770
         STC   R3,$WORKPL           PRESERVE QUOTIENT                   C 004780
         MVO   CB21SLEN,$WORKPL(1)  ESTABLISH L2||L1 FOR EXECUTES       C 004790
CCMS2103 TM    CB21SW,SW21UNP      IS RETRIEVED FIELD TO BE UNPACKED    C 004800
         BZ    CCMS2102            BR IF NOT TO BE UNPACKED             C 004810
*                                                                       C 004820
*                                  ALGORITHM IS L2 = (2 * L1) - 1       C 004830
*                                                                       C 004840
         AR    R3,R3               MULTIPLY LENGTH BY 2                 C 004850
         BCTR  R3,0                SUBTRACT 1 FROM DOUBLED LENGTH       C 004860
         BCTR  R3,0                DECREMENT FOR SUBSEQUENT EXECUTES    C 004870
         STC   R3,$WORKPL           PRESERVE MODIFIED LENGTH            C 004880
         MVO   CB21SLEN,$WORKPL(1)  ESTABLISH L2||L1 FOR EXECUTES       C 004890
CCMS2102 LA    R6,30(,R6)          INCREMENT TO NEXT BUCKET             C 004900
         BCT   R10,CCMS2101        BR TO PROCESS BUCKET, IF ANY         C 004910
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   C 004920
         DROP  R6,R8               DROP ADDRESSABILITY                  C 004930
         TITLE 'BUDGIE3C - EXECUTED INSTRUCTIONS'                       C 004940
*********************************************************************** C 004950
*        EXECUTED INSTRUCTIONS                                        * C 004960
*********************************************************************** C 004970
         SPACE 1                                                        C 004980
CB20MOVL MVC   0(0,R2),MS20LIT-MS20CARD(R6) ADD KEY LITERAL TO POOL     C 004990
         TITLE 'BUDGIE3C - MISCELLANEOUS CONSTANTS AND FIELDS'          C 005000
SAVELITL DS    F                   MS20 PROCESSING: CURRENT LIT LENGTH  C 005010
SAVELITP DS    F                   MS20 PROCESSING: CURRENT LIT POSITIO C 005020
SAVEKEYL DS    F                   MS20 PROCESSING: CURRENT KEY LENGTH  C 005030
         SPACE 1                                                        C 005040
MS13COMM DC    X'FF'               CHAR IDENTIFYING MS13/14/15 COMMENTS C 005050
         SPACE 1                                                        C 005060
LINE32   DC    C'BDG3C-032-E  UNRECOGNISABLE TEST/OPERATION CODE'       C 005070
         SPACE 1                                                        C 005080
        SCSEND C                   TERMINATE CSECT BUDGIE3C             C 005090
         END                                                            C 005100
         SPACE 1                                                        C 005110
         REPRO                                                          C 005120
 IDENTIFY BUDGIE3C('C/C PROCESSING: 13-29')                             C 005130
         END                                                            C 005140
