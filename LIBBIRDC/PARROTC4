         TITLE 'PARROTC4 - GR07 CONTROL CARD PROCESSING'                C4000100
         MACRO                                                          C4000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             C4000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               C4000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         C4000500
               EJECT                                                    C4000600
         ACE   ,                   ARITHMETIC CALCULATION ELEMENT       C4000700
               EJECT                                                    C4000800
         CBPREFIX ,                CONTROL BLOCK PREFIX                 C4000900
               EJECT                                                    C4001000
         CCB   ,                   CENTRAL CONTROL BLOCK                C4001100
               EJECT                                                    C4001200
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          C4001300
               EJECT                                                    C4001400
         DEFOPCD DSECT=YES         OPERATION/FUNCTION DESCRIPTOR        C4001500
               EJECT                                                    C4001600
         EQUATES ,                 GENERATE STANDARD EQUATES            C4001700
               EJECT                                                    C4001800
         FDB   ,                   FIELD DEFINITION BLOCK               C4001900
               EJECT                                                    C4002000
         GR07  ,                   GR08 CONTROL CARD                    C4002100
               EJECT                                                    C4002200
         LIB   ,                   LABEL IDENTIFCIATION BLOCK           C4002300
               EJECT                                                    C4002400
         PARROTT DSECT=YES         TRANSLATE TABLES                     C4002500
               EJECT                                                    C4002600
         PCB   ,                   PROCESSING CONTROL BLOCK             C4002700
               EJECT                                                    C4002800
         PTE   ,                   PROCESSING TEST ELEMENT              C4002900
               EJECT                                                    C4003000
         SCE   ,                   SELECTION CRITERION ELEMENT          C4003100
               EJECT                                                    C4003200
         SPD   ,                   STORAGE POOL DEFINITION              C4003300
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       C4003400
         MEND                                                           C4003500
         SPACE 4                                                        C4003600
PARROTC4  CSECT                                                         C4003700
         $CB   ,                   GENERATE DSECTS AND EQUATES          C4003800
         TITLE 'PARROTC4 - GR07 CONTROL CARD PROCESSING'                C4003900
     SCSECT C4                                                          C4004000
         USING PARROTC4,R12         ESTABLISH PARROTC4 ADDRESSABILITY   C4004100
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         C4004200
         SPACE 1                                                        C4004300
         ENTRY CCGR07              PROCESS GR07 CONTROL CARDS           C4004400
         ENTRY PARENDC4            END IF CSECT                         C4004500
         EJECT                                                          C4004600
*********************************************************************** C4004700
*        PROCESS GR07 CONTROL CARDS                                   * C4004800
*********************************************************************** C4004900
         SPACE 1                                                        C4005000
         USING GR07CARD,R6         ESTABLISH C/C ADDRESSABILITY         C4005100
CCGR07   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4005200
         CBAL  R4,BLDPCB           CONSTRUCT SKELETON PCB               C4005300
         CBAL  R4,GR07TST          PROCESS TEST SPECIFICATION, IF ANY   C4005400
         BE    CCGR07X             EXIT IF TEST REQUEST                 C4005500
        TBLANK GR07CALC            TEST IF NO CALCULATION (BR STUB)     C4005600
         BE    CCGR07X             EXIT IF NO CALCULATION EXISTS        C4005700
         MVC   CALCWA+1(73),GR07CALC SET CALCULATION IN WORK AREA       C4005800
         CBAL  R4,SETUPWA          COMPRESS CALCULATION IN WORK AREA    C4005900
         CBAL  R4,CALCANAL         DECOMPOSE THE CALCULATION & PROCESS  C4006000
CCGR07X SUBOUT RESTORE=R4          RESTOE AND RETURN                    C4006100
         DROP  R6                  DROP GR07 ADDRESSABILITY             C4006200
         EJECT                                                          C4006300
*********************************************************************** C4006400
*        PROCESS GR07 CARD:        CONSTRUCT SKELETON PCB             * C4006500
*********************************************************************** C4006600
         SPACE 1                                                        C4006700
         USING LIBNTRY,R14         ESTABLISH LIB ADDRESSABILITY         C4006800
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         C4006900
         USING GR07CARD,R6         ESTABLISH GR07 ADDRESSABILITY        C4007000
BLDPCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4007100
         LA    R2,PCBLGTH          SET PCB LENGTH IN WORK REGISTER      C4007200
         GETCB PCB                 ACQUIRE AND CHAIN A PCB              C4007300
         MVC   PCBLABL,GR07FID     PRESERVE DESTINATION FLD NAME IN PCB C4007400
         MVC   PCBTYPE,GR07TOTT    PRESERVE PROCESSING TYPE INDICATOR   C4007500
         TM    SWPARM2,MPRMTIND    CAN TOTAL TIME IND BE KEYNO          C4007600
         BO    *+16                BR IF YES TO LEAVE WELL ENOUGH ALONE C4007700
         CLI   PCBTYPE,C' '        HAS A TOTAL TIME INDICATOR BEEN SUPP C4007800
         BE    *+8                 BR IF NO TOTAL TIME INDICATOR        C4007900
         MVI   PCBTYPE,C'T'        FORCE INDICATOR TO ALL TOTAL TIME    C4008000
         CLI   PCBTYPE,C' '        WAS NO PROCESSING TYPE INDICATOR SUP C4008100
         BNE   *+8                 BR IF INDICATOR WAS SUPPLIED         C4008200
         MVI   PCBTYPE,C'D'        FORCE DEFAULT DETAIL TIME PROCESSING C4008300
         OI    PCBSW,MPCBCALC      ASSUME THAT THIS IS A CALCULATION    C4008400
         CHNCB PCB,ACE,PTE,SCE     SET POINTERS TO FACILITATE CHAINING  C4008500
         EJECT                                                          C4008600
*********************************************************************** C4008700
*        PROCESS GR07 CARD:        CONSTRUCT SKELETON PCB ( CONT'D )  * C4008800
*********************************************************************** C4008900
         SPACE 1                                                        C4009000
         LR    R7,R8               SET PCB ADDRESS IN REGISTER 7        C4009100
        TBLANK GR07CALC            IS THIS MERELY A BRANCH STUB ?       C4009200
         BE    BLDPCBX             GO TO EXIT IF YES: DON'T NEED LIB    C4009300
         DROP  R8                  DROP PCB ADDRESSABILITY              C4009400
         USING PCBNTRY,R7          ESTABLISH PCB ADDRESSABILITY         C4009500
         LTA   R14,$LIBLIB         GET ADDRESS OF 1ST LIB               C4009600
         B     *+8                 BYPASS FORWARD CHAINING              C4009700
BLDPCB1  LTA   R14,LIBLIB,BLDPCB2  GET ADDRESS OF NEXT LIB              C4009800
         CLC   LIBLABL,PCBLABL     HAVE WE A MATCH                      C4009900
         BNE   BLDPCB1             LOOP BACK FOR NEXT LIB IF NOT        C4010000
         ST    R14,PCBLIB          PRESERVE LIB ADDRESS IN PCB          C4010100
         TM    LIBTYPE,LIBTNUM     DOES THE LIB DEFINE A NUMERIC FIELD  C4010200
         BO    BLDPCBX             BR IF LIB IS NUMERIC                 C4010300
         MVI   PCBID,NULLCB        NULLIFY THE PCB TO PREVENT ERRORS    C4010400
         MVC   LINE04L,LIBLABL     SET FIELD LABEL IN LIB               C4010500
         LINE  LINE04,ELEVEL=YES   WARN OF INCORRECT SPECIFICATION      C4010600
         B     BLDPCBX             GO TO EXIT                           C4010700
BLDPCB2  MVC   BLDLABL,PCBLABL     MOVE PCB LABEL TO WORK FIELD         C4010800
         CBAL  R4,BLDLIB           CONSTRUCT A LIB WITH THIS LABEL      C4010900
         ST    R8,PCBLIB           PRESERVE LIB ADDRESS IN PCB          C4011000
BLDPCBX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C4011100
         DROP  R6                  DROP GR07 ADDRESSABILITY             C4011200
         DROP  R7                  DROP PCB ADDRESSABILITY              C4011300
         DROP  R14                 DROP LIB ADDRESSABILITY              C4011400
         EJECT                                                          C4011500
*********************************************************************** C4011600
*        PROCESS GR07 CARD:        PROCESS TEST SPECIFICATION         * C4011700
*********************************************************************** C4011800
         SPACE 1                                                        C4011900
         USING PTENTRY,R8          ESTABLISH PTE ADDRESSABILITY         C4012000
         USING PCBNTRY,R7          ESTABLISH PCB ADDRESSABILITY         C4012100
         USING GR07CARD,R6         ESTABLISH GR07 ADDRESSABILITY        C4012200
GR07TST  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4012300
         CLC   GR07TEST,=C'TEST'   IS THIS A TEST SPECIFICATION         C4012400
         BNE   GR07TSTY            BR IF NOT A TEST                     C4012500
         OI    PCBSW,MPCBTEST      FLAG PCB AS DEFINING A TEST          C4012600
         NI    PCBSW,FF-MPCBCALC   SET OFF ASSUMED/WRONG PCB TYPE       C4012700
         LA    R2,PTELGTH          SET LENGTH OF PTE IN REGISTER 2      C4012800
         GETCB PTE,NOCHAIN         ECQUIRE AND CHAIN A PTE              C4012900
         CHNCB PTE,$LACE           SET POINTERS TO FACILITATE CHAINING  C4013000
         ST    R8,PCBPTE           PRESERVE PTE ADDRESS IN PCB          C4013100
         MVC   PTELABLT,GR07FLD1   LABEL OF FIELD TO BE TESTED          C4013200
         MVC   PTELABLC,GR07FLD2   LABEL OF COMPARAND                   C4013300
         MVC   PTELABLD,GR07FLD3   LABEL OF PCB TO WHICH TO BRANCH      C4013400
         EJECT                                                          C4013500
*********************************************************************** C4013600
*        PROCESS GR07 CARD:        PROCESS TEST SPEC'N ( CONT'D )     * C4013700
*********************************************************************** C4013800
         SPACE 1                                                        C4013900
         CLC   PTELABLD,=C'$1'     IS THIS A '$1' SPECIFICATION         C4014000
         BNE   *+8                 BR IF NOT                            C4014100
         OI    PTESW,MPTE$1        FLAG AS '$1' SPECIFICATION           C4014200
         CLC   PTELABLD,=C'$2'     IS THIS A '$2' SPECIFCIATION         C4014300
         BNE   *+8                 BR IF NOT                            C4014400
         OI    PTESW,MPTE$2        FLAG AS '$2' SPECIFICATION           C4014500
         CLC   PTELABLT,=C'$K'     IS THE FIELD TO TEST '$K' (KEYNO)    C4014600
         BNE   *+8                 BR IF NOT                            C4014700
         OI    PTESW,MPTE$K1       FLAG THAT FIELD TO TEST IS KEY NUMBE C4014800
         CLC   PTELABLC,=C'$K'     IS THE COMPARAND '$K' (KEY NUMBER)   C4014900
         BNE   *+8                 BR IF NOT                            C4015000
         OI    PTESW,MPTE$K2       FLAG THAT COMPARAND IS KEY NUMBER    C4015100
         CLC   PTELABLT,=C'$L'     IS 1ST OPERAND $L                    C4015200
         BNE   *+8                 BR IF NOT                            C4015300
         OI    PTESW,MPTE$L1       FLAG THAT 1ST OPENAND IS A LITERAL   C4015400
         CLC   PTELABLC,=C'$L'     IS THE COMPARAND '$L' ( LITERAL )    C4015500
         BNE   *+8                 BR IF NOT                            C4015600
         OI    PTESW,MPTE$L2       FLAG THAT COMPARAND IS LITERAL       C4015700
         TM    PTESW,MPTE$L1+MPTE$L2 IS EITHER OPERAND A LITERAL        C4015800
         BZ    *+8                 BR IF NO LITERAL SPECIFIED           C4015900
         CBAL  R4,BLD$LLIT         ISOLATE LITERAL & CONSTRUCT ACE      C4016000
         LA    R1,PTECTYPE         POINT AT DEST FOR INTERNAL REP OF TS C4016100
         LA    R2,GR07TTYP         POINT AT THE INPUT TEST TYPE         C4016200
         CBAL  R4,TYPETST          CONVERT TO INTERNAL REPRESENTATION   C4016300
         BE    GR07TSTX            BR IF CODE VALID                     C4016400
         MVI   PTEID,NULLCB        NULLIFY PTE IF TEST TYPE UNKNOWN     C4016500
         MVI   PCBID,NULLCB        NULLIFY THE PCB AS WELL              C4016600
         B     GR07TSTX            GO SHOW THAT PTE BUILT               C4016700
GR07TSTY CLI   *,Y                 SET COND CODE TO SHOW NOT TEST       C4016800
         B     *+8                 BYPASS RESETTING COND CODE           C4016900
GR07TSTX CLI   *,X                 SET COND CODE TO SHOW PTE BUILT      C4017000
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C4017100
         DROP  R6                  DROP GR07 ADDRESSABILITY             C4017200
         DROP  R7                  DROP PCB ADDRESSABILITY              C4017300
         DROP  R8                  DROP PTE ADDRESSABILITY              C4017400
         EJECT                                                          C4017500
*********************************************************************** C4017600
*        PROCESS GR07 CARD:        CONVERT TEST TYPE TO INTERNAL REP'N* C4017700
*********************************************************************** C4017800
         SPACE 1                                                        C4017900
*        THIS ROUTINE CONVERTS THE TEST TYPE FROM EXTERNAL TO INTERNAL  C4018000
*         REPRESENTATION.          UPON ENTRY :-                        C4018100
*         R1 - DESTINATION FLAG BYTE                                    C4018200
*         R2 - SOURCE FIELD                                             C4018300
         SPACE 1                                                        C4018400
TYPETST  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4018500
         L     R9,$VPARTT          GET ADDRESS OF CSECT OF TABLES       C4018600
         USING PARROTT,R9          ESTABLISH TABLE ADDRESSABILITY       C4018700
         LA    R9,TESTTAB          GET ADDRESS OF TEST TYPE TABLE       C4018800
         DROP  R9                  DROP TABLE ADDRESSABILITY            C4018900
         B     *+8                 BYPASS FORWARD CHAINING              C4019000
         LA    R9,3(,R9)           INCREMENT TO NEXT ELEMENT IN TABLE   C4019100
         MVC   0(1,R1),2(R9)       ASSUME MATCH AND SET RESULT          C4019200
         CLC   0(2,R9),0(R2)       DOES THE TABLE ENTRY MATCH THE SOURC C4019300
         BE    TYPETSTX            EXIT IT MATCH FOUND                  C4019400
         CLC   0(3,R9),=X'FFFFFF'  TEST FOR END OF TABLE                C4019500
         BNE   *-26                LOOP BACK IF ELEMENTS LEFT           C4019600
         LR    R1,R2               POINT R1 AT SOURCE                   C4019700
         SR    R1,R6               DETERMINE DISPLACEMENT WITHIN CARD   C4019800
         LA    R1,1(,R1)           CONVERT DISPLACEMENT TO POSITION     C4019900
         CBAL  R4,CONVPOS          CONVERT POSN TO EBCDIC               C4020000
         MVC   LINE01M(2),$WRKSNGL+2 ADD START POSN TO ERROR MESSAG     C4020100
         LA    R1,1(,R1)           INCREMENT TO END OF FIELD            C4020200
         CBAL  R4,CONVPOS          CONVERT TO EBCDIC                    C4020300
         MVC   LINE01M+3(2),$WRKSNGL+2 ADD END OF FIELD TO ERROR MESSAG C4020400
         LINE  LINE01,ELEVEL=YES   ISSUE ERROR MESSAGE ANS SET FLAG     C4020500
         CLI   *,Y                 SET COND CODE TO SHOW ERROR          C4020600
         B     *+8                 BYPASS RESETTING COND CODE           C4020700
TYPETSTX CLI   *,X                 SET COND CODE TO SHOW SUCCESS        C4020800
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C4020900
         EJECT                                                          C4021000
*********************************************************************** C4021100
*        PROCESS GR07 CARDS:       PROCESS $L LITERAL VALUE           * C4021200
*********************************************************************** C4021300
         SPACE 1                                                        C4021400
         USING PTENTRY,R8          ESTABLISH PTE ADDRESSABILITY         C4021500
         USING GR07CARD,R6         ESTABLISH GR07 ADDRESSABILITY        C4021600
BLD$LLIT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4021700
         MVI   CALCWA,C' '         INSERT LEADING BLANK IN W/A          C4021800
         MVC   CALCWA+1(L'CALCWA-1),CALCWA ... AND PROPAGE THROUGH      C4021900
         MVC   CALCWA+1(L'GR07$LIT),GR07$LIT MOVE LITERAL TO WORK AREA  C4022000
         CBAL  R4,SETUPWA          COMPRESS LITERAL INTO WORK AREA      C4022100
         CBAL  R4,CALCANAL         ISOLATE LITERAL & CONSTRUCT ACE      C4022200
        SUBOUT RESTORE=R4          RETSORE AND RETURN TO CALLER         C4022300
         DROP  R6                  DROP GR07 ADDRESSABILITY             C4022400
         DROP  R8                  DROP PTE ADDRESSABILITY              C4022500
         EJECT                                                          C4022600
*********************************************************************** C4022700
*        PROCESS GR07 CARD:        COMPRESS CALCULATION INTO WORK AREA* C4022800
*********************************************************************** C4022900
         SPACE 1                                                        C4023000
*        THIS ROUTINE MOVES THE CALCULATION TO A WORK AREA, INSERTING A C4023100
*         LEADING '+' ( AS AN OPERATOR FOR THE 1ST OPERAND ), AND       C4023200
*         COMPRESSES THE CALCULATION BY REMOVING EMBEDDED BLANKS.       C4023300
         SPACE 1                                                        C4023400
         USING GR07CARD,R6         ESTABLISH GR07 ADDRESSABILITY        C4023500
SETUPWA  SUBIN ,                   ENTER ROUTINE                        C4023600
         MVI   CALCWA,C'+'         SET '+' SIGN AS 1ST OPERATOR         C4023700
         LA    R15,L'CALCWA        SET R15 TO LENGTH OF WORK AREA       C4023800
         LR    R14,R15             SET R14 TO LENGTH OF WORK AREA       C4023900
         BCTR  R14,0               DECREMENT FOR LENGTH OF SHUFFLE STRI C4024000
         BCTR  R14,0               DECREMENT TO GET EXECUTABLE LENGTH   C4024100
         LA    R1,CALCWA           POINT R1 AT START OF WORK AREA       C4024200
SETUPWA1 CLC   0(2,R1),=C'/*'      HAVE WE FOUND START OF A COMMENT     C4024300
         BNE   SETUPWA4            BR IF NOT A COMMENT                  C4024400
         MVI   0(R1),C' '          INSERT BLANK OVER START OF COMMENT   C4024500
         BCTR  R14,0               DECREMENT FOR LENGTH OF REMAINDER    C4024600
         EX    R14,BLNKCOMM        BLANK OUT REMAINDER OF CALCULATION   C4024700
         B     SETUPWA3            EXIT: COMPRESSION COMPLETE           C4024800
SETUPWA4 CLI   0(R1),C' '          IS THIS POSITION BLANK               C4024900
         BNE   SETUPWA2            BR IF NOT TO INCREMENT ALONG CALC    C4025000
         EX    R14,CLCBLWA         IS REMAINDER OF CALCULATION BLANK    C4025100
         BE    SETUPWA3            BR IF YES: FINISHED COMPRESSING CALC C4025200
         EX    R14,MVCUPWA         MOVE REMAINDER BACK OVER THIS BLANK  C4025300
         MVI   CALCWA+L'CALCWA-1,C' ' INSERT TRAILING SPACE             C4025400
         B     SETUPWA1            LOOP BACK TO SEE IF POSN STILL BLANK C4025500
SETUPWA2 LA    R1,1(,R1)           INCREMENT TO NEXT POSN OF CALC       C4025600
         BCTR  R14,0               DECREMENT FOR EXECUTABLE LGTH OF REM C4025700
         BCT   R15,SETUPWA1        LOOP BACK IF ANY POSITONS LEFT       C4025800
SETUPWA3 LA    R1,CALCWAND         POINT R1 PAST CALC W/A               C4025900
         MVI   0(R1),C' '          PLAY SAFE AND FORCE BL LEST CORRUPT  C4026000
         LA    R2,CALCWA           POINT R1 AT START OF WORK AREA       C4026100
         CLI   0(R1),C' '          IS THIS POSN NON-BLANK               C4026200
         BNE   *+8                 BR IF FOUND LAST NON-BLANK           C4026300
         BCT   R1,*-8              LOOP BACK TO TEST PREVIOUS BYTE      C4026400
         MVI   1(R1),X'FF'         INSERT DELIMITER AFTER TEXT          C4026500
         SR    R1,R2               CALCULATE EXECUTABLE LENGTH OF STRIN C4026600
         STH   R1,CALCWAL          PRESERVE EXECUTABLE LENGTH OF STRING C4026700
SETUPWAX SUBOUT ,                  RETURN TO CALLER                     C4026800
         DROP  R6                  DROP GR07 ADDRESSABILITY             C4026900
         EJECT                                                          C4027000
*********************************************************************** C4027100
*        PROCESS GR07 CARD:        DECOMPOSE THE CALCULATION          * C4027200
*********************************************************************** C4027300
         SPACE 1                                                        C4027400
*        THIS ROUTINE DECOMPOSES THE CALCULATION INTO ITS COMPONENT     C4027500
*         ELEMENTS ( OPERATOR||OPERAND ), AND INVOKES ROUTINE 'BLDACE'  C4027600
*         TO CONSTRUCT AN ACE FORM THE ISOLATED ELEMENT.                C4027700
         SPACE 1                                                        C4027800
CALCANAL SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4027900
         LH    R14,CALCWAL         RETRIEVE EXECUTABLE LENGTH OF CALC   C4028000
         LA    R15,CALCWA          POINT R15 AT START OF CALCULATION    C4028100
CALCAN1  LA    R3,1(,R15)          POINT R3 PAST THE OPERATOR           C4028200
         LR    R2,R14              GET THE EXECUTABLE LENGTH ...        C4028300
         BCTR  R2,0                 ... OF THE STRING LESS THE OPERATOR C4028400
         CLI   0(R3),C'-'          HAVE WE FOUND A MINUS PREFIX         C4028500
         BNE   *+10                BR IF NO MINUS PREFIX                C4028600
         LA    R3,1(,R3)           POINT R3 PAST THE MINUS PREFIX       C4028700
         BCTR  R2,0                GET EXECUTABLE LENGTH OF REMAINDER   C4028800
         LA    R1,1(R2,R3)         POINT R1 AT THE DELIMITER            C4028900
         EX    R2,FINDOP           LOCATE THE NEXT OPERATOR ( IF ANY )  C4029000
         SR    R1,R15              DETERMINE THE LGTH OF THIS ELEMENT   C4029100
         SR    R14,R1              COMPUTE EXECUTABLE LENGTH OF REMAIND C4029200
         BCTR  R1,0                DECREMENT FOR EXEC LGTH OF ELEMENT   C4029300
         MVC   CALCEL,$SPACES      BLANK OUT THE WORK AREA              C4029400
         EX    R1,MVCEL            MOVE ELEMENT TO THE WORK AREA        C4029500
         CBAL  R4,BLDACE           CONSTRUCT AN ACE FROM THIS ELEMENT   C4029600
         LA    R15,1(R1,R15)       POINT PAST ELEMENT AT START OF NEXT  C4029700
         CLI   0(R15),FF           HAVE WE REACHED THE DELIMITER        C4029800
         BNE   CALCAN1             LOOP BACK IF NOT TO PROCESS ELEMENT  C4029900
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C4030000
         EJECT                                                          C4030100
*********************************************************************** C4030200
*        PROCESS GR07 CARD:        CONSTRUCT AN ACE                   * C4030300
*********************************************************************** C4030400
         SPACE 1                                                        C4030500
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         C4030600
BLDACE   SUBIN SAVE=ALL            PRESERVE RETURN ADDRESS              C4030700
         XC    BLDSTRT(BLDEND-BLDSTRT),BLDSTRT INITIALISE WORK AREAS    C4030800
         MVI   BLDID,FLAGACE       INITIALISE C/B FLAG IN WORK AREA     C4030900
         LA    R3,CALCEL+1         POINT PAST OPERATOR IN WORK AREA     C4031000
         LR    R2,R1               SET TRUE LENGTH OF OPERAND IN R2     C4031100
         LTR   R2,R2               IS OPERAND LENGTH ZERO ( E.G. +++ )  C4031200
         BNZ   BLDACE0             BR IF NOT A ZERO LENGTH              C4031300
         MVC   LINE05S(1),CALCEL   SET SUPERFLUOUS SIGN IN ERROR MESSAG C4031400
         LINE  LINE05              WARN OF ADJACENT SIGNS               C4031500
         B     BLDACEX             BYPASS FURTHER PROCESSING OF NULL EL C4031600
BLDACE0  CLI   0(R3),C'-'          HAVE WE A MINUS PREFIX               C4031700
         BNE   *+10                BR IF NOT                            C4031800
         LA    R3,1(,R3)           INCREMENT OVER MINUS PREFIX          C4031900
         BCTR  R2,0                DECREMENT FOR LENGTH OF REMAINDER    C4032000
         LR    R15,R2              PRESERVE TRUE LENGTH OF OPERAND      C4032100
         CH    R2,=H'2'            IS OPERAND LONGER THAN 2 BYTES       C4032200
         BH    BLDACE3             BR IF YES: MUST BE NUMERIC LITERAL   C4032300
         MVC   BLDLABL,0(R3)       SET FIELD LABEL IN WORK FIELD        C4032400
         LA    R2,ACELGTH          BE OPTIMISTIC: SET ACE LENGTH IN WOR C4032500
         LTA   R7,$LIBLIB          GET ADDRESS OF 1ST LIB               C4032600
         B     *+8                 BYPASS FORWARD CHAINING              C4032700
BLDACE1  LTA   R7,LIBLIB,BLDACE2   GET ADDRESS OF NEXT LIB              C4032800
         CLC   LIBLABL,0(R3)       HAVE WE A MATCH                      C4032900
         BE    BLDACEG             GO CONSTRUCT ACE IF YES              C4033000
         B     BLDACE1             LOOP BACK FOR NEXT LIB               C4033100
         EJECT                                                          C4033200
*********************************************************************** C4033300
*        PROCESS GR07 CARD:        CONSTRUCT AN ACE ( CONT'D )        * C4033400
*********************************************************************** C4033500
         SPACE 1                                                        C4033600
BLDACE2  LR    R2,R15              RESET TRUE OPERAND LENGTH IN REG 2   C4033700
         CLI   0(R3),C'0'          IS 1ST BYTE OF OPERAND NUMERIC       C4033800
         BNL   BLDACE3             BR IF NUMERIC: ASSUME IT IS A LITERA C4033900
         CLI   0(R3),C'.'          DOES OPERAND START WITH DECIMAL POIN C4034000
         BE    BLDACE3             BR IF YES: ASSUME IT IS A LITERAL    C4034100
         CBAL  R4,BLDLIB           CONSTRUCT A LIB FOR THIS UNKNOWN LAB C4034200
         LR    R7,R8               SET ADDRESS OF NEW LIB IN R7 FOR LAT C4034300
         MVC   LINE02L,BLDLABL     SET LABEL IN ERROR MESSAGE           C4034400
         LINE  LINE02              WARN THAT LABEL DID NOT EXIST        C4034500
         B     BLDACEG             GO CONSTRUCT ACE                     C4034600
BLDACE3  CBAL  R4,BLDFPLIT         CONVERT LITERAL VALUE TO FLOTAING PO C4034700
         BNE   BLDACEX             EXIT IF LITERAL IN ERROR             C4034800
         LA    R2,ACELGTH+8        SET LENGTH OF ACE WITH CONCATENATED  C4034900
BLDACEG  CBAL  R4,GETACE           ACQUIRE, CHAIN AND INITIALISE ACE    C4035000
         TM    ACESW-ACENTRY(R8),MACELIT DOES THE ACE HAVE A LITERAL VA C4035100
         BO    BLDACEX             BR IF YES: NO LIB TO TEST            C4035200
         TM    LIBTYPE,LIBTNUM     ENSURE THAT LIB DEFINES NUMERIC FLD  C4035300
         BO    BLDACEX             BR IF LIB IS NUMERIC                 C4035400
         MVI   ACEID-ACENTRY(R8),NULLCB NULLIFY ACE TO IGNORE THIS ELEM C4035500
         MVC   LINE04L,LIBLABL     SET FIELD LABEL IN ERROR MESSAGE     C4035600
         LINE  LINE04,ELEVEL=YES   TELL OF INCORRECT SPECIFICATION      C4035700
BLDACEX SUBOUT RESTORE=ALL         RESTORE AND RETURN TO CALLER         C4035800
         DROP  R7                  DROP LIB ADDRESSABILITY              C4035900
         EJECT                                                          C4036000
*********************************************************************** C4036100
*        PROCESS GR07 CARD:        CONVERT LITERAL TO FLOATING POINT  * C4036200
*********************************************************************** C4036300
         SPACE 1                                                        C4036400
*        THIS ROUTINE CONVERTS THE LITERAL VALUE INTO THE EQUIVALENT    C4036500
*         FLOATING POINT VALUE, PAYING DUE HEED TO THE DECIMAL POINT.   C4036600
*         UPON ENTRY :-                                                 C4036700
*         R3  - ADDRESS OF START OF LITERAL ( IN CALCEL )               C4036800
*         R15 - TRUE LENGTH OF LITERAL                                  C4036900
         SPACE 1                                                        C4037000
BLDFPLIT SUBIN SAVE=(R2,R3,R4)     PRESERVE RETURN ADDRESS              C4037100
         MVC   LINE03EL,CALCEL     SET CALC ELEMENT IN ERROR MESSAGE    C4037200
         MVI   $FPNDEC,0           ASSUME ZERO DECIMAL PLACES           C4037300
         L     R9,$VPARTT          GET ADDRESS OF TABLE CSECT           C4037400
         USING PARROTT,R9          ESTABLISH ADDRESSABILITY OF TABLES   C4037500
         MVI   STRTAB,0            SET X'00' AT START OF TABLE ...      C4037600
         MVC   STRTAB+1(255),STRTAB ... AND PROPAGATE THROUGH           C4037700
         SR    R15,R15             ZEROISE WORK REGISTER                C4037800
         IC    R15,=C'.'           INSERT DECIMAL POINT INTO REG15      C4037900
         STC   R15,STRTAB(R15)     SET TABLE TO DETECT PERIODS          C4038000
         DROP  R9                  DROP TABLE ADDRESSABILITY            C4038100
         LR    R14,R3              POINT R14 AT START OF LITERAL        C4038200
         LR    R15,R2              SET TRUE LENGTH OF LITERAL IN REG 15 C4038300
         BCTR  R15,0               DECREMENT FOR EXECUTABLE LENGTH      C4038400
         EX    R15,FINDPER         LOCATE DECIMAL POINT ( IF ANY )      C4038500
         BC    8,BLDFPLT1          BR IF NO PERIOD TO TEST NUMERIC      C4038600
         BC    4,BLDFPLT0          BR IF EMBEDDED PERIOD FOUND          C4038700
*                                  HAVE FOUND A TRAILING PERIOD: DROP I C4038800
         BCTR  R15,0               DECREMENT LENGTH TO IGNORE TRAILING  C4038900
         B     BLDFPLT1            GO ENSURE LITERAL IS NUMERIC         C4039000
BLDFPLT0 SR    R1,R3               DETERMINE DISPLACEMENT OF PERIOD     C4039100
         SR    R15,R1              COMPUTE NO. OF DECIMAL PLACES        C4039200
         STC   R15,$FPNDEC         SET NO. OF DECIMAL PLACES IN FP W/A  C4039300
         LA    R1,0(R3,R1)         RECALCULATE ADDRESS OF PERIOD        C4039400
         BCTR  R15,0               OBTAIN EXECUTABLE LGTH OF DECIMALS   C4039500
         EX    R15,DECSHUFL        MOVE DECIMALS LEFTWARDS OVER PERIOD  C4039600
         SUBLR R15,R2              REFRESH TRUE LENGTH OF LITERAL       C4039700
         BCTR  R15,0               DECREMENT TO ALLOW FOR REMOVED PERIO C4039800
         BCTR  R15,0               DECREMENT TO GET EXECUTABLE LENGTH   C4039900
         EJECT                                                          C4040000
*********************************************************************** C4040100
*        PROCESS GR07 CARD:        CONVERT LITERAL TO FP ( CONT'D )   * C4040200
*********************************************************************** C4040300
         SPACE 1                                                        C4040400
BLDFPLT1 NI    SWINIT,FF-MINTCC    SUPPRESS MESSAGES FOR 'NUMERIC'      C4040500
*        BCTR  R15,0               DECREMENT TO GET EXECUTABLE LENGTH   C4040600
         CBAL  R4,NUMERIC          ENSURE THAT LITERAL IS NUMERIC       C4040700
         BNH   BLDFPLT2            BR IF FIELD IS NUMERIC               C4040800
         MVI   BLDID,NULLCB        NULLIFY C/B TO PREVENT SILLY ABENDS  C4040900
         LINE  LINE03              WARN OF IGNORED NON-NUMERIC LITERAL  C4041000
         OI    SWINIT,MINTCC       SET ON MESSAGES FROM 'NUMERIC'       C4041100
         B     BLDFPLTY            GO TO EXIT SHOWING LITERAL IN ERROR  C4041200
BLDFPLT2 ZAP   $FPDEC,$PVALUE      SET LITERAL VALUE IN FP WORK FLD     C4041300
         CBAL  R4,CNVTOFP          CONVERT VALUE TO FLOATING POINT      C4041400
         MVC   BLDLIT,$FPFP        MOVE FP VALUE TO WORK FIELD          C4041500
         OI    SWINIT,MINTCC       SET ON MESSAGES FROM 'NUMERIC'       C4041600
         OI    BLDACESW,MACELIT    FLAG THAT ACE CONTAINS A LITERAL     C4041700
         B     BLDFPLTX            GO TO EXIT SHOWING ALL WELL          C4041800
BLDFPLTY CLI   *,Y                 SET COND CODE TO SHOW ERROR          C4041900
         B     *+8                 BYPASS RESETTING COND CODE           C4042000
BLDFPLTX CLI   *,X                 SET COND CODE TO SHOW LITERAL VALID  C4042100
        SUBOUT RESTORE=(R2,R3,R4)  RESTORE AND RETURN TO CALLER         C4042200
         EJECT                                                          C4042300
*********************************************************************** C4042400
*        PROCESS GR07 CARD:        ACQUIRE AND INITIALISE ACE         * C4042500
*********************************************************************** C4042600
         SPACE 1                                                        C4042700
         USING ACENTRY,R8          ESTABLISH ACE ADDRESSABILITY         C4042800
GETACE   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4042900
         GETCB ACE                 ACQUIRE AND CHAIN ACE                C4043000
         MVC   ACESW,BLDACESW      INITIALISE SWITCH AS NECESSARY       C4043100
         ST    R7,ACELIB           PRESERVE LIB ADDRESS ( IF ANY )      C4043200
         MVC   ACELABL,BLDLABL     SET LABEL OF FIELD ( IF ANY )        C4043300
         MVC   ACEID,BLDID         SET ACE ID OF NULL FLAG AS NECESSARY C4043400
         LA    R10,OPTABL          POINT R10 AT CONVERSION TABLE        C4043500
         CLC   0(1,R10),CALCEL     HAVE WE AN OPERATOR MATCH            C4043600
         BE    *+12                BR IF YES                            C4043700
         LA    R10,2(,R10)         INCREMENT TO NEXT TABLE ELEMENT      C4043800
         B     *-14                LOOP BACK TO TEST NEXT ELEMENT       C4043900
         MVC   ACEOPCD,1(R10)      SET INTERNAL REPRESENTATION OF OPCOD C4044000
         TM    ACESW,MACELIT       IS THIS A LITERAL VALUE              C4044100
         BZ    *+10                BR IF NOT A LITERAL                  C4044200
         MVC   ACELIT,BLDLIT       ADD FP LITERAL VALUE TO ACE          C4044300
         CLI   CALCEL+1,C'-'       DOES ELEMENT HAVE A MINUS PREFIX     C4044400
         BNE   *+8                 BR IF NOT                            C4044500
         OI    ACESW,MACENEG       FLAG THAT NEGATIVE VALUE REQUIRED    C4044600
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C4044700
         DROP  R8                  DROP ACE ADDRESSABILITY              C4044800
         EJECT                                                          C4044900
*********************************************************************** C4045000
*        PROCESS GR07 CARD:        CONSTRUCT A LIB FOR UNKNOWN LABEL  * C4045100
*********************************************************************** C4045200
         SPACE 1                                                        C4045300
         USING LIBNTRY,R8          ESTABLISH LIB ADDRESSABILITY         C4045400
BLDLIB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C4045500
         LA    R2,LIBLGTH          SET LIB LENGTH IN WORK AREA          C4045600
         GETCB LIB                 ACQUIRE AND CHAIN ANOTHER LIB        C4045700
         MVC   LIBLABL,BLDLABL     SET LABEL FROM THE WORK AREA         C4045800
         OI    LIBTYPE,LIBTACUM    FLAG LIB AS BEING GR07 ACCUMULATOR   C4045900
         OI    LIBTYPE,LIBTNUM     FLAG THAT THIS IS A NUMERIC LIB      C4046000
         MVI   LIBFLDT,FLOAT       PRETEND THAT LIB HAS AN FP SOURCE    C4046100
         CLI   LIBLABL,C'%'        IS THIS THE LABEL OF A SCALAR        C4046200
         BNE   *+8                 BR IF NOT                            C4046300
         OI    LIBTYPE,LIBTSCAL    FLAG LIB AS A SCALAR                 C4046400
        SUBOUT RESTORE=R4          RETURN TO THE CALLER                 C4046500
         DROP  R8                  DROP LIB ADDRESSABILITY              C4046600
         EJECT                                                          C4046700
*********************************************************************** C4046800
*        CONVERT BINARY POSITION TO EBCDIC                            * C4046900
*********************************************************************** C4047000
         SPACE 1                                                        C4047100
CONVPOS  SUBIN ,                   ENTER ROUTINE                        C4047200
         MVC   $WRKSNGL,BLDMASK    MOVE EDIT MASK TO WORK AREA          C4047300
         CVD   R1,$WRKDUBL         CONVERT VALUETO DECIMAL              C4047400
         ED    $WRKSNGL,$WRKDUBL+6 RETURN TO CALLER                     C4047500
        SUBOUT ,                   RETIRN TO CALLER                     C4047600
         TITLE 'PARROTC4 - EXECUTABLE INSTRUCTIONS'                     C4047700
*********************************************************************** C4047800
*        EXECUTABLE INSTRUCTIONS                                      * C4047900
*********************************************************************** C4048000
         SPACE 1                                                        C4048100
FINDPER  TRT   0(0,R3),STRTAB-PARROTT(R9) SCAN LITERAL FOR PERIOD       C4048200
MVCUPWA  MVC   0(0,R1),1(R1)       REMOVE EMBEDDED BLANKS               C4048300
DECSHUFL MVC   0(0,R1),1(R1)       MOVE DECIMALS BACK OVER PERIOD       C4048400
CLCBLWA  CLC   1(0,R1),0(R1)       TEST IF REMAINDER IS BLANK           C4048500
FINDOP   TRT   0(0,R3),OPERATOR    LOCATE NEXT OPERATOR IN CALCULATION  C4048600
MVCEL    MVC   CALCEL(0),0(R15)    MOVE CALCULATION ELEMENT TO WORK ARE C4048700
BLNKCOMM MVC   1(0,R1),0(R1)       BLANK OUT COMMENT IN GR07 WORK AREA  C4048800
         TITLE 'PARROTC4 - MISCELLANEOUS CONSTANTS AND FIELDS'          C4048900
BLDSTRT  EQU   *                   START OF TEMPORARY WORK FIELDS       C4049000
BLDID    DC    C' '                WORK AREA FOR ACE ID / NULL FLAG     C4049100
BLDLABL  DC    CL2' '              WORK AREA FOR LABEL                  C4049200
BLDOPCD  DC    C' '                WORK AREA FOR INTERNAL REP OF OPCDE  C4049300
BLDLIT   DC    CL8' '              WORK AREA FOR FP LITERAL VALUE       C4049400
BLDACESW DC    X'00'               WORK AREA FOR ACE SWITCH BYTE        C4049500
BLDEND   EQU   *                   END OF TEMPORARY WORK FIELDS         C4049600
         SPACE 1                                                        C4049700
BLDMASK  DC    X'40212020'         MASK TO CONVERT POSN TO EBCDIC       C4049800
         SPACE 1                                                        C4049900
CALCWAL  DC    H'0'                LENGTH OF NON-BLANK TEXT             C4050000
CALCWA   DC    CL74' '             WORK AREA FOR CALCULATION ANALYSIS   C4050100
CALCWAND DC    C' '                SAFETY LEST FULL CALCULATION         C4050200
CALCEL   DC    CL16' '             WORK AREA FOR ELEMENT OF CALCULATION C4050300
         DC    CL1' '              OVERFLOW BLANK (FOR DEC LEFT SHUFFLE C4050400
         TITLE 'PARROTC4 - OPERATION CODE TABLES'                       C4050500
*        THIS TRANSLATE TABLE IS USED TO LOCATE THE NEXT OPERATOR       C4050600
*         ( + - * / ) IN THE COMPRESSED CALCULATION STRING.             C4050700
         SPACE 1                                                        C4050800
OPERATOR BLOCTABL (+,-,*,/)        TABLE TO LOCATE OPERATORS            C4050900
         SPACE 5                                                        C4051000
*        THIS TABLE IS USED TO CONVERT THE OPERATORS INTO THE           C4051100
*         EQUIVALENT INTERNAL REPRESENTATION.                           C4051200
         SPACE 1                                                        C4051300
OPTABL   EQU   *                   START OF TABLE                       C4051400
         DC    C'+',AL1(ADD)       ADDITION                             C4051500
         DC    C'-',AL1(SUBTRACT)  SUBTRACTION                          C4051600
         DC    C'*',AL1(MULTIPLY)  MULTIPLICATION                       C4051700
         DC    C'/',AL1(DIVIDE)    DIVISION                             C4051800
         DC    X'FFFF'             END OF TABLE                         C4051900
         TITLE 'PARROTC4 - ERROR MESSAGES'                              C4052000
LINE01   DS    0CL53                                                    C4052100
         DC    C'PTC4-001-E  COLUMNS '                                  C4052200
LINE01M  DC    C'MM-MM'                                                 C4052300
         DC    C' DEFINE AN UNKNOWN TEST TYPE'                          C4052400
LINE02   DS    0CL62                                                    C4052500
         DC    C'PTC4-002-I  FIELD LABEL '                              C4052600
LINE02L  DC    CL2' '                                                   C4052700
         DC    C' DOES NOT EXIST: ACCUMULATOR DEFINED'                  C4052800
LINE03   DS    0CL100                                                   C4052900
         DC    C'PTC4-003-W  THE FOLLOWING CALCULATION ELEMENT IS NON-N*C4053000
               UMERIC AND HAS BEEN IGNORED : '                          C4053100
LINE03EL DC    CL16' '                                                  C4053200
LINE04   DS    0CL77                                                    C4053300
         DC    C'PTC4-004-E  FIELD LABEL '                              C4053400
LINE04L  DC    C'  '                                                    C4053500
         DC    C' DEFINES A NON-NUMERIC FIELD: SPECIFICATION IGNORED'   C4053600
LINE05   DC    C'PTC4-005-W  CALCULATION CONTAINS ADJACENT SIGNS ( OTHERC4053700
               R THAN VALID MINUS PREFIX ):  LEADING SIGN IGNORED ( )'  C4053800
LINE05S  ORG   LINE05+L'LINE05-2   SUPERFLUOUS SIGN BYTE                C4053900
         TITLE 'PARROTC4 - FUNCTION/OPERATION CODE DEFINITIONS'         C4054000
         SPACE 5                                                        C4054100
        SCSEND C4                  TERMINATE CSET PARROTC4              C4054200
         END                                                            C4054300
