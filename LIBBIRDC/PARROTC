         TITLE 'PARROTC - CONTROL CARD PROCESSING - PART 1'             C 000100
         MACRO                                                          C 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             C 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               C 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         C 000500
               EJECT                                                    C 000600
         CBPREFIX ,                CONTROL BLOCK PREFIX                 C 000700
               EJECT                                                    C 000800
         CCB   ,                   CENTRAL CONTROL BLOCK                C 000900
               EJECT                                                    C 001000
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          C 001100
               EJECT                                                    C 001200
         EQUATES ,                 GENERATE STANDARD EQUATES            C 001300
               EJECT                                                    C 001400
         FDB   ,                   FIELD DEFINITION BLOCK               C 001500
               EJECT                                                    C 001600
         GR04  ,                   GR04 CONTROL CARD                    C 001700
               EJECT                                                    C 001800
         GR05  ,                   GR05 CONTROL CARD                    C 001900
               EJECT                                                    C 002000
         GR06  ,                   GR06 CONTROL CARD                    C 002100
               EJECT                                                    C 002200
         KBD   ,                   KEY BREAK DEFINITION                 C 002300
               EJECT                                                    C 002400
         LIB   ,                   LABEL IDENTIFICATION BLOCK           C 002500
               EJECT                                                    C 002600
         OCB   ,                   OUTPUT CONTROL BLOCK                 C 002700
               EJECT                                                    C 002800
         PARROTT ,                 CSECT OF TABLES                      C 002900
               EJECT                                                    C 003000
         RST   ,                   RECORD SELECTION TEST DEF'N          C 003100
               EJECT                                                    C 003200
         SCBUCKET ,                SELECTION CRITERION ' BUCKET '       C 003300
               EJECT                                                    C 003400
         SCE   ,                   SELECTION CRITERION ELEMENT          C 003500
               EJECT                                                    C 003600
         SPD   ,                   STORAGE POOL DEFINITION              C 003700
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       C 003800
         MEND                                                           C 003900
         SPACE 4                                                        C 004000
PARROTC  CSECT                                                          C 004100
         $CB   ,                   GENERATE DSECTS AND EQUATES          C 004200
         TITLE 'PARROTC - CONTROL CARD PROCESSING - PART 1'             C 004300
     SCSECT C                                                           C 004400
         USING PARROTC,R12         ESTABLISH PARROTC ADDRESSABILITY     C 004500
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         C 004600
         SPACE 1                                                        C 004700
         ENTRY CCGR04              PROCESS GR04 CONTROL CARDS           C 004800
         ENTRY CCGR05              PROCESS GR05 CONTROL CARDS           C 004900
         ENTRY CCGR06              PROCESS GR06 CONTROL CARDS           C 005000
         ENTRY PARENDC             END IF CSECT                         C 005100
         EJECT                                                          C 005200
*********************************************************************** C 005300
*        PROCESS GR04 CONTROL CARDS                                   * C 005400
*********************************************************************** C 005500
         SPACE 1                                                        C 005600
         USING GR04CARD,R6         ESTABLISH C/C ADDRESSABILITY         C 005700
         USING FDBNTRY,R8          ESTABLISH C/B ADDRESSABILITY         C 005800
CCGR04   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 005900
         CLC   GR04FID(7),$SPACES  TEST IF FLD ID & PPPLL OMITTED       C 006000
         BNE   CCGR0400            BR IF NOT BLANK                      C 006100
         LINE  LINE12              TELL THAT ASSUMED TO BE TEST CONTINU C 006200
         B     CCGR0402            GO TREAT AS TEST CONTINUATION CARD   C 006300
CCGR0400 XC    BLDSTRT(BLDEND-BLDSTRT),BLDSTRT ZEROISE WORK FIELDS      C 006400
         CBAL  R4,BLD04VER         VERIFY FIELD DEFINITION IS VALID     C 006500
         BNE   CCGR04X             BR IF NOT VALID TO TELL IGNORED      C 006600
         LA    R15,GR04FID         POINT R15 AT FIELD LABEL             C 006700
         CBAL  R4,FINDLIB          DO WE ALREADY HAVE A LIB FOR THIS LA C 006800
         BE    CCGR0401            BR IF A LIB ALREADY EXISTS           C 006900
         CBAL  R4,BLD04LIB         CONSTRUCT LIB FOR THIS LABEL         C 007000
CCGR0401 EQU   *                   CONTINUE PROCESSING                  C 007100
*                                  R1 CONTAINS LIB ADDRESS AT THIS POIN C 007200
         LR    R7,R1               SET LIB ADDRESS IN REG7              C 007300
         CBAL  R4,PREVFDB          LOCATE LAST FDB FOR THIS LIB         C 007400
*                                  REG7 NOW CONTAINS LAST FDB ADDRESS   C 007500
         CBAL  R4,BLD04FDB         CONSTRUCT FDB FOR THIS FIELD DEF'N   C 007600
         CBAL  R4,CONSMKEY         DETERMINE IF 'MOVE VALUE' REQUEST CO C 007700
         CBAL  R4,CONSNZD          VERIFY CONSISTENCY OF 'NO ZEROISE DE C 007800
*                                  R1 MUST STILL CONTAIN LIB ADDRESS.   C 007900
         CBAL  R4,FDBCONS          DETERMINE IF FDB CONSISTENT WITH LIB C 008000
         BE    CCGR0402            BR IF FDB CONSISTENT                 C 008100
         EJECT                                                          C 008200
*********************************************************************** C 008300
*        PROCESS GR04 CONTROL CARDS ( CONT'D )                        * C 008400
*********************************************************************** C 008500
         SPACE 1                                                        C 008600
         LINE  LINE08,ELEVEL=YES   TELL OF INCONSISTENT FLD DEFINITION  C 008700
         B     CCGR04X             GO TO ROUTINE EXIT                   C 008800
CCGR0402 EQU   *                   BUILD SCE'S FROM SELECTION TESTS     C 008900
         LA    R7,3                SET TO LOOP THROUGH 3 TEST DEFINITIO C 009000
         LA    R10,GR04TST1        POINT AT THE 1ST SELECTION TEST BUCK C 009100
CCGR0403 CBAL  R4,BLDSCE           CONSTRUCT SCE FROM BUCKET OF DATA    C 009200
         LA    R10,GR04TST2-GR04TST1(,R10) INCREMENT TO NEXT BUCKET     C 009300
         BCT   R7,CCGR0403         LOOP BACK FOR 3 BUCKETS              C 009400
CCGR04X SUBOUT RESTORE=R4          RESTOE AND RETURN                    C 009500
         DROP R6,R8                DROP C/C & C/B ADDRESSABILITY        C 009600
         EJECT                                                          C 009700
*********************************************************************** C 009800
*        GR04 PROCESSING: VERIFY THAT FIELD DEFINITION IS VALID       * C 009900
*********************************************************************** C 010000
         SPACE 1                                                        C 010100
*        THIS ROUTINE VERIFIES THAT THE FIELD DEFINITION IS VALID ( IN  C 010200
*         THE SENSE THAT NUMERIC DATA IS NUMERIC ETC. )                 C 010300
         SPACE 1                                                        C 010400
*        UPON RETURN THE COND CODE IS SET THUS :-                       C 010500
*         BE  - FIELD DEFINITION IS SYNTACTICALLY VALID                 C 010600
*         BNE - FIELD DEFINITION CONTAINS ERRORS                        C 010700
         SPACE 1                                                        C 010800
         USING GR04CARD,R6         ESTABLISH GR04 ADDRESSABILITY        C 010900
BLD04VER SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 011000
         PPPLL GR04POS,BLDPPL      CONVERT PPPLL TO BINARY PPL          C 011100
         BH    BLD04VY             PPPLL NOT NUMERIC: GO SHOW ERROR     C 011200
         CLI   GR04TYP,C' '        IS FIELD TYPE NOT SUPPLIED           C 011300
         BNE   *+8                 BR IF FIELD TYPE IS SUPPLIED         C 011400
         MVI   GR04TYP,C'N'        FORCE TO DISPLAY NUMERIC             C 011500
       FLDTYPE GR04TYP,BLDFLDT     CONVERT FIELD TYPE TO INTERNAL REP'N C 011600
         BNE   BLD04VY             EXIT IF UNKNOWN FIELD TYPE           C 011700
         CBAL  R4,BLD04TYP         DETERMINE IF FIELD TYPE IS VALID     C 011800
         BNE   BLD04VY             EXIT IF FIELD TYPE NOT VALID FOR GR0 C 011900
       NUMERIC GR04NDEC            CONVERT NO. OF DECIMALS TO BINARY    C 012000
         BH    BLD04VY             EXIT IF NO. OF DECIMALS NOT NUMERIC  C 012100
         STC   R1,BLDNDEC          PRESERVE NO. OF DECIMALS IN TEMP STO C 012200
         EJECT                                                          C 012300
*********************************************************************** C 012400
*        GR04 PROCESSING: VERIFY THAT FIELD DEFINITION IS VALID (CONT'D C 012500
*********************************************************************** C 012600
         SPACE 1                                                        C 012700
         CLI   GR04KEY,C' '        IS 'KEYS TO MOVE' BLANK              C 012800
         BE    *+8                 BR IF BLANK                          C 012900
         OI    BLDSW,MFDBMOVE      FLAG THAT VALUES TO BE MOVED         C 013000
       NUMERIC GR04KEY             TEST IF NO. OF KEYS TO MOVE IS NUMER C 013100
         BH    BLD04VY             EXIT IF NOT NUMERIC                  C 013200
         STC   R1,BLDMKEY          PRESERVE BINARY VALUE IN TEMP STORE  C 013300
         CLI   GR04NZD,C'N'        IS 'DONT ZEROISE DETAIL' SPECIFIED   C 013400
         BNE   *+8                 BR IF NOT                            C 013500
         OI    BLDSW,MFDBNZD       SET FLAG FOR NO ZEROISE DETAIL VALUE C 013600
         CLC   GR04UNUS,$SPACES    TEST IF UNUSED COLUMNS ARE BLANK     C 013700
         BE    BLD04VX             BR IF BLANK                          C 013800
         LINE  LINE07              WARN OF POTENTIALLY MISPLACED DATA   C 013900
         B     BLD04VX             GO TO SHOW FIELD DEF'N IS VALID      C 014000
         SPACE 1                                                        C 014100
BLD04VY  LINE  LINE06,ELEVEL=YES   TELL THAT FIELD DEF'N IGNORED        C 014200
         CLI   *,Y                 SET COND CODE TO SHOW ERRORS  FOUND  C 014300
         B     *+8                 AVOID RESETTING COND CODE            C 014400
BLD04VX  CLI   *,X                 SET COND CODE TO SHOW FLD DEF'N VALI C 014500
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C 014600
         DROP  R6                  DROP GR04 ADDRESSABILITY             C 014700
         EJECT                                                          C 014800
*********************************************************************** C 014900
*        DETERMINE IF THE FIELD TYPE IS VALID IN A GR04 CARD          * C 015000
*********************************************************************** C 015100
         SPACE 1                                                        C 015200
*        THE ROUTINE 'BLDFTYP' HAS ALREADY DETERMINED THAT THE FIELD    C 015300
*         TYPE IS KNOWN, BUT WE HAVE STILL TO DECIDE IF IT IS VALID IN  C 015400
*         THE CONTAXT OF A GR04 CARD.                                   C 015500
         SPACE 1                                                        C 015600
*        UPON ENTRY :-                                                  C 015700
*         BLDFLDT - INTERNAL REPRESENTATION OF THE FIELD TYPE           C 015800
         SPACE 1                                                        C 015900
*        UPON RETURN THE COND CODE IS SET THUS :-                       C 016000
*         BE  - FIELD TYPE IS VALID                                     C 016100
*         BNE -FIELD TYPE IS INVALID                                    C 016200
         SPACE 1                                                        C 016300
BLD04TYP SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 016400
         SR    R1,R1               ZEROISE WORK REGISTER                C 016500
         IC    R1,BLDFLDT          SET INTERNAL REP'N IN REG 1          C 016600
         BTYPE PREFIX=BLD04T,DCHAR=X,DNUM=X,MASK=Y,STR=Y,UNUSED=Y       C 016700
         SPACE 1                                                        C 016800
BLD04TY  LINE  LINE09,ELEVEL=YES   TELL OF INVALID FIELD TYPE           C 016900
         CLI   *,Y                 SET COND CODE TO SHOW INVALID        C 017000
         B     *+8                 BYPASS RESETTING COND CODE           C 017100
BLD04TX  CLI   *,X                 SET COND CODE TO SHOW VALID FLD TYPE C 017200
        SUBOUT RESTORE=R4          RETSORE AND RETURN TO CALLER         C 017300
         EJECT                                                          C 017400
*********************************************************************** C 017500
*        PROCESS GR04: CONSTRUCT LIB                                  * C 017600
*********************************************************************** C 017700
         SPACE 1                                                        C 017800
         USING GR04CARD,R6         ESTABLISH GR04 ADDRESSABILITY        C 017900
         USING LIBNTRY,R8          ESTABLISH LIB ADDRESSABILITY         C 018000
BLD04LIB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 018100
         LA    R2,LIBLGTH          SET LENGTH OF LIB IN R2              C 018200
         GETCB LIB                 ACQUIRE AND CHAIN LIB                C 018300
         CHNCB LIB,FDB             STE POINTERS TO FACILITATE CHAINING  C 018400
         MVC   LIBLABL,GR04FID     SET FIELD LABEL IN LIB               C 018500
         MVC   LIBFLDL,BLDPPL+2    SET FIELD LENGTH IN LIB              C 018600
         MVC   LIBFLDT,BLDFLDT     SET FIELD TYPE IN LIB                C 018700
         SR    R1,R1               ZEROISE WORK REGISTER                C 018800
         IC    R1,LIBFLDT          RETRIEVE FIELKD TYPE                 C 018900
         TM    BLDSW,MFDBMOVE      WAS 'MOVE VALUE UPWARDS' SPECIFIED   C 019000
         BZ    *+14                BR IF NOT                            C 019100
         OI    LIBSW,MLIBMOVE      SET FLAG IN LIB TO MOVE VALUE UPWARD C 019200
         MVC   LIBMKEYN,BLDMKEY    SET KEY UP TO WHICH VALUE TO BE MOVE C 019300
         TM    BLDSW,MFDBNZD       IS 'NO ZEROISE DETAIL' SPECIFIED     C 019400
         BZ    *+8                 BR IF NOT                            C 019500
         OI    LIBSW,MLIBNZD       SET FLAG IN LIB FOR 'NZD'            C 019600
         EJECT                                                          C 019700
*********************************************************************** C 019800
*        PROCESS GR04: CONSTRUCT LIB ( CONT'D )                       * C 019900
*********************************************************************** C 020000
         SPACE 1                                                        C 020100
         BTYPE DCHAR=BLD04CHR,DNUM=BLD04NUM SET CHAR OR NUM FLAGS       C 020200
         SPACE 1                                                        C 020300
BLD04CHR OI    LIBTYPE,LIBTCHAR    FLAG THAT LIB DFEINES CHARACTER FIEL C 020400
         B     *+8                 AVOID SETTING NUMERIC FLAG           C 020500
BLD04NUM OI    LIBTYPE,LIBTNUM     FLAG THAT LIB DEFINES NUMERIC FIELD  C 020600
         LR    R1,R8               SET LIB ADDRESS IN R1                C 020700
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO V^CALLER       C 020800
         DROP  R8                  DROP LIB ADDRESSABILITY              C 020900
         DROP  R6                  DROP GR04 ADDTESSABILITY             C 021000
         EJECT                                                          C 021100
*********************************************************************** C 021200
*        PROCESS GR04: CONSTRUCT FDB                                  * C 021300
*********************************************************************** C 021400
         SPACE 1                                                        C 021500
*        UPON ENTRY, REG7 CONTAINS ADDRESS OF LAST FDB FOR THIS LIB.    C 021600
         SPACE 1                                                        C 021700
         USING FDBNTRY,R8          ESTABLISH FDB ADDRESSABILITY         C 021800
         USING GR04CARD,R6         ESTABLISH GR04 ADDRESSABILITY        C 021900
BLD04FDB SUBIN SAVE=(R4,R1)        PRESERVE RETURN ADDRESS & LIB ADDRES C 022000
         LA    R2,FDBLGTH          SET FDB LENGTH IN R2                 C 022100
         GETCB FDB,NOCHAIN         ACQUIRE BUT DO NOT CHAIN FDB         C 022200
         STCM  R8,7,FDBFDB+1-FDBNTRY(R7) POINT LIB'S LAST FDB AT NEW    C 022300
         CHNCB FDB,SCE             SET POINTERS TO FACILITATE CHAINING  C 022400
         MVC   FDBLABL,GR04FID     SET FIELD LABEL IN FDB               C 022500
         MVC   FDBFLDP(3),BLDPPL   SET PPL IN FDB                       C 022600
         MVC   FDBFLDT,BLDFLDT     SET FIELD TYPE IN FDB                C 022700
         MVC   FDBNDEC,BLDNDEC     SET NO. OF DECIMALS IN FDB           C 022800
         MVC   FDBMKEYN,BLDMKEY    SET NO. OF KEYS TO MOVE IN FDB       C 022900
         MVC   FDBSW,BLDSW         SET SWITCH BYTE                      C 023000
         OI    FDBSW,MFDBINP       FLAG THAT THIS IS A FIELD IN INPUT   C 023100
        SUBOUT RESTORE=(R4,R1)     RESTORE AND RETURN TO CALLER         C 023200
         DROP  R6                  DROP GR04 ADDRESSABILITY             C 023300
         DROP  R8                  DROP FDB ADDRESSABILITY              C 023400
         EJECT                                                          C 023500
*********************************************************************** C 023600
*        ENSURE THAT 'MOVE, ^ACCUMULATE' REQUEST CONSISTENT           * C 023700
*********************************************************************** C 023800
         SPACE 1                                                        C 023900
*        THIS ROUTINE DETERMINES IF THE REQUEST ( IF ANY ) TO MOVE THE  C 024000
*         VALUE UP TO HIGHER KEYS ( INSTEAD OF ACCUMULATING IT ) IS     C 024100
*         CONSISTENT BETWEEN THIS GR04 CARD AND ANY PREVIOUS SPECIFIC'N C 024200
*         USING THE SAME LABEL.  IF THE REQUEST IS INCONSISTENT, A      C 024300
*         WARNING MESSAGE IS ISSUED, AND THE PREVIOUS REQUEST OVERRIDEN C 024400
         SPACE 1                                                        C 024500
         USING LIBNTRY,R1          ESTABLISH LIB ADDRESSABILITY         C 024600
         USING FDBNTRY,R8          ESTABLISG FDB ADDRESSABILITY         C 024700
CONSMKEY SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 024800
         TM    LIBSW,MLIBMOVE      DOES THE LIB SPECIFY SUCH A MOVE     C 024900
         BZ    CONSMK1             BR IF NOT TO ENSURE FDN DOES NOT     C 025000
         TM    FDBSW,MFDBMOVE      DOES THE FDB ALSO SPECIFY MOVE       C 025100
         BZ    CONSMKE             BR IF NOT TO WARM OF ERROR           C 025200
         CLC   LIBMKEYN,FDBMKEYN   ARE KEY LEVELS THE SAME              C 025300
         BNE   CONSMKE             BR IF NOT TO WARN OF ERROR           C 025400
         B     CONSMKX             GO TO EXIT                           C 025500
CONSMK1  TM    FDBSW,MFDBMOVE      DOES FDB ALSO NOT SPECIFY MOVE       C 025600
         BZ    CONSMKX             GO TO EXIT IF NOT                    C 025700
CONSMKE  LINE  LINE10              TELL OF INCONSISTENT SPECIFICATION   C 025800
         NI    LIBSW,FF-MLIBMOVE   SET OFF FLAG IN LIB                  C 025900
         TM    FDBSW,MFDBMOVE      DOES THE FDB SPECIFY MOVE            C 026000
         BZ    CONSMKX             GO TO EXIT IF NOT                    C 026100
         OI    LIBSW,MLIBMOVE      SET FLAG IN LIB ALSO                 C 026200
         MVC   LIBMKEYN,FDBMKEYN   SET KEY NUMBER IN LIB                C 026300
CONSMKX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C 026400
         DROP  R8                  DROP FDB ADDRESSABILITY              C 026500
         DROP  R1                  DROP LIB ADDRESSABILITY              C 026600
         EJECT                                                          C 026700
*********************************************************************** C 026800
*        ENSURE THAT 'DO NOT ZEROISE DETAIL' REQUESTS CONSISTENT      * C 026900
*********************************************************************** C 027000
         SPACE 1                                                        C 027100
*        THIS ROUTINE DETERMINES IF THE REQUEST ( IF ANY ) NOT TO       C 027200
*         ZEROISE THE ACCUMULATOR OR STORE FOR EVERY DETAIL RECORD IS   C 027300
*         CONSISTENT BETWEEN THIS GR04 CARD AND ANY PREVIOUS SPECIFIC'N C 027400
*         USING THE SAME LABEL.  IF THE REQUEST IS INCONSISTENT, A      C 027500
*         WARNING MESSAGE IS ISSUED, AND THE PREVIOUS REQUEST OVERRIDEN C 027600
         SPACE 1                                                        C 027700
         USING LIBNTRY,R1          ESTABLISH LIB ADDRESSABILITY         C 027800
         USING FDBNTRY,R8          ESTABLISG FDB ADDRESSABILITY         C 027900
CONSNZD  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 028000
         TM    LIBSW,MLIBNZD       DOES THE LIB SPECIFY 'NZD'           C 028100
         BZ    CONSNZD1            BR IF NOT TO ENSURE FDN DOES NOT     C 028200
         TM    FDBSW,MFDBNZD       DOES THE FDB ALSO SPECIFY NZD        C 028300
         BZ    CONSNZDE            BR IF NOT TO WARM OF ERROR           C 028400
         CLC   LIBMKEYN,FDBMKEYN   ARE KEY LEVELS THE SAME              C 028500
         BNE  CONSNZDE             BR IF NOT TO WARN OF ERROR           C 028600
         B     CONSNZDX            GO TO EXIT                           C 028700
CONSNZD1 TM    FDBSW,MFDBNZD       DOES FDB ALSO NOT SPECIFY NZD        C 028800
         BZ    CONSNZDX            GO TO EXIT IF NOT                    C 028900
CONSNZDE LINE  LINE11              TELL OF INCONSISTENT SPECIFICATION   C 029000
         NI    LIBSW,FF-MLIBNZD    SET OFF FLAG IN LIB                  C 029100
         TM    FDBSW,MFDBNZD       DOES THE FDB SPECIFY NZD             C 029200
         BZ    CONSNZDX            GO TO EXIT IF NOT                    C 029300
         OI    LIBSW,MLIBNZD       SET FLAG IN LIB ALSO                 C 029400
CONSNZDX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         C 029500
         DROP  R8                  DROP FDB ADDRESSABILITY              C 029600
         DROP  R1                  DROP LIB ADDRESSABILITY              C 029700
         EJECT                                                          C 029800
*********************************************************************** C 029900
*        PROCESS GR05 CONTROL CARDS                                   * C 030000
*********************************************************************** C 030100
         SPACE 1                                                        C 030200
         USING GR05CARD,R6         ESTABLISH C/C ADDRESSABILITY         C 030300
CCGR05   SUBIN SAVE=R4             RESERVE RETURN ADDRESS               C 030400
         OI    $STATUS,STATDETL    SET FLAG THAT DETAIL LINES REQUIRED  C 030500
         L     R1,$OCBOCB          GET ADDRESS OF 1ST OCB ( 'PRINT' )   C 030600
         USING OCBNTRY,R1          ESTABLISH OCB ADDRESSABILITY         C 030700
         OI    OCBSW,MOCBDETL      SET FLAG THAT PRINT REQUIRES DETAILS C 030800
         DROP  R1                  DROP OCB ADDRESSABILITY              C 030900
         CLC   GR05POS(5),$SPACES  IS A NAME FIELD PPPLL SUPPLIED       C 031000
         BE    CCGR05X             GO TO EXIT IF NO PPPLL               C 031100
         OI    $DETLSW,MDETNAME    FLAG THAT DETAIL NAME EXISTS         C 031200
         MVI   LABELLIB+1,X'09'    SET 'NAME9' ....                     C 031300
         MVI   LABELLIB,NAME        .... IN TEMPORARY LABEL AREA        C 031400
         LA    R15,LABELLIB        POINT AT TEMPORARY LABEL             C 031500
         CBAL  R4,FINDLIB          DETERMINE IF THIS LABEL ALREADY DEF' C 031600
         BNE   CCGR0501            BR IF NOT ALREADY DEFINED            C 031700
         LINE  LINE04              TELL OF ILLEGALLY DUPLICATED LABEL   C 031800
         B     CCGR05X             GO TO ROUTINE EXIT                   C 031900
CCGR0501 LA    R2,GR05POS          POINT AT PPPLL IN C/C                C 032000
         LA    R3,BLDPPL           POINT AT TEMPORARY PPL AREA          C 032100
         CBAL  R4,PPPLL            CONVERT PPPLL TO BINARY              C 032200
         BE    CCGR0502            BR IF PPPLL IS VALID                 C 032300
         LINE  LINE05              TELL THAT NAME-FLD IGNORED COS NONNU C 032400
         B     CCGR05X             GO TO ROUTINE EXIT                   C 032500
CCGR0502 CBAL  R4,BLD05LIB         CONSTRUCT LIB AND FDB FOR 'NAME9'    C 032600
CCGR05X SUBOUT RESTORE=R4          RESTORE AND REURN                    C 032700
         DROP  R6                  DROP ADDRESSABILITY                  C 032800
         EJECT                                                          C 032900
*********************************************************************** C 033000
*        GR05 PROCESSING: CONSTRUCT LIB AND FDB                       * C 033100
*********************************************************************** C 033200
         SPACE 1                                                        C 033300
         USING LIBNTRY,R8          ESTABLISH LIB ADDRESSABILITY         C 033400
BLD05LIB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 033500
         LA    R2,LIBLGTH          SET R2 TO LENGTH OF LIB              C 033600
         GETCB LIB                 ACQUIRE AND CHAIN LIB                C 033700
         MVC   LIBLABL,LABELLIB    SET 'NAME9' IN LABEL FIELD           C 033800
         OI    LIBFLDT,CHAR        SET FIELD TYPE TO CHARACTER          C 033900
         OI    LIBTYPE,LIBTDETN    FLAG THAT LIB DEFINES NAME9 FIELD    C 034000
         MVC   LIBFLDL,BLDPPL+2    SET FIELD LENGTH IN LIB              C 034100
         CHNCB LIB,FDB             SET POINTERS TO FACILITATE CHAINING  C 034200
         LR    R7,R1               SAVE ADDRESS OF CHAINING AREA          034300
         CLI   LIBLABL,C'%'        DOES THE LABEL SPECIFY A SCALAR      C 034400
         BNE   *+8                 BR IF NOT A SCALAR'S LABEL           C 034500
         OI    LIBTYPE,LIBTSCAL    FLAG THAT THIS IS A SCALAR           C 034600
         DROP  R8                  DROP LIB ADDRESSABILITY              C 034700
         EJECT                                                          C 034800
*********************************************************************** C 034900
*        GR05 PROCESSING: CONSTRUCT LIB AND FDB ( CONT'D )            * C 035000
*********************************************************************** C 035100
         SPACE 1                                                        C 035200
         USING FDBNTRY,R8          ESTABLISH FDB ADDRESSABILITY         C 035300
         LA    R2,FDBLGTH          SET R2 TO LENGTH OF FDB              C 035400
         GETCB FDB,NOCHAIN         ACQUIRE BUT DO NOT CHAIN FDB         C 035500
         STCM  R8,7,FDBFDB+1-FDBNTRY(R7) HANG FROM LAST FDB FOR THIS LI C 035600
         MVC   FDBLABL,LABELLIB    MOVE 'NAME9' TO LABEL                C 035700
         MVC   FDBFLDP(3),BLDPPL   SET PPL IN FDB                       C 035800
         MVI   FDBFLDT,CHAR        SET FIELD TYPE TO CHARACTER          C 035900
         OI    FDBSW,MFDBINP       SET FLAG TO EXTRACT FLD FROM INPUT   C 036000
         DROP  R8                  DROP FDB ADDRESSABILITY              C 036100
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         C 036200
         EJECT                                                          C 036300
*********************************************************************** C 036400
*        LOCATE LAST FDB FOR THE CURRENT LIB                          * C 036500
*********************************************************************** C 036600
         SPACE 1                                                        C 036700
*        ON INPUT :-                                                    C 036800
*         R7  - ADDRESS OF ASSOCIATED LIB                               C 036900
         SPACE 1                                                        C 037000
*        ON OUTPUT :-                                                   C 037100
*         R7  - ADDRESS OF LAST FDB FOR THE LIB                         C 037200
         SPACE 1                                                        C 037300
         USING LIBNTRY,R7          STABLISH LIB ADDRESSABILITY          C 037400
PREVFDB  SUBIN ,                   ENTER ROUTINE                        C 037500
         LA    R7,LIBFDB           POINT AT HEAD OF LIB'S FDB CHAIN     C 037600
         B     *+8                 BYPASS FORWARD CHAINING              C 037700
         DROP  R7                  DROP LIB ADDRESSABILITY              C 037800
         USING FDBNTRY,R7          ESTABLISH FDB ADDRESSABILITY         C 037900
PREVFDB1 LTA   R7,FDBFDB           GET ADDRESS OF NEXT FDB              C 038000
         OC    FDBFDB+1(3),FDBFDB+1 IS THIS THE LAST IN THE CHAIN       C 038100
         BNZ   PREVFDB1            LOOP BACK IF NOT LAST IN CHAIN       C 038200
        SUBOUT ,                   RETURN TO CALLER                     C 038300
         DROP  R7                  DROP FDB ADDRESSABILITY              C 038400
         EJECT                                                          C 038500
*********************************************************************** C 038600
*        PROCESS GR06 CONTROL CARDS                                   * C 038700
*********************************************************************** C 038800
         SPACE 1                                                        C 038900
*        NOTE THAT THIS ROUTINE PERFORMS VERY LITTLE CONTROL CARD       C 039000
*         VALIDATION ( THE SORT IS OLD ENOUGH TO LOOK AFTER ITSELF ),   C 039100
*         AND MERELY DETERMINES WHETHER THIS IS A SORT OR A RECORD      C 039200
*         STATEMENT.                                                    C 039300
         SPACE 1                                                        C 039400
         USING GR06CARD,R6         ESTABLISH C/C ADDRESSABILITY         C 039500
         USING PARROTT,R9          ESTABLISH TABLE ADDRESSABILITY       C 039600
CCGR06   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              C 039700
         MVC   GR06ID,$SPACES      BLANK OUT THE CONTROL CARD ID        C 039800
         L     R9,$VPARTT          GET ADDRESS OF CSECT OF TABLES       C 039900
         TRT   GR06CARD(80),NONBLTAB LOCATE FIRST NON-BLANK CHARACTER   C 040000
         CLC   0(5,R1),=C'SORT '   IS THIS A SORT STATEMENT             C 040100
         BE    CCGR0601            BR IF SORT STATEMENT                 C 040200
         CLC   0(7,R1),=C'RECORD ' IS THIS A RECORD STATEMENT           C 040300
         BE    CCGR0603            BR IF THIS IS A RECORD               C 040400
         LINE  LINE01,ELEVEL=YES   TELL OF UNRECOGNISABLE CONTROL CARD  C 040500
         B     CCGR06X             GO TO EXIT                           C 040600
CCGR0601 L     R1,=V(SORTSTRT)     GET ADDRESS OF SORT STATEMENT S/A    C 040700
         MVC   0(80,R1),0(R6)      MOVE SORT STATEMENT TO SAVE AREA     C 040800
         OI    SORTSW,MSRTREQD     FLAG THAT INTERNAL SORT REQUIRED     C 040900
         TM    SORTSW,MSRTSORT     HAS SORT STATEMENT ALREADY BEEN FOUN C 041000
         BZ    CCGR0602            BR IF NO OTHER SORT STATEMENTS       C 041100
         LINE  LINE02              TELL THAT PREVIOUS SORT STATS OVERWR C 041200
CCGR0602 OI    SORTSW,MSRTSORT     FLAG THAT SORT STATEMENT FOUND       C 041300
         B     CCGR06X             GO TO EXIT                           C 041400
         EJECT                                                          C 041500
*********************************************************************** C 041600
*        PROCESS GR06 CONTROL CARDS ( CONT'D )                        * C 041700
*********************************************************************** C 041800
         SPACE 1                                                        C 041900
CCGR0603 L     R1,=V(RECSTRT)      GET ADDRESS OF RECORD STATEMENT S/A  C 042000
         MVC   0(80,R1),0(R6)      MOVE RECORD STATEMENT TO SAVE AREA   C 042100
         TM    SORTSW,MSRTREC      TEST IF ANY PREVIOUS REC STATEMENTS  C 042200
         BZ    CCGR0604            BR IF NO OTHER RECORD STATEMENTS     C 042300
         LINE  LINE03              TELL THAT PREVIOUS OVERWRITTEN       C 042400
CCGR0604 OI    SORTSW,MSRTREC      FLAG THAT RECORD STATEMENT FOUND     C 042500
         B     CCGR06X             GO TO EXIT                           C 042600
CCGR06X  EQU   *                   END OF GR06 PROCESSING               C 042700
        SUBOUT RESTORE=R4          RESTORE AND REURN                    C 042800
         DROP  R6                  DROP ADDRESSABILITY                  C 042900
         DROP  R9                  DROP TABLE ADDRESSABILITY            C 043000
         EJECT                                                          C 043100
*********************************************************************** C 043200
*        CONVERT BINARY POSITION TO EBCDIC                            * C 043300
*********************************************************************** C 043400
         SPACE 1                                                        C 043500
CONVPOS  SUBIN ,                   ENTER ROUTINE                        C 043600
         MVC   $WRKSNGL,BLDMASK    MOVE EDIT MASK TO WORK AREA          C 043700
         CVD   R1,$WRKDUBL         CONVERT VALUETO DECIMAL              C 043800
         ED    $WRKSNGL,$WRKDUBL+6 RETURN TO CALLER                     C 043900
        SUBOUT ,                   RETIRN TO CALLER                     C 044000
         TITLE 'PARROTC - MISCELLANEOUS CONSTANTS AND FIELDS'           C 044100
BLDMASK  DC    X'40212020'         MASK TO CONVERT POSN TO EBCDIC       C 044200
         SPACE 1                                                        C 044300
BLDSTRT  EQU   *                   START OF FDB WORK AREAS              C 044400
         DS    0H                  ENSURE ALIGNMENT ( OF BLDPPL )       C 044500
BLDPPL   DS    CL3                 TEMP AREA FOR BINARY PPL CONSTRUCT'N C 044600
BLDFLDT  DS    CL1                 TEMPORARY STORE FOR FIELD TYPE       C 044700
BLDNDEC  DS    CL1                 TEMPORARY STORE FOR NO. OF DECIMALS  C 044800
BLDMKEY  DS    CL1                 TEMPORARY STORE FOR NO. OF KEYS MOVE C 044900
LABELLIB DS    CL2                 TEMPORARY AREA FOR LABEL CONSTRUCT'N C 045000
BLDSW    DS    CL1                 TEMPORARY SWITCH BYTE                C 045100
BLDEND   EQU   *                   END OF TEMPORARY WORK AREAS          C 045200
         SPACE 1                                                        C 045300
LINE01   DC    C'PRTC-001-E  UNIDENTIFIABLE GR06 CARD ( SHOULD BE ''SOR*C 045400
               T'' OR ''RECORD'' STATEMENT )'                           C 045500
LINE02   DC    C'PRTC-002-W  THIS GR06 SORT STATEMENT OVER-RIDES THE PREC 045600
               EVIOUS ONE(S)'                                           C 045700
LINE03   DC    C'PRTC-003-W  THIS GR06 RECORD STATEMENT OVER-RIDES THE PC 045800
               PREVIOUS ONE(S)'                                         C 045900
LINE04   DC    C'PRTC-004-W  A PREVIOUS ''NAME9'' FIELD HAS BEEN DEFINE*C 046000
               D: THIS ONE HAS BEEN IGNORED'                            C 046100
LINE05   DC    C'PRTC-005-W  THE NAME FIELD DEFINED IN THE PRECEDING GR0C 046200
               05 CARD HAS BEEN IGNORED BECAUSE OF THE ERROR DESCRIBED AC 046300
               ABOVE'                                                   C 046400
LINE06   DC    C'PRTC-006-E  THE FIELD DEFINED IN THE PRECEDING GR04 CARC 046500
               RD HAS BEEN IGNORED BECAUSE OF THE ERROR(S) DESCRIBED ABOC 046600
               OVE'                                                     C 046700
LINE07   DC    C'PRTC-007-W  COLUMNS 15-23 OF A GR04 CONTROL CARD ARE NOC 046800
               OT DEFINED AND SHOULD BE BLANK: POTENTIALLY MISPLACED DATC 046900
               TA'                                                      C 047000
LINE08   DC    C'PRTC-008-E  THE TYPE OR LENGTH OF THE FIELD DEFINED AB*C 047100
               OVE IS INCONSISTENT WITH PREVIOUS DEFINITIONS WITH THIS LC 047200
               LABEL'                                                   C 047300
LINE09   DC    C'PRTC-009-E  THE FIELD TYPE SPECIFIED IN THE PRECEDING GC 047400
               GR04 CONTROL CARD IS NOT VALID IN A GR04 CARD'           C 047500
LINE10   DC    C'PRTC-010-W  ''MOVE NOT ACCUMULATE'' SPEC''N (COL 14) INC 047600
               NCONSISTENT WITH PREVIOUS DEF''NS OF LABEL BUT WILL OVERRC 047700
               RIDE THEM'                                               C 047800
LINE11   DC    C'PRTC-010-W  ''DONT ZEROISE DETAIL'' SPEC''N (COL 15) INC 047900
               NCONSISTENT WITH PREVIOUS DEF''NS OF LABEL BUT WILL OVERRC 048000
               RIDE THEM'                                               C 048100
LINE12   DC    C'PRTC-012-W  NO FIELD LABEL OR PPPLL SUPPLIED: ASSUMED TC 048200
               TO BE SELECTION TEST CONTINUATION CARD'                  C 048300
         SPACE 5                                                        C 048400
        SCSEND C                   TERMINATE CSET PARROTC               C 048500
         END                                                            C 048600
