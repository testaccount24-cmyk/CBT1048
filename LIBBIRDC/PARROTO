         TITLE 'PARROTO - INTERCONNECT CONTROL BLOCKS'                  O 000100
         MACRO                                                          O 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             O 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               O 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         O 000500
               EJECT                                                    O 000600
         ACE   ,                   ARITHMETIC CALCULATION ELEMENT       O 000700
               EJECT                                                    O 000800
         CBPREFIX ,                CONTROL BLOCK PREFIX                 O 000900
               EJECT                                                    O 001000
         CCB   ,                   CENTRAL CONTROL BLOCK                O 001100
               EJECT                                                    O 001200
         DCBD  DSORG=PS            DCB FOR SEQUENTAIL DATA SET          O 001300
               EJECT                                                    O 001400
         EQUATES ,                 GENERATE STANDARD EQUATES            O 001500
               EJECT                                                    O 001600
         FDB   ,                   FIELD DEFINITION BLOCK               O 001700
               EJECT                                                    O 001800
         FSA   ,                   FIELD STORAGE AREA                   O 001900
               EJECT                                                    O 002000
         KBD   ,                   KEY BREAK DESCRIPTOR                 O 002100
               EJECT                                                    O 002200
         LCD   ,                   LINE COMPONENT DESCRIPTION           O 002300
               EJECT                                                    O 002400
         LIB   ,                   LABEL IDENTIFICATION BLOCK           O 002500
               EJECT                                                    O 002600
         OCB   ,                   OUTPUT CONTROL BLOCK                 O 002700
               EJECT                                                    O 002800
         PCB   ,                   PROCESSING CONTROL BLOCK             O 002900
               EJECT                                                    O 003000
         PTE   ,                   PROCESSING TEST ELEMENT              O 003100
               EJECT                                                    O 003200
         SCE   ,                   SELECTION CRITERION ELEMENT          O 003300
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       O 003400
         MEND                                                           O 003500
         EJECT                                                          O 003600
         MACRO                                                          O 003700
&NAME    CONSTYP &LIST                                                  O 003800
.*                                                                      O 003900
.*       DEFINE A TRANSLATE TABLE THAT WILL ACCEPT CONSISTENT FIELD TYP O 004000
.*                                                                      O 004100
         LCLA  &N,&S                                                    O 004200
&N       SETA  N'&LIST                                                  O 004300
&NAME    DC    12AL1(*-&NAME.+1)   BASIC TRT TABLE ( REJECT ALL )       O 004400
         AIF   (&N EQ 0).EXIT                                           O 004500
.LOOP    ANOP                                                           O 004600
&S       SETA  &S+1                                                     O 004700
         AIF   (&S GT &N).ORG                                           O 004800
         ORG   &NAME.+&LIST(&S)    ORG TO ACCEPTABLE ENTRY              O 004900
         DC    X'00'               SET TO ACCEPT CONSISTENT ENTRY       O 005000
         AGO   .LOOP                                                    O 005100
.ORG     ORG                                                            O 005200
.EXIT    ANOP                                                           O 005300
         MEND                                                           O 005400
         EJECT                                                          O 005500
         MACRO                                                          O 005600
&NAME CONSFMAT &LIST,&DEFAULT=CHAR                                      O 005700
.*                                                                      O 005800
.*       DEFINE A TRANSLATE TABLE THAT WILL ACCEPT OUTPUT FORMATS THAT  O 005900
.*        ARE CONSISTENT WITH A PARTICULAR FIELD TYPE, AND TO SUPPLY    O 006000
.*        A DEFAULT OUTPUT FORMAT IF THAT SPECIFIED IS INCONSISTENT.    O 006100
.*                                                                      O 006200
         LCLA  &N,&S                                                    O 006300
&N       SETA  N'&LIST                                                  O 006400
&NAME    DC    19AL1(*-&NAME.+1),AL1(FLCD&DEFAULT) BASIC TAB:REJECT ALL O 006500
         AIF   (&N EQ 0).EXIT                                           O 006600
.LOOP    ANOP                                                           O 006700
&S       SETA  &S+1                                                     O 006800
         AIF   (&S GT &N).ORG                                           O 006900
         ORG   &NAME.+FLCD&LIST(&S) ORG TO ACCEPTBALE ENTRY             O 007000
         DC    X'00'               ACCEPT CONSISTENT OUTPUT FORMAT      O 007100
         AGO   .LOOP                                                    O 007200
.ORG     ORG                                                            O 007300
.EXIT    ANOP                                                           O 007400
         MEND                                                           O 007500
         EJECT                                                          O 007600
PARROTO  CSECT                                                          O 007700
         $CB   ,                   GENERATE DSECTS AND EQUATES          O 007800
         EJECT                                                          O 007900
     SCSECT O                                                           O 008000
         USING PARROTO,R12         ESTABLISH PARROTO ADDRESSABILITY     O 008100
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         O 008200
         SPACE 1                                                        O 008300
         ENTRY JOINCB              INTER-CONNCET CONTROL BLOCKS         O 008400
         ENTRY PARENDO             END IF CSECT                         O 008500
         TITLE 'PARROTO - INTER-CONNECT CONTROL BLOCKS'                 O 008600
*********************************************************************** O 008700
*        INTER-CONNECT CONTROL BLOCKS                                 * O 008800
*********************************************************************** O 008900
         SPACE 1                                                        O 009000
JOINCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 009100
         CBAL  R4,SETPCBTY         SET FLAGS TO SHOW PCB TYPES PRESENT  O 009200
         CBAL  R4,LCDTOOCB         POINT LCD'S AT ASSOCIATED OCB'S      O 009300
         CBAL  R4,DEFKBD           PROCESS ANY KBD'S WITH DEFERRED DEFN O 009400
         CBAL  R4,DEFSCE           PROCESS ANY SCE'S WITH DEFERRED DEFN O 009500
         CBAL  R4,SETLCNT          SET DEFAULT LINECOUNT IN OCB'S       O 009600
         L     R8,$LCDHEAD         POINT AT START OF HEADING CHAIN      O 009700
         CBAL  R4,LCDTOLIB         POINT LCD'S AT ASSOCIATED LIB'S      O 009800
         L     R8,$LCDDETL         POINT AT START OF DETAIL CHAIN       O 009900
         CBAL  R4,LCDTOLIB         POINT LCD'S AT ASSOCIATED LIB'S      O 010000
         L     R8,$LCDTOTL         POINT AT START OF TOTAL CHAIN        O 010100
         CBAL  R4,LCDTOLIB         POINT LCD'S AT ASSOCIATED LIB'S      O 010200
         CBAL  R4,PTETOPCB         CONNECT PTE'S TO DESTINATION PCB'S   O 010300
         CBAL  R4,PTETOLIB         CONNECT PTE'S TO THE ASSOCIATED LIBS O 010400
         CBAL  R4,REFPCB           FLAG INDIRECTLY REFERENCED LIBS      O 010500
         CBAL  R4,NOPLIB           NULLIFY ANY UNREFERENCED LIB'S       O 010600
         CBAL  R4,NOPPCB           NULLIFY ANY UNREFERENCED PCB'S       O 010700
         CBAL  R4,KBDGR12          FLAG KBD'S WITH ASSOCIATED GR12 SPEC O 010800
         CBAL  R4,KBDPCBS          FLAG KBD'S WITH ASSOCIATED PCB'S     O 010900
         CBAL  R4,OCBDCB           CONSTRUCT DCB'S FOR USER-DEFINED D/S O 011000
         CBAL  R4,PCBTOPCB         SET THE (DEFAULT) PCBNPCB ADDRESSES  O 011100
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 011200
         EJECT                                                          O 011300
*********************************************************************** O 011400
*        SET FLAGS TO SHOW PCB TYPES PRESENT                          * O 011500
*********************************************************************** O 011600
         SPACE 1                                                        O 011700
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 011800
SETPCBTY SUBIN ,                   ENTER ROUTINE                        O 011900
         LTA   R8,$PCBPCB          GET ADDRESS OF 1ST PCB               O 012000
         B     *+8                 BYPASS FORWARD CHAINING              O 012100
SETPCBT1 LTA   R8,PCBPCB,SETPCBTX  GET ADDRESS OF NEXT PCB              O 012200
         CLI   PCBTYPE,C'A'        IS THIS PCB TYPE 'A'                 O 012300
         BNE   *+8                 BR IF NOT                            O 012400
         OI    $PCBTYPS,PCBTYPEA   FLAG THAT PCB TYPE 'A' EXISTS        O 012500
         CLI   PCBTYPE,C'B'        IS THIS PCB TYPE 'B'                 O 012600
         BNE   *+8                 BR IF NOT                            O 012700
         OI    $PCBTYPS,PCBTYPEB   FLAG THAT PCB TYPE 'B' EXISTS        O 012800
         CLI   PCBTYPE,C'C'        IS THIS PCB TYPE 'C'                 O 012900
         BNE   *+8                 BR IF NOT                            O 013000
         OI    $PCBTYPS,PCBTYPEC   FLAG THAT PCB TYPE 'C' EXISTS        O 013100
         CLI   PCBTYPE,C'D'        IS THIS PCB TYPE 'D'                 O 013200
         BNE   *+8                 BR IF NOT                            O 013300
         OI    $PCBTYPS,PCBTYPED   FLAG THAT PCB TYPE 'D' EXISTS        O 013400
         CLI   PCBTYPE,C'E'        IS THIS PCB TYPE 'E'                 O 013500
         BNE   *+8                 BR IF NOT                            O 013600
         OI    $PCBTYPS,PCBTYPEE   FLAG THAT PCB TYPE 'E' EXISTS        O 013700
         CLI   PCBTYPE,C'T'        IS THIS PCB TYPE 'T'                 O 013800
         BNE   *+8                 BR IF NOT                            O 013900
         OI    $PCBTYPS+1,PCBTYPET FLAG THAT PCB TYPE 'T' EXISTS        O 014000
         B     SETPCBT1            LOOP BACK FOR NEXT PCB               O 014100
SETPCBTX SUBOUT ,                  RETIRN TO CALLER                     O 014200
         DROP  R8                  DROP PCB ADDRESSABILITY              O 014300
         EJECT                                                          O 014400
*********************************************************************** O 014500
*        SET DEFAULT LINE COUNT IN OCB'S WITH NO LINECOUNT SPECIFIED  * O 014600
*********************************************************************** O 014700
         SPACE 1                                                        O 014800
         USING OCBNTRY,R8          ESTABLISH OCB ADDRESSABILITY         O 014900
SETLCNT  SUBIN ,                   ENTER ROUTINE                        O 015000
         LTA   R8,$OCBOCB          GET ADDRESS OF 1ST OCB               O 015100
         B     *+8                 BYPASS FORWARD CHAINING              O 015200
SETLCNT1 LTA   R8,OCBOCB,SETLCNTX  GET ADDRESS OF NEXT OCB              O 015300
         CLC   OCBLPGE,=X'0000'    HAS A LINECOUNT BEEN SPECIFIED       O 015400
         BE    SETLCNT2            GO TO SET DEFAULT VALUE IF NOT       O 015500
         CP    OCBLPGE,$ZERO       IS THE LINES/PAGE VALUE ZERO         O 015600
         BNE   SETLCNT1            LOOP BACK FOR NEXT OCB IF NOT        O 015700
SETLCNT2 ZAP   OCBLPGE,$PGELMIT    SET DEFAULT LINE COUNT IN OCB        O 015800
         B     SETLCNT1            LOOP BACK TO PROCESS NEXT OCB        O 015900
SETLCNTX SUBOUT ,                  RETURN TO CALLER                     O 016000
         DROP  R8                  DROP OCB ADDRESSABILITY              O 016100
         EJECT                                                          O 016200
*********************************************************************** O 016300
*        CONNECT LCD'S TO THE CORRESPONDING LIB'S                     * O 016400
*********************************************************************** O 016500
         SPACE 1                                                        O 016600
*        THIS ROUTINE CONNECTS AN LCD TO THE LIB THAT DEFINES THE       O 016700
*         FIELD THAT THE LCD IS TO PRINT.                               O 016800
         SPACE 1                                                        O 016900
*        UPON ENTRY, R8 CONTAINS THE ADDRESS OF THE FIRST LCD IN A      O 017000
*         CHAIN, AND THIS ROUTINE PROCESSES EVERY LCD IN THE CHAIN.     O 017100
         SPACE 1                                                        O 017200
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         O 017300
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 017400
LCDTOLIB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 017500
         B     *+8                 BYPASS FORWARD CHAINING              O 017600
LCDTLIB1 L     R8,LCDLCD           GET ADDRESS OF NEXT LCD IN CHAIN     O 017700
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 017800
         BZ    LCDTLIBX            GO TO EXIT IF END OF CHAIN           O 017900
         CLI   LCDID,NULLCB        HAS THIS LCD ALREADY BEEN NO-OPED    O 018000
         BE    LCDTLIB1            LOOP BACK TO GET NEXT IF THIS NO-OPE O 018100
         TM    LCDSW2,MLCDELET     DOES THIS LCD DEFINE A 'DELET' REQ ?   018200
         BO    LCDTLIB1            IGNORE IT IF YES: LOOP BACK FOR NEXT   018300
         TM    LCDSW,MLCDPRNT      DOES THIS LCD DEFINE A'LINE+' REQUES O 018400
         BO    LCDTLIB1            IGNORE IT IF YES: LOOP BACK TO GET N O 018500
         TM    LCDSW,MLCDLIT       DOES THIS LCD DEFINE A LITERAL       O 018600
         BO    LCDTLIB1            IGNORE IT IF YES: LOOP BACK FOR NEXT O 018700
         TM    LCDSW,MLCDGR11      DOES THIS LCD DEFINE A 'GR11' REQUES O 018800
         BO    LCDTLIB1            IGNORE IT IF YES:LOOP BACK FOR NEXT  O 018900
         TM    LCDSW,MLCDBSIC      DOES THIS LCD DEFINE BASIC REPORT    O 019000
         BO    LCDTLIB1            IGNORE IT IF YES:LOOP BACK FOR NEXT  O 019100
         TM    LCDSW,MLCDCNT       DOES THIS LCD DEFINE A COUNT REQUEST O 019200
         BO    LCDTLIB2            BR TO PROCESS IF COUNT REQUEST       O 019300
         LA    R15,LCDLABL         POINT R15 AT THE LCD LABEL           O 019400
         CBAL  R4,FINDLIB          FIND A LIB WITH THE SAME LABEL       O 019500
         ST    R1,LCDLIB           PRESERVE LIB ADDRESS IN LCD          O 019600
         BE    LCDTLIB3            IF LIB FOUND, GO TEST CONSISTENCY    O 019700
         EJECT                                                          O 019800
*********************************************************************** O 019900
*        CONNECT LCD'S TO THE CORRESPONDING LIB'S ( CONT'D )          * O 020000
*********************************************************************** O 020100
         SPACE 1                                                        O 020200
         CCNO  LINE03,ELEVEL=YES,NULLCB=YES,LABEL=LCDLABL,LA=YES        O 020300
         B     LCDTLIB1            LOOP BACK FOR NEXT LCD               O 020400
         EJECT                                                          O 020500
*********************************************************************** O 020600
*        CONNECT LCD'S TO THE CORRESPONDING LIB'S ( CONT'D )          * O 020700
*********************************************************************** O 020800
         SPACE 1                                                        O 020900
LCDTLIB3 CBAL  R4,LCDCONS          TEST IF OUTPUT FORMAT CONSISTENT     O 021000
         BNE   *+8                 BR IF OUTPUT FORMAT INCONSISTENT     O 021100
         MVI   LIBID-LIBNTRY(R1),REFCB FLAG THAT C/B IS REFERENCED      O 021200
         CBAL  R4,LCDLCONS         ENSURE OUTPUT LENGTH COSISTENT WITH  O 021300
         B     LCDTLIB1            LOOP BACK TO PROCESS NEXT LCD        O 021400
LCDTLIB2 MVC   TEMPLABL,LCDLABL    MOVE 'CNTN' TO TAMPORARY STORE       O 021500
         CLI   LCDLABL+1,0         IS THIS REQUEST FOR 'CNT0'           O 021600
         BE    LCDTLIB1            EXIT IF YES: NOTHING TO RESOLVE      O 021700
         MVI   TEMPLABL,KEY        CONVERT IT TO 'KEYN'                 O 021800
         LA    R15,TEMPLABL        POINT R15 AT THE LABEL TO LOCATE     O 021900
         CBAL  R4,FINDKBD          FIND KBD WITH THE SAME LABEL         O 022000
         ST    R1,LCDKBD           PRESERVE KBD ADDRESS IN LCD          O 022100
         BE    LCDTLIB1            IF KBD FOUND, LOOP BACK FOR NEXT LCD O 022200
         CCNO  LINE04,ELEVEL=YES,NULLCB=YES,LA=YES ISSUE ERROR MESSAGE  O 022300
         B     LCDTLIB1            LOOP BACK FOR NEXT LCD               O 022400
         SPACE 1                                                        O 022500
LCDTLIBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 022600
         DROP  R7                  DROP LIB ADDRESSABILITY              O 022700
         DROP  R8                  DROP LCD ADDRESSABILITY              O 022800
         EJECT                                                          O 022900
*********************************************************************** O 023000
*        CONNECT LCD'S TO APPROPRIATE OCB'S                           * O 023100
*********************************************************************** O 023200
         SPACE 1                                                        O 023300
*        THIS ROUTINE PROCESS THE THREE LCD CHAINS, CONNECTING EACH     O 023400
*         LCD TO THE APPROPRIATE OCB.  FOR EACH LCD, ROUTINE 'FINDOCB'  O 023500
*         IS INVOKED TO LOCATE THE APPROPRIATE OCB.                     O 023600
         SPACE 1                                                        O 023700
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         O 023800
LCDTOOCB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 023900
         L     R8,$LCDDETL         GET 1ST LCD IN DETAIL CHAIN          O 024000
         B     *+8                 BYPASS FORWARD CHAINING              O 024100
LCDTOCB1 L     R8,LCDLCD           GET ADDRESS OF NEXT LCD IN CHAIN     O 024200
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 024300
         BZ    LCDTOCB2            BR IF END OF CHAIN TO PROCESS NEXT   O 024400
         CBAL  R4,FINDOCB          LOCATE AND CHAIN ASSOCIATED OCB      O 024500
         B     LCDTOCB1            LOOP BACK TO PROCESS NEXT IN CHAIN   O 024600
         SPACE 1                                                        O 024700
LCDTOCB2 L     R8,$LCDHEAD         GET 1ST LCD IN HEADING CHAIN         O 024800
         B     *+8                 BYPASS FORWARD CHAINING              O 024900
LCDTOCB3 L     R8,LCDLCD           GET ADDRESS OF NEXT LCD IN CHAIN     O 025000
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 025100
         BZ    LCDTOCB4            BR IF END OF CHAIN TO PROCESS NEXT   O 025200
         CBAL  R4,FINDOCB          LOCATE AND CHAIN ASSOCIATED OCB      O 025300
         B     LCDTOCB3            LOOP BACK TO PROCESS NEXT IN CHAIN   O 025400
         SPACE 1                                                        O 025500
LCDTOCB4 L     R8,$LCDTOTL         GET 1ST LCD IN TOTAL CHAIN           O 025600
         B     *+8                 BYPASS FORWARD CHAINING              O 025700
LCDTOCB5 L     R8,LCDLCD           GET ADDRESS OF NEXT LCD IN CHAIN     O 025800
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 025900
         BZ    LCDTOCBX            GO TO EXIT IF END OF CHAIN           O 026000
         CBAL  R4,FINDOCB          LOCATE AND CHAIN ASSOCIATED OCB      O 026100
         B     LCDTOCB5            LOOP BACK TO PROCESS NEXT IN CHAIN   O 026200
         SPACE 1                                                        O 026300
LCDTOCBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 026400
         DROP  R8                  DROP LCD ADDRESSABILITY              O 026500
         EJECT                                                          O 026600
*********************************************************************** O 026700
*        CONNECT LCD TO THE OCB DEFINING THE OUTPUT DATA SET          * O 026800
*********************************************************************** O 026900
         SPACE 1                                                        O 027000
*        THIS ROUTINE CONNECTS THE LCD TO THE OCB THAT DEFINES THE      O 027100
*         OUTPUT DATA SET WITH WHICH THE LCD IS ASSOCIATED.             O 027200
         SPACE 1                                                        O 027300
*        UPON ENTRY :_                                                  O 027400
*         R8  - ADDRESS OF LCD                                          O 027500
         SPACE 1                                                        O 027600
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         O 027700
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         O 027800
FINDOCB  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 027900
         L     R7,$OCBOCB          GET ADDRESS OF 1ST OCB ( 'PRINT' )   O 028000
         ST    R7,LCDOCB           FORCE DEFAULT OF 'PRINT' LEST ERROR  O 028100
         B     *+8                 BYPASS FORWARD CHAINING              O 028200
FINDOCB1 L     R7,OCBOCB           GET ADDRESS OF NEXT OCB              O 028300
         LTRR  R7                  PURIFY AND TEST FOR END OF CHAIN     O 028400
         BZ    FINDOCBY            BR IF END OF CHAIN TO TELL OF ERROR  O 028500
         CLC   LCDIOLB,OCBLABL     IS THIS THE DESIRED OCB              O 028600
         BNE   FINDOCB1            LOOP BACK OT NEXT OCB IF NOT         O 028700
         ST    R7,LCDOCB           PRESERVE OCB ADDRESS IN LCD          O 028800
         CLI   OCBID,NULLCB        HAS THIS OCB BEEN NULLIFIED          O 028900
         BNE   FINDOCBX            BR TO EXIT IF NOT                    O 029000
         CCNO  LINE09,NULLCB=YES,LA=YES NULLIFY LCD & TELL USER         O 029100
         B     FINDOCBX            GO TO EXIT                           O 029200
         SPACE 1                                                        O 029300
FINDOCBY CCNO  LINE01,LA=YES       TELL OF DEFAULT TO 'PRINT'           O 029400
FINDOCBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 029500
         DROP  R7                  DROP OCB ADDRESSABILITY              O 029600
         DROP  R8                  DROP LCD ADDRESSABILITY              O 029700
         EJECT                                                          O 029800
*********************************************************************** O 029900
*        CONNECT KBD'S ( WITH DEFERRED DEFINITIONS ) TO LIB'S         * O 030000
*********************************************************************** O 030100
         SPACE 1                                                        O 030200
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 030300
         USING KBDNTRY,R8          ESTABLSIH KBD ADDRESSABILITY         O 030400
DEFKBD   SUBIN SAVE=R4             PRESERVE RETURB ADDRESS              O 030500
         L     R8,$KBDKBD          GET ADDRESS OF 1ST KBD               O 030600
         B     *+8                 BYPASS FORWARD CHAINING              O 030700
DEFKBD1  L     R8,KBDKBD           GET ADDRESS OF NEXT KBD              O 030800
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 030900
         BZ    DEFKBDX             GO TO EXIT IF END OF CHAIN           O 031000
         NULCB KBD,DEFKBD1         GET NEXT KBD IF THIS NULLIFIED       O 031100
         TM    KBDSW,MKBDDEF       WAS FIELD DEFINITION DEFERRED        O 031200
         BZ    DEFKBD1             LOOP BACK FOR NEXT IF OT             O 031300
         L     R7,$LIBLIB          GET ADDRESS OF 1ST LIB               O 031400
         B     *+8                 BYPASS FORWARD CHAINING              O 031500
DEFKBD2  L     R7,LIBLIB           GET ADDRESS OF NEXT LIB              O 031600
         LTRR  R7                  PURIDY AND TEST FOR END OF CHAIN     O 031700
         BZ    DEFKBD3             GO TELL OF ERROR IF END OF CHAIN     O 031800
         NULCB LIB,DEFKBD2         GET NEXT LIB IF THIS NULLIFIED       O 031900
         TM    LIBTYPE,LIBTNUM+LIBTCHAR IS THIS AN INPUT FIELD DEFINITI O 032000
         BZ    DEFKBD2             LOOP BACK FOR NEXT IF NOT            O 032100
         CLC   LIBLABL,KBDDLABL    IS THIS THE FIELD DEFINITION WE WANT O 032200
         BNE   DEFKBD2             LOOP BACK FO RNEXT IF NOT            O 032300
         OI    LIBSW,MLIBDKEY      SET FLAG TO PREVENT POTENTIALLY ...  O 032400
*                                   ... CONFUSING MESSAGE 'PRTO-010-I'  O 032500
         CBAL  R4,DKBDCB           ADJUST CONTROL BLOCKS AS APPROPRIATE O 032600
         B     DEFKBD1             LOOP BACK FOR NEXT KBD               O 032700
DEFKBD3  CBAL  R4,DKBDERR          TELL OF ERROR AND NULLIFY C/B        O 032800
         B     DEFKBD1             LOOP BACK FOR NEXT KBD               O 032900
DEFKBDX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 033000
         DROP  R8                  DROP KBD ADDRESSABILITY              O 033100
         DROP  R7                  DROP LIB ADDRESSABILITY              O 033200
         EJECT                                                          O 033300
*********************************************************************** O 033400
*        ISSUE ERROR MESSAGES FOR DEFERRED KBD FIELD DEFINITION       * O 033500
*********************************************************************** O 033600
         SPACE 1                                                        O 033700
         USING KBDNTRY,R8          ESTABLISH KBD ADDRESSABILITY         O 033800
DKBDERR  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 033900
         CCNO  LINE03,ELEVEL=YES,NULLCB=YES,LABEL=KBDLABL,LA=YES        O 034000
         LH    R1,$NUMKEYS         GET NO. OF KEYS DEFINED              O 034100
         BCTR  R1,0                DECREMENT                            O 034200
         STH   R1,$NUMKEYS         PRESERVE MODIFIED KEY COUNT          O 034300
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 034400
         DROP  R8                  DROP KBD ADDRESSABILITY              O 034500
         EJECT                                                          O 034600
*********************************************************************** O 034700
*        CONNECT LIB TO DEFERRED KBD                                  * O 034800
*********************************************************************** O 034900
         SPACE 1                                                        O 035000
*        THIS ROUTINE CONSTRUCTS A NEW LIB, IDENTICAL TO THE ONE JUST   O 035100
*         FOUND, ALTERS THE NAME TO 'KEYN', FLAGS IT AS A KEY LIB, AND  O 035200
*         STORES THE ADDRESS IN THE KBD.                                O 035300
         SPACE 1                                                        O 035400
         USING KBDNTRY,R10         ESTABLISH KBD ADDRESSABILITY         O 035500
         USING LIBNTRY,R8          ESTABLISH LIB ADDRESSABILITY         O 035600
DKBDCB   SUBIN SAVE=(R4,R8)        PRESERVE REGISTERS                   O 035700
         LR    R10,R8              SET KBD ADDRESS IN R10               O 035800
         LA    R2,LIBLGTH          SET LENGTH OF LIB IN REG 2           O 035900
         GETCB LIB                 ACQUIRE ANOTHER LIB                  O 036000
         MVC   LIBLIB+4(LIBLGTH-4),LIBLIB+4-LIBNTRY(R7) SET SAME AS CUR O 036100
         OI    LIBTYPE,LIBTKEY     FLAG THAT NEW LIB DEFINES A KEY      O 036200
         MVC   LIBLABL,KBDLABL     SET LIB NAME TO 'KEYN'               O 036300
         ST    R8,KBDKLIB          PRESERVE ADDRESS OF NEW LIB IN KBD   O 036400
        SUBOUT RESTORE=(R4,R8)     RESTORE AND RETURN TO CALLER         O 036500
         DROP  R8                  DROP LIB ADDRESSABILITY              O 036600
         DROP  R10                 DROP KBD ADDRESSABILITY              O 036700
         EJECT                                                          O 036800
*********************************************************************** O 036900
*        LOCATE LIB FOR SCE WITH DEFERED FIELD DEFINITION             * O 037000
*********************************************************************** O 037100
         SPACE 1                                                        O 037200
         USING SCENTRY,R8          ESTABLISH SCE ADDRESSABILITY         O 037300
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 037400
         USING CBPREFIX,R10        ESTABLSIH C/B PREFIX ADDRESSABILITY  O 037500
DEFSCE   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 037600
         L     R10,$CBP1ST         GET ADDRESS OF 1ST C/B PREFIX        O 037700
         B     *+8                 BYPASS FORAWRD CHAINING              O 037800
DEFSCE1  L     R10,CBPRCBPR        GET ADDRESS OF NEXT PREFIX           O 037900
         LTRR  R10                 PURIFY AND TEST FOR END OF CHAIN     O 038000
         BZ    DEFSCEX             EXIT IF END OF CHAIN                 O 038100
         CLC   CBPRNAME,=CL4'SCE'  IS THIS AN SCE                       O 038200
         BNE   DEFSCE1             LOOP BACK FOR NEXT IF NOT            O 038300
         LA    R8,CBPRLGTH(,R10)   SET ADDRESS OF C/B IN R8             O 038400
         NULCB SCE,DEFSCE1         GET NEXT IF THIS ONE NULLIFIED       O 038500
         TM    SCESW,MSCELIB       DOES THIS SCE WANT A LIB             O 038600
         BZ    DEFSCE1             LOOP BACK FOR NEXT IF NOT            O 038700
         L     R7,$LIBLIB          GET ADDRESS OF 1ST LIB               O 038800
         B     *+8                 BYPASS FORWARD CHAINING              O 038900
DEFSCE2  L     R7,LIBLIB           GET ADDRESS OF NEXT LIB              O 039000
         LTRR  R7                  PURIFY AND TEST FOR END OF CHAIN     O 039100
         BZ    DEFSCE3             GO TELL OF ERROR IF END OF CHAIN     O 039200
         NULCB LIB,DEFSCE2         GET NEXT LIB IF THIS NULLIFIED       O 039300
         CLC   LIBLABL,SCEDLABL    IS THIS THE LIB WE WANT              O 039400
         BNE   DEFSCE2             LOOP BACK FOR NEXT IF NOT            O 039500
         ST    R7,SCELIB           PRESERVE LIB ADDRESS IN SCE          O 039600
         MVI   LIBID,REFCB         FLAG THAT THE LIB IS REFERENCED      O 039700
         B     DEFSCE1             LOOP BACK FOR NEXT SCE               O 039800
         EJECT                                                          O 039900
*********************************************************************** O 040000
*        LOCATE LIB FOR SCE WITH DEFERED FIELD DEFINITION ( CONT'D )  * O 040100
*********************************************************************** O 040200
         SPACE 1                                                        O 040300
DEFSCE3  CCNO  LINE03,ELEVEL=YES,NULLCB=YES,LABEL=SCEDLABL,LA=YES       O 040400
         B     DEFSCE1             LOOP BACK FOR NEXT SCE               O 040500
DEFSCEX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 040600
         DROP  R10                 DROP C/B PREFIX ADDRESSABILITY       O 040700
         DROP  R7                  DROP LIB ADDRESSABILITY              O 040800
         DROP  R8                  DROP SCE ADDRESSABILITY              O 040900
         EJECT                                                          O 041000
*********************************************************************** O 041100
*        CONNECT PTE'S TO THE ASSOCIATED LIB'S                        * O 041200
*********************************************************************** O 041300
         SPACE 1                                                        O 041400
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 041500
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         O 041600
PTETOLIB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 041700
         LTA   R8,$PCBPCB          GET ADDRESS OF 1ST PCB               O 041800
         B     *+8                 BYPASS FORWARD CHAINING              O 041900
PTETLIB1 LTA   R8,PCBPCB,PTETLIBX  GET ADDRESS OF NEXT PCB              O 042000
         NULCB PCB,PTETLIB1        GET NEXT PCB IF THIS NULLIFIED       O 042100
         TM    PCBSW,MPCBTEST      IS THIS PCB A TEST DEFINITION        O 042200
         BZ    PTETLIB1            LOOP BACK FOR NEXT PTE IF NOT        O 042300
         LTA   R7,PCBPTE,PTETLIB1  GET ADDRESS OF ASSOCIATED PTE        O 042400
         CLI   PTEID,NULLCB        ENSURE THAT THE PTE HAS NOT BEEN NUL O 042500
         BNE   PTETLIB2            BR IF PTE NOT NULLIFIED              O 042600
         MVI   PCBID,NULLCB        NULLIFY THE PCB ALSO                 O 042700
         B     PTETLIB1            LOOP BACK FOR THE NEXT PCB           O 042800
PTETLIB2 TM    PTESW,MPTE$K1       IS THE 1ST OPERAND THE KEY NO.       O 042900
         BO    PTETLIB3            BR IF YES TO TEST 2ND OPERAND        O 043000
         TM    PTESW,MPTE$L1       IS THE 1ST OPERAND A LITERAL           043100
         BO    PTETLIB3            BR IF YES TO TEST 2ND OPERAND          043200
         LA    R15,PTELABLT        POINT R15 AT THE LABEL TO LOCATE     O 043300
         CBAL  R4,FINDLIB          LOCATE THE ASSOCIATED LIB            O 043400
         ST    R1,PTELIBT          PRESERVE THE LIB ADDRESS IN THE PTE  O 043500
         BE    PTETLIB3            BR IF LIB WAS LOCATED                O 043600
         L     R1,=A(LINE06L)      GET ADDRESS OF POSITION IN MESSGAE   O 043700
         MVC   0(L'LINE06L,R1),PTELABLT SET LABEL IN MESSAGE            O 043800
         CBAL  R4,PTEMSG           WARN OF UNRESOLVED LABEL             O 043900
         EJECT                                                          O 044000
*********************************************************************** O 044100
*        CONNECT PTE'S TO THE ASSOCIATED LIB'S ( CONT'D )             * O 044200
*********************************************************************** O 044300
         SPACE 1                                                        O 044400
PTETLIB3 TM    PTESW,MPTE$K2       IS THE 2ND OPERAND THE KEY NO.       O 044500
         BO    PTETLIB4            BR IF YES                            O 044600
         TM    PTESW,MPTE$L2       IS THE 2ND OPERAND A LITERAL           044700
         BO    PTETLIB4            BR IF YES                              044800
         LA    R15,PTELABLC        POINT AT LABEL TO RESOLVE            O 044900
         CBAL  R4,FINDLIB          LOCATE THE ASSOCIATED LIB            O 045000
         ST    R1,PTELIBC          PRESERVE THE LIB ADDRESS IN THE PTE  O 045100
         BE    PTETLIB4            BR IF LIB WAS LOCATED                O 045200
         L     R1,=A(LINE06L)      GET ADDRESS OF POSITION IN MESSAGE   O 045300
         MVC   0(L'LINE06L,R1),PTELABLC SET LABEL IN MESSAGE TEXT       O 045400
         CBAL  R4,PTEMSG           WARN OF UNRESOLVED LABEL             O 045500
PTETLIB4 B     PTETLIB1            LOOP BACK FOR NEXT PCB               O 045600
PTETLIBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 045700
         DROP  R7                  DROP PTE ADDRESSABILITY              O 045800
         DROP  R8                  DROP PCB ADDRESSABILITY              O 045900
         EJECT                                                          O 046000
*********************************************************************** O 046100
*        WARN OF UNRESOLVABLE LABEL IN GR07 TEST SPECIFICATION        * O 046200
*********************************************************************** O 046300
         SPACE 1                                                        O 046400
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         O 046500
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 046600
PTEMSG   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 046700
         MVI   PTEID,NULLCB        NULLIFY THE PTE                      O 046800
         MVI   PCBID,NULLCB        NULLIFY THE PCB ALSO                 O 046900
         CCNO  LINE06,ELEVEL=YES,LA=YES ISSUE ERROR MESSAGE             O 047000
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 047100
         DROP  R8                  DROP PCB ADDRESSABILITY              O 047200
         DROP  R7                  DROP PTE ADDRESSABILITY              O 047300
         EJECT                                                          O 047400
*********************************************************************** O 047500
*        FLAG INDIRECTLY REFERENCED LIB'S                             * O 047600
*********************************************************************** O 047700
         SPACE 1                                                        O 047800
*        TO MINIMISE PROCESSING TIME, PARROT DEDUCES WHICH INPUT FIELDS O 047900
*         ( I.E. LIB'S ) ARE REQUIRED TO PRODUCE THE OUTPUT FIELDS, AND O 048000
*         NULLIFIES THE REST.  THIS ROUTINE RESOLVES THE INDIRECT       O 048100
*          ( I.E. IMPLICIT ) REFERENCES TO LIB'S BY DETERMINING WHICH   O 048200
*         LIB'S ARE REQUIRED TO SATISFY PCB PROCESSING THAT IS IN TURN  O 048300
*         REQUIRED TO PRODUCE AN OUTPUT FIELD.  THIS, OF COURCE, IS AN  O 048400
*         ITERATIVE PROCESS, AND THE CHAINS ARE REPEATEDLY SCANNED      O 048500
*         UNTIL ALL IMPLICIT REFERENCES HAVE BEEN RESOLVED.             O 048600
         SPACE 1                                                        O 048700
         USING ACENTRY,R6          ESTABLISH ACE ADDRESSABILITY         O 048800
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 048900
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 049000
REFPCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 049100
REFPCB1  MVI   REFPCBSW,C'N'       SET RE-ITERATION FLAG OFF            O 049200
         LTA   R8,$PCBPCB          GAT ADDRESS OF THE 1ST PCB           O 049300
         B     *+8                 BYPASS FORWARD CHAINING              O 049400
REFPCB2  LTA   R8,PCBPCB,REFPCBL   GET NEXT PCB ADDRESS                 O 049500
         NULCB PCB,REFPCB2         GET NEXT PCB IF THIS NULLIFIED       O 049600
         CBAL  R4,REFPTE           FLAG THE LIBS ASSOCIATED WITH PTE'S  O 049700
         LTA   R7,PCBLIB,REFPCB2   GET ADDRESS OF RESULT PCB ( IF ANY ) O 049800
         CLI   LIBID,NULLCB        IS THE RESULT LIB NULLIFIED          O 049900
         BNE   REFPCB4             BR IF NOT NULLIFIED                  O 050000
         CCNO  LINE10,NULLCB=YES,LA=YES,LABEL=PCBLABL NULLIFY & TELL    O 050100
REFPCB4  TM    PCBSW,MPCBCALC      IS THIS A CALCULATION DEFINITION     O 050200
         BZ    REFPCB2             LOOP BACK FOR NEXT OF NOT A CALC     O 050300
         CLI   LIBID,REFCB         IS THE RESULT LIB REQUIRED FOR OUTPU O 050400
         BNE   REFPCB2             GET NEXT PCB IF LIB NOT REQUIRED     O 050500
         MVI   PCBID,REFCB         FLAG THAT PCB IS REQUIRED            O 050600
         LTA   R6,PCBACE           GET ADDRESS OF 1ST ACE               O 050700
         B     *+8                 BYPASS FORWARD CHAINING              O 050800
         EJECT                                                          O 050900
*********************************************************************** O 051000
*        FLAG INDIRECTLY REFERENCED LIB'S ( CONT'D )                  * O 051100
*********************************************************************** O 051200
         SPACE 1                                                        O 051300
REFPCB3  LTA   R6,ACEACE,REFPCB2   GET ADDRESS OF NEXT ACE              O 051400
         LTA   R15,ACELIB,REFPCB3  GET ADDRESS OF ASSOCIATED LIB        O 051500
         CLI   0(R15),NULLCB       HAS THE LIB BEEN NULLIFIED           O 051600
         BE    REFPCB3             LOOP BACK IF YES                     O 051700
         CLI   0(R15),REFCB        HAS THE LIB ALREADY BEEN REFERENCED  O 051800
         BE    REFPCB3             LOOP BACK IF YES                     O 051900
         MVI   0(R15),REFCB        FLAG THAT LIB (INDIRECTLY) REFERENCD O 052000
         MVI   REFPCBSW,C'Y'       SET ON THE RE-ITERATION FLAG         O 052100
         B     REFPCB3             LOOP ABCK FOR THE NEXT ACE           O 052200
REFPCBL  CLI   REFPCBSW,C'N'       IS THE RE-ITERATION FLAG ON          O 052300
         BNE   REFPCB1             LOOP BACK TI RE-ITERATE IF YES       O 052400
REFPCBX SUBOUT RESTORE=R4          RESTORE AND RETRUN TO CALLER         O 052500
         DROP  R7                  DROP LIB ADDRESSABILITY              O 052600
         DROP  R8                  DROP PCB ADDRESSABILITY              O 052700
         DROP  R6                  DROP ACE ADDRESSABILITY              O 052800
         SPACE 1                                                        O 052900
REFPCBSW DC    CL1'N'              RE-ITERATION FLAG                    O 053000
         EJECT                                                          O 053100
*********************************************************************** O 053200
*        FLAG LIB'S INDIRECTLY REFERENCED VIA PTE'S                   * O 053300
*********************************************************************** O 053400
         SPACE 1                                                        O 053500
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 053600
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 053700
         USING PTENTRY,R15         ESTABLISH PTE ADDRESSABILITY         O 053800
REFPTE   SUBIN ,                   ENETR ROUTINE                        O 053900
         TM    PCBSW,MPCBTEST      IS THIS A 'TEST' PCB                 O 054000
         BZ    REFPTEX             EXIT IF NOT A TEST DEFINITION        O 054100
         NULCB PCB,REFPTEX         EXIT IF THIS PCB IS NULLIFIED        O 054200
         LTA   R15,PCBPTE          GET PTE ADDRESS                      O 054300
         CLI   PTEID,NULLCB        HAS THE PTE BEEN NULLIFIED           O 054400
         BNE   REFPTE1             BR IF PTE NOT NULLIFIED              O 054500
REFPTE0  MVI   PCBID,NULLCB        NULLIFY THE PCB ALSO                 O 054600
         B     REFPTEX             GO TO EXIT                           O 054700
REFPTE1  TM    PTESW,MPTE$K1       IS THE 1ST OPERAND '$K'              O 054800
         BO    REFPTE2             BR IF YES: NO LIB TO CHECK           O 054900
         LTA   R7,PTELIBT,REFPTE0  GET ADDRESS OF 1ST OPERAND'S LIB     O 055000
         NULCB LIB,REFPTE0         GO NULLIFY PCB IF LIB IS NULLIFIED   O 055100
         MVI   LIBID,REFCB         ARBITRARILY FLAG LIB AS REFERENCED   O 055200
REFPTE2  TM    PTESW,MPTE$K2       IS 2ND OPERAND ( COMPARAND ) '$K'    O 055300
         BO    REFPTE3             BR IF YES. NO LIB TO CHECK           O 055400
         LTA   R7,PTELIBC,REFPTE0  GET ADDRESS OF COMPARAND'S LIB       O 055500
         NULCB LIB,REFPTE0         GO NULLIFY PCB IF LIB IS NULLIFIED   O 055600
         MVI   LIBID,REFCB         ARBITRARILY FLAG LIB AS REFERENCED   O 055700
REFPTE3  LTA   R7,PCBLIB,REFPTE0   GET ADDRESS OF 'RESULT' LIB          O 055800
         NULCB LIB,REFPTE0         GO NULLIFY PCB IF LIB IS NULLIFIED   O 055900
         MVI   LIBID,REFCB         FLAG 'RESULT' LIB AS REFERENCED      O 056000
REFPTEX SUBOUT ,                   RETURN TO CALLER                     O 056100
         DROP  R15                 DROP PTE ADDRESSABILITY              O 056200
         DROP  R8                  DROP PCB ADDRESSABILITY              O 056300
         DROP  R7                  DROP LIB ADDRESSABILITY              O 056400
         EJECT                                                          O 056500
*********************************************************************** O 056600
*        NULLIFY ANY UNREFERENCED LIB'S                               * O 056700
*********************************************************************** O 056800
         SPACE 1                                                        O 056900
*        TO PREVENT UNNECESSARY PROCESSING, THIS ROUTINE NULLIFIES      O 057000
*         ALL LIB'S THAT HAVE NOT BEEN REFERENCED, DIRECTLY OR          O 057100
*         INDIRECTLY, BY AN OUTPUT FIELD.                               O 057200
         SPACE 1                                                        O 057300
         USING LIBNTRY,R8          ESTABLISH LIB ADDRESSABILITY         O 057400
NOPLIB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 057500
         L     R8,$LIBLIB          GET ADDRESS OF 1ST LIB               O 057600
         B     *+8                 BYPASS FORWARD CHAINING              O 057700
NOPLIB1  L     R8,LIBLIB           GET ADDRESS OF NEXT LIB              O 057800
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     O 057900
         BZ    NOPLIBX             EXIT IF END OF CHAIN                 O 058000
         CLI   LIBID,REFCB         HAS THIS LIB BEEN REFERENCED         O 058100
         BE    NOPLIB1             GET NEXT LIB IF THIS ONE REFERENCED  O 058200
         TM    LIBTYPE,LIBTKEY+LIBTNAME+LIBTDETN IS THIS A KEY OR NAME  O 058300
         BNZ   NOPLIB1             LOOP BACK IF YES: IMPLICITLY REFEREN O 058400
         MVI   LIBID,NULLCB        NULLIFY C/B TO PREVENT UNNECESSARY P O 058500
         TM    LIBSW,MLIBDKEY      DID THIS DEFINE A DEFERRED KEY       O 058600
         BO    NOPLIB1             DO NOT CONFUSE THE USER IF YES       O 058700
         CCNO  LINE08,LABEL=LIBLABL,LA=YES SET C/C NO & TELL NOT REFERN O 058800
         B     NOPLIB1             LOOP BACK FOR NEXT LIB               O 058900
NOPLIBX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 059000
         DROP  R8                  DROP LIB ADDRESSABILITY              O 059100
         EJECT                                                          O 059200
*********************************************************************** O 059300
*        NULLIFY ANY PCB'S WHOSE RESULT FIELDS ARE NULLIFIED          * O 059400
*********************************************************************** O 059500
         SPACE 1                                                        O 059600
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 059700
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 059800
NOPPCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 059900
         LTA   R8,$PCBPCB          GET ADDRESS OF 1ST PCB               O 060000
         B     *+8                 BYPASS FORWARD CHAINING              O 060100
NOPPCB1  LTA   R8,PCBPCB,NOPPCBX   GET ADDRESS OF NEXT PCB              O 060200
         NULCB PCB,NOPPCB1         GET NEXT PCB IF THIS NULLIFIED       O 060300
         LTA   R7,PCBLIB,NOPPCB1   GET ADDRESS OF RESULT FIELD'S LIB    O 060400
         NULCB LIB,NOPPCB2         BR IF LIB IS NULLIFIED               O 060500
         B     NOPPCB1             LOOP BACK FOR NEXT PCB               O 060600
NOPPCB2  CCNO  LINE10,LA=YES,NULLCB=YES,LABEL=PCBLABL TELL WHY          O 060700
         B     NOPPCB1             LOOP BACK FOR NEXT PCB               O 060800
NOPPCBX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 060900
         DROP  R7                  DROP LIB ADDRESSABILITY              O 061000
         DROP  R8                  DROP PCB ADDRESSABILITY              O 061100
         EJECT                                                          O 061200
*********************************************************************** O 061300
*        FLAG KBD IF TOTAL LEVEL LCD'S (GR12'S) EXIST FOR THAT KEY    * O 061400
*********************************************************************** O 061500
         SPACE 1                                                        O 061600
         USING KBDNTRY,R8          ESTABLISH KBD ADDRESSABILITY         O 061700
         USING LCDNTRY,R7          ESTABLISH LCD ADDRESSABILTIY         O 061800
KBDGR12  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 061900
         LTA   R8,$KBDKBD          GET ADDRESS OF 1ST KBD               O 062000
         B     *+8                 BYPASS FORWARD CHAINING              O 062100
KBDGR121 LTA   R8,KBDKBD,KBDGR12X  GET ADDRESS OF NEXT KBD              O 062200
         NULCB KBD,KBDGR121        GET NEXT KBD IF THIS NULLIFIED       O 062300
         LTA   R7,$LCDTOTL         GET ADDRESS OF 1ST TOTAL LEVEL LCD   O 062400
         B     *+8                 BYPASS FORWARD CHAINING              O 062500
KBDGR122 LTA   R7,LCDLCD,KBDGR121  GET ADDRESS OF NEXT LCD              O 062600
         NULCB LCD,KBDGR122        GET NEXT LCD IF THIS NULLIFIED       O 062700
         CLI   LCDKEYN,0           IS THIS A FILE TOTAL LCD             O 062800
         BNE   *+8                 BR IF NOT                            O 062900
         OI    $STATUS,STATKBDT    FLAG THAT FILE TOTAL LCD'S EXIST     O 063000
         CLC   LCDKEYN,KBDKNUM+1   DOES LCD APPLY TO THIS KEY LEVEL     O 063100
         BNE   KBDGR122            GET NEXT LCD IF NOT                  O 063200
         OI    KBDSW,MKBDGR12      SET FLAG IN KBD THAT LCD'S EXIST     O 063300
         B     KBDGR122            LOOP BACK FOR NEXT LCD               O 063400
KBDGR12X SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 063500
         DROP  R7                  DROP LCD ADDRESSABILITY              O 063600
         DROP  R8                  DROP KBD ADDRESSABILITY              O 063700
         EJECT                                                          O 063800
*********************************************************************** O 063900
*        FLAG KBD IF PCB EXISTS FOR THAT SPECIFIC KEY                 * O 064000
*********************************************************************** O 064100
         SPACE 1                                                        O 064200
         USING KBDNTRY,R8          ESTABLISH KBD ADDRESSABILITY         O 064300
         USING PCBNTRY,R7          ESTABLISH PCB ADDRESSABILITY         O 064400
KBDPCBS  SUBIN ,                   ENTER ROUTINE                        O 064500
         LTA   R8,$KBDKBD          GET ADDRESS OF 1ST KBD               O 064600
         B     *+8                 BYPASS FORWARD CHAINING              O 064700
KBDPCBS1 LTA   R8,KBDKBD,KBDPCBX   GET ADDRESS OF NEXT KBD              O 064800
         NULCB KBD,KBDPCBS1        GET NEXT KBD IF THIS NULLIFIED       O 064900
         LTA   R7,$PCBPCB          GET ADDRESS OF 1ST PCB               O 065000
         B     *+8                 BYPASS FORWARD CHAINING              O 065100
KBDPCBS2 LTA   R7,PCBPCB,KBDPCBS1  GET ADDRESS OF NEXT PCB              O 065200
         NULCB PCB,KBDPCBS2        GET NEXT PCB IF THIS NULLIFIED       O 065300
         CLI   PCBTYPE,C'T'        IS THIS A T-TYPE PCB                 O 065400
         BNE   *+8                 BR IF NOT                            O 065500
         OI    $TOTLSW,MTOTPCB     FLAG THAT T-TYPE PCB'S EXIST         O 065600
         CLC   PCBTYPE,KBDKEYNO    DOES PCB APPLY TO THIS SPECIFIC KEY  O 065700
         BNE   KBDPCBS2            LOOP BACK FOR NEXT PCB IF NOT        O 065800
         OI    KBDSW,MKBDPCB       FLAG THAT KBD HAS SPECIFIC PCB'S     O 065900
         B     KBDPCBS2            LOOP BACK FOR NEXT PCB               O 066000
KBDPCBX SUBOUT ,                   RETURN TO CALLER                     O 066100
         DROP  R7                  DROP PCB ADDRESSABILITY              O 066200
         DROP  R8                  DROP KBD ADDRESSABILITY              O 066300
         EJECT                                                          O 066400
*********************************************************************** O 066500
*        TEST IF LCD IS CONSISTENT WITH THE LIB                       * O 066600
*********************************************************************** O 066700
         SPACE 1                                                        O 066800
*        THIS ROUTINE DETERMINES IN THE OUTPUT FORMAT SPECIFIED IN THE  O 066900
*         LCD IS CONSISTENT WITH THE FIELD TYPE DEFINED IN THE          O 067000
*         ASSOCIATED LIB.                                               O 067100
         SPACE 1                                                        O 067200
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         O 067300
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O 067400
LCDCONS  SUBIN SAVE=(R4,R1)        PRESERVE RETURN ADDRESS              O 067500
         L     R7,LCDLIB           GET ADDRESS OF ASSOCIATED LIB        O 067600
         SR    R15,R15             ZEROISE WORK REGISTER                O 067700
         IC    R15,LIBFLDT         RETRIEVE FIELD TYPE FORM THE LIB     O 067800
         BCTR  R15,0               DECREMENT FOR USE AS INDEX           O 067900
         MH    R15,=H'20'          MULTIPLY BY TRT TABLE LENGTH         O 068000
         A     R15,=A(TRTLCDT)     POINT R15 AT APPROPRIATE TRT TABLE   O 068100
         TRT   LCDFLDF,0(R15)      TEST IF OUTPUT FORMAT CONSISTENT     O 068200
         BZ    LCDCONSX            GO TO EXIT IF CONSITENT              O 068300
         MVC   LCDFLDF,19(R15)     SET DEFAULT OUTPUT FIELD TYPE        O 068400
         CCNO  LINE02,LA=YES       TELL OF SUBSTITUTION OF DEFAULT      O 068500
LCDCONSX CLI   *,X                 SET COND CODE TO SHOW CONSISTENCY    O 068600
        SUBOUT RESTORE=(R4,R1)     RESTORE AND RETURN TO CALLER         O 068700
         DROP  R7                  DROP LIB ADDRESSABILITY              O 068800
         DROP  R8                  DROP LCD ADDRESSABILITY              O 068900
         EJECT                                                          O 069000
*********************************************************************** O 069100
*        ENSURE OUTPUT LENGTH IS CONSISTENT WITH INPUT LENGTH         * O 069200
*********************************************************************** O 069300
         SPACE 1                                                        O 069400
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         O 069500
         USING LIBNTRY,R7          ESTABLISG LIB ADDRESSABILITY         O 069600
LCDLCONS SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 069700
         SR    R15,R15             ZEROISE WORK REGISTER                O 069800
         SR    R14,R14             ZEROISE WORK REGISTER                O 069900
         IC    R15,LCDFLDL         GET EXECUTABLE LENGTH OF OUTPUT      O 070000
         LA    R15,1(,R15)         ADJUST TO TRUE LENGTH OF OUTPUT      O 070100
         IC    R14,LIBFLDL         GET EXECUTABLE LENGTH OF INPUT       O 070200
         LA    R14,1(,R14)         ADJUST TO TRUE LENGTH OF INPUT       O 070300
         SR    R1,R1               ZEROISE WORK REGISTER                O 070400
         IC    R1,LCDFLDF          GET TYPE OF OUTPUT FORMAT            O 070500
         SLL   R1,2                CONVERT FORMAT CODE INTO AN INDEX    O 070600
         B     *(R1)               GO TO APPROPRIATE BRANCH INSTRUCTION O 070700
         B     LCDLCONC            CHARACTER                            O 070800
         B     LCDLCONH            HEXPANDED                            O 070900
         B     LCDLCONB            BIT STRING                           O 071000
         B     LCDLCONX            NUM9 ( LEADING ZEROES )              O 071100
         B     LCDLCONX            NUMZ ( LEADING BLANKS )              O 071200
         B     LCDLCONX            NUME ( EDITED FORMAT )               O 071300
         B     LCDLCONX            NUM$ ( FLOATING $ SIGN )             O 071400
         B     LCDLCONX            PACKED DECIMAL                       O 071500
         B     LCDLCONX            BINARY                               O 071600
         B     LCDLCONX            DISPLAY NUMERIC                      O 071700
         B     LCDLCONX            FLOATING POINT                       O 071800
         B     LCDLCONX            UNASSIGNED                           O 071900
         B     LCDLCONX            UNASSIGNED                           O 072000
         B     LCDLCONX            UNASSIGNED                           O 072100
         EJECT                                                          O 072200
*********************************************************************** O 072300
*        ENSURE OUTPUT LENGTH CONSISTENT ( CONT'D )                   * O 072400
*********************************************************************** O 072500
         SPACE 1                                                        O 072600
LCDLCONC CR    R15,R14             COMPARE OUTPUT:SOURCE                O 072700
         BNH   LCDLCONX            EXIT IF OUTPUT NOT LONGER            O 072800
         B     LCDLCONE            GO WARN OF ERROR & SUBSTITUTION      O 072900
LCDLCONH EQU   *                   HEXADECIMAL OUTPUT                   O 073000
         SLL   R14,1               DOUBLE SOURCE LENGTH FOR MAX HEXPAND O 073100
         CR    R15,R14             COMPARE LENGTH OF OUTPUT:SOURCE      O 073200
         BNH   LCDLCONX            EXIT IF OUTPUT NOT LONGER            O 073300
         B     LCDLCONE            GO WARM OF ERROR & SUBSTITUTION      O 073400
LCDLCONB EQU   *                   BIT STRING OUTPUT                    O 073500
         SLL   R14,3               * 8 TO GET MEX BIT STRING LENGTH     O 073600
         CR    R15,R14             COMPARE LENGTH OF OUTPUT:SOURCE      O 073700
         BNH   LCDLCONX            EXIT IF OUTPUT NOT LONGER            O 073800
LCDLCONE BCTR  R14,0               DECRMENT LENGTH OT EXECUTABLE        O 073900
         STC   R14,LCDFLDL         SET OUTPUT LENGTH CONSISTENT WITH IN O 074000
         CCNO  LINE05,LA=YES       TELL OF INCORRECT LENGTH & SUBSTITUT O 074100
LCDLCONX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 074200
         DROP  R7                  DROP LIB ADDRESSABILITY              O 074300
         DROP  R8                  DROP LCD ADDRESSABILITY              O 074400
         EJECT                                                          O 074500
*********************************************************************** O 074600
*        CONSTRUCT DCB'S FOR USER-DEFINED OUTPUT DATA SETS            * O 074700
*********************************************************************** O 074800
         SPACE 1                                                        O 074900
         USING IHADCB,R8           ESTABLISH DCB ADDRESSABILITY         O 075000
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         O 075100
OCBDCB   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 075200
         LTA   R7,$OCBOCB          GET ADDRESS OF 1ST OCB ('PRINT')     O 075300
         B     *+8                 BYPASS FORWARD CHAINING              O 075400
OCBDCB1  LTA   R7,OCBOCB,OCBDCBX   GET ADDRESS OF NEXT OCB              O 075500
         NULCB OCB,OCBDCB1         GET NEXT OCB IF THIS NULLIFIED       O 075600
         L     R2,OCBIOSW          GET ADDRESS OF ASSOCIATED IOSW       O 075700
         NC    IOPSDCB+1(3,R2),IOPSDCB+1(R2) ? ALREADY A DCB ADDRESS    O 075800
         BNZ   OCBDCB1             LOOP BACK FOR NEXT OCB IF YES        O 075900
         IOM   TIOTSCAN,0(R2),RTN=TIOTSCN TEST IF DD STATEMENT SUPPLIED O 076000
         L     R2,OCBIOSW          REFRESH IOSW ADDRESS                 O 076100
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         O 076200
         BO    OCBDCB4             BR IF DD STATEMENT PRESENT           O 076300
         L     R1,=A(LINE11L)      GET ADDRESS OF DDNAME IN MESSAGE     O 076400
         MVC   0(8,R1),IOPSDDN(R2) SET DDNAME IN MESSAGE                O 076500
         CCNO  LINE11,LA=YES,NULLCB=YES,CCNO=NO NULLIFY C/B & TELL WHY  O 076600
         B     OCBDCB1             LOOP BACK FOR NEXT OCB               O 076700
         EJECT                                                          O 076800
*********************************************************************** O 076900
*        CONSTRUCT DCB'S FOR USER-DEFINED OUTPUT DATA SETS ( CONT'D ) * O 077000
*********************************************************************** O 077100
         SPACE 1                                                        O 077200
OCBDCB4  LA    R2,DCBEOB+4-IHADCB  SET LENGTH OD QSAM DCB IN REG 2      O 077300
         GETCB DCB,NOCHAIN         ACQUIRE CORE FOR DCB                 O 077400
         L     R2,OCBIOSW          GET ADDRESS OF ASSOCIATED DCBSW      O 077500
         STCM  R8,7,IOPSDCB+1(R2)  PRESERVE DCB ADDRESS IN DCBSW        O 077600
         MVC   DCBDDNAM,IOPSDDN(R2) SET DDNAME IN DCB                   O 077700
         LA    R1,=V(#IOERROR)     GET ADDRESS OF SYNAD EXIT            O 077800
         ST    R1,DCBSYNAD          .. AND PRESERVE IN DCB              O 077900
         L     R1,=V(OCBXLST)      GET ADDRESS OF EXIT LIST             O 078000
         ST    R1,DCBEXLST          ... AND PRESERVE IT IN DCB          O 078100
         OI    DCBDSORG,DCBDSGPS   SET DSORG=PS                         O 078200
         OI    DCBMACR2,DCBMRPUT+DCBMRLCP SET MACRF=PL                  O 078300
         OI    DCBRECFM,DCBRECF+DCBRECBR SET RECFM=FB                   O 078400
         TM    OCBSW,MOCBREPT      IS THIS A REPORT DATA SET            O 078500
         BZ    *+8                 BR IF NOT A REPORT                   O 078600
         OI    DCBRECFM,DCBRECCM   SET RECFM=FBM                        O 078700
         OI    DCBOFLGS,DCBOFUEX   INITIALISE I/O FUNCTION FLAG         O 078800
         LA    R2,1                PUT A(1) INTO REG 2                  O 078900
         SR    R3,R3               ZEROISE WORK REGISTER                O 079000
         LA    R1,DCBTABL1         POINT R1 AT TABLE OF DISPLACEMENTS   O 079100
OCBDCB2  CLI   0(R1),X'FF'         TEST FO REND OF TABLE                O 079200
         BE    OCBDCB3             BR IF END OF TABLE                   O 079300
         IC    R3,0(R1)            RETRIEVE DISPLACEMENT                O 079400
         ST    R2,IHADCB(R3)       STORE A(1) IN DCB+XXX                O 079500
         LA    R1,1(,R1)           INCREMENT TO NEXT TABLE ENTRY        O 079600
         B     OCBDCB2             LOOP BACK TO PROCESS ENTRY           O 079700
OCBDCB3  B     OCBDCB1             LOOP BACK FOR NEXT OCB               O 079800
OCBDCBX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O 079900
         DROP  R7                  DROP OCB ADDRESSABILITY              O 080000
         DROP  R8                  DROP DCB ADDRESSABILITY              O 080100
         EJECT                                                          O 080200
*********************************************************************** O 080300
*        SET DEFAULT PCBNPCB ADDRESSES IN PCB'S                       * O 080400
*********************************************************************** O 080500
         SPACE 1                                                        O 080600
*        EACH PCB CONTAINS TWO CHAIN FIELDS: THE NEXT SEQUENTIAL PCB    O 080700
*         AND THE PCB TO WHICH CONTROL IS NEXT TO BE PASSED.  NORMALLY, O 080800
*         THESE ADDRESSES ARE THE SAME, BUT BRANCH AND SUBROUTINE       O 080900
*         PROCESSING CAN ALTER THEM.  THIS ROUTINE SETS THE DEFAULT     O 081000
*         VALUES, SETTING PCBNPCB = PCBPCB IN ALL CASES.                O 081100
         SPACE 1                                                        O 081200
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 081300
PCBTOPCB SUBIN ,                   ENETR ROUTINE                        O 081400
         LTA   R8,$PCBPCB          GET ADDRESS OF 1ST PCB               O 081500
         B     *+8                 BYPASS FORWARD CHAINING              O 081600
PCBTPCB1 LTA   R8,PCBPCB,PCBTPCBX  GET ADDRESS OF NEXT PCB              O 081700
         MVC   PCBNPCB,PCBPCB      SET CHAIN FIELDS IDENTICAL           O 081800
         B     PCBTPCB1            LOOP BACK FOR NEXT PCB               O 081900
PCBTPCBX SUBOUT ,                  RETURN TO CALLER                     O 082000
         DROP  R8                  DROP PCB ADDRESSABILITY              O 082100
         EJECT                                                          O 082200
*********************************************************************** O 082300
*        CONNECT PTE'S TO THE DESTINATION ( BRANCH ) PCB'S            * O 082400
*********************************************************************** O 082500
         SPACE 1                                                        O 082600
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         O 082700
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O 082800
PTETOPCB SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O 082900
         LTA   R8,$PCBPCB          GET ADDRESS OF 1ST PCB               O 083000
         B     *+8                 BYPASS FORWARD CHAINING              O 083100
PTETPCB1 LTA   R8,PCBPCB,PTETPCBX  GET NEXT PCB                         O 083200
         NULCB PCB,PTETPCB1        GET NEXT PCB IF THIS NULLIFIED       O 083300
         TM    PCBSW,MPCBTEST      IS THIS A TEST PCB                   O 083400
         BZ    PTETPCB1            BR IF NOT A TEST TO GET NEXT         O 083500
         L     R7,PCBPTE           GET ADDRESS OF PTE                   O 083600
         TM    PTESW,MPTE$1+MPTE$2 IS THIS A $1/$2 (NON-BR) PTE         O 083700
         BNZ   PTETPCB1            LOOP BACK FOR NEXT PCB IF YES        O 083800
         MVC   PTEPCB,PCBPCB       ASSUME TEST IS MERELY COUNTER: NO BR O 083900
         CLC   PTELABLD,$SPACES    IS THE DESTINATION LABEL BLANK       O 084000
         BE    PTETPCB1            BR IF YES:TEST IS MERELY EVENT COUNT O 084100
         LTA   R15,$PCBPCB         GET ADDRESS OF 1ST PCB               O 084200
         B     *+8                 BYPASS FORWARD CHAINING              O 084300
PTETPCB2 L     R15,PCBPCB-PCBNTRY(,R15) GRT ADDRESS OF NEXT PCB IN CHAI O 084400
         LTRR  R15                 PURIFY AND TEST FOR END OF CHAIN     O 084500
         BZ    PTETPCB3            GO WARN OF ERROR IF END OF CHAIN     O 084600
         CLI   0(R15),NULLCB       IS THIS PCB NULLIFIED                O 084700
         BE    PTETPCB2            LOOP BACK FOR NEXT IF YES            O 084800
         CLC   PTELABLD,PCBLABL-PCBNTRY(R15) IS THIS THE DESTINATION PC O 084900
         BNE   PTETPCB2            LOOP BACK FOR NEXT PCB IF NOT        O 085000
         ST    R15,PTEPCB          SET PCB ADDRESS IN PTE               O 085100
         MVI   0(R15),REFCB        FLAG DESTINATION PCB AS REFERENCED   O 085200
         LR    R1,R7               POINT REG1 AT PTE                    O 085300
         S     R1,=A(CBPRLGTH)     POINT REG1 AT PTE PREFIX             O 085400
         S     R15,=A(CBPRLGTH)    POINT R15 AT PREFIC OF DEST'N PCB    O 085500
         CP    CBPRCCNO-CBPREFIX(L'CBPRCCNO,R1),CBPRCCNO-CBPREFIX(L'CBP*O 085600
               RCCNO,R15)          DETERMINE IF DEST'N IS BEFORE HERE   O 085700
         BL    PTETPCB1            BR IF DEST'N IS AFTER THIS GR07      O 085800
         L     R4,=A(LINE12)       RETRIEVE ADDRESS OF ERROR MESSAGE    O 085900
         MVC   5(L'LINE12,R5),0(R4) MOVE ERROR MESSAGE TO BUFFER        O 086000
         ED    5+LINE12C1-LINE12(L'LINE12C1,R5),CBPRCCNO-CBPREFIX(R1)   O 086100
         ED    5+LINE12C2-LINE12(L'LINE12C2,R5),CBPRCCNO-CBPREFIX(R15)  O 086200
         CBAL  R4,PRINT            ISSUE ERROR MESSAGE                  O 086300
         B     PTETPCB1            LOOP BACK FOR NEXT PCB               O 086400
         EJECT                                                          O 086500
*********************************************************************** O 086600
*        CONNECT PTE'S TO DESTINATION PCB'S ( CONT'D )                * O 086700
*********************************************************************** O 086800
         SPACE 1                                                        O 086900
*TETPCB3 MVI   PTEID,NULLCB        NULLIFY THE PTE                      O 087000
*        MVI   PCBID,NULLCB        NULLIFY THE PCB ALSO                 O 087100
PTETPCB3 CCNO  LINE07,LA=YES,LABEL=PTELABLD TELL OF UNKNOWN BR ADDRESS  O 087200
         B     PTETPCB1            LOOP BACK FOR NEXT PCB               O 087300
PTETPCBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O 087400
         DROP  R8                  DROP PCB ADDRESSABILITY              O 087500
         DROP  R7                  DROP PTE ADDRESSABILITY              O 087600
         TITLE 'PARROTO - EXECUTED INSTRUCTIONS'                        O 087700
*********************************************************************** O 087800
*        EXECUTED INSTRUCTIONS                                        * O 087900
*********************************************************************** O 088000
         SPACE 1                                                        O 088100
         TITLE 'PARROTO - MISCELLANEOUS CONSTANTS AND FIELDS'           O 088200
TEMPLABL DC    CL2' '              TEMPORARY WORK AREA FOR LABELS       O 088300
         SPACE 1                                                        O 088400
DCBTABL1 EQU   *                   TABLE OF DCB DISPLACEMENTS           O 088500
         DC    AL1(DCBBUFCB-IHADCB)                                     O 088600
         DC    AL1(DCBIOBAD-IHADCB)                                     O 088700
         DC    AL1(DCBEODAD-IHADCB)                                     O 088800
         DC    AL1(DCBCHECK-IHADCB)                                     O 088900
         DC    AL1(DCBIOBA-IHADCB)                                      O 089000
         DC    AL1(DCBEOBR-IHADCB)                                      O 089100
         DC    AL1(DCBRECAD-IHADCB)                                     O 089200
         DC    AL1(DCBCNTRL-IHADCB)                                     O 089300
         DC    AL1(DCBEOB-IHADCB)                                       O 089400
         DC    X'FF'               END OF TABLE                         O 089500
         SPACE 5                                                        O 089600
         LTORG                                                          O 089700
         TITLE 'PARROTO - LCD/LIB CONSISTENCY TABLES'                   O 089800
*        THESE TABLES ( USED FOR TRT INSTRUCTIONS ) LIST, FOR EVERY     O 089900
*         POSSIBLE FIELD TYPE, ALL THE OUTPUT FORMATS THAT ARE          O 090000
*         CONSISTENT, AND ARE USED TO DETERMINE IF AN LCD IS CONSISTENT O 090100
*         WITH THE LIB DEFINING THE FIELD.                              O 090200
         SPACE 1                                                        O 090300
*        NOTE THAT THESE TABLES MUST BE CONTIGUOUS, AND IN THIS         O 090400
*         SEQUENCE, BECAUSE THEY ARE INDEXED INTO USING THE FIELD TYPE  O 090500
*         ( FROM THE LIB ) AS AN INDEX.                                 O 090600
         SPACE 5                                                        O 090700
TRTLCDT  EQU   *                   START OF CONSISTENCY TABLES          O 090800
*                                  CHARACTER FIELD                      O 090900
TLCDCHAR CONSFMAT (CHAR,HEX,BIT),DEFAULT=CHAR                           O 091000
         SPACE 5                                                        O 091100
*                                  DISPLAY NUMERIC                      O 091200
TLCDNUM  CONSFMAT (NUM9,NUMZ,NUME,NUM$,PD,BIN,DISP,FP),DEFAULT=NUM9     O 091300
         EJECT                                                          O 091400
*                                  PACKED DECIMAL                       O 091500
TLCDPD   CONSFMAT (NUM9,NUMZ,NUME,NUM$,PD,BIN,DISP,FP),DEFAULT=NUM9     O 091600
         SPACE 5                                                        O 091700
*                                  HEXADECIMAL                          O 091800
TLCDHEX  CONSFMAT (CHAR,HEX,BIT),DEFAULT=HEX                            O 091900
         SPACE 5                                                        O 092000
*                                  BIT STRING                           O 092100
TLCDBIT  CONSFMAT (CHAR,HEX,BIT),DEFAULT=BIT                            O 092200
         EJECT                                                          O 092300
*                                  PARTIAL CHARACTER MASK               O 092400
TLCDMASK CONSFMAT (CHAR,HEX,BIT),DEFAULT=CHAR                           O 092500
         SPACE 5                                                        O 092600
*                                  BINARY                               O 092700
TLCDBIN  CONSFMAT (NUM9,NUMZ,NUME,NUM$,PD,BIN,DISP,FP),DEFAULT=NUM9     O 092800
         EJECT                                                          O 092900
*                                  FLOATING POINT                       O 093000
TLCDFP   CONSFMAT (NUM9,NUMZ,NUME,NUM$,PD,BIN,DISP,FP),DEFAULT=NUM9     O 093100
         SPACE 5                                                        O 093200
*                                  CHARACTER STRING                     O 093300
TLCDSTR  CONSFMAT (CHAR,HEX,BIT),DEFAULT=CHAR                           O 093400
         SPACE 5                                                        O 093500
TLCDIND  CONSFMAT ,                INDICATOR                            O 093600
         SPACE 3                                                        O 093700
TLCDFREE CONSFMAT (NUM9,NUMZ,NUME,NUM$,PD,BIN,DISP,FP) FREE FORMAT      O 093800
         SPACE 3                                                        O 093900
TLCDUNU3 CONSFMAT ,                UNASSIGNED FIELD TYPE                O 094000
         TITLE 'PARROTO - ERROR MESSAGES'                               O 094100
*                                                                       O 094200
*        NOTE THAT THE MESSAGES HEREAFTER ARE NOT DIRECTLY ADDRESSABLE, O 094300
*         AND THE OPERAND 'LA=YES' MUST BE USED ON ANY 'LINE' OR 'CCNO' O 094400
*         MACROS REFERENCING THEM.                                      O 094500
*                                                                       O 094600
LINE01   DS    0CL110                                                   O 094700
         DC    C'PRTO-001-W  CONTROL CARD NO.'                          O 094800
LINE01C  DC    X'4020202020202120'                                      O 094900
         DC    C' SPECIFIES AN UNKNOWN GR00 LABEL: THE FIELD WILL DEFAU*O 095000
               LT TO DDNAME ''PRINT'''                                  O 095100
LINE02   DS    0CL125                                                   O 095200
         DC    C'PRTO-002-E  CONTROL CARD NO.'                          O 095300
LINE02C  DC    X'4020202020202120'                                      O 095400
         DC    C' SPECIFIES AN OUTPUT FORMAT THAT IS INCONSISTENT WITH TO 095500
               THE FIELD TYPE: DEFAULT SUBSTITUTED'                     O 095600
LINE03   DS    0CL97                                                    O 095700
         DC    C'PRTO-003-E  CONTROL CARD NO.'                          O 095800
LINE03C  DC    X'4020202020202120'                                      O 095900
         DC    C' SPECIFIES AN UNKNOWN FIELD LABEL ('                   O 096000
LINE03L  DC    C'XX'                                                    O 096100
         DC    C'): SPECIFICATION IGNORED'                              O 096200
LINE04   DS    0CL111                                                   O 096300
         DC    C'PRTO-004-E  CONTROL CARD NO.'                          O 096400
LINE04C  DC    X'4020202020202120'                                      O 096500
         DC    C' SPECIFIES THE COUNT FIELD OF AN UNDEFINED KEY LEVEL: PO 096600
               SPECIFICATION IGNORED'                                   O 096700
LINE05   DS    0CL124                                                   O 096800
         DC    C'PRTO-005-W  CONTROL CARD NO.'                          O 096900
LINE05C  DC    X'4020202020202120'                                      O 097000
         DC    C' SPECIFIES AN OUTPUT FIELD LENGTH LONGER THAN THE INPUTO 097100
               T LENGTH: INPUT LENGTH SUBSTITUTED'                      O 097200
LINE06   DS    0CL82                                                    O 097300
         DC    C'PRTO-006-E  CONTROL CARD NO.'                          O 097400
LINE06C  DC    X'4020202020202120'                                      O 097500
         DC    C' SPECIFIES AN UNKNOWN LABEL ('                         O 097600
LINE06L  DC    CL2' '                                                   O 097700
         DC    C'): CARD IGNORED'                                       O 097800
LINE07   DS    0CL114                                                   O 097900
         DC    C'PRTO-007-W  CONTROL CARD NO.'                          O 098000
LINE07C  DC    X'4020202020202120'                                      O 098100
         DC    C' SPECIFIES AN UNKNOWN DESTINATION LABEL ('             O 098200
LINE07L  DC    CL2' '                                                   O 098300
         DC    C'): TEST TREATED AS AN EVENT COUNTER'                   O 098400
LINE08   DS    0CL86                                                    O 098500
         DC    C'PRTO-008-I  CONTROL CARD NO.'                          O 098600
LINE08C  DC    X'4020202020202120'                                      O 098700
         DC    C' DEFINES AN UNUSED FIELD (LABEL '                      O 098800
LINE08L  DC    CL2' '                                                   O 098900
         DC    C'): FIELD IGNORED'                                      O 099000
LINE09   DS    0CL105                                                   O 099100
         DC    C'PRTO-009-W  OUTPUT FIELD DEFINED IN C/C NO.'           O 099200
LINE09C  DC    X'4020202020202120'                                      O 099300
         DC    C' IGNORED BECAUSE OF ERROR ASSOCIATED WITH OUTPUT FILE' O 099400
LINE10   DS    0CL105                                                   O 099500
         DC    C'PRTO-010-W  CONTROL CARD NO.'                          O 099600
LINE10C  DC    X'4020202020202120'                                      O 099700
         DC    C' IGNORED BECAUSE OF ERROR ASSOCIATED WITH THE'         O 099800
         DC    C' RESULT FIELD (LABEL '                                 O 099900
LINE10L  DC    CL2' '                                                   O 100000
         DC    C')'                                                     O 100100
LINE11   DS    0CL96                                                    O 100200
         DC    C'PRTO-011-W  DD STATEMENT FOR DDNAME '                  O 100300
LINE11L  DC    CL8' '                                                   O 100400
         DC    C' IS MISSING: ASSOCIATED OUTPUT PROCESSING SUPPRESSED'  O 100500
LINE12   DS    0CL105                                                   O 100600
         DC    C'PRTO-012-W  C/C NO.'                                   O 100700
LINE12C1 DC    X'4020202020202120'                                      O 100800
         DC    C' CONDITIONALLY BRANCHES BACKWARDS TO C/C NO.'          O 100900
LINE12C2 DC    X'4020202020202120'                                      O 101000
         DC    C' - POTENTIAL INFINITE LOOP'                            O 101100
        SCSEND O                   TERMINATE CSET PARROTO               O 101200
         END                                                            O 101300
