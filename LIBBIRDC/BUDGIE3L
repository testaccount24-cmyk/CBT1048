         TITLE 'BUDGIE3L - INTERNAL MACROS'                             L 000010
         MACRO                                                          L 000020
         $CB   &PRINT=OFF                                               L 000030
         PUSH  PRINT               PRESERVE PRINT STATUS                L 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           L 000050
               TITLE 'CB02 - CB02 CONTROL BLOCK'                        L 000060
         CB02  ,                   GENERATE DSECT                       L 000070
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     L 000080
         CCB   ,                   GENERATE DSECT                       L 000090
               TITLE 'DCB  - DATA CONTROL BLOCK'                        L 000100
         DCBD  DSORG=(PS,IS)       GENERATE DSECTS                      L 000110
               TITLE '     - GENERAL EQUATES'                           L 000120
       EQUATES ,                   GENERATE EQUATES                     L 000130
               TITLE '     - FORMAT OF BATCH LOG RECORD'                L 000140
      LOGCARD  ,                   GENERATE DSECT                       L 000150
               TITLE '     - FORMAT OF BATCH LOG STATUS REPORT'         L 000160
      LOGLINE  ,                   GENERATE DSECT                       L 000170
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        L 000180
         MEND                                                           L 000190
         SPACE 5                                                        L 000200
BUDGIE3L CSECT                                                          L 000210
         $CB   ,                   GENERATE DSECTS AND EQUATES          L 000220
         TITLE 'BUDGIE3L - I/O SUB-ROUTINES'                            L 000230
        SCSECT L                   START CSECT BUDGIE3L                 L 000240
         ENTRY BBSPCE              B/B REPORT CARRIAGE CONTROL CHAR     L 000250
         ENTRY BB01MS01            USER-SUPPLIED HEADING FOR B/B RREPOR L 000260
         ENTRY BLDLOG              BUILD AND PRINT B LOG STATUS REPORT  L 000270
         ENTRY CLOSE               CLOSE SEQUENTIAL DATA SETS           L 000280
         ENTRY DCB01,DCB02,DCB03,DCB04,DCB05,DCB06,DCB07,DCB08,DCB09    L 000290
         ENTRY DCB10,DCB11,DCB12,DCB13,DCB14,DCB15                      L 000300
         ENTRY GETLOG              READ FROM LOGIN                      L 000310
         ENTRY GETSUSP             READ FROM SUSPIN                     L 000320
         ENTRY HEADBB              PRINT B/B REPORT HEADING             L 000330
         ENTRY HEADLOG             B LOG STATUS REPORT HEADING ROUTINE  L 000340
         ENTRY IOERRTN             I/O ERROR ANALYSIS ROUTINE           L 000350
         ENTRY LOGHEAD1            BATCH LOG STATUS REPORT HEADING LINE L 000360
         ENTRY OPEN                OPEN SEQUENTIAL DATA SETS            L 000370
         ENTRY PARMIDC             SUBMITTOR'S ID ( FROM PARM FIELD )   L 000380
         ENTRY PARMIDL             LENGTH OFSUBMITTOR ID                L 000390
         ENTRY PARMIDP             POSN OF SUBMITTOR ID                 L 000400
         ENTRY PRINT               WRITE TO SYSPRINT                    L 000410
         ENTRY PRNTBBL             WRITE TO PRINT                       L 000420
         ENTRY PRNTLOG             WRITE BATCH LOG STATUS REPORT        L 000430
         ENTRY PUTDLET             WRITE TO DELETED                     L 000440
         ENTRY PUTDUP              WRITE TO DUPLICAT                    L 000450
         ENTRY PUTINTR             WRITE TO INTRDR                      L 000460
         ENTRY PUTLOG              WRITE TO LOGOUT                      L 000470
         ENTRY PUTSUSP             WRITE TO SUSPOUT                     L 000480
         ENTRY PUTUT2              WRITE TO SYSUT2                      L 000490
         ENTRY READIN              READ FROM SYSIN                      L 000500
         ENTRY READLIN             READ AND PRINT BUDGIE LOGO           L 000510
         ENTRY READUT1             READ FROM SYSUT1                     L 000520
         ENTRY TIOTSCN             SCAN TIOT FOR DDNAME                 L 000530
         SPACE 1                                                        L 000540
         WXTRN #IOERROR            I/O ERROR INTERFACE ROUTINE          L 000550
         WXTRN WORKEOD             EOF RTN FOR WORK                     L 000560
         TITLE 'BUDGIE3L - I/O SUB-ROUTINES'                            L 000570
*********************************************************************** L 000580
*        OPEN ROUTINE                                                 * L 000590
*********************************************************************** L 000600
         SPACE 1                                                        L 000610
OPEN     IOM   OPEN,TYPE=DEF       GENERATE OPEN ROUTINE                L 000620
         EJECT                                                          L 000630
*********************************************************************** L 000640
*        CLOSE ROUTINE                                                * L 000650
*********************************************************************** L 000660
         SPACE 1                                                        L 000670
CLOSE    IOM   CLOSE,TYPE=DEF      GENERATE CLOSE ROUTINE               L 000680
         EJECT                                                          L 000690
*********************************************************************** L 000700
*        THIS ROUTINE SCANS THE TIOT TO DETERMINE WHETHER OR          * L 000710
*         NOT A SPECIFIC DD STATEMENT IS PRESENT IN THE JCL.          * L 000720
*********************************************************************** L 000730
         SPACE 1                                                        L 000740
TIOTSCN  IOM   TIOTSCAN,TYPE=DEF   GENERATE TIOTSCAN RTN                L 000750
         EJECT                                                          L 000760
*********************************************************************** L 000770
*        READ INPUT BATCHES                                           * L 000780
*********************************************************************** L 000790
         SPACE 1                                                        L 000800
READUT1  SUBIN SAVE=R4             READ SYSUT1                          L 000810
         NI    PSWITCH,PSWULINE    RESET ALL RECORD PROCESSING SWITCHES L 000820
         NI    BRSWITCH,FF-SWBRDETL SET OFF 'ADD CARD TO LINE' SWITCH   L 000830
         NI    YPSWITCH,FF-YPSWCLST SET OFF 'CARD IMAGE PRINTED' SWITCH L 000840
         NI    MASTER,FF-SWMDETL   ASSUME IT IS NOT A DETAIL RECORD     L 000850
         L     R6,SYSUT1+IOPSRECA  GET ADDRESS OF RECORD AREA           L 000860
         LH    R2,$RECLUT2         GET LENFTH OF SYSUT2 RECORD          L 000870
         CH    R2,$RECLUT1         TEST IF OUTPUT LONGER THEN INPUT     L 000880
         BNH   READUT1G            BR IF OUTPUT NOT LONGER              L 000890
         MVI   0(R6),C' '          MOVE BLANK TO START OF RECORD        L 000900
         LR    R1,R6               POINT R1 AT R6 + 0                   L 000910
         LA    R3,1(,R1)           POINT R3 AT R6 + 1                   L 000920
         BCTR  R2,0                DECREMENT R2 TO LENGTH - 1           L 000930
         CBAL  R4,VARMOVE          PAD OUT RECORD WITH BLANKS           L 000940
READUT1G IOM   GETM,SYSUT1,(R6)    READ SYSUT1 INTO AREA                L 000950
         TM    APSWITCH,APSWSID    IS SUBMITTOR ID TO BE ADDED          L 000960
         BZ    *+8                 BR IF NOT                            L 000970
         CBAL  R4,ADDID            ADD SUBMITTOR ID TO RECORD           L 000980
         L     R3,$PTRPARM          PIINT R3 AT INPUT REC S/A           L 000990
         LH    R2,$RECLUT1         EGT SYSUT1 RECORD LENGTH             L 001000
         LR    R1,R6               POINT R1 AT SOURCE RECORD            L 001010
         CBAL  R4,VARMOVE          MOVE RECORD TO SAVE AREA             L 001020
         EJECT                                                          L 001030
*********************************************************************** L 001040
*        READ INPUT BATCHES ( CONT'D )                                * L 001050
*********************************************************************** L 001060
         SPACE 1                                                        L 001070
*        THE EXISTENCE OF SUCH INSTRUCTIONS AS 'DW' ALLOW CRETINOUS     L 001080
*         USERS TO PROGRAM A LOOP SO THE FOLLOWING CODE ISSUES A TASK   L 001090
*         STIMER TO FORCE A U072 ABEND IF NO READ OF SYSUT1 OCCURS FOR  L 001100
*         5 SECINDS.  ( DISABLED AFTER EOF ).                           L 001110
         SPACE 1                                                        L 001120
READUT1R TM    AFSWITCH,AFSWTIMR   HAS TIMER BEEN REQUESTED             L 001130
         BZ    READUT1S            BYPASS STIMER IF NOT REQUIRED        L 001140
       STIMER  TASK,$STIMEND,DINTVL=$DINTVL SET 5 SECOND TIMER          L 001150
READUT1S CLI   READUT1X,C'X'       SET COND CODE FOR CALLER             L 001160
        SUBOUT RESTORE=R4          RETURN TO CALLER                     L 001170
         EJECT                                                          L 001180
*********************************************************************** L 001190
*        READ INPUT BATCHES - EOD ROUTINE                             * L 001200
*********************************************************************** L 001210
         SPACE 1                                                        L 001220
EODUT1   MVI   READUT1X,C'Y'       SET TO SHOW EOF                      L 001230
         OI    SYSUT1+IOPSSW,IOSWEOF INDICTAE EOF                       L 001240
        TTIMER CANCEL              CANCEL LOOP-DETECTING STIMER IF ANY  L 001250
         NI    AFSWITCH,FF-AFSWTIMR SET OFF FLAG TO PREVENT RE-ISSUING  L 001260
         B     READUT1R            GO SET COND CODE FOR SEER            L 001270
READUT1X DC    C'X'                USED TO SET COND CODE FOR ACLLER     L 001280
         SPACE 5                                                        L 001290
*********************************************************************** L 001300
*        ADD SUBMITTOR ID IF REQUIRED                                 * L 001310
*********************************************************************** L 001320
         SPACE 1                                                        L 001330
ADDID    SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 001340
         TM    APSWITCH,APSWBCID   IS ID FOR BATCH CARDS ONLY           L 001350
         BZ    ADDID01             NO, SO GO ADD REGARDLESS             L 001360
         CBAL  R4,BCSCAN           DETERMINE IF THIS IS BATCH CARD      L 001370
         BNE   ADDIDX              NOT BATCH CARD SO EXIT               L 001380
ADDID01  SR    R14,R14             ZEROISE WORK REGISTER                L 001390
         IC    R14,PARMIDP         RETRIEVE OUTPUT POSN OF ID           L 001400
         BCTR  R14,0               DECREMENT POSN TO DISPLACEMENT       L 001410
         A     R14,SYSUT1+IOPSRECA POINT AT FIELD WITHIN RECORD         L 001420
         SR    R1,R1               ZEROISE WORK REGISTER                L 001430
         IC    R1,PARMIDL          RETRIEVE LENGTH OF ID                L 001440
         BCTR  R1,0                DECREMENT FOR EXECUTE                L 001450
         EX    R1,MVCSUBID         ADD USER ID TO RECORD                L 001460
ADDIDX  SUBOUT RESTORE=R4          RESTORE & RETURN                     L 001470
         SPACE 1                                                        L 001480
MVCSUBID MVC   0(0,R14),PARMIDC    MOVE SUBMITTORHS ID TO RECORD        L 001490
         EJECT                                                          L 001500
*********************************************************************** L 001510
*        READ BUDGIE CONTROL CARDS                                    * L 001520
*********************************************************************** L 001530
         SPACE 1                                                        L 001540
READIN   SUBIN SAVE=(R4)           READ SYSIN                           L 001550
READIN00 IOM   GET,SYSIN,(R6)      GET NEXT CONTROL CARD                L 001560
         AP    SYSINCNT,$ONE        INCREMENT TRUE RECORD COUNT         L 001570
         CP    SYSIN+IOPSRCNT(4),=P'999' ARE THERE MORE THAN 999 SEQ NO L 001580
         BNH   *+8                 BR IF NOT MORE THAN 999 SEQ NOS      L 001590
         OI    SWERROR2,SWE2S999   FLAG THAT MORE THAN 999 NOS ASSIGNED L 001600
         MVC   10(80,R5),0(R6)     MOVE RECORD TO PRINT LINE            L 001610
         MVC   $WRKAREA(8),EDITCNO MOVE EDIT MASK TO WORK AREA          L 001620
         ED    $WRKAREA(8),SYSIN+IOPSRCNT EDIT CARD NO IN W/A           L 001630
         MVC   1(4,R5),$WRKAREA+4  ADD CARD SEQ NO TO LINE              L 001640
         CLC   0(2,R6),=C'MS'      DOES CARD START WITH 'MS'            L 001650
         BE    READIN02            BR IF YES                            L 001660
         TM    AFSWITCH,AFSWSEQA   ARE ALL CONTROL CARDS TO BE SEQUENCE L 001670
         BO    *+16                BYPASS RESETTING IF YES              L 001680
         SP    SYSIN+IOPSRCNT(4),$ONE DECREMENT CARD COUNT              L 001690
         MVC   1(4,R5),$SPACES     BLANK OUT COUNT FROM LINE            L 001700
         EJECT                                                          L 001710
*********************************************************************** L 001720
*        RAED BUDGIE CONTROL CARDS ( CONT'D )                         * L 001730
*********************************************************************** L 001740
         SPACE 1                                                        L 001750
*        BUDGIE CONTROL CARDS MAY INCLUDE THE PRINTER CONTROL           L 001760
*         STATEMENTS TITLE, EJECT, SKIPN.                               L 001770
         SPACE 1                                                        L 001780
         CLC   0(5,R6),=C'TITLE'   IS THIS A TITLE CARD                 L 001790
         BNE   *+14                BR IF NOT TITLE TO TEST FOR EJECT    L 001800
         MVC   LINE07T,5(R6)       SET UP TITLE IN HEADING LINE         L 001810
         B     *+14                GO TREAT AS EJECT CARD               L 001820
         CLC   0(5,R6),=C'EJECT'   IS IT EJECT REQUEST                  L 001830
         BNE   *+18                BR IF NOT EJECT CARD                 L 001840
         MVI   0(R5),SPCE1NPR      SET TO NOT PRINT CARD CONTENTS       L 001850
         AP    SYSPRINT+IOPSRCNT(4),$PGELMIT FORCE LNE CNT TO PAGE LIMI L 001860
         B     READIN01            GO LEAP TO HEAD OF PAGE              L 001870
         CLC   0(4,R6),=C'SKIP'    IS IT A SKIP REQUEST                 L 001880
         BNE   READIN03            BR IF NOT SKIP REQUEST               L 001890
         MVI   0(R5),SPCE1NPR      ASSUME IT IS SKIP 1                  L 001900
         CLI   4(R6),C'1'          IS IT SKIP1                          L 001910
         BE    READIN01            BR IF IT IS SKIP1 REQUEST            L 001920
         MVI   0(R5),SPCE2NPR      ASSUME IT IS SKIP2                   L 001930
         AP    SYSPRINT+IOPSRCNT(4),$ONE ADJUST LCNT FOR DOUBLE SPACE   L 001940
         CLI   4(R6),C'2'          IS IT SJIP2                          L 001950
         BE    READIN01            BR IF IT IS SKIP2 RQUEST             L 001960
         MVI   0(R5),SPCE3NPR      ASSUME IT MUST BE SKIP3              L 001970
         AP    SYSPRINT+IOPSRCNT(4),$ONE ADJUST LINE COUNT AGAIN        L 001980
         B     READIN01            GO PRINT 3 BLANK LINES               L 001990
READIN03 CLI   0(R6),C'*'          IS IT A COMMENT CRAD                 L 002000
         BE    READIN01            BR IF YES TO PRINT                   L 002010
         MVC   10(80,R5),$SPACES   BLANKOUT RECORD                      L 002020
         MVC   5(L'LINE01,R5),LINE01 MOVE MESSAGE TO LINE               L 002030
         CBAL  R4,PRINT            PRINT THE MESSAGE                    L 002040
         MVC   10(80,R5),0(R6)     MOVE RECORD TO LINE AGAIN            L 002050
READIN01 EQU   *                   GO PRINT LINE                        L 002060
         CBAL  R4,PRINT            PRINT CONTROL CARD                   L 002070
         B     READIN00            C/C PROCESSED SO GO GET NEXT         L 002080
         EJECT                                                          L 002090
*********************************************************************** L 002100
*        READ BUDGIE CONTROL CARDS ( CONT'D )                         * L 002110
*********************************************************************** L 002120
         SPACE 1                                                        L 002130
READIN02 EQU   *                   CONTINUE PROCESSING                  L 002140
         CBAL  R4,PRINT            PRINT CONTROL CAD                    L 002150
READINR  CLI   READINX,C'X'        SET COND CODE FOR USER               L 002160
        SUBOUT RESTORE=(R4)        RETURN TO CALLER                     L 002170
         SPACE 5                                                        L 002180
EODIN    MVI   READINX,C'Y'        SET TO SHOW EOF                      L 002190
         IOM   EOF,SYSIN           FLAG SYSIN AS EOF                    L 002200
         ZAP   SYSIN+IOPSRCNT(4),SYSINCNT RESTORE TRUE RECORD COUNT     L 002210
         B     READINR             GO SET COND CODE FOR USER            L 002220
         SPACE 1                                                        L 002230
READINX  DC    C'X'                USED TO SET COND CODE FOR CALLER     L 002240
         EJECT                                                          L 002250
*********************************************************************** L 002260
*        READ AND PRINT BUDGIE LOGO                                   * L 002270
*********************************************************************** L 002280
         SPACE 1                                                        L 002290
READLIN  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 002300
         TM    SYSLIN+IOPSSW,IOSWPRES TEST IF DD STATEMENT PRESENT      L 002310
         BZ    EODLIN              BYPASS ROUTINE IF NOT THERE          L 002320
READLIN1 IOM   GET,SYSLIN          HET LINE OF LOGO                     L 002330
         MVC   0(133,R7),0(R1)     MOVE TO PRINT LINE                   L 002340
         ZAP   PRINTBB+IOPSRCNT(4),$ZERO PREVENT UNWANTED PAGE SKIP     L 002350
         CBAL  R4,PRNTBBL          WRITE LINE OF LOGO                   L 002360
         B     READLIN1            LOOP BACK FOR NEXT LINE              L 002370
EODLIN SUBOUT  RESTORE=R4          RETURN TO CALLER                     L 002380
         EJECT                                                          L 002390
*********************************************************************** L 002400
*        READ LOGIN                                                   * L 002410
*********************************************************************** L 002420
         SPACE 1                                                        L 002430
*        AT ENTRY, CURRUT1 CONTAINS THE BATCH NO FROM THE BATCH CARD    L 002440
*         JUST READ FROM SYSUT1.  THIS ROUTINE READS LOGIN, AND PROCESS L 002450
*         IS AS FOLLOWS :-                                              L 002460
*              LOGIN > CURRUT1 D RETURN                                 L 002470
*              LOGIN < CURRUT1 : WRITE LOGIN TO LOGOUT                  L 002480
*                                LOOP BACK TO READ                      L 002490
*              LOGIN = CURRUT1 & LOGIN ON SUSPENSE :                    L 002500
*                                RETURN                                 L 002510
*              LOGIN = CURRUT1 & LOGIN ACCEPTED :                       L 002520
*                                SET FLAG                               L 002530
*                                RETURN                                 L 002540
         SPACE 1                                                        L 002550
GETLOG   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 002560
         TM    LOGIN+IOPSSW,IOSWEOF HAS EOF BEEN TEACHED OR SIMULATED   L 002570
         BO    GETLOGX             EXIT IF YES                          L 002580
         TM    LOGIN+IOPSSW,IOSWPRES TEST IF LOG EXISTS                 L 002590
         BZ    EODLOGIN            BYPASS PROCESSING IF NO              L 002600
         BC    0,GETLOGT           BR EXCEPT 1ST TIME                   L 002610
         OI    *-3,X'F0'           SET ON 1ST TIME BR                   L 002620
GETLOGR  MVC   $PRVLIN,$CURLIN     PRESERVE CURRENT AS ALST             L 002630
         IOM   GET,LOGIN           READ LOGIN                           L 002640
         SPACE 2                                                        L 002650
*********************************************************************** L 002660
*        CONT'D OVERLEAF                                              * L 002670
*********************************************************************** L 002680
         EJECT                                                          L 002690
*********************************************************************** L 002700
*        READ LOGIN ( CONT'D )                                        * L 002710
*********************************************************************** L 002720
         SPACE 1                                                        L 002730
         MVC   $CURLIN,LOGBNO-LOGCARD(R1) RETRIEVE BATCH NUMVET         L 002740
         CLC   $PRVLIN,$CURLIN     VERIFY LOGIN IS IN SEQUENCE          L 002750
         BNH   GETLOGT             BR IF NO SEQUENCE ERROR              L 002760
         ABEND 24                  SEQ ERROR SO ABEND                   L 002770
GETLOGT  L     R1,LOGIN+IOPSRECA   RETRIEVE INPUT BUFFER ADDRESS        L 002780
         CLC   $CURLIN,$CURUT1     COMPARE LOG & SYSUT1 BATCH NOS       L 002790
         BH    GETLOGX             RETURN IF LOG I GREATER              L 002800
         BE    GETLOGE             GO PROCESS EQUALITY                  L 002810
*                                  LOG MUST BE LESS THAN SYSUT1         L 002820
         CBAL  R4,PUTLOG           GO WRITE LOGIN TO LOGOUT             L 002830
         B     GETLOGR             GO GET NEXT LOGIN RECORD             L 002840
GETLOGE  L     R9,LOGOUT+IOPSRECA  GET ADDRESS OF LOG WORK AREA         L 002850
         CLI   LOGSW-LOGCARD(R1),C'P' IS LOG FOR PASSED SUSPENSE BATCH  L 002860
         BE    GETLOGEP            BR IF YES                            L 002870
         OI    MASTER,SWMDUPLG     FLAG SYSUT1 AS DUPLICATE BATCH       L 002880
         CBAL  R4,PUTLOG           WRITE THIS LOG ENTRY                 L 002890
         B     GETLOGR             GO READ NEXT ENTRY                   L 002900
GETLOGEP MVC   0(80,R9),0(R1)      MOVE BATCH LOG ENTRY TO WORK RAE     L 002910
         B     GETLOGR             GO READ NEXT ENTRY                   L 002920
GETLOGX SUBOUT RESTORE=R4          RESTORE AND RETURN                   L 002930
         SPACE 5                                                        L 002940
EODLOGIN MVI   $CURLIN,X'FF'       MOVE HIGH VALUES TO LOG              L 002950
         MVC   $CURLIN+1(L'$CURLIN-1),$CURLIN ... BATCH NO STORE        L 002960
         IOM   EOF,LOGIN           FLAG LOGIN AS EOF                    L 002970
         B     GETLOGX             GO RETURN TO CALLER                  L 002980
         EJECT                                                          L 002990
*********************************************************************** L 003000
*        READ SUSPIN                                                  * L 003010
*********************************************************************** L 003020
         SPACE 1                                                        L 003030
*        AT ENTRY, CURRUT1 CONTAIBS THE BATCH NUMBER FROM THE BATCH     L 003040
*         CARD JUST READ FROM SYSUT1.  THIS ROUTINE READS SUSPIN,       L 003050
*         AND PROCESSING IS AS FOLLOWS:-                                L 003060
*              SUSPIN ^ B/C        : WRITE TO SUSPOUT                   L 003070
*                                  : LOOP BACK TO READ SUSPIN           L 003080
*              SUSPIN > CURRUT1    : RETURN TO CALLER                   L 003090
*              SUSPIN < CURRUT1    : WRITE SUSPIN TO SUPOUT             L 003100
*                                  : LOOP BACK TO READ SUSPIN           L 003110
*              SUSPIN = CURRUT1    SET DUPLICATE FLAG                   L 003120
*                                  : WRITE SUSPIN TO SUSPOUT            L 003130
*                                  : LOOP BACK TO READ SUSPIN           L 003140
         SPACE 1                                                        L 003150
GETSUSP  SUBIN SAVE=(R4,R6)        PRESERVE REGISTERS                   L 003160
         TM    SUSPIN+IOPSSW,IOSWEOF TEST IF EOF REACHED                L 003170
         BO    GETSUSPX            RETURN TO CALLER IF YES              L 003180
         TM    SUSPIN+IOPSSW,IOSWPRES TEST IF SUSPIN PRESENT            L 003190
         BZ    EODSUSP             SIMULATE EOF IF NO SYSPIN            L 003200
         BC    0,GETSUSPT          BR EXCEPT 1ST TIME                   L 003210
         OI    *-3,X'F0'           SET ON 1ST TIME BR                   L 003220
GETSUSPR MVC   $PRVSUSP,$CURSUSP   RETRIEVE CURRENT BNO AS LAST         L 003230
         IOM   GET,SUSPIN,(R6)     READ SUSPIN                          L 003240
         EJECT                                                          L 003250
*********************************************************************** L 003260
*        READ SUSPIN ( CONT'D )                                       * L 003270
*********************************************************************** L 003280
         SPACE 1                                                        L 003290
         CBAL  R4,BCSCAN           TEST IF RECORD IS BATCH CARD         L 003300
         BNE   GETSUSPW            BR TO WRITE IF NOT B/C               L 003310
         MVC   $CURSUSP,$NXTSCAN   RETRIEV BATCH NUMER                  L 003320
         CLC   $PRVSUSP,$CURSUSP   VERIFY SUSP FILE IS IN SEQ           L 003330
         BL    GETSUSPT            CONTINUE IF NO SEQUENCE ERROR        L 003340
         ABEND 28                  SEQ ERROR SO ABEND                   L 003350
GETSUSPT L     R6,SUSPIN+IOPSRECA  RETRIEVE RECORD ADDRESS              L 003360
         CLC   $CURSUSP,$CURUT1    COMPARE SUSPIN & SYSUT1 BNO'S        L 003370
         BH    GETSUSPX            RETURN IF SUSPIN IS GREATER          L 003380
         BL    GETSUSPW            GO WRITE IF SUSPOUT IS LESS          L 003390
*                                  THE BATCH NUMBERS ARE EQUAL          L 003400
         OI    MASTER,SWMDUPLG     FLAG SYSUT1 AS DUPLICATE BATCH       L 003410
GETSUSPW CBAL  R4,PUTSUSP          WRITE RECORD TO SUSPOUT              L 003420
         B     GETSUSPR            GO READ NEXT SUSPIN RECORD           L 003430
GETSUSPX SUBOUT RESTORE=(R4,R6)    RESTORE REGISTERS & RETRUN TO CALLER L 003440
         SPACE 5                                                        L 003450
EODSUSP  IOM   EOF,SUSPIN          FLAG SUSPIN AS EOF                   L 003460
         MVI   $CURSUSP,X'FF'      MOVE HIGH VALUES TO SUSPIN BATCH ... L 003470
         MVC   $CURSUSP+1(L'$CURSUSP-1),$CURSUSP ... NUMBER STORE       L 003480
         B     GETSUSPX            GO RETURN TO CALLER                  L 003490
         EJECT                                                          L 003500
*********************************************************************** L 003510
*        WRITE TO SYSPRINT                                            * L 003520
*********************************************************************** L 003530
         SPACE 1                                                        L 003540
PRINT    SUBIN ,                   PRINT MESSAGE ON SYSPRINT            L 003550
         IOM   PUT,SYSPRINT,(R5),PRINT,RTN=HEADPRNT WRITE TO SYSPRINT   L 003560
         L     R5,SYSPRINT+IOPSRECA GET BUFFER ADDRESS (LEST NO DD ST)  L 003570
         BLANK (R5),,SPCE1AFT      BLANK NEW BUFFER                     L 003580
        SUBOUT ,                   RETURN TO CALLER                     L 003590
         EJECT                                                          L 003600
*********************************************************************** L 003610
*        WRITE HEADING FOR SYSPRINT ( CONTROL CRADS ONLY )            * L 003620
*********************************************************************** L 003630
         SPACE 1                                                        L 003640
HEADPRNT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 003650
         ZAP   SYSPRINT+IOPSRCNT(4),=P'0' ZEROISE LINE COUNTER          L 003660
         MVI   0(R5),PAGESKIP      SET TO SKIP TO NEW PAGE              L 003670
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     L 003680
         TM    SWINIT,SWCCPRNT     ARE WE PRINTING CONTROL CARDS        L 003690
         BZ    HDPRNTX             BYPASS HEADING LINES IF NOT          L 003700
         MVI   0(R5),SPCE2AFT      ESTABLISG DOUBLE SPACE               L 003710
         MVC   1(132,R5),LINE07    SET UP HEADING LINE                  L 003720
         ED    LINE07P-LINE07+1(4,R5),PGECNTSY EDIT PAGE COUNT          L 003730
         AP    PGECNTSY,$ONE        INCREMENT PAGE COUNT                L 003740
         CBAL  R4,PRINT            PRINT HEADING LINE                   L 003750
         MVC   10(80,R5),BBHEAD03+11 MOVE IN 1S HEADING LINE            L 003760
         CBAL  R4,PRINT             ... AND PRINT IT                    L 003770
         L     R1,=A(BBHEAD04+11) RESSOLVE ADDRESSABILITY PROBLEM       L 003780
         MVC   10(80,R5),0(R1)     MOVE IN 2ND JEADING LINE             L 003790
         MVI   0(R5),SPCE2AFT      SET TO DOUBLE SPACE                  L 003800
         CBAL  R4,PRINT            PRINT 2ND HEADING LINE               L 003810
         COUNT SYSPRINT,1          ALLOW FOR DOUBLE SPACE               L 003820
HDPRNTX SUBOUT RESTORE=R4          RESTORE & RETURN TO CALLER           L 003830
         EJECT                                                          L 003840
*********************************************************************** L 003850
*        WRITE BATCH BALANCING REPORT ( DDNAME PRINT )                * L 003860
*********************************************************************** L 003870
         SPACE 1                                                        L 003880
PRNTBBL  SUBIN ,                   ENTER ROUTINE                        L 003890
         TM    BRSWITCH,SWBRDETL   IS CARD TO BE ADDED TO LINE          L 003900
         BZ    PRNTBBL1            BR IF NOT                            L 003910
         NI    BRSWITCH,FF-SWBRDETL SET OF 'CARD ADD ' FLAG             L 003920
         OI    BRSWITCH,SWBRPCRD   INDICATE CURRENTLY ADDING CARD TO LN L 003930
         L     R1,$DBUFF            POINT R1 AT DUMMY BUFFER            L 003940
         MVC   0(133,R1),0(R7)     PRESERVE CURRENT PRINT LINE          L 003950
         BLANK (R7)                BLANK OUT BUFFER                     L 003960
         MVC   0(1,R7),$DTBSPCE    SET DEFAULT LINE SPACING             L 003970
         MVC   $WRKAREA(8),EDITCNO SET  UP EDIT PATTERN                 L 003980
         ED    $WRKAREA(8),CB02LCNT-CB02NTRY(R10) EDIT CURRENT REC NO   L 003990
         MVC   1(6,R7),$WRKAREA+2  MOVE EBCDIC NO TO PRINT LINE         L 004000
         L     R1,$PTRPARM          GET ADDRESS OF PRESERVED INPUT CARD L 004010
         MVC   12(80,R7),0(R1)     ADD CARD IMAGE TO INE                L 004020
PRNTBBL1 IOM   PUT,PRINTBB,(R7),PRINT,RTN=HEADBB PRINT B/B REPORT LINE  L 004030
         EJECT                                                          L 004040
*********************************************************************** L 004050
*        WRITE BATCH BALANCING REPORT ( DDNAME PRINT ) ( CONT'D )     * L 004060
*********************************************************************** L 004070
         SPACE 1                                                        L 004080
         L     R7,PRINTBB+IOPSRECA RETRIVEV CURRENT BUFFER ADDRESS      L 004090
         BLANK (R7),,SPCE1AFT      BLANK OUT NEW BUFFER                 L 004100
         TM    BRSWITCH,SWBRPCRD   ARE WE CURRENTLY ADDING CARD TO LINE L 004110
         BZ    PRNTBBLX            EXIT IF NOT ON                       L 004120
         NI    BRSWITCH,FF-SWBRPCRD SET OFF 'ADDING CARD' FLAG          L 004130
         L     R1,$DBUFF            POINT R1 AT DUMMY BUFFER            L 004140
         MVC   0(133,R7),0(R1)     REPLACE ORIBINAL LINE IN BUFFER      L 004150
         SP    PRINTBB+IOPSRCNT(4),$ULNDECR DECREMENT LCNT IF NO SPACE  L 004160
         B     PRNTBBL1            GO PRINT LINE                        L 004170
PRNTBBLX SUBOUT ,                  RETURN TO CALLER                     L 004180
         EJECT                                                          L 004190
*********************************************************************** L 004200
*        BATCH BALANCING REPORT HEADING ROUTINE                       * L 004210
*********************************************************************** L 004220
         SPACE 1                                                        L 004230
HEADBB   SUBIN SAVE=(R4)           PRESERVE RETURN ADDRESS              L 004240
         MVC   BB01DATE,$DATEREP   ADD DATE TO REPORT HEADING           L 004250
         ZAP   PRINTBB+IOPSRCNT(4),=P'0' ZEROISE LINE COUNTER           L 004260
         MVI   0(R7),PAGESKIP      ESTABLISH PAGE SKIP                  L 004270
         CBAL  R4,PRNTBBL          SKIP TO NEW PAGE                     L 004280
         MVI   0(R7),SPCE2AFT      ESTABLISH DOUBLE SPACE               L 004290
         MVC   1(L'BBHEAD01,R7),BBHEAD01 ADD HEADING TO LINE            L 004300
         CBAL  R4,PRNTBBL          PRINT HEADING                        L 004310
         MVI   0(R7),SPCE3AFT      SET FOR TRIPLE SPACE                 L 004320
         MVC   BB02BNO,$BNOPRT     ADD BATCH NUMBER TO LINE             L 004330
         MVC   BB02SUB,BB02SUBN    ADD 'SUBMITTOR: '                    L 004340
         MVC   BB02SID,$SUBIDP     ADD SUBMITTOR ID TO LINE             L 004350
         TM    CB02SW2-CB02NTRY(R10),SW02PID IS SUBMITTOR ID REQUIRED   L 004360
         BO    *+10                BR IF YES                            L 004370
         MVC   BB02SUB(L'BB02SUB+L'BB02SID),$SPACES BALNK OUT SUB ID    L 004380
         TM    BRSWITCH,SWBRNOBC   IS THERE NO B/C FOR THIS RUN         L 004390
         BO    *+10                BR IF NO B/C                         L 004400
         MVC   1(L'BBHEAD02,R7),BBHEAD02 MOVE HEADING TO LINE           L 004410
         CBAL  R4,PRNTBBL          WRITE LINE                           L 004420
         MVC   1(L'BBHEAD03,R7),BBHEAD03 ADD HEADINH TO LINE            L 004430
         CBAL  R4,PRNTBBL          PRINT HEADINH LINE                   L 004440
         L     R1,=A(BBHEAD04)     RESOLVE ADDRESSABILITY PROBLEM       L 004450
         MVC   1(L'BBHEAD04,R7),0(R1) MOVE HEADING TO LINE              L 004460
         MVI   0(R7),SPCE2AFT      ESTABLISH DOUBLE SPACE               L 004470
         CBAL  R4,PRNTBBL          WRITE LINE                           L 004480
         COUNT PRINTBB,4           INCREMENT LINE COUNT                 L 004490
         AP    PGECNTBB,$ONE        INCREMENT PAGE COUNT                L 004500
         EDIT  BB01PAGE,PGECNTBB,'XX0' EDIT PAGE NUMBER                 L 004510
         TM    MASTER,SWMDETL      TEST IF PROCESSING CARD AT MOMENT    L 004520
         BZ    *+8                 BR IF NOT                            L 004530
         OI    BRSWITCH,SWBRDETL   INDICATE RECORD TO BE ADDED TO LINE  L 004540
        SUBOUT RESTORE=(R4)        RETURN TO CALLER                     L 004550
         EJECT                                                          L 004560
*********************************************************************** L 004570
*        CREATE DETAIL LINE FOR BATCH LOG STATUS REPORT               * L 004580
*********************************************************************** L 004590
         SPACE 1                                                        L 004600
         USING LLOGLINE,R15        ESTABLISH BUFFER ADDRESSABILITY      L 004610
         USING LOGCARD,R1          ESTABLISH BUFFER ADDRESSABILITY      L 004620
BLDLOG   SUBIN SAVE=(R1,R4)        PRESERVE REGISTERS                   L 004630
         TM    LOGLIST+IOPSSW,IOSWPRES TEST IF DD STAT PRESENT          L 004640
         BZ    BLDLOGX             BYPASS ROUTINE IF NOT                L 004650
         L     R15,LOGLIST+IOPSRECA GET CURRENT BUFFER ADDRESS          L 004660
         MVC   LLOGBNO,LOGBNO      SET UP BATCH NUMBER                  L 004670
         MVC   LLOGMACC,LOGMESS1   ASUME BATCH ACCEPTED                 L 004680
         CLI   LOGSW,C'A'          TEST IF BATCH ACCEPTED               L 004690
         BE    BLDLOG2             BR IF BATCH ACCEPTED                 L 004700
         MVC   LLOGMACC,$SPACES    BLANK OUT 'ACCEPTED' MESSAGE         L 004710
         CLI   $LOGSUSP,C'R'       IS IT REJECTED & NOT SUSPENSE        L 004720
         BNE   *+10                BR IF NOT                            L 004730
         MVC   LOGMESS2(8),LOGMESS2+8 ALTER 'SUSPENSE' TO 'REJECTED'    L 004740
         MVC   LLOGMSUS,LOGMESS2   INDICTE BATCH ON SUSPENSE            L 004750
BLDLOG2  MVC   LLOGEDTE,LOGIDTE2   ADD DATE BATCH ENTERED SYSTEM        L 004760
         MVC   LLOGADTE,LOGADTE2   ADD DATE BATCH ACCEPTED              L 004770
         MVC   LLOGTYPE,LOGBTYPE   ADD BATCH CARD TYPE                  L 004780
         MVC   LLOGSUB,LOGSUBID    ADD SUBMITTOR ID                     L 004790
         CLC   LOGRCNT(9),$SPACES  ENSURE PACKED FIELDS ARE PRESENT     L 004800
         BE    BLDLOG1             BRANCH IF NOT                        L 004810
         MVC   LLOGRCNT,EDITPL3+1  SET UP EDIT PATTERN                  L 004820
         MVC   LLOGLCNT,EDITPL3+1  SET UP EDIT PATTERN                  L 004830
         MVC   LLOGHCNT,EDITPL3+1  SET UP EDIT PATTERN                  L 004840
         MVC   LLOGSCNT,EDITPL3+1  SET UP EDIT PATTERN                  L 004850
         ED    LLOGRCNT,LOGRCNT    EDIT CARDS ENTERED                   L 004860
         ED    LLOGLCNT,LOGLCNT    EDIT CARDS RETAINED                  L 004870
         ED    LLOGHCNT,LOGHCNT    EDIT HARD ERRORS                     L 004880
         CLI   LOGSCNT,X'A0'       TEST IF NONNUMERIC (OLD FORMAT)      L 004890
         BL    *+14                IF NUMERIC THEN GO EDIT              L 004900
         MVC   LLOGSCNT,$SPACES    BLANK OUT EDIT MASK                  L 004910
         B     *+10                BYPASS EDIT & AVOID 0C7              L 004920
         ED    LLOGSCNT,LOGSCNT    EDIT SOFT ERRORS                     L 004930
BLDLOG1  CBAL  R4,PRNTLOG          WRITE BATCH LOG STATUS REPORT        L 004940
BLDLOGX SUBOUT RESTORE=(R1,R4)     RESTORE & RETURN TO CALLER           L 004950
         DROP  R1,R15              DROP BUFFER ADDRESSABILITY           L 004960
         EJECT                                                          L 004970
*********************************************************************** L 004980
*        WRITE BATCH LOG STATUS REPORT ( DDNAME LOGLIST )             * L 004990
*********************************************************************** L 005000
         SPACE 1                                                        L 005010
PRNTLOG  SUBIN ,                   ENTER ROUTINE                        L 005020
         IOM   PUT,LOGLIST,,PRINT,RTN=HEADLOG PRINT LINE                L 005030
         L     R1,LOGLIST+IOPSRECA RETRIEVE CURRENY BUFFER ADDRESS      L 005040
         BLANK (R1),,SPCE1AFT      BLANK OUT NEW BUFFER                 L 005050
         TM    PRINTSW,PRSWBLS2    IS DOUBLE SPACING REQUIRED           L 005060
         BZ    *+14                BR IF NOT                            L 005070
         AP    LOGLIST+IOPSRCNT(4),=P'1' ADJUST LINE COUNT              L 005080
         MVI   0(R1),SPCE2AFT      ESTABLISH NEXT DOUBLE SPACE          L 005090
         TM    PRINTSW,PRSWBLS3    IS TRIPLE SPACING REQUIRED           L 005100
         BZ    *+14                BR IF NOT                            L 005110
         AP    LOGLIST+IOPSRCNT(4),=P'2' ADJUST LINE COUNT              L 005120
         MVI   0(R1),SPCE3AFT      ESTABLISH NEXT TRIPLE SPACE          L 005130
        SUBOUT ,                   RETURN TO CALLER                     L 005140
         EJECT                                                          L 005150
*********************************************************************** L 005160
*        BATCH LOG STATUS REPORT HEADING ROUTINE                      * L 005170
*********************************************************************** L 005180
         SPACE 1                                                        L 005190
HEADLOG  SUBIN SAVE=R4             PRINT HEADINGS                       L 005200
         MVC   LOGDATE,$DATEREP    ADD DATE TO HEADINH                  L 005210
         MVI   0(R1),PAGESKIP      ESTABLISH PAGE SKIP                  L 005220
         CBAL  R4,PRNTLOG          SKIP TO NEX PAGE                     L 005230
         MVI   0(R1),SPCE3AFT      ESTABLISH TRIP                       L 005240
         MVC   1(L'LOGHEAD1,R1),LOGHEAD1 ADD HEADING TO BUFFER          L 005250
         CBAL  R4,PRNTLOG          PRINT HEADING LINE                   L 005260
         MVC   1(L'LOGHEAD2,R1),LOGHEAD2 ADD HEADING TO LINE            L 005270
         CBAL  R4,PRNTLOG          PRINT HEADING LINE                   L 005280
         MVI   0(R1),SPCE2AFT      ESTABLISH DOUBLE SPACE               L 005290
         MVC   42(L'LOGHEAD3,R1),LOGHEAD3 ADD HEADING TO LINE           L 005300
         CBAL  R4,PRNTLOG          PRINT HEADING LINE                   L 005310
         COUNT LOGLIST,3           INCREMENT LINE COUNTER               L 005320
         AP    PGECNTLG,$ONE        INCREMENT PAG E COUNT               L 005330
         EDIT  LOGPAGE,PGECNTLG,'XXX0' EDIT PAGE NUMBER IN LINE         L 005340
        SUBOUT RESTORE=R4          RETURN                               L 005350
         EJECT                                                          L 005360
*********************************************************************** L 005370
*        WRITE TO SYSUT2                                              * L 005380
*********************************************************************** L 005390
         SPACE 1                                                        L 005400
PUTUT2   SUBIN SAVE=R4             PRESERVE REGISTERS                   L 005410
         IOM   PUTM,SYSUT2,(R6)    WRITE TO SYSUT2                      L 005420
        SUBOUT RESTORE=R4          RETURN TO CALLER                     L 005430
         EJECT                                                          L 005440
*********************************************************************** L 005450
*        WRITE TO SUSPOUT                                             * L 005460
*********************************************************************** L 005470
         SPACE 1                                                        L 005480
PUTSUSP  SUBIN SAVE=R4             PRESERVE REGISTERS                   L 005490
         IOM   PUTM,SUSPOUT,(R6)   WRITE TO SUSPOUT                     L 005500
        SUBOUT RESTORE=R4          RESTOE  EGISTERS & RETURN TO CALLER  L 005510
         EJECT                                                          L 005520
*********************************************************************** L 005530
*        WRITE TO DELETED                                             * L 005540
*********************************************************************** L 005550
         SPACE 1                                                        L 005560
PUTDLET  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 005570
         IOM   PUTM,DELETED,(R6)   WRITE TO DELETED                     L 005580
        SUBOUT RESTORE=R4          RETURN TO CALLER                     L 005590
         EJECT                                                          L 005600
*********************************************************************** L 005610
*        WRITE TO DUPLICATE                                           * L 005620
*********************************************************************** L 005630
         SPACE 1                                                        L 005640
PUTDUP   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 005650
         IOM   PUTM,DUPLICAT,(R6)  WRITE TO 'DUPLICAT'                  L 005660
        SUBOUT RESTORE=R4          RESTORE & RETRN TO CALLER            L 005670
         EJECT                                                          L 005680
*********************************************************************** L 005690
*        WRITE TO INTRDR                                              * L 005700
*********************************************************************** L 005710
         SPACE 1                                                        L 005720
PUTINTR  SUBIN SAVE=R4             PRESRRVE RETURN ADDRESS              L 005730
         IOM   PUTM,INTRDR,(R6)    WRITE TO IINTRDR                     L 005740
        SUBOUT RESTORE=R4          RESTORE REGISTERS AND RETURN         L 005750
         EJECT                                                          L 005760
*********************************************************************** L 005770
*        WRITE TO LOGOUT                                              * L 005780
*********************************************************************** L 005790
         SPACE 1                                                        L 005800
*        ON ENTRY, R1 POINTS AT THE RECORD TO BE WRITTEN                L 005810
         SPACE 1                                                        L 005820
PUTLOG   SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              L 005830
         CBAL  R4,BLDLOG           WRITE BATCH LOG STATUS REPORT        L 005840
         CLI   0(R1),C'R'          HAS BATCH BEEN REJECTED FROM SYSTEM  L 005850
         BE    PUTLOGX             DON'T WRITE TO BATCH LOG IF YES      L 005860
         IOM   PUTM,LOGOUT,(R1)    WRITE TO LOGOUT                      L 005870
PUTLOGX SUBOUT RESTORE=R4          RESTORE & RETURB TO CALLER           L 005880
         EJECT                                                          L 005890
*********************************************************************** L 005900
*        SUPPLY DEFAULT BLOCKSIZE IF NOT CODED                        * L 005910
*********************************************************************** L 005920
         SPACE 1                                                        L 005930
BLKSZRTN IOM   BLKSZRTN,TYPE=DEF   GENERATE DEFAULT ROUTINE             L 005940
         SPACE 5                                                        L 005950
*********************************************************************** L 005960
*        COMPLETE SYSUT1 DCB                                          * L 005970
*********************************************************************** L 005980
         SPACE 1                                                        L 005990
UT1LRECL SUBIN ,                   SUPPLY DEFAULT LRECL                 L 006000
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 006010
         CLC   DCBLRECL,=F'0'      TEST IF LRECL SUPPLIED               L 006020
         BNE   *+8                 BYPASS DEFAULT IF YES                L 006030
         MVI   DCBLRECL+1,80       FORCE LRECL TO 80                    L 006040
         MVC   $RECLUT1,DCBLRECL   PRESERVE SYSUT1 LRECL                L 006050
         DROP  R1                  DROP DCB ADDRESSABILITY              L 006060
        SUBOUT RETURN=BLKSZRTN     GO TEST BLKSIZE                      L 006070
         EJECT                                                          L 006080
*********************************************************************** L 006090
*        COMPLETE SYSUT2 DCB                                          * L 006100
*********************************************************************** L 006110
         SPACE 1                                                        L 006120
UT2LRECL SUBIN ,                   SUPPLY DEFAULT LRECL                 L 006130
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 006140
         L     R15,SYSUT1+IOPSDCB  GET ADDRESS OF SYSUT1 DCB            L 006150
         CLI   DCBRECFM,0          IS SYSUT2 RECFM SUPPLIED             L 006160
         BNE   *+10                BR IF RECFM SUPPLIED                 L 006170
         MVC   DCBRECFM,DCBRECFM-IHADCB(R15) PROPAGATE SYSUT1 RECFM     L 006180
         CLC   DCBLRECL,=F'0'      TEST IF LRECL SUPPLIED               L 006190
         BNE   *+14                BRANCH TO VALIDATE IF YES            L 006200
         MVC   DCBLRECL,$RECLUT2   SUPPLY DEFAULT LRECL                 L 006210
         B     BLKSZRTN            GO TEST BLKSIZE                      L 006220
         CLC   DCBLRECL,$RECLUT2   TEST IF SAME AS MS02 SPECIFICATION   L 006230
         BE    BLKSZRTN            GO TEST BLKSIZE IF SAME              L 006240
         MVC   $COMPCDE,COND16     SET COMPLETION CODE OF 16            L 006250
         MVI   0(R5),SPCE2AFT      ESTABLISH DOUBLE SPACE               L 006260
         CBAL  R4,PRINT             AND PRINT IT                        L 006270
         LINE  LINE04,P=N          SET UP ERROR MESSAGE                 L 006280
         CBAL  R4,PRINT             AND PRINT                           L 006290
         ABEND 36                  GO TERMINATE ABNORMALLY              L 006300
         DROP  R1                  DROP DCB ADDRESSABILITY              L 006310
         EJECT                                                          L 006320
*********************************************************************** L 006330
*        COMPLETE INTRDR DCB                                          * L 006340
*********************************************************************** L 006350
         SPACE 1                                                        L 006360
EXINTRDR SUBIN ,                   ENTER ROUTINE                        L 006370
         USING IHADCB,R1           ESTABLISF DCB ADDRESSABILITY         L 006380
         CLI   DCBBUFNO,X'00'      IS BUFNO SUPPLIED                    L 006390
         BNE   *+8                 BR IF BUFNO SUPPLIED                 L 006400
         MVI   DCBBUFNO,X'01'      FORCE SINGLE BUFFERING               L 006410
         CLC   DCBLRECL,=H'0'      TEST IF LRECL SUPPLIED               L 006420
         BNE   *+10                BR IF LRECL SUPPLIED                 L 006430
         MVC   DCBLRECL,=H'80'     FORCE LRECL OF 80                    L 006440
        SUBOUT RETURN=BLKSZRTN     GO DET BLKSIZE                       L 006450
         DROP  R1                  DROP DCB AGGRESSABILITY              L 006460
         EJECT                                                          L 006470
*********************************************************************** L 006480
*        I/O ERROR ROUTINE                                            * L 006490
*********************************************************************** L 006500
         SPACE 1                                                        L 006510
*        THIS ROUTINE RECEIVES CONTROL FROM THE I/O ERROR INTERFACE     L 006520
*         ROUTINE IN THE NUCLEUS ( IOEREXIT IN BUDGIE3 ) AFTER THE      L 006530
*         INTERFACE ROUTINE HAS RE-ESTABLISHED BUDGIE'S REGISTERS, AND  L 006540
*         ENSURED THAT THERE IS NO RECURSION.                           L 006550
         SPACE 1                                                        L 006560
         SPACE 1                                                        L 006570
IOERRTN  SUBIN ,                   ENTERI/O ERROR ROUTINE               L 006580
IOERROR1 IOM   IOERROR,(R5),PRINT,IOERRORX,TYPE=DEF                     L 006590
         SPACE 1                                                        L 006600
IOERRORX ABEND 76                  ABEND TO DRAW ATTENTION TO ERROR     L 006610
         TITLE 'BUDGIE3L - MISCELLANEOUS CONSTANTS AND FIELDS'          L 006620
LOGSPCE  DC    X'09'               SPACE 1 BY DEFAULT                   L 006630
LOGHEAD1 DS    0CL126              1ST HEADING LINE                     L 006640
         DC    C'BUDGIE3:  BATCH  LOG  STATUS  REPORT'                  L 006650
         DC    CL52' '                                                  L 006660
         DC    C'DATE: '                                                L 006670
LOGDATE  DS    CL9                 RUN DATE                             L 006680
         DC    CL15' '                                                  L 006690
         DC    C'PAGE'                                                  L 006700
LOGPAGE  DC    C'   1'             PAGE NUMBER                          L 006710
LOGHEAD2 DC    C'*-BATCH NUMBER-*   *-----STATUS-----*     DATE        *L 006720
               DATE       CARDS      CARDS     HARD     SOFT    BATCH  *L 006730
                   SUBMITTOR'                                           L 006740
LOGHEAD3 DC    C'ENTERED     ACCEPTED   ENTERED   RETAINED   ERRORS   E*L 006750
               RRORS    TYPE         ID'                                L 006760
         SPACE 1                                                        L 006770
LOGMESS1 DC    C'ACCEPTED'                                              L 006780
LOGMESS2 DC    C'SUSPENSEREJECTED'                                      L 006790
         SPACE 2                                                        L 006800
BBSPCE   DC    X'09'               SPACE 1 BY DEFAULT                   L 006810
BBHEAD01 DS    0CL127              FIRST HEADING LINE                   L 006820
         DC    CL2' '                                                   L 006830
BB01MS01 DC    CL74'BUDGIE3: BATCH BALANCING REPORT'                    L 006840
         DC    CL13' '                                                  L 006850
         DC    C'DATE: '                                                L 006860
BB01DATE DS    CL9                 RUN DATE                             L 006870
         DC    CL15' '                                                  L 006880
         DC    C'PAGE'                                                  L 006890
BB01PAGE DC    CL4'   1'           PAGE NUMBER                          L 006900
BBHEAD02 DS    0CL87               SECOND HEADING LINE                  L 006910
         DC    CL2' '                                                   L 006920
         DC    C'BATCH NUMBER: '                                        L 006930
BB02BNO  DC    CL21' '             BATCH NUMBER                         L 006940
         DC    CL20' '                                                  L 006950
BB02SUB  DC    C'SUBMITTOR: '                                           L 006960
BB02SID  DC    CL19' '             SUBMITTOR ID ( OPTIONAL )            L 006970
BB02SUBN DC    C'SUBMITTOR: '                                           L 006980
BBHEAD03 DS    0CL132              THIRD HEADING LINE                   L 006990
         DC    CL2' '                                                   L 007000
         DC    C'CARD     0        1         2         3         4     *L 007010
                   5         6         7         8'                     L 007020
         DC    CL35' '                                                  L 007030
         DC    C'REJECT'                                                L 007040
BBHEAD04 DS    0CL132                                                   L 007050
         DC    CL2' '                                                   L 007060
         DC    C' NO.     123456789012345678901234567890123456789012345*L 007070
               67890123456789012345678901234567890'                     L 007080
         DC    C'   *--------- MESSAGE ----------*  (****)'             L 007090
         EJECT                                                          L 007100
SYSINCNT DC    PL4'0'              TRUE SYSIN RECORD COUNT              L 007110
PGECNTBB DC    PL2'1'              PAGE COUNT FOR PRINT                 L 007120
PGECNTLG DC    PL2'1'              PAGE COUNT FOR LOGLIST               L 007130
PGECNTSY DC    PL2'1'              PAGE COUNT FOR SYSPRINT              L 007140
         SPACE 1                                                        L 007150
PARMIDP  DS    CL1                 POSN OF SUBMITTOR ID                 L 007160
PARMIDL  DS    CL1                 LGTH OF SUBMITTOR ID                 L 007170
PARMIDC  DC    CL8' '              SUBMITTOR ID                         L 007180
EDITCNO  DC    X'4020202120202020' EDIT MASK FOR CARD NUMBER            L 007190
EDITPL3  DC    X'4040202020212040'                                      L 007200
         SPACE 1                                                        L 007210
         LTORG                                                          L 007220
         SPACE 5                                                        L 007230
LINE01   DC    C'BDG3L-001-E  THE FOLLOWING CONTROL CARD IS UNRECOGNISA*L 007240
               BLE AND HAS BEEN IGNORED'                                L 007250
LINE04   DC    C'BDG3L-004-C  MS02 SPECIFICATION OF RECORD LENGTH DIFFE*L 007260
               RS FROM THE JCL - RUN TERMINATED'                        L 007270
LINE07   DC    CL9' '                                                   L 007280
LINE07T  DC    CL75'BUDGIE CONTROL CARDS ARE - '                        L 007290
         DC    CL5' '                                                   L 007300
         DC    C'PAGE'                                                  L 007310
LINE07P  DC    X'40202021'         EDIT MASK FOR PAGE COUNT             L 007320
         DC    CL35' '                                                  L 007330
         EJECT                                                          L 007340
EXITLBLK DC    X'85',AL3(BLKSZRTN) DEFAULT BLOCKSIZE ROUTINE            L 007350
EXITLUT1 DC    X'85',AL3(UT1LRECL) LRECL ROUTINE FOR SYSUT1             L 007360
EXITLUT2 DC    X'85',AL3(UT2LRECL) LRECL ROUTINE FOR SYSUT2             L 007370
EXITLINT DC    X'85',AL3(EXINTRDR) SET UP INTRDR DEFAULTS               L 007380
         SPACE 1                                                        L 007390
         PRINT NOGEN               SUPPRESS MACRO EXPANSION             L 007400
DCB01    DCB   DDNAME=SYSUT1,                                          *L 007410
               DSORG=PS,                                               *L 007420
               MACRF=GM,                                               *L 007430
               RECFM=FB,                                               *L 007440
               EODAD=EODUT1,                                           *L 007450
               SYNAD=#IOERROR,                                         *L 007460
               EXLST=EXITLUT1                                           L 007470
         SPACE 3                                                        L 007480
DCB02    DCB   DDNAME=SYSUT2,                                          *L 007490
               DSORG=PS,                                               *L 007500
               MACRF=PM,                                               *L 007510
               SYNAD=#IOERROR,                                         *L 007520
               EXLST=EXITLUT2                                           L 007530
         SPACE 3                                                        L 007540
DCB03    DCB   DDNAME=SYSPRINT,                                        *L 007550
               DSORG=PS,                                               *L 007560
               MACRF=PL,                                               *L 007570
               RECFM=FBM,                                              *L 007580
               LRECL=133,                                              *L 007590
               SYNAD=#IOERROR,                                         *L 007600
               EXLST=EXITLBLK                                           L 007610
         SPACE 3                                                        L 007620
DCB04    DCB   DDNAME=SYSIN,                                           *L 007630
               DSORG=PS,                                               *L 007640
               MACRF=GL,                                               *L 007650
               RECFM=FB,                                               *L 007660
               LRECL=80,                                               *L 007670
               EODAD=EODIN,                                            *L 007680
               SYNAD=#IOERROR,                                         *L 007690
               EXLST=EXITLBLK                                           L 007700
         EJECT                                                          L 007710
DCB05    DCB   DDNAME=LOGIN,                                           *L 007720
               DSORG=PS,                                               *L 007730
               MACRF=GL,                                               *L 007740
               RECFM=FB,                                               *L 007750
               LRECL=80,                                               *L 007760
               EODAD=EODLOGIN,                                         *L 007770
               SYNAD=#IOERROR,                                         *L 007780
               EXLST=EXITLBLK                                           L 007790
         SPACE 3                                                        L 007800
DCB06    DCB   DDNAME=LOGOUT,                                          *L 007810
               DSORG=PS,                                               *L 007820
               MACRF=PM,                                               *L 007830
               RECFM=FB,                                               *L 007840
               LRECL=80,                                               *L 007850
               SYNAD=#IOERROR,                                         *L 007860
               EXLST=EXITLBLK                                           L 007870
         SPACE 3                                                        L 007880
DCB07    DCB   DDNAME=LOGLIST,                                         *L 007890
               DSORG=PS,                                               *L 007900
               MACRF=PL,                                               *L 007910
               RECFM=FBM,                                              *L 007920
               LRECL=133,                                              *L 007930
               SYNAD=#IOERROR,                                         *L 007940
               EXLST=EXITLBLK                                           L 007950
         SPACE 3                                                        L 007960
DCB08    DCB   DDNAME=PRINT,                                           *L 007970
               DSORG=PS,                                               *L 007980
               MACRF=PL,                                               *L 007990
               RECFM=FBM,                                              *L 008000
               LRECL=133,                                              *L 008010
               SYNAD=#IOERROR,                                         *L 008020
               EXLST=EXITLBLK                                           L 008030
         EJECT                                                          L 008040
DCB09    DCB   DDNAME=WORK,                                            *L 008050
               DSORG=PS,                                               *L 008060
               MACRF=(PM,GL),                                          *L 008070
               RECFM=FB,                                               *L 008080
               SYNAD=#IOERROR,                                         *L 008090
               EODAD=WORKEOD                                            L 008100
         SPACE 3                                                        L 008110
DCB10    DCB   DDNAME=SUSPIN,                                          *L 008120
               DSORG=PS,                                               *L 008130
               MACRF=GL,                                               *L 008140
               RECFM=FB,                                               *L 008150
               EODAD=EODSUSP,                                          *L 008160
               SYNAD=#IOERROR,                                         *L 008170
               EXLST=EXITLUT1                                           L 008180
         SPACE 3                                                        L 008190
DCB11    DCB   DDNAME=SUSPOUT,                                         *L 008200
               DSORG=PS,                                               *L 008210
               MACRF=PM,                                               *L 008220
               RECFM=FB,                                               *L 008230
               SYNAD=#IOERROR,                                         *L 008240
               EXLST=EXITLUT1                                           L 008250
         SPACE 5                                                        L 008260
DCB12    DCB   DDNAME=DELETED,                                         *L 008270
               DSORG=PS,                                               *L 008280
               MACRF=PM,                                               *L 008290
               RECFM=FB,                                               *L 008300
               SYNAD=#IOERROR,                                         *L 008310
               EXLST=EXITLUT1                                           L 008320
         EJECT                                                          L 008330
DCB13    DCB   DDNAME=SYSLIN,                                          *L 008340
               DSORG=PS,                                               *L 008350
               MACRF=GL,                                               *L 008360
               RECFM=FB,                                               *L 008370
               LRECL=133,                                              *L 008380
               SYNAD=#IOERROR,                                         *L 008390
               EODAD=EODLIN,                                           *L 008400
               EXLST=EXITLBLK                                           L 008410
         SPACE 5                                                        L 008420
DCB14    DCB   DDNAME=DUPLICAT,                                        *L 008430
               DSORG=PS,                                               *L 008440
               MACRF=PM,                                               *L 008450
               RECFM=FB,                                               *L 008460
               SYNAD=#IOERROR,                                         *L 008470
               EXLST=EXITLUT1                                           L 008480
         SPACE 5                                                        L 008490
DCB15    DCB   DDNAME=INTRDR,                                          *L 008500
               DSORG=PS,                                               *L 008510
               MACRF=PM,                                               *L 008520
               EXLST=EXITLINT,                                         *L 008530
               SYNAD=#IOERROR                                           L 008540
         PRINT GEN                 RE-ESTABLISH MACRO EXPANSION         L 008550
        SCSEND L                   TERMINATE CSECT BUDGIE3L             L 008560
         END                                                            L 008570
         SPACE 1                                                        L 008580
         REPRO                                                          L 008590
 IDENTIFY BUDGIE3L('I/O SUB-ROUTINES')                                  L 008600
         END                                                            L 008610
