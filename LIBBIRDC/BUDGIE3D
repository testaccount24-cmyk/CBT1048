         TITLE 'BUDGIE3D - INTERNAL MACROS'                             D 000010
         MACRO                                                          D 000020
         $CB   &PRINT=OFF                                               D 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        D 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           D 000050
               TITLE 'CBPREFIX - CONTROL BLOCK PREFIX'                  D 000060
      CBPREFIX ,                   GENERATE DSECT                       D 000070
               TITLE 'CB13 - CB13 CONTROL BLOCK'                        D 000080
         CB13  ,                   GENERATE DSECT                       D 000090
               TITLE 'CB30 - CB30 CONTROL BLOCK'                        D 000100
         CB30                      GENERATE DSECT                       D 000110
               TITLE 'CB32 - CB32 CONTROL BLOCK'                        D 000120
         CB32  ,                   GENERATE DSECT                       D 000130
               TITLE 'CB33 - CB33 CONTROL BLOCK'                        D 000140
         CB33  ,                   GENERATE DSECT                       D 000150
               TITLE 'CB34 - CB34 CONTROL BLOCK'                        D 000160
         CB34  ,                   GENERATE DSECT                       D 000170
               TITLE 'CB36 - CB36 CONTROL BLOCK'                        D 000180
         CB36  ,                   GENERATE DSECT                       D 000190
               TITLE 'CB37 - CB37 CONTROL BLOCK'                        D 000200
         CB37  ,                   GENERATE DSECT                       D 000210
               TITLE 'CB40 - CB40 CONTROL BLOCK'                        D 000220
         CB40  ,                   GENERATE DSECT                       D 000230
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     D 000240
         CCB   ,                   GENERATE DSECT                       D 000250
               TITLE '     - CSECT IDENTIFICATION PREFIX'               D 000260
       CSECTID ,                   GENERATE DSECT                       D 000270
               TITLE '     - GENERAL EQUATES'                           D 000280
       EQUATES ,                   GENERATE EQUATES                     D 000290
               TITLE 'MS30 - MS30 CONTROL CARD'                         D 000300
          MS30  ,                   GENERATE DSECT                      D 000310
               TITLE 'MS31 - MS31 CONTROL CARD'                         D 000320
         MS31  ,                   GENERATE DSECT                       D 000330
               TITLE 'MS32 - MS32 CONTROL CARD'                         D 000340
         MS32  ,                   GENERATE DSECT                       D 000350
               TITLE 'MS33 - MS33 CONTROL CARD'                         D 000360
         MS33  ,                   GENERATE DSECT                       D 000370
               TITLE 'MS34 - MS34 CONTROL CARD'                         D 000380
         MS34  ,                   GENERATE DSECT                       D 000390
               TITLE 'MS35 - MS35 CONTROL CARD'                         D 000400
         MS35  ,                   GENERATE DSECT                       D 000410
               TITLE 'MS36 - MS36 CONTROL CARD'                         D 000420
         MS36  ,                   GENERATE DSECT                       D 000430
               TITLE 'MS37 - MS37 CONTROL CARD'                         D 000440
         MS37  ,                   GENERATE DSECT                       D 000450
               TITLE 'MS38 - MS38 CONTROL CARD'                         D 000460
         MS38  ,                   GENERATE DSECT                       D 000470
               TITLE 'MS40 - MS40 CONTROL CARD'                         D 000480
         MS40  ,                   GENERATE DSECT                       D 000490
               TITLE 'MS41 - MS41 CONTROL CARD'                         D 000500
         MS41  ,                   GENERATE DSECT                       D 000510
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        D 000520
         MEND                                                           D 000530
         SPACE 5                                                        D 000540
BUDGIE3D CSECT                                                          D 000550
         $CB   ,                   GENERATE DSECTS AND EQUATES          D 000560
         TITLE 'BUDGIE3D - PROCESS CONTROL CARDS'                       D 000570
        SCSECT D                   DEFINE START OF CSECT BUDGIE3D       D 000580
         ENTRY MS40CNT             COUNT OF MS40 CARDS ENCOUNTERED      D 000590
         ENTRY MS41CNT             COUNT OF MS41 CARDS ENCOUNTERED      D 000600
         ENTRY READCC3             PROCESS CONTROL CARDS ( CONT'D )     D 000610
         TITLE 'BUDGIE3D - PROCESS CONTROL CARDS'                       D 000620
*********************************************************************** D 000630
*        PROCESS CONTROL CARDS ¬Å CONT'D ) - MAIN-LINE                 * D 000640
*********************************************************************** D 000650
         SPACE 1                                                        D 000660
READCC3  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 000670
         LA    R4,READCC3X         SET CBAL RETURN ADDRESS              D 000680
         CCTST MS30                GO PROCESS MS30 CONTROL CARDS        D 000690
         CCTST MS32                GO PROCESS MS32 CONTROL CARDS        D 000700
         CCTST MS33                GO PROCESS MS33 CONTROL CARDS        D 000710
         CCTST MS34                GO PROCESS MS34 CONTROL CARDS        D 000720
         CCTST MS36                PROCESS MS36 CONTROL CARDS           D 000730
         CCTST MS37                PROCESS MS37 CONTROL CARDS           D 000740
         CCTST MS40                GO PROCESS MS40 CONTROL CADS         D 000750
         CCTST MS41                GO PROCESS MS41 CONTROL CADS         D 000760
READCC3X SUBOUT RESTORE=R4         RESTORE AND RETURN                   D 000770
         EJECT                                                          D 000780
*********************************************************************** D 000790
*        PROCESS MS30 CONTROL CARD                                    * D 000800
*********************************************************************** D 000810
         SPACE 1                                                        D 000820
         USING MS30CARD,R6         ESTABLISH C/ ADDRESSABILITY          D 000830
         USING CB30NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 000840
CCMS30   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 000850
         LA    R2,CB30LGTH         SET C/B LENGTH                       D 000860
         GETCB CB30                ACQUIRE & CHAIN NEW CONTROL BLOCK    D 000870
         MVC   CB30TID,MS30TID     SET TEST I D ( LABEL )               D 000880
         CLI   MS30RID,C'N'        IS THIS A NUMERIC RANGE/LITERAL      D 000890
         BNE   *+8                 BR IF NOT NUMERIC                    D 000900
         OI    CB30SW,SW30PAKD     FLAG AS NUMERIC                      D 000910
         CLI   MS30TYPE,C'X'       IS THIS AN AXTERNAL RANGE            D 000920
         BNE   *+8                 BR IF NOT                            D 000930
         OI    CB30SW,SW30EXT      FLAG AS 'EXTERNAL' RANGE TEST        D 000940
         MVC   CB30RNG1,MS30RNG1   ADD START OF RANGE TO C/B            D 000950
         MVC   CB30RNG2,MS30RNG2   ADD END OF RANGE TO C/B              D 000960
         TM    CB30SW,SW30PAKD     IS THIS A NUMERIC RANGE              D 000970
         BZ    CCMS3001            BR IF NIT NUMERIC RANGE              D 000980
       NUMERIC MS30RNG1,,SIGNED    TEST IF FIELD NUMERIC                D 000990
         ZAP   CB30RNG1,$WRKPACK   STORE PACKED VALUE IN C/B            D 001000
       NUMERIC MS30RNG2,,SIGNED    TEST IF FIELD NUMERIC                D 001010
         ZAP   CB30RNG2,$WRKPACK   STORE PACKED VALUE                   D 001020
CCMS3001 SUBOUT RESTORE=R4         RESTORE AND RETURN                   D 001030
         DROP  R6,R8               DROP ADDRESSABILITY                  D 001040
         EJECT                                                          D 001050
*********************************************************************** D 001060
*        PROCESS MS32 CONTROL CARD                                    * D 001070
*********************************************************************** D 001080
         SPACE 1                                                        D 001090
         USING MS32CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 001100
         USING CB32NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 001110
CCMS32   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 001120
         LA    R2,CB32LGTH         SET C/B LENGTH                       D 001130
         GETCB CB32                ACQUIRE & CHAIN NEW CONTROL BLOCK    D 001140
         MVC   CB32TID,MS32TID     SET TEST ID ( LABEL )                D 001150
         MVC   CB32ICDE,MS32ICL    ASSUME LITERAL INPUT CODE & STORE    D 001160
         OI    CB32SW1,SW321ICL    ASSUME INPUT CODE LITERAL & FFLAG    D 001170
         CLI   MS32ICLF,C'L'       TEST IF INPUT CODE IS              I D 001180
         BE    CCMS3201            BR IF INPUT CODE IS A LITERAL        D 001190
         NI    CB32SW1,FF-SW321ICL SET OFF 'LITERAL' FLAG               D 001200
         OI    CB32SW1,SW321ICS    FLAG TO DERIVE INPUT CODE FROM MS13  D 001210
         CLI   MS32ICLF,C'S'       TEST IF INPUT CODE IS TO BE DERIVED  D 001220
         BE    CCMS3201            BR IF INPUT CODE IS TO BE DERIVED    D 001230
         NI    CB32SW1,FF-SW321ICS SET OFF 'DERIVE' FLAG                D 001240
       NUMERIC MS32ICP             ENSURE POSN I NUMERIC                D 001250
         CVB   R1,$WRKPACK         CONVERT POSN TO BINARY               D 001260
         STC   R1,CB32ICP          PRESERVE POSN OF INPUT CURR CODE     D 001270
CCMS3201 MVC   CB32OCDE,MS32OCL    ASSUME LITERAL OUTPUT CODE & STORE   D 001280
         OI    CB32SW1,SW321OCL    ASSUME OUTPUT CODE IS LITERAL & FLAG D 001290
         CLI   MS32OCLF,C'L'       TEST IF OUTPUT CODE IS LITERAL       D 001300
         BE    CCMS3202            BR IF OUTPUT CODDE ID A LITERAL      D 001310
         NI    CB32SW1,FF-SW321OCL SET OFF 'LITERAL' FLAG               D 001320
         OI    CB32SW1,SW321OCS    ASSUME OUTPUT CODE TO BE DERIVED     D 001330
         CLI   MS32OCLF,C'S'       TEST IF CODE TO BE ERIVED FROM MS13  D 001340
         BE    CCMS3202            BR IF CODE TO BE DERIVED             D 001350
         NI    CB32SW1,FF-SW321OCS SET OFF 'DERIVE' FLLAG               D 001360
       NUMERIC MS32OCP             ENSURE POSN OF CODE IS NUMERIC       D 001370
         CVB   R1,$WRKPACK         CONVERT POSN TO BINARY               D 001380
         STC   R1,CB32OCP          PRESERVE POSN OF OUTPUT CURR CODE    D 001390
         EJECT                                                          D 001400
*********************************************************************** D 001410
*        PROCESS MS32 CONTROL CARD ( CONT'D )                         * D 001420
*********************************************************************** D 001430
         SPACE 1                                                        D 001440
CCMS3202 OI    CB32SW1,SW321IVS    ASSUMEM INPUT FIELD TO BE TAKEN MS13 D 001450
         CLI   MS32INP,C'S'        TEST IF OUTPUT FIELD TO BE DERIVED   D 001460
         BE    CCMS3203            BR IF INPUT FIELD TO BE DERIVED      D 001470
         NI    CB32SW1,FF-SW321IVS SET OFF 'DERIVE' FLAG                D 001480
         PL    PPPLL,MS32INP,CB32INP CONVERT 'PPPLL' TO BINARY          D 001490
CCMS3203 CLI   MS32INT,C'P'        TEST IF INPUT VALUE IS PACKED        D 001500
         BNE   *+8                 BR IF NOT                            D 001510
         OI    CB32SW2,SW322IVP    FLAG THAT INPUT IS PACKED            D 001520
CCMS3204 OI    CB32SW1,SW321NOC    ASSUME NO CURRENCY CONV REQUIRED     D 001530
         CLC   MS32OUTP(5),$SPACES  TEST IF ANY OUTPUT FIELD            D 001540
         BE    CCMS3205            BR IF NO OUTPUT FIELD                D 001550
         NI    CB32SW1,FF-SW321NOC SET OFF 'NO COONV' FLAG              D 001560
         OI    CB32SW2,SW322OVS    ASSUME OUTPUT FIELD TO BE DERIVED    D 001570
         CLI   MS32OUTP,C'S'       EST IF OUTPUT FIELD TO BE DERIVED    D 001580
         BE    CCMS3205            BR IF OUTPUT POSN TO BE DERIVED      D 001590
         NI    CB32SW2,FF-SW322OVS SET OFF 'DERIVE' FLAG                D 001600
         PL    PPPLL,MS32OUTP,CB32OUTP CONVERT OUTPUT PPPLL TO BINARY   D 001610
CCMS3205 CLI   MS32OUTT,C'P'       TEST IF OUTPUT REQUIRED PACKED       D 001620
         BNE   *+8                 BR IF NOT                            D 001630
         OI    CB32SW2,SW322OVP    FLAG OUTPUT AS PACKED                D 001640
         EJECT                                                          D 001650
*********************************************************************** D 001660
*        PROCESS MS32 CONTROL CARD ( CONT'D )                         * D 001670
*********************************************************************** D 001680
         SPACE 1                                                        D 001690
CCMS3206 EQU   *                   CONTINUE PROCESSING                  D 001700
CCMS3207 CLC   MS32RTEP(5),$SPACES  TEST IF CONVERSION RATE REQUIRER    D 001710
         BE    CCMS3208            BR IF NO CONV  RATE REQUIRED         D 001720
         OI    CB32SW1,SW321RTE    SET TO EXTRACT CONV RATE             D 001730
         OI    CB32SW2,SW322RTS    ASSUME RATE PL TO BE DERIVED         D 001740
         CLI   MS32RTEP,C'S'       TEST IF RATE PL TO BE DERIVED        D 001750
         BE    CCMS3208            BR IF RATE POSN TO BE DERIVED        D 001760
         NI    CB32SW2,FF-SW322RTS SET OFF 'DERIVE' FLAG                D 001770
         PL    PPPLL,MS32RTEP,CB32RTEP CONVERT PPPLL TO BINATY          D 001780
CCMS3208 CLI   MS32RTET,C'P'       IS CONV RATE REQUIRED PACKED         D 001790
         BNE   *+8                 BR IF NOT                            D 001800
         OI    CB32SW2,SW322RTP    FLAG TO OUTPUT RATE AS PACKED        D 001810
CCMS3209 CLC   MS32NMIP,$SPACES     TEST IF NAME OF INPUT CODE REQUIRED D 001820
         BE    CCMS3210            BR IF NOT                            D 001830
         OI    CB32SW2,SW322INM    FLAG THAT NAME IS REQUIRED           D 001840
       NUMERIC MS32NMIP            ENSURE POSN IS NUMERIC               D 001850
         CVB   R1,$WRKPACK         CONVERT POSN TO BINARY               D 001860
         STC   R1,CB32NMIP         PRESERVE POSN OF INPUT NAME          D 001870
CCMS3210 CLC   MS32NMOP,$SPACES    TEST IF NAME OF OUTPUT CODE REQUIRED D 001880
         BE    CCMS3211            BR IF NOT                            D 001890
         OI    CB32SW2,SW322ONM    FLAG THAT PUTPUT NAME IS REQUIRED    D 001900
       NUMERIC MS32NMOP            ENSURE THAT POSN IS NUMERIC          D 001910
         CVB   R1,$WRKPACK         CONVERT POSN TO BINARY               D 001920
         STC   R1,CB32NMOP         PRESERVE POSN OF OUTPUT NAME         D 001930
               EJECT                                                    D 001940
*********************************************************************** D 001950
*        PROCESS MS32 CONTROL CARD ( CONT'D )                         * D 001960
*********************************************************************** D 001970
         SPACE 1                                                        D 001980
CCMS3211 CLC   MS32VNOP,$SPACES     TEST IF VERSION NUMBER REQUIRED     D 001990
         BE    CCMS3212            BR IF NO                             D 002000
         OI    CB32SW2,SW322VNO    FLAG THAT VESRION NUMBER REQUIRED    D 002010
       NUMERIC MS32VNOP            ENSURE POSN IS NUMERIC               D 002020
         CVB   R1,$WRKPACK         CONVERT NUMBER TO BINARY             D 002030
         STC   R1,CB32VNOP         PRESERVE POSN OF VERSION NUMBER      D 002040
CCMS3212 CLI   MS32ERRI,C'1'       ARE WE TO ZEROISE IF ERROR           D 002050
         BNE   *+8                 BE IF NOT                            D 002060
         OI    CB32SW1,SW321ZRO    FLAG TO ZEROISE IF ERROR             D 002070
CCMS3213 PACK  $WRKPACK,MS32RNDN   ASSUME ROUNDING & PACK NO OF DIGITS  D 002080
         CLI   MS32RNDN,C' '       IS THERE ANY ROUNDING                D 002090
         BE    CCMS3214            BR IF NO ROUNDING                    D 002100
         CVB   R1,$WRKPACK         CONVERT NO OF DIGITS TO BINARY       D 002110
         STC   R1,CB32RNDN         PRESERVE NO OF DIGITS                D 002120
         CLI   MS32RNDF,C'A'       IS EVERYTHING TO BE ROUNDED          D 002130
         BNE   *+8                 BR IF NOT                            D 002140
         OI    CB32SW3,SW323RND    FLAG TO PERFORM ROUNDING             D 002150
         CLI   MS32RNDF,C'C'       IS CONMERCIAL ROUNDING RQUIRED       D 002160
         BNE   *+8                 BR IF NOT                            D 002170
         OI    CB32SW3,SW323COM    FLAG TO PERFORM COMMERCIAL ROUNDING  D 002180
CCMS3214 EQU   *                                                        D 002190
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   D 002200
         EJECT                                                          D 002210
*********************************************************************** D 002220
*        PROCESS MS33 CONTROL CARD                                    * D 002230
*********************************************************************** D 002240
         SPACE 1                                                        D 002250
         USING MS33CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 002260
         USING CB33NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 002270
CCMS33   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 002280
       NUMERIC MS33LEN1            ENSURE LENGTH IS NUMERIC             D 002290
         LA    R2,CB33LGTH         SET BASIC C/B LENGTH                 D 002300
         CLC   MS33POS1,=C'LIT'    TEST IF LITERAL SUPPLIED             D 002310
         BNE   CCMS3301            BR IF NO LITERAL                     D 002320
         CLC   MS33LEN1,$SPACES     WAS LENGTH OMITTED                  D 002330
         BNE   CCMS3306            BR I FLENGHT SUPPLIED                D 002340
         OI    SWERROR,SWEFLUSH    SET TO TERMINATE AFTER C/C SCAN      D 002350
         MVC   $COMPCDE,COND16     SET COMPLETION CODE                  D 002360
         LINE  LINE30              TELL OF ERROR                        D 002370
         B     CCMS33X             TERMINATE PROCESSING THIS CARD       D 002380
CCMS3306 CVB   R2,$WRKPACK         CONVERT LITERAL LENGTH TO BINARY     D 002390
         LA    R2,CB33LGTH(,R2)    INCREMANT BY BASIC DSECT LENGTH      D 002400
CCMS3301 GETCB CB33                ACQUIRE & CHAIN CONTROL BLOCK        D 002410
         CVB   R1,$WRKPACK         CONVERT LITERAL LENGTH TO BINARY     D 002420
         STC   R1,CB33LEN1         PRESERVE LENGTH IN C/B               D 002430
         MVC   CB33TID,MS33TID     PRESERVE TEST ID  ( LABEL )          D 002440
         CLC   MS33POS1,=C'LIT'    IS A LITERAL SUPPLIED                D 002450
         BNE   *+8                 BR IF NO LITERAL                     D 002460
         OI    CB33SW,SW33LIT      INDICATE LITERAL IS PRESENT          D 002470
         CLI   MS33TYPE,C'M'       IS THIS A MOVE OPERATION             D 002480
         BNE   CCMS3302            BR IF NOT A MOVE                     D 002490
         OI    CB33SW,SW33MOVE     FLAG AS A MOVE OPERATION             D 002500
         EJECT                                                          D 002510
*********************************************************************** D 002520
*        PROCESS MS33 CONTROL CAD ( CONT'D )                          * D 002530
*********************************************************************** D 002540
         SPACE 1                                                        D 002550
         CLI   MS33TYPE+1,C'U'     TEST FOR 'MU' OPERATION              D 002560
         BNE   *+8                 BR IF NOT 'MU'                       D 002570
         OI    CB33SW,SW33MU       FLAG AS 'MU' OPERATION               D 002580
         CLI   MS33TYPE+1,C'P'     TEST FOR 'MP' OPERATION              D 002590
         BNE   *+8                 BR IF NOT 'MP'                       D 002600
         OI    CB33SW,SW33MP       FLAG AS 'MP' OPERATION               D 002610
         B     CCMS3303            BR TO NEXT COMMON CODING             D 002620
CCMS3302 MVI   CB33TYPE,NE         ASSUME 'NE' OPERATION                D 002630
         CLC   MS33TYPE,=C'NE'     TEST IF ASSUMPTION CORRECT           D 002640
         BE    CCMS3303            BR IF ASSUMPTION CORRECT             D 002650
         MVI   CB33TYPE,GT         ASSUME 'GT' OPERATION                D 002660
         CLC   MS33TYPE,=C'GT'     TEST IF ASSUMPTION CORRECT           D 002670
         BE    CCMS3303            BR IF ASSUMPTION CORRECT             D 002680
         MVI   CB33TYPE,GE         ASSUME 'GE' OPERATION                D 002690
         CLC   MS33TYPE,=C'GE'     TEST IF ASSUMPTION CORRECT           D 002700
         BE    CCMS3303            BR IF ASSUMPTION CORRECT             D 002710
         MVI   CB33TYPE,LE         ASSUME 'LE' OPERATION                D 002720
         CLC   MS33TYPE,=C'LE'     TEST IF ASSUMPTION CORRECT           D 002730
         BE    CCMS3303            BR IF ASSUMPTION CORRECT             D 002740
         MVI   CB33TYPE,LT         ASSUME 'LT' OPERATION                D 002750
         CLC   MS33TYPE,=C'LT'     TEST IF ASSUMPTION CORRECT           D 002760
         BE    CCMS3303            BR IF ASSUMPTION CORRECT             D 002770
         MVI   CB33TYPE,EQ         ASSUME 'EQ' OPERATION                D 002780
CCMS3303 CLI   MS33CTYP,C'P'       IS IT COMPARE OF PACKED FIELDS       D 002790
         BNE   *+8                 BR IF NOT                            D 002800
         OI    CB33SW,SW33CPD      FLAG AS PACKED DECIMAL COMPARE       D 002810
         CLI   MS33CTYP,C'N'       IS IT COMPARE OF EBCDIC NUMERIC FLDS D 002820
         BNE   *+8                 BR IF NOT                            D 002830
         OI    CB33SW,SW33CNUM     FLAG AS COMPARE OF EBCDIC NUMERIC    D 002840
         CLC   MS33LEN2,$SPACES     TEST IF RECEIVING LENGTH SPECIFIED  D 002850
         BNE   *+10                BR IF NOT                            D 002860
         MVC   MS33LEN2,MS33LEN1   SET TO SAME AS 'FROM' LENGTH         D 002870
         PL    PPPLL,MS33POS2,CB33POS2 CONVERT 'PPPLL' OF 'TO' FIELD    D 002880
         EJECT                                                          D 002890
*********************************************************************** D 002900
*        PROCESS MS33 CONTROL CARD ( CONT'D )                         * D 002910
*********************************************************************** D 002920
         SPACE 1                                                        D 002930
         IC    R1,CB33LEN2         RETRIEVE 'TO' LENGTH                 D 002940
         BCTR  R1,0                DECREMENT FOR FUTURE EXECUTES        D 002950
         STC   R1,CB33LEN2         PRESERVE MODIFIED LENGTH             D 002960
         TM    CB33SW,SW33LIT      IS THERE A LITERAL                   D 002970
         BZ    CCMS3304            BR IF NO LITERAL                     D 002980
         SR    R1,R1               ZEROISE WORK REGISTER                D 002990
         IC    R1,CB33LEN1         RETRIEVE LENGTH OF LITERAL           D 003000
         BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE         D 003010
         EX    R1,CCMS33MV         MOVE LITERAL TO C/B                  D 003020
         B     CCMS3305            BR TO NEXT COMMON CODE               D 003030
CCMS3304 PL    PPPLL,MS33POS1,CB33POS1 CONVERT 'FROM' PPPLL TO BINARY   D 003040
CCMS3305 TM    CB33SW,SW33MU+SW33MP IS THERE A PACK/UNPACK TO PERFORM   D 003050
         BZ    *+10                BR IF NOT                            D 003060
         MVO   CB33LEN1,CB33LEN2   ESTABLISH L1||L2 FOR SUBSEQUENT EXEC D 003070
CCMS33X SUBOUT RESTORE=R4          RESTORE AND RETURN                   D 003080
         SPACE 1                                                        D 003090
CCMS33MV MVC   CB33LIT(0),MS33LIT  ADD LITERAL TO C/B                   D 003100
         DROP  R6,R8               DROP ADDRESSABILITY                  D 003110
         EJECT                                                          D 003120
*********************************************************************** D 003130
*        PROCESS MS34 CONTROL CARD                                    * D 003140
*********************************************************************** D 003150
         SPACE 1                                                        D 003160
         USING MS34CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 003170
         USING CB34NTRY,R8         ESTABLISH CB34 ADDRESSABILITY        D 003180
CCMS34   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 003190
         L     R8,$PTRCB34          GET ADDRESS OF PREVIOUS C/B         D 003200
         CLI   CB34FLAG,FLAGCB34   WAS IT A CB34                        D 003210
         BNE   CCMS3401            BR IF NOT TO BUILD ONE               D 003220
         CLC   CB34TID,MS34TID     WAS IT FOR THE SAME LABEL            D 003230
         BE    CCMS3402            BR IF YES TO ADD DATA TO LIST        D 003240
CCMS3401 NUMERIC MS34NLST          VERIFY THAT NO OF ELEMENTS IS NUMERI D 003250
         STH   R1,$FLDP            PRESERVE NO. OF ELEMENTS FOR LATER   D 003260
       NUMERIC MS34LLST            VERIFY THAT LENGTH OF ELEMENTS IS NU D 003270
         STC   R1,$FLDP+2          PRESERVE ELEMENT LENGTH FOR LATER    D 003280
         SR    R1,R1               SEROISE WORK REGISTER                D 003290
         SR    R3,R3               SEROISE WORK REGISTER                D 003300
         IC    R1,$FLDP             ADD NO OF ENTRIES TO R1             D 003310
         IC    R3,$FLDP+1          LENGTH OF EACH ENTRY INTO R3         D 003320
         MR    R2,R1               CALCULATE LENGTH OF LIST             D 003330
         LR    R10,R3              PRESERVE LENGTH OF LIST AREA         D 003340
         LA    R2,CB34LGTH(,R3)    ADD ON BASIB C/B LENGTH              D 003350
         GETCB CB34                ACQUIRE AND CHAIN C/B                D 003360
         MVC   CB34TID,MS34TID     ADD LABEL TO C/B                     D 003370
         MVC   CB34NLST(2),$FLDP    ADD NO OF ENTRIES & LENGTH          D 003380
         ST    R10,CB34LENO        SHOW ENTIRE LIST IS OUTSTANDING      D 003390
         LA    R10,CB34LIST        POINT AT 1ST BYTE OF LIST            D 003400
         ST    R10,CB34NPOS        PRESERVE AS ADRESS OF NEXT BYTE      D 003410
         EJECT                                                          D 003420
*********************************************************************** D 003430
*        PROCESS MS34 CONTROL CARD ( CONT'D )                         * D 003440
*********************************************************************** D 003450
         SPACE 1                                                        D 003460
CCMS3402 L     R1,CB34NPOS         GET ADDRESS OF 1ST AVAILABLE BYTE    D 003470
         L     R2,CB34LENO         GET LENGTH OF LIST UNUSED            D 003480
         CH    R2,=H'70'           IS IT LESS THAN 1 CARD               D 003490
         BH    CCMS3403            BR IF MORE THZN 1 CARD               D 003500
         BCTR  R2,0                DECREMENT FOR EXECURE                D 003510
         EX    R2,CCMS34MV         ADD DATA TO LIST                     D 003520
         XC    CB34LENO(8),CB34LENO ZEROISE OUTSTABDING LENGTH & ADDRES D 003530
         B     CCMS3404            BR TO NEXT COMMON CODE               D 003540
CCMS3403 MVC   0(70,R1),MS34LIST   ADD CARD'S DATA TO LIST              D 003550
         LA    R1,70(,R1)          INCREMENT TO NEXT AVAILABLE BYTE     D 003560
         ST    R1,CB34NPOS          ... AND PRESERVE IT                 D 003570
         SH    R2,=H'70'           CALCULATE OUTSTANDING LENGTH         D 003580
         BNL   CCMS3405            BR IF NOT -VE                        D 003590
         ABEND 8                   -VE SO C/C ERROR OVERWRITTEN CORE    D 003600
CCMS3405 ST    R2,CB34LENO         PRESERVE OUTSTANDING LENGTH          D 003610
CCMS3404 SUBOUT RESTORE=R4         RESTORE AND RETURN                   D 003620
CCMS34MV MVC   0(0,R1),MS34LIST    EXECUTED MOVE INSTRUCTION            D 003630
         DROP  R6,R8               DROP ADDRESSABILITY                  D 003640
         EJECT                                                          D 003650
*********************************************************************** D 003660
*        PROCESS MS36 CONTROL CARDS                                   * D 003670
*********************************************************************** D 003680
         SPACE 1                                                        D 003690
         USING MS36CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 003700
         USING CB36NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 003710
CCMS36   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 003720
         LA    R2,CB36LGTH         SET LENGTH OF C/B                    D 003730
         CLC   MS36POS2,=C'LIT'    IS OPERAND 2 A LITERAL               D 003740
         BNE   *+8                 BR IF NOT                            D 003750
         LA    R2,8(,R2)           INCRESE C/B SIZE TO ALLOW FOR LITERL D 003760
         GETCB CB36                ACQUIRE & CHAIN NEW C/B              D 003770
         MVC   CB36TID,MS36TID     SET TEST ID ( LABEL )                D 003780
         PL    PPPLL,MS36POS1,CB36POS1 CONVERT PPPLL OF OPERAND 1 TO BI D 003790
         CLC   MS36POS2,=C'LIT'    IS OPERAND 2 A LITERAL               D 003800
         BNE   CCMS3603            BR IF NOT LITERAL                    D 003810
         OI    CB36SW,SW36LIT      FLAG THAT OPERAND 2 IS A LITERAL     D 003820
       NUMERIC MS36LIT,,SIGNED     ENSURE THAT LITERAL IS NUMERIC       D 003830
         EJECT                                                          D 003840
*********************************************************************** D 003850
*        PROCESS MS36 CONTROL CARD ( CONT'D )                         * D 003860
*********************************************************************** D 003870
         SPACE 1                                                        D 003880
         PACK  CB36LIT,MS36LIT     PACK LITERAL VALUE INTO C/B          D 003890
         B     CCMS3604            GO PROCESS DEFINITION OF RESULT FIEL D 003900
CCMS3603 PL    PPPLL,MS36POS2,CB36POS2 CONVERT PPPLL OF OPERAND 2 TO BI D 003910
         CLC   MS36POS3(5),$SPACES IS RESULT DDEFINITION SUPPLIED       D 003920
         BNE   *+10                BR IF RESULT DEFINITION SUPPLIED     D 003930
         MVC   MS36POS3(7),MS36POS1 USE DEFINITION OF FLD1 BY DEFAULT   D 003940
CCMS3604 PL    PPPLL,MS36POS3,CB36POS3 CONVERT PPPLL OF RESULT TO BINRY D 003950
         CLI   MS36TYP1,C'P'       TEST IF 1ST OPERAND PACKED           D 003960
         BNE   *+8                 BR IF NOT PACJED                     D 003970
         OI    CB36SW,SW36PCK1     FLAG THAT OPERAND 1 IS PACKED        D 003980
         CLI   MS36TYP2,C'P'       TEST IF OPERAND 2 IS PACKED          D 003990
         BNE   *+8                 BR IF NOT PACKED                     D 004000
         OI    CB36SW,SW36PCK2     FLAG THAT OPERAND 2 IS PACKED        D 004010
         CLI   MS36TYP3,C'P'       TEST IF RESULT IS TO BE PACKED       D 004020
         BNE   *+8                 BR IF NOT TO BE PACKED               D 004030
         OI    CB36SW,SW36PCK3     FLAG THAT RESULT IS TO BE PACKED     D 004040
         PACK  $WRKPACK,MS36RNDN   PACK NO OF DIGITS TO BE ROUNDED      D 004050
         CLI   MS36RNDN,C' '       TEST IF ROUNDING RQUIRED             D 004060
         BE    CCMS3601            BR IF NO ROUNDING                    D 004070
         OI    CB36SW,SW36NRND     ASSUMA ALL ROUNDING SUPPRESSED       D 004080
         CLI   MS36RNDN,C'N'       TEST IF ROUNDING SUPPRESSED          D 004090
         BE    CCMS3601            BR IF ROUNDING SPPRESSEC             D 004100
         NI    CB36SW,FF-SW36NRND  SET OFF SUPPRESS ROUNDING FALD       D 004110
         CVB   R1,$WRKPACK         CONVERT NO OF DIGITS TO BINARY       D 004120
         STC   R1,CB36RNDN         PRESERVE RUNDING REQUIREMENTS        D 004130
         OI    CB36SW,SW36RND      FLAG THAT ROUNDING IS REQUIRED       D 004140
         EJECT                                                          D 004150
*********************************************************************** D 004160
*        PROCESS MS36 CONTROL CARD ( CONT'D )                         * D 004170
*********************************************************************** D 004180
         SPACE 1                                                        D 004190
CCMS3601 MVI   CB36OPCD,DIVIDE     ASSUME OPERATTION ID DIVIDE          D 004200
         CLI   MS36OPCD,C'/'       TEST IF DIVIDE                       D 004210
         BE    CCMS3602            BR IF YES                            D 004220
         MVI   CB36OPCD,MULTIPLY   ASSUME OPERATION IS MULTIPLY         D 004230
         CLI   MS36OPCD,C'*'       TEST IF MULTIPLY                     D 004240
         BE    CCMS3602            BR IF YES                            D 004250
         MVI   CB36OPCD,SUBTRACT   ASSUME OPERATION IS SUBTRACT         D 004260
         CLI   MS36OPCD,C'-'       TEST IF SUBTRACT                     D 004270
         BE    CCMS3602            BR IF SUBTRAVT                       D 004280
         MVI   CB36OPCD,ADD        OPERATION MUST BE ADD                D 004290
         CLI   MS36OPCD,C'+'       VERIFY THAT OPERATOR IS '+'          D 004300
         BE    CCMS3602            BR IF OPERATOR IS '+'                D 004310
         LINE  LINE01              TELL OF UNRECOGNISABLE OP: DEFAULT + D 004320
CCMS3602 CLI   MS36NDC1,C' '       IS NDEC FIELD BLANK                  D 004330
         BNE   *+8                 BR I NOT BLANK                       D 004340
         MVI   MS36NDC1,C'0'       INSERT DEFAULT ZERO IF BLANK         D 004350
       NUMERIC MS36NDC1            ENSURE NDEC FIELD IS NUMERIC         D 004360
         PACK  $WRKPACK,MS36NDC1   PACK NDEC INTO WORK AREA             D 004370
         CVB   R1,$WRKPACK         CONVERT NDEC INTO BINARY             D 004380
         STH   R1,CB36NDC1         PRESERVE NDEC FOR 1ST OPERAND        D 004390
         CLI   MS36NDC2,C' '       IS NDEC FIELD BLANK                  D 004400
         BNE   *+8                 BR I NOT BLANK                       D 004410
         MVI   MS36NDC2,C'0'       INSERT DEFAULT ZERO IF BLANK         D 004420
       NUMERIC MS36NDC2            ENSURE NDEC FIELD IS NUMERIC         D 004430
         EJECT                                                          D 004440
*********************************************************************** D 004450
*        PROCESS MS36 CONTROL CARD ( CONT'D )                         * D 004460
*********************************************************************** D 004470
         SPACE 1                                                        D 004480
         PACK  $WRKPACK,MS36NDC2   PACK NDEC INTO WORK AREA             D 004490
         CVB   R1,$WRKPACK         CONVERT NDEC INTO BINARY             D 004500
         STH   R1,CB36NDC2         PRESERVE NDEC OF 2ND OPERAND         D 004510
         CLI   MS36NDC3,C' '       IS NDEC FIELD BLANK                  D 004520
         BNE   *+8                 BR I NOT BLANK                       D 004530
         MVI   MS36NDC3,C'0'       INSERT DEFAULT ZERO IF BLANK         D 004540
       NUMERIC MS36NDC3            ENSURE NDEC FIELD IS NUMERIC         D 004550
         PACK  $WRKPACK,MS36NDC3   PACK NDEC INTO WORK AREA             D 004560
         CVB   R1,$WRKPACK         CONVERT NDEC INTO BINARY             D 004570
         STH   R1,CB36NDC3         PRESERVE NDEC OF RESULT FIELD        D 004580
         CLI   MS36NDC4,C' '       IS NDEC BLANK                        D 004590
         BNE   *+8                 BR IF NOT BLANK                      D 004600
         MVI   MS36NDC4,C'0'       INSERT DEFAULT ZERO IF BLANK         D 004610
      NUMERIC  MS36NDC4            ENSURE NDEC IS NU,ERIC               D 004620
         PACK  $WRKPACK,MS36NDC4   PACK NDEC INTO WORK AREA             D 004630
         CVB   R1,$WRKPACK         CONVERT NDEC INTO BINARY             D 004640
         STH   R1,CB36NDC4         PRESERVE NDEC OF RESULT FIELD        D 004650
         EJECT                                                          D 004660
*********************************************************************** D 004670
*        PROCESS MS36 CONTROL CARD ( CONT'D )                         * D 004680
*********************************************************************** D 004690
         SPACE 1                                                        D 004700
         PL    PPPLL,MS36POS4,CB36POS4 CONVERT PPLL OF REMAINDER        D 004710
         CLC   MS36POS4(5),$SPACES  IS REMAINDER REQUIRED               D 004720
         BE    *+8                 BR IF NOT REQUIRED                   D 004730
         OI    CB36SW,SW36REM      FLAG THAT REMAINDER REQUIRED         D 004740
         CLI   MS36TYP4,C'P'       TEST IF REMAINDER TO BE PACKED       D 004750
         BNE   *+8                 BR IF NOT TO BE PACKED               D 004760
         OI    CB36SW,SW36REMP     FALG TO PACK REMAINDER               D 004770
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   D 004780
         DROP  R6,R8               DROP ADDRESSABILITY                  D 004790
         EJECT                                                          D 004800
*********************************************************************** D 004810
*        PROCESS MS37 CONTROL CA DS                                   * D 004820
*********************************************************************** D 004830
         SPACE 1                                                        D 004840
         USING MS37CARD,R6         ASTABLISH C/C ADDRESSABILITY         D 004850
         USING CB37NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 004860
CCMS37   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 004870
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   D 004880
         DROP  R6,R8               DROP ADDRESSABILITY                  D 004890
         EJECT                                                          D 004900
*********************************************************************** D 004910
*        PROCESS MS40 CONTROL CARD                                    * D 004920
*********************************************************************** D 004930
         SPACE 1                                                        D 004940
         USING MS40CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 004950
         USING CB40NTRY,R8         ESTABLISH C/B ADDRESSABILITY         D 004960
CCMS40   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 004970
         LH    R2,MS40CNT          GET COUNT OF MS40 CARDS              D 004980
         LA    R2,1(,R2)           INCREMENT COUNT                      D 004990
         STH   R2,MS40CNT          S3ORE UPDATED MS40 COUNT             D 005000
         LA    R2,CB40LGTH         GET LENGTH OF C/B                    D 005010
         GETCB CB40                ACQUIRE NEW CONTROL BLOCK            D 005020
         MVC   CB40TID,MS40RID     PRESERVE SUBROUTINE NAME             D 005030
         LA    R1,CB40FRST         TREAT CB40 FIELD AS A CB13 ...       D 005040
         ST    R1,$PTRCB13          .. TO CHAIN FOLLOWING CB13'S TO IT  D 005050
         ST    R8,CURRCB40         PRESERVE CBADDRESS FOR MS41 PROCESSI D 005060
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   D 005070
         DROP  R6,R8               DROP ADDRESSABILTIY                  D 005080
         EJECT                                                          D 005090
*********************************************************************** D 005100
*        PROCESS MS41 CONTROL CARD                                    * D 005110
*********************************************************************** D 005120
         SPACE 1                                                        D 005130
*        NOTE THAT AN MS41 CONTROL CARD CREATES AN 'INTERNAL' CB13      D 005140
*         WHICH IN TURN TRIGGERS THE APPROPRIATE PROCESSING.  THIS      D 005150
*         APPROACH GREATLY SIMPLIFIES THE CHAINING OF THE C/B'S.        D 005160
         SPACE 1                                                        D 005170
         USING CB40NTRY,R8         ESTABLISH C/B ADDRESSABILIYT         D 005180
         USING MS41CARD,R6         ESTABLISH C/C ADDRESSABILITY         D 005190
CCMS41   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              D 005200
         LH    R2,MS41CNT          GET MS41 COUNT                       D 005210
         LA    R2,1(,R2)           INCREMENT COUNT OF MS41 CARDS        D 005220
         STH   R2,MS41CNT          PRSERVE UPDATED MS41 COUNT           D 005230
         L     R8,CURRCB40         RETRIEVE CB40 ADDRESS                D 005240
         CLI   CB40FLAG,FLAGCB40   VERIFY THAT THIS IS A CB40           D 005250
         BNE   CCMS4101            BR IF NOT TO TELL OF ERROR           D 005260
         CLC   CB40TID,MS41RID     ENSURE IT IS FOR THE SAME ROUTINE    D 005270
         BE    CCMS4102            BR IF I IS TO CONTINUE               D 005280
         SPACE 1                                                        D 005290
CCMS4101 LINE  LINE31,P=Y          PRINT ERROR MESSAGE                  D 005300
         OI    SWERROR,SWEFLUSH    SET ERROR SWITCH                     D 005310
         MVC   $COMPCDE,COND16     SET COMPLETION CODE                  D 005320
         B     CCMS41X             GO GET NEXT CONTROL CARD             D 005330
         SPACE 1                                                        D 005340
         DROP  R8                  DROP CB40 ADDRESSABILITY             D 005350
         USING CB13NTRY,R8         ESTABLISH CB13 ADDTESSABILITY        D 005360
CCMS4102 LA    R2,CB13LGTH         SET LENGTH OF BASIC CB13             D 005370
         GETCB CB13                ACQUIRE & CHAIN DUMMY CB13           D 005380
         MVI   CB13TEST,X'4E'      SET INTERNAL REP OF SUBROUTINE EXIT  D 005390
         MVC   CB13TST0,0(R1)      ADD 'SX' FOR  IDENTIFICATUON         D 005400
         L     R1,CURRCB40         RETRIEVE CB40 ADDRESS                D 005410
         ST    R8,CB40LAST-CB40NTRY(R1) ESTABLISH THIS CB13 AS RTN EXIT D 005420
         MVC   CB13CBID,MS41RID    STORE RTN NAME FOR IDENTIFICATION    D 005430
         MVI   CB13RIND,X'FF'      NULLIFY ERROR INDICATOR NUMBER       D 005440
CCMS41X SUBOUT RESTORE=R4          RESTORE AND RREUTN                   D 005450
         DROP  R6,R8               DROP ADDRESSABILITY                  D 005460
         TITLE 'BUDGIE3D - EXECUTED INSTRUCTIONS'                       D 005470
*********************************************************************** D 005480
*        EXECUTED INSTRUCTIONS                                        * D 005490
*********************************************************************** D 005500
         SPACE 1                                                        D 005510
         TITLE 'BUDGIE3D - MISCELLANEOUS CONSTANTS AND FIELDS'          D 005520
CURRCB40 DS    F                   ADDRESS OF CURRENT CB40              D 005530
         SPACE 1                                                        D 005540
MS40CNT  DC    H'0'                COUNT OF MS40 CARDS                  D 005550
MS41CNT  DC    H'0'                COUNT OF MS41 CARDS                  D 005560
         SPACE 1                                                        D 005570
LINE01   DC    C'BDG3D-001-W  COLUMN 7 CONTAINS AN UNRECOGNISABLE ARITHMD 005580
               METIC OPERATOR: ''+'' ASSUMED'                           D 005590
LINE30   DC    C'BDG3D-030-C  THE LENGTH OF THE LITERAL IS MANDATORY II*D 005600
               N THE PRECEDING MS33 CARD - CORE HAS BEEN CORRUPTED'     D 005610
LINE31   DC    C'BDG3D-031-C  THIS MS41 CARD WAS NOT PRECEDED BY AN MS4*D 005620
               0 CARD WITH THE SAME NAME'                               D 005630
         SPACE 1                                                        D 005640
        SCSEND D                   TERMINATE CSCT BUDGIE3D              D 005650
         END                                                            D 005660
         SPACE 1                                                        D 005670
         REPRO                                                          D 005680
 IDENTIFY BUDGIE3D('C/C PROCESSING: 30-99')                             D 005690
         END                                                            D 005700
