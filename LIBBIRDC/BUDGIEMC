./ ADD NAME=XIOM                                                        BM000010
         MACRO                                                          BM000020
&NAME    IOM   &SUBTYPE,&PARM1,&PARM2,&PARM3,&PARM4,                   *BM000030
               &TYPE=,&LOOP=,&RTN=,&MSGID=,&AUTOPEN=                    BM000040
.*                                                                      BM000050
.*       EQUATES,MAXDD                                                  BM000060
.*                                                                      BM000070
.*       DCBSW,DDNAME,DCBNAME,INPUT ,MANDAT                             BM000080
.*       DCBSW,DDNAME,DCBNAME,OUTPUT,MANDAT                             BM000090
.*       DCBSW,DDNAME,DCBNAME,PRINT,MANDAT                              BM000100
.*                                                                      BM000110
.*       PUT,DCBSW,(REG),PRINT,LNECNT,RTN=HEADING                       BM000120
.*                                                                      BM000130
.*       PUTM,DCBSW,(REG)                                               BM000140
.*                                                                      BM000150
.*       GET,DCBSW,(REG)                                                BM000160
.*                                                                      BM000170
.*       GETM,DCBSW,(REG)                                               BM000180
.*                                                                      BM000190
.*       OPEN,TYPE=DEF                                                  BM000200
.*       CLOSE,TYPE=DEF                                                 BM000210
.*       TIOTSCAN,TYPE=DEF                                              BM000220
.*                                                                      BM000230
.*       OPEN,DCBSW,LOOP=1,RTN=OPEN                                     BM000240
.*       OPEN,DCBSW,LOOP=N,RTN=NAME                                     BM000250
.*                                                                      BM000260
.*       CLOSE,DCBSW,LOOP=1,RTN=CLOSE                                   BM000270
.*       CLOSE,DCBSW,LOOP=N,RTN=NAME                                    BM000280
.*                                                                      BM000290
.*       TIOTSCAN,DCBSW,LOOP=1,RTN=TIOTSCAN                             BM000300
.*       TIOTSCAN,DCBSW,LOOP=N,RTN=NAME                                 BM000310
.*                                                                      BM000320
.*       SUMMARY,DCBSW,(REG),PRESENT,RTN=NAME,LOOP=N                    BM000330
.*                                                                      BM000340
.*       AUDIT,DCBSW,(REG),ENDJOB,RTN=NAME,LOOP=N                       BM000350
.*                                                                      BM000360
.*       EOF,DCBSW,BUFF-ADDR                                            BM000370
.*                                                                      BM000380
.*       BLKSZRTN,TYPE=DEF                                              BM000390
.*                                                                      BM000400
.*       IOERROR,(REG),PRINTRTN,EOJRTN,TYPE=DEF                         BM000410
.*                                                                      BM000420
.*       ISRANDOM,DCBSW-ADDR,KEY-ADDR                                   BM000430
.*                                                                      BM000440
         GBLC  &OPEN                                                    BM000450
         LCLA  &MAXDD                                                   BM000460
         LCLC  &BIT0,&BIT1,&DCB                                         BM000470
         LCLC  &BIT8                                                    BM000480
         LCLC  &B,&D                                                    BM000490
         LCLA  &BA,&DA                                                  BM000500
         LCLC  &LABEL,&RTNE,&REG                                        BM000510
         LCLC  &EOJRTNE                                                 BM000520
         LCLC  &LNECNT                                                  BM000530
.*                                                                      BM000540
.*                                                                      BM000550
.*       DETERMINE IF AUTOPEN WAS SPECIFIED                             BM000560
.*                                                                      BM000570
         AIF   ('&AUTOPEN' EQ '').A00                                   BM000580
&OPEN    SETC  'Y'                                                      BM000590
         AIF   ('&AUTOPEN' EQ 'YES').A00                                BM000600
&OPEN    SETC  'N'                                                      BM000610
         AIF   ('&AUTOPEN' EQ 'NO').A00                                 BM000620
         MNOTE 4,'UNKNOWN ''AUTOPEN'' SPECIFICATION - TREATED AS NO'    BM000630
.A00     ANOP                                                           BM000640
         AIF   ('&SUBTYPE' NE 'EQUATES').B00                            BM000650
IOSWMAND EQU   128 0               DDNAME MANDATORY                     BM000660
IOSWINPT EQU   64 0                INPUT DATA SET (DEFAULT)             BM000670
IOSWOUTP EQU   191 0               OUTPUT DATA SET            (NI ONLY) BM000680
IOSWPRES EQU   32 0                DDNAME PRESENT                       BM000690
IOSWOPEN EQU   16 0                DCB NOW OPEN                         BM000700
IOSWCLOS EQU   239 0               CLOSE DCB                  (NI ONLY) BM000710
IOSWEOF  EQU   8 0                 EOF DETECTED                         BM000720
IOSWIOER EQU   4 0                 I/O ERROR DETECTED                   BM000730
IOSWOPNH EQU   2 0                 DCB HAS BEEN OPENED                  BM000740
IOSWEOP  EQU   1 0                 PRINT DATA SET WITH EOP ROUTINE      BM000750
IOPSSW   EQU   0                   DISPLACEMENT OF SWITCH BYTE          BM000760
IOPSEOD  EQU   1 ^                 DISPLACEMENT OF EOD INDICATOR        BM000770
IOPSISI  EQU   2 ^                 DISPLACEMENT OF IS STATUS FLAG       BM000780
IOPSDCB  EQU   4                   DISPLACEMENT OF DCB ADDRESS          BM000790
IOPSDDN  EQU   8                   DISPLACEMENT OF DDNAME               BM000800
IOPSRECA EQU   16                  DISPLACEMENT OF RECORD ADDRESS       BM000810
IOPSRCNT EQU   20 ^                DISPLACEMENT OF RECORD COUNT         BM000820
IOPSR4SA EQU   24 ^                DISPLACEMENT OF R4 SAVE AREA         BM000830
IOPSLGTH EQU   28                  LENGTH OF DCBSW C/B                  BM000840
         AIF   ('&PARM1' EQ '').A02                                     BM000850
         AIF   (T'&PARM1 NE 'N').A01                                    BM000860
&MAXDD   SETA  &PARM1                                                   BM000870
IOMMAXDD EQU   &MAXDD 0            MAX NO. OF DD STATEMENTS             BM000880
         AGO   .A02                                                     BM000890
.A01     MNOTE 4,'MAX NO OF DD STATEMENTS IS NON-NUMERIC'               BM000900
.A02     AIF   ('&PARM2' NE '').A03                                     BM000910
         AIF   ('&PARM3' NE '').A03                                     BM000920
         AIF   ('&PARM4' NE '').A03                                     BM000930
         AIF   ('&TYPE' NE '').A03                                      BM000940
         AIF   ('&LOOP' NE '').A03                                      BM000950
         AIF   ('&RTN' NE '').A03                                       BM000960
         AGO   .A04                                                     BM000970
.A03     MNOTE *,'THE SUPERFLUOUS OPERANDS CODED WERE IGNORED'          BM000980
.A04     MEXIT                                                          BM000990
.B00     AIF   ('&SUBTYPE' NE 'DCBSW').C00                              BM001000
         AIF   ('&PARM1' NE '').B01                                     BM001010
         MNOTE 16,'NO DDNAME SUPPLIED FOR DCBSW OPERATION'              BM001020
         MEXIT                                                          BM001030
.B01     AIF   ('&PARM2' NE '').B02                                     BM001040
&DCB     SETC  '&PARM1'                                                 BM001050
         MNOTE *,'NO DCB NAME SUPPLIED - DDNAME ASSUMED'                BM001060
         AGO   .B03                                                     BM001070
.B02     ANOP                                                           BM001080
&DCB     SETC  '&PARM2'                                                 BM001090
.B03     ANOP                                                           BM001100
&BIT0    SETC  '0'                                                      BM001110
&BIT1    SETC  '1'                                                      BM001120
&BIT8    SETC  '0'                                                      BM001130
         AIF   ('&PARM3' EQ '').B04                                     BM001140
         AIF   ('&PARM3' EQ 'INPUT').B05                                BM001150
         AIF   ('&PARM3' EQ 'PRINT').B20                                BM001160
         AIF   ('&PARM3' NE 'OUTPUT').B10                               BM001170
&BIT1    SETC  '0'                                                      BM001180
         AGO   .B05                                                     BM001190
.B20     ANOP                                                           BM001200
&BIT8    SETC  '1'                                                      BM001210
&BIT1    SETC  '0'                                                      BM001220
         AGO   .B05                                                     BM001230
.B04     MNOTE *,'I/O TYPE NOT SPECIFIED - INPUT ASSUMED'               BM001240
.B05     AIF   ('&PARM4' EQ '').B06                                     BM001250
         AIF   ('&PARM4' NE 'MANDAT').B10                               BM001260
&BIT0    SETC  '1'                                                      BM001270
         AGO   .B07                                                     BM001280
.B06     MNOTE *,'DD STATEMENT IS OPTIONAL'                             BM001290
.B07     ANOP                                                           BM001300
&B       SETC  '00000'                                                  BM001310
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM001320
&B       SETC  '&BIT0&BIT1.00000&BIT8'                                  BM001330
&NAME    DC    B'&B',C'X  ',V(&DCB),CL8'&PARM1',A(0),PL4'0',A(0)        BM001340
         AIF   ('&TYPE' NE '').A03                                      BM001350
         AIF   ('&LOOP' NE '').A03                                      BM001360
         AIF   ('&RTN' NE '').A03                                       BM001370
         MEXIT                                                          BM001380
.B10     MNOTE 16,'UNKNOWN POSITIONAL PARAMETER'                        BM001390
         MEXIT                                                          BM001400
.*                                                                      BM001410
.*                                                                      BM001420
.*       IOM   PUT,DCBSW (,(REG) (,PRINT) (,LNECNT) (,RTN=HEADING)      BM001430
.*                                                                      BM001440
.*       IOM   GET,DCBSW (,(REG))                                       BM001450
.*                                                                      BM001460
.C00     AIF   ('&SUBTYPE' EQ 'PUT').C01                                BM001470
         AIF   ('&SUBTYPE' NE 'GET').D00                                BM001480
.C01     AIF   ('&PARM1' NE '').C021                                    BM001490
.C011    MNOTE 16,'MANDATORY DCBSW ADDRESS NOT SUPPLIED'                BM001500
         MEXIT                                                          BM001510
.C021    ANOP                                                           BM001520
&NAME    TM    &PARM1.+IOPSSW,IOSWPRES 0IS DD STATEMENT PRESENT         BM001530
         BZ    IOMC&SYSNDX 0       BYPASS I/O IF NO DD STATEMENT        BM001540
         AIF   ('&OPEN' EQ 'N').C100                                    BM001550
         TM    &PARM1.+IOPSSW,IOSWOPEN 0 TEST IF DCB OPEN               BM001560
         BO    IOME&SYSNDX 0       BRANCH IF OPEN                       BM001570
         ST    R4,&PARM1.+IOPSR4SA 0 PRESERVE R4 RETUR  ADDRESS         BM001580
         LA    R2,&PARM1 ^         POINT R2 AT DCBSW                    BM001590
         CBAL  R4,OPEN 0           OPEN DATA SET                        BM001600
         L     R4,&PARM1.+IOPSR4SA 0 RESTORE SAVED R4 VALUE             BM001610
IOME&SYSNDX EQU * 0                BYPASS OPEN PROCESSING               BM001620
.C100    ANOP                                                           BM001630
         AIF   ('&SUBTYPE' NE 'GET').C023                               BM001640
         TM    &PARM1.+IOPSSW,IOSWEOF 0TEST FOR END OF FILE ALREADY     BM001650
         BO    IOMC&SYSNDX 0       BR IF EOF ALREADY REACHED            BM001660
.C023    ANOP                                                           BM001670
         AIF   ('&SUBTYPE' NE 'PUTM').C024                              BM001680
         LR    R0,&REG ^           POINT R0 AT DATA                     BM001690
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001700
         L     R15,48(0,R1) ^      LOAD PUT ROUTINE ADDRESS             BM001710
         BALR  R14,R15 ^           LINK TO PUT ROUTINE                  BM001720
         AGO   .C05                                                     BM001730
.C024    ANOP                                                           BM001740
         AIF   ('&SUBTYPE' NE 'GETM').C025                              BM001750
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001760
         LR    R0,&REG ^           POINT R0 AT DESTINATION              BM001770
         L     R15,48(0,R1) ^      LOAD GET ROUTINE ADDRESS             BM001780
         BALR  R14,R15 ^           LINK TO GET ROUTINE                  BM001790
         AGO   .C05                                                     BM001800
.C025    ANOP                                                           BM001810
         AIF   ('&PARM3' NE 'PRINT' OR '&RTN' NE'').C022                BM001820
IOMD&SYSNDX EQU * 0                LOOP BACK FOR EOP POOCESSING         BM001830
.C022    ANOP                                                           BM001840
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001850
         L     R15,48(,R1) 0       GET I/O RTN ADDRESS                  BM001860
         BALR  R14,R15 ^           LINK TO I/O ROUTINE                  BM001870
         ST    R1,&PARM1.+IOPSRECA STORE BUFFER ADDRESS                 BM001880
         AIF   ('&PARM2' EQ '').C05                                     BM001890
         AIF   ('&PARM2'(1,1) EQ '(').C04                               BM001900
.C031    MNOTE 16,'INVALID REGISTER SPECIFICATION FOR &SUBTYPE'         BM001910
         MEXIT                                                          BM001920
.C04     LR    &PARM2(1),R1 0      SET BUFFER ADDRESS IN WORK REGISTER  BM001930
.C05     AP    &PARM1.+IOPSRCNT(4),=P'1' 0 INCREMENT RECORD COUNT       BM001940
         AIF   ('&PARM3' NE 'PRINT').C9                                 BM001950
&LNECNT  SETC  '&PARM4'                                                 BM001960
         AIF   ('&PARM4' NE '').C6                                      BM001970
         MNOTE *,'NO LINE COUNT SUPPLIED - 60 ASSUMED'                  BM001980
&LNECNT  SETC  '60'                                                     BM001990
.C6      CP    &PARM1.+IOPSRCNT(4),=P'&LNECNT' 0TEST FOR END OF PAGE    BM002000
         BL    IOMC&SYSNDX 0       BRANCH IF NOT                        BM002010
         ZAP   &PARM1.+IOPSRCNT(4),=P'0' 0 ZEROISE LINE COUNT           BM002020
         AIF   ('&RTN' NE '').C7                                        BM002030
         MNOTE *,'NO EOP ROUTINE SUPPLIED - PAGE SKIP FORCED'           BM002040
         MVI   0(R1),PAGESKIP 0    ESTABLISH PAGE SKIP                  BM002050
         B     IOMD&SYSNDX 0       SKIP TO NEW PAGE                     BM002060
.C62     ANOP                                                           BM002070
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       BM002080
.C8      AIF   ('&TYPE' NE '').A03                                      BM002090
         AIF   ('&LOOP' NE '').A03                                      BM002100
         MEXIT                                                          BM002110
.C7      ST    R4,IOMD&SYSNDX 0    PRESERVE RETURN ADDRESS              BM002120
         CBAL  R4,&RTN 0           PERFORM HEADING ROUTINE              BM002130
         L     R4,IOMD&SYSNDX 0    RESTORE RETURN ADDRESS               BM002140
         B     IOMC&SYSNDX 0       BRANCH OVER SAVE AREA                BM002150
IOMD&SYSNDX DS F 0                 SAVE AREA FOR R4                     BM002160
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       BM002170
         AGO   .C8                                                      BM002180
.C9      ANOP                                                           BM002190
IOMC&SYSNDX EQU * 0                 END OF ROUTINE                      BM002200
         AIF   ('&PARM3' NE '').A03                                     BM002210
         AIF   ('&PARM4' NE '').A03                                     BM002220
         AIF   ('&TYPE' NE '').A03                                      BM002230
         AIF   ('&LOOP' NE '').A03                                      BM002240
         AIF   ('&RTN' NE '').A03                                       BM002250
         MEXIT                                                          BM002260
.D00     AIF   ('&SUBTYPE' NE 'OPEN').E00                               BM002270
         AIF   ('&TYPE' EQ '').D04                                      BM002280
         AIF   ('&TYPE' EQ 'DEF').D02                                   BM002290
.D01     MNOTE 16,'UNKNOWN TYPE OPERAND'                                BM002300
         MEXIT                                                          BM002310
.*                                                                      BM002320
.*                                                                      BM002330
.*       IOM   OPEN,DCBSW-ADDR (,LOOP=N) (,RTN=AAA)                     BM002340
.*                                                                      BM002350
.D02     ANOP                                                           BM002360
&LABEL   SETC  'OPEN'                                                   BM002370
         AIF   ('&NAME' EQ '').D03                                      BM002380
&LABEL   SETC  '&NAME'                                                  BM002390
.D03     ANOP                                                           BM002400
&LABEL   DS    0H 0                ENTRY TO OPEN SUBROUTINE             BM002410
         L     R1,IOPSDCB(,R2) 0   GET DCB ADDRESS                      BM002420
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         BM002430
         BNO   0(R4) 0             RETURN IF NOT                        BM002440
         TM    IOPSSW(R2),IOSWOPEN 0 TEST IF DATA SET OPEN              BM002450
         BO    0(R4) 0             RETURN IF DATA STE OPEN              BM002460
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM002470
         ST    R1,*+8 0            STORE DCB ADDRESS                    BM002480
         BAL   R1,*+8 ^            LOAD REG 1 WITH LIST ADDRESS         BM002490
         DC    A(0) 0              DCB ADDRESS                          BM002500
         TM    IOPSSW(R2),IOSWINPT 0 TEST IF INPUT                      BM002510
         BO    IOMD&SYSNDX 0       BRANCH IF YES                        BM002520
         MVI   0(R1),143 0         SET OPTION BYTE FOR INPUT            BM002530
         B     *+8 0               GO TO SVC                            BM002540
IOMD&SYSNDX MVI 0(R1),128 ^        SET OPTION BYTE                      BM002550
         SVC   19 0                ISSUE OPEN SVC                       BM002560
         OI IOPSSW(R2),IOSWOPEN+IOSWOPNH INDICATE DATA SET OPEN         BM002570
         MVI   IOPSEOD(R2),C'X' ^  RESET EOD INDICATOR IF NECESSARY     BM002580
         BR    R4 0                RETURN TO MAIN-LINE                  BM002590
.D031    AIF   ('&PARM1' NE '').A03                                     BM002600
         AIF   ('&PARM2' NE '').A03                                     BM002610
         AIF   ('&PARM3' NE '').A03                                     BM002620
         AIF   ('&PARM4' NE '').A03                                     BM002630
         AIF   ('&LOOP' NE '').A03                                      BM002640
         AIF   ('&RTN' NE '').A03                                       BM002650
         MEXIT                                                          BM002660
.D04     AIF   ('&PARM1' EQ '').C011                                    BM002670
         AIF   ('&LOOP' EQ '').D05                                      BM002680
&NAME    LA    R10,&LOOP 0         ESTABLISH LOOP                       BM002690
.D05     ANOP                                                           BM002700
&LABEL   SETC  '&NAME'                                                  BM002710
         AIF   ('&LOOP' EQ '').D06                                      BM002720
&LABEL   SETC  ' '                                                      BM002730
.D06     ANOP                                                           BM002740
&LABEL   LA    R2,&PARM1 0         POINT AT DCBSW                       BM002750
         AIF   ('&RTN' EQ '').D07                                       BM002760
&RTNE    SETC  '&RTN'                                                   BM002770
         AGO   .D09                                                     BM002780
.D07     AIF   ('&SUBTYPE' EQ 'CLOSE').D08                              BM002790
&RTNE    SETC  'OPEN'                                                   BM002800
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               BM002810
&RTNE    SETC  'TIOTSCAN'                                               BM002820
         AGO   .D09                                                     BM002830
.D08     ANOP                                                           BM002840
&RTNE    SETC  'CLOSE'                                                  BM002850
.D09     ANOP                                                           BM002860
IOMD&SYSNDX CBAL R4,&RTNE 0        PERFORM SUB-ROUTINE                  BM002870
         AIF   ('&LOOP' EQ '').D10                                      BM002880
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              BM002890
         BCT   R10,IOMD&SYSNDX 0   LOOP BACK TO PROCESS NEXT            BM002900
.D10     AIF   ('&PARM2' NE '').A03                                     BM002910
         AIF   ('&PARM3' NE '').A03                                     BM002920
         AIF   ('&PARM4' NE '').A03                                     BM002930
         MEXIT                                                          BM002940
.E00     AIF   ('&SUBTYPE' NE 'CLOSE').F00                              BM002950
         AIF   ('&TYPE' EQ 'DEF').E01                                   BM002960
         AIF   ('&TYPE' EQ '').D04                                      BM002970
         AGO   .D01                                                     BM002980
.E01     ANOP                                                           BM002990
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               BM003000
&RTNE    SETC  'TIOTSCAN'                                               BM003010
&LABEL   SETC  'CLOSE'                                                  BM003020
         AIF   ('&NAME' EQ '').E02                                      BM003030
&LABEL   SETC  '&NAME'                                                  BM003040
.E02     ANOP                                                           BM003050
&LABEL   DS    0H 0                ENTRY TO CLOSE SUBROUTINE            BM003060
         TM    IOPSSW(R2),IOSWOPEN TEST IF DATA SET OPEN                BM003070
         BZ    0(R4) 0             RETURN IF NOT                        BM003080
         L     R1,IOPSDCB(R2) 0    GET DCB ADDRESS                      BM003090
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM003100
         ST    R1,*+8 0            STORE DCB ADDRESS                    BM003110
         BAL   R1,*+8 ^            POINT R1 AT PARM LIST                BM003120
         DC    A(0) 0              DCB ADDRESS                          BM003130
         MVI   0(R1),128 0         SET OPTION BYTE                      BM003140
         SVC   20 0                ISSUE CLOSE SVC                      BM003150
         L     R1,IOPSDCB(R2) ^    GET DCB ADDRESS                      BM003160
       FREEPOOL (R1) ^             FREE ACQUIRED BUFFER POOL            BM003170
         NI    IOPSSW(R2),IOSWCLOS INDICATE CLOSED                      BM003180
         BR    R4 0                RETURN TO MAIN-LINE                  BM003190
         AIF   ('&PARM1' NE '').A03                                     BM003200
         AIF   ('&PARM2' NE '').A03                                     BM003210
         AIF   ('&PARM3' NE '').A03                                     BM003220
         AIF   ('&PARM4' NE '').A03                                     BM003230
         AIF   ('&LOOP' NE '').A03                                      BM003240
         AIF   ('&RTN' NE '').A03                                       BM003250
         MEXIT                                                          BM003260
.*                                                                      BM003270
.*                                                                      BM003280
.*       IOM   EOF,DCBSW-NAME (,DUMMY BUFFER ADDRESS)                   BM003290
.*                                                                      BM003300
.F00     AIF   ('&SUBTYPE' NE 'EOF').G00                                BM003310
         AIF   ('&PARM1' EQ '').C011                                    BM003320
&NAME    OI    &PARM1.+IOPSSW,IOSWEOF INDICATE EOF                      BM003330
         MVI   &PARM1.+IOPSEOD,C'Y' SET CHARACTER FOR EOF INDICATION    BM003340
         AIF   ('&PARM2' EQ '').F01                                     BM003350
         L     R1,&PARM2 ^         POINT R1 AT DUMMY BUFFER             BM003360
         ST    R1,&PARM1.+IOPSRECA 0PRESERVE DUMMY BUFFER ADDRESS       BM003370
         AGO   .F02                                                     BM003380
.F01     XC    &PARM1.+IOPSRECA(4),&PARM1.+IOPSRECA NULLIFY RECORD ADD  BM003390
.F02     ANOP                                                           BM003400
         AGO   .A02                                                     BM003410
.G00     AIF   ('&SUBTYPE' NE 'TIOTSCAN').H00                           BM003420
         AIF   ('&TYPE' EQ 'DEF').G01                                   BM003430
         AIF   ('&TYPE' NE '').D01                                      BM003440
         AGO   .D04                                                     BM003450
.G01     ANOP                                                           BM003460
&LABEL   SETC  'TIOTSCAN'                                               BM003470
         AIF   ('&NAME' EQ '').G02                                      BM003480
&LABEL   SETC  '&NAME'                                                  BM003490
.G02     ANOP                                                           BM003500
&LABEL   DS    0H 0                ENTRY TO TIOT SCAN ROUTINE           BM003510
         BC    0,IOMG&SYSNDX 0     FIRST TIME SWITCH                    BM003520
         OI    *-3,X'F0' 0         SET FIRST TIME SWITCH                BM003530
         EXTRACT IOMATIOT,'S',FIELDS=TIOT ^OBTAIN ADDRESS OF TOOT       BM003540
         B     IOMG&SYSNDX ^       BRANCH AROUND SAVE AREAS             BM003550
IOMATIOT DS    F 0                 ADDRESS OF TIOT                      BM003560
IOMTIOT1 DS    F 0                 SAVE AREA FOR R3                     BM003570
IOMTIOT2 DS    F 0                 SAVE AREA FOR R10                    BM003580
IOMG&SYSNDX EQU * 0                SUBSEQUENT PROCESSING                BM003590
         ST    R3,IOMTIOT1 0       PRESERVE CONTENTS                    BM003600
         ST    R10,IOMTIOT2 0       OF R3 AND R10                       BM003610
         L     R3,IOMATIOT 0       GET ADDRESS OF TIOT                  BM003620
         LA    R3,24(,R3) 0        POINT AT FIRST DD ENTRY              BM003630
IOMH&SYSNDX CLC 0(4,R3),=F'0' 0     TEST FOR END OF TIOT                BM003640
         BE    IOMI&SYSNDX.+4      RETURN IF YES                        BM003650
         CLC   4(8,R3),IOPSDDN(R2) TEST FOR DDNAME MATCH                BM003660
         BE    IOMI&SYSNDX 0       BRANCH IF YES                        BM003670
         SR    R10,R10 0           ZEROISE WORK REGISTER                BM003680
         IC    R10,0(R3) 0         INSERT ENTRY LENGTH                  BM003690
         AR    R3,R10 0            INCREMENT TO NEXT ENTRY              BM003700
         B     IOMH&SYSNDX 0       LOOP TO PROCESS NEXT ENTRY           BM003710
IOMI&SYSNDX OI IOPSSW(R2),IOSWPRES INDICATE DD STATEMENT PRESENT        BM003720
         L     R3,IOMTIOT1 0       RETRIEVE CONTENTS                    BM003730
         L     R10,IOMTIOT2 0       OF R3 AND R10                       BM003740
         BR    R4 0                RETURN TO MAIN LINE                  BM003750
         AGO   .D031                                                    BM003760
.H00     AIF   ('&SUBTYPE' NE 'BLKSZRTN').I00                           BM003770
         AIF   ('&TYPE' EQ 'DEF').H02                                   BM003780
         AIF   ('&TYPE' NE '').D01                                      BM003790
         MNOTE 16,'INCOMPLETE BLKSIZE REQUEST'                          BM003800
         MEXIT                                                          BM003810
.H02     ANOP                                                           BM003820
&LABEL   SETC  'BLKSZRTN'                                               BM003830
         AIF   ('&NAME' EQ '').H01                                      BM003840
&LABEL   SETC  '&NAME'                                                  BM003850
.H01     ANOP                                                           BM003860
&LABEL   DS    0H 0                SUPPLY DEFAULT IF NO BLOCK SIZE      BM003870
         USING IHADCB,R1 0         ESTABLISH DCB ADDRESSABILITY         BM003880
         CLC   DCBBLKSI,=F'0' 0    TEST IF BLKSIZE SUPPLIED             BM003890
         BNE   0(R14) 0            RETURN TO OPEN IF YES                BM003900
         MVC   DCBBLKSI,DCBLRECL 0 MOVE LRECL TO BLKSIZE                BM003910
         BR    R14 0               RETURN TO OS OPEN ROUTINE            BM003920
         DROP  R1 0                DROP DCB ADDRESSABILITY              BM003930
         AGO   .D031                                                    BM003940
.*                                                                      BM003950
.*                                                                      BM003960
.*       IOM   SUMMARY,DCBSW-ADDR,(REG),RTN= (,MSGID=)                  BM003970
.*                                                                      BM003980
.I00     AIF   ('&SUBTYPE' NE 'SUMMARY').J00                            BM003990
         AIF   ('&PARM1' EQ '').C011                                    BM004000
         AIF   ('&PARM2' NE '').I01                                     BM004010
.I001    MNOTE 16,'MANDATORY REGISTER SPECIFICATION IS MISSING'         BM004020
         MEXIT                                                          BM004030
.I01     AIF   ('&PARM2'(1,1) NE '(').C031                              BM004040
         AIF   ('&RTN' NE '').I02                                       BM004050
.I011    MNOTE 16,'MANDATORY RTN NAME IS MISSING'                       BM004060
         MEXIT                                                          BM004070
.I02     ANOP                                                           BM004080
&NAME    DS    0H 0                PRINT SUMMARY OF D/S ACTIVITY        BM004090
         LA    R2,&PARM1 0         GET DCBSW ADDRESS                    BM004100
         AIF   ('&LOOP' EQ '').I03                                      BM004110
         LA    R10,&LOOP 0         ESTABLISH LOOP                       BM004120
IOMI&SYSNDX EQU * 0                RETURN POINT FOR LOOP                BM004130
.I03     AIF   ('&PARM3' EQ '').I05                                     BM004140
         AIF   ('&PARM3' NE 'PRESENT').B10                              BM004150
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         BM004160
         BZ    IOMJ&SYSNDX 0       BYPASS PROCESSING IF NOT             BM004170
.I05     ANOP                                                           BM004180
&REG     SETC  '&PARM2(1)'                                              BM004190
         TM    IOPSSW(R2),IOSWEOP ^TEST IF PRINT DATA SET               BM004200
         BO    IOMJ&SYSNDX ^       BYPASS PROCESSING IF YES             BM004210
&BA      SETA  0                                                        BM004220
         AIF   ('&MSGID' EQ '').I10                                     BM004230
&BA      SETA  K'&MSGID                                                 BM004240
         AIF   ('&MSGID'(1,1) NE '''').I30                              BM004250
&BA      SETA  &BA-2                                                    BM004260
.I30     ANOP                                                           BM004270
         AIF   ('&MSGID'(1,1) NE '''').I20                              BM004280
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             BM004290
         AGO   .I21                                                     BM004300
.I20     ANOP                                                           BM004310
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            BM004320
.I21     ANOP                                                           BM004330
&BA      SETA  &BA+2                                                    BM004340
.I10     ANOP                                                           BM004350
&DA      SETA  &BA+5                                                    BM004360
         MVC   &DA.(18,&REG),=C'NUMBER OF RECORDS ' ADD MESSSAGE TO BUF BM004370
&DA      SETA  &BA+23                                                   BM004380
         MVC   &DA.(11,&REG),=C'READ FROM  ' ADD FUTHER MESSAGE         BM004390
         TM    IOPSSW(R2),IOSWINPT TEST IF INPUT DATA SET               BM004400
         BO    *+10 ^              BR IF INPUT                          BM004410
         MVC   &DA.(11,&REG),=C'WRITTEN TO ' SHOW WHITTEN TO NOT READ   BM004420
&DA      SETA  &BA+34                                                   BM004430
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DNAME TO MESSAGE            BM004440
&DA      SETA  &BA+42                                                   BM004450
         MVC   &DA.(2,&REG),=C' =' ADD EQUALS SIGN TO MESSGGE           BM004460
&DA      SETA  &BA+44                                                   BM004470
         MVC   &DA.(10,&REG),=X'40206B2020206B202120' EDIT MASK TO MSG  BM004480
         ED    &DA.(10,&REG),IOPSRCNT(R2) EDIT THE RECORD COUNT         BM004490
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                BM004500
IOMJ&SYSNDX EQU * 0                BYPASS BRANCH ADDRESS                BM004510
.I06     AIF   ('&LOOP' EQ '').I07                                      BM004520
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              BM004530
         BCT   R10,IOMI&SYSNDX 0   LOOP TO PROCESS NEXT                 BM004540
.I07     AIF   ('&PARM4' NE '').A03                                     BM004550
         AIF   ('&TYPE' NE '').A03                                      BM004560
         MEXIT                                                          BM004570
.*                                                                      BM004580
.*                                                                      BM004590
.*       IOM   AUDIT,DCBSW-ADDR,(REG),EOJRTN,RTN= (,MSGID=)             BM004600
.*                                                                      BM004610
.J00     AIF   ('&SUBTYPE' NE 'AUDIT').K00                              BM004620
         AIF   ('&PARM1' EQ '').C011                                    BM004630
         AIF   ('&PARM3' NE '').J001                                    BM004640
         MNOTE *,'NO END-OF-JOB ROUTINE ADDRESS SUPPLIED'               BM004650
         MNOTE *,'PROGRAM WILL ABEND WITH 0C1 IF MANDATORY STATEMENT MI$BM004660
               SSING'                                                   BM004670
.J001    ANOP                                                           BM004680
         AIF   ('&PARM2' EQ '').I001                                    BM004690
         AIF   ('&PARM2'(1,1) NE '(').C031                              BM004700
         AIF   ('&RTN' EQ '').I011                                      BM004710
&NAME    DS    0H 0                REPORT ON PRESENCE OF DD STATEMENTS  BM004720
         LA    R2,&PARM1 ^         GET DCBSW ADDRESS                    BM004730
         AIF   ('&LOOP' EQ '').J01                                      BM004740
         LA    R10,&LOOP 0         ESTABLISH LOOP                       BM004750
IOMJ&SYSNDX EQU * 0                RETURN POINT FOR LOOP                BM004760
.J01     ANOP                                                           BM004770
&REG     SETC  '&PARM2(1)'                                              BM004780
&BA      SETA  0                                                        BM004790
         AIF   ('&MSGID' EQ '').J10                                     BM004800
&BA      SETA  K'&MSGID                                                 BM004810
         AIF   ('&MSGID'(1,1) NE '''').J30                              BM004820
&BA      SETA  &BA-2                                                    BM004830
.J30     ANOP                                                           BM004840
         AIF   ('&MSGID'(1,1) NE '''').J20                              BM004850
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             BM004860
         AGO   .J21                                                     BM004870
.J20     ANOP                                                           BM004880
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            BM004890
.J21     ANOP                                                           BM004900
&BA      SETA  &BA+2                                                    BM004910
.J10     ANOP                                                           BM004920
&DA      SETA  &BA+5                                                    BM004930
         MVC   &DA.(35,&REG),=C'MANDATORY DATA SET          PRESENT'    BM004940
&DA      SETA  &BA+24                                                   BM004950
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DDNAME TO MESSAGE           BM004960
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    BM004970
         BO    *+10 0              BRANCH IF YES                        BM004980
&DA      SETA  &BA+5                                                    BM004990
         MVC   &DA.(9,&REG),=C' OPTIONAL' SHOW DATA SET IS OPTIONAL     BM005000
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      BM005010
         BO    *+10 0              BRANCH IF YES                        BM005020
&DA      SETA  &BA+33                                                   BM005030
         MVC   &DA.(7,&REG),=C'MISSING' SHOW DATA SET IS MISSING        BM005040
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                BM005050
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    BM005060
         BZ    IOMK&SYSNDX 0       BRANCH IF NOT                        BM005070
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      BM005080
         BO    IOMK&SYSNDX 0       BRANCH IF YES                        BM005090
         OI    IOML&SYSNDX.+1,X'F0' 0    SET TO BRANCH AT END OF JOB    BM005100
         MVC   IOMM&SYSNDX.+27(8),IOPSDDN(R2) ADD DD NAME TO WRO        BM005110
IOMM&SYSNDX WTO 'MANDATORY DATA SET ******** MISSING'                   BM005120
IOMK&SYSNDX EQU * 0                                                     BM005130
         AIF   ('&LOOP' EQ '').J02                                      BM005140
         LA    R2,IOPSLGTH(,R2) 0  POINT AT NEXT DCBSW                  BM005150
         BCT   R10,IOMJ&SYSNDX 0   LOOP BACK TO PROCESS                 BM005160
.J02     ANOP                                                           BM005170
&RTNE    SETC  '*+2'                                                    BM005180
         AIF   ('&PARM3' NE '').J03                                     BM005190
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED'                       BM005200
         AGO   .J04                                                     BM005210
.J03     ANOP                                                           BM005220
&RTNE    SETC  '&PARM3'                                                 BM005230
.J04     ANOP                                                           BM005240
IOML&SYSNDX BC 0,&RTNE 0           GO TO END-OF-JOB IF MAND MISSING     BM005250
         AGO   .I07                                                     BM005260
.*                                                                      BM005270
.*                                                                      BM005280
.*       IOM   IOERROR,(REG),PRINTRTN,EOJRTN (,TYPE=DEF)                BM005290
.*                                                                      BM005300
.K00     AIF   ('&SUBTYPE' NE 'IOERROR').L00                            BM005310
         AIF   ('&TYPE' EQ 'DEF').K01                                   BM005320
         AIF   ('&TYPE' NE '').D01                                      BM005330
         MNOTE 16,'INVALID I/O ERROR REQUEST'                           BM005340
         MEXIT                                                          BM005350
.K01     ANOP                                                           BM005360
&RTNE    SETC  'PRINT'                                                  BM005370
&EOJRTNE SETC  'PRINTCDE'                                               BM005380
&REG     SETC  'R5'                                                     BM005390
&LABEL   SETC  'IOERROR'                                                BM005400
         AIF   ('&NAME' EQ '').K02                                      BM005410
&LABEL   SETC  '&NAME'                                                  BM005420
.K02     AIF   ('&PARM3' NE '').K03                                     BM005430
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED - ''PRINTCDE'' ASSUMD' BM005440
         AGO   .K04                                                     BM005450
.K03     ANOP                                                           BM005460
&EOJRTNE SETC  '&PARM3'                                                 BM005470
.K04     AIF   ('&PARM2' NE '').K05                                     BM005480
         MNOTE *,'NO PRINT ROUTINE ADDRESS - ''PRINT'' ASSUMED'         BM005490
         AGO   .K06                                                     BM005500
.K05     ANOP                                                           BM005510
&RTNE    SETC  '&PARM2'                                                 BM005520
.K06     AIF   ('&PARM1' EQ '').K07                                     BM005530
         AIF   ('&PARM1'(1,1) NE '(').C031                              BM005540
&REG     SETC  '&PARM1(1)'                                              BM005550
         AGO   .K08                                                     BM005560
.K07     MNOTE *,'NO REGISTER SPECIFIED - R5 ASSUMED'                   BM005570
.K08     ANOP                                                           BM005580
&LABEL   DS    0H 0                ENSURE ALIGNMENT                     BM005590
        SYNADAF ACSMETH=QSAM 0     CALL ANALYSIS ROUTINE                BM005600
         MVC   IOML&SYSNDX.+16(86),50(R1) ADD RESULT OF ANALYSIS        BM005610
        SYNADRLS , 0               RELEASE OS BUFFER                    BM005620
         WTO   MF=(E,IOML&SYSNDX) 0TELL OPERATOR OF ERROR               BM005630
         MVI   0(&REG),SPCE2AFT 0  ESTABLISH DOUBLE BLANK LINES         BM005640
         CBAL  R4,&RTNE 0           AND WRITE THEM                      BM005650
         MVC   5(98,&REG),IOMM&SYSNDX 0 MOVE IN ERROR MESSAGE           BM005660
         CBAL  R4,&RTNE 0          WRITE ERROR MESSAGE                  BM005670
        SUBOUT RETURN=&EOJRTNE 0   TERMINATE JOB                        BM005680
         SPACE 1                                                        BM005690
IOML&SYSNDX DS 0F                                                       BM005700
         DC    AL2(102),H'0'                                            BM005710
IOMM&SYSNDX DC CL98'I/O ERROR - '                                       BM005720
         MEXIT                                                          BM005730
.L00     AIF   ('&SUBTYPE' NE 'PUTM').M00                               BM005740
.L01     ANOP                                                           BM005750
         AIF   ('&PARM1' EQ '').C011                                    BM005760
&REG     SETC  'R1'                                                     BM005770
         AIF   ('&PARM2' EQ '').C021                                    BM005780
         AIF   ('&PARM2'(1,1) NE '(').C031                              BM005790
&REG     SETC  '&PARM2(1)'                                              BM005800
         AGO   .C021                                                    BM005810
.M00     AIF   ('&SUBTYPE' EQ 'GETM').L01                               BM005820
.N00     AIF   ('&SUBTYPE' NE 'ISRANDOM').O00                           BM005830
.*                                                                      BM005840
.*                                                                      BM005850
.*       IOM   ISRANDOM,DCBSW-ADDR,KEY-ADDR                             BM005860
.*                                                                      BM005870
&NAME    LA    R2,&PARM1 ^         POINT R2 AT DCBSW                    BM005880
         MVI   IOPSISI(R2),C'Y' ^  ASSUME RECORD NOT FOUND              BM005890
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMNT PRESENT          BM005900
         BZ    IOMN&SYSNDX ^       BYPASS I/O IF DD STAT MISSING        BM005910
         AIF   ('&OPEN' EQ 'N').N01                                     BM005920
         TM    IOPSSW(R2),IOSWOPEN TEST IF DD STATEMENT OPEN            BM005930
         BO    IOON&SYSNDX ^       BR IF OPEN                           BM005940
         CBAL  R4,ISOPEN ^         OPEN DCB                             BM005950
.N01     ANOP                                                           BM005960
IOON&SYSNDX L  R2,IOPSDCB(R2) ^    GET THE DCB ADDRESS                  BM005970
         LA    R15,&PARM2 ^        GET KEY ADDRESS                      BM005980
         READ  DECB&SYSNDX,K,(R2),'S','S',(R15) READ I.S. RANDOMLY      BM005990
         WAIT  ECB=DECB&SYSNDX ^   WAIT FR COMPLETION OF I/O            BM006000
         LA    R2,&PARM1 ^         REFRESH DCBSW ADDRESS                BM006010
         TM    DECB&SYSNDX.+24,DCBEXNKY TEST IF RECORD NOT FOUND        BM006020
         BO    IOMN&SYSNDX ^       EXIT TEST IF RECORD NOT FOUND        BM006030
         MVI   IOPSISI(R2),C'W' ^  ASSUME SOME SORT OF ERROR OCCURRED   BM006040
         NI    DECB&SYSNDX.+25,FF-DCBEXOFL IGNORE OVERFLOW FLAG         BM006050
         CLC   DECB&SYSNDX.+24(2),=X'0000' TEST IF ERROR CONDITION      BM006060
         BNE   IOMN&SYSNDX ^       EXIT IF ANY ERROR CONDITION          BM006070
         MVI   IOPSISI(R2),C'Y' ^  ASSUME RECORD IS DELETED             BM006080
         L     R1,IOPSDCB(R2) ^    GET ADDRESS OF DCB                   BM006090
         TM    DCBOPTCD-IHADCB(R1),DCBOPTL DOES DELETE FLAG EXIST       BM006100
         BZ    *+16 ^              BR IF NO DELETE FLAG                 BM006110
         L     R1,DECB&SYSNDX.+16 ^GET RECORD ADDRESS                   BM006120
         CLI   0(R1),X'FF' ^       TEST IF RECORD IS DELETED            BM006130
         BE    IOMN&SYSNDX ^       EXIT IF RECORD DELETED               BM006140
         MVI   IOPSISI(R2),C'X' ^  SHOW RECORD FOUND                    BM006150
         L     R1,DECB&SYSNDX.+16 ^GET RECORD ADDRESS                   BM006160
IOMN&SYSNDX EQU * ^                CONTINUE PROCESSING                  BM006170
         MEXIT                                                          BM006180
.O00     ANOP                                                           BM006190
         MNOTE 16,'UNKNOWN MACRO SUBTYPE'                               BM006200
         MEND                                                           BM006210
./ ADD NAME=XRTNDEF                                                     BM006220
         MACRO                                                          BM006230
        RTNDEF &RTN,&SS                                                 BM006240
.*                                                                      BM006250
.*       CREATE ROUTINE DEFINITION OF THE FORM                          BM006260
.*             . =(ROUTINE)                                             BM006270
.*             . AL1(CSECT SUFFIX NO)                                   BM006280
.*             . AL3(BASE REGISTER SAVE AREA)                           BM006290
.*                                                                      BM006300
         LCLC  &N                                                       BM006310
         LCLC  &S                                                       BM006320
&S       SETC  'BUDGIE3&SS'                                             BM006330
&N       SETC  '0'                                                      BM006340
         AIF      ('&S' EQ 'BUDGIE3A').A01                              BM006350
&N       SETC  '1'                                                      BM006360
         AIF      ('&S' EQ 'BUDGIE3B').A01                              BM006370
&N       SETC  '2'                                                      BM006380
         AIF      ('&S' EQ 'BUDGIE3C').A01                              BM006390
&N       SETC  '3'                                                      BM006400
         AIF      ('&S' EQ 'BUDGIE3D').A01                              BM006410
&N       SETC  '4'                                                      BM006420
         AIF      ('&S' EQ 'BUDGIE3E').A01                              BM006430
&N       SETC  '5'                                                      BM006440
         AIF      ('&S' EQ 'BUDGIE3F').A01                              BM006450
&N       SETC  '6'                                                      BM006460
         AIF      ('&S' EQ 'BUDGIE3G').A01                              BM006470
&N       SETC  '7'                                                      BM006480
         AIF      ('&S' EQ 'BUDGIE3H').A01                              BM006490
&N       SETC  '8'                                                      BM006500
         AIF      ('&S' EQ 'BUDGIE3I').A01                              BM006510
&N       SETC  '9'                                                      BM006520
         AIF      ('&S' EQ 'BUDGIE3J').A01                              BM006530
&N       SETC  '10'                                                     BM006540
         AIF      ('&S' EQ 'BUDGIE3K').A01                              BM006550
&N       SETC  '11'                                                     BM006560
         AIF      ('&S' EQ 'BUDGIE3L').A01                              BM006570
&N       SETC  '12'                                                     BM006580
         AIF      ('&S' EQ 'BUDGIE3M').A01                              BM006590
&N       SETC  '13'                                                     BM006600
         AIF      ('&S' EQ 'BUDGIE3N').A01                              BM006610
&N       SETC  '14'                                                     BM006620
         AIF      ('&S' EQ 'BUDGIE3O').A01                              BM006630
&N       SETC  '15'                                                     BM006640
         AIF      ('&S' EQ 'BUDGIE3P').A01                              BM006650
&N       SETC  '16'                                                     BM006660
         AIF      ('&S' EQ 'BUDGIE3Q').A01                              BM006670
&N       SETC  '17'                                                     BM006680
         AIF      ('&S' EQ 'BUDGIE3R').A01                              BM006690
&N       SETC  '18'                                                     BM006700
         AIF      ('&S' EQ 'BUDGIE3S').A01                              BM006710
&N       SETC  '19'                                                     BM006720
         AIF      ('&S' EQ 'BUDGIE3T').A01                              BM006730
&N       SETC  '20'                                                     BM006740
         AIF      ('&S' EQ 'BUDGIE3U').A01                              BM006750
&N       SETC  '21'                                                     BM006760
         AIF      ('&S' EQ 'BUDGIE3V').A01                              BM006770
&N       SETC  '22'                                                     BM006780
         AIF      ('&S' EQ 'BUDGIE3W').A01                              BM006790
&N       SETC  '23'                                                     BM006800
         AIF      ('&S' EQ 'BUDGIE3X').A01                              BM006810
&N       SETC  '24'                                                     BM006820
         AIF      ('&S' EQ 'BUDGIE3Y').A01                              BM006830
&N       SETC  '25'                                                     BM006840
         AIF      ('&S' EQ 'BUDGIE3Z').A01                              BM006850
         MNOTE *,'UNKNOWN CSECT'                                        BM006860
#&RTN    DC    A(0),A(0) ^         DUMMY ROUTINE DEFINITION             BM006870
         MEXIT                                                          BM006880
         MEXIT                                                          BM006890
.A01     ANOP                                                           BM006900
#&RTN    DC    V(&RTN),AL1(&N),AL3(0) ROUTINE DEFINITION                BM006910
         MEND                                                           BM006920
./ ADD NAME=XCBAL                                                       BM006930
         MACRO                                                          BM006940
&NAME    CBAL  &R,&RTN                                                  BM006950
         LCLC  &T                                                       BM006960
.*                                                                      BM006970
.*       ESTABLISH LINKAGE TO SUB-ROUTINE                               BM006980
.*                                                                      BM006990
&T       SETC  T'&RTN                                                   BM007000
         AIF   (T'&RTN EQ 'U').A01 BR IF ROUTINE UNDEFINED              BM007010
         AIF   (T'&RTN EQ 'T').A01 BRANCH IF ROUTINE EXTRN              BM007020
         AIF   (T'&RTN EQ '$').A01 BRANCH IF ROUTINE WXTRN              BM007030
.*                                                                      BM007040
.*       ASSUME THAT THE ROUTINE EXISTS IN THIS CSECT                   BM007050
.*                                                                      BM007060
         AIF   ('&R' NE '').A00                                         BM007070
&NAME    B     &RTN ^              GO TO REQUESTED ROUTINE              BM007080
         MEXIT                                                          BM007090
.A00     ANOP                                                           BM007100
&NAME    BAL   &R,&RTN ^           PERFROM REQUESTED ROUTINE            BM007110
         MEXIT                                                          BM007120
.A01     ANOP                                                           BM007130
.*                                                                      BM007140
.*       ROUTINE IS IN ANOTHER CSECT SO ESTABLISH LINKAGE VIA CCB       BM007150
.*                                                                      BM007160
&NAME    LA    R11,$&RTN ^         POINT AT RTN DEFINITION IN CCB       BM007170
         AIF   ('&R' NE '').A03                                         BM007180
         B     $CBALINK ^          BR TO LINKAGE ROUTINE                BM007190
         MEXIT                                                          BM007200
.A03     ANOP                                                           BM007210
         BAL   R4,$CBALINK ^       BR TO LINKAGE ROUTINE                BM007220
.A04     ANOP                                                           BM007230
         AIF   ('&SYSECT' EQ 'BUDGIE3').A02                             BM007240
         L     R12,$&RTN.+4 ^      RESTORE SUB-CSECT BASE REGISTER      BM007250
.A02     ANOP                                                           BM007260
         MEND                                                           BM007270
./ ADD NAME=GETCB                                                       BM007280
         MACRO                                                          BM007290
&NAME    GETCB &CB,&BACK,&START                                         BM007300
.*                                                                      BM007310
.*       ACQUIRE CORE FOR AND CHAIN A NEW C/B                           BM007320
.*       REGISTER 2 MUST CONTAIN THE REQUIRED LENGTH                    BM007330
.*       C/B ADDRESSABILITY MUST BE ESTABLISHED VIA R8                  BM007340
.*       &BACK - REQUESTS THAT BACK CHAINING BE ESTABLISHED             BM007350
.*       &START - IDENTIFES THE DUMMY FIRST ELEMENT AT THE START OF CHN BM007360
.*                                                                      BM007370
&NAME    CBPREF &CB ^              ACQUIRE AND IDENTIFY C/B             BM007380
         LR    R8,R1 ^             PRESERVE ADDRESS OF NEW C/B          BM007390
         L     R1,$PTR&CB ^        RETRIEVE CURRENT C/B POINTER         BM007400
         ST    R8,$PTR&CB ^        ESTABLISH NEW C/B AS CURRENT         BM007410
         MVC   &CB&CB-&CB.NTRY+1(3,R1),$PTR&CB+1 POINT LAST AT THIS ONE BM007420
         AIF   ('&BACK' NE 'BACK').A01                                  BM007430
         ST    R1,&CB.L&CB ^       POINT NEW C/B AT LAST                BM007440
         ST    R1,$LPTR&CB ^       SET POINTER TO END OF CHAIN          BM007450
         AIF   ('&START' EQ '').A01                                     BM007460
         C     R1,=A(&START) ^     IS THIS C/B 1ST REAL ONE IN CHAIN    BM007470
         BNE   *+8 ^               BR IF NOT 1ST IN CHAIN               BM007480
         XC    &CB.L&CB(4),&CB.L&CB ZEROISE BACK POINTER IF 1ST C/B     BM007490
.A01     ANOP                                                           BM007500
         MEND                                                           BM007510
./ ADD NAME=CBPREF                                                      BM007520
         MACRO                                                          BM007530
&NAME   CBPREF &CB                                                      BM007540
         LCLC  &L                                                       BM007550
.*                                                                      BM007560
.*       ACQUIRE CORE FOR CONTROL BLOCK, AND ADD IDENTIFYING PREFIX     BM007570
.*        AND FLAG, ANF THE CONTROL CARD SEQUENCE NUMBER                BM007580
.*                                                                      BM007590
&NAME    LA    R2,CBPRLGTH(,R2) ^  INCREMENT FOR LENGTH OF C/B PREFIX   BM007600
         CBAL  R4,GETMAIN ^        ACQUIRE CORE FOR CONTROL BLOCK       BM007610
         USING CBPREFIX,R1 ^       ESTABLISH PREFIX ADDRESSABILITY      BM007620
         MVC   CBPRNAME,=CL4'&CB' ^SET C/B IDENTIFIER IN PREFIX         BM007630
         STH   R2,CBPRLEN ^        PRESERVE C/B LENGTH IN PREFIX        BM007640
         ZAP   CBPRCCNO,SYSIN+IOPSRCNT(4) SET C/C SEQ NO IN PREFIX      BM007650
         L     R15,$CBPLAST ^      GET ADDRESS OF PREVIOUS C/B PREFIX   BM007660
         ST    R1,CBPRCBPR-CBPREFIX(R15) POINT PREV PREFIX AT THIS ONE  BM007670
         ST    R1,$CBPLAST ^       ESTABLISH THIS PREFIX AS LAST ON CHA BM007680
         DROP  R1                  DROP PREFIX ADDRESSABILITY           BM007690
         LA    R1,CBPRLGTH(,R1) ^  POINT R1 PAST PREFIX AT START OF C/B BM007700
&L       SETC  'L'''                                                    BM007710
         AIF   ('&CB'(1,2) EQ 'CB').A01                                 BM007720
         AIF   ('&CB'(1,2) EQ 'SB').A01                                 BM007730
         AGO   .A02                                                     BM007740
.A01     ANOP                                                           BM007750
         ZAP   &CB.CCNO-&CB.NTRY(&L&CB.CCNO,R1),SYSIN+IOPSRCNT(4) C/C N BM007760
         MVI   &CB.FLAG-&CB.NTRY(R1),FLAG&CB SET IDENTIFYING FLAG       BM007770
.A02     ANOP                                                           BM007780
         MEND                                                           BM007790
./ ADD NAME=XCHNCB                                                      BM007800
         MACRO                                                          BM007810
&NAME    CHNCB &CB,&A                                                   BM007820
.*                                                                      BM007830
.*       SET CURRENT C/B POINTERS ( IN CCB ) TO POINT AT CHAIN ADDRESSE BM007840
.*        IN THIS C/B TO FACILITATE CHAINING OF DEPENDENT C/B'S         BM007850
.*                                                                      BM007860
         LCLA  &CNT,&LMIT                                               BM007870
         LCLC  &CC                                                      BM007880
&LMIT    SETA  N'&SYSLIST                                               BM007890
         AIF   (&LMIT GT 1).A00                                         BM007900
         MNOTE 16,'INSUFFICIENT OPERANDS'                               BM007910
         MEXIT                                                          BM007920
.A00     ANOP                                                           BM007930
&CNT     SETA  1                                                        BM007940
.A01     ANOP                                                           BM007950
&CNT     SETA  &CNT+1                                                   BM007960
         AIF   ('&CNT' GT '&LMIT').A02                                  BM007970
&CC      SETC  '&SYSLIST(&CNT)'                                         BM007980
         LA    R1,&CB&CC ^         POINT AT CHAIN ADDRESS WITHIN C/B    BM007990
         ST    R1,$PTR&CC ^        PRESERVE AS CURRENT TO FACILITATE CH BM008000
         AGO   .A01                                                     BM008010
.A02     MEND                                                           BM008020
./ ADD NAME=XABEND                                                      BM008030
         MACRO                                                          BM008040
&NAME    ABEND &N,&FULL                                                 BM008050
.*                                                                      BM008060
.*       PREPARE TO ABNORMALLY TERMIATE                                 BM008070
.*                                                                      BM008080
&NAME    LA    R11,&N ^            SET ABEND CODE IN WORK REGISTER      BM008090
         STH   R11,$ABNDCDE+2 ^    PRESERVE ABEND CODE IN CCB           BM008100
         AIF   ('&FULL' NE 'FULL').A01                                  BM008110
         OI    $ABNDCDE,FULLDUMP ^ SET FOR FULL CORE DUMP               BM008120
.A01     ANOP                                                           BM008130
         CBAL  ,DUMP ^             GO TO DUMP ROUTINE                   BM008140
         MEND                                                           BM008150
./ ADD NAME=XCOUNT                                                      BM008160
         MACRO                                                          BM008170
&NAME    COUNT &DCBSW,&NO                                               BM008180
.*                                                                      BM008190
.*       INCREMENT RECORD COUNTER IN DCBSW                              BM008200
.*                                                                      BM008210
         AIF   ('&NO' NE '0').A03                                       BM008220
&NAME    ZAP   &DCBSW.+IOPSRCNT(4),=P'0' ZEROISE LINE COUNT             BM008230
         MEXIT                                                          BM008240
.A03     ANOP                                                           BM008250
&NAME    AP    &DCBSW.+IOPSRCNT(4),=P'&NO' INCREMENT LINE COUNT         BM008260
         MEND                                                           BM008270
./ ADD NAME=POOLFER                                                     BM008280
         MACRO                                                          BM008290
       POOLFER &S,&FREE                                                 BM008300
.*                                                                      BM008310
.*       DEFINE A CSECT, INDICATING IF I MAY BE FREEMAINED              BM008320
.*                                                                      BM008330
         LCLC  &A                                                       BM008340
&A       SETC  '32'                                                     BM008350
         AIF   ('&FREE' NE 'FREE').A00                                  BM008360
&A       SETC  '40'                                                     BM008370
.A00     ANOP                                                           BM008380
         AIF   ('&SYSECT' NE 'BUDGIE3').NOGEN                           BM008390
$VBUDG3&S DC    AL1(&A),AL3(BUDGIE3&S),A(BDGEND3&S) DEFINE CSECT        BM008400
         MEXIT                                                          BM008410
.NOGEN   ANOP                                                           BM008420
$VBUDG3&S DC    AL1(&A),AL3(0),A(0) DEFINE CSECT                        BM008430
         MEND                                                           BM008440
./ ADD NAME=XSUBIN                                                      BM008450
         MACRO                                                          BM008460
&NAME    SUBIN &SAVE=,&PREFIX=,&FLOWTHR=                                BM008470
         GBLA  &SUBINC                                                  BM008480
         LCLA  &N,&S                                                    BM008490
         LCLC  &R,&P,&PP                                                BM008500
         LCLC  &NAME1                                                   BM008510
&SUBINC SETA   &SUBINC+1                                                BM008520
&NAME1   SETC  '&NAME'                                                  BM008530
         AIF   ('&SAVE' NE 'ALL').F00                                   BM008540
&P       SETC  '&PREFIX'                                                BM008550
         AIF   ('&P' NE '').G00                                         BM008560
&P       SETC  '$&SUBINC'                                               BM008570
.G00     ANOP                                                           BM008580
&NAME1   SETC  '&P.ALL'                                                 BM008590
&NAME1   DS    16F ^               SAVE AREA FOR ALL REGISTERS          BM008600
&NAME    STM   R0,R15,*-64 ^       PRESERVE ALL REGISTERS               BM008610
         MEXIT                                                          BM008620
.F00     ANOP                                                           BM008630
         AIF   ('&FLOWTHR' EQ '').D00                                   BM008640
         AIF   ('&FLOWTHR' EQ 'YES').D01                                BM008650
         MNOTE 4,'UNKNOWN ''FLOWTHR'' SPECIFICATION - IGNORED'          BM008660
         AGO   .D00                                                     BM008670
.D01     B     &NAME ^             BR AROUND SAVE AREAS                 BM008680
.D00     ANOP                                                           BM008690
&N       SETA  N'&SAVE                                                  BM008700
         AIF   (&N GT 0).C1                                             BM008710
&NAME    DS    0H                                                       BM008720
         MEXIT                                                          BM008730
.C1      ANOP                                                           BM008740
&P       SETC  '&PREFIX'                                                BM008750
         AIF   ('&P' EQ '').C2                                          BM008760
&PP      SETC  '&P.SAVE'                                                BM008770
         AGO   .C3                                                      BM008780
.C2      ANOP                                                           BM008790
&PP      SETC  '$&SUBINC'                                               BM008800
.C3      ANOP                                                           BM008810
.C5      ANOP                                                           BM008820
&S       SETA  &S+1                                                     BM008830
         AIF   (&S GT &N).C6                                            BM008840
&PP&SAVE(&S) DS F 0                SAVE AREA                            BM008850
         AGO   .C5                                                      BM008860
.C6      ANOP                                                           BM008870
&S       SETA  0                                                        BM008880
.E01     ANOP                                                           BM008890
&S       SETA  &S+1                                                     BM008900
         AIF   (&S GT &N).C4                                            BM008910
&NAME1   ST    &SAVE(&S),&PP&SAVE(&S) 0      PRESERVE REGISTER          BM008920
&NAME1   SETC  ' '                                                      BM008930
         AGO   .E01                                                     BM008940
.C4      ANOP                                                           BM008950
         MEND                                                           BM008960
./ ADD NAME=XSUBOUT                                                     BM008970
         MACRO                                                          BM008980
&NAME   SUBOUT &RESTORE=,&PREFIX=,&RETURN=                              BM008990
         GBLA  &SUBINC                                                  BM009000
         LCLA  &N,&S                                                    BM009010
         LCLC  &R,&P,&PP,&B                                             BM009020
         AIF   ('&NAME' EQ '').NONAME                                   BM009030
&NAME    DS    0H 0                                                     BM009040
.NONAME  ANOP                                                           BM009050
&N       SETA  N'&RESTORE                                               BM009060
         AIF   (&N NE 0).C3                                             BM009070
.C1      ANOP                                                           BM009080
&B       SETC  'R4'                                                     BM009090
         AIF   ('&RETURN' EQ '').C2                                     BM009100
         AIF   ('&RETURN'(1,1) NE '(').C11                              BM009110
&B       SETC  '&RETURN(1)'                                             BM009120
         AGO   .C2                                                      BM009130
.C11     ANOP                                                           BM009140
&B       SETC  '&RETURN'                                                BM009150
         B     &B 0                RETURN TO CALLER                     BM009160
         MEXIT                                                          BM009170
.C2      BR    &B 0                RETURN TO CALLER                     BM009180
         MEXIT                                                          BM009190
.C3      ANOP                                                           BM009200
         AIF   ('&RESTORE' EQ 'ALL').G00                                BM009210
&P       SETC  '&PREFIX'                                                BM009220
         AIF   ('&P' EQ '').C4                                          BM009230
&PP      SETC  '&P.SAVE'                                                BM009240
         AGO   .C5                                                      BM009250
.C4      ANOP                                                           BM009260
&PP      SETC  '$&SUBINC'                                               BM009270
.C5      ANOP                                                           BM009280
&S       SETA  &S+1                                                     BM009290
         AIF   (&S GT &N).C1                                            BM009300
         L     &RESTORE(&S),&PP&RESTORE(&S) 0     RESTORE REGISTER      BM009310
         AGO   .C5                                                      BM009320
         MEXIT                                                          BM009330
.G00     ANOP                                                           BM009340
&P       SETC  '&PREFIX'                                                BM009350
         AIF   ('&P' NE '').G01                                         BM009360
&P       SETC  '$&SUBINC'                                               BM009370
.G01     ANOP                                                           BM009380
&PP      SETC  '&P.ALL'                                                 BM009390
         LM    R0,R15,&PP ^        RESTORE ALL REGISTERS                BM009400
         AGO   .C1                                                      BM009410
         MEND                                                           BM009420
./ ADD NAME=PTR                                                         BM009430
         MACRO                                                          BM009440
&NAME    PTR   &FLD1,&FLD2                                              BM009450
         LCLC  &NME                                                     BM009460
&NME     SETC '&NAME'                                                   BM009470
         AIF   ('&FLD1' EQ '').A00                                      BM009480
&NME     SR    R6,R6 ^             ZEROISE WORK REGISTER                BM009490
&NME     SETC  ' '                                                      BM009500
         IC    R6,&FLD1 ^          GET POSN OF FIELD                    BM009510
         BCTR  R6,0 ^              DECREMENT POSN TO DISPLACEMENT       BM009520
         A     R6,SYSUT1+IOPSRECA ^ADD REC ADDR TO POINT AT FIELD       BM009530
.A00     AIF   ('&FLD2' EQ '').A01                                      BM009540
&NME     SR    R1,R1 ^             ZEROISE WORK REGISTER                BM009550
         IC    R1,&FLD2 ^          RETRIEVE LENGTH OF FIELD             BM009560
         BCTR  R1,0 ^              DECREMENT FOR EXECUTE                BM009570
.A01     ANOP                                                           BM009580
         MEND                                                           BM009590
./ ADD NAME=LINE                                                        BM009600
         MACRO                                                          BM009610
&NAME    LINE  &LNE,&DISP,&REG,&S=,&P=                                  BM009620
         LCLC  &D,&R,&L                                                 BM009630
         LCLC  &NAME1                                                   BM009640
&NAME1   SETC  '&NAME'                                                  BM009650
&D       SETC  '5'                                                      BM009660
         AIF   ('&DISP' EQ '').C1                                       BM009670
&D       SETC  '&DISP'                                                  BM009680
.C1      ANOP                                                           BM009690
&R       SETC  'R5'                                                     BM009700
         AIF   ('&REG' EQ '').C3                                        BM009710
         AIF   ('&REG'(1,1) EQ '(').C02                                 BM009720
         MNOTE 4,'INVALID REGISTER SPECIFICATION'                       BM009730
         MEXIT                                                          BM009740
.C02     ANOP                                                           BM009750
&R       SETC   '&REG(1)'                                               BM009760
.C3      AIF   ('&LNE' EQ '').C31                                       BM009770
&L       SETC  'L'''                                                    BM009780
&NAME    MVC   &D.(&L&LNE,&R),&LNE 0MOVE MESSAGE TO LINE                BM009790
&NAME1   SETC  ' '                                                      BM009800
.C31     AIF   ('&S' EQ '').C5                                          BM009810
 AIF ('&S' EQ '0' OR '&S' EQ '1' OR '&S' EQ '2' OR '&S' EQ '3').C4      BM009820
         AIF   ('&S' EQ 'P').C32                                        BM009830
         MNOTE 4,'INVALID SPACE SPECIFICATION'                          BM009840
         AGO   .C5                                                      BM009850
.C32     ANOP                                                           BM009860
&NAME1   MVI   0(&R),PAGESKIP 0    ESTABLISH PAGE SKIP                  BM009870
&NAME1   SETC  ' '                                                      BM009880
         AGO   .C5                                                      BM009890
.C4      ANOP                                                           BM009900
&NAME1   MVI   0(&R),SPCE&S.AFT 0  SET CARRIAGE SPACING                 BM009910
&NAME1   SETC  ' '                                                      BM009920
.C5      AIF   ('&P' EQ '').C6                                          BM009930
         AIF   ('&P' EQ 'N').C7                                         BM009940
         AIF   ('&P' EQ 'Y').C6                                         BM009950
         AIF   ('&P' EQ 'Z').C51                                        BM009960
         AIF   ('&P' EQ 'L').C8                                         BM009970
         MNOTE 4,'INVALID PRINT REQUEST'                                BM009980
         AGO   .C7                                                      BM009990
.C8      ANOP                                                           BM010000
&NAME1   CBAL  R4,PRINTLOG 0       PRINT LINE OF  LOG STATUS REPORT     BM010010
&NAME1   SETC  ' '                                                      BM010020
         AGO   .C7                                                      BM010030
.C51     ANOP                                                           BM010040
&NAME1   CBAL  R4,PRINTBBL 0       PRINT LINE OF B/B REPORT             BM010050
&NAME1   SETC  ' '                                                      BM010060
         AGO   .C7                                                      BM010070
.C6      ANOP                                                           BM010080
&NAME1   CBAL  R4,PRINT 0          PRINT LINE TO SYSPRINT               BM010090
&NAME1   SETC  ' '                                                      BM010100
.C7      ANOP                                                           BM010110
         MEND                                                           BM010120
./ ADD NAME=SCSECT                                                      BM010130
         MACRO                                                          BM010140
        SCSECT &A                                                       BM010150
BUDGIE3&A CSECT                                                         BM010160
        VERSID &A ^                GENERATE CSECT IDENTIFIER            BM010170
         USING BUDGIE3&A,R12 ^     ESTABLISH SUB-CSECT ADDRESSABILITY   BM010180
         USING CCBNTRY,R13 ^       ESTABLISH CCB ADDRESSABILITY         BM010190
         SPACE 1                                                        BM010200
         ENTRY BDGEND3&A ^         END OF CSECT                         BM010210
         MEND                                                           BM010220
./ ADD NAME=SCSEND                                                      BM010230
         MACRO                                                          BM010240
        SCSEND &A                                                       BM010250
         SPACE 1                                                        BM010260
         LTORG                                                          BM010270
         SPACE 1                                                        BM010280
         CNOP  0,8 ^               ENSURE CSECT LGTH IS MULTIPLE OF 8   BM010290
BDGEND3&A EQU  * ^                 END OF CSECT                         BM010300
         DROP  R12,R13 ^           DROP CSECT AND CCB ADDRESSABILITY    BM010310
         MEND                                                           BM010320
./ ADD NAME=CCNO                                                        BM010330
         MACRO                                                          BM010340
&NAME    CCNO  &FLD,&CB                                                 BM010350
.*                                                                      BM010360
.*       ADD CONTROL CARD REC NO FROM CURRENT C/B TO ERR MESSAGE        BM010370
.*                                                                      BM010380
         LCLC  &CBLK                                                    BM010390
&NAME    MVC   $WRKEDIT(4),EDITPATN MOVE EDIT PATTERN TO WORK AREA      BM010400
&CBLK    SETC  '&CB'                                                    BM010410
         AIF   ('&CB' NE '').A01                                        BM010420
&CBLK    SETC  'CB20'                                                   BM010430
.A01     ANOP                                                           BM010440
         ED    $WRKEDIT(4),&CBLK.CCNO EDIT CONTROL CARD SEQUENCE NUMBER BM010450
         MVC   &FLD.(4),$WRKEDIT ^ MOVE EDIT ED NUMBER TO ERROR MESSAGE BM010460
         MEND                                                           BM010470
./ ADD NAME=MVCD                                                        BM010480
         MACRO                                                          BM010490
&NAME    MVCD  &DISP,&FLD                                               BM010500
         LCLC  &L                                                       BM010510
&L       SETC  'L'''                                                    BM010520
&NAME    MVC   &DISP.(&L&FLD,R5),&FLD 0ADD MESSAGE TO LINE              BM010530
         MEND                                                           BM010540
./ ADD NAME=BBMESS                                                      BM010550
         MACRO                                                          BM010560
&NAME    BBMESS &N                                                      BM010570
&NAME    MVC   DTBBEMSS(L'BBMESS&N),BBMESS&N MOVE MESSAGE TO LINE       BM010580
         MEND                                                           BM010590
./ ADD NAME=VERSID                                                      BM010600
         MACRO                                                          BM010610
&NAME   VERSID &A                                                       BM010620
&NAME    DC    CL8'BUDGIE3&A' ^    CSECT NAME                           BM010630
         DC    CL8'VERS 2.1' ^     BUDGIE3 VERSION NUMBER               BM010640
         DC    CL8'&SYSDATE' ^     DATE CSECT ASSEMBLED                 BM010650
         DC    CL8'&SYSTIME' ^     TIME CSECT ASSEMBLED                 BM010660
         MEND                                                           BM010670
./ ADD NAME=BLANK                                                       BM010680
         MACRO                                                          BM010690
&NAME    BLANK &P1,&LEN,&SKIP                                           BM010700
         LCLC  &L,&R,&LL                                                BM010710
         AIF   ('&NAME' EQ '').A00                                      BM010720
&NAME    DS    0H 0                ENSURE ALIGNMENT                     BM010730
.A00     AIF   ('&P1'(1,1) NE '(').A01                                  BM010740
&R       SETC  '&P1(1)'                                                 BM010750
         AGO   .A02                                                     BM010760
.A01     AIF   ('&P1' EQ '').A011                                       BM010770
         MVI   &P1,C' ' 0          INSERT LEADING BLANK                 BM010780
&LL      SETC  'L''&P1'                                                 BM010790
         MVC   &P1.+1(&LL.-1),&P1 0 AND PROPAGATE SPACES                BM010800
.A011    L     R1,&P1.+IOPSRECA 0  GET BUFFER ADDRESS                   BM010810
&R       SETC  'R1'                                                     BM010820
.A02     ANOP                                                           BM010830
&L       SETC  '&LEN'                                                   BM010840
         AIF   ('&LEN' NE '').A03                                       BM010850
&L       SETC  '133'                                                    BM010860
.A03     MVI   0(&R),C' ' 0        MOVE SPACE TO START OF RECORD        BM010870
         MVC   1(&L.-1,&R),0(&R) 0 PROPAGATE SPACES                     BM010880
         AIF   ('&SKIP' NE '').A04                                      BM010890
         MEXIT                                                          BM010900
.A04     MVI   0(&R),&SKIP ^       MOVE IN SKIP CHATACTER               BM010910
         MEND                                                           BM010920
./ ADD NAME=PL                                                          BM010930
         MACRO                                                          BM010940
&NAME    PL    &PPLL,&IN,&OUT                                           BM010950
&NAME    LA    R2,&IN 0            POINT AT EBCDIC FIELDS               BM010960
         LA    R3,&OUT 0           POINT AT BINARY PL                   BM010970
         CBAL  R4,&PPLL.PL 0       CONVERT EBCDIC TO BINARY PL          BM010980
         MEND                                                           BM010990
./ ADD NAME=CCTST                                                       BM011000
         MACRO                                                          BM011010
&NAME    CCTST &ID                                                      BM011020
&NAME    CLC   0(4,R6),=C'&ID' 0  TEST FOR MATCHING ID                  BM011030
         AIF   ('&ID' GT 'MS29').C03                                    BM011040
         AIF   ('&ID' GT 'MS12').C01                                    BM011050
         BNE   *+8 ^               BR IF NOT                            BM011060
         B     CC&ID ^             GO PROCESS CONTROL CARD              BM011070
         MEXIT                                                          BM011080
.C01     AIF   ('&SYSECT' EQ 'BUDGIE3B').C02                            BM011090
         BNE   *+8 ^               BR IF NOT                            BM011100
         B     CC&ID ^             GO PROCESS CONTROL CARD              BM011110
         MEXIT                                                          BM011120
.C02     BNE   CCLB&SYSNDX ^       BR IF NOT                            BM011130
         CBAL  R4,READCC2 ^        GO TO OTHER CSECT TO PROCESS         BM011140
         B     CCPROCX ^           GO TO ROUTINE EXIT                   BM011150
         AGO   .C99                                                     BM011160
.C03     AIF   ('&SYSECT' EQ 'BUDGIE3B').C04                            BM011170
         BNE   *+8 ^               BR IF NOT                            BM011180
         B     CC&ID ^             GO PROCESS CONTROL CARD              BM011190
         MEXIT                                                          BM011200
.C04     BNE   CCLB&SYSNDX ^       BR IF NOT                            BM011210
         CBAL  R4,READCC3 ^        CONTINUE CONTROL CARD PROCESSING     BM011220
         B     CCPROCX ^           GO TO EXIT                           BM011230
.C99     ANOP                                                           BM011240
CCLB&SYSNDX EQU *                  CONTINUE CONTROL CARD PROCESSING     BM011250
         MEND                                                           BM011260
./ ADD NAME=TEST                                                        BM011270
         MACRO                                                          BM011280
&NAME    TEST  &T,&FLD                                                  BM011290
.*                                                                      BM011300
.*       PERFORM ANY REQUIRED TEST ( THAT IS DEFINED IN A 'SFXX' LABEL  BM011310
.*        UPON A FILED IN A CONTROL RECORD.                             BM011320
.*                                                                      BM011330
         LCLA  &LL                                                      BM011340
         LCLC  &RT                                                      BM011350
&RT      SETC  '&FLD'(1,4)                                              BM011360
&NAME    LA    R1,&FLD.-&RT.CARD ^ SET R1 TO DISPLACEMENT OF FIELD      BM011370
         LA    R1,1(,R1) ^         INCREMENT DIPLACEMENT TO POSN        BM011380
         STC   R1,FLDP ^           PRESERVE POSN OF FIELD TO B E TESTED BM011390
&LL      SETA  L'&FLD                                                   BM011400
         LA    R1,&LL ^            SET R1 TO LENGTH OF FIELD            BM011410
         STC   R1,FLDL ^           PRESERVE LENGTH OF FIELD             BM011420
         LA    R3,FLDP ^           POINT R3 AT FIELD'S PL               BM011430
         SR    R1,R1 ^             ZEROISE REGISTER 1                   BM011440
         IC    R1,SF&T ^           ESTABLISH TEST REQUIRED              BM011450
         CBAL  R4,TESTSEL ^        PERFORM REQUIEED TEST                BM011460
         MEND                                                           BM011470
./ ADD NAME=TSEL                                                        BM011480
         MACRO                                                          BM011490
&NAME    TSEL  &TEST,&CB                                                BM011500
.*       SET UP LINKAGE FOR TESTSEL ROUTINE                             BM011510
         AIF   ('&CB' EQ '').A01                                        BM011520
&NAME    L     R1,&CB 0            GET ADDRESS OF ASSOC C/B             BM011530
         SLL   R1,8 0              ALTER '00AAAAAA' TO 'AAAAAA00'       BM011540
         IC    R1,&TEST 0          ADD INTERNAL TEST ID TO R1           BM011550
         AGO   .A02                                                     BM011560
.A01     ANOP                                                           BM011570
&NAME    IC    R1,&TEST 0          ADD INTERNAL TST ID TO R1            BM011580
.A02     ANOP                                                           BM011590
         CBAL  R4,TESTSEL 0        PERFORM SELECTED TEST                BM011600
         MEND                                                           BM011610
./ ADD NAME=NUMERIC                                                     BM011620
         MACRO                                                          BM011630
&NAME NUMERIC  &FLD,&LEN,&SIGNED                                        BM011640
         LCLC  &R                                                       BM011650
         LCLC  &L                                                       BM011660
         AIF   ('&FLD'(1,1) NE '(').C1                                  BM011670
&R       SETC  '&FLD(1)'                                                BM011680
&NAME    LA    R1,0(,&R) 0         POINT R1 AT FIELD                    BM011690
         AGO   .C2                                                      BM011700
.C1      ANOP                                                           BM011710
&NAME    LA    R1,&FLD 0           POINT R1 AT FIELD                    BM011720
.C2      AIF   ('&LEN' EQ '').C3                                        BM011730
         LA    R15,&LEN 0          SET LENGTH IN R15                    BM011740
         AGO   .C4                                                      BM011750
.C3      ANOP                                                           BM011760
&L       SETC  'L'''                                                    BM011770
         LA    R15,&L&FLD ^        SET LENGTH IN  R15                   BM011780
.C4      AIF   ('&SIGNED' NE 'SIGNED').C5                               BM011790
         CBAL  R4,NUMRICS ^        PERFORM SIGNED TEST                  BM011800
         MEXIT                                                          BM011810
.C5      CBAL  R4,NUMERIC ^        PERFORM NUMERIC TEST                 BM011820
         MEND                                                           BM011830
