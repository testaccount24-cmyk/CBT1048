         TITLE 'PARROTL - I/O SUBROUTINES'                              L 000100
         MACRO                                                          L 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             L 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               L 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         L 000500
               EJECT                                                    L 000600
         CBPREFIX ,                CONTROL BLOCK PREFIX                 L 000700
               EJECT                                                    L 000800
         CCB   ,                   CENTRAL CONTROL BLOCK                L 000900
               EJECT                                                    L 001000
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          L 001100
               EJECT                                                    L 001200
         DCBD  DSORG=(PS,IS)       DSECT FOR DCB'S                      L 001300
               EJECT                                                    L 001400
         EQUATES ,                 GENERATE STANDARD EQUATES            L 001500
               EJECT                                                    L 001600
         HDG   ,                   HEADING LINE STORAGE AREA            L 001700
               EJECT                                                    L 001800
         LCD   ,                   LINE COMPONENT DESCRIPTOR            L 001900
               EJECT                                                    L 002000
         MONITREC ,                MONITOR RECORD                       L 002100
               EJECT                                                    L 002200
         OCB   ,                   OUTPUT CONTROL BLOCK                 L 002300
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       L 002400
         MEND                                                           L 002500
         SPACE 5                                                        L 002600
PARROTL  CSECT                                                          L 002700
         $CB   ,                   GENERATE DSECTS AND EQUATES          L 002800
         EJECT                                                          L 002900
     SCSECT L                                                           L 003000
         USING PARROTL,R12         ESTABLISH CSECT ADRESSABILITY        L 003100
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         L 003200
         SPACE 1                                                        L 003300
         ENTRY PARENDL             END OF CSECT                         L 003400
         ENTRY CLOSE               CLOSE DATA SETS                      L 003500
         ENTRY DCB01               DCB FOR SYSPRINT                     L 003600
         ENTRY DCB02               DCB FOR PRINT                        L 003700
         ENTRY DCB03               DCB FOR SYSIN                        L 003800
         ENTRY DCB04               DCB FOR SYSUT1                       L 003900
         ENTRY DCB05               DCB FOR TW80                         L 004000
         ENTRY DCB06               DCB FOR SYSLIN                       L 004100
         ENTRY DCB07               DCB FOR SYSLIB                       L 004200
         ENTRY DCB08               DCB FOR UNUSED                       L 004300
         ENTRY DCB09               DCB FOR SYSPARM                      L 004400
         ENTRY DCB10               DCB FOR SYSUT2                       L 004500
         ENTRY HEADP               HEADING ROUTINE FOR 'PRINT'          L 004600
         ENTRY IOERRTN             I/O ERROR ANALYSIS ROUTINE           L 004700
         ENTRY OCBXLST             EXIT LIST FOR USER-DEFINED OUTPUT DS L 004800
         ENTRY OPEN                OPEN DATA SETS                       L 004900
         ENTRY PRINT               WRITE TO SYSPRINT                    L 005000
         ENTRY PUTMON              WRITE MONITOR RECORD TO SYSMONTR     L 005100
         ENTRY PUTUT2              WRITE TO SYSUT2                      L 005200
         ENTRY PUTUT3              WRITE TO SYSUT3                      L 005300
         ENTRY READUT1             READ SYSUT1                          L 005400
         ENTRY READLIN             READ AND PRINT PARROT LOGO           L 005500
         ENTRY READIN              READ SYSIN ( CONTROL CARDS )         L 005600
         ENTRY READLIB             READ SYSLIB ( ADDITIONAL CONTROL CAR L 005700
         ENTRY TIOTSCN             SCAN TIOT FOR PRESENCE OF DD STATEME L 005800
         ENTRY REPORT              WRITE TO 'PRINT'                     L 005900
         ENTRY WRITE               WRITE ROUTINE FOR NON-REPORT OUTPUT  L 006000
         ENTRY WRITEH              HEADING ROUITNE FOR REPORT OUTPUT DS L 006100
         ENTRY WRITEP              WRITE ROUTINE FOR REPORT OUTPUT D/S  L 006200
         SPACE 1                                                        L 006300
         WXTRN #IOERROR            SYSAN EXIT ( $IOERROR IN CCB )       L 006400
         SPACE 1                                                        L 006500
         TITLE 'PARROTL - OPEN ROUTINES'                                L 006600
*********************************************************************** L 006700
*        OPEN ROUTINE                                                 * L 006800
*********************************************************************** L 006900
         SPACE 1                                                        L 007000
OPEN     IOM   OPEN,TYPE=DEF       GENERATE OPEN ROUTINE                L 007100
         TITLE 'PARROTL - CLOSE ROUTINES'                               L 007200
*********************************************************************** L 007300
*        CLOSE ROUTINE                                                * L 007400
*********************************************************************** L 007500
         SPACE 1                                                        L 007600
CLOSE    IOM   CLOSE,TYPE=DEF      GENERATE CLOSE ROUTINE               L 007700
         TITLE 'PARROTL - TIOTSCAN ROUTINE'                             L 007800
*********************************************************************** L 007900
*        THIS ROUTINE SCANS THE TIOT TO DETERMINE WHETHER OR          * L 008000
*         NOT A SPECIFIC DD STATEMENT IS PRESENT IN THE JCL.          * L 008100
*********************************************************************** L 008200
         SPACE 1                                                        L 008300
TIOTSCN  IOM   TIOTSCAN,TYPE=DEF   GENERATE TIOTSCAN ROUTINE            L 008400
         TITLE 'PARROTL - READ ROUTINES'                                L 008500
*********************************************************************** L 008600
*        READ INPUT DATA SET ( SYSUT1 )                               * L 008700
*********************************************************************** L 008800
         SPACE 1                                                        L 008900
READUT1  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 009000
READUT1R NI    SYSUT1SW,FF-MUT1RERD SET OFF RE-READ FLAG                L 009100
         CBAL  R4,CLEAREC          CLEAR RECORD AREA TO LOW-VALUES      L 009200
         L     R6,SYSUT1+IOPSRECA  POINT R6 AT RECORD WORK AREA         L 009300
         IOM   GETM,SYSUT1,(R6)    READ INTO WORK RAEA                  L 009400
         TM    SYSUT1SW,MUT1RERD   MUST WE RE-ISSUE THE READ (CONCAT'N) L 009500
         BZ    READUT1C            NO. CARRY ON WITH NORMAL PROCESSING    009600
         SP    SYSUT1+IOPSRCNT(4),=P'1' DECREMENT FOR RE-READ             009700
         B     READUT1R            LOOP BACK TO RE-ISSUE READ REQUEST   L 009800
READUT1C EQU   *                                                          009900
         SPACE 1                                                        L 010000
*        TO ALLOW FOR THE POSSIBILITY OF USER LOOPS, ISSUE A TASK STIMR L 010100
         SPACE 1                                                        L 010200
READUT1X TM    SWPARM,MPRMSTIM     IS LOOP-DETECTING STIMER REQUIRED    L 010300
         BZ    READUT1Y            BYPASS STIMER IF LOOP DETECTION NOT  L 010400
        STIMER TASK,$STIMEND,DINTVL=$DINTVL SET 5 SECOND TIMER          L 010500
READUT1Y CLI   SYSUT1+IOPSEOD,C'X' SET COND CODE FOR CALLER             L 010600
         L     R6,$PTRUT1R         POINT R6 AT FIRST DATA BYTE          L 010700
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         L 010800
         SPACE 5                                                        L 010900
EODUT1   IOM   EOF,SYSUT1          FLAG FOR EOD                         L 011000
        TTIMER CANCEL              CANCEL LOOP-DETECTING STIMER IF ANY  L 011100
         B     READUT1Y            GO SET COND CODE FOR CALLER          L 011200
         EJECT                                                          L 011300
*********************************************************************** L 011400
*        CLEAR SYSUT1 RECORD AREA TO LOW-VALUES                       * L 011500
*********************************************************************** L 011600
         SPACE 1                                                        L 011700
*        PARROT CAN PROCESS VARIABLE LENGTH RECORDS, SO TO PREVENT THE  L 011800
*         POSSIBILITY OF PICKING UP A FIELD FROM A PRECEDING, LONGER    L 011900
*         INPUT RECORD, THE RECORD AREA IS CLEARED TO LOW-VALUES PRIOR  L 012000
*         TO EVERY READ.                                                L 012100
         SPACE 1                                                        L 012200
CLEAREC  SUBIN ,                   ENTER ROUTINE                        L 012300
         L     R2,$SORTREC         POINT R2 AT RDW || RECORD AREA       L 012400
         LH    R3,$RECLUT1         RETRIEVE LENGTH OF SYSUT1 RECORDS    L 012500
         SR    R14,R14             NULLIFY 'FROM' ADDRESS               L 012600
         SR    R15,R15             SET 'FROM' LENGTH AND PAD CHAR TO 0  L 012700
         MVCL  R2,R14              SET RECORD AREA TO LOW VALUES        L 012800
         L     R2,$SORTREC         POINT AT RDW || RECORD AREA (AGAIN)  L 012900
         LH    R1,$RECLUT1         RETRIEVE SYSUT1 RECORD LENGTH        L 013000
         LA    R1,4(,R1)           ADD 4 TO ALLOW FOR RECORD DESC WORD  L 013100
         STH   R1,0(R2)            REFRESH RDW ( LEST RECFM=FB )        L 013200
*        MVC   0(2,R2),$RECLUT1    RESET RECORD LENGTH IN RDW (LEST FB) L 013300
        SUBOUT ,                   RETURN TO CALLER                     L 013400
         EJECT                                                          L 013500
*********************************************************************** L 013600
*        READ PARROT CONTROL CARDS                                    * L 013700
*********************************************************************** L 013800
         SPACE 1                                                        L 013900
*        THIS ROUTINE READS THE PARROT CONTROL CARDS.  COMMENTS AND     L 014000
*         PRINTER CONTROL STATEMENTS ARE PROCESSED INTERNALLY, AND      L 014100
*         ARE NOT RETURNED TO THE CALLER.  OLD TYPE ('GR99' ) COMMENT   L 014200
*         CARDS ARE ALTERED TO NEW TYPE ( '*   ' ) PRIOR TO PRINTING.   L 014300
         SPACE 1                                                        L 014400
*        THE RECORD COUNT IN THE DCBSW IS USED AS A COUNT OF THE        L 014500
*         NUMBER OF VALID EXECUTABLE CONTROL CARDS ENCOUNTERED,         L 014600
*         IGNORING COMMENTS AND PRINTER CONTROL CARDS ETC.  A TRUE      L 014700
*         RECORD COUNT IS ALSO MAINTAINED, AND IS RESTORED AT EOD.      L 014800
         SPACE 1                                                        L 014900
READIN   SUBIN SAVE=(R4)           READ SYSIN                           L 015000
READIN00 IOM   GET,SYSIN,(R6)      GET CONTROL CARD                     L 015100
         AP    SYSINCNT,$ONE       INCREMENT TRUE RECORD COUNT          L 015200
         CBAL  R4,CCPRNT           PRINT CONTROL CARD                   L 015300
         BE    READINR             BR IF A 'GR' CARD                    L 015400
         SP    SYSIN+IOPSRCNT(4),$ONE DECREMENT CARD COUNT              L 015500
         B     READIN00            GO GET NEXT CONTROL CARD             L 015600
         SPACE 1                                                        L 015700
READINR  CLI   SYSIN+IOPSEOD,C'X'  SET COND CODE FOR USER               L 015800
        SUBOUT RESTORE=(R4)        RETURN TO CALLER                     L 015900
         SPACE 5                                                        L 016000
EODIN    IOM   EOF,SYSIN           FLAG FOR EOF                         L 016100
         B     READINR             GO SET COND CODE FOR USER            L 016200
         EJECT                                                          L 016300
*********************************************************************** L 016400
*        READ PARROT CONTROL CARDS FROM SYSLIB                        * L 016500
*********************************************************************** L 016600
         SPACE 1                                                        L 016700
*        THIS ROUTINE IS IDENTICAL IN FUNCTION TO 'READIN', EXCEPT      L 016800
*         THAT IT READS CONTROL CARDS FROM THE OPTIONAL DD STATEMENT    L 016900
*         SYSLIB.  ALL PROCESSING IS LOGICALLY THE SAME.                L 017000
*        NOTE THAT THIS ROUTINE USES THE RECORD COUNT IN SYSIN DCBSW    L 017100
*         FOR MAINTAINING THE CURRENT 'GRXX' CARD COUNT.  THIS          L 017200
*         SIMPLIFIES LIFE FOR THE OTHER ROUTINES THAT NEED TO KNOW THE  L 017300
*         'EXECUTABLE' CARD COUNT; THEY CAN ALL DERIVE IT FROM THE SAME L 017400
*         FIELD, REGARDLESS OF THE ACTUAL SOURCE OF THE CONTROL CARD.   L 017500
         SPACE 1                                                        L 017600
READLIB  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 017700
READLIB0 IOM   GET,SYSLIB,(R6)     GET CONTROL CARD                     L 017800
         AP    SYSIN+IOPSRCNT(4),$ONE ASSUME IT IS A 'GRXX' CARD        L 017900
         MVC   95(8,R5),=C'(SYSLIB)' SET UP SYSLIB MESSAGE ON SYSPRINT  L 018000
         CBAL  R4,CCPRNT           PRINT CONTROL CARD                   L 018100
         BE    READLIB1            BR IF A 'GR' CARD                    L 018200
         SP    SYSIN+IOPSRCNT(4),$ONE DECREMENT 'GRXX' CARD COUNT       L 018300
         B     READLIB0            GO GET NEXT C/C FROM SYSLIB          L 018400
         SPACE 1                                                        L 018500
READLIB1 CLI   SYSLIB+IOPSEOD,C'X' SET COND CODE FOR CALLER             L 018600
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         L 018700
         SPACE 5                                                        L 018800
EODLIB   IOM   EOF,SYSLIB          FLAG FOR EOF                         L 018900
         ZAP   SYSIN+IOPSRCNT(4),SYSINCNT SET THE SYSIN RECORD COUNT    L 019000
         B     READLIB1            GO SET COND CODE FOR CALLER          L 019100
         EJECT                                                          L 019200
*********************************************************************** L 019300
*        WRITE TO SYSUT2                                              * L 019400
*********************************************************************** L 019500
         SPACE 1                                                        L 019600
PUTUT2   SUBIN SAVE=(R4,R6)        PRESERVE RETURN AND REC ADDRESSES    L 019700
         L     R6,$PTRUT1R         POINT AT 1ST DATA BYTE OF RECORD     L 019800
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 019900
         L     R1,SYSUT2+IOPSDCB   GET ADDRESS OF SYSUT2 DCB            L 020000
         TM    DCBRECFM,DCBRECV    IS THIS A VARIABLE LENGTH RECORD     L 020100
         BZ    *+8                 BR IF NOT VARIABLE LENGTH            L 020200
         L     R6,$SORTREC         POINT AT 'RDW' PRECEDING RECORD      L 020300
         DROP  R1                  DROP DCB ADDRESSABILITY              L 020400
         IOM   PUTM,SYSUT2,(R6)    WRITE SELECTED MODIFIED RECORD       L 020500
        SUBOUT RESTORE=(R4,R6)     RESTORE AND RETURN TO CALLER         L 020600
         EJECT                                                          L 020700
*********************************************************************** L 020800
*        WRITE TO SYSUT3                                              * L 020900
*********************************************************************** L 021000
         SPACE 1                                                        L 021100
PUTUT3   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 021200
         L     R6,$PTRUT1R         POINT AT 1ST DATA BYTE OF RECORD     L 021300
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 021400
         L     R1,SYSUT3+IOPSDCB   GET ADDRESS OF SYSUT3 DCB            L 021500
         TM    DCBRECFM,DCBRECV    IS THIS A VARIABLE LENGTH RECORD     L 021600
         BZ    *+8                 BR IF NOT VARIABLE LENGTH            L 021700
         L     R6,$SORTREC         POINT AT 'RDW' PRECEDING RECORD      L 021800
         DROP  R1                  DROP DCB ADDRESSABILITY              L 021900
         IOM   PUTM,SYSUT3,(R6)    WRITE REJECTED UNMODIFIED RECORD     L 022000
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         L 022100
         EJECT                                                          L 022200
*********************************************************************** L 022300
*        WRITE TO SYSMONTR                                            * L 022400
*********************************************************************** L 022500
         SPACE 1                                                        L 022600
PUTMON   SUBIN ,                   ENTER ROUTINE                        L 022700
         IOM   PUT,SYSMONTR        WRITE RECORD TO MONITOR DATA SET     L 022800
         MVC   0(MONRLGTH,R1),$SPACES BLANK OUT NEW OUTPUT RECORD       L 022900
        SUBOUT ,                   RETURN TO CALLER                     L 023000
         EJECT                                                          L 023100
*********************************************************************** L 023200
*        PRINT PARROT CONTROL CARDS                                   * L 023300
*********************************************************************** L 023400
         SPACE 1                                                        L 023500
*        THIS ROUTINE PRINTS PARROT CONTROL CARDS, AND DECIDES WHAT     L 023600
*         FURTHER PROCESSING IS REQUIRED.  OLD TYPE COMMENTS ('GR99')   L 023700
*         ARE CONVERTED TO NEW TYPE ('*   ') PRIOR TO PRINTING.  THE    L 023800
*         PARROT PRINTER CONTROL CARDS TITLE, EJECT, SKIPN ARE          L 023900
*         PROCESSED INTERNALLY BY THIS ROUTINE.  THE CONDITION CODE     L 024000
*         IS SET SUCH THAT THE USER MAY MAKE THE FOLLOWING TESTS:-      L 024100
*              BE  - 'GRXX' CARD THAT REQUIRES FURTHER PROCESSING       L 024200
*              BNE - COMMENT/PRINTER CONTROL CARD: ALREADY DEALT WITH   L 024300
         SPACE 1                                                        L 024400
CCPRNT   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 024500
         CLC   0(4,R6),=C'GR99'    IS IT OLD TYPE COMMENT CARD          L 024600
         BNE   *+10                BR IF NOT                            L 024700
         MVC   0(4,R6),=C'*   '    CHANGE TO NEW TYPE COMMENT CARD      L 024800
         CLC   4(5,R6),=C'  AND'   IS IT A MISPLACED 'AND               L 024900
         BNE   *+10                BR IF NOT                            L 025000
         MVC   4(5,R6),=C'AND  '   MOVE 'AND' TO CORRECT POSITION       L 025100
         MVC   10(80,R5),0(R6)     MOVE RECORD TO PRINT LINE            L 025200
         AP    $CCSEQNO,$ONE       ASSUME 'GR' CARD AND INCR COUNT      L 025300
         MVC   $WRKAREA(8),=X'4020202020202020' EDIT MASK TO WORK ARAE  L 025400
         ED    $WRKAREA(8),$CCSEQNO EDIT CARD NUMBER IN WORK AREA       L 025500
         MVC   1(4,R5),$WRKAREA+4  ADD CARD SEQ NO TO LINE              L 025600
         LA    R4,CCPRNTX          SET 'CONTINUE PROCESSING' ADDRESS    L 025700
         CLC   0(4,R6),=C'GR91'    IS THIS A GR91 CONTROL CARD          L 025800
         BE    CCPRNT1             BR IF IT IS A GR91                   L 025900
         TM    SWPARM2,MPRMGR90    ARE C/C BEING CONDITIONALLY IGNORED  L 026000
         BO    CCPRNT2             BR IF YES TO IGNORE THIS ONE ALSO    L 026100
CCPRNT1  CLC   0(2,R6),=C'GR'      IS IT GR CARD                        L 026200
         BE    READIN01            BR IF YES                            L 026300
CCPRNT2  SP    $CCSEQNO,$ONE       NOT 'GR' CARD SO DECREMENT COUNT     L 026400
         MVC   1(4,R5),$SPACES     BLANK OUT SEQ NO IN LINE             L 026500
         LA    R4,CCPRNTY          SET 'PROCESSING COMPLETE' ADDRESS    L 026600
         CLI   0(R6),C'*'          IS THIS A COMMENT CARD               L 026700
         BE    READIN01            BR IF YES TO PRINT COMMENT           L 026800
         CLC   0(2,R6),=C'GR'      IS THIS AN IGNORED CONTROL CARD      L 026900
         BE    READIN01            BR IF YES TO PRINT AS COMMENT        L 027000
         SPACE 1                                                        L 027100
*        PARROT CONTROL CARDS MAY CONTAIN 'PRINT' & 'NOPRINT' CARDS     L 027200
         SPACE 1                                                        L 027300
         CLC   0(7,R6),=C'NOPRINT' IS THIS A 'NOPRINT' CONTROL CARD     L 027400
         BNE   *+12                BR IF NOT                            L 027500
         OI    SWCCARDS,MCRDNPRT   SET FLAG TO SUPPRESS PRINTING        L 027600
         B     CCPRNTY             GO TO SET COND CODE                  L 027700
         CLC   0(5,R6),=C'PRINT'   IS THIS A 'PRINT' CONTROL CARD       L 027800
         BNE   *+12                BR IF NOT                            L 027900
         NI    SWCCARDS,FF-MCRDNPRT RESET PRINT-SUPPRESS FLAG           L 028000
         B     CCPRNTY             GO SET COND CODE FOR CALLER          L 028100
         EJECT                                                          L 028200
*********************************************************************** L 028300
*        PRINT PARROT CONTROL CARDS ( CONT'D )                        * L 028400
*********************************************************************** L 028500
         SPACE 1                                                        L 028600
*        PARROT CONTROL CARDS MAY INCLUSE PRINTER CONTROL CARDS         L 028700
*         STATEMENTS TITLE, EJECT, SKIPN.                               L 028800
         SPACE 1                                                        L 028900
         CLC   0(5,R6),=C'TITLE'   IS THIS A TITLE CARD                 L 029000
         BNE   *+14                BR IF NOT TITLE TO TEST FOR EJECT    L 029100
         MVC   SYSINH1(75),5(R6)   SET UP TITLE IN HEADING LINE         L 029200
         B     *+14                GO TREAT AS EJECT CARD               L 029300
         CLC   0(5,R6),=C'EJECT'   IS IT EJECT REQUEST                  L 029400
         BNE   *+18                BR IF NOT EJECT-TITLE CARD           L 029500
         MVI   0(R5),SPCE1NPR      SET TO NOT PRINT CARD CONTENTS       L 029600
         AP    SYSPRINT+IOPSRCNT(4),$PGELMIT FORCE LINE CNT TO PAGE LIM L 029700
         B     READIN01            GO FORCE PAGE SKIP                   L 029800
         CLC   0(4,R6),=C'SKIP'    IS IT A SKIP REQUEST                 L 029900
         BNE   READIN02            BR IF NOT SKIP REQUEST               L 030000
         MVI   0(R5),SPCE1NPR      ASSUME IT IS SKIP 1                  L 030100
         CLI   4(R6),C'1'          IS IT SKIP1                          L 030200
         BE    READIN01            BR IF IT IS SKIP1 REQUEST            L 030300
         MVI   0(R5),SPCE2NPR      ASSUME IT IS SKIP2                   L 030400
         AP    SYSPRINT+IOPSRCNT(4),$ONE ADJUST LINE COUNT FOR DOUNLE S L 030500
         CLI   4(R6),C'2'          IS IT SJIP2                          L 030600
         BE    READIN01            BR IF IT IS SKIP2 RQUEST             L 030700
         MVI   0(R5),SPCE3NPR      ASSUME IT MUST BE SKIP3              L 030800
         COUNT SYSPRINT,1          ADJUST LINE COUNT AGAIN              L 030900
         B     READIN01            GO PRINT LINE (AND RETRUN TO READIN) L 031000
READIN02 LA    R4,CCPRNTX          SET 'CONTINUE PROCESSING ADDRESS     L 031100
READIN01 TM    SWCCARDS,MCRDNGEN+MCRDXTRA IS IT SYSLIB & NOGEN          L 031200
         BOR   R4                  AVOID PRINT ROUTINE IF YES           L 031300
         TM    SWCCARDS,MCRDNPRT   IS 'NOPRINT' OPTION IN EFFECT        L 031400
         BOR   R4                  AVOID PRINT ROUTINE IF YES           L 031500
         SPACE 1                                                        L 031600
         CBAL  ,PRINT              GO PRINT CONTROL CARD                L 031700
         SPACE 1                                                        L 031800
*        PRINT WILL RETURN CONTROL TO 'CCPRNTY' FOR COMMENT/PRINTER     L 031900
*         CONTROL CARDS, AND TO 'CCPRNTX' FOR 'GRXX' C NTROL CARDS.     L 032000
         SPACE 1                                                        L 032100
CCPRNTY  CLI   *,Y                 SHOW NO FURTHER PROCESSING REQUIRED  L 032200
         B     CCPRNTXX            AVOID RESETTING COND CODE            L 032300
CCPRNTX  CLC   4(5,R6),=C'AND  '   IS THIS A TEST CONTINUATION CARD     L 032400
         BNE   *+10                BR IF NOT                            L 032500
         MVC   2(2,R6),=C'02'      CONVERT TO 'GR02' FOR CONVENIENCE    L 032600
         CLI   *,X                 SHOW 'GRWW' CARD REQUIRING MORE WORK L 032700
CCPRNTXX SUBOUT RESTORE=R4         RESTORE AND RETURN                   L 032800
         EJECT                                                          L 032900
*********************************************************************** L 033000
*        READ AND PRINT PARROT LOGO                                   * L 033100
*********************************************************************** L 033200
         SPACE 1                                                        L 033300
READLIN  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 033400
         TM    SYSLIN+IOPSSW,IOSWPRES TEST IF DD STATEMENT PRESENT      L 033500
         BZ    EODLIN              BYPASS ROUTINE IF NOT THERE          L 033600
READLIN1 IOM   GET,SYSLIN,(R7)     GET LINE OF LOGO                     L 033700
         ZAP   PRINTDS+IOPSRCNT(4),$ZERO PREVENT UNWANTED PAGE SKIPS    L 033800
         SPACE 1                                                        L 033900
*        IT MAY BE NECESSARY TO CONVERT FROM ASA TO MACHINE CONTROL CHR L 034000
         SPACE 2                                                        L 034100
         CBAL  R4,ASATOFM          CONVERT ASA TO FM IF NECESSARY       L 034200
         BE    READLIN1            IF ASA, HAS BEEN PRINTED SO RETURN   L 034300
         SPACE 1                                                        L 034400
*        IF IT WAS NOT ASA CONTROL, IT MUST BE MACHINE SO CONTINUE      L 034500
         SPACE 1                                                        L 034600
         MVC   0(133,R5),0(R7)     MOVE LOGO TO INE TO BUFFER           L 034700
         CBAL  R4,REPORT           WRITE LINE OF LOGO                   L 034800
         B     READLIN1            LOOP BACK FOR NEXT LINE              L 034900
         SPACE 1                                                        L 035000
EODLIN   IOM   EOF,SYSLIN          FLAG FOR EOD                         L 035100
        SUBOUT RESTORE=R4          RETURN TO CALLER                     L 035200
         EJECT                                                          L 035300
*********************************************************************** L 035400
*        CONVERT ASA CONTROL CHARACTERS TO MACHINE                    * L 035500
*********************************************************************** L 035600
         SPACE 1                                                        L 035700
*        ON ENTRY, R7 CONTAINS THE ADDRESS OF THE LINE THAT IS TO BE    L 035800
*         WRITTEN TO 'PRINT'.  IF THE LINE STARTS WITH AN ASA CONTROL   L 035900
*         CHARACTER, THE NECESSARY MACHINE CONTRROL CHARACTERS ARE      L 036000
*         GENERATED, AND THE LINE IS WRITTEN.  IF THE LINE DOES NOT     L 036100
*         START WITH AN ASA CONTROL CHARACTER, NO ACTION IS TAKEN.      L 036200
         SPACE 1                                                        L 036300
*        ON RETURN, THE CONDITION CODE IS SET SUCH THATTHE CALLER CAN   L 036400
*         MAKE THE FOLLOWING CONDITIONAL BRANCHES :-                    L 036500
*              BE  - ASA CONTROL CHARACTER FOUND: LINE PRINTED          L 036600
*              BNE - NO ASA CONTROL FOUND: NO ACTION TAKEN              L 036700
         SPACE 1                                                        L 036800
ASATOFM  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 036900
         MVI   0(R5),PAGESKIP      ASSUME EJECT-THEN-PRINT SPECIFIED    L 037000
         CLI   0(R7),C'1'          TEST IF EJECT-THEN-PRINT SPECIFIED   L 037100
         BE    ASATOFM5            BR IF YES TO PRINT                   L 037200
         CLI   0(R7),C'+'          TEST IF ASA PRINT-NO-SPACE           L 037300
         BE    ASATOFM6            BR IF YES TO PRINT-NO-SPACE          L 037400
         MVI   0(R5),SPCE1NPR      ASSUME PRINT-SPACE-1 IS SPECIFIED    L 037500
         CLI   0(R7),C' '          WAS ASA PRINT-SPACE-1 SPECIFIED      L 037600
         BE    ASATOFM5            BRIF YES TO PRINT                    L 037700
         MVI   0(R5),SPCE2NPR      ASSUME SPACE-2-PRINT                 L 037800
         CLI   0(R7),C'0'          TEST IF SPACE-2-P INT                L 037900
         BE    ASATOFM5            BR IF YES TO PRINT                   L 038000
         MVI   0(R5),SPCE3NPR      ASSUME SPACE-3-PRINT                 L 038100
         CLI   0(R7),C'-'          TEST IF SPACE-3-PRINT                L 038200
         BE    ASATOFM5            BR IF YES TO PRINT                   L 038300
         SPACE 1                                                        L 038400
*        IT IS NOT A KNOWN ASA CHARACETR SO RETURN                      L 038500
         SPACE 1                                                        L 038600
         CLI   *,Y                 SET COND CODE FOR CALLER             L 038700
         B     ASATOFMX            EXIT FROM ROUTINE                    L 038800
         SPACE 1                                                        L 038900
ASATOFM5 CBAL  R4,REPORT           ISSUE APPROPRITAE SPACING INFORMATIO L 039000
ASATOFM6 MVI   0(R5),SPCE0AFT      ESTABLISH PRINT-NO-SPACE             L 039100
         MVC   1(132,R5),1(R7)     MOVE DATA TO LINE                    L 039200
         CBAL  R4,REPORT           PRINT DATA WITHOUT SPACEING          L 039300
         CLI   *,X                 SET COND CODE FOR USER               L 039400
ASATOFMX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         L 039500
         TITLE 'PARROTL - PRINT ROUTINES'                               L 039600
*********************************************************************** L 039700
*        WRITE TO SYSPRINT                                            * L 039800
*********************************************************************** L 039900
         SPACE 1                                                        L 040000
PRINT    SUBIN ,                   PRINT MESSAGE ON SYSPRINT            L 040100
         IOM   PUT,SYSPRINT,(R5),PRINT,RTN=HEADSY PUT TO SYSPRINT       L 040200
         L     R5,SYSPRINT+IOPSRECA GET BUFFER ADDRESS (LEST NO DD ST)  L 040300
         MVI   0(R5),C' '          INSERT LEADING BLANK ...             L 040400
         MVC   1(132,R5),0(R5)      ... AND PROPAGATE                   L 040500
         MVI   0(R5),SPCE1AFT      INSERT DEFAULT SINGLE SPACE          L 040600
        SUBOUT ,                   RETURN TO CALLER                     L 040700
         EJECT                                                          L 040800
*********************************************************************** L 040900
*        WRITE HEADING FOR SYSPRINT ( CONTROL CRADS ONLY )            * L 041000
*********************************************************************** L 041100
         SPACE 1                                                        L 041200
HEADSY   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 041300
         ZAP   SYSPRINT+IOPSRCNT(4),=P'0' ZEROISE LINE COUNTER          L 041400
         MVI   0(R5),PAGESKIP      SET TO SKIP TO NEW PAGE              L 041500
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     L 041600
         TM    SWINIT,MINTCC       ARE WE PRINTING CONTROL CARDS        L 041700
         BZ    HDPRNTX             BYPASS HEADING LINES IF NOT          L 041800
         MVI   0(R5),SPCE2AFT      ESTABLISG DOUBLE SPACE               L 041900
         MVC   10(L'SYSINH1,R5),SYSINH1 SET UP 1ST HEADING LINE         L 042000
         ED    SYSINH1P-SYSINH1+10(4,R5),PGECNTSY EDIT PAGE COUNT       L 042100
         AP    PGECNTSY,$ONE       INCREMENT PAGE COUNT                 L 042200
         CBAL  R4,PRINT            PRINT HEADING LINE                   L 042300
         MVC   10(80,R5),SYSINH2   MOVE IN 2ND HEADING LINE             L 042400
         CBAL  R4,PRINT             ... AND PRINT IT                    L 042500
         MVC   10(80,R5),SYSINH3   MOVE IN 3RD HEADING LINE             L 042600
         MVI   0(R5),SPCE2AFT      SET TO DOUBLE SPACE                  L 042700
         CBAL  R4,PRINT            PRINT 2ND HEADING LINE               L 042800
         COUNT SYSPRINT,1          ALLOW FOR DOUBLE SPACE               L 042900
HDPRNTX SUBOUT RESTORE=R4          RESTORE & RETURN TO CALLER           L 043000
         EJECT                                                          L 043100
*********************************************************************** L 043200
*        WRITE REPORT ( TO DDNAME PRINT )                             * L 043300
*********************************************************************** L 043400
         SPACE 1                                                        L 043500
REPORT   SUBIN ,                   ENTER ROUTINE                        L 043600
         IOM   PUT,PRINTDS,(R5),PRINT,RTN=HEADP PUT LINE TO PRINT       L 043700
         L     R5,PRINTDS+IOPSRECA RETRIEVE CURRENT BUFFER ADDRESS      L 043800
         MVI   0(R5),C' '          INSERT LEADING BLANK ...             L 043900
         MVC   1(132,R5),0(R5)      ... AND PROPAGATE                   L 044000
         MVI   0(R5),SPCE1AFT      INSERT DEFAULT SINGLE SPACE          L 044100
PRNTBBLX SUBOUT ,                  RETURN TO CALLER                     L 044200
         EJECT                                                          L 044300
*********************************************************************** L 044400
*        HEADING ROUTINE FOR DDNAME PRINT                             * L 044500
*********************************************************************** L 044600
         SPACE 1                                                        L 044700
HEADP    SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 044800
*        ZAP   PRINTDS+IOPSRCNT(4),$ZERO ZEROISE LINE COUNTER           L 044900
*        MVI   0(R5),PAGESKIP      ESTABLISG PAGE SKIP                  L 045000
*        CBAL  R4,REPORT           SKIP TO NEW PAGE                     L 045100
*        MVI   0(R5),SPCE3AFT      ESTABLISH TRIPLE SPACE               L 045200
*        MVC   PRINTH1D,$IPLDATE   MOVE DATE TO REPORT HEADING          L 045300
*        MVC   1(132,R5),PRINTH1   MOVE IN 1ST HEADING LINE             L 045400
*        ED    PRINTH1P-PRINTH1(L'PRINTH1P,R5),PGECNTP EDIT PAGE COUNT  L 045500
*        AP    PGECNTP,$ONE        INCREMENT PAGE COUNT                 L 045600
*        CBAL  R4,REPORT           PRINT 1ST HEADING LINE               L 045700
*        MVC   1(132,R5),PRINTH2   SET UP 2ND HEADING LINE              L 045800
*        CBAL  R4,REPORT           PRINT 2ND HEADING LINE               L 045900
*        MVI   0(R5),SPCE2AFT      ESTABLISH DOUBLE SPACE               L 046000
*        MVC   1(132,R5),PRINTH3   SET UP 3RD HEADINH LINE              L 046100
*        CBAL  R4,REPORT           PRINT 3RD HEADING LINE               L 046200
        SUBOUT RESTORE=(R4)        RETURN TO CALLER                     L 046300
         EJECT                                                          L 046400
*********************************************************************** L 046500
*        GENERAL PURPOSE WRITE ROUTINE FOR NON-REPORT OUTPUT D/S      * L 046600
*********************************************************************** L 046700
         SPACE 1                                                        L 046800
*        THIS ROUTINE IS A GENERAL PURPOSE OUTPUT ROUTINE FOR           L 046900
*         NON-REPORT OUTPUT DATA SETS DEFINED IN OCB'S.                 L 047000
         SPACE 1                                                        L 047100
*        UPON ENTRY :-                                                  L 047200
*         R7  - ADDRESS OF OCB                                          L 047300
         SPACE 1                                                        L 047400
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         L 047500
WRITE    SUBIN ,                   ENTER ROUTINE                        L 047600
         L     R2,OCBIOSW          GET ADDRESS OF IOSW C/B              L 047700
         MVC   DMYDCBSW(IOPSLGTH),0(R2) MOVE DCBSW TO WORK AREA         L 047800
         IOM   PUT,DMYDCBSW,(R5)   WRITE RECORD AND GET NEXT BUFFER ADR L 047900
         L     R2,OCBIOSW          GET ADDRESS OF IOSW C/B              L 048000
         MVC   0(IOPSLGTH,R2),DMYDCBSW REFRESH DCBSW FROM WORK AREA     L 048100
         L     R5,IOPSRECA(R2)     GET ADDRESS OF NEW BUFFER            L 048200
         LR    R14,R5              SET ADDRESS IN REG 14 ALSO           L 048300
         L     R15,IOPSDCB(R2)     GET ADDRESS OF DCB                   L 048400
         USING IHADCB,R15          ESTABLISH DCB ADDRESSABILITY         L 048500
         LH    R15,DCBLRECL        GET RECORD LENGTH                    L 048600
         DROP  R15                 DROP DCB ADDRESSABILITY              L 048700
         SR    R0,R0               ZEROISE ?FROM' ADDRESS               L 048800
         SR    R1,R1               ZEROISE 'FROM' LENGTH                L 048900
         ICM   R1,8,$SPACES        SET PAD CHARACTER TO BLANK           L 049000
         MVCL  R14,R0              BLANK OUT BUFFER AREA                L 049100
         NI    OCBSW,FF-MOCBRITE   SET OFF 'WRITE' FLAG                 L 049200
        SUBOUT ,                   RETURN TO CALLER                     L 049300
         DROP  R7                  DROP OCB ADDRESSABILITY              L 049400
         EJECT                                                          L 049500
*********************************************************************** L 049600
*        GENERAL PURPOSE WRITE ROUTINE FOR REPORT DATA SETS           * L 049700
*********************************************************************** L 049800
         SPACE 1                                                        L 049900
*        THIS ROUTINE IS A GENERAL PURPOSE OUTPUT ROUTINE FOR REPORT    L 050000
*         DATA SETS DEFINED IN OCB'S.                                   L 050100
         SPACE 1                                                        L 050200
*        UPON ENTRY :-                                                  L 050300
*         R7  - ADDRESS OF OCB                                          L 050400
         SPACE 1                                                        L 050500
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         L 050600
WRITEP   SUBIN ,                   ENTER ROUTINE                        L 050700
         L     R2,OCBIOSW          GET ADDRESS OF IOSW C/B              L 050800
         L     R5,IOPSRECA(R2)     RETRIEVE CURRENT RECORD ADDRESS      L 050900
         CLI   0(R5),SPCE0AFT      IS THIS A 'PRINT-NO-SPACE' REQUEST   L 051000
         BNE   *+10                BR IF NOT                            L 051100
         SP    IOPSRCNT(4,R2),$ONE DECREMENT LINE COUNT IF NO SPACE     L 051200
         CLI   0(R5),SPCE2AFT      IS THIS A DOUBLE SPACE REQUEST       L 051300
         BNE   *+10                BR IF NOT                            L 051400
         AP    IOPSRCNT(4,R2),$ONE INCREMENT LINE COUNT TO ALLOW FOR 2  L 051500
         CLI   0(R5),SPCE3AFT      IS THIS A TRIPLE SPACE REQUEST       L 051600
         BNE   *+10                BR IF NOT                            L 051700
         AP    IOPSRCNT(4,R2),=P'2' INCREMENT LINE COUNT FOR TRIPLE SPA L 051800
         MVC   DMYDCBSW(IOPSLGTH),0(R2) MOVE DCBSW TO  WORK AREA        L 051900
         IOM   PUT,DMYDCBSW,(R5),PRINT,OCBLPGE,RTN=WRITEH PRINT LINE    L 052000
         EJECT                                                          L 052100
*********************************************************************** L 052200
*        GENERAL PURPOSE WRITE ROUTINE FOR REPORT DATA SETS ( CONT'D )* L 052300
*********************************************************************** L 052400
         SPACE 1                                                        L 052500
         L     R2,OCBIOSW          GET ADDRESS OF IOSW C/B              L 052600
         MVC   0(IOPSLGTH,R2),DMYDCBSW REFRESH DCBSW FROM WORK AREA     L 052700
         L     R14,IOPSRECA(R2)    RETRIEVE CURRENT BUFFER ADDRESS      L 052800
         L     R15,IOPSDCB(R2)     GET DCB ADDRESS                      L 052900
         USING IHADCB,R15          ESTABLISH DCB ADDRESS                L 053000
         LH    R15,DCBLRECL        GET RECORD LENGTH                    L 053100
         DROP  R15                 DROP DCB ADDRESSABILITY              L 053200
         SR    R0,R0               ZEROISE 'FROM' ADDRESS               L 053300
         SR    R1,R1               SEROISE 'FROM' LENGTH                L 053400
         ICM   R1,8,$SPACES        SET PAD CHARACETRE TO BLANK          L 053500
         MVCL  R14,R0              BLANK OUT BUFFER AREA                L 053600
         L     R5,IOPSRECA(R2)     RETRIEVE BUFFER ADDRESS              L 053700
         MVC   0(1,R5),OCBPCC      INSERT DEFAULT LINE SPACING CHAR     L 053800
         NI    $PROCESS,FF-PROCLINE SET PFF FLAG TO PRINT CURRENT OCB   L 053900
         NI    OCBSW,FF-MOCBRITE   SET OFF 'WRITE' FLAG                 L 054000
         NI    OCBSW,FF-MOCBHEAD   SET OFF 'HEADING WRITTEN' FLAG       L 054100
        SUBOUT ,                   RETURN TO CALLER                     L 054200
         DROP  R7                  DROP OCB ADDRESSABILITY              L 054300
         EJECT                                                          L 054400
*********************************************************************** L 054500
*        HEADING ROUTINE FOR 'WRITEP' PROCESSING                      * L 054600
*********************************************************************** L 054700
         SPACE 1                                                        L 054800
*        THIS ROUTINE IS A GENERAL PURPOSE HEADING ROUITNE FOR          L 054900
*         PRODUCING HEADINGS ON REPORTS WRITTEN BY THE ROUTINE 'WRITEP' L 055000
         SPACE 1                                                        L 055100
*        UPON ENTRY :-                                                  L 055200
*         R2  - ADDRESS OF IOSW                                         L 055300
*         R5  - ADDRESS OF CURRENT BUFFER                               L 055400
*         R7  - ADDRESS OF OCB                                          L 055500
         SPACE 1                                                        L 055600
         USING HDGNTRY,R8          ESTABLISH HDG ADDRESSABILITY         L 055700
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         L 055800
WRITEH   SUBIN SAVE=(R4,R8)        PRESERVE RETURN ADDRESS              L 055900
         CBAL  R4,CLEARBL          RESET DUPLICATE FIELD SUPPRESSION    L 056000
         ZAP   IOPSRCNT(4,R2),$ZERO ZEROISE LINE COUNT                  L 056100
         MVI   0(R5),PAGESKIP      ESTABLISH SKIP TO NEW PAGE ...       L 056200
         CBAL  R4,WRITEP,NESTED=YES ... AND ISSUE IT                    L 056300
         L     R3,IOPSDCB(R2)      GET DCB ADDRESS                      L 056400
         USING IHADCB,R3           ESTABLISH DCB ADDRESSABILITY         L 056500
         LH    R3,DCBLRECL         GET RECORD LENGTH                    L 056600
         DROP  R3                  DROP DCB ADDRESSABILITY              L 056700
         BCTR  R3,0                DECREMENT LENGTH FOR EXECUTES        L 056800
         AP    OCBPCNT,$ONE        INCREMENT PAGE COUNT                 L 056900
         NC    OCBHDG+1(3),OCBHDG+1 ARE THERE ANY HEADING LINES         L 057000
         BNZ   WRITEH1             BR IF YES TO PROCESS                 L 057100
         CBAL  R4,HEADOCB          ACTION ANT GR10 SPECIFICATIONS       L 057200
         B     WRITEHX             GO TO ROUTINE EXIT                   L 057300
WRITEH1  L     R8,OCBHDG           GET ADDRESS OF 1ST HEADING LINE STOR L 057400
         MVC   HDGHEAD+100(5),=C'DATE:' ADD 'DATE:' TO HEADING          L 057500
         MVC   HDGHEAD+106(L'$IPLDATE),$IPLDATE ADD IPL DATE TO LINE    L 057600
         MVC   HDGHEAD+122(L'PRINTH1P),PRINTH1P ADD EDIT MASK TO LINE   L 057700
         CLC   OCBRID,$SPACES      TEST IF OPTIONAL REPORT ID SUPPLIED  L 057800
         BE    *+10                DON'T TOUCH LINE IF NOT SUPPLIED     L 057900
         MVC   HDGHEAD+1(L'OCBRID),OCBRID INSERT ( OPTIONAL ) REPORT ID L 058000
         EDMK  HDGHEAD+122(L'PRINTH1P),OCBPCNT EDIT PAGE COUNT          L 058100
         SH    R1,=H'5'            DECREMENT TO ALLOW FOR 'PAGE '       L 058200
         MVC   0(4,R1),=C'PAGE'    ADD 'PAGE ' TO LINE                  L 058300
         EX    R3,MVCHEAD          MOVE HEADING LINE TO BUFFER          L 058400
         CBAL  R4,WRITEP,NESTED=YES WRITE HEADING LINE                  L 058500
         CBAL  R4,HEADOCB          PROCESS ANY GR10 SPECIFCIATIONS      L 058600
         EJECT                                                          L 058700
*********************************************************************** L 058800
*        HEADING ROUTINE FOR 'WRITEP' PROCESSING ( CONT'D )           * L 058900
*********************************************************************** L 059000
         SPACE 1                                                        L 059100
WRITEH2  L     R8,HDGHDG           GET ADDRESS OF NEXT HEADING STORE    L 059200
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     L 059300
         BZ    WRITEHX             GO TO EXIT IF END OF CHAIN           L 059400
         EX    R3,MVCHEAD          MOVE HEADING TO BUFFER               L 059500
         CBAL  R4,WRITEP,NESTED=YES WRITE HEADING LINE                  L 059600
         B     WRITEH2             LOOP BACK FOR NEXT HEADING LINE      L 059700
WRITEHX  MVI   0(R5),SPCE2AFT      ESTABLISH TWO BLANK LINES            L 059800
         CBAL  R4,WRITEP,NESTED=YES .... AND PRINT THEM                 L 059900
         CBAL  R4,WRITEHCH         PRODUCE ANY REQUIRED CONTROL HEADING L 060000
         OI    OCBSW,MOCBHEAD      FLAG THAT HEADINGS JUST WRITTEN      L 060100
         NI    OCBSW,FF-MOCBTOTL   SET OFF 'TOTAL JUST PRINTED' FLAG    L 060200
        SUBOUT RESTORE=(R4,R8)     RESTORE AND RETURN TO CALLER         L 060300
         DROP  R7                  DROP OCB ADDRESSABILITY              L 060400
         DROP  R8                  DROP HDG ADDRESSABILITY              L 060500
         EJECT                                                          L 060600
*********************************************************************** L 060700
*        ACTION ANY GR10 HEADING SPECIFICATIONS FOR THIS OCB          * L 060800
*********************************************************************** L 060900
         SPACE 1                                                        L 061000
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         L 061100
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         L 061200
HEADOCB  SUBIN SAVE=ALL            PRESERVE ALL REGISTERS               L 061300
         TM    $STATUS,STATEOD     IS THIS END-OF-FILE TIME             L 061400
         BO    HEADOCBX            GO TO EXIT IF YES: AVOID GR10'S      L 061500
         L     R8,$LCDHEAD         GET ADDRESS OF 1ST HEADING TYPE LCD  L 061600
         B     *+8                 BYPASS FORWARD CHAINING              L 061700
HEADOCB1 L     R8,LCDLCD           GET ADDRESS OF NEXT LCD              L 061800
         LTRR  R8                  PURIFY AND TEST FOR END OF CHAIN     L 061900
         BZ    HEADOCB2            BR IF END OF CHAIN TO WRITE          L 062000
         CLC   LCDIOLB,OCBLABL     DOES THE CLD APPLY TO THIS OCB       L 062100
         BNE   HEADOCB1            LOOP BACK TO GET NEXT IF NOT         L 062200
         TM    LCDSW,MLCDKEYN      WAS KEY NO SUPPLIED                  L 062300
         BO    HEADOCB1            IGNORE THIS LCD IF YES               L 062400
         LTA   R1,OCBHDG,*+10      RETRIEVE ADDRESS OF 1ST HDG          L 062500
         MVC   0(1,R5),HDGHEAD-HDGNTRY(R1) SET REQUIRED LINE SPACING    L 062600
HEADOCB3 CBAL  R4,PROCLCD,NESTED=YES PERFORM DESIRED LCD PROCESSING     L 062700
         BL    HEADOCB2            TERMINATE IF 'DELETE' FOUND          L 062800
         OI    $PROCESS,PROCLINE   FLAG TO WRITE LINE FOR THIS OCB      L 062900
         B     HEADOCB1            LOOP BACK TO GET NEXT                L 063000
HEADOCB2 TM    $PROCESS,PROCLINE   IS A LINE REQUIRED                   L 063100
         BZ    *+8                 BRANCH IF NO LINE REQUIRED           L 063200
         CBAL  R4,WRITEP,NESTED=YES WRITE LINE FOR THIS OCB             L 063300
         NI    $PROCESS,FF-PROCLINE SET OFF FLAG TRIGGERNING WRITE      L 063400
         ST    R5,HEADOCB-64+R5*4  SET NEW BUFFER ADDRESS IN SAVE AREA  L 063500
HEADOCBX SUBOUT RESTORE=ALL        RESTORE AND RETURN TO CALLER         L 063600
         DROP  R8                  DROP LCD ADDRESSABILITY              L 063700
         DROP  R7                  DROP OCB ADDRESSABILITY              L 063800
         EJECT                                                          L 063900
*********************************************************************** L 064000
*        PRODUCE CONTROL HEADINGS ON CHANGE OF PAGE                   * L 064100
*********************************************************************** L 064200
         SPACE 1                                                        L 064300
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         L 064400
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         L 064500
WRITEHCH SUBIN SAVE=(R4,R7)        PRESERVE RETURN ADDRESS              L 064600
         TM    $STATUS,STATCHD     ARE CONTROL HEADINGS REQUIRED        L 064700
         BZ    WRITECHX            GO TO EXIT IF NOT                    L 064800
         MVI   CHDKEYNO,0          SET KEY NUMBER IN WORK AREA TO 0     L 064900
WRITECH1 CLC   CHDKEYNO,$NUMKEYS+1 IS KEY NO > NO OF AVAILABLE KEYS     L 065000
         BH    WRITECH4            EXIT IF EXCEEDS KEY NO. RANGE        L 065100
         LTA   R8,$LCDHEAD         GET ADDRESSOF 1ST HEADING LCD        L 065200
         B     *+8                 BYPASS FORAWRD CHAINING              L 065300
WRITECH2 LTA   R8,LCDLCD,WRITECH3  GET ADDRESS OF NEXT LCD              L 065400
         NULCB LCD,WRITECH2        GET NEXT LCD IF THIS NULLIFIED       L 065500
         CLC   LCDIOLB,OCBLABL     DOES LCD APPLY YO THIS OCB           L 065600
         BNE   WRITECH2            LOOP BACK FOR NEXT LCD IF NOT        L 065700
         TM    LCDSW,MLCDKEYN      IS THIS A CONTROL HEADING LCD        L 065800
         BZ    WRITECH2            LOOP BACJ FOR NEXT LCD IF NOT        L 065900
         CLC   LCDKEYN,CHDKEYNO    DOES LCD APPLY TO THIS KEY LEVEL     L 066000
         BNE   WRITECH2            LOOP BACK FOR NEXT LCD IF NOT        L 066100
         OI    $PROCESS,PROCLINE   SET FLAG TO TRIGGER SUBSEQUENT WRITE L 066200
         CBAL  R4,PROCLCD,NESTED=YES PERFORM LCD PROCESSING             L 066300
         BL    WRITECH3            TERMINATE IF 'DELETE' FOUND          L 066400
         B     WRITECH2            LOOP BACK FOR NEXT LCD               L 066500
         EJECT                                                          L 066600
*********************************************************************** L 066700
*        PRODUCE CONTROL HEADINGS ( CONT'D )                          * L 066800
*********************************************************************** L 066900
         SPACE 1                                                        L 067000
WRITECH3 TM    $PROCESS,PROCLINE   IS A LINE REQUIRED                   L 067100
         BZ    *+8                 BYPASS WRITE IF NOT                  L 067200
         CBAL  R4,WRITEP,NESTED=YES WRITE CONTROL HEADING LINE          L 067300
         NI    $PROCESS,FF-PROCLINE SET OFF FLAG TO TRIGGRE PRINT       L 067400
         IC    R1,CHDKEYNO         RETRIEVE CURRENT KEY NO              L 067500
         LA    R1,1(,R1)           INCREMENT KEY NUMEBR                 L 067600
         STC   R1,CHDKEYNO         PRESERVE UPDATED KEY NUMBER          L 067700
         B     WRITECH1            LOOP BACK TO PROCESS CONTROL HEADING L 067800
WRITECH4 EQU   *                                                        L 067900
*RITECH4 CBAL  R4,KEYBLCT          RESET LINE COUNTERS AS NECESSARY     L 068000
WRITECHX SUBOUT RESTORE=(R4,R7)    RESTORE AND RETURN TO CALLER         L 068100
         DROP  R8                  DROP LCD ADDRESSABILITY              L 068200
         DROP  R7                  DROP OCB ADDRESSABILITY              L 068300
         TITLE 'PARROTL - DCB EXITS '                                   L 068400
*********************************************************************** L 068500
*        SUPPLY DEFAULT BLKSIZE IF NOT CODED                          * L 068600
*********************************************************************** L 068700
         SPACE 1                                                        L 068800
BLKSZRTN IOM   BLKSZRTN,TYPE=DEF                                        L 068900
         EJECT                                                          L 069000
*********************************************************************** L 069100
*        PERFORM SPECIAL SYSUT1 OPEN PROCESSING                       * L 069200
*********************************************************************** L 069300
         SPACE 1                                                        L 069400
*        THIS OPEN-TIME DCB EXIT FOR SYSUT1 PERFORMS THE FOLLOWING:-    L 069500
*         .SETS A FLAG IN THE DCB TO ALLOW UNLIKE CONCATENATION         L 069600
*         .SETS A FLAG FOR THE READ RTN TO RE-ISSUE THE READ ( ON THE   L 069700
*          ASSUMPTION THAT THIS IS A SECOND OR SUBSEQUENT CONCATENATED  L 069800
*          OPEN )                                                       L 069900
*         .ACQUIRES AND CHAINS A RECORD WORK AREA ( IF THIS IS THE 1ST  L 070000
*          OPEN, OR A CONCATENATED OPEN OF A FILE WITH A LARGER         L 070100
*          RECORD LENGTH ).                                             L 070200
         SPACE 1                                                        L 070300
*        NOTE THAT, AS A CONSEQUENCE OF THIS ROUTINE, AND OF ALWAYS     L 070400
*         USING A 'RECORD DESCRIPTOR WORD' - EVEN FOR FIXED LENGTH      L 070500
*         RECORDS - PARROT CAN PROCESS THE FOLLOWING :-                 L 070600
*         .CONCATENATION OF FILES WITH DIFFERENT RECORD LENGTHS         L 070700
*         .CONCATENATION OF FIXED AND VARIABLE LENGTH RECORDS           L 070800
*         .CONCATENATION OF FILES ON UNLIKE DEVICES                     L 070900
         SPACE 1                                                        L 071000
         USING IHADCB,R1           ESTABLISH SYSUT1 DCB ADDRESSABILITY  L 071100
SYSUT1X  SUBIN ,                   ENETR ROUTINE                        L 071200
         OI    DCBOFLGS,DCBOFPPC   INDICATE POTENTIAL UNLIKE CONCET'N   L 071300
         OI    SYSUT1SW,MUT1RERD   FLAG TO RE-ISSUE READ ( IF ANY )     L 071400
         LH    R2,DCBLRECL         RETRIEVE SYSUT1 RECORD LENGTH        L 071500
         CH    R2,=H'0'            IS NO LRECL SUPPLIED ( VB ONLY )     L 071600
         BNE   *+8                 BR IF LRECL SUPPLIED                 L 071700
         LH    R2,DCBBLKSI         PLAY SAFE AND USE BLOCK SIZE         L 071800
         CH    R2,$RECLUT1         IS THIS VALUE GREATER THAN ANY PREV  L 071900
         BNH   *+8                 BR IF THIS NOT HIGHEST EVER VALUE    L 072000
         STH   R2,$RECLUT1         PRESERVE MAX LRECL IN CCB            L 072100
         CH    R2,$MAXPPL          IS THIS HIGHER THAN LARGEST PPL      L 072200
         BNL   *+8                 BR IF THIS IS HIGHER                 L 072300
         LH    R2,$MAXPPL          OVERRIDE WITH TH PPL VALUE           L 072400
         TM    DCBRECFM,DCBRECV    IS THIS A VARIABLE LENGTH RECORD     L 072500
         BO    *+8                 BR IF VARIABLE: ALREADY HAS RDW      L 072600
         LA    R2,4(,R2)           ALLOW FOR LENGTH OF RDW              L 072700
         CH    R2,$RECLINT         IS THIS LARGER THAN ANY PREVIOUS VAL L 072800
         BNH   *+8                 BR IF NOT LARGEST VALUE YET FOUND    L 072900
         CBAL  R4,GETMUT1,LOOP=NO  ACQUIRE AND CHAIN RECORD WORK AREA   L 073000
        SUBOUT RETURN=(R14)        RETURN TO OPEN PROCESSING            L 073100
         DROP  R1                  DROP DCB ADDRESSABILITY              L 073200
         EJECT                                                          L 073300
*********************************************************************** L 073400
*        ACQUIRE CORE FOR SYSUT1 RECORD AREA                          * L 073500
*********************************************************************** L 073600
         SPACE 1                                                        L 073700
*        ONE OF THE PROBLEMS WITH WRITING THIS WONDERFUL PROGRAM IS     L 073800
*         MAINTAINING UPWARDS COMPATABILITY WITH P.M.FAYER'S SOMEWHAT   L 073900
*         ECCENTRIC PL/1 ORIGINAL.  SPECIFICALLY, BECAUSE HE REQUIRED   L 074000
*         THE USER'S TO ADD 4 TO THE POSITION SPECIFICATIONS ON GR06    L 074100
*         SORT CONTROL STATEMENTS ( BECAUSE INTERNALLY HE PROCESSED     L 074200
*         RECORDS AS VARIABLE LENGTH, WHILE THE SORT WAS UNDER THE      L 074300
*         IMPRESSION THAT THEY WERE FIXED LENGTH RECORDS ), IT IS       L 074400
*         NECESSARY FOR ME TO APPEND A PSEUDO 'RDW' ( RECORD DESCRIPTOR L 074500
*         WORD ) IN FRONT OF THE WORK AREA FOR THE INPUT RECORDS.       L 074600
         SPACE 1                                                        L 074700
*        THIS ROUTINE ACQUIRES AN AREA OF CORE STRUCTURED THUS :-       L 074800
*              DS 0F               RDW ( RECORD DESCRIPTOR WORD )       L 074900
*              DS H                RECORD LENGTH + 4 ( FOR THE RDW )    L 075000
*              DS H                ZEROES ( USED FOR SPANNED RECORDS )  L 075100
*              DS 0CLNN            INPUT RECORD IMAGE                   L 075200
         SPACE 1                                                        L 075300
*        TO MAKE THE BEST OF A BAD JOB - AND AT A COST OF 12 ADDITIONAL L 075400
*         INSTRUCTIONS - I HAVE INCLUDED SUPPORT OF VARIABLE LENGTH     L 075500
*         RECORDS.                                                      L 075600
         SPACE 1                                                        L 075700
*        UPON EXIT FROM THIS ROUTINE, THE ADDRESS OF THE 'RDW' AND THE  L 075800
*         FIRST BYTE OF DATA ARE STORED THUS :-                         L 075900
*         .SYSUT1+IOPSRECA         - ADDRESS OF RDW FOR VARIABLE LENGTH L 076000
*                                    RECORDS, AND RDW+4 FOR FIXED LENGT L 076100
*         .$SORTREC                - ADDRESS OF RDW                     L 076200
*         .$PTRUT1R                - ADDRESS OF RDW+4 ( 1ST DATA BYTE ) L 076300
         SPACE 1                                                        L 076400
*        UPON ENTRY, R2 CONTAINS THE LENGTH OF THE REQUIRED RECORD AREA L 076500
         SPACE 1                                                        L 076600
*        NOTE THAT, FOR A CONCATENATED OPEN OF A FILE WITH LONGER       L 076700
*         RECORDS THAN PREVIOUSLY, A NEM RECORD AREA WILL BE ACQUIRED,  L 076800
*         INITIALISED, AND CHAINED.  THE OLD ONE IS NOT FREEMAINED -    L 076900
*         BECAUSE IT IS PROBABLY OVERLAYING UNWANTED INITIALISATION     L 077000
*         CODING, AND MVS GETS VERY UPSET ABOUT FREEMAINING THE PROBLEM L 077100
*         PROGRAM - BUT ALL REFERENCES TO IT ARE DELETED ( OTHER THAN   L 077200
*         IN THE CONTROL BLOCK PREFIX CHAIN ).                          L 077300
         EJECT                                                          L 077400
*********************************************************************** L 077500
*        ACQUIRE CORE FOR SYSUT1 RECORD AREA ( CONT'D )               * L 077600
*********************************************************************** L 077700
         SPACE 1                                                        L 077800
GETMUT1  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              L 077900
         STH   R2,$RECLINT         PRESERVE LENGTH OF WORK AREA IN CCB  L 078000
         GETCB UT1,NOCHAIN         ACQUIRE CORE FOR RECORD AREA         L 078100
         ST    R1,$SORTREC         PRESERVE ADDRESS OF LEN||REC||W/A    L 078200
         L     R2,SYSUT1+IOPSDCB   GET ADDRESS OF SYSUT1 DCB            L 078300
         USING IHADCB,R2           ESTABLISH DCB ADDRESSABILITY         L 078400
         LH    R3,DCBLRECL         GET SYSUT1 RECORD LENGTH             L 078500
         TM    DCBRECFM,DCBRECV    IS IT A VARIABLE LENGTH RECORD       L 078600
         BO    *+8                 BR IF YES: ALREADY INCLUDES LGTH FLD L 078700
         LA    R3,4(,R3)           ADD LENGTH OF LENGTH FIELD           L 078800
         STH   R3,0(R1)            SET LENGTH IN LENGTH||RECORD AREA    L 078900
         TM    DCBRECFM,DCBRECV    IS IT VARIABLE LENGTH RECORD         L 079000
         BO    *+8                 BR IF VARIABLE LENGTH RECORDS        L 079100
         LA    R1,4(,R1)           INCREMENT OVER LENGTH FIELD          L 079200
         ST    R1,SYSUT1+IOPSRECA  PRESERVE RECORD ADDRESS IN DCBSW     L 079300
         TM    DCBRECFM,DCBRECV    IS IT A VARIABLE LENGTH RECORD       L 079400
         BZ    *+8                 BR IF NOT VARIABLE LENGTH            L 079500
         LA    R1,4(,R1)           INCREMENT PAST RDW AT 1ST DATA BYTE  L 079600
         ST    R1,$PTRUT1R         PRESERVE ADDRESS OF START OF DATA    L 079700
        SUBOUT RESTORE=R4          RETSORE AND RETURN                   L 079800
         DROP  R2                  DROP DCB ADDRESSABILITY              L 079900
         EJECT                                                          L 080000
*********************************************************************** L 080100
*        SUPPLY SYSUT2 DCB DEFAULTS                                   * L 080200
*********************************************************************** L 080300
         SPACE 1                                                        L 080400
         USING IHADCB,R1           ESTABLISH SYSUT2 DCB ADDRESSABILITY  L 080500
SYSUT2X  SUBIN ,                   ENTER ROUTINE                        L 080600
         L     R15,SYSUT1+IOPSDCB  GET ADDRESS OF SYSUT1 DCB            L 080700
         CLI   DCBRECFM,0          IS SYSUT1 RECFM SUPPLIED             L 080800
         BNE   *+10                BR IF RECFM SUPPLIED                 L 080900
         MVC   DCBRECFM,DCBRECFM-IHADCB(R15) PROPAGATE SYSUT1 RECFM     L 081000
         CLC   DCBLRECL,=H'0'      IS SYSUT2 LRECL SUPPLIED             L 081100
         BNE   *+10                BR IF SUPPLIED                       L 081200
         MVC   DCBLRECL,DCBLRECL-IHADCB(R15) PROPAGATE SYSUT1 LRECL     L 081300
         CLC   DCBBLKSI,=H'0'      IS SYSUT2 BLKSIZE SUPPLIED           L 081400
         BNE   *+10                BR IF SUPPLIED                       L 081500
         MVC   DCBBLKSI,DCBBLKSI-IHADCB(R15) PROPAGATE SYSUT1 BLKSIZE   L 081600
        SUBOUT  RETURN=(R14)       RETURN TO SYSTEM FOR OPEN COMPLETION L 081700
         DROP  R1                  DROP SYSUT2 DCB ADDRESSABILITY       L 081800
         EJECT                                                          L 081900
*********************************************************************** L 082000
*        SUPPLY DCB DEFAULTS FOR USER-DEFINED OUTPUT DATA SETS        * L 082100
*********************************************************************** L 082200
         SPACE 1                                                        L 082300
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 082400
OCBEXIT  SUBIN ,                   ENTER ROUTINE                        L 082500
         CLC   DCBLRECL,=H'0'      IS LRECL SUPPLIED                    L 082600
         BNE   OCBEXIT1            BR IF LRECL IS SUPPLIED              L 082700
         MVC   DCBLRECL,=H'133'    ASSUME REPORT DATA SET AND SET 133   L 082800
         TM    DCBRECFM,DCBRECCM   TEST FOR MACHINE CONTROL CHARACTERS  L 082900
         BO    OCBEXIT1            BR IF REPORT DATA SET                L 083000
         MVC   DCBLRECL,=H'132'    SET LRECL TO 132 IF NOT REPORT DATA  L 083100
OCBEXIT1 CLC   DCBBLKSI,=H'0'      IS BLOCK SIZE SUPPLIED               L 083200
         BNE   *+10                BR IF BLOCKSIZE SUPPLIED             L 083300
         MVC   DCBBLKSI,DCBLRECL   USE LRECL AS BLOCKSIZE               L 083400
        SUBOUT RETURN=(R14)        RETURN TO SYSTEM FOR OPEN COMPLETION L 083500
         DROP  R1                  DROP DCB ADDRESSABILITY              L 083600
         EJECT                                                          L 083700
*********************************************************************** L 083800
*        SUPPLY DCB DEFAULTS FOR SYSMONTR                             * L 083900
*********************************************************************** L 084000
         SPACE 1                                                        L 084100
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY         L 084200
MONITX   SUBIN ,                   ENTER ROUTINE                        L 084300
         CLC   DCBBLKSI,=H'0'      IS BLOCK SIZE SUPPLIED               L 084400
         BNE   *+10                BR IF BLOCK SIZE SUPPLIED            L 084500
         MVC   DCBBLKSI,=H'1680'   SET DEFAULT BLOCKING FACTOR OF 70    L 084600
        SUBOUT RETURN=(R14)        RETURN TO SYSTEM FOR OPEN COMPLETION L 084700
         DROP  R1                  DROP DCB ADDRESSABILITY              L 084800
         TITLE 'PARROTL - I/O ERROR ROUTINE'                            L 084900
*********************************************************************** L 085000
*        I/O ERROR ROUTINE                                            * L 085100
*********************************************************************** L 085200
         SPACE 1                                                        L 085300
IOERRTN  IOM  IOERROR,(R5),PRINT,IOERRORX,TYPE=DEF,MSGID='PRTL-001-C  ' L 085400
IOERRORX ABEND 20                  TERMINATE ABNORMALLY                 L 085500
         TITLE 'PARROTL - EXECUTED INSTRUCTIONS'                        L 085600
*********************************************************************** L 085700
*        EXECUTED INSTRUCTIONS                                        * L 085800
*********************************************************************** L 085900
         SPACE 1                                                        L 086000
MVCHEAD  MVC   0(0,R5),HDGHEAD-HDGNTRY(R8) MOVE HEADING TO BUFFER       L 086100
         TITLE 'PARROTL - MISCELLANEOUS CONSTANTS AND FIELDS'           L 086200
SYSINH1  DS    0CL84                                                    L 086300
         DC    CL75'PARROT CONTROL CARDS',C' PAGE'                      L 086400
SYSINH1P DC    X'40202120'         EDIT MASK FOR PAGE NO                L 086500
SYSINH2  DC    C'         1         2         3         4         5    *L 086600
                    6         7         8'                              L 086700
SYSINH3  DC    C'123456789012345678901234567890123456789012345578901234*L 086800
               56789012345678901234567890'                              L 086900
         SPACE 1                                                        L 087000
CHDKEYNO DS    CL1                 KEY NUMEBR FOR CONTROL HEADING ROUIT L 087100
PRINTH1P DC    X'4020202020202020'  PAGE NUMBER                         L 087200
         SPACE 1                                                        L 087300
PGECNTSY DC    PL2'1'              PAGE COUNT FOR SYSPRINT              L 087400
PGECNTP  DC    PL3'1'              PAGE COUNT FOR 'PRINT'               L 087500
PGECNTTW DC    PL2'1'              PAGE COUNT FOR TW80                  L 087600
SYSINCNT DC    PL4'0'              TRUE RECORD COUNT FOR SYSIN          L 087700
         SPACE 1                                                        L 087800
LINE01   EQU   *                   LINE01 IS I/O ERROR MESSAGE          L 087900
         TITLE 'PARROTL - DCB''S'                                       L 088000
EXITLBLK DC    X'85',AL3(BLKSZRTN) DEFAULT BLKSIZE ROUTINE              L 088100
EXITLUT1 DC    X'85',AL3(SYSUT1X)  SYSUT1 OPEN PROCESSING               L 088200
EXITLUT2 DC    X'85',AL3(SYSUT2X)  SUPPLY SYSUT2 DCB DEFAULTS           L 088300
OCBXLST  DC    X'85',AL3(OCBEXIT)  SUPPLY DCB DEFAULTS FOR USER-DEFINED L 088400
EXITLMON DC    X'85',AL3(MONITX)   SUPPLY DCB DEFAULTS FOR SYSMONTR     L 088500
         SPACE 5                                                        L 088600
SYSUT1SW DC    X'00'               SYSUT1 PROCESSING SWITCH             L 088700
         SPACE 1                                                        L 088800
MUT1RERD EQU   2                   RE-ISSUE READ (CONCAT'D OPEN )       L 088900
         SPACE 5                                                        L 089000
DMYDCBSW IOM   DCBSW,PRINT,DCB02,PRINT DUMMY DCBSW FOR GENERALISED RTNS L 089100
         SPACE 5                                                        L 089200
         LTORG                                                          L 089300
         EJECT                                                          L 089400
         PRINT NOGEN               SUPPRESS DCB EXPANSION               L 089500
DCB01    DCB   DDNAME=SYSPRINT,                                        *L 089600
               DSORG=PS,                                               *L 089700
               MACRF=PL,                                               *L 089800
               RECFM=FBM,                                              *L 089900
               LRECL=133,                                              *L 090000
               SYNAD=#IOERROR,                                         *L 090100
               EXLST=EXITLBLK                                           L 090200
         SPACE 5                                                        L 090300
DCB02    DCB   DDNAME=PRINT,                                           *L 090400
               DSORG=PS,                                               *L 090500
               MACRF=PL,                                               *L 090600
               RECFM=FBM,                                              *L 090700
               LRECL=133,                                              *L 090800
               SYNAD=#IOERROR,                                         *L 090900
               EXLST=EXITLBLK                                           L 091000
         SPACE 5                                                        L 091100
DCB03    DCB   DDNAME=SYSIN,                                           *L 091200
               DSORG=PS,                                               *L 091300
               MACRF=GL,                                               *L 091400
               RECFM=FB,                                               *L 091500
               LRECL=80,                                               *L 091600
               EODAD=EODIN,                                            *L 091700
               SYNAD=#IOERROR,                                         *L 091800
               EXLST=EXITLBLK                                           L 091900
         SPACE 5                                                        L 092000
DCB04    DCB   DDNAME=SYSUT1,                                          *L 092100
               DSORG=PS,                                               *L 092200
               MACRF=GM,                                               *L 092300
               EODAD=EODUT1,                                           *L 092400
               SYNAD=#IOERROR,                                         *L 092500
               EXLST=EXITLUT1                                           L 092600
         EJECT                                                          L 092700
DCB05    DCB   DDNAME=TW80,                                            *L 092800
               DSORG=PS,                                               *L 092900
               MACRF=PL,                                               *L 093000
               RECFM=FBM,                                              *L 093100
               LRECL=133,                                              *L 093200
               SYNAD=#IOERROR,                                         *L 093300
               EXLST=EXITLBLK                                           L 093400
         SPACE 5                                                        L 093500
DCB06    DCB   DDNAME=SYSLIN,                                          *L 093600
               DSORG=PS,                                               *L 093700
               MACRF=GL,                                               *L 093800
               RECFM=FB,                                               *L 093900
               LRECL=133,                                              *L 094000
               SYNAD=#IOERROR,                                         *L 094100
               EODAD=EODLIN,                                           *L 094200
               EXLST=EXITLBLK                                           L 094300
         SPACE 5                                                        L 094400
DCB07    DCB   DDNAME=SYSLIB,                                          *L 094500
               DSORG=PO,                                               *L 094600
               MACRF=R,                                                *L 094700
               RECFM=FB,                                               *L 094800
               LRECL=80,                                               *L 094900
               EODAD=EODLIB,                                           *L 095000
               SYNAD=#IOERROR,                                         *L 095100
               EXLST=EXITLBLK                                           L 095200
         SPACE 5                                                        L 095300
DCB08    DCB   DDNAME=SYSMONTR,                                        *L 095400
               DSORG=PS,                                               *L 095500
               MACRF=PL,                                               *L 095600
               RECFM=FB,                                               *L 095700
               LRECL=24,                                               *L 095800
               SYNAD=#IOERROR,                                         *L 095900
               EXLST=EXITLMON                                           L 096000
         EJECT                                                          L 096100
DCB09    DCB   DDNAME=SYSUT3,                                          *L 096200
               DSORG=PS,                                               *L 096300
               MACRF=PM,                                               *L 096400
               SYNAD=#IOERROR,                                         *L 096500
               EXLST=EXITLUT2                                           L 096600
         SPACE 5                                                        L 096700
DCB10    DCB   DDNAME=SYSUT2,                                          *L 096800
               DSORG=PS,                                               *L 096900
               MACRF=PM,                                               *L 097000
               SYNAD=#IOERROR,                                         *L 097100
               EXLST=EXITLUT2                                           L 097200
         SPACE 5                                                        L 097300
         PRINT ON,GEN              RE-ESTABLISH MACRO EXPANSION         L 097400
        SCSEND L                   TERMINATE CSECT PARROTL              L 097500
         END                                                            L 097600
