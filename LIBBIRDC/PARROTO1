         TITLE 'PARROTO1 - INTERCONNECT CONTROL BLOCKS'                 O1000100
         MACRO                                                          O1000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             O1000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               O1000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         O1000500
               EJECT                                                    O1000600
         ACE   ,                   ARITHMETIC CALCULATION ELEMENT       O1000700
               EJECT                                                    O1000800
         CBPREFIX ,                CONTROL BLOCK PREFIX                 O1000900
               EJECT                                                    O1001000
         CCB   ,                   CENTRAL CONTROL BLOCK                O1001100
               EJECT                                                    O1001200
         DCBD  DSORG=PS            DCB FOR SEQUENTAIL DATA SET          O1001300
               EJECT                                                    O1001400
         EQUATES ,                 GENERATE STANDARD EQUATES            O1001500
               EJECT                                                    O1001600
         FDB   ,                   FIELD DEFINITION BLOCK               O1001700
               EJECT                                                    O1001800
         FSA   ,                   FIELD STORAGE AREA                   O1001900
               EJECT                                                    O1002000
         KBD   ,                   KEY BREAK DESCRIPTOR                 O1002100
               EJECT                                                    O1002200
         LCD   ,                   LINE COMPONENT DESCRIPTION           O1002300
               EJECT                                                    O1002400
         LIB   ,                   LABEL IDENTIFICATION BLOCK           O1002500
               EJECT                                                    O1002600
         PCB   ,                   PROCESSING CONTROL BLOCK             O1002700
               EJECT                                                    O1002800
         PTE   ,                   PROCESSING TEST ELEMENT              O1002900
               EJECT                                                    O1003000
         RST   ,                   RECORD SELECTION CRITERIA            O1003100
               EJECT                                                    O1003200
         SCE   ,                   SELECTION CRITERION ELEMENT          O1003300
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       O1003400
         MEND                                                           O1003500
         SPACE 5                                                        O1003600
         MACRO                                                          O1003700
&NAME    CONSTYP &LIST                                                  O1003800
.*                                                                      O1003900
.*       DEFINE A TRANSLATE TABLE THAT WILL ACCEPT CONSISTENT FIELD TYP O1004000
.*                                                                      O1004100
         LCLA  &N,&S                                                    O1004200
&N       SETA  N'&LIST                                                  O1004300
&NAME    DC    12AL1(*-&NAME.+1)   BASIC TRT TABLE ( REJECT ALL )       O1004400
         AIF   (&N EQ 0).EXIT                                           O1004500
.LOOP    ANOP                                                           O1004600
&S       SETA  &S+1                                                     O1004700
         AIF   (&S GT &N).ORG                                           O1004800
         ORG   &NAME.+&LIST(&S)    ORG TO ACCEPTABLE ENTRY              O1004900
         DC    X'00'               SET TO ACCEPT CONSISTENT ENTRY       O1005000
         AGO   .LOOP                                                    O1005100
.ORG     ORG                                                            O1005200
.EXIT    ANOP                                                           O1005300
         MEND                                                           O1005400
         EJECT                                                          O1005500
         MACRO                                                          O1005600
&NAME CONSFMAT &LIST                                                    O1005700
.*                                                                      O1005800
.*       DEFINE A TRANSLATE TABLE THAT WILL ACCEPT OUTPUT FORMATS THAT  O1005900
.*        ARE CONSISTENT WITH A PARTICULAR FIELD TYPE.                  O1006000
.*                                                                      O1006100
         LCLA  &N,&S                                                    O1006200
&N       SETA  N'&LIST                                                  O1006300
&NAME    DC    20AL1(*-&NAME.+1)   BASIC TRT TABLE ( REJECT ALL )       O1006400
         AIF   (&N EQ 0).EXIT                                           O1006500
.LOOP    ANOP                                                           O1006600
&S       SETA  &S+1                                                     O1006700
         AIF   (&S GT &N).ORG                                           O1006800
         ORG   &NAME.+FLCD&LIST(&S) ORG TO ACCEPTBALE ENTRY             O1006900
         DC    X'00'               ACCEPT CONSISTENT OUTPUT FORMAT      O1007000
         AGO   .LOOP                                                    O1007100
.ORG     ORG                                                            O1007200
.EXIT    ANOP                                                           O1007300
         MEND                                                           O1007400
         EJECT                                                          O1007500
PARROTO1  CSECT                                                         O1007600
         $CB   ,                   GENERATE DSECTS AND EQUATES          O1007700
         EJECT                                                          O1007800
     SCSECT O1                                                          O1007900
         USING PARROTO1,R12         ESTABLISH PARROTO1 ADDRESSABILITY   O1008000
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         O1008100
         SPACE 1                                                        O1008200
         ENTRY BLDFSAS             CONSTRUCT & CHAIN ANY REQ'D FSA'S    O1008300
         ENTRY FDBCONS             IS NEW FDB CONSISTENT WITH PREVIOUS  O1008400
         ENTRY FINDKBD             LOCATE KBD WITH SPECIFIED LABEL      O1008500
         ENTRY FINDLIB             LOCATE LIB WITH SPECIFIED LABEL      O1008600
         ENTRY JOINCB2             INTERCONNECT CONTROL BLOCKS CONT'D   O1008700
         ENTRY PARENDO1            END IF CSECT                         O1008800
         TITLE 'PARROTO1 - CONSTRUCT AND CHAIN FSA''S'                  O1008900
*********************************************************************** O1009000
*        CONSTRUCT AND CHAIN ANY REQUIRED FIELD STORGE AREAS          * O1009100
*********************************************************************** O1009200
         SPACE 1                                                        O1009300
         USING FSANTRY,R8          ESTABLISH FSA ADDRESSABILITY         O1009400
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         O1009500
BLDFSAS  SUBIN SAVE=ALL            PRESERVE ALL REGISTERS               O1009600
         L     R6,$LIBLIB          GET ADDRESS OF 1ST LIB               O1009700
         B     *+8                 BYPASS FORWARD CHAINING              O1009800
BLDFSAS1 L     R6,LIBLIB           GET ADDRESS OF NEXT LIB IN CHAIN     O1009900
         LTRR  R6,R6               PURIFY AND TEST FOR END OF CHAIN     O1010000
         BZ    BLDFSASX            GO TO EXIT IF END OF CHAIN           O1010100
         NULCB LIB,BLDFSAS1        GET NEXT LIB IF THIS NULLIFIED       O1010200
         CBAL  R4,SETLIBT          SET CHAR/NUM FLAG FOR LIBTYPE        O1010300
         L     R8,LIBFSA           GET ADDRESS OF ASSOCIATED FSA IF ANY O1010400
         LTRR  R8,R8               PURIFY AND TEST IF ADDRESS PRESENT   O1010500
         BNZ   BLDFSAS1            FSA EXISTS: LOOP BACK TO NEXT LIB    O1010600
         CBAL  R4,BLDFSAKN         BUILD FSA FOR KEY/NAME FIELD         O1010700
         BE    BLDFSAS1            LOOP BACK FOR NEXT IF KEY/NAME LIB   O1010800
         CBAL  R4,BLDFSASC         BUILD FSA FOR SCALAR VALUE           O1010900
         BE    BLDFSAS1            LOOP BACK FOR NEXT IF SCALAR         O1011000
         SR    R2,R2               ZEROISE WORK REGISTER                O1011100
         CBAL  R4,LIBNUM           DETERMINE IF LIB DEFINES A NUMERIC F O1011200
         BE    BLDFSASN            BR IF YES TO CONSTRUCT NUMERIC FSA   O1011300
         IC    R2,LIBFLDL          GET LENGTH OF NON-NUMERIC FIELD      O1011400
         LA    R2,1(,R2)           CONVERT EXECUTABLE LENGTH TO TRUE    O1011500
         LA    R2,FSALGTH(,R2)     ADD LENGTH OF BASIC (CHARACTER) FSA  O1011600
         B     BLDFSAG             GO ACQUIRE CORE FOR FSA              O1011700
BLDFSASN LH    R2,$NUMKEYS         GET NUMBER OF KEYS DEFINED           O1011800
         SLL   R2,3                ALLOW 1 DOUBLEWORD / KEY             O1011900
         LA    R2,FSANLGTH(,R2)    ADD LENGTH OF BASIC (NUMERIC) FSA    O1012000
         EJECT                                                          O1012100
*********************************************************************** O1012200
*        CONSTRUCT AND CHAIN FSA'S ( CONT'D )                         * O1012300
*********************************************************************** O1012400
         SPACE 1                                                        O1012500
BLDFSAG  GETCB FSA,NOCHAIN         ACQUIRE CORE FOR FSA                 O1012600
         ST    R8,LIBFSA           PRESERVE FSA ADDRESS IN LIB          O1012700
         MVC   FSALABL,LIBLABL     SET LABEL IN FSA                     O1012800
         B     BLDFSAS1            LOOP BACK TO GET NEXT LIB            O1012900
BLDFSASX CBAL  R4,KBDTOFSA         POINT KBD'S AT KEY/NAME STORAGE AREA O1013000
        SUBOUT RESTORE=ALL         RESTORE AND RETURN TO CALLER         O1013100
         DROP  R6                  DROP LIB ADDRESSABILITY              O1013200
         DROP  R8                  DROP FSA ADDRESSABILITY              O1013300
         EJECT                                                          O1013400
*********************************************************************** O1013500
*        DETERMINE WHETHER LIB IS NUMERIC OR CHARACTER                * O1013600
*********************************************************************** O1013700
         SPACE 1                                                        O1013800
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         O1013900
SETLIBT  SUBIN ,                   ENETR ROUTINE                        O1014000
         SR    R1,R1               ZEROISE WORK REGISTER                O1014100
         IC    R1,LIBFLDT          RETRIREVE FIELD TYPE                 O1014200
         BTYPE DCHAR=SETLIBTC,DNUM=SETLIBTN SET FLAG APPROPRIATELY      O1014300
SETLIBTC OI    LIBTYPE,LIBTCHAR    FLAG THAT FIELD IS CHARACTER         O1014400
         B     *+8                 BYPASS FLAGGING AS NUMERIC           O1014500
SETLIBTN OI    LIBTYPE,LIBTNUM     FLAG THAT LIB IS NUMERIC             O1014600
        SUBOUT ,                   RETURN TO CALLER                     O1014700
         DROP  R6                  DROP LIB ADDRESSABILITY              O1014800
         EJECT                                                          O1014900
*********************************************************************** O1015000
*        CONSTRUCT FSA FOR KEY / NAME FIELDS                          * O1015100
*********************************************************************** O1015200
         SPACE 1                                                        O1015300
*        THIS ROUTINE CONSTRUCTS FSA'S FOR LIB'S THAT DEFINE KEY OR     O1015400
*         KEY-NAME FIELDS.  UPON RETURN, THE COND CODE IS SET THUS :-   O1015500
*         BE  - LIB DEFINES KEY OR NAME: FSA CONSTRUCTED                O1015600
*         BNE - LIB DOES NOT DEFINE A KEY OR NAME                       O1015700
         SPACE 1                                                        O1015800
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         O1015900
         USING FSANTRY,R8          ESTABLISH FSA ADDRESSABILITY         O1016000
BLDFSAKN SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1016100
         TM    LIBTYPE,LIBTKEY+LIBTNAME IS THIS A KEY OR NAME           O1016200
         BZ    BLDFKNY             EXIT IF NOT SHOWING NO FSA BUILT     O1016300
         SR    R2,R2               ZEROISE WORK REGISTER                O1016400
         IC    R2,LIBFLDL          RETRIEVE EXECUTABLE LENGTH OF FIE    O1016500
         LA    R2,1(,R2)           CONVERT TO TRUE LENGTH               O1016600
         TM    LIBTYPE,LIBTNUM     IS THIS A NUMERIC FIELD TYPE         O1016700
         BZ    *+8                 BR IF NOT: MUST BE CHARACTER TYPE    O1016800
         LA    R2,8                SET R2 TO LENGTH OF FP ACCUMULATOR   O1016900
         SLL   R2,1                DOUBLE IT FOR 2 STORAGE AREAS        O1017000
         LA    R2,FSALGTH(,R2)     DD LENGTH OF BASIC FSA               O1017100
         GETCB FSA,NOCHAIN         ACQUIRE FSA                          O1017200
         ST    R8,LIBFSA           PRESERVE FSA ADDRESS IN LIB          O1017300
         MVC   FSALABL,LIBLABL     SET FIELD LABEL IN FSA               O1017400
         B     BLDFKNX             GO TO EXIT                           O1017500
BLDFKNY  CLI   *,Y                 SET COND CODE TO SHOC NOT KEY OR NAM O1017600
         B     *+8                 BYPASS RESETTING COND CODE           O1017700
BLDFKNX  CLI   *,X                 SET COND CODE TO SHOW FSA CONSTRUCTE O1017800
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O1017900
         DROP  R8                  DROP FSA ADDRESSABILITY              O1018000
         DROP  R6                  DROP LIB ADDRESSABILITY              O1018100
         EJECT                                                          O1018200
*********************************************************************** O1018300
*        CONSTRUCT FSA FOR SCALAR                                     * O1018400
*********************************************************************** O1018500
         SPACE 1                                                        O1018600
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         O1018700
         USING FSANTRY,R8          ESTABLISH FSA ADDRESSABILITY         O1018800
BLDFSASC SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1018900
         TM    LIBTYPE,LIBTSCAL    IS THIS A SCALAR                     O1019000
         BZ    BLDFSCY             EXIT IF NOT A SCALAR SHOWING NO FSA  O1019100
         LA    R2,FSASLGTH         SET LENGTH OF SCALAR'S FSA IN REG 2  O1019200
         GETCB FSA,NOCHAIN         ACQUIRE CORE FOR AN FSA              O1019300
         ST    R8,LIBFSA           PRESERVE FSA ADDRESS IN THE LIB      O1019400
         MVC   FSALABL,LIBLABL     SET FIELD LABEL IN THE FSA           O1019500
         CLI   *,X                 SET COND CODE TO SHOW FSA BUILT      O1019600
         B     *+8                 BYPASS RESETTING COND CODE           O1019700
BLDFSCY  CLI   *,Y                 SET COND CODE TO SHOW NO FSA BUILT   O1019800
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O1019900
         DROP  R8                  DROP FSA ADDRESSABILITY              O1020000
         DROP  R6                  DROP LIB ADDRESSABILITY              O1020100
         EJECT                                                          O1020200
*********************************************************************** O1020300
*        DETERMINE IF THE FIELD DEFINES A NUMERIC FIELD TYPE          * O1020400
*********************************************************************** O1020500
         SPACE 1                                                        O1020600
*        DETERMINE IF THE LIB DEFINES A NUMERIC FIELD TYPE.             O1020700
         SPACE 1                                                        O1020800
*        UPON ENTRY:-                                                   O1020900
*         R6  - ADDRESS OF LIB                                          O1021000
         SPACE 1                                                        O1021100
*        UPON RETURN, THE COND CODE IS SET THUS :-                      O1021200
*         BE  - LIB DEFINES A NUMERIC FIELD TYPE                        O1021300
*         BNE - LIB DEFINES A NON-NUMERIC FIELD TYPE                    O1021400
         SPACE 1                                                        O1021500
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         O1021600
LIBNUM   SUBIN ,                   ENTER ROUTINE                        O1021700
         SR    R1,R1               ZEROISE WORK REGISTER                O1021800
         IC    R1,LIBFLDT          RETRIEVE TYPE OF FIELD DEFINED       O1021900
         SLL   R1,2                MULTIPLY BY 4 TO CONVERT TO INDEX    O1022000
         B     *(R1)               BR TO SET COND CODE AS NECESSARY     O1022100
         B     LIBNUMY             CHARACTER                            O1022200
         B     LIBNUMX             DISPLAY NUMERIC                      O1022300
         B     LIBNUMX             PACKED DECIMAL                       O1022400
         B     LIBNUMY             HEXADECIMAL                          O1022500
         B     LIBNUMY             BIT STRING                           O1022600
         B     LIBNUMY             MASK (INVALID IN THIS CONTEXT)       O1022700
         B     LIBNUMX             BINARY                               O1022800
         B     LIBNUMX             FLOATING POINT (UNSUPPORTED)         O1022900
         B     LIBNUMY             CHARACTER STRING (INVALID IN THIS C) O1023000
         B     LIBNUMY             UNASSIGNED                           O1023100
         B     LIBNUMY             UNASSIGNED                           O1023200
         B     LIBNUMY             UNASSIGNED                           O1023300
         SPACE 1                                                        O1023400
LIBNUMY  CLI   *,Y                 SET COND CODE TO SHOW NON-NUMERIC    O1023500
         B     *+8                 BR TO AVOID RESETTING COND CODE      O1023600
LIBNUMX  CLI   *,X                 SET COND CODE TO SHOW NUMERIC        O1023700
        SUBOUT ,                   RETURN TO CALLER                     O1023800
         DROP  R6                  DROP LIB ADDRESSABILITY              O1023900
         EJECT                                                          O1024000
*********************************************************************** O1024100
*        SET KEY/NAME STORAGE AREA ADDRESSES IN THE KBD'S             * O1024200
*********************************************************************** O1024300
         SPACE 1                                                        O1024400
         USING FSANTRY,R1          ESTABLISH FSA ADDRESSABILITY         O1024500
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O1024600
         USING KBDNTRY,R8          ESTABLISH KBD ADDRESSABILITY         O1024700
KBDTOFSA SUBIN ,                   ENTER ROUTINE                        O1024800
         SR    R15,R15             ZEROISE WORK REGISTER                O1024900
         LTA   R8,$KBDKBD          GET ADDRESS OF 1ST KBD               O1025000
         B     *+8                 BYPASS FORWARD CHAINING              O1025100
KBDTFSA1 LTA   R8,KBDKBD,KBDTFSAX  GET ADDRESS OF NEXT KBD              O1025200
         NULCB KBD,KBDTFSA1        LOOP BACK FOR NEXT IF THIS NULLIFIED O1025300
         L     R7,KBDKLIB          GET ADDRESS OF LIB FOR KEY           O1025400
         NULCB LIB,KBDTFSA1        GET NEXT KBD IF THIS LIB NULLIFIED   O1025500
         L     R1,LIBFSA           GET ADDRESS OF FSA FOR KEY STORAGE   O1025600
         LA    R1,FSASTORE         GET ADDRESS OF START OF STORE        O1025700
         ST    R1,KBDCURRK         SET AS ADDRESS OF CURRENT KEY STORE  O1025800
         IC    R15,LIBFLDL         GET EXECUTABLE LENGTH OF KEY FIELD   O1025900
         TM    LIBTYPE,LIBTNUM     IS THE KEY A NUMERIC FIELD TYPE      O1026000
         BZ    *+8                 BR IF KEY IS A CHARACTER FIELD       O1026100
         LA    R15,7               SET EXECUTABLE LENGH OF FP ACCUMULAT O1026200
         LA    R1,1(R15,R1)        POINT PAST 1ST KEY STORAGE AREA      O1026300
         ST    R1,KBDNEXTK         PRESERVE AS ADDRESS OF NEXT KEY STOR O1026400
         TM    KBDSW,MKBDNAME      IS THERE A NAME FIELD FOR THIS KEY   O1026500
         BZ    KBDTFSA1            LOOP BACK FOR NEXT KBD IF NO NAME    O1026600
         L     R7,KBDNLIB          GET ADDRESS OF LIB FOR NAME FIELD    O1026700
         CLI   LIBID,NULLCB        HAS NAME LIB BEEN NULLIFIED          O1026800
         BNE   KBDTFSA3            BR IF LIB IS O.K.                    O1026900
         NI    KBDSW,FF-MKBDNAME   SET OFF FLAG TO SUPPRESS NAME PROCES O1027000
         B     KBDTFSA1            LOOP BACK FOR NEXT KBD               O1027100
KBDTFSA3 L     R1,LIBFSA           GET ADDRESS OF NAME'S FSA            O1027200
         LA    R1,FSASTORE         GET ADDRESS OF START OF STORE        O1027300
         ST    R1,KBDCURRN         SET IN KBD AS ADDR OF CURRENT NAME   O1027400
         IC    R15,LIBFLDL         GET EXECUTABLE LENGTH OF (CHAR) NAME O1027500
         LA    R1,1(R15,R1)        POINT PAST 1ST STORAGE AREA          O1027600
         ST    R1,KBDNEXTN         SET IN KBD AS ADDR OF NEXT NAME      O1027700
         B     KBDTFSA1            LOOP BACK FOR NEXT FSA               O1027800
KBDTFSAX SUBOUT ,                  RETURN TO CALLER                     O1027900
         DROP  R8                  DROP KBD ADDRESSABILITY              O1028000
         DROP  R7                  DROP LIB ADDRESSABILITY              O1028100
         DROP  R1                  DROP FSA ADDRESSABILITY              O1028200
         TITLE 'PARROTO1 - DETERMINE IF FDB CONSISTENT WITH LIB'        O1028300
*********************************************************************** O1028400
*        DETERMINE IF FDB CONSISTENT WITH LIB                         * O1028500
*********************************************************************** O1028600
         SPACE 1                                                        O1028700
*        THIS ROUTINE DETERMINES IF THE NEW FDB IS CONSISTENT WITH      O1028800
*         THE LIB ( AND THUS WITH THE OTHER ASSOCIATED FDB'S ).         O1028900
         SPACE 1                                                        O1029000
*        UPON ENTRY :-                                                  O1029100
*         R1  - ADDRESS OF LIB                                          O1029200
*         R8  - ADDRESS OF FDB                                          O1029300
         SPACE 1                                                        O1029400
*        UPON RETURN THE COND CODE IS SET THUS :-                       O1029500
*         BE  - FDB CONSISTENT WITH LIB                                 O1029600
*         BNE - FDB INCONSISTENT WITH LIB                               O1029700
         SPACE 1                                                        O1029800
         USING FDBNTRY,R8          ESTABLISH FDB ADDRESSABILITY         O1029900
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         O1030000
FDBCONS  SUBIN SAVE=ALL            PRESERVE ALL REGISTERS               O1030100
         LR    R7,R1               POINT R7 AT THE LIB                  O1030200
         SR    R15,R15             ZEROISE WORK REGISTER                O1030300
         IC    R15,LIBFLDT         GET LIB FIELD TYPE                   O1030400
         BCTR  R15,0               DESCREMENT FOR USE AS INDEX          O1030500
         MH    15,=H'12'           MULTIPLY BY TRT TABLE LENGTH         O1030600
         A     R15,=A(TRTFDBT)     POINT R15 AT APPROPRIATE TRT TABLE   O1030700
         TRT   FDBFLDT,0(R15)      TEST IF FDB  FIELD TYPE CONSISTENT   O1030800
         BNZ   FDBCONSY            BR IF FAILED TRT: NOT CONSISTENT     O1030900
         TM    LIBTYPE,LIBTNUM     IS THIS SOME SORT OF NUMERIC FIELD   O1031000
         BO    FDBCONSX            BR IF NUMERIC: LENGTH DO NOT MATTER  O1031100
         CLC   LIBFLDL,FDBFLDL     ARE THESE (CHARACTER) FLDS SAME LGTH O1031200
         BNE   FDBCONSY            BR IF NOT SAME LENGTH: INCONSISTENT  O1031300
         B     FDBCONSX            GO TO SHOW FDB CONSISTENT WITH LIB   O1031400
         SPACE 1                                                        O1031500
FDBCONSY CLI   *,Y                 SHOW THAT FDN INCONSISTENT WITH LIB  O1031600
         B     *+8                 AVOID RESETTING COND CODE            O1031700
FDBCONSX CLI   *,X                 SHOW THAT FDB CONSISTENT WITH LIB    O1031800
        SUBOUT RESTORE=ALL         RESTORE AND RETURN TO CALLER         O1031900
         DROP  R7                  DROP LIB ADDRESSABILITY              O1032000
         DROP  R8                  DROP FDB ADDRESSABILITY              O1032100
         TITLE 'PARROTO1 - LOCATE LIB WITH SPECIFIED LABEL'             O1032200
*********************************************************************** O1032300
*        LOCATE 'LIB' WITH THE SPECIFIED LABEL                        * O1032400
*********************************************************************** O1032500
         SPACE 1                                                        O1032600
*        THIS ROUTINE LOCATES THE LABEL IDENTIFICATION BLOCK ( IF ANY ) O1032700
*         WTH THE SPECIFIED LABEL.                                      O1032800
         SPACE 1                                                        O1032900
*        UPON ENTRY:-                                                   O1033000
*         R15 - ADDRESS OF 2-BYTE LABEL TO BE LOCATED                   O1033100
         SPACE 1                                                        O1033200
*        UPON EXIT:-                                                    O1033300
*         R1  - ADDRESS OF LIB ( IF FOUND ) OR ZERO                     O1033400
         SPACE 1                                                        O1033500
*        THE COND CODE IS SET SUCH THAT:-                               O1033600
*         BE  - LIB LOCATED ( ADDRESS IN REGISTER 1 )                   O1033700
*         BNE - LIB NOT FOUND ( REGISTER 1 SET TO 0 )                   O1033800
         SPACE 1                                                        O1033900
         USING LIBNTRY,R1          ESTABLISH LIB ADDRESSABILITY         O1034000
FINDLIB  SUBIN ,                   ENTER ROUTINE                        O1034100
         L     R1,$LIBLIB          GET ADDRESS OF 1ST AVAILABLE LIB     O1034200
         B     *+8                 BYPASS FORWARD CHAINING              O1034300
FINDLIB1 L     R1,LIBLIB           GET ADDRESS OF NEXT LIB IN CHAIN     O1034400
         LTRR  R1,R1               PURIFY AND TEST FOR END OF CHAIN     O1034500
         BZ    FINDLIBY            BR IF END OF CHAIN TO SHOW NOT FOUND O1034600
         CLC   LIBLABL,0(R15)      DOES THIS LIB HAVE THE SPECIFIED LAB O1034700
         BE    FINDLIBX            BR IF YES TO SHOW SUCCESS            O1034800
         B     FINDLIB1            LOOP BACK TO TRY NEXT                O1034900
         SPACE 1                                                        O1035000
FINDLIBY CLI   *,Y                 SET COND CODE TO SHOW LIB NOT FOUND  O1035100
         B     *+8                 BYPASS RESETTING COND CODE           O1035200
FINDLIBX CLI   *,X                 SET COND CODE TO SHOW LIB LOCATED    O1035300
        SUBOUT ,                   RETURN TO CALLER                     O1035400
         DROP  R1                  DROP LIB ADDRESSABILITY              O1035500
         TITLE 'PARROTO1 - LOCATE KBD WITH SPECIFIED LABEL'             O1035600
*********************************************************************** O1035700
*        LOCATE A 'KBD' WITH THE SPECIFIED LABEL                      * O1035800
*********************************************************************** O1035900
         SPACE 1                                                        O1036000
*        THIS ROUTINE LOCATES A KBD WITH THE SPECIFIED LABEL.           O1036100
         SPACE 1                                                        O1036200
*        UPON ENTRY :-                                                  O1036300
*         R15 - ADDRESS OF TWO-BYTE LABEL TO BE MATCHED                 O1036400
*         UPON EXIT :-                                                  O1036500
*         R1  - ADDRESS OF ASSOCIATED KBD ( OR ZERO )                   O1036600
         SPACE 1                                                        O1036700
*         UPON EXIT, THE COND CODE IS SET THUS :-                       O1036800
*         BE  - KBD LOCATED ( R1 CONTAINS THE ADDRESS )                 O1036900
*         BNE - NO KBD FOUND WITH SPECIFIED LABEL ( R1 SET TO ZERO )    O1037000
         SPACE 1                                                        O1037100
         USING KBDNTRY,R1          ESTABLISH KBD ADDRESSABILITY         O1037200
FINDKBD  SUBIN ,                   ENTER ROUTINE                        O1037300
         L     R1,$KBDKBD          GET ADDRESS OF 1ST KBD               O1037400
         B     *+8                 BYPASS FORWARD CHAINING              O1037500
FINDKBD1 L     R1,KBDKBD           GET ADDRESS OF NEXT KBD              O1037600
         LTRR  R1                  PURIFY ADDRESS AND TEST FOR END OF C O1037700
         BZ    FINDKBDY            GO TO EXIT IF END OF CHAIN           O1037800
         CLC   KBDLABL,0(R15)      IS THIS THE REQUIRED KBD             O1037900
         BE    FINDKBDX            GO TO EXIT SHOWING SUCCESS IF MATCH  O1038000
         B     FINDKBD1            LOOP BACK TO PROCESS NEXT KBD        O1038100
FINDKBDY CLI   *,Y                 SET COND CODE TO SHOW KBD NOT FOUND  O1038200
         B     *+8                 BYPASS RESETTING THE COND CODE       O1038300
FINDKBDX CLI   *,X                 SET COND CODE TO SHOW KBD FOUND      O1038400
        SUBOUT ,                   RETURN TO CALLER                     O1038500
         DROP  R1                  DROP KBD ADDRESSABILITY              O1038600
         TITLE 'PARROTO1 - INTERCONNECT CONTROL BLOCKS ( CONT''D )'     O1038700
*********************************************************************** O1038800
*        INTERCONNECT CONTROL BLOCKS ( CONT'D )                       * O1038900
*********************************************************************** O1039000
         SPACE 1                                                        O1039100
JOINCB2  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1039200
         CBAL  R4,TW80INT          PERFORM TWENTY80 INTERCONNECTIONS    O1039300
         CBAL  R4,SCANRST          CHECK FOR ONLY GR02 DELETES          O1039400
         CBAL  R4,PCBTOCB          CONNECT SPECIAL FUNCTION PCB'S       O1039500
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O1039600
         TITLE 'PARROTO1 - CHECK FOR ONLY GR02 ''DELETE''S'             O1039700
*********************************************************************** O1039800
*        DETERMINE IF ONLY GR02 'DELETE' CARDS ARE SUPPLIED           * O1039900
*********************************************************************** O1040000
         SPACE 1                                                        O1040100
*        THIS ROUTINE CATERS FOR THE POSSIBILITY THAT ONLY GR02         O1040200
*         'DELETE' CARDS ARE SUPPLIED, WITH NO EXPLICIT SELECTS.  THIS  O1040300
*         ROUTINE CREATES A DUMMY 'RST' TO SELECT ALL RECORDS THAT ARE  O1040400
*         NOT EXPLICITLY DELETED.                                       O1040500
         SPACE 1                                                        O1040600
         USING RSTNTRY,R8          ESTABLISH RST ADDRESSABILITY         O1040700
SCANRST  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1040800
         LTA   R8,$RSTRST,SCANRSTX GET ADDRESS OF 1ST RST IN CHAIN      O1040900
         B     *+8                 BYPASS FORWARD CHAINING              O1041000
SCANRST1 LTA   R8,RSTRST,SCANRST2  GET ADDRESS OF NEXT RST IN CHAIN     O1041100
         TM    RSTSW,MRSTDEL       IS THIS A 'DELETE' SPECIFICATION     O1041200
         BZ    SCANRSTX            EXIT IF YES: NO DUMMY NEEDED         O1041300
         B     SCANRST1            LOOP BACK TO CHECK NEXT RST          O1041400
SCANRST2 LA    R2,RSTLGTH          SET RST LENGTH IN REG 2              O1041500
         GETCB RST                 CREATE AND CHAIN DUMMY RST           O1041600
         ZAP   RSTRCNT,$ZERO       ZEROISE RECORD COUNT                 O1041700
SCANRSTX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALER          O1041800
         DROP  R8                  DROP RST ADDRESSABILITY              O1041900
         TITLE 'PARROTO1 - CONNECT PCB''S TO OTHER C/B''S'              O1042000
*********************************************************************** O1042100
*        CONNECT SPECIAL FUNCTION PCB'S TO OTHER C/B'S AS NECESSARY   * O1042200
*********************************************************************** O1042300
         SPACE 1                                                        O1042400
*        NOTE THAT THIS ROUTINE FOLLOWS THE PREFIX CHAIN RATHER THAN    O1042500
*         THE PCB CHAIN BECAUSE PCB'S CAN BE HUNG FROM A NUMBER OF      O1042600
*         OTHER CONTROL BLOCKS, AND THIS IS THE EASIEST WAY TO FIND     O1042700
*         THEM ALL.                                                     O1042800
         SPACE 1                                                        O1042900
         USING CBPREFIX,R7         ESTABLISH PREFIX ADDRESSABILITY      O1043000
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         O1043100
PCBTOCB  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1043200
         LTA   R7,$CBP1ST          GET ADDRESS OF 1ST C/B PREFIX        O1043300
         B     *+8                 BYPASS FORWARD CHAINING              O1043400
PCBTOCB1 LTA   R7,CBPRCBPR,PCBTOCB2 GET ADDRESS OF NEXT PREFIX          O1043500
         CLC   CBPRNAME,=C'PCB '   IS THIS A PCB                        O1043600
         BNE   PCBTOCB1            LOOP BACK FOR NEXT PREFIX IF NOT     O1043700
         LA    R8,CBPRLGTH(,R7)    SET PCB ADDRESS IN REG 8             O1043800
         NULCB PCB,PCBTOCB1        GO GET NEXT PCB IF NULLIFIED         O1043900
         TM    PCBSW,MPCBCBXX      DOES THIS PCB REQUIRE C/B RESOLUTION O1044000
         BZ    PCBTOCB3            BR IF NOT TO GET NEXT                O1044100
         LTA   R7,$CBP1ST          GET ADDRESS OF 1ST PREFIX ( AGAIN )  O1044200
         B     *+8                 BYPASS FORWARD CHAINING              O1044300
PCBTOCB4 LTA   R7,CBPRCBPR,PCBTOCB5 GET ADDRESS OF NEXT PREFIX          O1044400
         CLC   CBPRLGTH(1,R7),PCBCBID IS THIS A C/B OF REQUIRED TYPE    O1044500
         BNE   PCBTOCB4            BR IF NOT TO GET NEXT                O1044600
         CLC   CBPRLABL,PCBLABL    DOES THIS C/B AHVE REQUIRED LABEL    O1044700
         BNE   PCBTOCB4            LOOP BACK FOR NEXT IF NOT            O1044800
         OI    CBPRSW,MCBPREF      FLAG IN PREFIX THAT C/B REFERENCED   O1044900
         LA    R7,CBPRLGTH(,R7)    POINT PAST PREFIX AT C/B             O1045000
         ST    R7,PCBCB            PRESERVE C/B ADDRESS IN PCB          O1045100
         B     PCBTOCB3            GO GET NEXT PCB                      O1045200
         EJECT                                                          O1045300
*********************************************************************** O1045400
*        CONNECT SPECIAL FUNCTION PCB'S  ( CONT'D )                   * O1045500
*********************************************************************** O1045600
         SPACE 1                                                        O1045700
PCBTOCB5 CCNO  LINE10,LABEL=PCBLABL,ELEVEL=YES,NULLCB=YES TELL OF ERROR O1045800
PCBTOCB3 LR    R7,R8               POINT R7 AT PCB                      O1045900
         S     R7,=A(CBPRLGTH)     DECREMENT TO POINT AT PREFIX         O1046000
         B     PCBTOCB1            LOOP ABCK TO GET NEXT PREFIX         O1046100
PCBTOCB2 CBAL  R4,WARNNREF         WARN USER OF UNREFERENCED C/B'S      O1046200
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         O1046300
         DROP  R8                  DROP PCB ADDRESSABILITY              O1046400
         DROP  R7                  DROP PREFIX ADDRESSABILITY           O1046500
         EJECT                                                          O1046600
*********************************************************************** O1046700
*        WARN USER OF UNREFERENCED SPECIAL FUNCTION C/B'S             * O1046800
*********************************************************************** O1046900
         SPACE 1                                                        O1047000
         USING CBPREFIX,R8         ESTABLISH PREFIX ADDRESSABILITY      O1047100
WARNNREF SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              O1047200
         LTA   R8,$CBP1ST          GET ADDRESS OF 1ST C/B PREFIX        O1047300
         B     *+8                 BYPASS FORWARD CHAINING              O1047400
WARNCBS1 LTA   R8,CBPRCBPR,WARNCBSX GET ADDRESS OF NEXT PREFIX          O1047500
         TM    CBPRSW,MCBPGR13     IS A PCB REFERENCE REQUIRED          O1047600
         BZ    WARNCBS1            LOOP ABCK FOR NEXT PREFIX IF NOT     O1047700
         TM    CBPRSW,MCBPREF      HAS THE C/B BEEN REFERENCED          O1047800
         BO    WARNCBS1            LOOP ABCK FOR NEXT IF YES            O1047900
         CCNO  LINE11,PREFIX=YES   WARN USER UNREFERENCED               O1048000
         B     WARNCBS1            LOOP ABCK TO GET NEXT PREFIX         O1048100
WARNCBSX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         O1048200
         DROP  R8                  DROP PREFIX ADDRESSABILITY           O1048300
         TITLE 'PARROTO1 - EXECUTED INSTRUCTIONS'                       O1048400
*********************************************************************** O1048500
*        EXECUTED INSTRUCTIONS                                        * O1048600
*********************************************************************** O1048700
         SPACE 1                                                        O1048800
         TITLE 'PARROTO1 - MISCELLANEOUS CONSTANTS AND FIELDS'          O1048900
TEMPLABL DC    CL2' '              TEMPORARY WORK AREA FOR LABELS       O1049000
         SPACE 1                                                        O1049100
DCBTABL1 EQU   *                   TABLE OF DCB DISPLACEMENTS           O1049200
         DC    AL1(DCBBUFCB-IHADCB)                                     O1049300
         DC    AL1(DCBIOBAD-IHADCB)                                     O1049400
         DC    AL1(DCBEODAD-IHADCB)                                     O1049500
         DC    AL1(DCBCHECK-IHADCB)                                     O1049600
         DC    AL1(DCBIOBA-IHADCB)                                      O1049700
         DC    AL1(DCBEOBR-IHADCB)                                      O1049800
         DC    AL1(DCBRECAD-IHADCB)                                     O1049900
         DC    AL1(DCBCNTRL-IHADCB)                                     O1050000
         DC    AL1(DCBEOB-IHADCB)                                       O1050100
         DC    X'FF'               END OF TABLE                         O1050200
         SPACE 5                                                        O1050300
         LTORG                                                          O1050400
         TITLE 'PARROTO1 - LIB/FDB CONSISTENCY TABLES'                  O1050500
*        THESE TABLES ( USED FOR TRT INSTRUCTIONS ) LIST, FOR EACH      O1050600
*         POSSIBLE FIELD TYPE, ALL THE FIELD TYPES THAT ARE CONSISTENT  O1050700
         SPACE 1                                                        O1050800
*        THESE TABLES ARE USED TO DETERMINE IF A NEW FIELD DEFINITION   O1050900
*         IS CONSISTENT WITH ANY OTHER FIELDS DEFINED WITH THE SAME     O1051000
*         NAME ( I.E. FIELD LABEL ).                                    O1051100
         SPACE 1                                                        O1051200
*        NOTE THAT THESE TABLES MUST BE CONTIGUOUS, AND MUST BE IN THIS O1051300
*         SEQUENCE, BECAUSE THEY ARE INDEXED INTO USING THE FIELD TYPE  O1051400
*         ( FROM THE LIB ) AS AN INDEX.                                 O1051500
         SPACE 5                                                        O1051600
TRTFDBT  EQU   *                   START OF CONSISTENCY TABLES          O1051700
TRTCHAR CONSTYP (CHAR,HEX,BIT)     CHARACTER                            O1051800
         SPACE 5                                                        O1051900
TRTNUM  CONSTYP (NUM,PD,BIN,FLOAT,FREEFORM) DISPLAY NUMERIC             O1052000
         EJECT                                                          O1052100
TRTPD   CONSTYP (NUM,PD,BIN,FLOAT,FREEFORM) PACKED DECIMAL              O1052200
         SPACE 5                                                        O1052300
TRTHEX  CONSTYP (CHAR,HEX,BIT)     HEXADECIMAL                          O1052400
         SPACE 5                                                        O1052500
TRTBIT  CONSTYP (CHAR,HEX,BIT)     BIT STRING                           O1052600
         EJECT                                                          O1052700
TRTMASK CONSTYP ,                  PARTIAL KEY MASK                     O1052800
         SPACE 5                                                        O1052900
TRTBIN  CONSTYP (NUM,PD,BIN,FLOAT,FREEFORM) BINARY                      O1053000
         SPACE 5                                                        O1053100
TRTFLOAT CONSTYP (NUM,PD,BIN,FLOAT,FREEFORM) FLOATING POINT             O1053200
         EJECT                                                          O1053300
TRTSTR  CONSTYP ,                  CHARACTER STRING                     O1053400
         SPACE 5                                                        O1053500
TRTIND  CONSTYP ,                  INDICATOR                            O1053600
         SPACE 5                                                        O1053700
TRTFREE CONSTYP (NUM,PD,BIN,FLOAT,FREEFORM) FREE FORMAT DISPLAY NUMERIC O1053800
         SPACE 5                                                        O1053900
TRTUNU3 CONSTYP ,                  UNASSIGNED                           O1054000
         TITLE 'PARROTO1 - ERROR MESSAGES'                              O1054100
LINE01   DS    0CL110                                                   O1054200
         DC    C'PTO1-001-W  CONTROL CARD NO.'                          O1054300
LINE01C  DC    X'4020202020202120'                                      O1054400
         DC    C' SPECIFIES AN UNKNOWN GR00 LABEL: THE FIELD WILL DEFAU*O1054500
               LT TO DDNAME ''PRINT'''                                  O1054600
LINE02   DS    0CL127                                                   O1054700
         DC    C'PTO1-002-E  CONTROL CARD NO.'                          O1054800
LINE02C  DC    X'4020202020202120'                                      O1054900
         DC    C' SPECIFIES AN OUTPUT FORMAT THAT IS INCONSISTENT WITH TO1055000
               THE FIELD TYPE: SPECIFICATION IGNORED'                   O1055100
LINE03   DS    0CL97                                                    O1055200
         DC    C'PTO1-003-E  CONTROL CARD NO.'                          O1055300
LINE03C  DC    X'4020202020202120'                                      O1055400
         DC    C' SPECIFIES AN UNKNOWN FIELD LABEL ('                   O1055500
LINE03L  DC    C'XX'                                                    O1055600
         DC    C'): SPECIFICATION IGNORED'                              O1055700
LINE04   DS    0CL120                                                   O1055800
         DC    C'PTO1-004-E  CONTROL CARD NO.'                          O1055900
LINE04C  DC    X'4020202020202120'                                      O1056000
         DC    C'SPECIFIES THE COUNT FIELD OF AN UNDEFINED KEY LEVEL: SPO1056100
               PECIFICATION IGNORED'                                    O1056200
LINE05   DS    0CL124                                                   O1056300
         DC    C'PTO1-005-W  CONTROL CARD NO.'                          O1056400
LINE05C  DC    X'4020202020202120'                                      O1056500
         DC    C' SPECIFIES AN OUTPUT FIELD LENGTH LONGER THAN THE INPUTO1056600
               T LENGTH: INPUT LENGTH SUBSTITUTED'                      O1056700
LINE06   DS    0CL82                                                    O1056800
         DC    C'PTO1-006-E  CONTROL CARD NO.'                          O1056900
LINE06C  DC    X'4020202020202120'                                      O1057000
         DC    C' SPECIFIES AN UNKNOAWN LABEL ('                        O1057100
LINE06L  DC    CL2' '                                                   O1057200
         DC    C'): CARD IGNORED'                                       O1057300
LINE10   DS    0CL70                                                    O1057400
         DC    C'PTO1-010-E  GR13 CARD NO.'                             O1057500
LINE10C  DC    X'4020202020202120'                                      O1057600
         DC    C' REQUIRES A GRXX CARD WITH LABEL '''                   O1057700
LINE10L  DC    C'  '                                                    O1057800
         DC    C''''                                                    O1057900
LINE11   DS    0CL106                                                   O1058000
         DC    C'PTO1-011-W  CONTROL CARD NO.'                          O1058100
LINE11C  DC    X'4020202020202120'                                      O1058200
         DC    C' IS NOT REFERENCED BY ANY GR13 CONTROL CARD'           O1058300
         DC    C' AND IS CONSEQUENTLY UNUSED'                           O1058400
         SPACE 5                                                        O1058500
         LTORG                                                          O1058600
        SCSEND O1                  TERMINATE CSET PARROTO1              O1058700
         END                                                            O1058800
