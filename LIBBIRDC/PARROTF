         TITLE 'PARROTF - DETAIL PROCESSING'                            F 000100
         MACRO                                                          F 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             F 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               F 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         F 000500
               EJECT                                                    F 000600
         CBPREFIX ,                CONTROL BLOCK PREFIX                 F 000700
               EJECT                                                    F 000800
         CCB   ,                   CENTRAL CONTROL BLOCK                F 000900
               EJECT                                                    F 001000
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          F 001100
               EJECT                                                    F 001200
         EQUATES ,                 GENERATE STANDARD EQUATES            F 001300
               EJECT                                                    F 001400
         FDB   ,                   FIELD DEFINITION BLOCK               F 001500
               EJECT                                                    F 001600
         FSA   ,                   FIELD STORAGE AREA                   F 001700
               EJECT                                                    F 001800
         KBD   ,                   KEY BREAK DESCRIPTOR                 F 001900
               EJECT                                                    F 002000
         LCD   ,                   LINE COMPONENT DESCRIPTOR            F 002100
               EJECT                                                    F 002200
         LIB   ,                   LABEL IDENTIFICATION BLOCK           F 002300
               EJECT                                                    F 002400
         OCB   ,                   OUTPUT CONTROL BLOCK                 F 002500
               EJECT                                                    F 002600
         PARROTT DSECT=YES         TRANSLATE TABLES                     F 002700
               EJECT                                                    F 002800
         PCB   ,                   PROCESSING CONTROL BLOCK             F 002900
               EJECT                                                    F 003000
         RST   ,                   RECORD SELECTION TEST DEF'N          F 003100
               EJECT                                                    F 003200
         SCE   ,                   SELECTION CRITERION ELEMENT          F 003300
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       F 003400
         MEND                                                           F 003500
         SPACE 4                                                        F 003600
PARROTF  CSECT                                                          F 003700
         $CB   ,                   GENERATE DSECTS AND EQUATES          F 003800
         EJECT                                                          F 003900
        SCSECT F                                                        F 004000
         USING PARROTF,R12         ESTABLISH PARROTF ADDRESSABILITY     F 004100
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         F 004200
         SPACE 1                                                        F 004300
         ENTRY PARENDF             END IF CSECT                         F 004400
         ENTRY CLEARBL             RESET DUPLICATE SUPPRESSION ON EOP   F 004500
         ENTRY PROCLCD             PROCESS SINGLE LCD                   F 004600
         TITLE 'PARROTF - PROCESS A SINGLE LCD CONTROL BLOCK'           F 004700
*********************************************************************** F 004800
*        PROCESS SINGLE LCD C/B:   MAIN-LINE                          * F 004900
*********************************************************************** F 005000
         SPACE 1                                                        F 005100
*        THIS ROUTINE IS THE MAIN-LINE LOGIC FOR THE ROUTINES THAT      F 005200
*         PROCESS A SINGLE LCD CONTROL BLOCK.  IN ADDITION TO DECIDING  F 005300
*         WHICH OTHER ROUTINES TO INVOKE, THIS ROUTINE ESTABLISHES THE  F 005400
*         FOLLOWING REGISTER USAGE FOR THE SUBSIDIARY ROUTINES :-       F 005500
         SPACE 1                                                        F 005600
*         R2  - ADDRESS OF DCBSW FOR REQUIRED OUTPUT DATA SET           F 005700
*         R5  - ADDRESS OF CURRENT OUTPUT BUFFER                        F 005800
*         R6  - ADDRESS OF FIELD WITHIN OUTPUT BUFFER                   F 005900
*         R7  - ADDRESS OF CORRESPONDING OCB                            F 006000
*         R15 - EXECUTABLE LENGTH OF OUTPUT FIELD                       F 006100
         SPACE 5                                                        F 006200
*        UPON ERTURN, THE COND CODE IS SET THUS :-                      F 006300
*         BE  - CONTINUE PROCESSING LCD CHAIN                           F 006400
*         BNE - TERMINATE PROCESSING OF LCD CHAIN ( 'DELETE' FOUND )    F 006500
         EJECT                                                          F 006600
*********************************************************************** F 006700
*        PROCESS SINGLE LCD C/B:   MAIN-LINE ( CONT'D )               * F 006800
*********************************************************************** F 006900
         SPACE 1                                                        F 007000
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 007100
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 007200
PROCLCD  SUBIN SAVE=(R4,R6,R7)     PRESERVE REGISTERS                   F 007300
         CLI   LCDID,NULLCB        HAS THIS LCD BEEN NULLIFIED          F 007400
         BE    PROCLCDX            GO TO EXIT IF YES                    F 007500
         TM    LCDSW,MLCDGR11      IS THIS A 'GR11' REQUEST             F 007600
         BO    PROCLCDX            GO TO EXIT IF YES: NOTHING TO DO     F 007700
         LTA   R10,LCDSCE,PROCLCD1 GET ADDRESS OF 1ST SCE ( IF ANY )    F 007800
         CBAL  R4,SCEPROC          TEST IF SELECTION CRITERIA SATISFIED F 007900
         BNE   PROCLCDX            GO TO EXIT IF NOT SATISFIED          F 008000
PROCLCD1 TM    LCDSW2,MLCDELET     IS THIS A 'DELETE' LCD               F 008100
         BO    PROCLCDW            EXIT, SETTING COND CODE LOW          F 008200
         L     R7,LCDOCB           GET ADDRESS OF ASSOCIATED OCB        F 008300
         L     R2,OCBIOSW          GET ADDRESS OF CORRESPONDING DCBSW   F 008400
         L     R5,IOPSRECA(R2)     GET ADDRESS OF CURRENT OUTPUT BUFFER F 008500
         LR    R6,R5               POINT R6 AT OUTPUT BUFFER            F 008600
         AH    R6,LCDFLDP          POINT R6 AT OUTPUT FIELD WITHIN BUFF F 008700
         TM    OCBSW,MOCBREPT      IS THIS A REPORT DATA SET            F 008800
         BZ    *+8                 BR IF NOT A REPORT                   F 008900
         LA    R6,1(,R6)           ALLOW FOR CARRIAGE CONTROL CHARACTER F 009000
         SR    R15,R15             ZEROISE WORK REGISTER                F 009100
         IC    R15,LCDFLDL         RETRIEVE EXECUTABLE LENGTH OF OUTPUT F 009200
         OI    OCBSW,MOCBRITE      FLAG THAT 'WRITE' REQUIRED FOR OCB   F 009300
         EJECT                                                          F 009400
*********************************************************************** F 009500
*        PROCESS SINGLE LCD C/B:   MAIN-LINE ( CONT'D )               * F 009600
*********************************************************************** F 009700
         SPACE 1                                                        F 009800
         CBAL  R4,PLCDLINE         PROCESS 'LINE+' REQUEST              F 009900
         BO    PROCLCDX            GO TO EXIT IF IT WAS 'LINE+'         F 010000
         CBAL  R4,PLCDOLAY         DETERMINE IF THIS FLD OVERLAYS ANOTH F 010100
         CBAL  R4,PLCDCNT          PROCESS THE COUNT REQUEST            F 010200
         BO    PROCLCDX            GO TO EXIT IF IT WAS 'CNTN' REQUEST  F 010300
         CBAL  R4,PLCDLIT          PROCESS LITERAL REQUEST              F 010400
         BO    PROCLCDS            GO TEST FOR DUPLICATE SUPPRESSION    F 010500
         CBAL  R4,PLCDBSIC         PRODUCE BASIC REPORT IF REQUIRED     F 010600
         BO    PROCLCDX            EXIT IF BASIC REPORT REQUIRED        F 010700
         CBAL  R4,PLCDFLD          MOVE FIELD TO OUTPUT BUFFER          F 010800
PROCLCDS CBAL  R4,PLCDBL           SUPPRESS IF SAME AS LAST IF REQUIRED F 010900
         B     PROCLCDX            GO TO EXIT                           F 011000
PROCLCDW CLI   *,W                 SET COND CODE LOW TO TERMINATE PROC' F 011100
         B     *+8                 BYPASS RESETTING COND CODE           F 011200
PROCLCDX CLI   *,X                 SET COND CODE TO CONTINUE            F 011300
        SUBOUT RESTORE=(R4,R6,R7)  RESTORE AND RETURN                   F 011400
         DROP  R8                  DROP LCD ADDRESSABILITY              F 011500
         DROP  R7                  DROP OCB ADDRESSABILITY              F 011600
         EJECT                                                          F 011700
*********************************************************************** F 011800
*        PROCESS SINGLE LCD C/B:   DETERMINE IF FIELD OVERLAYS PREV   * F 011900
*********************************************************************** F 012000
         SPACE 1                                                        F 012100
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 012200
PLCDOLAY SUBIN SAVE=ALL            PRESERVE ALL REGISTERS               F 012300
         TM    LCDSW2,MLCDOLAY     HAS OVERLAY ALREADY BEEN DETECTED    F 012400
         BO    PLCDOLYX            GO TO EXIT IF ALREADY KNOWN          F 012500
         EX    R15,OLAYCLC         DETERMINE IF DEST'N FIELD IS BLANK   F 012600
         BE    PLCDOLYX            EXIT IF DESTINATION IS BLANK         F 012700
         OI    LCDSW2,MLCDOLAY     FLAG THAT OVERLAY BEEN DETECTED      F 012800
         L     R5,SYSPRINT+IOPSRECA OBTAIN SYSPRINT BUFFER ADDRESS      F 012900
         CCNO  LINE01,LABEL=LCDLABL,REG=R8 ISSUE ERROR MESSAGE          F 013000
PLCDOLYX SUBOUT RESTORE=ALL        RESTORE AND RETURN TO CALLER         F 013100
         DROP  R8                  DROP LCD ADDRESSABILTY               F 013200
         EJECT                                                          F 013300
*********************************************************************** F 013400
*        PROCESS SINGLE LCD C/B:   PROCESS 'LINE+' REQUESTS           * F 013500
*********************************************************************** F 013600
         SPACE 1                                                        F 013700
*        THIS ROUTINE PROCESSES 'LINE+' REQUESTS, SETTING THE SPECIFIED F 013800
*         CARRIAGE CONTROL CHARACTER AND ISSUING THE WRITE TO THE       F 013900
*         APPROPRIATE OUTPUT DATA SET.  IT ALSO PRESERVES THE DCBSW     F 014000
*         LINECOUNT IN THE OCB AND ZEROISES THE DCBSW LINECOUNT. THIS   F 014100
*         ENSURES THAT THE MULTIPLE LINES APPEAR ON THE SAME PAGE, AND  F 014200
*         PREVENTS TYHE LOOP CAUSED BY A PAGESKIP WITHIN PROCLCD.       F 014300
         SPACE 1                                                        F 014400
*        UPON RETURN, THE COND CODE IS SET THUS :-                      F 014500
*         BO  - LCD DEFINES 'LINE+' REQUEST                             F 014600
*         BZ  - LCD DOES NOT DEFINE A 'LINE+' REQUEST                   F 014700
         SPACE 1                                                        F 014800
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 014900
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 015000
PLCDLINE SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              F 015100
         TM    LCDSW,MLCDPRNT      IS THIS A 'LINE+' REQUEST            F 015200
         BZ    PLCDLINX            BR IF NOT A 'LINE+' REQUEST          F 015300
         TM    OCBSW,MOCBREPT      IS THIS A REPORT DATA SET: PROBABLE  F 015400
         BZ    PLCDLIN1            BR IF NOT REPORT D/S: VERY STRANGE   F 015500
         MVC   0(1,R5),LCDLINE     SET DESIRED CARRIAGE CONTROL CHARACT F 015600
         CLI   LCDLINE,PAGESKIP    IS THIS A 'LINE+E' REQUEST           F 015700
         BNE   PLCDLIN2            BR IF NOT PAGE SKIP                  F 015800
         MVI   0(R5),SPCE0AFT      ESTABLISH SPACE-NO-PRINT OF CURRENT  F 015900
         AP    IOPSRCNT(4,R2),=P'200' ENSURE PAGE SKIP PROCESSING       F 016000
         ZAP   OCBLCNT,$ZERO       AND CLEAR THE SAVED LINE COUNT TOO     016100
         B     PLCDLIN3            GO ISSUE WRITE & TRIGGER PAGE SKIP   F 016200
PLCDLIN2 AP    OCBLCNT,IOPSRCNT(4,R2) ADD LINE COUNT TO OCB STORE       F 016300
         OI    OCBSW,MOCBACNT      FLAG THAT LINE COUNT HAS BEEN ALTERE F 016400
         ZAP   IOPSRCNT(4,R2),$ZERO ZEROISE LINE COUNT TO PREVENT PSKIP F 016500
PLCDLIN3 CBAL  R4,WRITEP,NESTED=YES PRINT LINE ON REPORT D/S            F 016600
         B     PLCDLINX            GO TO EXIT                           F 016700
PLCDLIN1 CBAL  R4,WRITE            ISSUE WRITE TO NON-REPORT D/S        F 016800
PLCDLINX TM    LCDSW,MLCDPRNT      SET COND CODE FOR CALLER             F 016900
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 017000
         DROP  R8                  DROP LCD ADDRESSABILITY              F 017100
         DROP  R7                  DROP OCB ADDRESSABILITY              F 017200
         EJECT                                                          F 017300
*********************************************************************** F 017400
*        PROCESS SINGLE LCD C/B:   PROCESS LITERAL OUTPUT FIELD       * F 017500
*********************************************************************** F 017600
         SPACE 1                                                        F 017700
*        THIS ROUTINE PROCESSES THE LCD IF IT CONTAINS A LITERAL VALUE. F 017800
         SPACE 1                                                        F 017900
*        UPON RETURN, THE COND CODE IS SET THUS :-                      F 018000
*         BO  - LCD DEFINES A LITERAL VALUE                             F 018100
*         BZ  - LCD DOES NOT DEFINE A LITERAL                           F 018200
         SPACE 1                                                        F 018300
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 018400
PLCDLIT  SUBIN ,                   ENTER ROUTINE                        F 018500
         TM    LCDSW,MLCDLIT       DOES THIS LCD CONTAIN A LITERAL VALU F 018600
         BZ    *+8                 BR IF NOT A LITERAL                  F 018700
         EX    R15,MVLCDLIT        MOVE LITERAL VALUE TO OUTPUT BUFFER  F 018800
        SUBOUT ,                   RETURN TO CALLER                     F 018900
         DROP  R8                  DROP LCD ADDRESSABILITY              F 019000
         EJECT                                                          F 019100
*********************************************************************** F 019200
*        PROCESS SINGLE LCD C/B:   PROCESS 'CNTN' REQUESTS            * F 019300
*********************************************************************** F 019400
         SPACE 1                                                        F 019500
*        THIS ROUTINE PROCESSES REQUESTS FOR A RECORD COUNT ASSOCIATED  F 019600
*         WITH A PARTICULAR KEY BREAK.                                  F 019700
         SPACE 1                                                        F 019800
*        UPON RETURN, THE COND CODE IS SET THUS :-                      F 019900
*         BO  - LCD DEFINES A 'CNTN' REQUEST                            F 020000
*         BZ  - LCD DOES NOT DEFINE A 'CNTN' REQUEST                    F 020100
         SPACE 1                                                        F 020200
         USING KBDNTRY,R1          ESTABLISH KBD ADDRESSABILITY         F 020300
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 020400
PLCDCNT  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              F 020500
         TM    LCDSW,MLCDCNT       IS THIS A 'CNTN' REQUEST             F 020600
         BZ    PLCDCNTX            GO TO EXIT IF NOT                    F 020700
         CLI   LCDLABL+1,0         IS THIS A REQUEST FOR 'CNT0'         F 020800
         BNE   PLCDCNT1            BR IF NOT TO PROCESS 'CNTN' REQUEST  F 020900
         ZAP   $FPDEC,$ARECCNT     SET CURRENT RECORD COUNT IN FP AREA  F 021000
         B     PLCDCNT2            GO CONVERT VALUE TO FLOATING POINT   F 021100
PLCDCNT1 L     R1,LCDKBD           GET ADDRESS OF APPROPRIATE KBD       F 021200
         ZAP   $FPDEC,KBDRCNT      MOVE RECORD COUNT TO FP WORK AREA    F 021300
PLCDCNT2 MVI   $FPNDEC,0           SET NO. OF DECIMALS TO ZERO          F 021400
         CBAL  R4,CNVTOFP          CONVERT NUMBER TO FLOATING POINT     F 021500
         MVC   $FPNDEC,LCDNDEC     SET NO OF OUTPUT DECIMAL PLACES      F 021600
         CBAL  R4,CNVFRFP          CONVERT FROM FP FORMAT TO ALL OTHERS F 021700
         CBAL  R4,PLCDFMAT         FORMAT FIELD AS REQUIRED IN OUTPUT   F 021800
PLCDCNTX TM    LCDSW,MLCDCNT       RESET COND CODE FOR CALLER           F 021900
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 022000
         DROP  R8                  DROP LCD ADDRESSABILITY              F 022100
         DROP  R1                  DROP KBD ADDRESSABILITY              F 022200
         EJECT                                                          F 022300
*********************************************************************** F 022400
*        PROCESS SINGLE LCD C/B:   BASIC REPORT MAIN-LINE             * F 022500
*********************************************************************** F 022600
         SPACE 1                                                        F 022700
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         F 022800
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 022900
PLCDBSIC SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              F 023000
         TM    LCDSW,MLCDBSIC      IS THIS AN LCD FOR THE BASIC REPORT  F 023100
         BZ    PLCDBSX             GO TO EXIT IF NOT                    F 023200
         TM    $STATUS,STATEOD     IS THIS FILE TOTAL TIME              F 023300
         BZ    PLCDBS0             BR IF NOT FILE TOTAL                 F 023400
         MVC   1(21,R5),=C'GRAND TOTAL FOR FILE:' SET TOTAL HEADING     F 023500
         MVC   53(L'CNTMASK,R5),CNTMASK SET EDIT MASK IN OUTPUT LINE    F 023600
         ED    53(L'CNTMASK,R5),$ARECCNT EDIT COUNT OF ACCEPTED RECORDS F 023700
         MVC   37(19,R5),=C'*********    COUNT=' SET EXTRA FINAL TEXT   F 023800
         B     PLCDBSX             LINE COMPLETE SO EXIT                F 023900
PLCDBS0  LTA   R15,$KBDKBD,PLCDBSX GET ADDRESS OF MAJOR KEY'S KBD       F 024000
         LH    R10,$NUMKEYS        ASSUME DETAIL LEVEL AND SET ALL KEYS F 024100
         TM    $PROCESS,PROCDETL   IS THIS DETAIL TIME                  F 024200
         BO    *+8                 BR IF DETAIL LEVEL                   F 024300
         LH    R10,$KEYNO          SET TO PROCESS TO CURRENT KEY NUMBER F 024400
         LA    R6,1(,R5)           POINT AT START OF KEY AREA IN OUTPUT F 024500
PLCDBS1  CBAL  R4,PLCDBKEY         INSERT KEY INTO LINE                 F 024600
         LTA   R15,KBDKBD,PLCDBS2  GET ADDRESS OF NEXT KBD              F 024700
         BCT   R10,PLCDBS1         LOOP BACK IF ANY KEYS LEFT           F 024800
PLCDBS2  CBAL  R4,PLCDBNME         ADD NAME TO LINE IF REQUIRED         F 024900
         CBAL  R4,PLCDBCNT         ADD 'COUNT' AND TOTAL AS NECESSARY   F 025000
PLCDBSX  TM    LCDSW,MLCDBSIC      SET COND CODE FOR RETURN             F 025100
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 025200
         DROP  R8                  DROP LCD ADDRESSABILITY              F 025300
         DROP  R15                 DROP KBD ADDRESSABILITY              F 025400
         EJECT                                                          F 025500
*********************************************************************** F 025600
*        PROCESS SINGLE LCD C/B:   BASIC REPORT - ADD KEY TO LINE     * F 025700
*********************************************************************** F 025800
         SPACE 1                                                        F 025900
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 026000
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         F 026100
         USING LIBNTRY,R1          ESTABLISH LIB ADDRESSABILITY         F 026200
PLCDBKEY SUBIN SAVE=(R4,R15)       PRESERVE REGISTERS                   F 026300
PLCDBK1  MVC   LCDLIB,KBDKLIB      SET KEY'S LIB ADDRESS IN LCD         F 026400
         L     R1,KBDKLIB          RETRIEVE LIB ADDRESS OF KEY          F 026500
         IC    R15,LIBFLDL         RETRIEVE EXECUTABLE LENGTH OF KEY    F 026600
         MVI   LCDFLDF,FLCDCHAR    ASSUME CHARACTER KEY & SET OUTPUT    F 026700
         TM    LIBTYPE,LIBTCHAR    IS IT A CHARACTER KEY                F 026800
         BO    PLCDBK2             BR IF CHARACTER: ALL SET             F 026900
         MVI   LCDFLDF,FLCDNUM9    SET LCD FOR NUMERIC OUTPUT           F 027000
         CLI   LIBFLDT,PD          WAS THE KEY PACKED DECIMAL           F 027100
         BNE   PLCDBK2             BR IF NOT PD: ASSUME DISPLAY NUMERIC F 027200
         LA    R15,1(R15,R15)      SET LENGTH TO '2N+1' FOR PD INPUT    F 027300
PLCDBK2  STC   R15,LCDFLDL         SET OUTPUT FIELD LENGTH IN LCD       F 027400
         CBAL  R4,PLCDFLD          LOCATE AND FORMAT THE OUTPUT FIELD   F 027500
         LA    R6,3(R15,R6)        POINT AT START POSN FOR NEXT KEY     F 027600
        SUBOUT RESTORE=(R4,R15)    RESTORE AND RETURN TO CALLER         F 027700
         DROP  R1                  DROP LIB ADDRESSABILITY              F 027800
         DROP  R15                 DROP KBD ADDRESSABILITY              F 027900
         DROP  R8                  DROP LCD ADDRESSABILITY              F 028000
         EJECT                                                          F 028100
*********************************************************************** F 028200
*        PROCESS SINGLE LCD C/B:   BASIC REPORT - INSERT NAME         * F 028300
*********************************************************************** F 028400
         SPACE 1                                                        F 028500
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 028600
         USING LIBNTRY,R14         ESTABLISH LIB ADDRESSABILITY         F 028700
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         F 028800
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 028900
PLCDBNME SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              F 029000
         MVI   LCDFLDF,FLCDCHAR    FORCE LCD FORMAT TO CHARACTER        F 029100
         LA    R6,36(,R5)          POINT R6 AT START OF NAME FIELD      F 029200
         LTA   R7,LCDOCB           REFRESH OCB ADDRESS                  F 029300
         TM    OCBSW,MOCBREPT      IS THIS A REPORT DATA SET            F 029400
         BZ    *+8                 BR IF NOT A REPORT                   F 029500
         LA    R6,1(,R6)           ALLOW FOR CARRIAGE CONTROL CHARACTER F 029600
         TM    $PROCESS,PROCDETL   IS THIS DETAIL TIME                  F 029700
         BZ    PLCDBN1             BR IF NOT DETAIL TIME                F 029800
         TM    $DETLSW,MDETNAME    IS THERE A NAME FOR DETAIL LEVEL     F 029900
         BZ    PLCDBNX             EXIT IF NO NAME AVAILABLE            F 030000
         MVI   BLDLABL,NAME        SET NAME9 ....                       F 030100
         MVI   BLDLABL+1,X'09'      ... IN WORK FIELD FOR LIB SCAN      F 030200
         LTA   R14,$LIBLIB         GET ADDRESS OF 1ST LIB               F 030300
         B     *+8                 BYPASS FORWARD CHAINING              F 030400
PLCDBN0  LTA   R14,LIBLIB,PLCDBNX  GET ADDRESS OF NEXT LIB              F 030500
         NULCB LIB,PLCDBN0         GET NEXT LIB IF THIS NULLIFIED       F 030600
         CLC   BLDLABL,LIBLABL     IS THIS THE LIB WE WANT              F 030700
         BNE   PLCDBN0             LOOP BACK FOR NEXT LIB IF NOT        F 030800
         ST    R14,LCDLIB          PRESERVE LIB ADDRESS IN THE LCD      F 030900
         B     PLCDBN2             GO PROCESS NAME FIELD                F 031000
         EJECT                                                          F 031100
*********************************************************************** F 031200
*        PROCESS SINGLE LCD C/B:   BASIC REPORT - INSERT NAME (CONT'D)* F 031300
*********************************************************************** F 031400
         SPACE 1                                                        F 031500
PLCDBN1  EQU   *                   KEY LEVEL PROCESSING                 F 031600
         L     R15,$PTRKBD         RETRIEVE KBD OF KEY THAT BROKE       F 031700
         TM    KBDSW,MKBDNAME      DOES THIS KEY HAVE A NAME FIELD      F 031800
         BZ    PLCDBNX             EXIT IF NO NAME AVAILABLE            F 031900
         MVC   LCDLIB,KBDNLIB      SET ADDRESS OF NAME'S LIB IN THE LCD F 032000
         L     R14,KBDNLIB         RETRIEVE ADDRESS OF NAME'S LIB       F 032100
PLCDBN2  IC    R15,LIBFLDL         GET EXECUTABLE LENGTH OF NAME        F 032200
         STC   R15,LCDFLDL         SET LENGTH OF OUTPUT FLD IN LCD      F 032300
         CBAL  R4,PLCDFLD          LOCATE AND FORMAT THE NAME FIELD     F 032400
         L     R2,OCBIOSW          REFRESH DCBSW ADDRESS                F 032500
         AP    OCBLCNT,IOPSRCNT(4,R2) ADD LINECOUNT TO OCB STORE        F 032600
         OI    OCBSW,MOCBACNT      FLAG THAT LINE COUNT ADJUSTED        F 032700
         ZAP   IOPSRCNT(4,R2),$ZERO ZEROISE DCBSW LCNT TO STOP PAGESKIP F 032800
         CBAL  R4,WRITEP,NESTED=YES WRITE THE LINE WITH KEYS,NAMES,VALS F 032900
PLCDBNX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 033000
         DROP  R7                  DROP OCB ADDRESSABILITY              F 033100
         DROP  R8                  DROP LCD ADDRESSABILITY              F 033200
         DROP  R14                 DROP LIB ADDRESSABILITY              F 033300
         DROP  R15                 DROP KBD ADDRESSABILITY              F 033400
         EJECT                                                          F 033500
*********************************************************************** F 033600
*        PROCESS SINGLE LCD C/B:   BASIC REPORT - 'TOTAL' AND COUNTS  * F 033700
*********************************************************************** F 033800
         SPACE 1                                                        F 033900
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         F 034000
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 034100
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 034200
PLCDBCNT SUBIN ,                   ENTER ROUTINE                        F 034300
         TM    $PROCESS,PROCDETL   IS THIS DETAIL LEVEL                 F 034400
         BO    PLCDBCX             GO TO EXIT IF DETAIL TIME            F 034500
         LTA   R15,$PTRKBD         RETRIEVE ADDRESS OF CURRENT KBD      F 034600
         TM    $STATUS,STATDETL    ARE DETAIL LINES BEING PRINTED       F 034700
         BO    PLCDBCX             BR IF YES: ALL KEY COUNTS REQUIRED   F 034800
         NC    KBDKBD+1(3),KBDKBD+1 IS THIS THE LOWEST KEY              F 034900
         BZ    PLCDBCX             EXIT IF LOWEST KEY: COUNT NOT REQ'D  F 035000
PLCDBC1  LTA   R7,LCDOCB           RETRIEVE OCB ADDRESS                 F 035100
         OI    OCBSW,MOCBRITE      FLAG FOR WRITE LEST ALREADY DONE ONE F 035200
         L     R2,OCBIOSW          GET ADDRESS OF ASSOCIATED DCBSW      F 035300
         L     R6,IOPSRECA(R2)     RETRIEVE CURRENT RECORD ADDRESS      F 035400
         LA    R6,36(,R5)          POINT AT START OF NAME FIELD         F 035500
         TM    OCBSW,MOCBREPT      IS THIS A REPORT DATA SET            F 035600
         BZ    *+8                 BR IF NOT A REPORT                   F 035700
         LA    R6,1(,R6)           ALLOW FOR CARRIAGE CONTROL CHARACTER F 035800
         MVC   0(5,R6),=C'TOTAL'   SET 'TOTAL' IN OUTPUT LINE           F 035900
         LH    R1,KBDKNUM          RETRIEVE KEY NUMBER                  F 036000
         STC   R1,EXASTCNV         PRESERVE CURRENT KEY NO. IN WORKAREA F 036100
         TR    EXASTCNV,ASTCNVTB   CONVERT KEYNO TO EXECUTABLE * LENGTH F 036200
         IC    R1,EXASTCNV         RETRIEVE EXECUTABLE LENGTH OF *'S    F 036300
         EX    R1,MVCAST           INSERT REQUISITE NO OF ASTERISKS     F 036400
         MVC   14(L'CNTMASK,R6),CNTMASK ADD EDIT MASK TO LINE           F 036500
         ED    14(L'CNTMASK,R6),KBDRCNT EDIT RECORD COUNT INTO LINE     F 036600
         MVC   12(6,R6),=C'COUNT=' SET 'COUNT=' PRIOR TO RECORD COUNT   F 036700
PLCDBCX SUBOUT ,                   RETURN TO CALLER                     F 036800
         DROP  R8                  DROP LCD ADDRESSABILITY              F 036900
         DROP  R7                  DROP OCB ADDRESSABILITY              F 037000
         DROP  R15                 DROP KBD ADDRESSABILITY              F 037100
         EJECT                                                          F 037200
*********************************************************************** F 037300
*        PROCESS SINGLE LCD C/B:   LOCATE/PROCESS THE FIELD TO BE OUTPU F 037400
*********************************************************************** F 037500
         SPACE 1                                                        F 037600
*        THIS ROUTINE LOCATES THE FIELD TO BE OUTPUT, AND ESTABLISHES   F 037700
*         THE ENVIRONMENT FOR THE ROUTINE 'PLCDFMAT' ( WHICH FORMATS    F 037800
*         THE OUTPUT FIELD ).                                           F 037900
*        IF THE FIELD TO BE OUTPUT IS NON-NUMERIC, THEN ITS ADDRESS IS  F 038000
*         PLACED IN REG1, WHILE IF THE FIELD IS NUMERIC, THEN THE       F 038100
*         FLOATING POINT CONVERSION ROUTINE IS INVOKED TO PLACE THE     F 038200
*         VALUE INTO ALL THE VARIOUS FLOATING POINT CONVERSION FIELDS.  F 038300
         SPACE 1                                                        F 038400
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 038500
         USING LIBNTRY,R2          ESTABLISH LIB ADDRESSABILITY         F 038600
         USING FSANTRY,R1          ESTABLISH FSA ADDRESSABILITY         F 038700
PLCDFLD  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              F 038800
         L     R2,LCDLIB           GET ADDRESS OF ASSOCIATED LIB        F 038900
         SR    R1,R1               ZEROISE WORK REGISTER                F 039000
         IC    R1,LIBFLDT          RETRIEVE SOURCE FIELD TYPE FROM LIB  F 039100
         BTYPE PREFIX=PLCDFLD,DCHAR=C,DNUM=N BR AS APPORPRIATE          F 039200
         EJECT                                                          F 039300
*********************************************************************** F 039400
*        PROCESS SINGLE LCD C/B:   LOCATE/PROCESS FLD ( CONT'D )      * F 039500
*********************************************************************** F 039600
         SPACE 1                                                        F 039700
PLCDFLDN L     R1,LIBFSA           GET ADDRESS OF FSA                   F 039800
         LA    R14,FSAVALUR        POINT AT DETAIL RECORD VALUE         F 039900
         TM    $PROCESS,PROCDETL   ARE WE DOING DETAIL LEVEL PROCESSING F 040000
         BO    PLCDFLD1            BR IF YES TO CONVERT VALUE           F 040100
         TM    LIBTYPE,LIBTSCAL    IS THIS A SCALAR                     F 040200
         BO    PLCDFLD1            BR IF YES: HAVE ONLY AVAILABLE ACCUM F 040300
         TM    LCDSW2,MLCDDETL     IS DETAIL VALUE ALWAYS TO BE USED    F 040400
         BO    PLCDFLD1            BR IF YES                            F 040500
         LH    R14,$KEYNO          GET NO. OF KEY BEING PROCESSED       F 040600
         SLL   R14,3               MULTIPLY BY 8 FOR DOUBLEWORD INDEX   F 040700
         LA    R14,FSAVALUT(R14)   POINT AT APPROPRIATE ACCUMULATOR     F 040800
PLCDFLD1 MVC   $FPFP,0(R14)        MOVE FP NUMBER TO WORK AREA          F 040900
         CLI   LCDFLDF,FLCDNUM$    IS FLOTAING DOLLAR SIGN REQUIRED     F 041000
         BNE   *+8                 BR IF NOT                            F 041100
         OI    $PROCESS,PROCF$     SET FLAG FOR FLOATING $ IN $FPEDISP  F 041200
         MVC   $FPNDEC,LCDNDEC     SET NO OF DECIMAL PLACES REQUIRED    F 041300
         CBAL  R4,CNVFRFP          CONVERT FROM FP FORMAT TO ALL OTHERS F 041400
         TM    LCDSW,MLCDZZ        ARE ZERO VALUES TO BE PRINTED        F 041500
         BO    PLCDFLDF            GO FORMAT OUTPUT IF YES              F 041600
         CP    $FPDEC,$ZERO        IS FIELD VALUE ZERO                  F 041700
         BE    PLCDFLDX            BYPASS FORMATTING OUTPUT IF ZERO     F 041800
         B     PLCDFLDF            GO FORMAT OUTPUT FIELD               F 041900
PLCDFLDC L     R1,LIBFSA           GET ADDRESS OF FSA                   F 042000
         LA    R1,FSACHAR          POINT AT CHARACTER FIELD STORE       F 042100
PLCDFLDF CBAL  R4,PLCDFMAT         FORMAT FIELD IN OUTPUT BUFFER        F 042200
PLCDFLDX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         F 042300
         DROP  R1                  DROP FSA ADDRESSABILITY              F 042400
         DROP  R2                  DROP LIB ADDRESSABILITY              F 042500
         DROP  R8                  DROP LCD ADDRESSABILITY              F 042600
         EJECT                                                          F 042700
*********************************************************************** F 042800
*        PROCESS SINGLE LCD C/B:   FORMAT OUTPUT FIELD IN BUFFER      * F 042900
*********************************************************************** F 043000
         SPACE 1                                                        F 043100
*        THIS ROUTINE (AND ITS VARIOUS SUBSIDIARY ROUTINES 'FMATXXXX')  F 043200
*         FORMATS THE SOURCE FIELD AS REQUIRED IN THE OUTPUT BUFFER.    F 043300
         SPACE 1                                                        F 043400
*        UPON ENTRY, R1 CONTAINS THE ADDRESS OF THE SOURCE FIELD IF IT  F 043500
*         OS NOT A NUMERIC FIELD, WHILE IF IT IS NUMERIC, THEN THE      F 043600
*         VARIOUS FLOATING POINT CONVERSION AREAS ( IN THE CCB ) CONTAI F 043700
*         THE NUMBER IN ALL POSSIBLE NUMERIC FORMATS.                   F 043800
         SPACE 1                                                        F 043900
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 044000
PLCDFMAT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              F 044100
         SR    R15,R15             ZEROISE WORK REISTER                 F 044200
         IC    R15,LCDFLDL         GET EXECUTABLE LENGTH OF OUTPUT      F 044300
         SR    R2,R2               ZEROISE WORK REGISTER                F 044400
         IC    R2,LCDFLDF          RETRIEVE DESIRED OUTPUT FORMAT       F 044500
         SLL   R2,2                MULTIPLY BY 4 TO CONVERT TO INDEX    F 044600
         LA    R4,PLCDFMTX         SET RETURN ADDRESS FOR SUBSIDIARY RT F 044700
         B     *(R2)               GO TO DESIRED OUTPUT ROUTINE         F 044800
         B     FMATCHAR            CHARACTER                            F 044900
         B     FMATHEX             HEXADECIMAL                          F 045000
         B     FMATBIT             BIT STRING                           F 045100
         B     FMATNUM9            NUMERIC, TRAILING SIGN LEADING ZEROS F 045200
         B     FMATNUMZ            NUMERIC, TRAILING SIGN, LEADING BL   F 045300
         B     FMATNUME            EDITED NUMERIC WITH TRAILING SIGN    F 045400
         B     FMATNUM$            EDITED NUMERIC WITH FLOATING DOLLAR  F 045500
         B     FMATPD              PACKED DECIMAL                       F 045600
         B     FMATBIN             BINARY                               F 045700
         B     FMATDISP            SIGNED DISPLAY NUMERIC               F 045800
         B     FMATFP              FLOATING POINT                       F 045900
         SPACE 3                                                        F 046000
*        NOTE THAT THE ROUTINES INVOKED BY THE PRECEDING INDEXED        F 046100
*         BRANCHES RETURN CONTROL ( VIA SUBOUT ) TO THE FOLLOWING       F 046200
*         INSTRUCTION.                                                  F 046300
         SPACE 1                                                        F 046400
PLCDFMTX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         F 046500
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 046600
         DROP  R8                  DROP LCD ADDRESSABILITY              F 046700
         EJECT                                                          F 046800
*********************************************************************** F 046900
*        PROCESS SINGLE LCD C/B:   FORMAT OUTPUT CHARACTER FIELD      * F 047000
*********************************************************************** F 047100
         SPACE 1                                                        F 047200
FMATCHAR SUBIN ,                   ENTER ROUTINE                        F 047300
         EX    R15,MVCCHAR         MOVE CHARACTER FIELD TO OUTPUT       F 047400
        SUBOUT                                                          F 047500
         EJECT                                                          F 047600
*********************************************************************** F 047700
*        PROCESS SINGLE LCD C/B:   FORMAT HEXADECIMAL OUTPUT          * F 047800
*********************************************************************** F 047900
         SPACE 1                                                        F 048000
FMATHEX  SUBIN ,                   ENTER ROUTINE                        F 048100
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 048200
         L     R14,LCDLIB          GET ADDRESS OF ASSOCIATED LIB        F 048300
         DROP  R8                  DROP LCD ADDRESSABILITY              F 048400
         USING LIBNTRY,R14         ESTABLISH LIB ADDRESSABILITY         F 048500
         IC    R14,LIBFLDL         RETRIEVE EXECUTABLE LENGTH OF SOURCE F 048600
         DROP  R14                 DROP LIB ADDRESSABILITY              F 048700
         N     R14,=F'255'         CLEAR REG14 OF ALL BUT LENGTH FIELD  F 048800
         LA    R14,1(,R14)         INCREMENT TO INCLUDE 'GASH' BYTE     F 048900
FMATHEX1 CH    R14,=H'4'           IS LENGTH OF INPUT GREATER THAN 4    F 049000
         BNH   FMATHEX2            BR IF INPUT LENGTH <= 4              F 049100
         UNPK  $WRKAREA(9),0(4,R1) UNPACK 4 BYTES + 1 SPARE BYTE        F 049200
         TR    $WRKAREA(8),HEXTABLE-C'0' CONVERT TO PRINTABLE HEX FORM  F 049300
         MVC   0(8,R6),$WRKAREA    MOVE HEXPANDED 4 CHARS TO OUTPUT     F 049400
         LA    R6,8(,R6)           INCREMENT TO NEXT OUTPUT POSITION    F 049500
         LA    R1,4(,R1)           INCREMENT TO NEXT INPUT POSITION     F 049600
         SH    R14,=H'4'           DECREMENT RESIDUAL LENGTH            F 049700
         B     FMATHEX1            LOOP BACK TO PROCESS REMAINDER       F 049800
FMATHEX2 EX    R14,HEXUNPK         'UNPACK' CHARACTER FIELD INTO W/A    F 049900
         TR    $WRKAREA(15),HEXTABLE-C'0' CONVERT TO PRINTABLE HEX FORM F 050000
         LA    R1,$WRKAREA+14      POINT AT LAST BYTE OF EXPANDED SOURC F 050100
         SR    R1,R15              DECREMENT BACK TO START OF HEX STRIN F 050200
         EX    R15,MVCCHAR         MOVE HEX STRING TO OUTPUT            F 050300
        SUBOUT ,                   RETURN TO CALLER                     F 050400
         EJECT                                                          F 050500
*********************************************************************** F 050600
*        PROCESS SINGLE LCD C/B:   FORMAT OUTPUT BIT STRING           * F 050700
*********************************************************************** F 050800
         SPACE 1                                                        F 050900
*        THIS ROUTINE CONVERTS THE SOURCE FIELD INTO THE PRINTABLE      F 051000
*         BIT STRING EQUIVALENT.  NOTE THAT, SUCH IS THE SUBTLETY OF    F 051100
*         THE ROUTINE, THE OUTPUT STRING MAY BE ANY NUMBER OF 'BITS'.   F 051200
*         THUS THE SOURCE MAY BE ANY LENGTH: THERE ARE NO SILLY         F 051300
*         RESTRICTIONS ABOUT CONVERTING A SINGLE BYTE INTO 'BITS',      F 051400
*         AND THE SOURCE MAY BE MORE OR LESS THAN ONE BYTE IN LENGTH.   F 051500
*         THE ONLY RESTICTION IS THAT THE OUTPUT WILL START WITH THE    F 051600
*         HIGH-ORDER BIT ( BIT 0 ) OF THE FIRST BYTE OF THE SOURCE.     F 051700
         SPACE 1                                                        F 051800
FMATBIT  SUBIN SAVE=R6             PRESERVE OUTPUT FIELD ADDRESS        F 051900
         LA    R15,1(,R15)         ALTER EXECUTABLE LENGTH TO TRUE      F 052000
         LA    R2,256              SET R2 TO X'0100' TO START           F 052100
FMATBIT1 SRA   R2,1                MOVE MASK 1 BIT TO THE RIGHT         F 052200
         BNZ   *+12                BR IF MASK NOT ZERO                  F 052300
         LA    R2,128              RESET MASK TO LEFT-MOST BIT          F 052400
         LA    R1,1(,R1)           INCREMENT TO NEXT BYTE OF SOURCE     F 052500
         MVI   0(R6),C'0'          ASSUME THAT THE BIT IS OFF           F 052600
         EX    R2,BITTM            TEST IF THE BIT IN THE SOURCE IS OFF F 052700
         BZ    *+8                 BR IF SOURCE BIT IS OFF              F 052800
         MVI   0(R6),C'1'          SET OUTPUT TO '1'                    F 052900
         LA    R6,1(,R6)           INCREMENT TO NEXT OUTPUT BYTE        F 053000
         BCT   R15,FMATBIT1        LOOP BACK IF NAY OUTPUT POSNS LEFT   F 053100
        SUBOUT RESTORE=R6          RESTORE OUTPUT FLD ADDRESS & RETURN  F 053200
         EJECT                                                          F 053300
*********************************************************************** F 053400
*        PROCESS SINGLE LCD C/B:   FORMAT NUMERIC WITH LEADING ZEROS  * F 053500
*********************************************************************** F 053600
         SPACE 1                                                        F 053700
FMATNUM9 SUBIN ,                   ENTER ROUTINE                        F 053800
         L     R9,$VPARTT          GET ADDRESS OF CSECT OF TABLES       F 053900
         USING PARROTT,R9          ESTBALISH TABLE ADDRESSABILITY       F 054000
         TR    $FPDISP(L'$FPDISP-1),BLTOZERO CONVERT LEADING BL TO ZERO F 054100
         DROP  R9                  DROP TABLE ADDRESSABILITY            F 054200
         LA    R1,$FPDISP+L'$FPDISP-1 POINT AT LAST BYTE OF NUMERIC FIE F 054300
         SR    R1,R15              DECREMENT BACK TO 1ST REQUIRED OUTPU F 054400
         EX    R15,MVCCHAR         MOVE NUMBER TO OUTPUT BUFFER         F 054500
        SUBOUT ,                   RETURN TO CALLER                     F 054600
         SPACE 5                                                        F 054700
*********************************************************************** F 054800
*        PROCESS SINGLE LCD C/B:   FORMAT NUMERIC WITH LEADING BLANKS * F 054900
*********************************************************************** F 055000
         SPACE 1                                                        F 055100
FMATNUMZ SUBIN ,                   ENTER ROUTINE                        F 055200
         LA    R1,$FPDISP+L'$FPDISP-1 POINT AT LAST BYTE OF WORK AREA   F 055300
         SR    R1,R15              DECREMENT TO 1ST DESIRED OUTPUT DIGI F 055400
         EX    R15,MVCCHAR         MOVE NUMBER TO OUTPUT BUFFER         F 055500
        SUBOUT ,                   RETURN TO CALLER                     F 055600
         EJECT                                                          F 055700
*********************************************************************** F 055800
*        PROCESS SINGLE LCD C/B:   FORMAT EDITED NUMERIC              * F 055900
*********************************************************************** F 056000
         SPACE 1                                                        F 056100
FMATNUME SUBIN ,                   ENTER ROUTINE                        F 056200
         LA    R1,$FPEDISP+L'$FPEDISP-1 POINT AT LAST BYTE OF WORK AREA F 056300
         SR    R1,R15              DECREMENT TO 1ST DESIRED OUTPUT DIGI F 056400
         EX    R15,MVCCHAR         MOVE NUMBER TO OUTPUT BUFFER         F 056500
        SUBOUT ,                   RETURN TO CALLER                     F 056600
         SPACE 5                                                        F 056700
*********************************************************************** F 056800
*        PROCESS SINGLE LCD C/B:   FORMAT NUMERIC WITH FLOATING DOLLAR* F 056900
*********************************************************************** F 057000
         SPACE 1                                                        F 057100
FMATNUM$ SUBIN ,                   ENTER ROUTINE                        F 057200
         LA    R1,$FPEDISP+L'$FPEDISP-1 POINT AT LAST BYTE OF WORK AREA F 057300
         SR    R1,R15              DECREMENT TO 1ST DESIRED DIGIT       F 057400
         EX    R15,MVCCHAR         MOVE NUMBER TO OUTPUT BUFFER         F 057500
        SUBOUT ,                   RETURN TO CALLER                     F 057600
         EJECT                                                          F 057700
*********************************************************************** F 057800
*        PROCESS SINGLE LCD C/B:   FORMAT PACKED DECIMAL OUTPUT       * F 057900
*********************************************************************** F 058000
         SPACE 1                                                        F 058100
FMATPD   SUBIN ,                   ENTER ROUTINE                        F 058200
         SLL   R15,4               ADJUST POSN OF LGTH FOR PD EXECUTE   F 058300
         EX    R15,PDZAP           ZAP VALUE INTO OUTPUT FIELD          F 058400
        SUBOUT ,                   RETURN TO CALLER                     F 058500
         SPACE 5                                                        F 058600
*********************************************************************** F 058700
*        PROCESS SINGLE LCD C/B:   FORMAT BINARY OUTPUT FIELD         * F 058800
*********************************************************************** F 058900
         SPACE 1                                                        F 059000
*        THIS ROUTINE FORMATS BINARY OUTPUT FIELDS OF ANY LENGTH FROM   F 059100
*         ONE TO FOUR BYTES.                                            F 059200
         SPACE 1                                                        F 059300
FMATBIN  SUBIN ,                   ENTER ROUITNE                        F 059400
         LA    R1,$FPBIN+L'$FPBIN-1 POINT AT LAST BYTE OF BINARY FIELD  F 059500
         SR    R1,R15              DECREMENT TO 1ST DESIRED OUTPUT POSN F 059600
         EX    R15,MVCCHAR         MOVE BINARY VALUE TO OUTPUT          F 059700
        SUBOUT ,                   RETURN TO CALLER                     F 059800
         EJECT                                                          F 059900
*********************************************************************** F 060000
*        PROCESS SINGLE LCD C/B:   FORMAT SIGNED DISPLAY NUMERIC      * F 060100
*********************************************************************** F 060200
         SPACE 1                                                        F 060300
FMATDISP SUBIN ,                   ENTER ROUTINE                        F 060400
         SLL   R15,4               ADJUST PSN OF LNTH FOR PD UNPK         060500
         EX    R15,PDUNPK          UNPACK VALUE INTO OUTPUT             F 060600
        SUBOUT ,                   RETURN TO ACLLER                     F 060700
         SPACE 5                                                        F 060800
*********************************************************************** F 060900
*        PROCESS SINGLE LCD C/B:   FORMAT FLOATING POINT OUTPUT       * F 061000
*********************************************************************** F 061100
         SPACE 1                                                        F 061200
*         THIS ROUTINE MOVES THE FLOATING POINT VALUE TO THE OUTPUT FIE F 061300
*         WITHOUT REGARD FOR THE LENGTH OR ALIGNMENT OF THE OUTPUT.     F 061400
         SPACE 1                                                        F 061500
FMATFP   SUBIN ,                   ENTER ROUTINE                        F 061600
         LA    R1,$FPFP            POINT REG1 AT FLOATING POINT WORK AR F 061700
         EX    R15,MVCCHAR         MOVE FLOATING POINT VALUE TO OUTPUT  F 061800
        SUBOUT ,                   RETURN TO CALLER                     F 061900
         EJECT                                                          F 062000
*********************************************************************** F 062100
*        PROCESS SINGLE LCD C/B:   OPTIONALLY SUPPRESS DUPLICATE FIELDS F 062200
*********************************************************************** F 062300
         SPACE 1                                                        F 062400
*        THE USER OF PARROT MAY SPECIFY ( IN THE PRINT MODIFIER FIELD O F 062500
*         OF GR10/11/12 CONTROL CARDS ) THAT AN OUTPUT FIELD IS TO BE   F 062600
*         BLANKED OUT IF IT IS IDENTICAL TO THE SAME FIELD IN THE       F 062700
*         PRECEDING LINE.  THIS ROUTINE SUPPRESSES SUCH DUPLICATE FILED F 062800
*         IF REQUIRED.                                                  F 062900
         SPACE 1                                                        F 063000
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 063100
PLCDBL   SUBIN ,                   ENTER ROUTINE                        F 063200
         TM    LCDSW,MLCDBL        WAS SUCH DUPLICATE SUPPRESSION REQ'D F 063300
         BZ    PLCDBLX             GO TO EXIT IF NOT                    F 063400
         LA    R1,LCDLIT           POINT REG 1 AT START OF OPTIONAL LIT F 063500
         TM    LCDSW,MLCDLIT       TEST IF THERE ACTUALLY IS A LITERAL  F 063600
         BZ    *+8                 BR IF NO LITERAL IS PRESENT          F 063700
         LA    R1,1(R15,R1)        STEP OVER LITERAL TO 'BL' STORE      F 063800
         EX    R15,CLCDFLDS        IS THIS FIELD SAME AS PREVIOUS       F 063900
         BNE   PLCDBL1             BR IF NOT THE SAME TO PRESERVE THIS  F 064000
         MVI   0(R6),C' '          MOVE BLANK TO START OF OUTPUT FLD    F 064100
         LTR   R15,R15             IS THE FIELD ONLY 1 BYTE LONG        F 064200
         BZ    PLCDBLX             BR IF ONLY 1 BYTE                    F 064300
         BCTR  R15,0               DECREMENT FOR EXECUTE OF PROPAGATION F 064400
         EX    R15,MVLCDBL         PROPAGATE BLANKS THROUGH OUTPUT FLD  F 064500
         LA    R15,1(,R15)         RESET ORIGINAL ( EXECUTABLE ) LENGTH F 064600
         B     PLCDBLX             BYPASS PRESERVING NOW-BLANK FIELD    F 064700
PLCDBL1  EX    R15,MVLCDFLD        PRESERVE THIS FIELD IN LCD FOR NEXT  F 064800
PLCDBLX SUBOUT ,                   RETURN TO CALLER                     F 064900
         DROP  R8                  DROP LCD ADDRESSABILITY              F 065000
         TITLE 'PARROTF - RESET DUPLICATE FIELD SUPPRESSION ON EOP'     F 065100
*********************************************************************** F 065200
*        RESET DUPLICATE FIELD SUPPRESSION UPON END OF CURRENT PAGE   * F 065300
*********************************************************************** F 065400
         SPACE 1                                                        F 065500
*        THE USER MAY SPECIFY THAT A FIELD IS NOT TO BE PRINTED IF IT   F 065600
*         IS THE SAME AS THE PREVIOUS TIME IT WAS PRINTED.  HOWEVER,    F 065700
*         UPON SKIPPING TO A NEW PAGE, THE USER WOULD RATHER LIKE TO    F 065800
*         SEE THE VALUE RE-APPEAR.  THIS ROUTINE CLEARS THE STORES USED F 065900
*         TO DETERMINE WHETHER OR NOT TO SUPPRESS THE FIELD, AND IS     F 066000
*         CALLED BY THE PAGE HEADING ROUTINE 'WRITEH'.                  F 066100
         SPACE 1                                                        F 066200
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 066300
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 066400
CLEARBL  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              F 066500
         TM    $PROCESS,PROCBL     ARE THERE ANY 'BL' SPECIFICATIONS    F 066600
         BZ    CLEARBLX            EXIT IF NOT                          F 066700
         LTA   R8,$LCDTOTL         GET ADDRESS OF 1ST TOTAL LCD         F 066800
         B     *+8                 BYPASS FORWARD CHAINING              F 066900
CLEARBL1 LTA   R8,LCDLCD,CLEARBL2  GET ADDRESS OF NEXT LCD              F 067000
         CBAL  R4,CLEARLCD         CLEAR LCD'S STORE IF NECESSARY       F 067100
         B     CLEARBL1            LOOP BACK FOR NEXT LCD               F 067200
CLEARBL2 LTA   R8,$LCDHEAD         GET ADDRESS OF 1ST HEADING LCD       F 067300
         B     *+8                 BYPASS FORWARD CHAINING              F 067400
CLEARBL3 LTA   R8,LCDLCD,CLEARBL4  GET ADDRESS OF NEXT LCD              F 067500
         CBAL  R4,CLEARLCD         CLEAR LCD'S STORE IF NECESSARY       F 067600
         B     CLEARBL3            LOOP BACK FOR NEXT LCD               F 067700
CLEARBL4 LTA   R8,$LCDDETL         GET ADDRESS OF 1ST DETAIL LCD        F 067800
         B     *+8                 BYPASS FORWARD CHAINING              F 067900
CLEARBL5 LTA   R8,LCDLCD,CLEARBL6  GET ADDRESS OF NEXT LCD              F 068000
         CBAL  R4,CLEARLCD         CLEAR LCD'S STORE IF NECESSARY       F 068100
         B     CLEARBL5            LOOP BACK FOR NEXT LCD               F 068200
CLEARBL6 EQU   *                   CONTINUE PROCESSING                  F 068300
CLEARBLX NI    $PROCESS,FF-PROCBLAL SET OFF FLAG FOR CLEARING ALL BL'S  F 068400
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         F 068500
         DROP  R8                  DROP LCD ADDRESSABILITY              F 068600
         DROP  R7                  DROP OCB ADDRESSABILITY              F 068700
         EJECT                                                          F 068800
*********************************************************************** F 068900
*        RESET DUPLICATE SUPPRESSION ( CONT'D )                       * F 069000
*********************************************************************** F 069100
         SPACE 1                                                        F 069200
         USING OCBNTRY,R7          ESTABLISH OCB ADDRESSABILITY         F 069300
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 069400
CLEARLCD SUBIN SAVE=R2             ENETR ROUTINE                        F 069500
         NULCB LCD,CLEARLCX        GO TO EXIT IF LCD NULLIFIED          F 069600
         TM    LCDSW,MLCDBL        DOES LCD SPECIFY DUPLICATE SUPPRESSI F 069700
         BZ    CLEARLCX            GO TO EXIT IF NOT                    F 069800
         TM    $PROCESS,PROCBLAL   ARE ALL BL'S TO BE CLEARED ?         F 069900
         BO    *+12                BYPASS OCB TEST IF YES               F 070000
         CLM   R7,7,LCDOCB+1       DOES THE LCD APPLY TO CURRENT OCB    F 070100
         BNE   CLEARLCX            GO TO EXIT IF NOT                    F 070200
         SR    R2,R2               ZEROISE WORK REGISTER                F 070300
         SR    R15,R15             ZEROISE SECOND WORK REGISTER         F 070400
         IC    R15,LCDFLDL         RETRIEVE EXECUTABLE LENGTH OF FIELD  F 070500
         LA    R1,LCDLIT           POINT REG 1 AT START OT OPTIONAL LIT F 070600
         TM    LCDSW,MLCDLIT       DETREMINE IF LITERAL ACTUALLY EXISTS F 070700
         BZ    *+8                 BR IF NO LITERAL                     F 070800
         LA    R1,1(R15,R1)        STEP OVER LITERAL TO STORE           F 070900
         MVI   0(R1),C' '          INSERT BLANK INTO START OF STORE     F 071000
         ICM   R15,1,LCDFLDL       RETRIEVE EXECUTABLE LENGTH OF FIELD  F 071100
         BZ    CLEARLCX            GO TO EXIT IF ONLY 1 BYTE LONG       F 071200
         BCTR  R15,0               DECREMENT FOR PROPAGATION EXECUTE    F 071300
         EX    R15,BLLCDBL         BLANK OUT STORE                      F 071400
CLEARLCX SUBOUT RESTORE=R2         RESTURN TO CALLER                    F 071500
         DROP  R8                  DROP LCD ADDRESSABILITY              F 071600
         DROP  R7                  DROP OCB ADDRESSABILITY              F 071700
         TITLE 'PARROTF - EXECUTABLE INSTRUCTIONS'                      F 071800
*********************************************************************** F 071900
*        EXECUTABLE INSTRUCTIONS                                      * F 072000
*********************************************************************** F 072100
         SPACE 1                                                        F 072200
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         F 072300
BLLCDBL  MVC   1(0,R1),0(R1)       BLANK OUT FIELD STORAGE AREA         F 072400
MVLCDLIT MVC   0(0,R6),LCDLIT      MOVE LITERAL TO OUTPUT BUFFER        F 072500
CLCDFLDS CLC   0(0,R6),0(R1)       TEST IF FIELD SAME AS LAST TIME      F 072600
MVLCDBL  MVC   1(0,R6),0(R6)       PROPAGATE BLANKS THROUGH OUTPUT FIEL F 072700
MVLCDFLD MVC   0(0,R1),0(R6)       PRESERVE FIELD IN LCD                F 072800
MVCCHAR  MVC   0(0,R6),0(R1)       MOVE SOURCE FIELD TO OUTPUT FIELD    F 072900
HEXUNPK  UNPK  $WRKAREA(16),0(0,R1) 'UNPACK' HEX STRING                 F 073000
BITTM    TM    0(R1),0             TEST IF BIT IN SOURCE IS ON          F 073100
PDZAP    ZAP   0(0,R6),$FPDEC      ZAP PACKED DECIMAL VALUE INTO OUTPUT F 073200
PDUNPK   UNPK  0(0,R6),$FPDEC      UNPACK PACKED DECIMAL INTO OUTPUT    F 073300
         DROP  R8                  DROP LCD ADDRESSABILITY              F 073400
DETLZAP  ZAP   $FPDEC,0(0,R6)      ZAP PACKED DECIMAL FLD INTO WORK ARE F 073500
DETLFP   MVC   $FPFP(0),0(R6)      MOVE SOURCE FP NO TO WORK AREA       F 073600
DETLBIN  MVC   0(0,R1),0(R6)       MOVE SOURCE BINARY NO. TO WORK AREA  F 073700
DETLPACK PACK  $FPDEC,0(0,R6)      PACK SOURCE DISPLAY FIELD INTO WORK  F 073800
DETLBCLC CLC   0(0,R6),$SPACES     IS SOURCE FIELD BLANK                F 073900
DETLBMVC MVC   0(0,R6),$ZEROES     ALTER BLANKS TO ZEROES               F 074000
KEYMOVE  MVC   0(0,R2),0(R3)       MOVE NEW KEY TO CURRENT              F 074100
KEYCOMP  CLC   0(0,R3),0(R2)       COMPARF CHARACTER KEYS (NEW:OLD)     F 074200
MVCNAMEN MVC   0(0,R1),0(R6)       MOVE NEW NAME FIELD TO STORE         F 074300
MVCCKEYN MVC   0(0,R1),0(R6)       MOVE NEW (CHAR) KEY TO STORE         F 074400
MVCAST   MVC   6(0,R6),TOTALAST    INSERT ASTERISKS IN BASIC TOTAL LINE F 074500
OLAYCLC  CLC   0(0,R6),=132C' '    IS DESTINATION FIELD BLANK           F 074600
         TITLE 'PARROTF - ERROR MESSAGES'                               F 074700
LINE01   DS    0CL108                                                   F 074800
         DC    C'PRTF-001-W  OUTPUT FIELD '                             F 074900
LINE01L  DC    CL2' '                                                   F 075000
         DC    C' DEFINED IN C/C NO.'                                   F 075100
LINE01C  DC    X'4020202020202120'                                      F 075200
        DC    C' OVERLAYS A PREVIOUS OUTPUT FIELD - PREVIOUS DATA LOST' F 075300
         TITLE 'PARROTF - MISCELLANEOUS CONSTANTS AND FIELDS'           F 075400
FPZERO   DC    D'0E1'              FLOATING POINT ZERO VALUE            F 075500
GR11IND  DS    CL1                 INDICATOR FOR 'GR11' REQUESTS        F 075600
TOTALAST DC    C'********'         ASTERISKS FOR BASIC TOTAL LINE       F 075700
CNTMASK  DC    X'4020202020202120' EDIT MASK FOR RECORD COUNT           F 075800
BLDLABL  DC    CL2' '              WORK AREA FOR CONSTRUCTING LABELS    F 075900
HEXTABLE DC    C'0123456789ABCDEF' HEX STRING CONVERSION TABLE          F 076000
EXASTCNV DC    C' '                CONVERSION AREA FOR LGTH OF ASTERISK F 076100
ASTCNVTB DC    X'040302010000000000' TR TABLE FOR * LENGTH CONVERSION   F 076200
         SPACE 5                                                        F 076300
        SCSEND F                   TERMINATE CSET PARROTF               F 076400
         END                                                            F 076500
