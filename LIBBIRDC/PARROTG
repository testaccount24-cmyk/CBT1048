         TITLE 'PARROTG - DETAIL PROCESSING'                            G 000100
         MACRO                                                          G 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             G 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               G 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         G 000500
               EJECT                                                    G 000600
         ACE   ,                   ARITHMETIC CALCULATION ELEMENT       G 000700
               EJECT                                                    G 000800
         CBPREFIX ,                CONTROL BLOCK PREFIX                 G 000900
               EJECT                                                    G 001000
         CCB   ,                   CENTRAL CONTROL BLOCK                G 001100
               EJECT                                                    G 001200
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          G 001300
               EJECT                                                    G 001400
         EQUATES ,                 GENERATE STANDARD EQUATES            G 001500
               EJECT                                                    G 001600
         FDB   ,                   FIELD DEFINITION BLOCK               G 001700
               EJECT                                                    G 001800
         FSA   ,                   FIELD STORAGE AREA                   G 001900
               EJECT                                                    G 002000
         KBD   ,                   KEY BREAK DESCRIPTOR                 G 002100
               EJECT                                                    G 002200
         LCD   ,                   LINE COMPONENT DESCRIPTOR            G 002300
               EJECT                                                    G 002400
         LIB   ,                   LABEL IDENTIFICATION BLOCK           G 002500
               EJECT                                                    G 002600
         PARROTT DSECT=YES         TRANSLATE TABLES                     G 002700
               EJECT                                                    G 002800
         PCB   ,                   PROCESSING CONTROL BLOCK             G 002900
               EJECT                                                    G 003000
         PTE   ,                   PROCESSING TEST ELEMENT              G 003100
               EJECT                                                    G 003200
         RST   ,                   RECORD SELECTION TEST DEF'N          G 003300
               EJECT                                                    G 003400
         SCE   ,                   SELECTION CRITERION ELEMENT          G 003500
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       G 003600
         MEND                                                           G 003700
         SPACE 4                                                        G 003800
PARROTG  CSECT                                                          G 003900
         $CB   ,                   GENERATE DSECTS AND EQUATES          G 004000
         EJECT                                                          G 004100
     SCSECT G                                                           G 004200
         USING PARROTG,R12         ESTABLISH PARROTG ADDRESSABILITY     G 004300
         USING CCBNTRY,R13         ESTABLISH CCB ADDRESSABILITY         G 004400
         SPACE 1                                                        G 004500
         ENTRY PARENDG             END IF CSECT                         G 004600
         ENTRY PCBPROC             PROCESS CHAIN OF PCB'S OF TYPE 'X'   G 004700
         TITLE 'PARROTG - PROCESS CHAIN OF PCB''S'                      G 004800
*********************************************************************** G 004900
*        PROCESS CHAIN OF PCB'S OF TYPE SPECIFIED IN $PROCTYP         * G 005000
*********************************************************************** G 005100
         SPACE 1                                                        G 005200
*        THERE ARE TWO CHAINS THAT CONTROL THE EXECUTION OF THE PCB'S   G 005300
*         ( 'PCBNPCB' AND 'PCBPCB' ).  PCBNPCB IDENTIFIES THE NEXT PCB  G 005400
*         TO WHICH CONTROL IS TO BE PASSED, AND THIS CHAIN IS FOLLOWED  G 005500
*         IF THE CURRENT PCB HAS BEEN PROCESSED.  PCBPCB IDENTIFIES THE G 005600
*         NEXT PCB IN THE PRIMARY CHAIN, AND THIS CHAIN IS FOLLOWED IF  G 005700
*         THE CURRENT PCB HAS NOT BEEN SELECTED FOR PROCESSING.         G 005800
         SPACE 1                                                        G 005900
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 006000
PCBPROC  SUBIN SAVE=ALL            PRESERVE RETURN ADDRESS              G 006100
         LTA   R8,$PCBPCB,PCBPROCX GET ADDRESS OF 1ST PCB IN CHAIN      G 006200
         B     PCBPROC3            BYPASS FORWARD CHAINING              G 006300
         SPACE 1                                                        G 006400
PCBPROC1 LTA   R8,PCBPCB,PCBPROCX  GET ADDRESS OF NEXT PCB IN CHAIN     G 006500
         B     PCBPROC3            GO DECIDE IF THIS PCB IS REQUIRED    G 006600
         SPACE 1                                                        G 006700
PCBPROC2 LTA   R8,PCBNPCB,PCBPROCX GET ADDRESS OF NEXT REQUIRED PCB     G 006800
         SPACE 1                                                        G 006900
PCBPROC3 CLC   PCBTYPE,$PROCTYP    IS THIS A PCB OF THE REQUIRED TYPE   G 007000
         BNE   PCBPROC1            LOOP BACK FOR NEXT PCB ( PCBPCB )    G 007100
         NULCB PCB,PCBPROC1        GET NEXT PCB IF THIS NULLIFIED       G 007200
         CBAL  R4,PROCPCB          PROCESS SINGLE PCB                   G 007300
         B     PCBPROC2            LOOP BACK FOR NEXT PCB ( PCBNPCB )   G 007400
PCBPROCX SUBOUT RESTORE=ALL        RESTORE AND RETURN TO CALLER         G 007500
         DROP  R8                  DROP PCB ADDRESSABILITY              G 007600
         EJECT                                                          G 007700
*********************************************************************** G 007800
*        PROCESS SINGLE PCB:       MAIN-LINE                          * G 007900
*********************************************************************** G 008000
         SPACE 1                                                        G 008100
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 008200
PROCPCB  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 008300
         LTA   R10,PCBSCE,PROCPCB0 GET ADDRESS OF 1ST SCE IF ANY        G 008400
         CBAL  R4,SCEPROC          EVALUATE SELECTION CRITERIA          G 008500
         BNE   PROCPCBX            EXIT IF CRITERIA NOT SATISFIED       G 008600
PROCPCB0 TM    PCBSW,MPCBTEST      IS THIS A TEST DEFINING PCB          G 008700
         BZ    PROCPCB1            BR IF NOT A TEST                     G 008800
         CBAL  R4,PROCTEST         PROCESS THE TEST                     G 008900
         B     PROCPCBX            GO TO ROUTINE EXIT                   G 009000
         SPACE 1                                                        G 009100
PROCPCB1 TM    PCBSW,MPCBCALC      IS THIS A CALCULATION PCB            G 009200
         BZ    PROCPCB2            BR IF NOT A CALCULATION              G 009300
         CBAL  R4,PROCCALC         PROCESS THE CALCULATION              G 009400
         B     PROCPCBX            GO TO ROUTINE EXIT                   G 009500
         SPACE 1                                                        G 009600
PROCPCB2 TM    PCBSW,MPCBFUNC      IS THIS A SPECIAL FUNCTION PCB       G 009700
         BZ    PROCPCB3            BR IF NOT A SPECIAL FUNCTION         G 009800
         CBAL  R4,PROCFUNC         PROCESS THE SPECIAL FUNCTION         G 009900
         B     PROCPCBX            GO TO ROUTINE EXIT                   G 010000
         SPACE 1                                                        G 010100
PROCPCB3 EQU   *                   ALLOW FOR FUTURE FUNCTIONS           G 010200
PROCPCBX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         G 010300
         DROP  R8                  DROP PCB ADDRESSABILITY              G 010400
         EJECT                                                          G 010500
*********************************************************************** G 010600
*        PROCESS SINGLE PCB:       PROCESS TEST - MAIN-LINE           * G 010700
*********************************************************************** G 010800
         SPACE 1                                                        G 010900
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 011000
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         G 011100
PROCTEST SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 011200
         LTA   R7,PCBPTE           RETRIEVE PTE ADDRESS                 G 011300
         MVC   PCBNPCB,PCBPCB      ASSUME TEST NOT SATISFIED: SET NEXT  G 011400
         CBAL  R4,CONV$K           OBTAIN CURRENT KEY NUMBER IN FP      G 011500
         CBAL  R4,SETOPS           RETRIEVE OPERANDS AND SET IN FP REGS G 011600
         SR    R1,R1               ZEROISE WORK REGISTER                G 011700
         IC    R1,PTECTYPE         RETRIEVE INTERNAL REP'N OF TEST TYPE G 011800
         CDR   FPR0,FPR4           COMPARE - FIELD:COMPARAND            G 011900
         CBAL  R4,COMPARE          DETERMINE WHETHER TEST SATISFIED     G 012000
         BNE   PROCTSTX            EXIT IF TEST NOT SATISFIED           G 012100
         MVC   PCBNPCB,PTEPCB      SET ADDRESS OF PCB TO WHICH TO GO    G 012200
         CBAL  R4,SET$1$2          SET FOR $1/$2 PROCESSING IF NECESSAR G 012300
         CBAL  R4,TESTINCR         INCREMENT APPROPRIATE 'RESULT' COUNT G 012400
PROCTSTX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         G 012500
         DROP  R7                  DROP PTE ADDRESSABILITY              G 012600
         DROP  R8                  DROP PCB ADDRESSABILITY              G 012700
         EJECT                                                          G 012800
*********************************************************************** G 012900
*        PROCESS SINGLE PCB:       CONVERT KEY NUMBER TO FP FORMAT    * G 013000
*********************************************************************** G 013100
         SPACE 1                                                        G 013200
*        SOME TESTS REQUIRE ACCESS TO THE CURRENT KEY NUMBER IN FLOATNG G 013300
*         POINT FORMAT.  TO AVOID THE OVERHEAD OF ACTUALLY CONVERTING   G 013400
*         THE NUMBER, WE MERELY RETRIEVE THE FP EQUIVALENT FROM A TABLE G 013500
         SPACE 1                                                        G 013600
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 013700
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         G 013800
CONV$K   SUBIN ,                   ENTER ROUTINE                        G 013900
         TM    PTESW,MPTE$K1+MPTE$K2 IS THE CURRENT KEY NUMBER REQUIRED G 014000
         BZ    CONV$KX             EXIT IF NOT REQUIRED                 G 014100
         LH    R1,$KEYNO           RETRIEVE CURRENT KEY NUMBER          G 014200
         SLL   R1,3                MULTIPLY BY 8 FOR DOUBLEWORD INDEX   G 014300
         LA    R1,FP$KTABL(R1)     POINT AT APPROPRIATE TABLE ENTRY     G 014400
         MVC   $FPFP,0(R1)         SET FP KEY NUMBER IN WORK AREA       G 014500
CONV$KX SUBOUT ,                   RETURN TO CALLER                     G 014600
         DROP  R7                  DROP ACE ADDRESSABILITY              G 014700
         DROP  R8                  DROP PCB ADDRESSABILITY              G 014800
         EJECT                                                          G 014900
*********************************************************************** G 015000
*        PROCESS SINGLE PCB:       RETRIEVE OPERANDS FOR TEST         * G 015100
*********************************************************************** G 015200
         SPACE 1                                                        G 015300
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 015400
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         G 015500
         USING FSANTRY,R14         ESTABLISH FSA ADDRESSABILITY         G 015600
         USING LIBNTRY,R15         ESTABLISH LIB ADDRESSABILITY         G 015700
         USING ACENTRY,R1          ESTABLISH ACE ADDRESABILITY          G 015800
SETOPS   SUBIN ,                   ENTER ROUTINE                        G 015900
         LH    R2,$KEYNO           RETRIEVE CURRENT KEY NUMBER          G 016000
         SLL   R2,3                MULTIPLY BY 8 FOR DOUBLEWORD INDEX   G 016100
         MVC   $FPVAL1,$FPFP       ASSUME 1ST OPERAND IS $K (KEY NO)    G 016200
         TM    PTESW,MPTE$K1       IS THE 1ST OPERAND $K                G 016300
         BO    SETOPS2             BR IF YES                            G 016400
         TM    PTESW,MPTE$L1       IS THE 1ST OPERAND A $L LITERAL      G 016500
         BZ    SETOPS1             BR IF NOT A LITERAL                  G 016600
         L     R1,PTE$LACE         GET ADDRESS OF ACE CONTAINING LITERA G 016700
         MVC   $FPVAL1,ACELIT      MOVE FP LITERAL VALUE TO WORK FIELD  G 016800
         B     SETOPS2             GO PROCESS SECOND OPERAND            G 016900
SETOPS1  L     R15,PTELIBT         RETRIEVE ADDRESS OF LIB OF 1ST OPERA G 017000
         L     R14,LIBFSA          GET ADDRESS OF APPROPRIATE FSA       G 017100
         LA    R1,FSAVALUR         POINT AT DETAIL VALUE ACCUMULATOR    G 017200
         TM    $PROCESS,PROCDETL   ARE WE AT THE DETAIL LEVEL           G 017300
         BO    JEAFIX20            BR IF DETAIL LEVEL                   G 017400
         TM    LIBTYPE,LIBTSCAL    IS THIS A SCALAR FIELD ?               017500
         BO    JEAFIX20            BR IF YES.                             017600
         LA    R1,FSAVALUT(R2)     POINT AT APPROPRIATE TOTAL ACCUM     G 017700
JEAFIX20 EQU   *                                                          017800
         MVC   $FPVAL1,0(R1)       MOVE ACCUMULATOR VALUE TO FP W/A     G 017900
SETOPS2  MVC   $FPVAL2,$FPFP       ASSUME 2ND OPERAND IS $K             G 018000
         TM    PTESW,MPTE$K2       IS THE 2ND OPERAND $K                G 018100
         BO    SETOPS3             BR IF YES                            G 018200
         TM    PTESW,MPTE$L2       IS SECOND OPERAND A $L LITERAL       G 018300
         BZ    SETOPS4             BR IF NOT A LITERAL                  G 018400
         L     R1,PTE$LACE         GET ADDRESS OF ACE CONTAINING LITERA G 018500
         MVC   $FPVAL2,ACELIT      SET FP LITERAL IN WORK FIELD         G 018600
         B     SETOPS3             GO SET VALUES IN FP REGISTERS        G 018700
SETOPS4  L     R15,PTELIBC         GET ADDRESS OF OPERAND'S LIB         G 018800
         L     R14,LIBFSA          GET ADDRESS OF ASSOCIATED FSA        G 018900
         LA    R1,FSAVALUR         POINT AT DETAIL LEVEL VALUE          G 019000
         TM    $PROCESS,PROCDETL   ARE WE AT DETAIL TIME                G 019100
         BO    JEAFIX21            BR IF DETAIL LEVEL                   G 019200
         TM    LIBTYPE,LIBTSCAL    IS THIS A SCALAR FIELD                 019300
         BO    JEAFIX21            BR IF YES.                             019400
         LA    R1,FSAVALUT(R2)     POINT AT APPROPRIATE KEY LEVEL ACCUM G 019500
JEAFIX21 EQU   *                                                          019600
         MVC   $FPVAL2,0(R1)       MOVE OPERAND VALUE TO FP WORK AREA   G 019700
SETOPS3  LD    FPR0,$FPVAL1        SET OPERAND 1 IN FP REGISTER         G 019800
         LD    FPR4,$FPVAL2        SET OPERAND 2 IN FP REGISTER         G 019900
        SUBOUT ,                   RETURN TO CALLER                     G 020000
         DROP  R1                  DROP ACE ADDRESSABILITY              G 020100
         DROP  R15                 DROP LIB ADDRESSABILITY              G 020200
         DROP  R14                 DROP FSA ADDRESSABILITY              G 020300
         DROP  R7                  DROP ACE ADDRESSABILITY              G 020400
         DROP  R8                  DROP PCB ADDRESSABILITY              G 020500
         EJECT                                                          G 020600
*********************************************************************** G 020700
*        PROCESS SINGLE PCB:       SET $1/$2 PROCESSING AS REQUIRED   * G 020800
*********************************************************************** G 020900
         SPACE 1                                                        G 021000
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         G 021100
         USING PTENTRY,R7          ESTABLISH PTE ADDRESSABILITY         G 021200
SET$1$2  SUBIN ,                   ENTER ROUTINE                        G 021300
         TM    PTESW,MPTE$1+MPTE$2 IS $1 / $2 PROCESSING REQUIRED       G 021400
         BZ    SET$X               EXIT IF NOT REQUIRED                 G 021500
         TM    $PROCESS,PROCDETL   ARE WE AT THE DETAIL LEVEL           G 021600
         BZ    SET$KBD             BR IF NOT AT THE DETAIL LEVEL        G 021700
         TM    PTESW,MPTE$1        IS $1 PROCESSING REQUIRED            G 021800
         BZ    *+8                 BR IF NOT                            G 021900
         OI    $DETLSW,MDET$1      FLAG FOR $1 PROCESSING               G 022000
         TM    PTESW,MPTE$2        IS $2 PROCESSING REQUIRED            G 022100
         BZ    *+8                 BR IF NOT                            G 022200
         OI    $DETLSW,MDET$2      SET FLAG FOR $2 PROCESSING           G 022300
         B     SET$X               GO TO ROUTINE EXIT                   G 022400
SET$KBD  LTA   R15,$PTRKBD,SET$X   RETRIVEE ADDRESS OF CURRENT KBD      G 022500
         TM    PTESW,MPTE$1        IS $1 PROCESSING REQUIRED            G 022600
         BZ    *+8                 BR IF NOT                            G 022700
         OI    KBDPSW,MKBD$1       SET FLAG FOR $1 PROCESSING           G 022800
         TM    PTESW,MPTE$2        IS $2 PROCESSING REQUIRED            G 022900
         BZ    *+8                 BR IF NOT                            G 023000
         OI    KBDPSW,MKBD$2       SET FLAG FOR $2 PROCESSING           G 023100
SET$X   SUBOUT ,                   RETURN TO CALLER                     G 023200
         DROP  R7                  DROP ACE ADDRESSABILITY              G 023300
         DROP  R15                 DROP KBD ADDRESSABILITY              G 023400
         EJECT                                                          G 023500
*********************************************************************** G 023600
*        INCREMENT APPROPRIATE TEST 'RESULT' COUNTER                  * G 023700
*********************************************************************** G 023800
         SPACE 1                                                        G 023900
*        THE 'LABEL' FIELD OF A GR07 TEST DEFINES AN ACCUMULATOR THAT   G 024000
*         IS IN EFFECT AN EVENT COUNTER, IN THAT IN CONTAINS THE COUNT  G 024100
*         OF THE NUMBER OF TIMES THE TEST HAS BEEN SATISFIED.           G 024200
         SPACE 1                                                        G 024300
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 024400
         USING LIBNTRY,R7          ESTABLISH LIB ADDRESSABILITY         G 024500
         USING FSANTRY,R15         ESTABLISH FSA ADDRESSABILITY         G 024600
TESTINCR SUBIN ,                   ENETR ROUTINE                        G 024700
         LTA   R7,PCBLIB           GET ADDRESS OF 'RESULT' LIB          G 024800
         LTA   R15,LIBFSA          GET ADDRESS OF ASSOCIATED FSA        G 024900
         LA    R1,FSAVALUR         POINT AT DETAIL LEVEL ACCUMULATOR    G 025000
         TM    $PROCESS,PROCDETL   ARE WE AT THE DTEAIL LEVEL           G 025100
         BO    TESTINC1            BR IF DETAIL TIME                    G 025200
         LH    R1,$KEYNO           RETRIEVE CURRENT KEY NUMBER          G 025300
         SLL   R1,3                MULTIPLY BY 8 FOR DOUBLEWORD INDEX   G 025400
         LA    R1,FSAVALUT(R1)     POINT AT APPROPRIATE TOTAL ACCUMULAT G 025500
TESTINC1 MVC   $FPVAL1,0(R1)       MOVE ACCUM VALUE TO  FP WORK AREA    G 025600
         LD    FPR0,$FPVAL1        SET ACCUM VALUE IN FP REGISTER       G 025700
         AD    FPR0,FPONE          INCREMENT COUNTER VALUE              G 025800
         STD   FPR0,$FPVAL1        SET UPDATES COUNTER IN FP WORK AREA  G 025900
         MVC   0(8,R1),$FPVAL1     RESTORE UPDATES COUNTER TO ACCUMULAT G 026000
        SUBOUT ,                   RETURN TO CALLER                     G 026100
         DROP  R15                 DROP FSA ADDRESSABILITY              G 026200
         DROP  R7                  DROP LIB ADDRESSABILITY              G 026300
         DROP  R8                  DROP PCB ADDRESSABILITY              G 026400
         EJECT                                                          G 026500
*********************************************************************** G 026600
*        PROCESS SINGLE PCB:       PROCESS CALCULATION - MAIL-LINE    * G 026700
*********************************************************************** G 026800
         SPACE 1                                                        G 026900
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 027000
         USING ACENTRY,R7          ESTABLISH ACE ADDRESSABILITY         G 027100
PROCCALC SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 027200
         SDR   FPR0,FPR0           ZEROISE RESULT / WORK REGISTER       G 027300
         LTA   R7,PCBACE,PROCALCX  GET ADDRESS OF 1ST ACE IN CHAIN      G 027400
         B     *+8                 BYPASS FORWARD CHAINING              G 027500
PROCALC1 LTA   R7,ACEACE,PROCALC2  GET ADDRESS OF NEXT ACE              G 027600
         NULCB ACE,PROCALC1        GET NEXT ACE IF THIS NULLIFIED       G 027700
         CBAL  R4,GETOPRND         LOCATE THE OPERAND VALUE             G 027800
         CBAL  R4,DOOPCODE         PERFORM THE MATHEMATICAL OPERATION   G 027900
         B     PROCALC1            LOOP BACK FOR NEXT ACE               G 028000
PROCALC2 CBAL  R4,SETANSWR         PRESERVE THE RESULT OF THE CALCULAT' G 028100
PROCALCX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         G 028200
         DROP  R7                  DROP ACE ADDRESSABILITY              G 028300
         DROP  R8                  DROP PCB ADDRESSABILITY              G 028400
         EJECT                                                          G 028500
*********************************************************************** G 028600
*        PROCESS SINGLE PCB:       LOCATE THE OPERAND VALUE           * G 028700
*********************************************************************** G 028800
         SPACE 1                                                        G 028900
*        THIS ROUTINE LOCATES THE REQUIRED OPERAND VALUE ( BE IT A      G 029000
*         LITERAL, A SCALAR, A DETAIL VALUE OR AN KEY LEVEL ACCUM ),    G 029100
*         AND SETS IT IN THE WORK AREA '$FPFP'.                         G 029200
         SPACE 1                                                        G 029300
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 029400
         USING ACENTRY,R7          ESTABLISH ACE ADDRESSABILITY         G 029500
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         G 029600
         USING FSANTRY,R15         ESTABLISH FSA ADDRESSABILITY         G 029700
GETOPRND SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 029800
         MVC   $FPFP,FPZERO        PLAY SAFE AND ZEROISE WORK FIELD     G 029900
         TM    ACESW,MACELIT       IS THIS A LITERAL ACE                G 030000
         BZ    GETOPR1             BR IF NOT A LITERAL                  G 030100
         MVC   $FPFP,ACELIT        MOVE LITERAL TO FP WORK FIELD        G 030200
         B     GETOPRN             GO TEST IF -VE VALUE REQUIRED        G 030300
GETOPR1  LTA   R6,ACELIB,GETOPRN   GET ADDRESS OF ASSOCIATED LIB        G 030400
         LTA   R15,LIBFSA,GETOPRN  GET THE ADDRESS OF THE FSA           G 030500
         LA    R1,FSAVALUR         POINT R1 AT THE DETAIL/SCALAR ACCUM  G 030600
         TM    $PROCESS,PROCDETL   ARE WE DOING DETAIL LEVEL PROCESSING G 030700
         BO    GETOPR2             BR IF YES TO MOVE ACCUM TO W/A       G 030800
         TM    LIBTYPE,LIBTSCAL    IS THIS A SCALAR LIB                 G 030900
         BO    GETOPR2             BR IF YES TO MOVE ACCUM TO WORK AREA G 031000
         LA    R1,FSAVALUT         POINT AT TOTAL FILE ACCUM (KEY 0)    G 031100
         LH    R2,$KEYNO           RETRIEVE NO. OF KEY BEING PROCESSED  G 031200
         SLL   R2,3                MULTIPLY BY 8 FOR DOUBLEWORD INDEX   G 031300
         AR    R1,R2               POINT AT APPROPRAITE ACCUMULATOR     G 031400
GETOPR2  MVC   $FPFP,0(R1)         MOVE ACCUMULATOR TO WORK AREA        G 031500
GETOPRN  TM    ACESW,MACENEG       DID OPERAND HAVE A -VE PREFIX        G 031600
         BZ    *+8                 BR IF NO NEGATIVE PREFIX             G 031700
         XI    $FPFP,X'80'         REVERSE THE SIGN OF THE FP NUMBER    G 031800
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         G 031900
         DROP  R15                 DROP FSA ADDRESSABILITY              G 032000
         DROP  R6                  DROP LIB ADDRESSABILITY              G 032100
         DROP  R7                  DROP ACE ADDRESSABILITY              G 032200
         DROP  R8                  DROP PCB ADDRESSABILITY              G 032300
         EJECT                                                          G 032400
*********************************************************************** G 032500
*        PROCESS SINGLE PCB:       PERFORM MATHEMATICAL OPERATION     * G 032600
*********************************************************************** G 032700
         SPACE 1                                                        G 032800
*        THIS ROUTINE PERFORMS THE ELEMENT OF THE CALCULATION DEFINED   G 032900
*         IN THE CURRENT ACE.  UPON ENTRY :-                            G 033000
*         FPR0  - RUNNING TOTAL FOR THE CALCULATION                     G 033100
*         $FPFP - CURRENT OPERAND'S VALUE                               G 033200
         SPACE 1                                                        G 033300
*        UPON EXIT :-                                                   G 033400
*         FPR0  - UPDATED TOTAL                                         G 033500
         SPACE 1                                                        G 033600
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 033700
         USING ACENTRY,R7          ESTABLISH ACE ADDRESSABILITY         G 033800
DOOPCODE SUBIN ,                   ENTER ROUTINE                        G 033900
         SR    R1,R1               ZEROISE WORK REGISTER                G 034000
         IC    R1,ACEOPCD          RETRIEVE INTERNAL REP'N OF OPERATOR  G 034100
         SLL   R1,2                MULTIPLY BY 4 FOR INDEXED BRANCH     G 034200
         B     *(R1)               GO TO APPROPRIATE BRANCH             G 034300
         B     DOADD               PERFORM                            A G 034400
         B     DOSUB               PERFROM SUBTRACTION                  G 034500
         B     DOMULT              PERFORM MULTIPLICATION               G 034600
         B     DODIV               PERFORM DIVISION                     G 034700
         SPACE 1                                                        G 034800
DOADD    AD    FPR0,$FPFP          ADD OPERAND TO RUNNING TOTAL         G 034900
         B     DOOPCDEX            GO TO ROUTINE EXIT                   G 035000
         SPACE 1                                                        G 035100
DOSUB    SD    FPR0,$FPFP          SUBTRACT OPERAND FROM RUNNING TOTAL  G 035200
         B     DOOPCDEX            GO TO ROUTINE EXIT                   G 035300
         SPACE 1                                                        G 035400
DOMULT   MXD   FPR0,$FPFP          MULTIPLY TOTAL BY OPERAND            G 035500
         LRDR  FPR0,FPR0           CONVERT ANSWER TO LONG FORMAT        G 035600
         B     DOOPCDEX            GO TO ROUTINE EXIT                   G 035700
         SPACE 1                                                        G 035800
DODIV    LD    FPR4,$FPFP          LOAD OPERAND INTO FP REGISTER        G 035900
         CD    FPR4,FPZERO         IS THE DIVISOR ZERO                  G 036000
         BE    DODIV0              BR IF DIVISION BY ZERO               G 036100
         DDR   FPR0,FPR4           DIVIDE RUNNING TOTAL BY DIVISOR      G 036200
         B     DOOPCDEX            GO TO ROUTINE EXIT                   G 036300
DODIV0   LDR   FPR0,FPR4           FORCE RESULT ARBITRARILY TO ZERO     G 036400
         AP    $CNT0DIV,$ONE       INCREMENT COUNT OF ZERO DIVIDES      G 036500
         OI    SWERROR,MERR0DIV    FLAG ATTEMPT TO DIVIDE BY ZERO       G 036600
         SPACE 1                                                        G 036700
DOOPCDEX SUBOUT ,                  RETURN TO CALLER                     G 036800
         DROP  R7                  DROP ACE ADDRESSABILITY              G 036900
         DROP  R8                  DROP PCB ADDRESSABILITY              G 037000
         EJECT                                                          G 037100
*********************************************************************** G 037200
*        PROCESS SINGLE PCB:       PRESERVE RESULT IN DESTINATION     * G 037300
*********************************************************************** G 037400
         SPACE 1                                                        G 037500
*        THIS ROUTINE PRESERVES THE RESULT OF THE CALCULATION IN THE    G 037600
*         APPROPRIATE DESTINATION ACCUMULATOR.  UPON ENTRY, FPR0        G 037700
*         CONTAINS THE RESULT.                                          G 037800
         SPACE 1                                                        G 037900
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 038000
         USING ACENTRY,R7          ESTABLISH ACE ADDRESSABILITY         G 038100
         USING LIBNTRY,R6          ESTABLISH LIB ADDRESSABILITY         G 038200
         USING FSANTRY,R15         ESTABLISH FSA ADDRESSABILITY         G 038300
SETANSWR SUBIN ,                   ENTER ROUTINE                        G 038400
         STD   FPR0,$FPFP          SET RESULT OF CALCULATION IN W/A     G 038500
         LTA   R6,PCBLIB           GET ADDRESS OF RESULT FLD'S LIB      G 038600
         LTA   R15,LIBFSA          GET ADDRESS OF RESULT FLD'S FSA      G 038700
         LA    R1,FSAVALUR         POINT R1 AT DETAIL/SCALAR ACCUM'R    G 038800
         TM    $PROCESS,PROCDETL   ARE WE DOING DETAIL TIME PROCESSING  G 038900
         BO    SETANS1             GO PRESERVE RESULT IF YES            G 039000
         TM    LIBTYPE,LIBTSCAL    IS THE RESULT FIELD A SCALAR         G 039100
         BO    SETANS1             GO PRESERVE RESULT IF YES            G 039200
         LA    R1,FSAVALUT         POINT AT FILE TOTAL (KEY 0) ACCUM'R  G 039300
         LH    R2,$KEYNO           RETRIEVE CURRENT KAY NUMBER          G 039400
         SLL   R2,3                MULTIPLY BY 8 FOR DOUBLEWORD INDEX   G 039500
         AR    R1,R2               POINT R1 AT APPROPRAITE ACCUMULATOR  G 039600
SETANS1  MVC   0(8,R1),$FPFP       MOVE ANSWER TO RESULT FIELD ACCUM'R  G 039700
        SUBOUT ,                   RETURN TO CALLER                     G 039800
         DROP  R15                 DROP FSA ADDRESSABILITY              G 039900
         DROP  R6                  DROP LIB ADDRESSABILITY              G 040000
         DROP  R7                  DROP ACE ADDRESSABILITY              G 040100
         DROP  R8                  DROP PCB ADDRESSABILITY              G 040200
         EJECT                                                          G 040300
*********************************************************************** G 040400
*        PROCESS SINGLE PCB:       PROCESS FUNCTION - MAIN-LINE       * G 040500
*********************************************************************** G 040600
         SPACE 1                                                        G 040700
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 040800
PROCFUNC SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 040900
         L     R7,PCBCB            GET ADDRESS OF ASSOC C/B ( IF ANY )  G 041000
         SR    R1,R1               ZEROISE WORK REGISTER                G 041100
         IC    R1,PCBFUNC          RETRIEVE INTERNAL OP CODE            G 041200
         SLL   R1,2                MULTIPLY BY 4 FOR USE AS INDEX       G 041300
         CBAL  R4,PROCSEL          SELECT AND PERFORM REQUIRED FUNCTION G 041400
         SPACE 1                                                        G 041500
*        UPON RETURN FROM THE PROCESSING ROUTINE, COND CODE IS SET THUS G 041600
*         BL  - SPECIAL CASE SATISFIED                                  G 041700
*         BNH - TEST SATISFIED                                          G 041800
*         BE  - GENERAL CASE SATISFIED                                  G 041900
*         BH  - TEST NOT SATISFIED                                      G 042000
         SPACE 1                                                        G 042100
         BNH   PROCFUNX            EXIT IF NO ERROR CONDITION RETURNED  G 042200
         TM    PCBSW,MPCBIND       TEST IF INDICATOR SUPPLIED           G 042300
         BZ    PROCFUNY            BR IF NO IND TO RESET COND CODE      G 042400
         LA    R1,$INDS            POINT REG 1 AT INDICATOR BANK        G 042500
         AH    R1,PCBINDD          ADD DISPLACEMENT TO REQUIRED BYTE    G 042600
         IC    R15,PCBINDM         SET BIT MASK IN WORK REG             G 042700
         EX    R15,SETONIND        SET ON SPECIFIED INDICATOR           G 042800
PROCFUNY CLI   *,Y                 RESET COND CODE TO SHOW ERROR        G 042900
PROCFUNX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         G 043000
         DROP  R8                  DROP PCB ADDRESSABILITY              G 043100
         EJECT                                                          G 043200
*********************************************************************** G 043300
*        SELECT AND PERFORM REQUIRED SPECIAL FUNCTION ROUTINE         * G 043400
*********************************************************************** G 043500
         SPACE 1                                                        G 043600
*        THIS ROUTINE IS THE DRIVER THAT SELECTS AND PERFORMS THE       G 043700
*         DESIRED PROCESSING ROUTINE VIA AN INDEXED BRANCH.  NOTE THAT  G 043800
*         R4 IS NOT MODIFIED BY THIS ROUTINE, AND THUS CONTROL RETURNS  G 043900
*         FROM THE SPECIAL PROCESSING ROUTINE DIRECTLY TO THE POINT AT  G 044000
*         WHICH THIS DRIVER WAS INVOKED.                                G 044100
         SPACE 1                                                        G 044200
PROCSEL  SUBIN ,                   ENTER DRIVER ROUTINE                 G 044300
         B     *(R1)               BRANCH TO APPROPRIATE BRANCH         G 044400
         SPACE 1                                                        G 044500
         B     FUNC$1           $1 - ACCUMULATE, NO PRINT               G 044600
         B     FUNC$2           $2 - NO ACCUMULATE, NO PRINT            G 044700
         B     FUNCAB           AB - ABEND WITH USER CODE 60            G 044800
         B     UNSUPPOP         C3 - MOVE FIELDS                        G 044900
         B     UNSUPPOP         DW - DOWHILE                            G 045000
         B     UNSUPPOP         D8 - DATE CONVERSION                    G 045100
         B     UNSUPPOP         E2 - PROPAGATE LITERAL                  G 045200
         B     UNSUPPOP         E3 - MOVE LITERAL                       G 045300
         B     UNSUPPOP         I  - ISAM LOOKUP                        G 045400
         B     UNSUPPOP         L7 - LEFT-JUSTIFY                       G 045500
         B     UNSUPPOP         L8 - RIGHT-JUSTIFY                      G 045600
         B     UNSUPPOP         L9 - CURRENCY CONVERSION                G 045700
         B     FUNCOF           OF - SET INDICATOR OFF                  G 045800
         B     FUNCON           ON - SET INDICATOR ON                   G 045900
         B     UNSUPPOP         R5 - INVOKE USER SUB-MODULE             G 046000
         B     UNSUPPOP         S  - SUB-ROUITNE                        G 046100
         SPACE 1                                                        G 046200
        SUBOUT ,                   RESTORE AND RETURN TO CALLER         G 046300
         TITLE 'PARROTG - SPECIAL PROCESSING ROUTINES'                  G 046400
*********************************************************************** G 046500
*        $1 - SET FLAG TO ACCUMULATE, BUT NOT PRINT                   * G 046600
*********************************************************************** G 046700
         SPACE 1                                                        G 046800
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         G 046900
FUNC$1   SUBIN ,                   ENTER ROUTINE                        G 047000
         TM    $PROCESS,PROCDETL   ARE WE AT THE DETAIL LEVEL           G 047100
         BZ    FUNC$1L1            BR IF NOT AT DETAIL LEVEL            G 047200
         OI    $DETLSW,MDET$1      FLAG FOR $1 PROCESING                G 047300
         B     FUNC$1LX            GO TO EXIT                           G 047400
FUNC$1L1 LTA   R15,$PTRKBD,FUNC$1LX GET ADDRESS OF CURRENT KBD          G 047500
         OI    KBDPSW,MKBD$1       SET FLAG FOR $1 PROCESSING           G 047600
FUNC$1LX CLI   *,X                 SET COND CODE SHOWING NO ERROR       G 047700
        SUBOUT ,                   RETURN TO CALLER                     G 047800
         DROP  R15                 DROP KBD ADDRESSABILITY              G 047900
         SPACE 5                                                        G 048000
*********************************************************************** G 048100
*        $2 - SET FLAG TO NEITHER ACCUMULATE NOR PRINT                * G 048200
*********************************************************************** G 048300
         SPACE 1                                                        G 048400
         USING KBDNTRY,R15         ESTABLISH KBD ADDRESSABILITY         G 048500
FUNC$2   SUBIN ,                   ENTER ROUTINE                        G 048600
         TM    $PROCESS,PROCDETL   ARE WE AT DETAIL TIME                G 048700
         BZ    FUNC$2L1            BR IF NOT DETAIL TIME                G 048800
         OI    $DETLSW,MDET$2      SET FLAG FOR $2 PROCESSING           G 048900
         B     FUNC$2LX            GO TO EXIT                           G 049000
FUNC$2L1 LTA   R15,$PTRKBD,FUNC$2LX GET ADDRESS OF CURRENT KBD          G 049100
         OI    KBDSW,MKBD$2        SET FLAG FOR $2 PROCESSING           G 049200
FUNC$2LX CLI   *,X                 SET COND CODE TO SHOW NO ERROR       G 049300
        SUBOUT ,                   RETURN TO CALLER                     G 049400
         DROP  R15                 DROP KBD ADDRESSABILITY              G 049500
         EJECT                                                          G 049600
*********************************************************************** G 049700
*        DUMMY ROUTINE TO HANDLE UNSUPPORTED FUNCTIONS                * G 049800
*********************************************************************** G 049900
         SPACE 1                                                        G 050000
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 050100
UNSUPPOP SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 050200
         L     R5,SYSPRINT+IOPSRECA RETRIEVE SYSPRINT BUFFER ADDRESS    G 050300
         CCNO  LINE01,LABEL=PCBOPCD,NULLCB=YES TELL OF UNSUPPORTED OPCD G 050400
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         G 050500
         SPACE 5                                                        G 050600
*********************************************************************** G 050700
*        AB - ABNORMALLY TERMINATE WITH A USER 60 ABEND CODE          * G 050800
*********************************************************************** G 050900
         SPACE 1                                                        G 051000
FUNCAB   SUBIN ,                   ENETR ROUTINE                        G 051100
         ABEND 60                  FALL OVER                            G 051200
        SUBOUT ,                   RETURN TO CALLER                     G 051300
         EJECT                                                          G 051400
*********************************************************************** G 051500
*        ON - SET INDICATOR ON                                        * G 051600
*********************************************************************** G 051700
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 051800
FUNCON   SUBIN ,                   ENTER ROUTINE                        G 051900
         LA    R1,$INDS            POINT REG 1 AT INDICATOR BANK        G 052000
         AH    R1,PCBINDD          POINT AT APPROPRIATE BYTE IN BANK    G 052100
         IC    R15,PCBINDM         SET BIT MASK IN WORK REG             G 052200
         EX    R15,SETONIND        SET ON SPECIFIED INIDCATOR           G 052300
         CLI   *,X                 SET COND CODE TO SHOW NO ERROR       G 052400
        SUBOUT ,                   RETURN TO CALLER                     G 052500
         DROP  R8                  DROP PCB ADDRESSABILITY              G 052600
         SPACE 5                                                        G 052700
*********************************************************************** G 052800
*        OF - SET INDICATOR OFF                                       * G 052900
*********************************************************************** G 053000
         SPACE 1                                                        G 053100
         USING PCBNTRY,R8          ESTABLISH PCB ADDRESSABILITY         G 053200
FUNCOF   SUBIN ,                   ENTER ROUITNE                        G 053300
         LA    R1,$INDS            POINT REG1 AT INDICATOR BANK         G 053400
         AH    R1,PCBINDD          POINT AT APPROPRIATE BYTE IN BANK    G 053500
         IC    R15,PCBINDM         RETRIEVE BIT MASK                    G 053600
         MVI   $WRKAREA,0          SET W/A TO X'00'                     G 053700
         EX    R15,INVERT          INVERT BIT MASK                      G 053800
         IC    R15,$WRKAREA        RETRIEVE INVERTED BIT MASK           G 053900
         EX    R15,SETOFIND        SET OFF APPROPRIATE INDICATOR        G 054000
         CLI   *,X                 SET COND CODE TO SHOW NO ERROR       G 054100
        SUBOUT ,                   RETURN TO CALLER                     G 054200
         DROP  R8                  DROP PCB ADDRESSABILITY              G 054300
         TITLE 'PARROTG - EXECUTABLE INSTRUCTIONS'                      G 054400
*********************************************************************** G 054500
*        EXECUTABLE INSTRUCTIONS                                      * G 054600
*********************************************************************** G 054700
         SPACE 1                                                        G 054800
         USING LCDNTRY,R8          ESTABLISH LCD ADDRESSABILITY         G 054900
HEXUNPK  UNPK  $WRKAREA(16),0(0,R1) 'UNPACK' HEX STRING                 G 055000
BITTM    TM    0(R1),0             TEST IF BIT IN SOURCE IS ON          G 055100
PDZAP    ZAP   0(0,R6),$FPDEC      ZAP PACKED DECIMAL VALUE INTO OUTPUT G 055200
PDUNPK   UNPK  0(0,R6),$FPDEC      UNPACK PACKED DECIMAL INTO OUTPUT    G 055300
         DROP  R8                  DROP LCD ADDRESSABILITY              G 055400
DETLZAP  ZAP   $FPDEC,0(0,R6)      ZAP PACKED DECIMAL FLD INTO WORK ARE G 055500
DETLFP   MVC   $FPFP(0),0(R6)      MOVE SOURCE FP NO TO WORK AREA       G 055600
DETLBIN  MVC   0(0,R1),0(R6)       MOVE SOURCE BINARY NO. TO WORK AREA  G 055700
DETLPACK PACK  $FPDEC,0(0,R6)      PACK SOURCE DISPLAY FIELD INTO WORK  G 055800
DETLBCLC CLC   0(0,R6),$SPACES     IS SOURCE FIELD BLANK                G 055900
DETLBMVC MVC   0(0,R6),$ZEROES     ALTER BLANKS TO ZEROES               G 056000
KEYMOVE  MVC   0(0,R2),0(R3)       MOVE NEW KEY TO CURRENT              G 056100
KEYCOMP  CLC   0(0,R3),0(R2)       COMPARG CHARACTER KEYS (NEW:OLD)     G 056200
MVCNAMEN MVC   0(0,R1),0(R6)       MOVE NEW NAME FIELD TO STORE         G 056300
MVCCKEYN MVC   0(0,R1),0(R6)       MOVE NEW (CHAR) KEY TO STORE         G 056400
SETONIND OI    0(R1),0             SET ON APPROPRIATE INDICATOR         G 056500
SETOFIND NI    0(R1),0             SET OFF APPROPRIATE INDICATOR        G 056600
INVERT   XI    $WRKAREA,0          INVERT BIT MASK                      G 056700
         TITLE 'PARROTG - TABLE OF FLOATING POINT KEY NUMBERS'          G 056800
*        TEST-TYPE PCB'S MAY REQUIRE ACCESS TO THE CURRENT KEY NUMBER   G 056900
*         IN FLOATING POINT FORMAT.  SINCE THE KEY NUMBER, BY DEFINIT'N G 057000
*         MUST BE IN THE RANGE 0 - 9, IT IS FAR FASTER TO INDEX INTO    G 057100
*         A TABLE OF FLOATING POINT NUMBERS THAN TO GO GALLOPING OFF    G 057200
*         TO THE FLOATING POINT CONVERSION ROUTINE.                     G 057300
         SPACE 1                                                        G 057400
FP$KTABL DS    0D                  ENSURE ALIGNMENT                     G 057500
         DC    D'0E0'              KEY LEVEL 0                          G 057600
         DC    D'1E0'              KEY LEVEL 1                          G 057700
         DC    D'2E0'              KEY LEVEL 2                          G 057800
         DC    D'3E0'              KEY LEVEL 3                          G 057900
         DC    D'4E0'              KEY LEVEL 4                          G 058000
         DC    D'5E0'              KEY LEVEL 5                          G 058100
         DC    D'6E0'              KEY LEVEL 6                          G 058200
         DC    D'7E0'              KEY LEVEL 7                          G 058300
         DC    D'8E0'              KEY LEVEL 8                          G 058400
         DC    D'9E0'              KEY LEVEL 9                          G 058500
         TITLE 'PARROTG - ERROR MESSAGES'                               G 058600
LINE01   DS    0CL85                                                    G 058700
         DC    C'PRTG-001-E  CONTROL CARD NO.'                          G 058800
LINE01C  DC    X'4020202020202120'                                      G 058900
         DC    C' SPECIFIES OPERATION CODE '                            G 059000
LINE01L  DC    C'  '                                                    G 059100
         DC    C' WHICH IS UNSUPPORTED'                                 G 059200
         TITLE 'PARROTG - MISCELLANEOUS CONSTANTS AND FIELDS'           G 059300
FPZERO   DC    D'0E1'              FLOATING POINT ZERO VALUE            G 059400
FPONE    DC    D'1E0'              FLOATING POINT VALUE OF 1            G 059500
GR11IND  DS    CL1                 INDICATOR FOR 'GR11' REQUESTS        G 059600
HEXTABLE DC    C'0123456789ABCDEF' HEX STRING CONVERSION TABLE          G 059700
         SPACE 5                                                        G 059800
        SCSEND G                   TERMINATE CSET PARROTG               G 059900
         END                                                            G 060000
