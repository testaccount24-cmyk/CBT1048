         TITLE 'PARROTS - STAE ERROR ANALYSIS'                          S 000100
         MACRO                                                          S 000200
         $CB   &PRINT=OFF          MACRO TO GENERATE DSECTS             S 000300
         PUSH  PRINT               PRESERVE PRINT OPTIONS               S 000400
         PRINT &PRINT              SET PRINT OPTIONS FOR DSECTS         S 000500
               EJECT                                                    S 000600
         CBPREFIX ,                CONTROL BLOCK PREFIX                 S 000700
               EJECT                                                    S 000800
         CCB   ,                   CENTRAL CONTROL BLOCK                S 000900
               EJECT                                                    S 001000
         CSECTID ,                 CSECT IDENTIFICATION PREFIX          S 001100
               EJECT                                                    S 001200
         EQUATES ,                 GENERATE STANDARD EQUATES            S 001300
               EJECT                                                    S 001400
         SPD   ,                   STORAGE POOL DEFINITION DSECT        S 001500
         POP   PRINT               RESTORE ORIGINAL PRINT OPTIONS       S 001600
         MEND                                                           S 001700
         SPACE 5                                                        S 001800
PARROTS  CSECT                                                          S 001900
         $CB   ,                   GENERATE REQUIRED DSECTS             S 002000
         TITLE 'PARROTS - STAE: SYSTEM DIAGNOSTIC WORK AREA'            S 002100
       IHASDWA ,                   STAE WORK AREA DSECT                 S 002200
         TITLE 'PARROTS - STAE: LOAD LIST ELEMENT DSECT'                S 002300
        IHALLE ,                   LOAD LIST ELEMENT DSECT              S 002400
         TITLE 'PARROTS - STAE: CONTENTS DIRECTORY ELEMENT'             S 002500
        IHACDE ,                   CONTENTS DIRECTORY ENTRY DSECT       S 002600
         TITLE 'PARROTS - STAE: DUMP FORMAT PRINT LINE'                 S 002700
*********************************************************************** S 002800
*        DUMP FORMAT PRINT LINE DSECT                                 * S 002900
*********************************************************************** S 003000
         SPACE 1                                                        S 003100
DUMPLINE DSECT                                                          S 003200
DMPLCC   DS    CL1                 CARRIAGE CONTROL CHARACTERE          S 003300
         DS    CL4                 UNUSED                               S 003400
DMPLADR  DS    CL6                 ADDRESS OF FIRST BYTE IN LINE        S 003500
         DS    CL3                 UNUSED                               S 003600
DMPLHEX  DS    0CL74               32 BYTES OF DATA IN HEX FORMAT       S 003700
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 003800
         DS    CL1                 UNUSED                               S 003900
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 004000
         DS    CL1                 UNUSED                               S 004100
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 004200
         DS    CL1                 UNUSED                               S 004300
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 004400
         DS    CL4                 UNUSED                               S 004500
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 004600
         DS    CL1                 UNUSED                               S 004700
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 004800
         DS    CL1                 UNUSED                               S 004900
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 005000
         DS    CL1                 UNUSED                               S 005100
         DS    CL8                 FOUR BYTES OF DATA HEXPANDED         S 005200
         DS    CL3                 UNUSED                               S 005300
DMPLAST1 DS    CL1                 1ST DELIMITING ASTERISK              S 005400
DMPLCHAR DS    CL32                32 BYTES OF DATA UNEXPANDED          S 005500
DMPLAST2 DS    CL1                 2ND DELIMITING ASTERISK              S 005600
DMPLAROW DS    CL8                 HIGH-LIGHTING ARROW FOR CURRENT C/B  S 005700
DUMPLGTH EQU   *-DUMPLINE          LENGTH OF DSECT                      S 005800
         TITLE 'PARROTS - STAE ERROR ANALYSIS EXIT'                     S 005900
        SCSECT S                   ESTABLISH START OF CSECT PARROTS     S 006000
         USING PARROTS,R12,R11     ESTABLISH 2 BASE REGISTERS           S 006100
         SPACE 1                                                        S 006200
         ENTRY PARENDS             END OF CSECT                         S 006300
         ENTRY STAE                STAE ERROR ANALYSIS EXIT             S 006400
         SPACE 1                                                        S 006500
         USING SDWA,R8             ESTABLISH STAE WORK AREA ADDRESS'Y   S 006600
         SPACE 5                                                        S 006700
*        NOTE THAT THIS SUB-CSECT IS UNUSUAL IN THAT IT HAS TWO BASE    S 006800
*         REGISTERS ( R12 AND R11 ).  SINCE THIS CSECT IS ENTERED ONLY  S 006900
*         AT ONE POINT ( 'STAE' ) SUCH REGISTER USAGE IS EASILY         S 007000
*         CONTROLLED, AND THIS IS AN EASIER SOLUTION ( IN THIS SPECIFIC S 007100
*         CASE ) THAN SPLITTING THE CSECT INTO TWO PARTS, AND FLIPPING  S 007200
*         BACK AND FORTH WITH CBAL COMMANDS.                            S 007300
         EJECT                                                          S 007400
*********************************************************************** S 007500
*        STAE ERROR ANALYSIS EXIT MAIN-LINE ( CONT'D )                * S 007600
*********************************************************************** S 007700
         SPACE 1                                                        S 007800
*        THIS ROUTINE RECEIVES CONTROL FROM THE STAE EXIT INTERFACE     S 007900
*         ( STAEXIT IN PARROT ) AFTER THE INTERFACE HAS RE-ESTABLISHED  S 008000
*         PARROT'S REGISTERS                                            S 008100
         SPACE 1                                                        S 008200
*        ON ENTRY, R0 CONTAINS A CODE INDICATING IF THE SDWA WAS        S 008300
*         CREATED.  IF THE SDWA IS NOT AVAILABLE, STAE RTN IS BYPASSED. S 008400
         SPACE 1                                                        S 008500
STAE     SUBIN SAVE=(R1,R14)       PRESERVE W/A & RETURN ADDRESSES      S 008600
         STM   R0,R15,STAEREGS     PRESERVE REGISTERS                   S 008700
         LA    R11,2048(,R12)      ESTABLISH R11 AS SECONDARY ...       S 008800
         LA    R11,2048(,R11)       ... BASE REGISTER                   S 008900
         NI    SWINIT,FF-MINTCC    SET OFF C/C HEADING RTN JUST IN CASE S 009000
         B     *+4(R0)             PREFORM INDEXED BRANCH               S 009100
         B     STAECONT      R0=0  I/O QUIESCED & RESTORABLE - CONTINUE S 009200
         B     STAECONT      R0=4  I/O HALTED & ^ RESTORABLE - CONTINUE S 009300
         B     STAECONT      R0=8  NO ACTIVE I/O             - CONTINUE S 009400
         B     STAEOUT       R0=C  NO STORAGE FOR SDWA       - BYPASS   S 009500
         B     STAECONT      R0=10 NO I/O PROCESSING WAS PERFROMED      S 009600
STAECONT LR    R8,R1               POINT R8 AT STAE WORK AREA           S 009700
         MVC   SAVAREA(64),$SAVAREA PRESERVE SAVE AREA AT ENTRY TO ABEN S 009800
         MVI   STAEFLG1,0          RE-INITIALISE FLAGS LEST NOT 1ST TIM S 009900
         CBAL  R4,STAE14           IS THIS A SUPRESSABLE EXPONENT OFLOW S 010000
         BE    STAEOUT             GO TO EXIT IF EXPONENT OVERFLOW      S 010100
         L     R1,STAEREGS+(11*4)  GET ADDRESS OF CBAL DATA AREA        S 010200
         MVC   CBALREGS(80),0(R1)  PRESERVE CBAL DEBUGGING INFO         S 010300
         AP    STAECNT,$ONE        INCREMENT COUNT OF ABENDS            S 010400
         MVC   LINE00N,LINE00M     MOVE EDIT MASK TO HEADING LINE       S 010500
         ED    LINE00N,STAECNT     SET ABEND NUMBER IN HEADING LINE     S 010600
        TTIMER CANCEL              CANCEL LOOP-DETECTING STIMER IF ANY  S 010700
         CBAL  R4,STAE13           ALTER SDWA REGS IF STIMER INTERCEPT  S 010800
         CBAL  R4,STAE00           ENSURE SYSPRINT OPEN IF PRESENT      S 010900
         CBAL  R4,STAE01           INITIALISE SYSPRINT FOR ABEND DATA   S 011000
         CBAL  R4,STAE02           IDENTIFY CODE AND PSW                S 011100
         CBAL  R4,STAE03           IDENTIFY LOCATION OF INSTRUCTION     S 011200
         CBAL  R4,STAE04           PRINT FAILING INSTRUCTION            S 011300
         EJECT                                                          S 011400
*********************************************************************** S 011500
*        STAE ERROR ANALYSIS EXIT MAIN-LINE ( CONT'D )                * S 011600
*********************************************************************** S 011700
         SPACE 1                                                        S 011800
         CBAL  R4,STAE05           PRINT GENERAL PURPOSE REGISTERS      S 011900
         CBAL  R4,STAE15           PRINT FLOATING POINT REGISTERS       S 012000
         CBAL  R4,STAE06           PRINT DATA ABOUT LAST CBAL ISSUED    S 012100
         CBAL  R4,STAE17           PRINT DATA ABOUT LAST 5 CBAL'S       S 012200
         CBAL  R4,STAE11           PRINT DATA ABOUT R4 RETURN ADDRESS   S 012300
         CBAL  R4,STAE12           PRINT DATA ABOUT R12 AS BASE REGISTE S 012400
         CBAL  R4,STAE07           PRINT PARROT REGISTER SAVE AREA      S 012500
         CBAL  R4,STAE08           PRINT CURRENT RECORD & WORK AREA     S 012600
         CBAL  R4,STAE18           PRINT DATA ABOUT ALL THE CSECTS      S 012700
         CBAL  R4,STAE09           PRINT CONTENTS OF CCB                S 012800
         CBAL  R4,STAE10           PRINT ALL PARROT CONTROL BLOCKS      S 012900
         CBAL  R4,STAE16           ISSUE WTO IF 106 ABEND               S 013000
         CBAL  R4,STAE100          DECIDE WHETHER A RETRY IS IN ORDER   S 013100
         CBAL  R4,STAE98           PRINT SDWA TO ENSURE ITS RIGHT       S 013200
*        CBAL  R4,STAE99           DECIDE WHETHER TO CONTINUE WITH DUMP S 013300
         CBAL  R4,PRINT            SPACE A BLANK LINE                   S 013400
         LINE  LINE99,S=2          TELL OF END OF ABEND ANALYSIS        S 013500
         MVC   5(L'LINE101,R5),LINE101 SET UP LINE IN OUTPUT BUFFER     S 013600
         OI    STAEFLG1,STF1WTO    SET FLAG TO FORCE WTO TO BE ISSUED   S 013700
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 013800
STAEOUT  LM    R0,R15,STAEREGS     RESTORE REGS AT ENTRY TO THIS RTN    S 013900
         LM    R0,R15,0(R10)       RESTORE REGS AT ENTRY TO ESTAE EXIT  S 014000
         BR    R14                 RETURN TO ABEND PROCESSING           S 014100
         SPACE 2                                                        S 014200
STAEREGS DS    16F                 REGISTER SAVE AREA                   S 014300
CBALREGS DC    20F'0'              WORK AREA FOR CBAL DATA              S 014400
         TITLE 'PARROTS - STAE: OPEN SYSPRINT IF NECESSARY'             S 014500
*********************************************************************** S 014600
*        STAE: OPEN SYSPRINT DATA SET IF NECESSARY                    * S 014700
*********************************************************************** S 014800
         SPACE 1                                                        S 014900
STAE00   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 015000
         TM    SYSPRINT+IOPSSW,IOSWPRES IS SYSPRINT PRESENT             S 015100
         BZ    STAE00X             BYPASS ROUTINE IF NOT THERE          S 015200
         TM    SYSPRINT+IOPSSW,IOSWOPEN TEST IF SYSPRINT OPEN           S 015300
         BO    STAE00X             BR IF ITS ALREADY OPEN               S 015400
         IOM   OPEN,SYSPRINT       GO AND (RE-)OPEN SYSPRINT            S 015500
         CBAL  R4,PRINT            ISSUE PUT TO GET BUFFER ADDRESS      S 015600
STAE00X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 015700
         TITLE 'PARROTS - STAE: INITIALISE PRINT DATA SET'              S 015800
*********************************************************************** S 015900
*        STAE: INITIALISE PRINT DATA SET                              * S 016000
*********************************************************************** S 016100
         SPACE 1                                                        S 016200
STAE01   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 016300
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 016400
         L     R5,SYSPRINT+IOPSRECA RETRIVE SYSPRINT BUFFER ADDRESS     S 016500
         MVI   0(R5),PAGESKIP      SET UP TO SKIP TO NEW PAGE           S 016600
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     S 016700
         COUNT SYSPRINT,2          ALLOW FOR FOLLOWING TRIPLE SPACE     S 016800
         LINE  LINE00,S=3          SET UP HEADING AND PRINT             S 016900
         LR    R10,R13             POINT R10 AT START OF CCB            S 017000
         S     R10,=A(CSIDLGTH)    DECREMENT BY LENGTH OF PREFIX        S 017100
         USING CSECTID,R10         ESTABLISH PREFIX ADDRESSABILITY      S 017200
         MVC   LINE01V,CSIDVERS+5  SET UP VERSION NUMBER IN LINE        S 017300
         MVC   LINE01T,CSIDTIME    SET UP TIME OF ASSEMBLY              S 017400
         MVC   LINE01D,CSIDDATE    SET UP DATE OF ASSEMBLY              S 017500
         DROP  R10                 DROP PREFIX ADDRESSABILITY           S 017600
         LINE  LINE01              PRINT LINE IDENTIFYING PARROT VERSIO S 017700
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 017800
         TITLE 'PARROTS - STAE: PRINT ABEND CODE AND PSW'               S 017900
*********************************************************************** S 018000
*        STAE: PRINT ABEND CODE AND PSW                               * S 018100
*********************************************************************** S 018200
         SPACE 1                                                        S 018300
STAE02   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 018400
         MVC   5(L'LINE02,R5),LINE02 MOVE IN BASIC MESSAGE              S 018500
         MVI   5+L'LINE02(R5),C'S' ASSUME IT IS A SYSTEM ABEND          S 018600
         UNPK  $WRKAREA(9),SDWAABCC(5) UNPACK ABEND CODE DATA           S 018700
         TR    $WRKAREA(8),HEXTABLE-C'0' CONVERT TO PRINTABLE           S 018800
         MVC   6+L'LINE02(3,R5),$WRKAREA+2 ADD CODE TO MESSAGE          S 018900
         CLC   $WRKAREA+2(3),$ZEROES IS SYSTEM ABEND CODE THERE         S 019000
         BNE   STAE0202            BR IF IT IS SYSTEM CODE              S 019100
         MVI   5+L'LINE02(R5),C'U' INDICATE USER ABEND CODE             S 019200
         LH    R1,SDWAABCC+2       RETRIEVE BINARY USER ABEND CODE      S 019300
         CVD   R1,$WRKDUBL         CONVERT USER CODE TO DECIMAL         S 019400
         EDIT  $WRKEDIT,$WRKDUBL+5,'X0XXX' EDIT CODE TO EBCDIC          S 019500
         OI    $WRKEDIT+5,X'F0'    CONVERT SIGN TO X'F'                 S 019600
         MVC   6+L'LINE02(4,R5),$WRKEDIT+2 MOVE ABEND CODE TO MESSAGE   S 019700
         OI    STAEFLG1,STF1USER   FLAG THAT THIS IS A USER ABEND       S 019800
STAE0202 CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 019900
         MVC   5(L'LINE03,R5),LINE03 MOVE IN BASIC PSW MESSAGE          S 020000
         LA    R6,5+L'LINE03(,R5)  POINT AT POSN FOR PSW                S 020100
         LA    R1,SDWACTL1         POINT AT PSW AT TIME OF ABEND        S 020200
         TM    STAEFLG1,STF1RB     IS RB PSW TO BE USED INSTEAD         S 020300
         BZ    *+8                 BR IF NOT                            S 020400
         LA    R1,SDWACTL2         POINT AT PSW IN LAST RB              S 020500
         LA    R2,2                SET TO HEXPRINT 8 BYTES              S 020600
         CBAL  R4,HEXPRINT         EXPAND PSW AND SET IN LINE           S 020700
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 020800
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 020900
         TITLE 'PARROTS - STAE: PRINT LOCATION OF INSTRUCTION'          S 021000
*********************************************************************** S 021100
*        STAE: PRINT LOCATION OF INSTRUCTION IF IN PARROT CODE       *  S 021200
*********************************************************************** S 021300
         SPACE 1                                                        S 021400
STAE03   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 021500
         L     R1,SDWAPMKA         GET ADDRESS OF NEXT INSTRUCTION TO E S 021600
         TM    STAEFLG1,STF1RB     IS PSW FROM LAST RB TO BE USED INSTE S 021700
         BZ    *+8                 BR IF NOT                            S 021800
         L     R1,SDWAPMKP         GET NSI ADDRESS FROM RB'S PSW        S 021900
         LA    R1,0(,R1)           PURIFY HIGH ORDER BYTE               S 022000
         SR    R10,R10             ZEROISE WORK REGISTER                S 022100
         IC    R10,SDWAPMKA        RETRIEVE ILC ET AL                   S 022200
         TM    STAEFLG1,STF1RB     IS PSW FROM LAST RB TO BE USED INSTE S 022300
         BZ    *+8                 BR IF NOT                            S 022400
         IC    R10,SDWAPMKP        RETRIEVE ICL ET AL FROM RB'S PSW     S 022500
         SRL   R10,6               REMOVE CC AND PROGRAM MASK           S 022600
         SLL   R10,1               SET TRUE LENGTH                      S 022700
         LTR   R10,R10             IS LENGTH SOMEHOW ZERO               S 022800
         BNZ   *+8                 BR IF NOT ZERO                       S 022900
         LA    R10,6               SET LENGTH TO 6 FOR SAFETY           S 023000
         STC   R10,INSLGTH         PRESERVE INSTRUCTION LENGTH FOR LATE S 023100
         CLC   SDWAINTA,PAGEFLT    IS THIS SOME SORT OF PAGE FAULT      S 023200
         BNL   *+6                 BR IF PAGE FAULT BECAUSE THIS IS FAI S 023300
*                                   FAILING INSTRUCTION FOR PAGE FAULTS S 023400
         SR    R1,R10              POINT AT FAILING INSTRUCTION         S 023500
         ST    R1,INSADDR          PRESERVE ADDRESS OF FAILING INSTRUCT S 023600
         CBAL  R4,GETCSECT         FIND WHICH CSECT ADDRESS IS IN       S 023700
         BNE   STAE0303            BRANCH IF NOT IN PARROT CSECT        S 023800
*                                  R14 POINTS AT CSECT CONTAINING INSTR S 023900
         MVC   LINE05D,$WRKAREA+2  MOVE DISPLACEMENT TO MESSAGE         S 024000
         USING CSECTID,R14         ESTABLISH PREFIX ADDRESSABILITY      S 024100
         MVC   LINE05C,CSIDNAME    MOVE NAME TO MESSAGE                 S 024200
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 024300
         MVC   5(L'LINE05,R5),LINE05 MOVE MESSAGE TO PRINT LINE         S 024400
         OI    STAEFLG1,STF1PARY   FLAG THAT INSTRUCTION IN PARROT      S 024500
         B     STAE03X             GO TO ISSUE MESSAGE                  S 024600
STAE0303 MVC   5(L'LINE06,R5),LINE06 MOVE IN 'NOT PARROT' MESSAGE       S 024700
STAE03X  CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 024800
         TM    STAEFLG1,STF1PARY   IS INSTRUCTION IN PARROT             S 024900
         BZ    STAE03XT            BYPASS CSECT IDENTIFICATION IF NOT   S 025000
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 025100
STAE03XT SUBOUT RESTORE=R4         RESTORE AND RETURN                   S 025200
         TITLE 'PARROTS - STAE: PRINT FAILING INSTRUCTION'              S 025300
*********************************************************************** S 025400
*        PRINT FAILING INSTRUCTION IF IN PARROT CODE                 *  S 025500
*********************************************************************** S 025600
         SPACE 1                                                        S 025700
STAE04   SUBIN SAVE=R4             PRESEZRVE RETURN ADDRESS             S 025800
         TM    STAEFLG1,STF1PARY   IS ABEND IN PARROT CODE              S 025900
         BZ    STAE04X             EXIT IF NOT                          S 026000
         MVC   5(L'LINE04,R5),LINE04 SET UP BASIC MESSAGE               S 026100
         L     R1,INSADDR          RETRIEVE ADDRESS OF FAILING INSTRAUC S 026200
         UNPK  $WRKAREA(13),0(7,R1) UNPACK 7 BYTES FOR PRINTING         S 026300
         TR    $WRKAREA(12),HEXTABLE-C'0' TRANLATE TO PRINTABLE         S 026400
         IC    R1,INSLGTH          RETRIEVE INSTRUCTION LENGTH          S 026500
         SLL   R1,1                DOUBLE FOR UNPACKED FORMAT           S 026600
         BCTR  R1,0                DECREMENT FOR EXECUTE                S 026700
         EX    R1,INSMVC           ADD INSTRUCTION IMAGE TO LINE        S 026800
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT LINE             S 026900
STAE04X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 027000
         TITLE 'PARROTS - STAE: PRINT GENERAL PURPOSE REGISTERS'        S 027100
*********************************************************************** S 027200
*        STAE: PRINT GENERAL PURPOSE REGISTERS AT TIME OF ABEND       * S 027300
*********************************************************************** S 027400
         SPACE 1                                                        S 027500
STAE05   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 027600
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 027700
         LINE  LINE10              PRINT SUB-HEADING LINE               S 027800
         LA    R1,SDWAGR00         POINT AT CONTENTS OF REG 0           S 027900
         TM    STAEFLG1,STF1RB     ARE REGISTERS FROM LAST RB TO BE USE S 028000
         BZ    *+8                 BR IF NOT                            S 028100
         LA    R1,SDWASR00         POINT AT REG 0 FROM LAST RB          S 028200
         LA    R6,30(,R5)          POINT AT DESTINATION IN LINE         S 028300
         LA    R2,8                ESTABLISH LOOP OF 8 REGISTERS TO HEX S 028400
         MVC   18(9,R5),=C'R0 - R7 :' SET EXPLANATORY HEADING           S 028500
         CBAL  R4,HEXPRINT         EXPAND REGISTERS AND SET IN LINE     S 028600
         CBAL  R4,PRINT            PRINT 1ST 8 GENERAL PURPOSE REGISTER S 028700
         LA    R1,SDWAGR08         POINT AT CONTENTS OF REG 8           S 028800
         TM    STAEFLG1,STF1RB     ARE REGISTERS FROM LAST RB TO BE USE S 028900
         BZ    *+8                 BR IF NOT                            S 029000
         LA    R1,SDWASR08         POINT AT REG8 FROM LAST RB S/A       S 029100
         LA    R2,8                ESTABLISH LOOP OF 8 REGISTERS TO HEX S 029200
         LA    R6,30(,R5)          POINT AT DESTINATION IN PRINT LINE   S 029300
         MVC   18(9,R5),=C'R8 - R15:' SET EXPLANATORY HEADING           S 029400
         MVI   0(R5),SPCE2AFT      ESTABLISH FOLLOWING BLANK LINE       S 029500
         CBAL  R4,HEXPRINT         EXPAND REGISTERS AND STE IN LINE     S 029600
         CBAL  R4,PRINT            PRINT LAST 8 GENERAL PURPOSE REGISTE S 029700
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 029800
         TITLE 'PARROTS - STAE: PRINT DATA ABOUT LAST CBAL'             S 029900
*********************************************************************** S 030000
*        PRINT DATA ABOUT LAST CBAL ISSUED PRIOR TO ABEND             * S 030100
*********************************************************************** S 030200
         SPACE 1                                                        S 030300
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 030400
STAE06   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 030500
         L     R1,$CBALR4          RETRIEVE CBAL RETURN ADDRESS         S 030600
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 030700
         CBAL  R4,GETCSECT         DETERMINE DISPLACEMENT OF CBAL       S 030800
         MVC   LINE08M,CSIDNAME    ADD NAME OF ISSUING CSECT            S 030900
         MVC   LINE08D,$WRKAREA+2  ADD DISPLACEMENT OF ISSUING CBAL     S 031000
         MVC   5(L'LINE08,R5),LINE08 ADD MESSAGE TO PRINT LINE          S 031100
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 031200
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 031300
STAE0601 L     R1,$CBALRTN         RETRIEVE ADDRESS OF RTN CBAL'ED TO   S 031400
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 031500
         CBAL  R4,GETCSECT         DETERMINE CSECT WHICH CONTAINS RTN   S 031600
         BNE   STAE0602            BR IF NOT FOUND: CAN'T HAPPEN, BUT.. S 031700
         MVC   LINE09M,CSIDNAME    ADD NAME OF CSECT TO MESSAGE         S 031800
         MVC   LINE09D,$WRKAREA+2  ADD DISPLACEMENT OF RTN TO MESSAGE   S 031900
         MVC   5(L'LINE09,R5),LINE09 ADD MESSAGE TO PRINT LINE          S 032000
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 032100
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 032200
STAE0602 L     R1,$CBALR12         SET R1 TO BASE AT TIME OF CBAL       S 032300
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT                S 032400
         BNE   STAE0603            BR IF NOT A GOOD ADDRESS             S 032500
         MVC   LINE28M,CSIDNAME    SET MODULE NAME IN MESSAGE           S 032600
         LINE  LINE28              ISSUE MESSAGE                        S 032700
         LINE  LINE16              ISSUE SECONDARY MESSAGE              S 032800
STAE0603 SUBOUT RESTORE=R4         RESTORE AND RETURN                   S 032900
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 033000
         TITLE 'PARROTS - STAE: PRINT PARROT REGISTER SAVE AREA'      2 S 033100
*********************************************************************** S 033200
*        STAE: PRINT PARROT REGISTER SAVE AREA ( AT ENTRY TO ABEND ) *  S 033300
*********************************************************************** S 033400
STAE07   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 033500
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 033600
         LINE  LINE13              PRINT HEADING TO EXPLAIN DATA        S 033700
         MVC   18(9,R5),=C'R0 - R7 :' ADD SUB-HEADING                   S 033800
         LA    R2,8                SET TO HEXPAND 8 REGISTERS ( 0-7 )   S 033900
         LA    R6,30(,R5)          POINT AT POSITION OF OUTPUT IN LINE  S 034000
         LA    R1,SAVAREA+20       POINT AT REG0 IN PRESERVED S/A       S 034100
         CBAL  R4,HEXPRINT         CONVERT TO PRONTABLE & ADD TO LINE   S 034200
         CBAL  R4,PRINT            PRINT LINE OF REGISTERS              S 034300
         MVC   18(9,R5),=C'R8 - R15:' ADD EXPLANATORY SUB-HEADING       S 034400
         LA    R2,5                SET TO HEXPAND 5 REGISTERS ( 8-12 )  S 034500
         LA    R6,30(,R5)          POINT AT OUTPUT POSN IN LINE         S 034600
         LA    R1,SAVAREA+52       POINT AT REG8 IN PRESERVED S/A       S 034700
         CBAL  R4,HEXPRINT         HEXPAND 5 REGISTERS AND ADD TO LINE  S 034800
         LA    R6,9(,R6)           POINT R6 PAST MISSING R13            S 034900
         LA    R2,2                SET TO HEXPAND 2 REGISTERS ( 14-15 ) S 035000
         LA    R1,SAVAREA+12       POINT AT R14 IN PRESERVED S/A        S 035100
         CBAL  R4,HEXPRINT         HEXPAND REGISTERS AND ADD TO LINE    S 035200
         CBAL  R4,PRINT            PRINT LINE OF HEXPANDED REGISTERS    S 035300
         MVC   18(9,R5),=C'CHAINS  :' ADD EXPLANATORY SUBHEADING        S 035400
         LA    R2,3                SET TO HEXPAND 3 FULL WORDS          S 035500
         LA    R6,30(,R5)          POINT AT OUTPUT POSN IN LINE         S 035600
         LA    R1,SAVAREA          POINT AT S/A CHAIN FIELDS            S 035700
         CBAL  R4,HEXPRINT         HEXPAND CHAIN FIELDS AND ADD TO LINE S 035800
         MVI   0(R5),SPCE2AFT      ESTABLISG FOLLOWING DOUBLE SPACE     S 035900
         CBAL  R4,PRINT            PRINT SAVE AREA CHAIN FIELDS         S 036000
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 036100
         TITLE 'PARROTS - STAE: PRINT CURRENT RECORD AND WORK AREA'     S 036200
*********************************************************************** S 036300
*        STAE: PRINT CURRENT RECORD AND WORKING STORAGE AREA          * S 036400
*********************************************************************** S 036500
         SPACE 1                                                        S 036600
STAE08   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 036700
         TM    SYSUT1+IOPSSW,IOSWOPEN IS SYSUT1 OPEN                    S 036800
         BZ    STAE08X             BYPASS ROUTINE IF NOT OPEN           S 036900
         TM    SYSUT1+IOPSSW,IOSWEOF HAS EOF BEEN REACHED               S 037000
         BO    STAE08X             BYPASS ROUTINE IF EOF                S 037100
         CBAL  R4,PRINT            PRINT BLANK LINE                     S 037200
         LINE  LINE14              PRINT EXPLANATORY MESSAGE            S 037300
         L     R1,$SORTREC         POINT AT LENGTH||RECORD              S 037400
         LH    R3,0(R1)            GET LENGTH OF CURRENT RECORD         S 037500
         CBAL  R4,DUMPRINT         PRINT W/S IN DUMP FORMAT             S 037600
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 037700
         L     R1,$PTRPARM         GET ADDRESS OF USER EXIT LINKAGE ARE S 037800
         LTRR  R1,R1               PURIFY ADDRESS AND TEST IF PRESENT   S 037900
         BZ    STAE08X             BYPASS PRINTING IF NO LINKAGE AREA   S 038000
         LINE  LINE15              PRINT ANOTHER EXPLANATION            S 038100
         L     R1,$PTRPARM         POINT R1 AT LENGTH||LINKAGE AREA     S 038200
         LH    R3,0(R1)            RETRIEVE LENGTH FIELD                S 038300
         CBAL  R4,DUMPRINT         PRINT INPUT REC IMAGE IN DUMP FORMAT S 038400
STAE08X SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 038500
         TITLE 'PARROTS - STAE: PRINT CONTENTS OF CCB'                  S 038600
*********************************************************************** S 038700
*        STAE: PRINT CONTENTS OF CENTRAL CONTROL BLOCK                * S 038800
*********************************************************************** S 038900
         SPACE 1                                                        S 039000
STAE09   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 039100
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 039200
         MVI   0(R5),PAGESKIP      ESTABLISH PAGE SKIP                  S 039300
         CBAL  R4,PRINT            SKIP TO NEW PAGE                     S 039400
         LINE  LINE00,S=3          PRINT HEADING LINE                   S 039500
         COUNT SYSPRINT,2          ALLOW FOR TRIPLE SPACE               S 039600
         LINE  LINE18              PRINT EXPLANATION OF FOLLOWING DATA  S 039700
         LR    R1,R13              POINT R1 AT CCB                      S 039800
         LA    R3,CCBLGTH          SET LENGTH OF CCB                    S 039900
         CBAL  R4,DUMPRINT         PRINT CCB IN DUMP FORMAT             S 040000
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 040100
         TITLE 'PARROTS - STAE: PRINT PARROT CONTROL BLOCKS'            S 040200
*********************************************************************** S 040300
*        STAE: PRINT PARROT CONTROL BLOCKS                            * S 040400
*********************************************************************** S 040500
         SPACE 1                                                        S 040600
         USING CBPREFIX,R7         SATBLISH C/B PREFIX ADDRESS'Y        S 040700
STAE10   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 040800
         COUNT SYSPRINT,0          ZEROISE SYSPRINT LINECOUNT           S 040900
         MVI   0(R5),PAGESKIP      ESTABLISH PAGE SKIP                  S 041000
         CBAL  R4,PRINT            SKIP TO HEAD OF PAGE                 S 041100
         LINE  LINE00,S=3          PRINT HEADING LINE                   S 041200
         COUNT SYSPRINT,2          ALLOW FOR TRIPLE SPACE               S 041300
         L     R7,$CBP1ST          GET ADDRESS OF 1ST C/B PREFIX        S 041400
STAE10L  LTRR  R7,R7               PURIFY & TEST FOR END OF CHAIN       S 041500
         BZ    STAE10X             EXIT IF END OF CHAIN                 S 041600
         CBAL  R4,CBCURENT         DETERMINE IF C/B IS CURRENTLY IN USE S 041700
         MVC   5(L'LINE19,R5),LINE19 MOVE MESSAGE TO LINE               S 041800
         MVC   5+L'LINE19(L'CBPRNAME,R5),CBPRNAME ADD C/B ID TO MESSAGE S 041900
         CBAL  R4,PRINT            PRINT IDENTIFYING MESSAGE            S 042000
         LR    R1,R7               POINT R1 AT PREFIX                   S 042100
         LH    R3,CBPRLEN          SET LENGTH OF C/B IN R3              S 042200
         CBAL  R4,DUMPRINT         PRINT C/B IN DUMP FORMAT             S 042300
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 042400
         L     R7,CBPRCBPR         GET ADDRESS OF NEXT C/B PREFIX       S 042500
         B     STAE10L             LOOP BACK TO PROCESSS NEW PREFIX     S 042600
STAE10X  LINE  LINE20              TELL OF END OF CONTROL BLOCKS        S 042700
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 042800
         DROP  R7                  DROP CONTROL BLOCK PREFIX ADDR'Y     S 042900
         TITLE 'STAE: PRINT DATA ABOUT RETURN ADDRESS ( IN R4 )'        S 043000
*********************************************************************** S 043100
*        STAE: PRINT DATA ABOUT CURRENT RETURN ADDRESS IN R4          * S 043200
*********************************************************************** S 043300
         SPACE 1                                                        S 043400
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 043500
STAE11   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 043600
         L     R1,SDWAGR04         RETRIEVE R4 AT TIME OF ABEND         S 043700
         TM    STAEFLG1,STF1RB     ARE REGISTERS FROMLAST RB TO BE USED S 043800
         BZ    *+8                 BR IF NOT                            S 043900
         L     R1,SDWASR04         RETRIEVE R4 CONTENTS FROM RB         S 044000
         LA    R1,0(,R1)           PURIFY HIGH ORDER BYTE               S 044100
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS IT    S 044200
         BE    STAE1102            BR IF ADDRESS FOUND IN A CSECT       S 044300
         MVC   LINE21+12(L'LINE21SA),LINE21SA ALTER MESSAGE TEXT FOR S/ S 044400
         L     R1,SAVAREA+36       RETRIEVE R4 FROM SAVED SAVE AREA     S 044500
         LA    R1,0(,R1)           PURIFY ADDRESS                       S 044600
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS THE A S 044700
         BNE   STAE11X             EXIT IF ADDRESS NOT LOCATABLE        S 044800
STAE1102 MVC   LINE21M,CSIDNAME    ADD CSECT NAME TO MESSAGE            S 044900
         MVC   LINE21D,$WRKAREA+2  ADD DISPLACEMENT TO MESSAGE          S 045000
         MVC   5(L'LINE21,R5),LINE21 ADD MESSAGE TO LINE                S 045100
         CBAL  R4,WTOPRINT         ISSUE WTO AND PRINT MESSAGE          S 045200
         LINE  LINE16              PRINT DETAILS ABOUT CSECT            S 045300
STAE11X SUBOUT RESTORE=R4          RESTORE & RETURN TO CALLER           S 045400
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 045500
         EJECT                                                          S 045600
*********************************************************************** S 045700
*        STAE: PRINT DATA ABOUT CSECTS OF WHICH R12 IS THE BASE       * S 045800
*********************************************************************** S 045900
         SPACE 1                                                        S 046000
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 046100
STAE12   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 046200
         L     R1,SDWAGR12         GET R12 AT ENTRY TO ABEND            S 046300
         TM    STAEFLG1,STF1RB     ARE REGISTERS FROM LAST RB TO BE USE S 046400
         BZ    *+8                 BR IF NOT                            S 046500
         L     R1,SDWASR12         GET R12 FROM LAST RB'S SAVE AREA     S 046600
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 046700
         CBAL  R4,GETCSECT         DETERMINE WHICH CSECT CONTAINS ADDR  S 046800
         BE    STAE1201            BR IF CSECT OFUND                    S 046900
         MVC   5(L'LINE23,R5),LINE23 MOVE MESSAGE TO LINE               S 047000
         CBAL  R4,WTOPRINT         TELL THAT R12 IS NOT A BASE          S 047100
         B     STAE1202            GO PROCESS SAVE AREA R12             S 047200
STAE1201 MVC   LINE22M(8),CSIDNAME ADD CSECT NAME TO MESSGAE            S 047300
         MVC   5(L'LINE22,R5),LINE22 ADD MESSAGE TO LINE                S 047400
         CBAL  R4,WTOPRINT         TELL OF CSECT FOR WHICH R12 IS BASE  S 047500
STAE1202 L     R1,SAVAREA+68       GET R12 FROM PROGRAM SAVE AREA       S 047600
         LA    R1,0(,R1)           PURIFY HIGH-ORDER BYTE               S 047700
         CBAL  R4,GETCSECT         GET NAME OF ASSOCIATED CSECT IF ANY  S 047800
         BE    STAE1203            BR IF CSECT MATCH FOUND              S 047900
         MVC   5(L'LINE25,R5),LINE25 ADD MESSAGE TO LINE                S 048000
         CBAL  R4,WTOPRINT         GO TELL THAT R12 NOT A BASE          S 048100
         B     STAE1204            GO TO EXIT                           S 048200
STAE1203 MVC   LINE24M(8),CSIDNAME ADD CSECT NAME TO MESSAGE            S 048300
         MVC   5(L'LINE24,R5),LINE24 ADD MESSAGE TO LINE                S 048400
         CBAL  R4,WTOPRINT         TELL OF R12 AS BASE REGISTER         S 048500
STAE1204 EQU   *                   EXIT FROM ROUTINE                    S 048600
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 048700
         DROP  R14                 DROP CSECT PREFIX ADDRESSABILITY     S 048800
         TITLE 'PARROTS - STAE: ALTER SDWA REGISTERS IF STIMER DUMP'    S 048900
*********************************************************************** S 049000
*        STAE: SET TO USE RB'S PSW AND REGISTERS IF NECESSARY         * S 049100
*********************************************************************** S 049200
         SPACE 1                                                        S 049300
*        IN THE EVENT OF A PARROT STIMER INTERCEPT ( U 028 ABEND ),     S 049400
*         OR IN THE EVENT OF AN X22 ABEND ( JOB CANCELLED EXTERNALLY )  S 049500
*         THE MEANINGFUL PSW AND REGISTERS UPON WHICH WE WISH TO REPORT S 049600
*         ARE THOSE OF THE LAST RB, WHICH ARE ALSO CONVENIENTLY IN THE  S 049700
*         SDWA.  THIS ROUTINE DETECTS SUCH CONDITIONS, AND SETS A FLAG  S 049800
*         TO USE THE RB'S PSW AND REGISTER VALUES INSTEAD OF THOSE AT   S 049900
*         ENTRY TO ABEND.                                               S 050000
*        FOR PARROT STIMER INTERCEPTS, THIS ROUTINE ALSO REFRESHES THE  S 050100
*         CBAL DEBUGGING INFORMATION WITH THAT WHICH PERTAINED PRIOR    S 050200
*         TO THE STIMER EXIT GETTING CONTROL.  ( CLEVER AREN'T I ).     S 050300
         SPACE 1                                                        S 050400
STAE13   SUBIN ,                   ENTER ROUTINE                        S 050500
         CLC   SDWAABCC,=X'8000001C' IS THIS A USER 028 ABEND           S 050600
         BNE   STAE1301            GO TO EXIT IF NOT                    S 050700
*        MVC   SASDWARG(64),SDWAGRSV PRESERVE SDWA REGISTER S/A         S 050800
         L     R1,=V(STIMREGS)     GET ADDRESS OF STIMER REGISTER SAVE  S 050900
*        MVC   SDWAGRSV(64),0(R1)  OVERRIDE SDWA REGISTERS WITH STIMER  S 051000
         MVC   $CBALR12,64(R1)     REFRESH CBAL DATA FROM STIMER S/A    S 051100
         MVC   $CBALRTD,68(R1)     REFRESH CBAL DATA FROM STIMER S/A    S 051200
         MVC   $CBALRTN,72(R1)     REFRESH CBAL DATA FROM STIMER S/A    S 051300
         MVC   $CBALR4,76(R1)      REFRESH CBAL DATA FROM STIMER S/A    S 051400
         OI    STAEFLG1,STF1RB     FLAG THAT RB'S PSW AND REGS REQ'D    S 051500
         B     STAE13X             GO TO EXIT                           S 051600
STAE1301 CLC   SDWACTL1(8),=X'0000000000000000' IS NO PSW AVAILABLE     S 051700
         BNE   STAE13X             BR IF PSW AVAILABLE                  S 051800
         OI    STAEFLG1,STF1RB     FLAG TO USE PSW AND REGS FROM RB     S 051900
STAE13X SUBOUT ,                   RETURN TO CALLER                     S 052000
         TITLE 'PARROTS - STAE: PROCESS EXPONENT OVERFLOW ( S 0CC )'    S 052100
*********************************************************************** S 052200
*        STAE: PROCESS EXPONENT OVERFLOW CONDITIONS ( S 0CC ABENDS )  * S 052300
*********************************************************************** S 052400
         SPACE 1                                                        S 052500
STAE14   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 052600
         TM    SWPARM,MPRMEOFL     ARE EXPONENT OVERFLOWS TO BE DUMPED  S 052700
         BO    STAE14Y             BR IF DUMP REQUIRED                  S 052800
         CLC   SDWACMPC(2),=X'0CC0' WAS THIS A S 0CC ABEND              S 052900
         BNE   STAE14Y             EXIT IF NOT EXPONENT OVERFLOW        S 053000
         AP    $CNTEOFL,$ONE       INCREMENT COUNT OF ERRORS FOUND      S 053100
         OI    SWERROR2,MERREOFL   FLAG THAT ERROR HAS BEEN FOUND       S 053200
         L     R2,SDWAPMKA         SET ADDRESS OF NSI IN WORK REGISTER  S 053300
         CBAL  R4,SETRP            ISSUE SETRP MACRO TO ESTABLISH RETRY S 053400
         B     STAE14X             GO TO EXIT INDECIATING RETURN        S 053500
STAE14Y  CLI   *,Y                 SET COND CODE TO SHOW DUMP REQ'D     S 053600
         B     *+8                 BYPASS FORWARD CHAINING              S 053700
STAE14X  CLI   *,X                 SET COND CODE TO SHOW DUMP SUPPRESSE S 053800
        SUBOUT RESTORE=R4          RESTAORE AND RETURN TO CALLER        S 053900
         TITLE 'PARROTS - STAE: PRINT FLOATING POINT REGISTERS'         S 054000
*********************************************************************** S 054100
*        STAE: PRINT CONTENTS OF THE FLOATING POINT REGISTERS         * S 054200
*********************************************************************** S 054300
         SPACE 1                                                        S 054400
STAE15   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 054500
         LINE  LINE26              PRINT SUB-HEADING TO IDENTIFY        S 054600
         MVI   24(R5),C'0'         SET REGISTER NO. IN PRINT LINE       S 054700
         STD   FPR0,FPREGWA        SET REGISTER CONTENTS IN WORK AREA   S 054800
         CBAL  R4,HEXFPREG         HEXPAND AND PRINT REGISTER CONTENTS  S 054900
         MVI   24(R5),C'2'         SET REGISTER NO. IN PRINT LINE       S 055000
         STD   FPR2,FPREGWA        SET REGISTER CONTENTS IN WORK AREA   S 055100
         CBAL  R4,HEXFPREG         HEXPAND AND PRINT REGISTER CONTENTS  S 055200
         MVI   24(R5),C'4'         SET REGISTER NO. IN PRINT LINE       S 055300
         STD   FPR4,FPREGWA        SET REGISTER CONTENTS IN WORK AREA   S 055400
         CBAL  R4,HEXFPREG         HEXPAND AND PRINT REGISTER CONTENTS  S 055500
         MVI   24(R5),C'6'         SET REGISTER NO. IN PRINT LINE       S 055600
         STD   FPR6,FPREGWA        SET REGISTER CONTENTS IN WORK AREA   S 055700
         MVI   0(R5),SPCE2AFT      ESTBALISH FOLLOWING BLANK LINE       S 055800
         CBAL  R4,HEXFPREG         HEXPAND AND PRINT REGISTER CONTENTS  S 055900
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 056000
         EJECT                                                          S 056100
*********************************************************************** S 056200
*        HEXPAND AND PRINT FLOATING POINT REGISTER                    * S 056300
*********************************************************************** S 056400
         SPACE 1                                                        S 056500
HEXFPREG SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 056600
         MVC   21(3,R5),=C'FPR'    SET 'FPR' PRECEDING REGISTER NO      S 056700
         MVI   26(R5),C':'         SET ':' TO MAKE IT NEAT              S 056800
         LA    R6,30(,R5)          POINT R6 AT DESTINATION IN LINE      S 056900
         LA    R2,2                SET TO HEXPAND DOUBLEWORD            S 057000
         LA    R1,FPREGWA          POINT REG 1 AT WORK AREA             S 057100
         CBAL  R4,HEXPRINT         HEXPAND REGISTER INTO OUTPUT LINE    S 057200
         CBAL  R4,PRINT             ... AND PRINT THE LINE              S 057300
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 057400
         TITLE 'PARROTS - ISSUE WTO FOR S 106 ABENDS'                   S 057500
*********************************************************************** S 057600
*        STAE: ISSUE WTO EXPLAINING S 106 ABENDS                      * S 057700
*********************************************************************** S 057800
         SPACE 1                                                        S 057900
STAE16   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 058000
         CLC   SDWACMPC(2),=X'1060' IS THIS A SYSTEM 106 ABEND          S 058100
         BNE   STAE16X             GO TO EXIT IF NOT                    S 058200
         OI    STAEFLG1,STF1WTO    FORCE WTO TO BE ISSUED               S 058300
         MVC   5(L'LINE27,R5),LINE27 SET UP MESSAGE                     S 058400
         CBAL  R4,WTOPRINT         PRINT MESSAGE & ISSUE WTO            S 058500
         NI    STAEFLG1,FF-STF1WTO SET OFF FLAG FORCING WTO'S           S 058600
STAE16X SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 058700
         TITLE 'PARROTS - STAE: PRINT CBAL DEBUGGING INFORMATION'       S 058800
*********************************************************************** S 058900
*        STAE: PRINT CBAL DEBUGGING INFORMATION FOR LAST 5 CBAL'S     * S 059000
*********************************************************************** S 059100
         SPACE 1                                                        S 059200
STAE17   SUBIN SAVE=R4             PRESERVE RETRUN ADDRESS              S 059300
         CBAL  R4,PRINT            PRINT A BLANK LINE FOR SPACING       S 059400
         LINE  LINE29              ISSUE EXPLANATORY HEADING            S 059500
         LA    R1,CBALREGS         POINT REG1 AT CBAL WORK AREA         S 059600
         LA    R3,80               SET REG 3 TO LENGTH OF AREA          S 059700
         CBAL  R4,DUMPRINT         PRINT DEBUGGING DATA IN DUMP FORMAT  S 059800
         CBAL  R4,PRINT            PRINT A BLANK LINE FOR SPACING       S 059900
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 060000
         TITLE 'PARROTS - STAE: PRINT CSECT STATUS INFORMATION'         S 060100
*********************************************************************** S 060200
*        STAE: PRINT CSECT STATUS INFORMATION                         * S 060300
*********************************************************************** S 060400
         SPACE 1                                                        S 060500
STAE18   SUBIN SAVE=(R4,R8)        PRESERVE RETURN & SDWA ADDRESSES     S 060600
         AP    SYSPRINT+IOPSRCNT(4),=P'199' FORCE LINE COUNT HIGH       S 060700
         CBAL  R4,PRINT            FORCE SKIP TO NEW PAGE               S 060800
         MVC   5(L'LINE00,R5),LINE00 SET UP HEADING LINE                S 060900
         MVI   0(R5),SPCE3AFT      ESTABLISH FOLLOWING BLANK LINES      S 061000
         CBAL  R4,PRINT            PRINT HEADING LINE                   S 061100
         SR    R8,R8               ZEROISE WORK REGISTER                S 061200
         IC    R8,$NUMPOOL         GET NUMBER OF POOL/CSECT DESCRIPTORS S 061300
         LA    R7,$VPARTA          POINT AT 1ST CSECT DESCRIPTOR        S 061400
         B     *+8                 BYPASS FORWARD CHAINING              S 061500
STAE1801 LA    R7,SPDLGTH(,R7)     INCREMENT TO NEXT DESCRIPTOR         S 061600
         TM    0(R7),MSPDCSCT      IS THIS A CSECT DESCRIPTOR           S 061700
         BZ    STAE1802            LOOP BACK IF NOT                     S 061800
         L     R1,0(R7)            SET CSECT ADDRESS IN REG 1           S 061900
         LA    R1,0(,R1)           PURIFY HIGH ORDER BYTE               S 062000
         LTR   R1,R1               TEST IF ADDRESS EXISTS               S 062100
         BZ    STAE1802            BR IF NO ADDRESS TO GET NEXT         S 062200
         MVC   $WRKSNGL,0(R7)      SET ADDRESS IN WORK AREA             S 062300
         UNPK  $WRKAREA(9),$WRKSNGL(5) EXPAND FOR CONVERSION TO PRINTAB S 062400
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE INTO PRINTABLE       S 062500
         MVC   LINE30SA,$WRKAREA+2 SET ADDRESS IN MESSAGE               S 062600
         MVC   $WRKSNGL,4(R7)      SET LENGTH IN WORK AREA              S 062700
         UNPK  $WRKAREA(9),$WRKSNGL(5) EXPAND FOR CONVERSION TO PRINTAB S 062800
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE INTO PRINTABLE       S 062900
         MVC   LINE30LE,$WRKAREA+2 SET LENGTH IN MESSAGE                S 063000
         CBAL  R4,GETCSECT         SET UP MESSAGE 30 ETC                S 063100
         LINE  LINE30              PRINT CSECT INFORMATION              S 063200
STAE1802 BCT   R8,STAE1801         LOOP BACK IF ANY DESCRIPTORS LEFT    S 063300
        SUBOUT RESTORE=(R4,R8)     RESTORE AND RETURN TO CALLER         S 063400
         TITLE 'PARROTS - STAE: PRINT SYSTEM DIAGNOSTIC WORK AREA'      S 063500
*********************************************************************** S 063600
*        STAE: PRINT SYSTEM DIAGNOSTIC WORK AREA                      * S 063700
*********************************************************************** S 063800
         SPACE 1                                                        S 063900
STAE98   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 064000
         CBAL  R4,PRINT            SPACE BLANK LINE                     S 064100
         LINE  LINE98              ISSUE EXPLANATORY HEADING            S 064200
         LR    R1,R8               POINT AT STAE WORK AREA              S 064300
         LA    R3,SDWALEN          SET LENGTH OF ESTAE WORK AREA        S 064400
         CBAL  R4,DUMPRINT         PRINT STAE WORK AREA                 S 064500
        SUBOUT RESTORE=R4          RESTORE AND RETURN                   S 064600
         TITLE 'PARROTS - STAE: DECIDE WHETHER TO ALLOW DUMP'           S 064700
*********************************************************************** S 064800
*        STAE: DECIDE WHETHER TO ALLOW DUMP TO BE PRODUCED            * S 064900
*********************************************************************** S 065000
         SPACE 1                                                        S 065100
STAE99   SUBIN SAVE=R4             ENTER ROUTINE                        S 065200
         TM    SYSPRINT+IOPSSW,IOSWPRES+IOSWOPEN WAS SYSPRINT AVAILABLE S 065300
         BNO   STAE99X             ALLOW DUMP IF NOT AVAILABLE          S 065400
         TM    $ABNDCDE,FULLDUMP   WERE FULL DUMPS REQUESTED ( ADUMP )  S 065500
         BO    STAE99X             BR IF YES TO ALLOW FULL DUMP         S 065600
         NI    SDWACMPF,FF-SDWAREQ SET OFF REQUEST FOR DUMP             S 065700
         MVI   SDWAPDAT,0          NULLIFY PDATA OPTIONS                S 065800
         MVI   SDWASDAT,0          NULLIFY SDATA OPTIONS                S 065900
         OI    SDWAPDAT,SDWADPSW   REQUEST PSW SO WE DO SOME ABEND PROC S 066000
         CBAL  R4,PRINT            PRINT BLANK LINE TO SPACE            S 066100
         LINE  LINE17              TELL THAT DUMP SUPPRESSED            S 066200
STAE99X SUBOUT RESTORE=R4          RETURN TO CALLER                     S 066300
         TITLE 'PARROTS - STAE: DECIDE WHETHER RETRY SHOULD BE ISSUED'  S 066400
*********************************************************************** S 066500
*        STAE: DECIDE WHETHER A RETRY SHOULD BE ATTEMPTED             * S 066600
*********************************************************************** S 066700
         SPACE 1                                                        S 066800
STAE100  SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 066900
         TM    $PROCESS,PROCFDMP   IS THIS A 'PSEUDO' DUMP OF C/B       S 067000
         BO    STAE100R            GO TO RETRY IF YES                   S 067100
         TM    STAEFLG1,STF1USER   WAS THIS A PARROT USER ABEND         S 067200
         BO    STAE100X            DAMN ALL POINT IN RETRY IF YES       S 067300
         CLC   SDWACMPC(2),=X'1060' WAS THIS A S106 ABEND               S 067400
         BE    STAE100X            NO POINT IN A RETRY IF YES           S 067500
         TM    SORTSW,MSRTREQD     IS A SORT IN PROCESS                 S 067600
         BO    STAE100X            RETRY IMPOSSIBLE BECAUSE OF HIS ESTA S 067700
         TM    SWPARM,MPRMTEST     WERE TESTING AIDS REQUESTED          S 067800
         BZ    STAE100X            IF HE'S TOO PROUD TO ASK FOR HELP .. S 067900
         TM    STAEFLG1,STF1PARY   IS FAILING INSTRUCTION IN PARROT     S 068000
         BZ    STAE100X            SKIP RETRY IF NOT IN PARROT          S 068100
         CP    STAECNT,$MAXDMPS    HAVE WE REACHED THE DUMP LIMIT       S 068200
         BE    STAE100X            CALL IT A DAY IF YES                 S 068300
STAE100R CBAL  R4,PRINT            SPACE WITH BLANK LINE                S 068400
         MVC   5(L'LINE100,R5),LINE100 SET UP MESSAGE IN LINE           S 068500
         CBAL  R4,WTOPRINT         TELL OPERATOR AND REPORT OF RETRY    S 068600
         CBAL  R4,ALTERINS         ATTEMPT TO CORRECT FAILING INSTRUCTI S 068700
         NI    $PROCESS,FF-PROCFDMP SET FLAG SHOWING PSEUDO DUMP OF C/B S 068800
         L     R2,SDWAPMKA         GET ADDRESS OF NEXT SEQUENTIAL INSTR S 068900
         SR    R1,R1               ZEROISE WORK REGISTER                S 069000
         IC    R1,INSLGTH          RETRIEVE LENGTH OF FAILINF INSTRUCTI S 069100
         CLC   SDWAINTA,PAGEFLT    WAS THIS SOME SORT OF PAGE FAULT     S 069200
         BL    *+8                 BR IF ABEND WAS NOT A PAGE FAULT     S 069300
         LA    R2,0(R1,R2)         INCREMENT TO NEXT INSTRUCTION        S 069400
         CBAL  R4,SETRP            ISSUE 'SETRP' MACRO, ETC             S 069500
STAE100X SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         S 069600
         EJECT                                                          S 069700
*********************************************************************** S 069800
*        STAE: ISSUE 'SETRP' TO ESTABLISH RETRY                       * S 069900
*********************************************************************** S 070000
         SPACE 1                                                        S 070100
*        UPON ENTRY, THE INSTRUCTION ADDRESS AT WHICH TO RESTART MUST   S 070200
*         BE IN REGISTER 2.                                             S 070300
         SPACE 1                                                        S 070400
SETRP    SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 070500
         MVC   RUBREGS(64),SDWAGRSV SET REGS AT ENTRY TO ABEND IN RUB   S 070600
         SETRP WKAREA=(8),         SDWA ADDRESS IS IN REG 8            *S 070700
               DUMP=NO,            SUPPRESS THE DUMP                   *S 070800
               RC=4,               RETRY WITH SPECIFIED ADDRESS        *S 070900
               RETADDR=(2),        RETRY WITH NEXT INSTRUCTION         *S 071000
               RETREGS=YES,        REFRESH PGMS REGSTERS FROM SDWASRSV *S 071100
               RUB=RUBAREA,        REFRESH SDWASRSV WITH REGS AT ABEND *S 071200
               FRESDWA=YES         FREE SDWA PRIOR TO RETRY             S 071300
         CBAL  R4,REISSUST         RE-ISSUE STIMER FOR PARROT IF REQD   S 071400
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 071500
         TITLE 'PARROTS - ATTEMPT TO CORRECT FAILING INSTRUCTION'       S 071600
*********************************************************************** S 071700
*        STAE: ATTEMPT TO CORRECT FAILING INSTRUCTION                 * S 071800
*********************************************************************** S 071900
         SPACE 1                                                        S 072000
ALTERINS SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 072100
         TM    STAEFLG1,STF1PARY   IS INSTRUCTION WITHIN PARROT         S 072200
         BZ    ALTERINX            GO TO EXIT IF NOT IN PARROT          S 072300
         CLC   SDWACMPC(2),=X'0C10' WAS THIS AN OC1 ABEND               S 072400
         BNE   ALTERIN1            BR IF NOT AN 0C1                     S 072500
         L     R1,INSADDR          RETRIEVE ADDRESS OF FAILING INSTRUCT S 072600
ALTERIN0 CLC   0(2,R1),=X'0000'    IS IT AN UNASSEMBLED INSTRUCTION     S 072700
         BNE   ALTERINX            GO TO EXIT IF NOT                    S 072800
         MVC   0(2,R1),=X'0700'    REPLACE POTENTIAL 0C1 WITH NO-OP     S 072900
         LA    R1,2(,R1)           INCREMENT TO NEXT INSTRUCTION        S 073000
         B     ALTERIN0            SEE IF STILL WITHIN UNASSEMBLED INST S 073100
ALTERIN1 EQU   *                   CONTINUE PROCESSING                  S 073200
ALTERINX SUBOUT RESTORE=R4         RESTORE AND RETURN TO CALLER         S 073300
         TITLE 'PARROTS - STAE: RE-ISSUE STIMER IF REQUIRED'            S 073400
*********************************************************************** S 073500
*        STAE: RE-ISSUE STIMER FOR PARROT IF REQUIRED                 * S 073600
*********************************************************************** S 073700
         SPACE 1                                                        S 073800
*        PARROT USES STIMERS FOR A NUMBER OF REASONS :-                 S 073900
*         .IN INITIALISATION JUST IN CASE OF ERRORS                     S 074000
*         .TO DETECT LOOPS ( IF PARM=TEST AND/OR PARM=STIMER )          S 074100
*         .TO CONTROL THE SELF-MONITORING FUNCTION ( PARM=MONITOR )     S 074200
         SPACE 1                                                        S 074300
*        THIS ROUTINE DETERMINES IF, FOR ANY OF THESE REASONS, PARROT   S 074400
*         REQUIRES A STIMER, AND ISSUES IT IF NECESSARY.                S 074500
         SPACE 1                                                        S 074600
REISSUST SUBIN ,                   ENTER ROUTINE                        S 074700
         B     REISSUX             GO TO EXIT UNTIL PROBLEM SOLVED      S 074800
         TM    SWPARM,MPRMSTIM     IS LOOP-DETECTION REQUIRED           S 074900
         BZ    REISSU1             BR IF NO LOOP-DETECTION REQUIRED     S 075000
        STIMER TASK,$STIMEND,DINTVL=$DINTVL RE-ISSUE STIMER             S 075100
         B     REISSUX             GO TO ROUTINE EXIT                   S 075200
         SPACE 1                                                        S 075300
REISSU1  TM    SWPARM,MPRMMON      IS SELF-MONITORING FUNCTION REQ'D    S 075400
         BZ    REISSU2             BR IF NO SELF-MONITORING REQUIRED    S 075500
        STIMER TASK,$MONITOR,TUINTVL=$MONINT RE-ISSUE STIMER            S 075600
         B     REISSUX             GO TO ROUTINE EXIT                   S 075700
         SPACE 1                                                        S 075800
REISSU2  TM    $STATUS,STATINIT    ARE WE STILL IN INITIALISATION       S 075900
         BZ    REISSUX             BR IF NOT IN INITIALISATION          S 076000
        STIMER TASK,$STIMEND,DINTVL=$DINTVL RE-ISSUE STIMER             S 076100
         SPACE 1                                                        S 076200
REISSUX SUBOUT ,                   RETURN TO CALLER                     S 076300
         TITLE 'PARROTS - STAE: DETERMINE IF CONTROL BLOCK IS CURRENT'  S 076400
*********************************************************************** S 076500
*        STAE: DETERMINE IF CONTROL BLOCK IS CURRENT                  * S 076600
*********************************************************************** S 076700
         SPACE 1                                                        S 076800
*        DETERMINE IF THE CONTROL BLOCK WHOSE PREFIX IS POINTED TO BY   S 076900
*         R7 IS 'CURRENT' BY DETERMINING IF ITS ADDRESS IS IN ANY       S 077000
*         OF THE REGISTERS IN THE RELEVANT SAVE AREA.                   S 077100
         SPACE 1                                                        S 077200
         USING DUMPLINE,R5         ESTABLISH PRINT LINE ADDRESSABILITY  S 077300
CBCURENT SUBIN ,                   ENETR ROUTINE                        S 077400
         MVC   DMPLCHAR,CURRMESS   ASSUME CURRENT AND SET UP MESSAGE    S 077500
         MVC   DMPLAROW,ARROW      MOVE IN HIGH-LIGHTER                 S 077600
         LA    R15,16              SET TO LOOP THRU 16 REGISTERS IN S/A S 077700
         LA    R14,SDWAGRSV        POINT AT S/A IN SDWA                 S 077800
         TM    STAEFLG1,STF1RB     ARE THE LAST RB'S REGISTERS REQ'D    S 077900
         BZ    *+8                 BR IF NOT                            S 078000
         LA    R14,SDWASRSV        POINT AT RB'S S/A IN SDWA            S 078100
         TM    STAEFLG1,STF1PARY   IS INSTRUCTION IN PARROT CODE        S 078200
         BO    *+8                 BR IF YES                            S 078300
         LA    R14,SAVAREA         POINT AT PARROT'S SAVED S/A          S 078400
         LA    R1,CBPRLGTH(,R7)    POINT R1 AT START OF CONTROL BLOCK   S 078500
CBCUR01  L     R2,0(R14)           GET REGISTER FROM S/A                S 078600
         LA    R2,0(,R2)           PURIFY HIGHORDER BYTE                S 078700
         CR    R2,R1               DOES THIS REG CONTAIN C/B ADDRESS    S 078800
         BE    CBCURX              EXIT IF YES BECAUSE C/B IS CURENT    S 078900
         LA    R14,4(,R14)         POINT AT NEXT REG IN S/A             S 079000
         BCT   R15,CBCUR01         LOOP BACK IF ANY LEFT                S 079100
         MVI   DMPLCHAR,C' '       MOVE BLANK AT START OF CURRENT MSG . S 079200
         MVC   DMPLCHAR+1(L'DMPLCHAR-1),DMPLCHAR ... AND PROPAGATE      S 079300
         MVC   DMPLAROW,$SPACES    BLANK OUT HIGH-LIGHTING ARROW        S 079400
CBCURX  SUBOUT ,                   RETURN TO CALLER                     S 079500
         DROP  R5                  DROP DUMP-LINE ADDRESSABILITY        S 079600
         TITLE 'PARROTS - STAE: ISSUE WTO AND PRINT LINE TO SYSPRINT'   S 079700
*********************************************************************** S 079800
*        STAE: ISSUE WTO AND PRINT LINE ON SYSPRINT                   * S 079900
*********************************************************************** S 080000
         SPACE 1                                                        S 080100
*        THIS ROUTINE CONVERTS A PRINT LINE TEMPORARILY INTO A          S 080200
*         'WTO MF=L' BY INSERTING THE NECESSARY WTO FLAGS ( MESSAGE     S 080300
*         LENGTH AND ROUTING FLAGS ) IMMEDIATELY BEFORE THE MESSAGE     S 080400
*         WHICH STARTS AT POSITION 5 IN THE PRINT LINE.  THE ROUTINE    S 080500
*         THEN ISSUES THE WTO, BLANKS OUT THE FLAGS, AND PRINTS THE     S 080600
*         LINE.                                                         S 080700
         SPACE 1                                                        S 080800
WTOPRINT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 080900
         TM    $PROCESS,PROCFDMP   IS THIS A 'DUMP' OF CONTROL BLOCKS   S 081000
         BO    WTOPRNT3            BYPASS WTO IF YES                    S 081100
         TM    STAEFLG1,STF1WTO    IS WTO TO BE ISSUED REGARDLESS       S 081200
         BO    WTOPRNT0            BR IF YES TO ISSUE WTO               S 081300
         TM    SYSPRINT+IOPSSW,IOSWPRES IS SYSPRINT STATEMENT PRESENT   S 081400
         BO    WTOPRNT3            NO NEED TO ISSUE WTOS IF YES         S 081500
WTOPRNT0 LA    R1,132(,R5)         POINT AT END OF PRINT LINE           S 081600
WTOPRNT1 CLI   0(R1),C' '          IS THIS A BLANK                      S 081700
         BNE   WTOPRNT2            IF NOT BLANK THEN FOUND MESSAGE END  S 081800
         BCT   R1,WTOPRNT1         DECREMENT TO PREVIOUS CHARACTER & TE S 081900
WTOPRNT2 SR    R1,R5               DETERMINE LENGTH OF MESSAGE          S 082000
         STH   R1,WTOFLAGS         STORE LENGTH IN WTO FLAG AREA        S 082100
         MVC   1(4,R5),WTOFLAGS    SET UP FLAGS PRIOR TO MESSAGE        S 082200
         LA    R1,1(,R5)           POINT AT PSEUDO 'WTO MF=L'           S 082300
         SVC   35                  ISSUE PRINT LINE AS WTO              S 082400
         MVC   1(4,R5),$SPACES     BLANK OUT WTO FLAGS                  S 082500
WTOPRNT3 CBAL  R4,PRINT            PRINT LINE ON SYSPRINT               S 082600
         NI    STAEFLG1,FF-STF1WTO SET OFF 'WTO FORCE' FLAG             S 082700
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 082800
         TITLE 'PARROTS - STAE: CONVERT HEX TO PRINTABLE'               S 082900
*********************************************************************** S 083000
*        STAE: CONVERT HEX TO PRINTABLE AND SET UP IN PRINT LINE      * S 083100
*********************************************************************** S 083200
         SPACE 1                                                        S 083300
*        THIS SUBROUTINE CONVERTS A NUMBER OF ADJACENT 4-BYTE AREAS     S 083400
*         FROM HEXADECIMAL TO THE PRINTABLE EQUIVALENT, AND SETS THE    S 083500
*         8-CHARACTER STRINGS IN THE PRINT LINE.                        S 083600
         SPACE 1                                                        S 083700
*        ON ENTRY:                                                      S 083800
*         R1  - ADDRESS OF 1ST 4-BYTE AREA TO PRINT                     S 083900
*         R2  - NUMBER OF 4-BYTE AREAS TO PRINT                         S 084000
*         R6  - POSITION IN PRINT LINE OF 1ST 8-CHARACTER STRING        S 084100
         SPACE 1                                                        S 084200
*        ON EXIT:                                                       S 084300
*         R1  - BYTE FOLLOWING LAST ONE EXPANDED                        S 084400
*         R6  - NEXT AVAILABLE PRINT POSITION                           S 084500
         SPACE 1                                                        S 084600
*        THE FORMAT OF THE OUTPUT DATA IN THE PRINT LINE IS AN EIGHT    S 084700
*         CHARACTER EXPANSION OF FOUR BYTES, FOLLOWED BY A SPACE,       S 084800
*         FOLLOWED BY THE NEXT EIGHT CHARACTER EXPANSION.  AFTER EVERY  S 084900
*         FOURTH SET OF EIGHT CHARACTERS, THE SPACE IS 4 BYTES LONG     S 085000
*         INSTEAD OF 1 BYTE LONG.                                       S 085100
*        NOTE THAT R15 IS USED BY THIS ROUTINE TO CONTROL THE INTERNAL  S 085200
*         SPACING LOOP THAT YIELDS THIS OUTPUT FORMAT.                  S 085300
         SPACE 1                                                        S 085400
HEXPRINT SUBIN ,                   ENTER ROUTINE                        S 085500
         LA    R15,4               SET TO LOOP 4 TIMES BEFORE BIG SPACE S 085600
HEXPRNT1 MVC   $WRKAREA+9(4),0(R1) MOVE FOUR BYTES TO WORK AREA         S 085700
         UNPK  $WRKAREA(9),$WRKAREA+9(5) UNPACK 4 + GARBAGE BYTE        S 085800
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 085900
         MVC   0(8,R6),$WRKAREA    MOVE PRINTABLE TO LINE               S 086000
         LA    R6,9(,R6)           INCREMENT TO NEXT PRINT POSITION     S 086100
         BCT   R15,HEXPRNT2        BR IF NOT TIME FOR BIG SPACE         S 086200
         LA    R6,3(,R6)           INCREMENT OVER BIG SPACE             S 086300
         LA    R15,4               RE-ESTABLISH LOOP FOR NEXT TIME      S 086400
HEXPRNT2 LA    R1,4(,R1)           POINT AT NEXT 4 BYTES TO PRINT       S 086500
         BCT   R2,HEXPRNT1         LOOP BACK FOR NEXT ELEMENT           S 086600
        SUBOUT ,                   RETURN TO CALLER                     S 086700
         TITLE 'PARROTS - STAE: CREATE DUMP FORMAT OUTPUT'              S 086800
*********************************************************************** S 086900
*        STAE: CREATE DUMP-FORMAT PRINT OUTPUT                        * S 087000
*********************************************************************** S 087100
         SPACE 1                                                        S 087200
*        THIS ROUTINE PRINTS DATA IN THE SAME FORMAT AS THE ABEND RTNS. S 087300
         SPACE 1                                                        S 087400
*        ON ENTRY:                                                      S 087500
*         R1  - ADDRESS OF START OF AREA TO PRINT                       S 087600
*         R3  - LENGTH TO PRINT IN DUMP FORMAT                          S 087700
         SPACE 1                                                        S 087800
         USING DUMPLINE,R5         ESTABLISH DUMP LINE ADDRESSABILITY   S 087900
DUMPRINT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 088000
DUMPRNT1 ST    R1,$WRKSNGL         STORE CURRENT START ADDRESS          S 088100
         UNPK  $WRKAREA(9),$WRKSNGL(5) UNPACK FOR TRANSLATE             S 088200
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 088300
         MVC   DMPLADR,$WRKAREA+2  SET ADDRESS IN LINE                  S 088400
         MVI   DMPLAST1,C'*'       SET 1ST DELIMITING ASTERISK          S 088500
         MVI   DMPLAST2,C'*'       SET 2ND DELIMITING ASTERISK          S 088600
         CH    R3,=H'32'           IS LENGTH LEFT GREATER THAN 32 BYTES S 088700
         BNH   DUMPRNT2            BR IF 32 BYTES OR LESS LEFT          S 088800
         MVC   DMPLCHAR,0(R1)      SET UNEXPANDED DATA IN LINE          S 088900
         TR    DMPLCHAR,DUMPTABL   TRANSLATE UNPRINTABLE TO '.'         S 089000
         LA    R2,8                SET UP TO HEXPAND 8 4-BYTE AREAS     S 089100
         LA    R6,DMPLHEX          POINT AT STARTING PRINT POSN         S 089200
         CBAL  R4,HEXPRINT         EXPAND 32 BYTES & MOVE TO LINE       S 089300
         CBAL  R4,PRINT            PRINT LINE                           S 089400
         L     R1,$WRKSNGL         RETRIEVE ADDRESS OF AREA             S 089500
         LA    R1,32(,R1)          INCREMENT PAST DATA JUST PRINTED     S 089600
         SH    R3,=H'32'           DECREMENT LENGTH BY AMOUNT PRINTED   S 089700
         B     DUMPRNT1            LOOP BACK FOR NEXT BIT OF DATA       S 089800
         EJECT                                                          S 089900
*********************************************************************** S 090000
*        CREATE DUMP-FORMAT PRINT OUTPUT ( CONT'D )                   * S 090100
*********************************************************************** S 090200
         SPACE 1                                                        S 090300
DUMPRNT2 BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE         S 090400
         EX    R3,DUMPMVC1         MOVE UNEXPANDED DATA TO LINE         S 090500
         LA    R6,DMPLHEX          POINT AT STARTING POSITION           S 090600
         LA    R3,1(,R3)           RESET TRUE LENGTH                    S 090700
         LR    R2,R3               SET LENGTH IN R2                     S 090800
         SRL   R2,2                DIVIDE BY 4 TO GET NO. OF 4-BYTE UNI S 090900
         LTR   R2,R2               IS R2=0: I.E. RESIDUE WAS < 4 BYTES  S 091000
         BZ    *+8                 BYPASS HEXPRINT IF NOTHING TO HEXPAN S 091100
         CBAL  R4,HEXPRINT         HEXPAND DATA AND SET IN LINE         S 091200
         SLL   R3,30               CLEAR HIGH ORDER BITS ....           S 091300
         SRL   R3,29                ... TO GET RESIDUAL LENGTH * 2      S 091400
         LTR   R3,R3               TEST IF RESIDUAL LENGTH IS ZERO      S 091500
         BZ    DUMPRNT3            BR IF 0 COS LGTH WAS DIVISIBLE BY 4  S 091600
         UNPK  $WRKAREA(7),0(4,R1) UNPACK MAXIMUM LENGTH LEFT           S 091700
         TR    $WRKAREA(6),HEXTABLE-C'0' TRANSLATE TO PRINTABLE         S 091800
         BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE         S 091900
         EX    R3,DUMPMVC2         MOVE LAST HEXPANDED DATA TO LINE     S 092000
DUMPRNT3 TR    DMPLCHAR,DUMPTABL   TRANSLATE UNPRINTABLE TO '.'         S 092100
         CBAL  R4,PRINT            PRINT LAST LINE OF DUMP DATA         S 092200
        SUBOUT RESTORE=R4          RESTORE AND RETURN TO CALLER         S 092300
         DROP  R5                  DROP DUMP-FORMAT LINE ADDRESSABILITY S 092400
         TITLE 'PARROTS - STAE: DETERMINE WHICH CSECT CONTAINS ADDRES'  S 092500
*********************************************************************** S 092600
*        STAE: DETERMINE WHICH PARROT CSECT CONTAINS ADDRESS          * S 092700
*********************************************************************** S 092800
         SPACE 1                                                        S 092900
*        THIS ROUTINE DETERMINES WHICH PARROT CSECT CONTAINS THE        S 093000
*         SUPPLIED ADDRESS.                                             S 093100
*        ON ENTRY: R1  - ADDRESS TO BE LOCATED                          S 093200
*        ON EXIT : R14 - ADDRESS OF CSECT IF APPROPRIATE                S 093300
*                  $WRKAREA(8) - DISPLACEMENT OF ADDRESS IN CSECT       S 093400
         SPACE 1                                                        S 093500
*        UPON RETURN, THE PSW COND CODE IS SET SUCH THAT THE CALLER     S 093600
*         CAN MAKE THE FOLLOWING CONDITIONAL TESTS :-                   S 093700
*              BE  - MATCH FOUND: R14 CONTAINS CSECT ADDRESS            S 093800
*              BH  - ADDRESS NOT MATCHED: R14 IRRELEVANT                S 093900
*              BNE - ADDRESS NOT MATCHED: R14 IRRELEVANT                S 094000
GETCSECT SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              S 094100
         LTRR  R1,R1               PURIFY ADDRESS AND TEST FOR VALUE    S 094200
         BZ    GETCSCTY            EXIT SHOWING NOT FOUND IF ZERO ADDR  S 094300
         LA    R14,0(,R13)         POINT R14 AT CCB = START OF PARROT   S 094400
         S     R14,=A(CSIDLGTH)    POINT AT PRIMARY PREFIX              S 094500
         L     R15,$VPARTA        POINT R15 AT PARROTA = END OF PAR3    S 094600
         LA    R15,0(,R15)         PURIFY HIGH ORDER BYTE               S 094700
         CR    R1,R14              IS ADDRESS BELOW START OF PARROT     S 094800
         BL    GETCSCT0            BR IF BELOW TO LOOP THRU DESCRIPTORS S 094900
         CR    R1,R15              IS ADDRESS WITHIN PARROT CODING      S 095000
         BNH   GETCSCT3            BR IF WITHIN PARROT TO GET DISPLACE  S 095100
GETCSCT0 SR    R10,R10             ZEROISE WORK REGISTER                S 095200
         IC    R10,$NUMPOOL        GET NUMBER OF POOL/CSECT DEFINITIONS S 095300
         LA    R2,$VPARTA         POINT AT FIRST CSECT DESCRIPTOR       S 095400
GETCSCT1 LM    R14,R15,0(R2)       RETRIEVE CSECT ADDRESS AND LENGTH    S 095500
         TM    0(R2),MSPDCSCT      IS THIS A CSECT DEFINITION           S 095600
         BZ    GETCSCT2            BR IF NOT TO INCREMENT TO NEXT DESC  S 095700
         LA    R14,0(R14)          PURIFY HIGH ORDER BYTE OF ADDRESS    S 095800
         LA    R15,0(,R15)         PURIFY HIGH ORDER BYTE OF LENGTH     S 095900
         AR    R15,R14             POINT R15 AT END OF CSECT            S 096000
         CR    R1,R14              IS INSTRUCTION BELOW START OF CSECT  S 096100
         BL    GETCSCT2            GO TO NEXT DESRIPTOR IF BELOW        S 096200
         CR    R1,R15              IS INSTRUCTION ABOVE START OF CSECT  S 096300
         BL    GETCSCT3            BR IF ADDRESS IS IN THIS CSECT       S 096400
GETCSCT2 LA    R2,SPDLGTH(,R2)     INCREMENT TO NEXT DESCRIPTOR         S 096500
         BCT   R10,GETCSCT1        LOOP BACK IF DESCRIPTORS LEFT        S 096600
GETCSCTY CLI   *,Y                 SET COND CODE HIGH TO SHOW NO MATCH  S 096700
         B     GETCSCTX            GO TO EXIT                           S 096800
         EJECT                                                          S 096900
*********************************************************************** S 097000
*        STAE: DETERMINE WHICH PARROT CSECT CONTAINS ADDRESS ( CONT'D ) S 097100
*********************************************************************** S 097200
         SPACE 1                                                        S 097300
GETCSCT3 CBAL  R4,GETDISP          DETERMINE DISPLACEMENT OF INSTRUCTIO S 097400
*                                  SET UP STATION-IDENTIFICATION        S 097500
         USING CSECTID,R14         ESTABLISH CSECT PREFIX ADDRESSABILIT S 097600
         MVC   LINE16N,CSIDNAME    ADD CSECT NAME TO MESSAGE            S 097700
         MVC   LINE16V,CSIDVERS+5  ADD VERSION NUMBER TO MESSAGE        S 097800
         MVC   LINE16T,CSIDTIME    ADD TIME OF ASSEMBLY TO MESSAGE      S 097900
         MVC   LINE16D,CSIDDATE    ADD DATE OF ASSEMBLY TO MESSAGE      S 098000
         MVC   LINE30N,CSIDNAME    ADD CSECT NAME TO MESSAGE            S 098100
         MVC   LINE30V,CSIDVERS+5  ADD VERSION NUMBER TO MESSAGE        S 098200
         MVC   LINE30T,CSIDTIME    ADD TIME OF ASSEMBLY TO MESSAGE      S 098300
         MVC   LINE30D,CSIDDATE    ADD DATE OF ASSEMBLY TO MESSAGE      S 098400
         DROP  R14                 DROP SECT PREFIX ADDRESSABILITY      S 098500
         CLI   *,X                 SET COND CODE TO SHOW CSECT FOUND    S 098600
GETCSCTX SUBOUT RESTORE=R4         RETURN TO CALLER                     S 098700
         TITLE 'PARROTS - STAE: DETERMINE DISPLACEMENT OF INSTRUCTION'  S 098800
*********************************************************************** S 098900
*        STAE: DETERMINE DISPLACEMENT OF ADDRESS WITHIN CSECT         * S 099000
*********************************************************************** S 099100
         SPACE 1                                                        S 099200
*        ON ENTRY: R1  - ADDRESS WHOSE DISPLACEMENT IS REQUIRED         S 099300
*                  R14 - ADDRESS OF APPROPRIATE CSECT                   S 099400
*        ON EXIT : R1  - DISPLACEMENT AS A BINARY FULLWORD              S 099500
*                  $WRKAREA(8) - PRINTABLE EQUIVALENT OF DISPLACEMENT   S 099600
         SPACE 1                                                        S 099700
GETDISP  SUBIN ,                   ENETR ROUTINE                        S 099800
         SR    R1,R14              DETERMINE DISPLACEMENT               S 099900
         ST    R1,$WRKSNGL         STORE DISP IN WORK AREA              S 100000
         UNPK  $WRKAREA(9),$WRKSNGL(5) EXPAND FOR CONVERSION TO PRINTAB S 100100
         TR    $WRKAREA(8),HEXTABLE-C'0' TRANSLATE INTO PRINTABLE       S 100200
        SUBOUT ,                   RETURN TO CALLER                     S 100300
         TITLE 'PARROTS - HEXADECIMAL-EBCDIC EXPANSION ROUTINE'         S 100400
*********************************************************************** S 100500
*        HEXADECIMAL-TO-EBCDIC EXPANSION ROUTINE                      * S 100600
*********************************************************************** S 100700
         SPACE 1                                                        S 100800
*        THIS ROUTINE, OF WHICH I AM INORDINATELY PROUD, IS THE FIRST   S 100900
*         BAL ROUTINE I WROTE AFTER COMPLETING MY TRAINING.  AT THE     S 101000
*         TIME I NEEDED THIS ROUTINE, THE ONLY ALTERNATIVE OF WHICH     S 101100
*         MY WORTHY LEADER COULD INFORM ME WAS A 512-BYTE TABLE OF 256  S 101200
*         2-BYTE ELEMENTS TO BE INDEXED BY THE BYTE TO PRINT.  EVEN IN  S 101300
*         THOSE EARLY DAYS, MY GENIUS WAS APPARENT.                     S 101400
         SPACE 1                                                        S 101500
*        THE ROUTINE 'DOUBLE SPACES' A FULLWORD OF CORE INTO TWO WORDS, S 101600
*         EACH BYE OF WHICH CONSISTS OF A HEX ZERO FOLLOWED BY A HEX    S 101700
*         DIGIT.  THESE TWO WORDS ARE THEN TRANSLATED AGAINST THE       S 101800
*         16-BYTE TABLE TO GIVE AN EIGHT-BYTE AREA WHICH WHEN PRINTED   S 101900
*         IS EQUIVALENT TO THE ORIGINAL EIGHT HEX CHARACTERS IN THE     S 102000
*         SUPPLIED FULLWORD.                                            S 102100
         SPACE 1                                                        S 102200
*        UPON ENTRY, R1 CONTAINS THE ADDRESS OF THE FOUR BYTES          S 102300
*         TO BE CONVERTED FOR PRINTING, AND UPON EXIT THE FIRST EIGHT   S 102400
*         BYTES OF $WRKAREA CONTAIN THE PRINTABLE EQUIVALENT.           S 102500
         SPACE 1                                                        S 102600
*        NOTE THAT THE LOGIC OF THIS ROUTINE REQUIRES A WORK AREA ( IN  S 102700
*         THIS CASE '$WRKAREA' ) OF AT LEAST 12 BYTES IN LENGTH ).      S 102800
         SPACE 1                                                        S 102900
HEXPAND  SUBIN ,                   ENTER ROUTINE                        S 103000
         MVC   $WRKAREA(4),0(R1)   MOVE BYTES TO WORK AREA              S 103100
         LA    R1,$WRKAREA         POINT AT START OF WORK AREA          S 103200
         LA    R2,8                ESTABLISH LOOP                       S 103300
HEXPNDL  MVO   0(5,R1),0(4,R1)     CREATE HEX-0,HEX-DIGIT IN POS 1      S 103400
         LA    R1,1(,R1)           INCREMENT TO NEXT BYTE               S 103500
         BCT   R2,HEXPNDL          LOOP BACK TO PERFORM MVO EIGHT TIMES S 103600
         TR    $WRKAREA(8),HEXTABLE TRANSLATE TO PRINTABLE CHARS        S 103700
        SUBOUT ,                   RETURN TO CALLER                     S 103800
         SPACE 5                                                        S 103900
*        TO EXPLAIN FURTHER:                                            S 104000
*         ASSUME THAT UPON ENTRY $WRKAREA CONTAINS                      S 104100
*              X'ABCDEF12XXXXXXXXXXXXXXXX'                              S 104200
*         AFTER EXECUTION OF THE FIRST MVO IT WILL CONTAIN              S 104300
*              X'0ABCDEF12XXXXXXXXXXXXXXX'                              S 104400
*         AFTER EXECUTION OF THE SECOND MVO IT WILL CONTAIN             S 104500
*              X'0A0BCDEF12XXXXXXXXXXXXXX'                              S 104600
*         AFTER EXECUTION OF ALL 8 MVO'S IT WILL CONTAIN                S 104700
*              X'0A0B0C0D0E0F0102XXXXXXXX'                              S 104800
*         AND THIS WILL TRANSLATE TO                                    S 104900
*              X'C1C2C3C4C5C6F1F2XXXXXXXX'  ( C'ABCDEF12' )             S 105000
         SPACE 1                                                        S 105100
*        CLEVER ISN'T IT ?                                              S 105200
         EJECT                                                          S 105300
*********************************************************************** S 105400
*        HEXADECIMAL-TO-EBCDIC CONVERSION ROUTINE 2.                  * S 105500
*********************************************************************** S 105600
         SPACE 1                                                        S 105700
*        HOWEVER, CLEVER THOUGH MY ROUTINE IS, IT IS STILL UNNECESSARIL S 105800
*         CUMBERSOME.  THE FOLLOWING ROUTINE, WHICH I NOTICED WHILE     S 105900
*         BROWSING THROUGH J.E.ABBEY'S CODE, PERFORMS A SIMILAR FUNCTIO S 106000
*         IN FAR FEWER INSTRUCTIONS.                                    S 106100
         SPACE 1                                                        S 106200
HEXPAND2 SUBIN ,                   ENETR ROUTINE                        S 106300
         UNPK  $WRKAREA(9),0(5,R1)    CREATE HEX-F,HEX-DIGIT            S 106400
         TR    $WRKAREA(8),HEXTABLE-C'0' CONVERT TO PRINTABLE           S 106500
        SUBOUT ,                   RETURN TO CALLER                     S 106600
         SPACE 5                                                        S 106700
*        ASSUME THAT UPON ENTRY $WRKAREA CONTAINS                       S 106800
*              X'ABCDEF12XXXXXXXXXXXXXXXX'                              S 106900
*        AFETR THE UNPK IT WILL CONTAIN                                 S 107000
*              X'FAFBFCFDFEFFF1F2XXXXXXXXXX'                            S 107100
*        AND AFTER THE TARNSLATE WILL CONTAIN                           S 107200
*              X'C1C2C3C4C5C6F1F2XXXXXXXXXX'  ( C'ABCDEF12' )           S 107300
         SPACE 1                                                        S 107400
*        I HAVE TO ADMIT THAT THIS IS EVEN CLEVERER.                    S 107500
         TITLE 'PARROTS - STAE: EXECUTED INSTRUCTIONS'                  S 107600
*********************************************************************** S 107700
*        STAE: EXECUTED INSTRUCTIONS                                  * S 107800
*********************************************************************** S 107900
         SPACE 1                                                        S 108000
INSMVC   MVC   5+L'LINE04(0,R5),$WRKAREA MOVE INSRTUCTION IMAGE TO LINE S 108100
DUMPMVC1 MVC   DMPLCHAR-DUMPLINE(0,R5),0(R1) MOVE DATA TO DUMP LINE     S 108200
DUMPMVC2 MVC   0(0,R6),$WRKAREA    ADD RESIDUAL DATA TO HEXPANDED DATA  S 108300
         TITLE 'PARROTS - MISCELLANEOUS CONSTANTS AND FIELDS'           S 108400
*********************************************************************** S 108500
*        MISCELLANEOUS CONSTANTS                                      * S 108600
*********************************************************************** S 108700
         SPACE 1                                                        S 108800
WTOFLAGS DC    AL2(130),AL2(0)     LENGTH AND ROUTING FLAGS FOR WTO     S 108900
INSADDR  DC    F'0'                ADDRESS OF FAILING INSTRUCTION       S 109000
SAVAREA  DS    18F                 COPY OF PARROT S/A AT ENTRY TO ABEN  S 109100
         SPACE 1                                                        S 109200
PAGEFLT  DC    H'16'               LOWEST INTERRUPT CODE ASSOC WITH PAG S 109300
         SPACE 1                                                        S 109400
INSLGTH  DC    X'0'                LENGTH OF FAILING INSTRUCTION        S 109500
         EJECT                                                          S 109600
*********************************************************************** S 109700
*        HEX-TO-EBCDIC TRANSLATION TABLE                              * S 109800
*********************************************************************** S 109900
         SPACE 1                                                        S 110000
HEXTABLE DC    C'0123456789ABCDEF' TRANSLATE TABLE                      S 110100
         SPACE 5                                                        S 110200
*********************************************************************** S 110300
*        STAE PROCESSING FLAGS                                        * S 110400
*********************************************************************** S 110500
         SPACE 1                                                        S 110600
*        NOTE THAT STAEFLG1 IS RE-INITIALISED UPON ENTRY TO THE ESTAE   S 110700
*         EXIT, AND CANNOT BE USED TO TRANSMIT INFORMATION FROM ONE     S 110800
*         ABEND TO ANOTHER.  STAEFLG2 MAY BE USED FOR THAT PURPOSE.     S 110900
         SPACE 1                                                        S 111000
STAEFLG1 DC    X'00'               PROCESSING FLAG BYTE 1               S 111100
         SPACE 1                                                        S 111200
STF1USER EQU   1                   USER ABEND IN PROCESS                S 111300
STF1PARY EQU   2                   INSTRUCTION IS WITHIN PARROT CODE    S 111400
STF1RB   EQU   4                   USE PSW AND REGISTERS OF LAST RB     S 111500
STF1WTO  EQU   8                   ISSUE WTO IN WTOPRINT RTN REGARDLESS S 111600
         SPACE 5                                                        S 111700
STAEFLG2 DC    X'00'               PROCESSING FLAG BYTE 2               S 111800
         SPACE 1                                                        S 111900
STF2UNUS EQU   1                   DUMMY FLAG ENTRY                     S 112000
         SPACE 5                                                        S 112100
STAECNT  DC    PL2'0'              COUNT OF ABENDS PROCESSED            S 112200
         SPACE 5                                                        S 112300
SASDWARG DS    16F                 S/A FOR SDWAGRSV ( FOR USER 28 )     S 112400
FPREGWA  DC    D'0'                WORK AREA FOR FP REGISTER HEXPANSION S 112500
         DS    H                   UNUSED                               S 112600
RUBAREA  DS    0CL66               REGISTER UPDATE BLOCK                S 112700
RUBFLAGS DC    X'FFFF'             REPLACE ALL REGISTERS                S 112800
RUBREGS  DS    16F                 REGISTERS 0 - 15 FOR RETRY ROUTINE   S 112900
         SPACE 5                                                        S 113000
         LTORG                                                          S 113100
         TITLE 'PARROTS - STAE: DUMP TRANSLATE TABLE'                   S 113200
*********************************************************************** S 113300
*        DUMP TRANLATE TABLE ( TO CONVERT UNPRINTABLE TO '.' )        * S 113400
*********************************************************************** S 113500
         SPACE 1                                                        S 113600
DUMPTABL DC    256C'.'             TABLE OF PERIODS                     S 113700
         ORG   DUMPTABL+C' '       POINT AT POSJ OF BLANK               S 113800
         DC    C' '                                                     S 113900
         ORG   DUMPTABL+C'A'       POINT AT START OF ALPHA              S 114000
         DC    C'ABCDEFGHI'                                             S 114100
         ORG   DUMPTABL+C'J'                                            S 114200
         DC    C'JKLMNOPQR'                                             S 114300
         ORG   DUMPTABL+C'S'                                            S 114400
         DC    C'STUVWXYZ'                                              S 114500
         ORG   DUMPTABL+C'0'                                            S 114600
         DC    C'0123456789'                                            S 114700
         ORG                                                            S 114800
         TITLE 'PARROTS - STAE: PRINTER MESSAGES'                       S 114900
*********************************************************************** S 115000
*        PRINTER MESSAGES                                             * S 115100
*********************************************************************** S 115200
         SPACE 1                                                        S 115300
LINE00   DS    0CL120                                                   S 115400
         DC    C'PRTS-000-I',CL35' ',C'PARROT - ABEND ANALYSIS',CL36' ' S 115500
         DC    C'ABEND NUMBER'                                          S 115600
LINE00N  DC    C' 999'                                                  S 115700
LINE00M  DC    X'40202020'                                              S 115800
LINE01   DS    0CL79                                                    S 115900
         DC    C'PRTS-001-I  THIS IS PARROT VERSION '                   S 116000
LINE01V  DC    C'XYZ'                                                   S 116100
         DC    C'    ( ASSEMBLED AT '                                   S 116200
LINE01T  DC    C'HH.MM.SS'                                              S 116300
         DC    C' ON '                                                  S 116400
LINE01D  DC    C'01/01/77'                                              S 116500
         DC    C' )'                                                    S 116600
LINE02   DC    C'PRTS-002-I  ABEND CODE IS : '                          S 116700
LINE03   DC    C'PRTS-003-I  PSW AT TIME OF ABEND WAS: '                S 116800
LINE04   DC    C'PRTS-004-I  IMAGE OF FAILING INSTRUCTION WAS: '        S 116900
LINE05   DS    0CL71                                                    S 117000
         DC    C'PRTS-005-I  INSTRUCTION IS WITHIN CSECT '              S 117100
LINE05C  DC    C'XXXXXXXX'                                              S 117200
         DC    C' AT DISPLACEMENT '                                     S 117300
LINE05D  DC    C'DDDDDD'                                                S 117400
LINE06   DC    C'PRTS-006-I  FAILING INSTRUCTION IS NOT WITHIN PARROT'  S 117500
LINE07   DS    0CL79                                                    S 117600
         DC    C'PRTS-007-I  FAILING INSTRUCTION IS IN MODULE . '       S 117700
LINE07M  DC    C'XXXXXXXX'                                              S 117800
         DC    C' AT DISPLACEMENT '                                     S 117900
LINE07D  DC    C'DDDDDD'                                                S 118000
LINE08   DS    0CL74                                                    S 118100
         DC    C'PRTS-008-I  LAST CBAL WAS ISSUED BY MODULE '           S 118200
LINE08M  DC    C'XXXXXXXX'                                              S 118300
         DC    C' AT DISPLACEMENT '                                     S 118400
LINE08D  DC    C'DDDDDD'                                                S 118500
LINE09   DS    0CL74                                                    S 118600
         DC    C'PRTS-009-I  LAST CBAL WAS ISSUED TO MODULE '           S 118700
LINE09M  DC    C'XXXXXXXX'                                              S 118800
         DC    C' AT DISPLACEMENT '                                     S 118900
LINE09D  DC    C'DDDDDD'                                                S 119000
LINE09ND EQU   *                   END OF LINE09                        S 119100
LINE10   DC    C'PRTS-010-I  CONTENTS OF REGISTERS AT TIME OF ABEND:-'  S 119200
LINE11   DC    C'PRTS-011-I  CONTENTS OF THE INPUT RECORD IMAGE:-'      S 119300
LINE12   DC    C'PRTS-012-I  CONTENTS OF THE OUTPUT RECORD||WORKING STO*S 119400
               RAGE AREA:-'                                             S 119500
LINE13   DC    C'PRTS-013-I  CONTENTS OF PARROT REGISTER SAVE AREA AT E*S 119600
               NTRY TO ABEND:-'                                         S 119700
LINE14   DC    C'PRTS-014-I  CONTENTS OF CURRENT RECORD||WORK AREA:-'   S 119800
LINE15   DC    C'PRTS-015-I  CONTENTS OF USER EXIT LINKAGE AREA:-'      S 119900
LINE16   DS    0CL94                                                    S 120000
         DC    C'PRTS-016-I            MODULE '                         S 120100
LINE16N  DC    CL8' '              CSECT NAME                           S 120200
         DC    C' IS VERSION '                                          S 120300
LINE16V  DC    CL3' '              MODULE VERSION NUMBER                S 120400
         DC    C' AND WAS ASSEMBLED AT '                                S 120500
LINE16T  DC    CL8' '              TIME OF ASSEMBLY                     S 120600
         DC    C' ON '                                                  S 120700
LINE16D  DC    CL8' '              DATE OF ASSEMBLY                     S 120800
LINE17   DC    C'PRTS-017-I  DUMP OUTPUT HAS BEEN SUPPRESSED.  CODE PAR*S 120900
               M=ADUMP TO GET DUMP'                                     S 121000
LINE18   DC    C'PRTS-018-I  CONTENTS OF THE CCB ( CENTRAL CONTROL BLOC*S 121100
               K ) :-'                                                  S 121200
LINE19   DC    C'PRTS-019-I  CONTENTS OF CONTROL BLOCK '                S 121300
LINE20   DC    C'PRTS-020-I  END OF PARROT CONTROL BLOCKS'              S 121400
LINE21   DS    0CL74                                                    S 121500
         DC    C'PRTS-021-I  CURRENT RETURN ADDRESS IS TO - '           S 121600
LINE21M  DC    C'XXXXXXXX'                                              S 121700
         DC    C' AT DISPLACEMENT '                                     S 121800
LINE21D  DC    C'DDDDDD'                                                S 121900
LINE21SA DC    C'SAVE AREA RETURN ADDRESS IS TO'                        S 122000
LINE22   DS    0CL57                                                    S 122100
         DC    C'PRTS-022-I  R12 AT ENTRY TO ABEND IS THE BASE OF '     S 122200
LINE22M  DC    8C'$'                                                    S 122300
LINE23   DC    C'PRTS-023-I  R12 AT ENTRY TO ABEND IS NOT A BASE REGIST*S 122400
               ER'                                                      S 122500
LINE24   DS    0CL59                                                    S 122600
         DC    C'PRTS-024-I  R12 IN THE BUDGIE SAVE AREA IS BASE OF '   S 122700
LINE24M  DC    8C'$'                                                    S 122800
LINE25   DC    C'PRTS-025-I  R12 IN THE SAVE AREA IS NOT A BASE REGISTE*S 122900
               R'                                                       S 123000
LINE26   DC    C'PRTS-026-I  CONTENTS OF FLOATING POINT REGISTERS :-'   S 123100
LINE27   DC    C'PRTS-027-I  S106 ABEND: PROBABLY INSUFFICIENT CORE FOR*S 123200
                SORT OR USER EXIT - RERUN IN LARGER REGION'             S 123300
LINE28   DS    0CL58                                                    S 123400
         DC    C'PRTS-028-I  AT TIME OF LAST CBAL, R12 WAS BASE OF '    S 123500
LINE28M  DC    CL8'XXXXXXXX'                                            S 123600
LINE29   DC    C'PRTS-029-I  DEBUGGING DATA FOR LAST 5 CBAL''S  ( RTD, *S 123700
               RTN, R12, R4 ):-'                                        S 123800
LINE30   DS    0CL127                                                   S 123900
         DC    C'PRTS-030-I  MODULE '                                   S 124000
LINE30N  DC    CL8' '              CSECT NAME                           S 124100
         DC    C' IS VERSION '                                          S 124200
LINE30V  DC    CL3' '              MODULE VERSION NUMBER                S 124300
         DC    C' AND WAS ASSEMBLED AT '                                S 124400
LINE30T  DC    CL8' '              TIME OF ASSEMBLY                     S 124500
         DC    C' ON '                                                  S 124600
LINE30D  DC    CL8' '              DATE OF ASSEMBLY                     S 124700
         DC    C' :   START ADDRESS='                                   S 124800
LINE30SA DC    CL6'SSSSSS'         START ADDRESS OF CSECT               S 124900
         DC    C' :   LENGTH='                                          S 125000
LINE30LE DC    CL6'LLLLLL'         LENGTH OF CSECT                      S 125100
LINE98   DC    C'PRTS-098-I  CONTENTS OF SDWA ( SYSTEM DIAGNOSTIC WORK *S 125200
               AREA ) :-'                                               S 125300
LINE99   DC    C'PRTS-099-I  END OF ABEND ANALYSIS REPORT'              S 125400
LINE100  DC    C'PRTS-100-I  A RETRY WILL BE ATTEMPTED.  PARROT EXECUTI*S 125500
               ON MAY CONTINUE.'                                        S 125600
LINE101  DC    C'PRTS-101-S  TO RERUN WITH THE OLD ( PL/1 ) VERSION OF *S 125700
               PARROT, STEPLIB FROM ''PARROT.BACKUP.PROGLIB'''          S 125800
         SPACE 1                                                        S 125900
CURRMESS DC    CL32'***** CURRENT CONTROL BLOCK ****'                   S 126000
ARROW    DC    CL8'<-------'                                            S 126100
         SPACE 5                                                        S 126200
        SCSEND S                   TERMINATE CSECT PARROTS              S 126300
         END                                                            S 126400
