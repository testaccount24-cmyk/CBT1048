         TITLE 'BUDGIE3G - INTERNAL MACROS'                             G 000010
         MACRO                                                          G 000020
         $CB   &PRINT=OFF                                               G 000030
         PUSH PRINT                PRESERVE CURRENT PRINT STATUS        G 000040
         PRINT &PRINT              ESTABLISH NEW PRINT STATUS           G 000050
               TITLE 'CB04 - CB04 CONTROL BLOCK'                        G 000060
         CB04  ,                   GENERATE DSECT                       G 000070
               TITLE 'CB05 - CB05 CONTROL BLOCK'                        G 000080
         CB05  ,                   GENERATE DSECT                       G 000090
               TITLE 'CB13 - CB13 CONTROL BLOCK'                        G 000100
         CB13  ,                   GENERATE DSECT                       G 000110
               TITLE 'CB21 - CB21 CONTROL BLOCK'                        G 000120
         CB21  ,                   GENERATE DSECT                       G 000130
               TITLE 'CB30 - CB30 CONTROL BLOCK'                        G 000140
         CB30                      GENERATE DSECT                       G 000150
               TITLE 'CB33 - CB33 CONTROL BLOCK'                        G 000160
         CB33  ,                   GENERATE DSECT                       G 000170
               TITLE 'CB34 - CB34 CONTROL BLOCK'                        G 000180
         CB34  ,                   GENERATE DSECT                       G 000190
               TITLE 'CCB  - CENTRAL CONTROL BLOCK'                     G 000200
         CCB   ,                   GENERATE DSECT                       G 000210
               TITLE '     - BATCH BALANCING REPORT LINES'              G 000220
      DETAILBB ,                   GENERATE DSECTS                      G 000230
               TITLE '     - GENERAL EQUATES'                           G 000240
       EQUATES ,                   GENERATE EQUATES                     G 000250
               TITLE '     - UT460 LINKAGE AREA'                        G 000260
         UT460 ,                   GENERATE DSECT                       G 000270
         POP   PRINT               RESTORE ORIGINAL PRINT STATUS        G 000280
         MEND                                                           G 000290
         SPACE 5                                                        G 000300
BUDGIE3G CSECT                                                          G 000310
         $CB   ,                   GENERATE DSECTS AND EQUATES          G 000320
         TITLE 'BUDGIE3G - TESTS AND OPERATIONS'                        G 000330
        SCSECT G                   DEFINE START OF CSECT  BUDGIE3G      G 000340
         ENTRY COMPARE             PERFORM SPECIFIED RELATIONSHIP TEST  G 000350
         ENTRY EXTRACT             EXTRACT FIELD FROM RECORD            G 000360
         ENTRY NUMERIC             VERIFY SUBFIELD IS NUMERIC           G 000370
         ENTRY NUMRICS             VERIFY SUBFIELD IS SIGNED NUMERIC    G 000380
         ENTRY SFVERIF             TEST FOR SIGNED/UNSIGNED NUMERIC     G 000390
         ENTRY TESTRTN             PREPARE TO RETURN TO CALLER          G 000400
         ENTRY TESTSEL             SELECT AND GO TO DESDIRED ROUTINE    G 000410
         ENTRY TESTSN              TEST FOR SIGNED/UNSIGNED NUMERIC     G 000420
         ENTRY TESTUN              TEST FOR UNSIGNED NUMERIC            G 000430
         ENTRY UNDRSCR             UNDERLINE FIELD IN ERROR             G 000440
         ENTRY VARMOVE             VARIABLE LEBGTH MOVE ROUTINE         G 000450
         TITLE 'BUDGIE3G - SELECT APPROPRIATE ROUTINE'                  G 000460
*********************************************************************** G 000470
*        SELECT APPROPRIATE TEST ROUTINE.  ON ENTRY, R1               * G 000480
*         CONTAINS 'AAAAAAXX' WHERE XX IS THE INTERNAL REPRESENTATION * G 000490
*         OF THE TEST CODE, AND AAAAAA IS THE ADDRESS OF AN ASSOCIATED* G 000500
*         C/B ( WHERE RELEVANT), R3 POINTS AT THE PL OF THE FIELD TO  * G 000510
*         BE TESTED, AND R6 POINTS AT THE RECORD.  R4 CONTAINS THE    * G 000520
*         RETURN ADDRESS.                                             * G 000530
*********************************************************************** G 000540
         SPACE 1                                                        G 000550
         USING DETAILBB,R7         ESTABLISH B/B REPORT DETAIL ADDR'Y   G 000560
TESTSEL  SUBIN SAVE=(R4,R6,R11)    PRESERVE REGISTERS                   G 000570
         MVC   $FLDP(2),0(R3)       PRESERVE PL LEST REEQUIRD LATER     G 000580
         SR    R2,R2               ZEROISE WORK REGISTER                G 000590
         IC    R2,0(R3)            RETRIEVE POSN OF FIRLD               G 000600
         BCTR  R2,0                DECREMENT ( POSN - 1 = DISPLACEMENT) G 000610
         AR    R6,R2               POINT R6 AT FIELD TO BE TESTED       G 000620
         SR    R15,R15             ZEROISE WORK REGISTER                G 000630
         IC    R15,1(R3)           RETRIEVE LENGTH OF FIELD             G 000640
         LTR   R15,R15             VERIFY THAT LENGTH EXISTSS           G 000650
         BZ    *+10                BYPASS EXECUTE IF NO LENGTH          G 000660
         BCTR  R15,0               DECREMENT LENGTH FOR EXECUTE         G 000670
         EX    R15,TESTMVC         MOVE FIELD TO WORK AREA              G 000680
         LR    R4,R1               INTERNAL TEST REPRESENTATIO TO R4    G 000690
         N     R4,MASKFFF0         ZEROISE 3 HIGH ORDER BYTES           G 000700
         LR    R2,R1               C/B ADDRESS TO R2                    G 000710
         SRL   R2,8                ALTER 'AAAAAAXX' TO '00AAAAAA'       G 000720
         LR    R1,R15              LENGTH OF FIELD INTO R1              G 000730
         LA    R14,$TSTAREA        POINT AT START OF TEST FIELD         G 000740
         AR    R15,R14             POINT R15 AT END OF FIELD            G 000750
         MVI   $TSTTSTX,C'X'       ASSUME TEST SATISFIED                G 000760
         EJECT                                                          G 000770
*        REGISTERS ARE NOW SET THUS :-                                  G 000780
*              R15 - END OF FIELD TO BE TESTED                          G 000790
*              R14 - START OF FIELD TO BE TESTED                        G 000800
*              R1  - EXECUTABLE LEBGTH                                  G 000810
*              R2  - ADDRESS OF ASSOC C/B ( WHERE RELEVANT )            G 000820
*              R4  - TEST CODE                                          G 000830
*              R6  - POINTS AT FIELD IN RECORD                          G 000840
*              R8  - ADDRESS OF CURRENT CB13                            G 000850
*              R10 - ADDRESS OF CURRENT CB02                            G 000860
         SPACE 5                                                        G 000870
*        THERE ARE TOO AMNY TESTS AND OPERATIONS TO BE ACCOMODATED IN   G 000880
*         A SINGLE CSECT, AND CONSEQUENTLY, IN SOME CASES, THE          G 000890
*         FOLLOWING INDEXED BRNCHES INVOKE ROUTINES THAT PASS CONTROL   G 000900
*         TO ANOTHER CSECT.  THAT CSECT, IN TURN, SELECTS THE APPROPRIA G 000910
*         PROCESSING ROUTINE BY ANOTHER INDEXED BRANCH.                 G 000920
         EJECT                                                          G 000930
*********************************************************************** G 000940
*        SELECT APPROPRIATE TEST ROUTINE                              * G 000950
*********************************************************************** G 000960
         SPACE 1                                                        G 000970
         SLA   R4,2                MULTIPLY R4 BY 4 TO CONVERT TEST CDE G 000980
*                                   TO INDEX FOR THE FOLLOWING BR ..... G 000990
         B     TESTBR(R4)           ... TO SELECT APPROPRIATE ROUTINE   G 001000
TESTBR   B     TESTL1              TEST TYPE L1 - SUPPORTED             G 001010
         B     TESTL2              TEST TYPE L2 - SUPPORTED             G 001020
         B     TESTL3              TEST TYPE L3 - SUPPORTED             G 001030
         B     TESTL4              TEST TYPE L4 - SUPPORTED             G 001040
         B     TESTL5              TEST TYPE L5 - SUPPORTED             G 001050
         B     TESTL6              TEST TYPE L6 - SUPPORTED             G 001060
         B     TESTL7              TEST TYPE L7 - SUPPORTED             G 001070
         B     TESTL8              TEST TYPE L8 - SUPPORTED             G 001080
         B     TESTL9              TEST TYPE L9 - SUPPORTED             G 001090
         B     TESTLT              TEST TYPE LT - SUPPORTED             G 001100
         B     TESTLE              TEST TYPE LE - SUPPORTED             G 001110
         B     TESTEQ              TEST TYPE EQ - SUPPORTED             G 001120
         B     TESTNE              TEST TYPE NE - SUPPORTED             G 001130
         B     TESTGT              TEST TYPE GT - SUPPORTED             G 001140
         B     TESTGE              TEST TYPE GE - SUPPORTED             G 001150
         B     TESTNN              TEST TYPE NN - SUPPORTED             G 001160
         B     TESTNS              TEST TYPE NS - SUPPORTED             G 001170
         B     TESTNZ              TEST TYPE NZ - SUPPORTED             G 001180
         B     TESTNB              TEST TYPE NB - SUPPORTED             G 001190
         B     TESTUNS             TEST TYPE TX - UNSUPPORTED           G 001200
         B     TESTC1              TEST TYPE C1 - SUPPORTED             G 001210
         B     TESTC2              TEST TYPE C2 - SUPPORTED             G 001220
         B     TESTC3              TEST TYPE C3 - SUPPORTED             G 001230
         B     TESTUNS             TEST TYPE C4 - UNSUPPORTED           G 001240
         B     TESTUNS             TEST TYPE C5 - UNSUPPORTED           G 001250
         SPACE 5                                                        G 001260
*        ANY TESTS ON THIS PAGE THAT ARE NOT SUPPORTED IN THIS CSECT    G 001270
*         MAY BE SUPPORTED IN ANY OF THE OTHER TESTING CSECTS, BUT      G 001280
*         THEY ARE INVOKED VIA CBAL'S, AND NOT BY SUBSEQUENT INDEXED    G 001290
*         BRANCHES.                                                     G 001300
         EJECT                                                          G 001310
*********************************************************************** G 001320
*        SELECT APPROPRIATE TEST ROUTINE ( CONT'D )                   * G 001330
*********************************************************************** G 001340
         SPACE 1                                                        G 001350
         B     TESTC6              TEST TYPE C6 - SUPPORTED             G 001360
         B     TESTC7              TEST TYPE C7 - SUPPORTED             G 001370
         B     TESTUNS             TEST TYPE C8 - UNSUPPORTED           G 001380
         B     TESTR1              TEST TYPE R1 - SUPPORTED             G 001390
         B     TESTR2              TEST TYPE R2 - SUPPORTED             G 001400
         B     TESTSEL2            TEST TYPE R3 - SUPPORTED IN BUDGIE3H G 001410
         B     TESTSEL2            TEST TYPE R4 - SUPPORTED IN BUDGIE3H G 001420
         B     TESTSEL2            TEST TYPE R5 - SUPPORTED IN BUDGIE3H G 001430
         B     TESTSEL2            TEST TYPE R6 - SUPPORTED IN BUDGIE3H G 001440
         B     TESTSEL2            TEST TYPE R7 - SUPPORTED IN BUDGIE3H G 001450
         B     TESTSEL2            TEST TYPE R8 - SUPPORTED IN BUDGIE3H G 001460
         B     TESTSEL2            TEST TYPE R9 - SUPPORTED IN BUDGIE3H G 001470
         B     TESTSEL2            TEST TYPE D1 - SUPPORTED IN BUDGIE3H G 001480
         B     TESTSEL2            TEST TYPE D2 - SUPPORTED IN BUDGIE3H G 001490
         B     TESTSEL2            TEST TYPE D3 - SUPPORTED IN BUDGIE3H G 001500
         B     TESTSEL2            TEST TYPE D4 - SUPPORTED IN BUDGIE3H G 001510
         B     TESTSEL2            TEST TYPE D5 - SUPPORTED IN BUDGIE3H G 001520
         B     TESTSEL2            TEST TYPE D6 - SUPPORTED IN BUDGIE3H G 001530
         B     TESTSEL2            TEST TYPE D7 - SUPPORTED IN BUDGIE3H G 001540
         B     TESTUNA             TEST TYPE D8 - UNALLOCATED           G 001550
         B     TESTUNA             TEST TYPE D9 - UNALLOCATED           G 001560
         B     TESTI               TEST TYPE I  - SUPPORTED             G 001570
         B     TESTUNS             TEST TYPE JX - UNSUPPORTED           G 001580
         B     TESTUNS             TEST TYPE C9 - UNSUPPORTED           G 001590
         B     TESTE1              TEST TYPE E1 - SUPPORTED             G 001600
         SPACE 5                                                        G 001610
*        ANY TESTS ON THIS PAGE THAT ARE NOT SUPPORTED IN THIS CSECT    G 001620
*         ARE SUPPORTED IN CSECT BUDGIE3H, AND ARE ACCESSED WITHIN THAT G 001630
*         CSECT BY ANOTHER INDEXED BRANCH.                              G 001640
         EJECT                                                          G 001650
*********************************************************************** G 001660
*        SELECT APPROPRIATE TEST ROUTINE ( CONT'D )                   * G 001670
*********************************************************************** G 001680
         SPACE 1                                                        G 001690
         B     TESTSEL3            TEST TYPE E2 - SUPPORTED IN BUDGIE3I G 001700
         B     TESTSEL3            TEST TYPE E3 - SUPPORTED IN BUDGIE3I G 001710
         B     TESTSEL3            TEST TYPE E4 - SUPPORTED IN BUDGIE3I G 001720
         B     TESTUNA             TEST TYPE E5 - UNSUPPORTED           G 001730
         B     TESTSEL3            TEST TYPE E6 - SUPPORTED IN BUDGIE3I G 001740
         B     TESTUNA             TEST TYPE E7 - UNSUPPORTED           G 001750
         B     TESTUNA             TEST TYPE E8 - UNSUPPORTED           G 001760
         B     TESTUNA             TEST TYPE E9 - UNSUPPORTED           G 001770
         B     TESTUNA             TEST TYPE F1 - UNSUPPORTED           G 001780
         B     TESTUNA             TEST TYPE F2 - UNSUPPORTED           G 001790
         B     TESTUNA             TEST TYPE F3 - UNSUPPORTED           G 001800
         B     TESTUNA             TEST TYPE F4 - UNSUPPORTED           G 001810
         B     TESTUNA             TEST TYPE F5 - UNSUPPORTED           G 001820
         B     TESTUNA             TEST TYPE F6 - UNSUPPORTED           G 001830
         B     TESTUNS             TEST TYPE M1 - UNSUPPORTED           G 001840
         B     TESTUNA             TEST TYPE M2 - UNALLOCATED           G 001850
         B     TESTUNA             TEST TYPE M3 - UNALLOCATED           G 001860
         B     TESTUNA             TEST TYPE M4 - UNALLOCATED           G 001870
         B     TESTUNA             TEST TYPE M5 - UNALLOCATED           G 001880
         B     TESTUNA             TEST TYPE M6 - UNALLOCATED           G 001890
         B     TESTUNA             TEST TYPE M7 - UNALLOCATED           G 001900
         B     TESTUNA             TEST TYPE M8 - UNALLOCATED           G 001910
         B     TESTUNA             TEST TYPE M9 - UNALLOCATED           G 001920
         B     TESTUS              TEST TYPE US - SUPPORTED             G 001930
         B     TESTUZ              TEST TYPE UZ - SUPPORTED             G 001940
         SPACE 5                                                        G 001950
*        ANY TESTS ON THIS PAGE THAT ARE NOT SUPPORTED IN THIS CSECT    G 001960
*         ARE SUPPORTED IN CSECT BUDGIE3I, AND ARE ACCESSED WITHIN THAT G 001970
*         CSECT BY ANOTHER INDEXED BRANCH.                              G 001980
         EJECT                                                          G 001990
*********************************************************************** G 002000
*        SELECT APPROPRIATE TEST ROUTINE ( CONT'D )                   * G 002010
*********************************************************************** G 002020
         SPACE 1                                                        G 002030
         B     TESTUB              TEST TYPE UB - SUPPORTED             G 002040
         B     TESTSEL4            TEST TYPE S  - SUPPORTED IN BUDGIE3J G 002050
         B     TESTUNS             TEST TYPE NM - UNSUPPORTEE           G 002060
         B     TESTSEL4            TEST TYPE SX - SUPPORTED IN BUDGIE3J G 002070
         B     TESTSEL4            TEST TYPE IT - SUPPORTED IN BUDGIE3J G 002080
         B     TESTSEL4            TEST TYPE ON - SUPPORTED IN BUDGIE3J G 002090
         B     TESTSEL4            TEST TYPE OF - SUPPORTED IN BUDGIE3J G 002100
         B     TESTSEL4            TEST TYPE WR - SUPPORTED IN BUDGIE3J G 002110
         B     TESTRTN             TEST TYPE DM - DUMMY OPERATION       G 002120
         B     TESTRTNY            TEST TYPE ER - DUMMY OPERATION       G 002130
         B     TESTUNS             TEST TYPE NR - UNSUPPORTED           G 002140
         B     TESTUNS             TEST TYPE UR - UNSUPPORTED           G 002150
         B     TESTAB              TEST TYPE AB - SUPPORTED             G 002160
         B     TESTSEL4            TEST TYPE WI - SUPPORTED IN BUDGIE3J G 002170
         SPACE 5                                                        G 002180
*        ANY TESTS ON THIS PAGE THAT ARE NOT SUPPORTED BY THIS CSECT AR G 002190
*         ARE SUPPORTED IN CSECT BUDGIE3J, AND ARE ACCESSED WIKTHIN THA G 002200
*         CSECT BY ANOTHER INDEXED BRANCH.                              G 002210
         EJECT                                                          G 002220
*********************************************************************** G 002230
*        FORCE RETURN WITH ERROR CONDITION                            * G 002240
*********************************************************************** G 002250
         SPACE 1                                                        G 002260
TESTRTNY MVI   $TSTTSTX,C'Y'       SET ON ERROR LFAG                    G 002270
        BBMESS 17                  SET UP DEFAULT ERROR MESSAGE         G 002280
         SPACE 5                                                        G 002290
*********************************************************************** G 002300
*        PREPARE TO RETURN TO CALLER                                  * G 002310
*********************************************************************** G 002320
         SPACE 1                                                        G 002330
*        THE CONDITION CODE IS SET SUCH THAT THE USER CAN MAKE THE      G 002340
*         FOLLOWING TESTS -                                             G 002350
*              BL - SPECIAL CASE SATISFIED ( E.G. ALL BLANK )           G 002360
*              BNH  TEST SATISFIED                                      G 002370
*              BE - GENERAL CASE SATISFIED                              G 002380
*              BH - TEST NOT SATISFIED                                  G 002390
         SPACE 1                                                        G 002400
TESTRTN  EQU   *                   PREPARE TO RETURN TO CALLER          G 002410
         CLI   $TSTTSTX,C'X'       SEE IF TEST SATISFIED                G 002420
         BNH   TESTRTN1            BYPASS ERROR PROCESSING IF SATISFIED G 002430
         LA    R3,$ULINEPL          POINT AT FIELD TO BE UNDERLINED     G 002440
         CBAL  R4,ADDCOLS          ADD POSN TO ERROR MESSAGE            G 002450
         CBAL  R4,UNDRSCR          ADD UNDERSCORE TO PRINT LINE         G 002460
         B     *+10                BYPASS RESETTING ERROR MESSAGE       G 002470
TESTRTN1 MVC   DTBBEMSS(L'DTBBEMSS+1),$SPACES BLANK OUT MESSAGE AREA    G 002480
         CLI   $TSTTSTX,C'X'       SET COND CODE FOR USER               G 002490
        SUBOUT RESTORE=(R4,R6,R11) RESTORE AND RETURN                   G 002500
         TITLE 'BUDGIE3G - ROUTINE TO UNDERLINE ERRORS'                 G 002510
*********************************************************************** G 002520
*        THIS SUBROUTINE UNDERLINES ERRONEOUS SUBFIELDS IN THE        * G 002530
*         PRECEDING PRINT LINE.  ON ENTRY, R3 POINTS AT THE PL        * G 002540
*         OF THE FIELD TO BE UNDERLINED.                              * G 002550
*********************************************************************** G 002560
         SPACE 1                                                        G 002570
UNDRSCR  SUBIN ,                   ENTER ROUTINE                        G 002580
         SR    R14,R14             ZEROISE REGISTER 14                  G 002590
         SR    R15,R15             ZEROISE REGISTER 15                  G 002600
         IC    R14,0(R3)           RETRIEVE START OF FIELD              G 002610
         IC    R15,1(R3)           RETRIEVE LENGTH OF FUELF             G 002620
         AR    R14,R15             ADD LENGTH TO START TO GET END       G 002630
         CH    R14,=H'81'          TEST IF END EXCEEDS CARD IMAGE       G 002640
         BH    ADDCOLSX            EXIT IF UNDER-LINE EXCEEDS CARD IMA  G 002650
         LA    R2,DTBBCARD         POINT R2 AT RECORD IMAGE             G 002660
         SR    R1,R1               ZEROISE WORK REGISTER                G 002670
         IC    R1,0(R3)            RETRIEVE POSITION                    G 002680
         LTR   R1,R1               VERIFY OFFSET SUPPLIED               G 002690
         BZ    0(R4)               SHOULD NEVER HAPPEN BUT RETURN IF NO G 002700
         BCTR  R1,0                DECREMENT (OFFSET - 1 = DISPLACEMNT) G 002710
         AR    R2,R1               POINT R2 AT FIELD IN ERROR           G 002720
         SR    R1,R1               ZEROISE WORK REGISTER                G 002730
         IC    R1,1(R3)            RETRIEVE LENGTH                      G 002740
         LTR   R1,R1               VERIFY LENGTH SUPPLIED               G 002750
         BZ    0(R4)               RETURN IF NOT                        G 002760
         BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE         G 002770
         MVC   0(1,R2),$UNDRLNE    MOVE IN 1ST UNDER-SCORE CHAR         G 002780
         LTR   R1,R1               TEST IF FIELD LENGTH ONLY 1          G 002790
         BZ    0(R4)               RETURN IF ONLY 1 BYTE TO UNDERLINE   G 002800
         BCTR  R1,0                DECREMENT AGAIN FOR EXECUTE          G 002810
         EX    R1,UNDRMVC          PROPAGATE UNDERSCORES                G 002820
        SUBOUT ,                   RETURN TO CALLER                     G 002830
         SPACE 1                                                        G 002840
UNDRMVC  MVC   1(0,R2),0(R2)       EXECUTED MOV  INSTRUBTION            G 002850
         TITLE 'BUDGIE3G - ADD FIELD POSN AND LGTH TO ERROR MESSAGE'    G 002860
*********************************************************************** G 002870
*        THIS SUBROUTINE ADDS THE START AND END POSITIONS OF          * G 002880
*         THE NON-NUMERIC FIELD TO BBMESS03.  AT ENTRY, R3            * G 002890
*         CONTAINS THE ADDRESS OF TWO 1-BYTE FIELDS CONTAINING        * G 002900
*         THE POSITION AND LENGTH OF THE FIELD IN ERROR.              * G 002910
*********************************************************************** G 002920
         SPACE 1                                                        G 002930
ADDCOLS  SUBIN ,                   ADD COL NOS TO BBMESS03              G 002940
         LA    R2,DTBBEMSS         POINT R2 AT ERROR MESSAGE            G 002950
         SR    R1,R1               ZEROISE WORK REGISTER                G 002960
         IC    R1,0(R3)            GET POSINION OF START                G 002970
         LTR   R1,R1               VERIFY POSN WAS SUPPIED              G 002980
         BZ    ADDCOLSX            BYPASS ROUTINE IF NOT                G 002990
         CVD   R1,$WRKDUBL         CONVERT START TO DECIMAL             G 003000
         EDIT  $WRKEDIT,$WRKDUBL+6,'XX0' EDIT START POSITION            G 003010
         MVC   11(2,R2),$WRKEDIT+2 ADD START POSN TO MESSAGE            G 003020
         CLI   $WRKEDIT+1,C' '     TEST FOR LEADING DIGIT               G 003030
         BE    *+14                BR IF ONLY 2-DIGIT NUMBER            G 003040
         MVC   10(1,R2),$WRKEDIT+1 ADD LEADING DIGIT TO MESSAGE         G 003050
         MVI   16(R2),C' '         BLANK OUT TRAILING BRACKET IF ANY    G 003060
         SR    R15,R15             ZEROISE WORK RECISTER                G 003070
         IC    R15,1(R3)           GET LENGTH OF FIELD                  G 003080
         BCTR  R15,0               DECREMENT TO GET 'ADDITIVE' LGTH     G 003090
         AR    R1,R15              ADD LEN TO START TO GET END          G 003100
         CVD   R1,$WRKDUBL         CONVERT END TO DECIMAL               G 003110
         EDIT  $WRKEDIT,$WRKDUBL+6,'X0X' EDIT END POSITION              G 003120
         MVC   14(2,R2),$WRKEDIT+2 ADD END POSN TO ERROR MESSAGE        G 003130
ADDCOLSX SUBOUT ,                  RETURN TO CALLER                     G 003140
         TITLE 'BUDGIE3G - PERFORM SPECIFIED RELATIONSHIP TEST'         G 003150
*********************************************************************** G 003160
*        PERFORM SPECIFIED RELATIONSHIP TEST                          * G 003170
*********************************************************************** G 003180
         SPACE 1                                                        G 003190
*        THIS SUBROUTINE RECEIVES CONTROL AFTER A TEST ( COMPARE ) HAS  G 003200
*         BEEN MADE, AND PERFORMS THE RELATIONSHIP TEST SPECIFIED IN    G 003210
*         R1 IN THE FORM OF AN INTERNAL CODE ( SEE MISCELLANAOUS EQU )  G 003220
*         AND SETS THE CONDITION CODE SUCH THAT THE CALLER CAN MAKE THE G 003230
*         FOLLOWING CONDITIONAL BRANCHES -                              G 003240
*              BE  - SPECIFIED RELATIONSHIP SATISFIED                   G 003250
*              BNE - SPECIFIED RELATIOSHIP NOT SATISFIED                G 003260
         SPACE 1                                                        G 003270
COMPARE  SUBIN ,                   ENTER SUBROUTINE                     G 003280
         MVI   COMPARET,C'X'       ASSUME TEST SATISFIED                G 003290
         SLL   R1,3                MULTIPLY INTERNAL REPRESENTATION OF  G 003300
*                                   THE TEST BY 8 TO CONVERT IT TO AN I G 003310
*                                   INDEX FOR THE FOLLONG BR TO PERFORM G 003320
*                                   THE APPROPRIATE RELATIONSHIP TEST   G 003330
         B     *-4(R1)             GO TO APPROPRIATE CONDITIONAL BRANCH G 003340
         BE    COMPAREX       (EQ) GO SET COND CODE IF TEST SATISFIED   G 003350
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003360
         BNE   COMPAREX       (NE) GO SET COND CODE IF TEST SATISFIED   G 003370
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003380
         BH    COMPAREX       (GT) GO SET COND CODE IF TEST SATISFIED   G 003390
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003400
         BNL   COMPAREX       (GE) GO SET COND CODE IF TEST SATISFIED   G 003410
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003420
         BL    COMPAREX       (LT) GO SET COND CODE IF TEST SATISFIED   G 003430
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003440
         BNH   COMPAREX       (LE) GO SET COND CODE IF TEST SATISFIED   G 003450
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003460
         BO    COMPAREX       (ON) GO SET COND CODE IF TEST SATISFIED   G 003470
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003480
         BZ    COMPAREX       (OF) GO SET COND CODE IF TEST SATISFIED   G 003490
         B     COMPAREY            GO SHOW TEST NOT SATISFIED           G 003500
COMPAREY MVI   COMPARET,C'Y'       SET TO SHOW TEST NOT SATISFIED       G 003510
COMPAREX CLI   COMPARET,C'X'       SET COND CODE FOR CALLER             G 003520
        SUBOUT ,                   RETURN TO CALLER                     G 003530
         SPACE 1                                                        G 003540
COMPARET DC    C'X'                USED TO SET THE COND CODE            G 003550
         TITLE 'BUDGIE3G - EXTRACT A FIELD FROM A RECORD'               G 003560
*********************************************************************** G 003570
*        THIS SUBROUTINE EXTRACTS A SUB-FIELD FROM THE INPUT          * G 003580
*         RECORD AND MOVES IT TO THE REQUESTED DESTINATION            * G 003590
*         FIELD.  ON INPUT, R2 POINTS AT THE DESTINATION              * G 003600
*         FIELD, RJ POINTS AT TWO 1-BYTE BINARY FIELDS                * G 003610
*         CONTAINING THE POSITION AND LENGTH OF THE SUB-FIELD         * G 003620
*         TO BE EXTRACTED, AND R6 POINTS AT THE RECORD THAT           * G 003630
*         CONTAINS THE SUB-FIELD.  ON EXIT, R2 POINTS AT THE          * G 003640
*         BYTE FOLLOWING THE EXTRACTED AND MOVED SUB-FIELD.           * G 003650
*********************************************************************** G 003660
         SPACE 1                                                        G 003670
EXTRACT  SUBIN ,                   EXTRACT SUB-FIELD                    G 003680
         SR    R1,R1               ZEROISE WORK REGISTER                G 003690
         IC    R1,0(,R3)           OBTAIN SUB-FIELD OFFSET              G 003700
         LTR   R1,R1               VERIFY OFFSET SUPPLIED               G 003710
         BZ    EXTRACTX            EXIT IF NOT                          G 003720
         BCTR  R1,0                DECREMENT (OFFSET - 1 = DISPLACEMNT) G 003730
         AR    R1,R6               POINT R1 AT SUB-FIELD                G 003740
         SR    R15,R15             ZEROISE WORK REGISTER                G 003750
         IC    R15,1(,R3)          OBTAIN SUB-FIELD LENGTH              G 003760
         LTR   R15,R15             VERIFY LENGTH SUPPLIED               G 003770
         BZ    EXTRACTX            EXIT IF NOT                          G 003780
         BCTR  R15,0               DECREMENT FOR EXECUTE                G 003790
         EX    R15,EXTRACTM        MOVE SUB-FIELD TO DESTINATION        G 003800
         AR    R2,R15              ADD LGTH TO DESTINATION ADDRESS      G 003810
         LA    R2,1(,R2)           POINT AT BYTE AFTER SUB-FIELD        G 003820
EXTRACTX SUBOUT ,                  RETURN TO CALLER                     G 003830
         SPACE 1                                                        G 003840
EXTRACTM MVC   0(0,R2),0(R1)       EXECUTED MOVE INSTRUCTION            G 003850
         TITLE 'BUDGIE3G - VARIABLE LENGTH MOVE ROUTINE'                G 003860
*********************************************************************** G 003870
*        MOVE A FIELD OF UNKNOWN LENGTH.  ON ENTRY, R3 POINTS AT      * G 003880
*         THE RECEIVING AREA, R2 CONTAINS THE LENGTH TO BE MOVED,     * G 003890
*         AND R1 POINTS AT THE SOURCE FILLD..                         * G 003900
*********************************************************************** G 003910
         SPACE 1                                                        G 003920
VARMOVE  SUBIN ,                   MOVE VARIABLE LENGTH FIELD           G 003930
VARMOVE1 C     R2,=F'256'          TEST IF MORE THAN 256 BYTES LEFT     G 003940
         BNH   VARMOVE2            BR IF NOT                            G 003950
         MVC   0(256,R3),0(R1)     MOVE 256 BYTES TO RECEIVING AREA     G 003960
         S     R2,=F'256'          DECREMENT LENGTH BY 256 BYTES        G 003970
         LA    R1,256(,R1)         INCREMENT SOURCE POINTER BY 256      G 003980
         LA    R3,256(,R3)         INCREMENT RECEIVIBG POINTER BY 256   G 003990
         B     VARMOVE1            REPEAT FOR NEXT 256 BYTES            G 004000
VARMOVE2 BCTR  R2,0                DECREMENT REMAIMING LENGTH FOR ECECU G 004010
         EX    R2,VARMVC           MOVE RENAINDER                       G 004020
        SUBOUT ,                   RETURN TO CALLER                     G 004030
         SPACE 1                                                        G 004040
VARMVC   MVC   0(0,R3),0(R1)       EXECUTED MOVE INSTRUCTION            G 004050
         TITLE 'BUDGIE3G - DUMMY TEST ROUTINES'                         G 004060
*********************************************************************** G 004070
*        DUMMY TEST ROUTINES                                          * G 004080
*********************************************************************** G 004090
         SPACE 1                                                        G 004100
TESTUNS  MVC   LINE29M,LINE29S     ALTER ERROR MESSAGE                  G 004110
         B     TESTERM             GO PRINT ERROR MESSAGE               G 004120
         SPACE 1                                                        G 004130
TESTUNA  MVC   LINE29M,LINE29A     ALTER ERROR MESSAGE                  G 004140
         B     TESTERM             GO PINR ERROR MESSAGE                G 004150
         SPACE 1                                                        G 004160
TESTERM  SUBIN SAVE=R5             PRESERVE REGISTER 5                  G 004170
         OI    CB13SW-CB13NTRY(R8),SW13NTST FLAG TEST AS NO-OP          G 004180
         MVC   LINE29TT,CB13TST0-CB13NTRY(R8) MOVE TEST ID TO MESSAGE   G 004190
         USING CB13NTRY,R8         ESTABLISG TEMPORARY ADDRESSABILITY   G 004200
         CCNO  LINE29N1,CB13       ADD CARD SEQ NO TO ERROR MESSAGE     G 004210
         DROP  R8                  DROP CB13 ADDRESSABILITY             G 004220
         L     R5,SYSPRINT+IOPSRECA GET BUFFER ADDRESS                  G 004230
         LINE  LINE29,P=Y          PRINT ERROR MESSAGE                  G 004240
        SUBOUT RESTORE=R5,RETURN=TESTRTN RESTORE & PREPARE TO RETURN    G 004250
         TITLE 'BUDGIE3G - TEST ROUTINES'                               G 004260
*********************************************************************** G 004270
*        L1 - ALPHABETIC: A-Z | BLANK                                 * G 004280
*********************************************************************** G 004290
         SPACE 1                                                        G 004300
TESTL1   SUBIN ,                   TEST FOR ALPHABETIC                  G 004310
         MVC   DTBBEMSS(L'BBMESS10),BBMESS10 ADD ERROR MESSAGE TO LINE  G 004320
         EX    R1,TESTTR           TRANSLATE AGAINST MAIN TABLE         G 004330
         EX    R1,TESTTRL1         TRANSLATE & TEST WITH L1 TABLE       G 004340
         BE    *+8                 BR IF TEST SATIFIED                  G 004350
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004360
         B     TESTRTN             GO RETURN TO CALLER                  G 004370
         SPACE 5                                                        G 004380
*********************************************************************** G 004390
*        L2 - ALPHAMERIC: A - Z | 0 - 9 | BLANK                       * G 004400
*********************************************************************** G 004410
         SPACE 1                                                        G 004420
TESTL2   SUBIN ,                   TEST FOR ALPHAMERIC                  G 004430
         MVC   DTBBEMSS(L'BBMESS11),BBMESS11 ADD ERROR MESSAGE TO LINE  G 004440
         EX    R1,TESTTR           TRANSLATE AGAINST MAIN TABLE         G 004450
         EX    R1,TESTTRL2         TRANSLATE & TEST WITH L2 TABLE       G 004460
         BE    *+8                 BR IF TEST SATIFIED                  G 004470
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004480
         B     TESTRTN             GO RETURN TO CALLER                  G 004490
         SPACE 5                                                        G 004500
*********************************************************************** G 004510
*        L3 - ALPHAMERIC: A - Z | 0 - 9 | BLANK | SPECIAL CHARS       * G 004520
*********************************************************************** G 004530
         SPACE 1                                                        G 004540
TESTL3   SUBIN ,                   TETS FOR ALPHAMERIC                  G 004550
         MVC   DTBBEMSS(L'BBMESS11),BBMESS11 ADD ERROR MESSAGE TO LINE  G 004560
         EX    R1,TESTTR           TRANSLATE AGAINST MAIN TABLE         G 004570
         EX    R1,TESTTRL3         TRANSLATE & TEST WITH L3 TABLE       G 004580
         BE    *+8                 BR IF TEST SATIFIED                  G 004590
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004600
         B     TESTRTN             GO RETURN TO CALLER                  G 004610
         EJECT                                                          G 004620
*********************************************************************** G 004630
*        L4 - NON-BLANK                                               * G 004640
*********************************************************************** G 004650
         SPACE 1                                                        G 004660
TESTL4   SUBIN ,                   TEST FOR NON-BLANK                   G 004670
         MVC   DTBBEMSS(L'BBMESS13),BBMESS13 ADD ERROR MESSAGE TO LINE  G 004680
         EX    R1,TESTCLC          TEST IF FIELD BLANK                  G 004690
         BNE   *+8                 BR IF FIELD NOT BLANK                G 004700
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004710
         B     TESTRTN             GO TETURN TO CALLER                  G 004720
         SPACE 5                                                        G 004730
*********************************************************************** G 004740
*        L5 - BLANK                                                   * G 004750
*********************************************************************** G 004760
         SPACE 1                                                        G 004770
TESTL5   SUBIN ,                   TEST FOR BLANK                       G 004780
         MVC   DTBBEMSS(L'BBMESS12),BBMESS12 ADD ERROR MESSAGE TO LINE  G 004790
         EX    R1,TESTCLC          TEST IF FIELD BLANK                  G 004800
         BE    *+8                 BR IF TEST SATIFIED                  G 004810
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004820
         B     TESTRTN             GOT RETURN TO CALLER                 G 004830
         SPACE 5                                                        G 004840
*********************************************************************** G 004850
*        NN - ALL UNSIGNED NUMERIC                                    * G 004860
*********************************************************************** G 004870
         SPACE 1                                                        G 004880
TESTNN   SUBIN ,                   TEST FOR UNSIGNED NUMERIC            G 004890
         MVC   DTBBEMSS(L'BBMESS03),BBMESS03 ADD ERROR MESSAGE TO LINE  G 004900
         EX    R1,TESTTR           TRANSLATE AGAINST MAIN TABLE         G 004910
         EX    R1,TESTTRNN         TRANSLATE & TEST AGAINST (( TABLE    G 004920
         BE    *+8                 BR IF TEST SATIFIED                  G 004930
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 004940
         B     TESTRTN             GO RETURN TO CALLER                  G 004950
         EJECT                                                          G 004960
*********************************************************************** G 004970
*        NS - SIGNED/UNSIGNED NUMERIC WITH LEADING BLANKS             * G 004980
*********************************************************************** G 004990
         SPACE 1                                                        G 005000
TESTNS   SUBIN ,                   TEST FOR SIGNED/UNSIGNED NUMERIC     G 005010
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005020
         CBAL  R4,TESTSN           TEST FOR SIGNED/UNSIGNED NUMERIC     G 005030
         B     TESTRTN             GO RETURN TO CALLER                  G 005040
         SPACE 5                                                        G 005050
*********************************************************************** G 005060
*        NZ - AS NS, BUT REPLACE LEADING BLANKS BY ZERO               * G 005070
*********************************************************************** G 005080
         SPACE 1                                                        G 005090
TESTNZ   SUBIN ,                   TEST FOR NUMERIC                     G 005100
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005110
         CBAL  R4,TESTSN           TEST FOR SIGNED/UNSIGNED NUMERIC     G 005120
         BH    TESTNZX             BR IF FIELD NOR NUMERIC              G 005130
         CBAL  R4,TESTORZ          SET LEADING BLANKS TO ZERO           G 005140
         CLI   0(R14),C' '         TEST IF LAST BYTE BLANK              G 005150
         BNE   *+8                 BRANCH IF LAST BYTE NOT BLANK        G 005160
         MVI   0(R14),C'0'         ALTER LAST BLANK TO ZERO             G 005170
TESTNZX  B     TESTRTN             GO TETURN TO CALLER                  G 005180
         SPACE 5                                                        G 005190
*********************************************************************** G 005200
*        NB - AS 'NZ' BUT ALL BLANK FIELDS ARE NOT ZEROISED           * G 005210
*********************************************************************** G 005220
         SPACE 1                                                        G 005230
TESTNB   SUBIN ,                   TEST FOR NUMERIC                     G 005240
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005250
         CBAL  R4,TESTSN           TEST IF NUMEROC                      G 005260
         BNE   TESTNBX             BR IF NIN-NUMERIC OR ALL BLANK       G 005270
         CBAL  R4,TESTORZ          SET LEADING BLANKS TO ZERO           G 005280
TESTNBX  B     TESTRTN             GO RETURN TO CALLER                  G 005290
         EJECT                                                          G 005300
*********************************************************************** G 005310
*        US - UNSIGNED NUMERIC WITH LEADING BLANKS                    * G 005320
*********************************************************************** G 005330
         SPACE 1                                                        G 005340
TESTUS   SUBIN ,                   TEST FOR UNSIGNED NUMERIC            G 005350
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005360
         CBAL  R4,TESTUN           TEST FOR UNSIGNED NUMERIC            G 005370
         B     TESTRTN             GO RETURN TO CALLER                  G 005380
         SPACE 5                                                        G 005390
*********************************************************************** G 005400
*        UZ - AS US, BUT RELLACE LEADING BLANKS BY ZEROS              * G 005410
*********************************************************************** G 005420
         SPACE 1                                                        G 005430
TESTUZ   SUBIN ,                   TEST FOR UNSIGNED NUMERIC            G 005440
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005450
         CBAL  R4,TESTUN           TEST FOR UNSIGNED NUMERIC            G 005460
         BH    TESTUZX             BR IF FIELD NOT NUMERIC              G 005470
         CBAL  R4,TESTORZ          SET LEAGING BLANKS TO ZEROS          G 005480
         CLI   0(R14),C' '         TEST IF LAST BYTE BLANK              G 005490
         BNE   *+8                 BRANCH IF NOT BLANK                  G 005500
         MVI   0(R14),C'0'         SET LAST BLANK TO ZERO               G 005510
TESTUZX  B     TESTRTN             GO RETURN TO CALLER                  G 005520
         SPACE 5                                                        G 005530
*********************************************************************** G 005540
*        UB - AS UZ, BUT ALL-BLANK FIELDS ARE NOT REPLACED            * G 005550
*********************************************************************** G 005560
         SPACE 1                                                        G 005570
TESTUB   SUBIN ,                   TEST FOR UNSIGNED NUMERIC            G 005580
        BBMESS 03                  MOVE ERROR MESSAGE TO LINE           G 005590
         CBAL  R4,TESTUN           TEST FOR UNSIGNED NUMERIC            G 005600
         BNE   TESTUBX             BR IF NON-NUMERIC OR ALL BLANK       G 005610
         CBAL  R4,TESTORZ          SET LEADING BLANKS TO ZERO           G 005620
TESTUBX  B     TESTRTN             GO RETURN TO CALLER                  G 005630
         EJECT                                                          G 005640
*********************************************************************** G 005650
*        L6 - VALIDATE CURRENCY CODE                                  * G 005660
*********************************************************************** G 005670
         SPACE 1                                                        G 005680
         USING UT460LNK,R2         ESTABLISH LINKAGE ADDRESSABILITY     G 005690
TESTL6   SUBIN ,                   ENTER ROUTINE                        G 005700
        BBMESS 09                  SET UP DEFAULT ERROR MESSAGE         G 005710
         CBAL  R4,TESTUN           VERIFY IF FIELD NUMERIC              G 005720
         BNE   TESTL6Y             FLAG AS ERROR IF NONNUMERIC          G 005730
         L     R2,$PMUT460         RETRIEVE LINKAGE AREA ADDRESS        G 005740
         ZAP   UT460INV,$ONE        SET ARBITRARY INPUT VALUE           G 005750
         CBAL  R4,CC19TO98         CONVERT CODE 19 TO 98 IF REQUESTED   G 005760
         MVC   UT460INC,0(R6)      SET CODE TO BE TESTED AS INPUT CODE  G 005770
         MVC   UT460OTC,=C'02'     USE US DOLLAR AS OUTPUT CODE         G 005780
         LA    R1,$PMUT460         ESTABLISH LINKAGE                    G 005790
         L     R15,$ADUT460        GET ADDRESS OF CURRENCY CONVERSION R G 005800
         BALR  R14,R15             PERFORM CURRENCY CONVERSION ROUTINE  G 005810
         CLI   UT460RTC,C'1'       WAS CODE VALID                       G 005820
         BE    *+8                 BR IF VALID                          G 005830
TESTL6Y  MVI   $TSTTSTX,C'Y'       FLAG AS INVALID CODE                 G 005840
         B     TESTRTN             GO RETURN TO CALLER                  G 005850
         DROP  R2                  DROP LINKAGE ADDRESSABILITY          G 005860
         SPACE 5                                                        G 005870
*********************************************************************** G 005880
*        AB - ABEND WITH USER CODE 060                                * G 005890
*********************************************************************** G 005900
         SPACE 1                                                        G 005910
TESTAB   ABEND 60                  USER REQUESTED ABEND SO DUMP         G 005920
         EJECT                                                          G 005930
*********************************************************************** G 005940
*        L7 - LEFT-JUSTIFY IF FIELD IS NON-BLANK                      * G 005950
*********************************************************************** G 005960
         SPACE 1                                                        G 005970
TESTL7   SUBIN ,                   LEFT-JUSTIFY IF NON-BLANK            G 005980
         EX    R1,TESTCLC          TEST IF FIELD ALL BLANK              G 005990
         BE    TESTRTN             IF YESY THEN RETURN TO CALLER        G 006000
         LA    R14,0(,R1)          SET R14 TO LENGTH FOR LOOP           G 006010
         LTR   R1,R1               TEST IF 1 BYTE FIELD                 G 006020
         BZ    TESTRTN             NO JUSTIFICATION IF 1 BYTE           G 006030
         LR    R15,R6              POINT R15 AT START OF FIELD          G 006040
         AR    R15,R1              POINT R15 AT END OF FIELD            G 006050
         BCTR  R1,0                DECREMENT R1 FURTHER FOR EXECUTE     G 006060
TESTL71  CLI   0(R6),C' '          TETS IF 1ST BYTE BLANK               G 006070
         BNE   TESTRTN             LEFT-JUSTIFICATION COMPLETE IF NON-B G 006080
         EX    R1,TESTLJST         MOVE FIELD 1 POSN TO LEFT            G 006090
         MVI   0(R15),C' '         INSERT TRAI,ING BLANK                G 006100
         BCT   R14,TESTL71         LOOP BACK IS FIELD NOR EXHAUSTED     G 006110
         B     TESTRTN             GO TRTURB TO CALLER                  G 006120
         SPACE 5                                                        G 006130
*********************************************************************** G 006140
*        L8 - RIGHT JUSTIFY IF FIELD IS NON-BLANK                     * G 006150
*********************************************************************** G 006160
         SPACE 1                                                        G 006170
TESTL8   SUBIN ,                   RIGTT-JUSTIFY IF NON-BLANK           G 006180
         CBAL  R4,RIGHTJ           RIGHT JUSTIFY FIELD                  G 006190
         B TESTRTN                 GO TRTURN TO CALLER                  G 006200
         SPACE 5                                                        G 006210
*********************************************************************** G 006220
*        L9 - CURRENCY CONVERSION, ETC                                * G 006230
*********************************************************************** G 006240
         SPACE 1                                                        G 006250
TESTL9   SUBIN ,                   ENTER ROUTINE                        G 006260
         CBAL  R4,CTESTL9          PERFORM CURRENCY CONVERSION          G 006270
        SUBOUT RETURN=TESTRTN      PREPARE TO RETURN TO CALLER          G 006280
         EJECT                                                          G 006290
*********************************************************************** G 006300
*        REPLACE LEADING BLANKS BY ZEROS BAR THE LAST BYTE            * G 006310
*********************************************************************** G 006320
         SPACE 1                                                        G 006330
TESTORZ  SUBIN ,                   SET LEADING BLANKS TO ZERO           G 006340
         SR    R15,R15             ZEROISE WORK REGISTER                G 006350
         LR    R14,R6              POINT R14 AT STRAT OF FIELD          G 006360
         IC    R15,1(R3)           GET LENGTH OF FIELD BEING TESTED     G 006370
         BCTR  R15,0               DECREMENT LENGTH FOR EXECUTE         G 006380
         LTR   R15,R15             TEST IF ONLY 1 BYTE LONK             G 006390
         BZ    *+14                BYPASS 'OR' IF FIELD ONLY 1 LONG     G 006400
         BCTR  R15,0               DECREMENT TO AVOIS LAST BYTE         G 006410
         EX    R15,TESTOC          SET LEADING BLAKS TO ZEROS           G 006420
         LA    R15,1(,R15)         RESET R15 TO EXECUTABLE LENGTH       G 006430
         AR    R14,R15             POINT R14 AT LAST BYRE OF FILED      G 006440
        SUBOUT ,                   RETURN TO CALLER                     G 006450
         SPACE 5                                                        G 006460
*********************************************************************** G 006470
*        CONVERT CURRENCY CODE 19 TO 98 IN THE INPUT RECORD           * G 006480
*********************************************************************** G 006490
         SPACE 1                                                        G 006500
CC19TO98 SUBIN ,                   ENTER ROUTINE                        G 006510
         TM    YPSWITCH,YPSWCC19   IS CURR CODE 19 TO BE CONVERTED      G 006520
         BZ    *+20                BR IF NOT                            G 006530
         CLC   0(2,R6),CC19        IS THIS CURR CODE 19                 G 006540
         BNE   *+10                BR IF NOT                            G 006550
         MVC   0(2,R6),CC19+2      REPLACE 19 BY 98                     G 006560
        SUBOUT ,                   RETURN TO CALLER                     G 006570
         EJECT                                                          G 006580
*********************************************************************** G 006590
*        LT - LESS THAN LITERAL                                       * G 006600
*********************************************************************** G 006610
         SPACE 1                                                        G 006620
TESTLT   SUBIN ,                   ENTER ROUTINE                        G 006630
         LA    R15,LT              SET TEST TYPE                        G 006640
         B     TESTFLD             GO COMPARE WITH LITERAL              G 006650
         SPACE 5                                                        G 006660
*********************************************************************** G 006670
*        LE- LESS THAN OR EQUAL TO LITERAL                            * G 006680
*********************************************************************** G 006690
         SPACE 1                                                        G 006700
TESTLE   SUBIN ,                   ENTER ROUTINE                        G 006710
         LA    R15,LE              SET TEST TYPE                        G 006720
         B     TESTFLD             GO COMPARE WITH LITERAL              G 006730
         SPACE 5                                                        G 006740
*********************************************************************** G 006750
*        EQ - EQUAL TO LITERAL                                        * G 006760
*********************************************************************** G 006770
         SPACE 1                                                        G 006780
TESTEQ   SUBIN ,                   ENTER ROUTINE                        G 006790
         LA    R15,EQ              SET TYST TYPE                        G 006800
         B     TESTFLD             GO COMPARE WITH LITERAL              G 006810
         SPACE 5                                                        G 006820
*********************************************************************** G 006830
*        NE- NOT EQUAL TO LITERAL                                     * G 006840
*********************************************************************** G 006850
         SPACE 1                                                        G 006860
TESTNE   SUBIN ,                   ENTER ROUTINE                        G 006870
         LA    R15,NE              SET TEST TYPE                        G 006880
         B     TESTFLD             GO COMPARE WITH LITERAL              G 006890
         EJECT                                                          G 006900
*********************************************************************** G 006910
*        GT - GREATER THAN LITERAL                                    * G 006920
*********************************************************************** G 006930
         SPACE 1                                                        G 006940
TESTGT   SUBIN ,                   ENTER ROUTINE                        G 006950
         LA    R15,GT              SET TEST TYPE                        G 006960
         B     TESTFLD             GO COMPARE WITH LITERAL              G 006970
         SPACE 5                                                        G 006980
*********************************************************************** G 006990
*        GE - GREATER THAN OR EQUAL TO LITERAL                        * G 007000
*********************************************************************** G 007010
         SPACE 1                                                        G 007020
TESTGE   SUBIN ,                   ENTER ROUTINE                        G 007030
         LA    R15,GE              SET TEST TYPE                        G 007040
         B     TESTFLD             GO COMPARE WITH LIETRAL              G 007050
         EJECT                                                          G 007060
*********************************************************************** G 007070
*        COMPARE FIELD WITH LITERAL                                   * G 007080
*********************************************************************** G 007090
         SPACE 1                                                        G 007100
         USING CB30NTRY,R2         ESTABLISH CB30 ADDRESSABILITY        G 007110
TESTFLD  SUBIN SAVE=(R15,R2)       PRESERVE TEST TYPE & C/B ADDRESS     G 007120
        BBMESS 07                  SET UP DEFAULT ERROR MESSAGE         G 007130
         LR    R14,R1              PRESERVE EXECUTABLE LENGTH           G 007140
         EX    R1,TESTPACK         PACK FIELD INTO 'WORKPACH'           G 007150
         TM    CB30SW,SW30PAKD     IS THIS A NUMERIC COMPARE            G 007160
         BZ    TESTFLD1            BR IF NOT NUMERIC                    G 007170
         LA    R15,$TSTAREA        POINT R15 AT START OF FIELD          G 007180
         AR    R15,R1              ADD EXECUTABLE LGTH TO POINT AT END  G 007190
         CBAL  R4,TESTSN           TEST IF FIELD IS NUMERIC             G 007200
         BH    TESTFLDY            IF NOT NUMERIC, GO SHOW FAILED       G 007210
         BE    *+10                BYPASS ZEROISING IF NOT BLANK        G 007220
         ZAP   $WRKPACK,$ZERO       ZEROISE BECAUSE FIELD BLANK         G 007230
         SUBLR R1,R15              SET TEST TYPE IN LINKAGE REGISTER    G 007240
         SUBLR R2                  RETRIEVE ADDRESS OF CB30             G 007250
         CP    $WRKPACK,CB30RNG1   COMPARE WITH LITERAL VALUE           G 007260
         B     TESTFLD2            GO TEST RESULT OF COMPARE            G 007270
TESTFLD1 LR    R1,R15              SET TEST TYPE IN LINKAGE REGISTER    G 007280
         EX    R14,TESTRNG1        COMPARE WITH CHARACTER LITERAL       G 007290
TESTFLD2 CBAL  R4,COMPARE          TEST RESULT OF COMPARE               G 007300
         BE    *+8                 BR IF TEST SATISFIED                 G 007310
TESTFLDY MVI   $TSTTSTX,C'Y'       SHOW TEST FAILED                     G 007320
         B     TESTRTN             RERURN TO CALLER                     G 007330
         DROP  R2                  DROP CB30 ADDRESSABILITY             G 007340
         EJECT                                                          G 007350
*********************************************************************** G 007360
*        R1 - COMPARE FIELD WITH SUPPLIED RANGE                       * G 007370
*********************************************************************** G 007380
         SPACE 1                                                        G 007390
         USING CB30NTRY,R2         ESTABLISH C/B ADDRESSABILITY         G 007400
TESTR1   SUBIN SAVE=R2             PRESERVE ADDRESS OF CB30             G 007410
        BBMESS 05                  SET UP DEFAULT ERROR MESSAGE         G 007420
         TM    CB30SW,SW30PAKD     IS THIS A NUMERIC TEST               G 007430
         BZ    TESTR11             BR IF NOT NUMERIC                    G 007440
         EX    R1,TESTPACK         PACK FIELD INTO $WRKPACK             G 007450
         CBAL  R4,TESTSN           TEST IF VALUE IS NUMERIC             G 007460
         BH    TESTR1Y             IF NOT NUMERIC, GO SHOW FAILED       G 007470
         BE    *+10                BYPASS ZEROISING IF NOT BLANK        G 007480
         ZAP   $WRKPACK,$ZERO       ZEROISE BECAUSE FIELD BALNK         G 007490
         SUBLR R2                  RESTORE ADDRESS OF CB30              G 007500
         TM    CB30SW,SW30EXT      TEST IF INTERANAL RANGE TEST         G 007510
         BZ    TESTR12             BR IF ASSUMPTION CORRECT             G 007520
         CP    $WRKPACK,CB30RNG1   COMPARE FIELD WITH LOWER RANGE VALUE G 007530
         BL    TESTR1X             IF LOW THEN TEST SATISFIED           G 007540
         CP    $WRKPACK,CB30RNG2   COMPARE FIELD WITH UPPER RANGE VALUE G 007550
         BH    TESTR1X             IF HIGH THEN TEST SATISFIED          G 007560
         B     TESTR1Y             GO SHOW TEST NOT SATISFIED           G 007570
TESTR12  CP    $WRKPACK,CB30RNG1   COMPARE FIELD WITH LOWER RANGE VALUE G 007580
         BL    TESTR1Y             IF LOW THEN NOT SATISFIED            G 007590
         CP    $WRKPACK,CB30RNG2   COMPARE FIELD WITH UPPER RANGE VALUE G 007600
         BH    TESTR1Y             IF HIGH THEN NOT SATISFIED           G 007610
         B     TESTR1X             GO SHOW TEST SATISFIED               G 007620
TESTR11  TM    CB30SW,SW30EXT      TEST IF R1 <= FLD <= R2              G 007630
         BZ    TESTR13             BR IF YES                            G 007640
         EX    R1,TESTRNG1         COMPARE FIELD WITH LOWER RANGE VALUE G 007650
         BL    TESTR1X             IF LOW THEN TEST SATISFIED           G 007660
         EX    R1,TESTRNG2         COMPARE FIELD WITH UPPER RANGE VALUE G 007670
         BH    TESTR1X             IF HIGH THEN TEST SATISFIED          G 007680
         B     TESTR1Y             GO SHOW TEST FAILED                  G 007690
TESTR13  EX    R1,TESTRNG1         COMPARE WITH LOWER RANGE VALUE       G 007700
         BL    TESTR1Y             IF LOW THEN TEST FAILED              G 007710
         EX    R1,TESTRNG2         COMPARE FIELD WITH UPPER RANGE VALUE G 007720
         BNH   TESTR1X             IF NOT HIGH THEN TEST SATISFIED      G 007730
TESTR1Y  MVI   $TSTTSTX,C'Y'       SHOW TEST FAILED                     G 007740
TESTR1X  B     TESTRTN             GO RETURN TO CALLER                  G 007750
         DROP  R2                  DROP CB30 ADDRESSABILITY             G 007760
         EJECT                                                          G 007770
*********************************************************************** G 007780
*        THIS SUB-ROUTINE VERIFIES THAT AN EB DIC SUB-FIELD IS NUMERIC* G 007790
*         - LEADING BLANKS AND ALL BLANK FIELDS ARE CONSIDERED VALID, * G 007800
*         BUT SIGN OVER-PUNCHES ARE NOT.  ON ENTRY, R1 POINTS AT THA  * G 007810
*         START OF THE FIELD AND R15 CONTAINS THE LENGTH.  THE COND   * G 007820
*         CODE IS SET SUCH THAT THE USER CAN MAKE THE FOLLOWING TESTS * G 007830
*              BL - ALL BLANK                                         * G 007840
*              BE - NUMERIC                                           * G 007850
*              BH - NON-NUMERIC                                       * G 007860
*********************************************************************** G 007870
         SPACE 1                                                        G 007880
NUMERIC  SUBIN SAVE=(R1,R2,R4,R6,R15) PRESERVE REGISTERS                G 007890
         LR    R6,R1               POINT R6 AT START OF FIELD           G 007900
         BCTR  R15,0               DECREMENT R15 FOR EXECUTE            G 007910
         MVC   LINE09V,$SPACES     BLANK OUT VALUE IN ERROR MESSAGE     G 007920
         EX    R15,MVCLINE9        MOVE VALUE TO ERROR MESSAGE LEST BAD G 007930
         EX    R15,TESTMVC1        MOVE FIELD TO TEST ARAEA             G 007940
         EX    R15,NUMPACK         PACK INTO $WRKPACK                   G 007950
         LA    R14,$TSTAREA        POINT R14 AT START OF FIELD          G 007960
         LR    R1,R15              SET R1 TO EXECUTABLE LENGTH          G 007970
         AR    R15,R14             POINT R15 AT END OF FIELD            G 007980
         CBAL  R4,TESTUN           TEST FIELD FOR UNSIDNED NUMERIC      G 007990
         BNH   *+8                 BR IF NUMERIC OR BLANK               G 008000
         CBAL  R4,NUMERR           PROCESS NON-NUMERIC FIELD            G 008010
         CBAL  R4,NUMSETUP         SET UP VALUE IN WORK FIELDS          G 008020
         CLI   $TSTTSTX,C'X'       RESET COND CODE FOR CALLER           G 008030
        SUBOUT RESTORE=(R1,R2,R4,R6,R15) RESTORE & RETURN TO CALLER     G 008040
         EJECT                                                          G 008050
*********************************************************************** G 008060
*        IDENTICAL TO THE ROUTINE 'NUMERIC' EXCEPT THAT SIGN OVER-    * G 008070
*         PUNCHES ARE CONSIDERED VALID.  ON ENTRY, R1 POINTS AT THE   * G 008080
*         START OF THE FIELD AND R15 CONTAINS THE LENGTH.  THE COND   * G 008090
*         CODE IS SET SUCH THAT THE CALLER CAN PERFOARM THE           * G 008100
*         FOLLOWING TESTS -                                           * G 008110
*              BL  - ALL BLANK                                        * G 008120
*              BE  - NUMERIC                                          * G 008130
*              BH  - NON-NUMERIC                                      * G 008140
*********************************************************************** G 008150
         SPACE 1                                                        G 008160
NUMRICS  SUBIN SAVE=(R1,R2,R4,R6,R15) PRESERVE REGISTERS                G 008170
         LR    R6,R1               POINT R6 AT START OF FIELD           G 008180
         BCTR  R15,0               DECREMENT FOR EXECUTE                G 008190
         MVC   LINE09V,$SPACES     BLANK OUT VALUE IN ERROR MESSAGE     G 008200
         EX    R15,MVCLINE9        MOVE VALUE TO ERROR MESSAGE LEST BAD G 008210
         EX    R15,TESTMVC1        MOVE FIED TO TEST AREA               G 008220
         EX    R15,NUMPACK         PACK VALUE INTO $WRKPACK             G 008230
         LA    R14,$TSTAREA        POINT R14 AT START OF FIRLD          G 008240
         LR    R1,R15              SET R1 TO EXECUTABLE LENGTH          G 008250
         AR    R15,R14             POINT R15 AT END OF FIELD            G 008260
         CBAL  R4,TESTSN           TEST FOR SIGNED/UNSIGNED NUMERIC     G 008270
         BNH   *+8                 BR IF NUMERIC OR BLANK               G 008280
         CBAL  R4,NUMERR           PROCESS NON-NUMERIC FIELD            G 008290
         CBAL  R4,NUMSETUP         SET UP VALUE IN WORK FIELDS          G 008300
         CLI   $TSTTSTX,C'X'       RESET COND CODE FOR CALLER           G 008310
        SUBOUT RESTORE=(R1,R2,R4,R6,R15) RESTORE & RETURN TO CALLER     G 008320
         EJECT                                                          G 008330
*********************************************************************** G 008340
*        PROCESS ERRORS IN 'NUMERIC' AND 'NUMRICS'                    * G 008350
*********************************************************************** G 008360
         SPACE 1                                                        G 008370
NUMERR   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 008380
         ZAP   $WRKPACK,$ZERO      ZEROISE PACKED VALUE                 G 008390
         TM    SWINIT,SWCCPRNT     ARE WE PROCESSING CONTROL CARDS      G 008400
         BZ    NUMERRX             EXIT IF NOT C/C                      G 008410
         OI    SWERROR,SWEFLUSH    FLAG TO FLUSH AFTER C/C PROCESSING   G 008420
         MVI   $COMPCDE+1,COND16   SET RETURN CODE                      G 008430
         MVC   5(L'LINE09,R5),LINE09 MOVE ERROR MESSAGE TO LINE         G 008440
         MVC   5+L'LINE09(L'LINE09V,R5),LINE09V ADD VALUE TO MESSAGE    G 008450
NUMERRX SUBOUT RESTORE=R4          RESTORE AND RETURN TO CLLER          G 008460
         SPACE 5                                                        G 008470
*********************************************************************** G 008480
*        SET UP VALUE IN WORK FIELD                                   * G 008490
*********************************************************************** G 008500
         SPACE 1                                                        G 008510
NUMSETUP SUBIN ,                   ENTER ROUTINE                        G 008520
         CLI   $TSTTSTX,C'X'       DETERMINE RESULT OF NUMERIC TEST     G 008530
         BE    NUMSET1             BR IF FIELD IS NUMERIC               G 008540
         ZAP   $WRKPACK,$ZERO      ZEROISE PACKED VALUE                 G 008550
NUMSET1  ZAP   $WRKDUBL,$WRKPACK   MOVE VALUE TO DOUBLE WORD            G 008560
         CVB   R1,$WRKDUBL         CONVERT VALUE TO BINARY              G 008570
         ST    R1,$BVALUE          PRESERVE BINARY VALUE                G 008580
         ZAP   $PVALUE,$WRKPACK    PRESERVE PACKED DECIMAL VALUE        G 008590
        SUBOUT ,                   RETRUN TO CALLER                     G 008600
         EJECT                                                          G 008610
*********************************************************************** G 008620
*        SN - SIGNED/UNDIGNED NUMERIC WITH LEADING BLANKS             * G 008630
*********************************************************************** G 008640
         SPACE 1                                                        G 008650
*        THE CONDITION CODE IS SET SUCH THAT THE CALLER CAN MAKE        G 008660
*         THE FOOLLOWING TESTS -                                        G 008670
*              BL - FIELD IS ALL BLANK                                  G 008680
*              BE - FIELD IS NUMERIC                                    G 008690
*              BH - FIELD IS NON-NUMERIC                                G 008700
         SPACE 1                                                        G 008710
TESTSN   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 008720
         TM    APSWITCH,APSWJUST   IF FIELD TO BE RIGHT JUSTIFIED       G 008730
         BZ    *+8                 BYPASSS IF NOT                       G 008740
         CBAL  R4,RIGHTJ           RIGHT JUSTIFY NUMERIC FIELD          G 008750
         MVI   $TSTTSTX,C'W'       ASSUME ALL BLANK                     G 008760
         EX    R1,TESTCLC          TEST IF FIELD ALL SPACES             G 008770
         BE    TESTSNX             RETURN IF ALL BLANK                  G 008780
         MVI   $TSTTSTX,C'Y'       ASSUME FIELD INVALID                 G 008790
         EX    R1,TESTTR           TRANSLATE FIELD AGAINST MAIN TABLE   G 008800
         LTR   R1,R1               SEE IF FIELD ONLY 1 OONG             G 008810
         BZ    TESTSN01            BRANCH IF ONLY 1 BYTE TO TEST        G 008820
         BCTR  R1,0                DECREMENT TO TEST L - 1              G 008830
         EX    R1,TESTTRN          ACCEPT ONLY ' ' & 0 - 9              G 008840
         BNE   TESTSNX             RETURN IF INVALID CHARS FOUND        G 008850
         LA    R1,1(,R1)           RESET R1 TO FULL FIELD LENGTH        G 008860
TESTSN01 EX    R1,TESTTRS          ACCEPT ONLY ' ', 0-9, A-R, 11-0,12-0 G 008870
         BNE   TESTSNX             RETURN IF INVALID CHARS FOUND        G 008880
         SPACE 1                                                        G 008890
*        IT IS NOW KNOWN THAT THE FIELD BEING TESTED CONTAINS           G 008900
*         NO INVALID CHARACTERS, SO IT ONLY REMAINS TO ENSURE THAT      G 008910
*         THERE ARE NO EMBEDDED BLANKS.                                 G 008920
         SPACE 1                                                        G 008930
         MVI   $TSTTSTX,C'X'       ASSUME FIELD VALID                   G 008940
         EX    R1,TESTTRNS         LOCTAE 1ST NUMERIC BYTE IN FIELD     G 008950
         BC    2,TESTSNX           IF LAST BYTE IS 1ST NUMERIC, THEN    G 008960
*                                   NO EMBEDDED BLANKS POSSIBLE         G 008970
         LR    R14,R1              POINT R14 AT 1ST NUMERIC CHAR        G 008980
         SR    R15,R14             SET R15 TO LENGTH OF RESIDUAL FIELD  G 008990
         EX    R15,TESTTRBL        SCAN RESIDUAL FIELD FOR BLANK        G 009000
         BE    TESTSNX             BRANCH IF BLANK NOT FOUND            G 009010
         MVI   $TSTTSTX,C'Y'       SET TO SHOW NON-NUMERIC              G 009020
TESTSNX  CLI   $TSTTSTX,C'X'       SET COND CODE FOR CALLER             G 009030
        SUBOUT RESTORE=R4          RESTORE & RETURN TO CALLER           G 009040
         EJECT                                                          G 009050
*********************************************************************** G 009060
*        UN - UNSIGNED NUMERIC WITH LEADING BLANKS                    * G 009070
*********************************************************************** G 009080
         SPACE 1                                                        G 009090
*        THE CONDITION CODE IS SET SUCH THAT THE CALLER CAN MAKE        G 009100
*         THE FOLLOWING TESTS -                                         G 009110
*              BL - FIELD ALL BLANK                                     G 009120
*              BE - FIELD NUMERIC                                       G 009130
*              BH - FIELD NON-NUMERIC                                   G 009140
         SPACE 1                                                        G 009150
TESTUN   SUBIN SAVE=R4             PRESERVE RETURN ADDRESS              G 009160
         TM    APSWITCH,APSWJUST   IF FIELD TO BE RIGHT JUSTIFIED       G 009170
         BZ    *+8                 BYPASS IF NOT                        G 009180
         CBAL  R4,RIGHTJ           RIGHT JUSTIFY FIELD                  G 009190
         MVI   $TSTTSTX,C'W'       ASSUME ALL BLANK                     G 009200
         EX    R1,TESTCLC          TEST IF ALL BLANK                    G 009210
         BE    TESTUNX             RETURN IF FIELD ALL BLANK            G 009220
         MVI   $TSTTSTX,C'Y'       ASSUME FIELD IS INVALID              G 009230
         EX    R1,TESTTR           TRANSLATE FIELD AGAINST MAIN TABLE   G 009240
         EX    R1,TESTTRN          ACCEPT ONLY ' ' & 0 - 9              G 009250
         BNE   TESTUNX             RETURN IF INVALID CHARD FOUND        G 009260
         SPACE 1                                                        G 009270
*        THE FIELD BEING TESTED CONTAINS NO INVALID CHARACTERS, SO      G 009280
*         IT ONLY REMAINS TO ENSURE THAT THERE ARE NO EMBEDDED BLANKS   G 009290
         SPACE 1                                                        G 009300
         MVI   $TSTTSTX,C'X'       ASSUME FIELD VALID                   G 009310
         EX    R1,TESTTRNO         LOCATE 1ST NUMERIC BYTE              G 009320
         BC    2,TESTUNX           IF LAST BYTE IS 1ST NUMERIC BYTE,    G 009330
*                                   THEN FIELD CANNOT CONTAIN EMBEDDED  G 009340
*                                   BLANKS WITHIN THE NUMERIC DATA      G 009350
         LR    R14,R1              POINT R14 AT 1ST NUMERIC CHARACTER   G 009360
         SR    R15,R14             DETERMINE LENGTH OF RESIDUAL FIELD   G 009370
         EX    R15,TESTTRBL        SCAN RESIDUAL FIELD FOR BLANKS       G 009380
         BE    TESTUNX             IF NO BL FOUND, THEN FIELD VALID     G 009390
         MVI   $TSTTSTX,C'Y'       SET TO SHOW DATA NON-NUMERIC         G 009400
TESTUNX  CLI   $TSTTSTX,C'X'       SET COND CODE FOR CALLER             G 009410
        SUBOUT RESTORE=R4          RESORE & RETURN TO CALLER            G 009420
         EJECT                                                          G 009430
*********************************************************************** G 009440
*        VERIFY THAT A FIELD SI VALID SIGNED / UNSIGNED NUMERIC       * G 009450
*         AND, IF IT IS, PACKS THE FIELD INTO '$WRKPACK'.  ON         * G 009460
*         INPUT, R3 POINTS TO THE 'PL' OF THE FIELD AND R6 POINTS     * G 009470
*         AT THE RECORD CONTAINING THE FIELD.  THE CONDITIOM CODE     * G 009480
*         IS SET SUCH THAT THE USER CAN MAKE THE FOLLOWING TESTS -    * G 009490
*              BL - FIELD ALL BLANK                                   * G 009500
*              BE - FIELD NUMERIC                                     * G 009510
*              BH - FIELD NON-NUMERIC                                 * G 009520
*        THE CALLER ESTABLISHES THE TYPE OF TEST TO BE APPLIED TO     * G 009530
*         THE FIELD, AND PUTS THE INTERNAL TEST REPRESENTATION        * G 009540
*         INTO THE FIELD 'SFTEST'.                                    * G 009550
*********************************************************************** G 009560
         SPACE 1                                                        G 009570
SFVERIF  SUBIN SAVE=R4             TEST FOR SIGNED/UNSIGNED NUMERIC     G 009580
         ZAP   $WRKPACK,$ZERO       ASSUME FIELD BL OR NON-NUMERIC      G 009590
         TSEL  $SFTEST             SELECT AND PERFORM REQUIRED TEST     G 009600
         BNE   VERIFYSX            EXIT IF FIELD NOT NUMERIC OR BL      G 009610
         SR    R1,R1               ZEROISE WORK REGISTER                G 009620
         IC    R1,0(R3)            GET FIELD OFFSET                     G 009630
         BCTR  R1,0                DECREMENT ( OFFSET - 1 = DISPLACEME) G 009640
         AR    R1,R6               POINT R1 AT FIELD                    G 009650
         SR    R15,R15             ZEROISE WORK REGISEER                G 009660
         IC    R15,1(R3)           PUT LENGTH INTO R15                  G 009670
         BCTR  R15,0               DECREMENT FOR EXECUTE                G 009680
         EX    R15,SFPACK          PACK FIELD INTO '$WRKPACK'           G 009690
VERIFYSX CLI   $TSTTSTX,C'X'       RESET COND CODE FOR CALLER           G 009700
        SUBOUT RESTORE=R4          RETURN TO CALLER                     G 009710
         EJECT                                                          G 009720
*********************************************************************** G 009730
*        RIGHT JUSTIFY IF FIELD IS NON-BLANK                          * G 009740
*********************************************************************** G 009750
         SPACE 1                                                        G 009760
RIGHTJ   SUBIN SAVE=(R6,R14,R15)   PRESERVE REGISTERS                   G 009770
         EX    R1,TESTCLC          TEST IF FIELD IS ALL BLANK           G 009780
         BE    RIGHTJX             EXIT IF ALL BLANK                    G 009790
         LTR   R1,R1               TEST IF FIELD 1 BYTE LONG            G 009800
         BZ    RIGHTJX             EXIT IF ONLY 1 BYTE LONG             G 009810
         LR    R15,R6              POINT R15 AT STARR OF FIELD          G 009820
         LR    R14,R15             POINT R14 AT START OF FIELD          G 009830
         AR    R15,R1              POINT R15 AT END OF FIELD            G 009840
         B     RIGHTJ3             GO SEE IF JUSTIFICATION REQUIRED     G 009850
RIGHTJ1  LR    R6,R1               SET LENGTH FOR LOOP                  G 009860
         LR    R14,R15             POINT R14 AT END OF FIELD            G 009870
         BCTR  R14,0               POINT AT LAST BUT 1                  G 009880
RIGHTJ2  MVC   1(1,R14),0(R14)     MOVE 1 BYTE 1 POSN TO RIGHT          G 009890
         BCTR  R14,0               DECREMENT TO PREVIOUS BUYE           G 009900
         BCT   R6,RIGHTJ2          LOOP BACK IF FIELD NOT EXHAUSTED     G 009910
         MVI   1(R14),C' '         INSERT LEADING BLANK                 G 009920
         LA    R14,1(,R14)         POINT AT START OF FIELD              G 009930
RIGHTJ3  CLI   0(R15),C' '         TEST IF RIGHT MOST BYTE STILL BLANK  G 009940
         BE    RIGHTJ1             CONTINUE JUSTIFICATION IF BALNK      G 009950
         EX    R1,C3MVC1           MOVE JUSTIFIED FIELD TO WORK AREA    G 009960
RIGHTJX SUBOUT RESTORE=(R6,R14,R15) RESTORE & RETURN TO CALLER          G 009970
         EJECT                                                          G 009980
*********************************************************************** G 009990
*        R2 - TRANSFORM TRAILING SPACES TO ZEROES                     * G 010000
*********************************************************************** G 010010
         SPACE 1                                                        G 010020
TESTR2   SUBIN ,                   TRANSFORM TRAILING SPACES            G 010030
         LR    R15,R6              POINT R15 AT START OF FIELD IN RECOR G 010040
         AR    R15,R1              POINT R15 AT END OF FIELD IN RECORD  G 010050
         LA    R1,1(,R1)           INCREMENT EXECUTABLE LENGTH FOR BCT  G 010060
TESTR201 CLI   0(R15),C' '         IS THE CHARACTER BLANK               G 010070
         BNE   TESTR202            EXIT IF NON-BLANK FOUND              G 010080
         MVI   0(R15),C'0'         SET THE BLANK TO ZERO                G 010090
         BCTR  R15,0               DECREMENT R15 TO PREVIOUS CHARACTER  G 010100
         BCT   R1,TESTR201         LOOP BACK IF FIELD NOT EXHAUSTED     G 010110
TESTR202 B     TESTRTN             PREPARE TO RETUN TO CALLER           G 010120
         EJECT                                                          G 010130
*********************************************************************** G 010140
*        C1 - VERIFY FIELD IS ON SUPPLIED LIST                          G 010150
*********************************************************************** G 010160
         SPACE 1                                                        G 010170
         USING CB34NTRY,R2         ESTABLISH ADDRESSABILITY             G 010180
TESTC1   SUBIN ,                   ENTER SUBROUTINE                     G 010190
        BBMESS 19                  SET UP DEAULT MESSAGE                G 010200
         SR    R14,R14             ZEROISE WORK REGISTER                G 010210
         SR    R15,R15             ZEROISE WORK REGISTER                G 010220
         IC    R14,CB34NLST        SET NO OF ENTRIES IN LIST (FOR LOOP) G 010230
         IC    R15,CB34LLST        SET LENGTH OF EACH ENTRY             G 010240
         LA    R2,CB34LIST         POINT AT START OF LIIST              G 010250
         EX    R1,TESTCLCL         COMPARE FIELD WITH ENTRY             G 010260
         BE    TESTC1X             BR IF MATCH FOUND                    G 010270
         AR    R2,R15              INCREMENT TO NEX ENTRY               G 010280
         BCT   R14,*-10            LOOP BACK IF ENTRIES LEFT            G 010290
         MVI   $TSTTSTX,C'Y'       SHOW TEST FAILED                     G 010300
TESTC1X  B     TESTRTN             PREPARE TO RETURN TO CALLER          G 010310
         DROP  R2                  DROP CB34 ADDRESSABILITY             G 010320
         SPACE 5                                                        G 010330
*********************************************************************** G 010340
*        C2 - 1ST CHARACTER AN ASTERISK                               * G 010350
*********************************************************************** G 010360
         SPACE 1                                                        G 010370
TESTC2   SUBIN ,                   TEST IF 1ST CHAR IS AN ASTERISK      G 010380
         MVC   DTBBEMSS(L'BBMESS16),BBMESS16 ERROR MESSAGE TO LINE      G 010390
         CLI   0(R6),C'*'          TEST FOR ASTERISK                    G 010400
         BE    *+8                 BR IF TEST SATIFIED                  G 010410
         MVI   $TSTTSTX,C'Y'       SHOW TEST NOT SATISFIED              G 010420
         B     TESTRTN             GO RETURN TO CALLER                  G 010430
         EJECT                                                          G 010440
*********************************************************************** G 010450
*        C3 - MOVE/COMPARE FIELDS IN THE RECORD                       * G 010460
*********************************************************************** G 010470
         SPACE 1                                                        G 010480
         USING CB33NTRY,R2         ESTABLISH CB33 ADDRESSABILITY        G 010490
         USING CB13NTRY,R8         ESTABLISH CB13 ADDRESSABILITY        G 010500
TESTC3   SUBIN ,                   ENTER ROUTINE                        G 010510
         BBMESS 17                 SET UP DEFAULT MESSGE                G 010520
         SR    R4,R4               ZEROISE 'EX' REGISTER                G 010530
         IC    R4,CB33LEN1         RETRIEVE LENGTH OF 'FROM' FILD       G 010540
         BCTR  R4,0                DECREMENT FOR EXECUTE                G 010550
         L     R6,SYSUT1+IOPSRECA  POINT R6 AT DETAIL RECORD            G 010560
         SR    R15,R15             ZEROISE WORK REGISTER                G 010570
         SR    R14,R14             ZEROISE WORK REGISTER                G 010580
         IC    R15,CB33POS2        RETRIEVE POSN OF 'TO' FIELD          G 010590
         BCTR  R15,0               DECREMENT POSN TO DISPLACEMENT       G 010600
         AR    R15,R6              POINT R15 AT 'TO' FIELD              G 010610
         IC    R14,CB33POS1        RETRIEVE POSN OF 'FROM' FIELD        G 010620
         BCTR  R14,0               DECREMENT POSN TO DISPLACEMENT       G 010630
         AR    R14,R6              POINT R14 AT 'FROM' FIELD            G 010640
         TM    CB33SW,SW33LIT      TEST IF 'FROM' IS LITERAL            G 010650
         BZ    *+8                 BR IF NO LITERAL                     G 010660
         LA    R14,CB33LIT         POINT R14 AT LITERAL                 G 010670
         TM    CB33SW,SW33MOVE     S OPERATION A MOVE                   G 010680
         BZ    TESTC3C             BR IF NOT A MOVE TO COMPARE          G 010690
         TM    CB33SW,SW33MP       ARE WE TO PACK                       G 010700
         BO    TESTC3MP            BR IF YES TO PACK                    G 010710
         TM    CB33SW,SW33MU       ARE WE TO UNPACK                     G 010720
         BO    TESTC3MU            BR IF YES TO UNPACK                  G 010730
         B     TESTC3MV            GO PERFORM DIRECT MOVE               G 010740
TESTC3MP EX    R4,C3PACK           PACK FIELD INTO OUTPUT POSN          G 010750
         B     TESTC3X             GO TO EXIT & SHOW SATISFIED          G 010760
TESTC3MU EX    R4,C3UNPACK         UNPACK FIELD INTO OUTPUT POSN        G 010770
         IC    R4,CB33LEN2         RETRIEVE LENGTH OF 'TO' FIELD        G 010780
         AR    R15,R4              POINT AT LAST BYTE OF 'T/' FIELD     G 010790
         TM    0(R15),X'30'        TEST IF SIGN IS 'C'                  G 010800
         BNZ   *+8                 BR IF SIGN NOT 'C'                   G 010810
         OI    0(R15),X'30'        ALTER SIGN TO 'F' FOR EBCDIC CLARITY G 010820
         B     TESTC3X             GO TO EXIT & SHOW SATISFIED          G 010830
TESTC3MV EX    R4,C3MVC1           MOVE TO INTERMEDIATE AREA            G 010840
         EX    R4,C3MVC2           MOVE FROM INTERMED AREA              G 010850
         B     TESTC3X             GO TO EXIT & SHOW 'SATISFIED'        G 010860
         EJECT                                                          G 010870
*********************************************************************** G 010880
*        C3 - MOVE/COMPARE FIELDS IN THE SAME RECORD ( CONT'D )       * G 010890
*********************************************************************** G 010900
         SPACE 1                                                        G 010910
TESTC3C  TM    CB33SW,SW33CPD      IS IT PACKED DECIMAL COMPARE         G 010920
         BO    TESTC3CP            BR IF YES TO PROCESS                 G 010930
         TM    CB33SW,SW33CNUM     IS IT EBCDIC NUMERIC COMPARE         G 010940
         BO    TESTC3CN            BT IF YES TO PROCESS                 G 010950
         EX    R4,C3CLC            PERFORM COMPARE OF FIELDS            G 010960
         B     TESTC3CC            GO TEST RESULT OF COMPARE            G 010970
         SPACE 1                                                        G 010980
TESTC3CP LR    R6,R14    !         POINT R6 AT FIEST FIELD              G 010990
         EX    R4,TESTZAP          MOVE 1ST OPERAND TO '$WRKPACK'       G 011000
         ZAP   $WRKPCKL,$WRKPACK   MOVE 1ST OPERAND TO $WRKPCKL         G 011010
         LR    R6,R15              POINT R6 AT 2ND OPERAND              G 011020
         IC    R4,CB33LEN2         RETRIEVE LENGTH OF 2ND OPERAND       G 011030
         EX    R4,TESTZAP          MOVE 2ND FLD TO '$WRKPACK'           G 011040
         CP    $WRKPCKL,$WRKPACK   COMPARE THE VALUES                   G 011050
         B     TESTC3CC            GO TEST RESULT OF COMPARE            G 011060
         SPACE 1                                                        G 011070
TESTC3CN LR    R6,R14              POINT R14 AT 1ST FIELD               G 011080
         LR    R1,R4               SET EXECUTABLE LENGTH IN R1          G 011090
         EX    R4,TESTMVC          MOVE 1ST FIELD TO $WRKAREA           G 011100
         EX    R4,TESTPACK         ASSUME NUMERIC & MOVE INTO '$WRKPACK G 011110
         LA    R15,$TSTAREA        POINT R15 AT TEST AREA               G 011120
         AR    R15,R1              POINT R15 AT END OF 1ST OPERAND      G 011130
         CBAL  R4,TESTSN           ENSURE 1ST OPERND IS NUMERIC         G 011140
         BH    TESTC3Y             IF NOT NUMERIC THEN FORCE COMPARE FL G 011150
         BE    *+10                BR F NUMERIC                         G 011160
         ZAP   $WRKPACK,$ZERO      SET PACKED VALUE TO ZERO IF SOURCE B G 011170
         ZAP   $WRKPCKL,$WRKPACK   MOVE 1ST OPERAND TO $WRKPCKL         G 011180
         L     R2,CB13CBXX         RETRIEVE CB33 ADDRESS                G 011190
         SR    R6,R6               ZEROISE WORK REGISTER                G 011200
         IC    R6,CB33POS2         GET POSN OF 2ND OPERAND              G 011210
         BCTR  R6,0                DECREMENT POSN TO DISPLACEMENT       G 011220
         A     R6,SYSUT1+IOPSRECA  ADD RECORD ADDRESS TO POIN A T FIELD G 011230
         SR    R1,R1                ZEROISE WORK REHISTER               G 011240
         IC    R1,CB33LEN2         GET LENGHT OF 2ND OPERAND            G 011250
*        BCTR  R1,0                DECREMENT DONE IN INITIALISATION     G 011260
         EX    R1,TESTPACK         ASSUME FILED NUMERIC & MOVE TO WORKP G 011270
         EX    R1,TESTMVC          MOVE 2ND OPERAND TO TEST AREA        G 011280
         LA    R15,$TSTAREA        POINT R15 AT TEST AREA               G 011290
         AR    R15,R1              POINT R15 AT END OF 2ND OPEREND      G 011300
         EJECT                                                          G 011310
*********************************************************************** G 011320
*        C3 - MOVE/COMPARE FIELDS IN THE SAME RECORD ( CONT'D )       * G 011330
*********************************************************************** G 011340
         SPACE 1                                                        G 011350
         CBAL  R4,TESTSN           ENSURE FLD IS NUMERIC                G 011360
         BH    TESTC3Y             IF NOT NUMRIC THEN COMPARE FAILED    G 011370
         BE    *+10                BR IF NUMERIC                        G 011380
         ZAP   $WRKPACK,$ZERO       ZEROISE PD FLD IF SOURCE BLANK      G 011390
         L     R2,CB13CBXX         RETRIEVE CB33 ADDRESS                G 011400
         SR    R1,R1               ZEROISE WORK REGISTER                G 011410
         CP    $WRKPCKL,$WRKPACK   COMPARE THE 2 VALUES                 G 011420
TESTC3CC IC    R1,CB33TYPE         SET COMPARISON TYPE                  G 011430
         CBAL  R4,COMPARE          TEST RESULT OF COMPARE               G 011440
         BE    *+8                 BR IF COMPARISON SATISFIED           G 011450
TESTC3Y  MVI   $TSTTSTX,C'Y'       FLAG TEST AS NOT SARISFIED           G 011460
TESTC3X  B     TESTRTN             PREPARE TO RETRUN TO CALLER          G 011470
         DROP  R8                  DROP CB13 ADDRESSABILITY             G 011480
         SPACE 5                                                        G 011490
*********************************************************************** G 011500
*        C6 - TRANSFORM SPACES TO ZEROES                              * G 011510
*********************************************************************** G 011520
         SPACE 1                                                        G 011530
TESTC6   SUBIN ,                   ENTER ROUTINE                        G 011540
         LR    R15,R6              POINT R15 AT START OF FLD IN RECORD  G 011550
         AR    R15,R1              POINT R15 AT END OF FIELD IN RECORD  G 011560
         LA    R1,1(,R1)           INCREMENT EXECUTABLE LENGTH FOR BCT  G 011570
TESTC601 CLI   0(R15),C' '         IS THE POSITION BLANK                G 011580
         BNE   *+8                 BR IF NOT                            G 011590
         MVI   0(R15),C'0'         ALTER BLANK TO ZERO                  G 011600
         BCTR  R15,0               POINT R25 AT PREVIOUS CHATACTER      G 011610
         BCT   R1,TESTC601         LOOP BACK IF FIELD NOT EXHAUSTED     G 011620
         B     TESTRTN             PREPARE TO RETURN TO CALLER          G 011630
         EJECT                                                          G 011640
*********************************************************************** G 011650
*        C7 - PERFORM ARITHMETIC                                      * G 011660
*********************************************************************** G 011670
         SPACE 1                                                        G 011680
TESTC7   SUBIN ,                   PERFROM MATHS                        G 011690
         CBAL  R4,CTESTC7          PERFROM MATHS                        G 011700
         B     TESTRTN             PREPARE TO RETURN TO CALLER          G 011710
         SPACE 5                                                        G 011720
*********************************************************************** G 011730
*        I - ISAM LOOK-UP                                             * G 011740
*********************************************************************** G 011750
         SPACE 1                                                        G 011760
TESTI    SUBIN ,                   ISAM LOOK-UP ENTRY POINT             G 011770
         CBAL  R4,CTESTI           PERFORM ISAM LOOKUP                  G 011780
         B     TESTRTN             PREPARE TO RETURN TO CALLER          G 011790
         SPACE 5                                                        G 011800
*********************************************************************** G 011810
*        E1 - PARTIAL KEY MATCHING                                    * G 011820
*********************************************************************** G 011830
         SPACE 1                                                        G 011840
TESTE1   SUBIN ,                   ENTER ROUTINE                        G 011850
         CBAL  R4,CTESTE1          PERPFORM PARTIAL KEY MATCHING        G 011860
        SUBOUT RETURN=TESTRTN      PREPARE TO TETURN TO CALLER          G 011870
         TITLE 'BUDGIE3G - TRANSFER CONTROL TO APPROPRIATE CSECTS'      G 011880
*        NOTE THAT R4 IS NOT SPECIFIED IN THE FOLLOWING CBAL'S.  THIS   G 011890
*         ENSURES THAT THE APPROPRIATE INDEX VALUE IS STILL IN R4, AND  G 011900
*         CAN BE USED FOR AN INDEXED BRANCH BY THE CSECT GAINING        G 011910
*         CONTROL.  THE CSECTS RETRUN CONTROL TO 'TESTRTN', VIA A CBAL. G 011920
         SPACE 1                                                        G 011930
*********************************************************************** G 011940
*        TRANSFER CONTROL TO BUDGIE3H                                 * G 011950
*********************************************************************** G 011960
         SPACE 1                                                        G 011970
TESTSEL2 SUBIN ,                   ENTER ROUTINE                        G 011980
         CBAL  ,TESTSL2            TRANSFER CONTROL TO BUDGIE3H         G 011990
         SPACE 5                                                        G 012000
*********************************************************************** G 012010
*        TRANSFER CONTROL TO BUDGIE3I                                 * G 012020
*********************************************************************** G 012030
         SPACE 1                                                        G 012040
TESTSEL3 SUBIN ,                   ENTER ROUTINE                        G 012050
         CBAL  ,TESTSL3            TRANSFER CONTROL TO BUDGIE3I         G 012060
         SPACE 5                                                        G 012070
*********************************************************************** G 012080
*        TRANSFER CONTROL TO BUDGIE3J                                 * G 012090
*********************************************************************** G 012100
         SPACE 1                                                        G 012110
TESTSEL4 SUBIN ,                   ENTER ROUTINE                        G 012120
         CBAL  ,TESTSL4            TRANSFER CONTROL TO BUDGIE3J         G 012130
         TITLE 'BUDGIE3G - EXECUTED INSTRUCTIONS'                       G 012140
*********************************************************************** G 012150
*        EXECUTED INSTRUCTIONS                                        * G 012160
*********************************************************************** G 012170
         SPACE 1                                                        G 012180
TESTMVC  MVC   $TSTAREA(0),0(R6)   MOVE FIELD TO TEST AREA              G 012190
TESTMVC1 MVC   $TSTAREA(0),0(R1)   MOVE FIELD TO TEST AREA              G 012200
TESTLJST MVC   0(0,R6),1(R6)       LEFT JUSTIFY FIELD                   G 012210
TESTOC   OC    0(0,R6),$ZEROES      'OR' LEADING BLANKS TO ZEROES       G 012220
TESTCLC  CLC   $TSTAREA(0),$SPACES  COMPARE FIELD WITH SPACES           G 012230
TESTCLCL CLC   $TSTAREA(0),0(R2)   COMPARE FIELD WITH SUPPLIED LIST     G 012240
TESTPACK PACK  $WRKPACK,0(0,R6)    PACK FIELD INTO WORK AREA            G 012250
TESTRNG1 CLC   $TSTAREA(0),CB30RNG1-CB30NTRY(R2) LOWER RANGE COMPARE    G 012260
TESTRNG2 CLC   $TSTAREA(0),CB30RNG2-CB30NTRY(R2) UPPER RANGE COMPARE    G 012270
TESTTR   TR    $TSTAREA(0),TTABLE  TRANSLATE AGAINST MAIN TABLE         G 012280
TESTTRL1 TRT   $TSTAREA(0),TTABLEL1 ACCEPT A - Z AND BLANK              G 012290
TESTTRL2 TRT   $TSTAREA(0),TTABLEL2 ACCEPT A - Z, 0 - 9, BLANK          G 012300
TESTTRL3 TRT   $TSTAREA(0),TTABLEL3 ACCEPT A - Z, 0 - 9, BLANK, SPECIAL G 012310
TESTTRNN TRT   $TSTAREA(0),TTABLENN ACCEPT 0 - 9                        G 012320
TESTTRN  TRT   $TSTAREA(0),TTABLEN  ACCEPT 0 - 9, BLANK                 G 012330
TESTTRS  TRT   $TSTAREA(0),TTABLES  ACCEPT 0-9, BLANK, A-R, 11-0, 12-0  G 012340
TESTTRNS TRT   $TSTAREA(0),TTABLENS LOCATE 1ST 0-9, A-R, 11-0, 12-0     G 012350
TESTTRNO TRT   $TSTAREA(0),TTABLENO LOCATE 1ST 0-9                      G 012360
TESTTRBL TRT   0(0,R14),TTABLEBL    LOCATE FIRST BLANK                  G 012370
TESTITB  TM    0(R14),OO           TEST INDICATOR STATUS AT BATCH LEVEL G 012380
TESTITD  TM    0(R15),OO           TEST INDICATOR STATUS AT DETAIL LEVL G 012390
CLCKEY   CLC   0(0,R15),0(R14)     COMPARE CURRENT & PREVIOUS KEY       G 012400
MVCKEY   MVC   0(0,R15),0(R14)     MOVE CURRENT KEY TO PREVIOUS         G 012410
C3CLC    CLC   0(0,R14),0(R15)     COMPARE TWO CHARACTER FIELDS         G 012420
C3MVC1   MVC   $TSTAREA(0),0(R14)  MOVE TO INTERMEDIATE AREA            G 012430
C3MVC2   MVC   0(0,R15),$TSTAREA   MOVE FROM INTERMEDIATE AREA          G 012440
C3MVC    MVC   0(0,R15),0(R14)     MOVE SOURCE TO DESTINATION           G 012450
C3PACK   PACK  0(0,R15),0(0,R14)   PACK SOURCE INTO DESTINATION         G 012460
C3UNPACK UNPK  0(0,R15),0(0,R14)   UNPACK SOURCE INTO DESTINATION       G 012470
MOVELIT  MVC   0(0,R6),CB21LIT-CB21NTRY(R10) MOVE DEFAULT LITERAL       G 012480
MOVEPAD  MVC   1(0,R15),0(R15)     PROPAGATE PAD CHARCATER              G 012490
MOVEFLD  MVC   0(0,R6),0(R2)       MOVE MATCHED DATA TO RRCORD          G 012500
L9ZERO   MVC   0(0,R6),$ZEROES      MOVE EBCDIC ZEROES TO OUTPUT FIELD  G 012510
L9ZEROP  ZAP   0(0,R6),$ZERO        ZEROISE PACKED OUTPUT FIELD         G 012520
L9RATEP  ZAP   0(0,R6),UT460OTV-UT460LNK(L'UT460OTV,R15)                G 012530
L9RATE   UNPK  0(0,R6),UT460OTV-UT460LNK(L'UT460OTV,R15)                G 012540
L9MOVE   MVC   0(0,R6),0(R14)      MOVE EBCDIC FIELD TO OUTPUT RECORD   G 012550
TESTZAP  ZAP   $WRKPACK,0(0,R6)    MOVE PACKED INPUT TO $WRKAREA        G 012560
PACKOUT  ZAP   0(0,R6),$WRKPACK    MOVE PACKED FIELD TO OUTPUT          G 012570
UNPKOUT  UNPK  0(0,R6),$WRKPACK    UNPACK VALUE INTO OUTPUT RECORD      G 012580
SETMASKB MVI   OFFINDB+1,OO        INSERT MASK INTO 'AND' INSTRUCTION   G 012590
SETMASKD MVI   OFFINDD+1,OO        INSERT MASK INTO 'AND' INSTRUCTION   G 012600
OFFINDB  NI    0(R14),OO           SET OFF IND ( VIA INVERTED MASK )    G 012610
OFFINDD  NI    0(R15),OO           SET OFF IND ( VIA INVERTED MASK )    G 012620
SB11AP04 AP    CB04BACC-CB04NTRY(L'CB04BACC,R15),0(0,R14)               G 012630
SB11AP05 AP    CB05BACC-CB05NTRY(L'CB05BACC,R15),0(0,R14)               G 012640
SB11AT05 AP    CB05BVAL-CB05NTRY(L'CB05BVAL,R15),0(0,R14) ACCUM TOTAL   G 012650
SFPACK   PACK  $WRKPACK,0(0,R1)    PACK FIELD INTO WORK AREA            G 012660
NUMPACK  PACK  $WRKPACK,$TSTAREA(0) PAVK VALUE UNDER TEST               G 012670
MVCLINE9 MVC   LINE09V(0),0(R1)    MOVE VALUE TO MESSAGE                G 012680
         TITLE 'BUDGIE3G - MISCELLANEOUS CONSTANTS AND FIELDS'          G 012690
BBMESS03 DC    C'FIELD COLS   -   NOT NUMERIC'                          G 012700
BBMESS05 DC    C'FIELD COLS   -   NOT IN RANGE'                         G 012710
BBMESS07 DC    C'FIELD COLS   -   NOT VALID'                            G 012720
BBMESS08 DC    C'DATE (COLS   -  ) INVALID'                             G 012730
BBMESS09 DC    C'CURR CODE (  -  ) INVALID'                             G 012740
BBMESS10 DC    C'FIELD COLS   -   NOT ALPHABETIC'                       G 012750
BBMESS11 DC    C'FIELD COLS   -   NOT ALPHAMERIC'                       G 012760
BBMESS12 DC    C'FIELD COLS   -   NOT BLANK'                            G 012770
BBMESS13 DC    C'FIELD COLS   -   ARE BLANK'                            G 012780
BBMESS16 DC    C'FIELD COLS   -   : NO ASTERISK'                        G 012790
BBMESS17 DC    C'FIELD COLS   -   FAILED TEST'                          G 012800
BBMESS18 DC    C'MONTH NO. (  -  ) NOT CURRENT'                         G 012810
BBMESS19 DC    C'FIELD COLS   -   NOT IN LIST'                          G 012820
         SPACE 1                                                        G 012830
LINE09   DC    C'BDG3G-009-C  THE PRECEDING CONTROL CARD CONTAINS NON-N*G 012840
               UMERIC DATA - BAD VALUE IS :'                            G 012850
LINE09V  DS    CL16                NON-NUMERIC VALUE IN CONTROL CARD    G 012860
LINE29   DS    0CL71                                                    G 012870
         DC    C'BDG3G-029-E  CARD NO.'                                 G 012880
LINE29N1 DS    CL4                                                      G 012890
         DC    C' SPECIFIES TEST TYPE '''                               G 012900
LINE29TT DS    CL2                                                      G 012910
         DC    C''' WHICH IS UN'                                        G 012920
LINE29M  DS    CL9                                                      G 012930
LINE29S  DC    C'SUPPORTED'                                             G 012940
LINE29A  DC    C'ALLOCATED'                                             G 012950
         SPACE 1                                                        G 012960
         DS    0F                  ENSURE ALIGNMENT                     G 012970
MASKFFF0 DC    X'000000FF'         MASK TO SET OFF BITS 0-23            G 012980
         SPACE 1                                                        G 012990
CC19     DC    C'19',C'98'         U.K. CURRENCY CODES                  G 013000
EDITPATN DC    X'40202120'         EDIT PATTERN FOR 2-BYTE PACKED FIELD G 013010
         SPACE 1                                                        G 013020
         LTORG                                                          G 013030
         TITLE 'BUDGIE3G - TRANSLATE TABLES'                            G 013040
*        THESE TABLES ARE USED BY VARIOUS TEST ROUTINES TO DETERMINE    G 013050
*         THE VALIDITY OF FIELDS.  THE MAIN TABLE MERELY TRANSLATES     G 013060
*         THE VARIOUS TYPES OF CHARACTERS INTO SPECIFIC CODES, WHILE    G 013070
*         THE SMALL TABLES ARE USED TO TRANSLATE AND TEST THE RESULT    G 013080
*         OF THE FIRST TRANSLATION TO DETERMINE THE TYPES OF CHARACTERS G 013090
*         THE SOURCE FIELD CONTAINED.  THUS, MANY TESTS CAN BE MADE BY  G 013100
*         ONE TR AND ONE TRT, THUS OBVIATING THE NEED FOR ITERATED      G 013110
*         MULTILPE TESTS.                                               G 013120
         SPACE 1                                                        G 013130
*        THE SPECIFIC TRANSLATION CODES ASSIGNED RAE:-                  G 013140
*              X'01' : 0 - 9                                            G 013150
*              X'02' : A - R                                            G 013160
*              X'03' : S - Z                                            G 013170
*              X'04' : SPECIAL CHARACTERS                               G 013180
*              X'05' : INVALID MULTI-PUNCHES                            G 013190
*              X'06' : 12-0 & 11-0 MULTI-PUNCHES                        G 013200
*              X'07' : BLANK                                            G 013210
         SPACE 1                                                        G 013220
TTABLEL1 DC    X'0101000001010100' ALLOW A-Z, BLANK                     G 013230
TTABLEL2 DC    X'0100000001010100' ALLOW A-Z, 0-9, BLANK                G 013240
TTABLEL3 DC    X'0100000000010100' ALLOW A-Z, 0-9, BLANK, SPECIAL       G 013250
TTABLENN DC    X'0100010101010101' ALLOW 0-9                            G 013260
TTABLEN  DC    X'0100010101010100' ALLOW 0-9, BLANK                     G 013270
TTABLES  DC    X'0100000101010000' ALLOW 0-9, A-R, BLANK, 12-0, 11-0    G 013280
TTABLEBL DC    X'0000000000000001' LOCATE FIRST BLANK                   G 013290
TTABLENO DC    X'0001000000000000' LOCATE FIRST 0-9                     G 013300
TTABLENS DC    X'0001010000000100' LOCATE FIRST 0-9, A-R, 11-0, 12-0    G 013310
         SPACE 1                                                        G 013320
TTABLE   DS    0CL256              TRANSLATION TABLE FOR TESTS          G 013330
         DC    64X'05'                                                  G 013340
         DC    X'07'               BLANK                                G 013350
         DC    9X'05'                                                   G 013360
         DC    7X'04'              SPECIAL:- H.<(+|&                    G 013370
         DC    9X'05'                                                   G 013380
         DC    8X'04'              SPECIAL:- !$*);^-/                   G 013390
         DC    9X'05'                                                   G 013400
         DC    5X'04'              SPECIAL:- ,%_>?                      G 013410
         DC    10X'05'                                                  G 013420
         DC    6X'04'              SPECIAL:- :#@.="                     G 013430
         DC    64X'05'                                                  G 013440
         DC    X'06'               12-0 PUNCH                           G 013450
         DC    9X'02'              ALPHA:-   ABCDEFGHI                  G 013460
         DC    6X'05'                                                   G 013470
         DC    X'06'               11-0 PUNCH                           G 013480
         DC    9X'02'              ALPHA:-   JKLMNOPQR                  G 013490
         DC    8X'05'                                                   G 013500
         DC    8X'03'              ALPHA:-   STUVWXYZ                   G 013510
         DC    6X'05'                                                   G 013520
         DC    10X'01'             NUMERIC:- 0123456789                 G 013530
         DC    6X'05'                                                   G 013540
         SPACE 1                                                        G 013550
        SCSEND G                   TERMINATE CSECT BUDGIE3G             G 013560
         END                                                            G 013570
         SPACE 1                                                        G 013580
         REPRO                                                          G 013590
 IDENTIFY BUDGIE3G('TESTS AND OPERATIONS')                              G 013600
         END                                                            G 013610
