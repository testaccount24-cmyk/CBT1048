         MACRO                                                          BM000020
&NAME    IOM   &SUBTYPE,&PARM1,&PARM2,&PARM3,&PARM4,                   *BM000030
               &TYPE=,&LOOP=,&RTN=,&MSGID=,&AUTOPEN=                    BM000040
.*                                                                      BM000050
.*       EQUATES,MAXDD                                                  BM000060
.*                                                                      BM000070
.*       DCBSW,DDNAME,DCBNAME,INPUT ,MANDAT                             BM000080
.*       DCBSW,DDNAME,DCBNAME,OUTPUT,MANDAT                             BM000090
.*       DCBSW,DDNAME,DCBNAME,PRINT,MANDAT                              BM000100
.*                                                                      BM000110
.*       PUT,DCBSW,(REG),PRINT,LNECNT,RTN=HEADING                       BM000120
.*                                                                      BM000130
.*       PUTM,DCBSW,(REG)                                               BM000140
.*                                                                      BM000150
.*       GET,DCBSW,(REG)                                                BM000160
.*                                                                      BM000170
.*       GETM,DCBSW,(REG)                                               BM000180
.*                                                                      BM000190
.*       OPEN,TYPE=DEF                                                  BM000200
.*       CLOSE,TYPE=DEF                                                 BM000210
.*       TIOTSCAN,TYPE=DEF                                              BM000220
.*                                                                      BM000230
.*       OPEN,DCBSW,LOOP=1,RTN=OPEN                                     BM000240
.*       OPEN,DCBSW,LOOP=N,RTN=NAME                                     BM000250
.*                                                                      BM000260
.*       CLOSE,DCBSW,LOOP=1,RTN=CLOSE                                   BM000270
.*       CLOSE,DCBSW,LOOP=N,RTN=NAME                                    BM000280
.*                                                                      BM000290
.*       TIOTSCAN,DCBSW,LOOP=1,RTN=TIOTSCAN                             BM000300
.*       TIOTSCAN,DCBSW,LOOP=N,RTN=NAME                                 BM000310
.*                                                                      BM000320
.*       SUMMARY,DCBSW,(REG),PRESENT,RTN=NAME,LOOP=N                    BM000330
.*                                                                      BM000340
.*       AUDIT,DCBSW,(REG),ENDJOB,RTN=NAME,LOOP=N                       BM000350
.*                                                                      BM000360
.*       EOF,DCBSW,BUFF-ADDR                                            BM000370
.*                                                                      BM000380
.*       BLKSZRTN,TYPE=DEF                                              BM000390
.*                                                                      BM000400
.*       IOERROR,(REG),PRINTRTN,EOJRTN,TYPE=DEF                         BM000410
.*                                                                      BM000420
.*       ISRANDOM,DCBSW-ADDR,KEY-ADDR                                   BM000430
.*                                                                      BM000440
         GBLC  &OPEN                                                    BM000450
         LCLA  &MAXDD                                                   BM000460
         LCLC  &BIT0,&BIT1,&DCB                                         BM000470
         LCLC  &BIT8                                                    BM000480
         LCLC  &B,&D                                                    BM000490
         LCLA  &BA,&DA                                                  BM000500
         LCLC  &LABEL,&RTNE,&REG                                        BM000510
         LCLC  &EOJRTNE                                                 BM000520
         LCLC  &LNECNT                                                  BM000530
.*                                                                      BM000540
.*                                                                      BM000550
.*       DETERMINE IF AUTOPEN WAS SPECIFIED                             BM000560
.*                                                                      BM000570
         AIF   ('&AUTOPEN' EQ '').A00                                   BM000580
&OPEN    SETC  'Y'                                                      BM000590
         AIF   ('&AUTOPEN' EQ 'YES').A00                                BM000600
&OPEN    SETC  'N'                                                      BM000610
         AIF   ('&AUTOPEN' EQ 'NO').A00                                 BM000620
         MNOTE 4,'UNKNOWN ''AUTOPEN'' SPECIFICATION - TREATED AS NO'    BM000630
.A00     ANOP                                                           BM000640
         AIF   ('&SUBTYPE' NE 'EQUATES').B00                            BM000650
IOSWMAND EQU   128 0               DDNAME MANDATORY                     BM000660
IOSWINPT EQU   64 0                INPUT DATA SET (DEFAULT)             BM000670
IOSWOUTP EQU   191 0               OUTPUT DATA SET            (NI ONLY) BM000680
IOSWPRES EQU   32 0                DDNAME PRESENT                       BM000690
IOSWOPEN EQU   16 0                DCB NOW OPEN                         BM000700
IOSWCLOS EQU   239 0               CLOSE DCB                  (NI ONLY) BM000710
IOSWEOF  EQU   8 0                 EOF DETECTED                         BM000720
IOSWIOER EQU   4 0                 I/O ERROR DETECTED                   BM000730
IOSWOPNH EQU   2 0                 DCB HAS BEEN OPENED                  BM000740
IOSWEOP  EQU   1 0                 PRINT DATA SET WITH EOP ROUTINE      BM000750
IOPSSW   EQU   0                   DISPLACEMENT OF SWITCH BYTE          BM000760
IOPSEOD  EQU   1 ^                 DISPLACEMENT OF EOD INDICATOR        BM000770
IOPSISI  EQU   2 ^                 DISPLACEMENT OF IS STATUS FLAG       BM000780
IOPSDCB  EQU   4                   DISPLACEMENT OF DCB ADDRESS          BM000790
IOPSDDN  EQU   8                   DISPLACEMENT OF DDNAME               BM000800
IOPSRECA EQU   16                  DISPLACEMENT OF RECORD ADDRESS       BM000810
IOPSRCNT EQU   20 ^                DISPLACEMENT OF RECORD COUNT         BM000820
IOPSR4SA EQU   24 ^                DISPLACEMENT OF R4 SAVE AREA         BM000830
IOPSLGTH EQU   28                  LENGTH OF DCBSW C/B                  BM000840
         AIF   ('&PARM1' EQ '').A02                                     BM000850
         AIF   (T'&PARM1 NE 'N').A01                                    BM000860
&MAXDD   SETA  &PARM1                                                   BM000870
IOMMAXDD EQU   &MAXDD 0            MAX NO. OF DD STATEMENTS             BM000880
         AGO   .A02                                                     BM000890
.A01     MNOTE 4,'MAX NO OF DD STATEMENTS IS NON-NUMERIC'               BM000900
.A02     AIF   ('&PARM2' NE '').A03                                     BM000910
         AIF   ('&PARM3' NE '').A03                                     BM000920
         AIF   ('&PARM4' NE '').A03                                     BM000930
         AIF   ('&TYPE' NE '').A03                                      BM000940
         AIF   ('&LOOP' NE '').A03                                      BM000950
         AIF   ('&RTN' NE '').A03                                       BM000960
         AGO   .A04                                                     BM000970
.A03     MNOTE *,'THE SUPERFLUOUS OPERANDS CODED WERE IGNORED'          BM000980
.A04     MEXIT                                                          BM000990
.B00     AIF   ('&SUBTYPE' NE 'DCBSW').C00                              BM001000
         AIF   ('&PARM1' NE '').B01                                     BM001010
         MNOTE 16,'NO DDNAME SUPPLIED FOR DCBSW OPERATION'              BM001020
         MEXIT                                                          BM001030
.B01     AIF   ('&PARM2' NE '').B02                                     BM001040
&DCB     SETC  '&PARM1'                                                 BM001050
         MNOTE *,'NO DCB NAME SUPPLIED - DDNAME ASSUMED'                BM001060
         AGO   .B03                                                     BM001070
.B02     ANOP                                                           BM001080
&DCB     SETC  '&PARM2'                                                 BM001090
.B03     ANOP                                                           BM001100
&BIT0    SETC  '0'                                                      BM001110
&BIT1    SETC  '1'                                                      BM001120
&BIT8    SETC  '0'                                                      BM001130
         AIF   ('&PARM3' EQ '').B04                                     BM001140
         AIF   ('&PARM3' EQ 'INPUT').B05                                BM001150
         AIF   ('&PARM3' EQ 'PRINT').B20                                BM001160
         AIF   ('&PARM3' NE 'OUTPUT').B10                               BM001170
&BIT1    SETC  '0'                                                      BM001180
         AGO   .B05                                                     BM001190
.B20     ANOP                                                           BM001200
&BIT8    SETC  '1'                                                      BM001210
&BIT1    SETC  '0'                                                      BM001220
         AGO   .B05                                                     BM001230
.B04     MNOTE *,'I/O TYPE NOT SPECIFIED - INPUT ASSUMED'               BM001240
.B05     AIF   ('&PARM4' EQ '').B06                                     BM001250
         AIF   ('&PARM4' NE 'MANDAT').B10                               BM001260
&BIT0    SETC  '1'                                                      BM001270
         AGO   .B07                                                     BM001280
.B06     MNOTE *,'DD STATEMENT IS OPTIONAL'                             BM001290
.B07     ANOP                                                           BM001300
&B       SETC  '00000'                                                  BM001310
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM001320
&B       SETC  '&BIT0&BIT1.00000&BIT8'                                  BM001330
&NAME    DC    B'&B',C'X  ',V(&DCB),CL8'&PARM1',A(0),PL4'0',A(0)        BM001340
         AIF   ('&TYPE' NE '').A03                                      BM001350
         AIF   ('&LOOP' NE '').A03                                      BM001360
         AIF   ('&RTN' NE '').A03                                       BM001370
         MEXIT                                                          BM001380
.B10     MNOTE 16,'UNKNOWN POSITIONAL PARAMETER'                        BM001390
         MEXIT                                                          BM001400
.*                                                                      BM001410
.*                                                                      BM001420
.*       IOM   PUT,DCBSW (,(REG) (,PRINT) (,LNECNT) (,RTN=HEADING)      BM001430
.*                                                                      BM001440
.*       IOM   GET,DCBSW (,(REG))                                       BM001450
.*                                                                      BM001460
.C00     AIF   ('&SUBTYPE' EQ 'PUT').C01                                BM001470
         AIF   ('&SUBTYPE' NE 'GET').D00                                BM001480
.C01     AIF   ('&PARM1' NE '').C021                                    BM001490
.C011    MNOTE 16,'MANDATORY DCBSW ADDRESS NOT SUPPLIED'                BM001500
         MEXIT                                                          BM001510
.C021    ANOP                                                           BM001520
&NAME    TM    &PARM1.+IOPSSW,IOSWPRES 0IS DD STATEMENT PRESENT         BM001530
         BZ    IOMC&SYSNDX 0       BYPASS I/O IF NO DD STATEMENT        BM001540
         AIF   ('&OPEN' EQ 'N').C100                                    BM001550
         TM    &PARM1.+IOPSSW,IOSWOPEN 0 TEST IF DCB OPEN               BM001560
         BO    IOME&SYSNDX 0       BRANCH IF OPEN                       BM001570
         ST    R4,&PARM1.+IOPSR4SA 0 PRESERVE R4 RETUR  ADDRESS         BM001580
         LA    R2,&PARM1 ^         POINT R2 AT DCBSW                    BM001590
         CBAL  R4,OPEN 0           OPEN DATA SET                        BM001600
         L     R4,&PARM1.+IOPSR4SA 0 RESTORE SAVED R4 VALUE             BM001610
IOME&SYSNDX EQU * 0                BYPASS OPEN PROCESSING               BM001620
.C100    ANOP                                                           BM001630
         AIF   ('&SUBTYPE' NE 'GET').C023                               BM001640
         TM    &PARM1.+IOPSSW,IOSWEOF 0TEST FOR END OF FILE ALREADY     BM001650
         BO    IOMC&SYSNDX 0       BR IF EOF ALREADY REACHED            BM001660
.C023    ANOP                                                           BM001670
         AIF   ('&SUBTYPE' NE 'PUTM').C024                              BM001680
         LR    R0,&REG ^           POINT R0 AT DATA                     BM001690
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001700
         L     R15,48(0,R1) ^      LOAD PUT ROUTINE ADDRESS             BM001710
         BALR  R14,R15 ^           LINK TO PUT ROUTINE                  BM001720
         AGO   .C05                                                     BM001730
.C024    ANOP                                                           BM001740
         AIF   ('&SUBTYPE' NE 'GETM').C025                              BM001750
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001760
         LR    R0,&REG ^           POINT R0 AT DESTINATION              BM001770
         L     R15,48(0,R1) ^      LOAD GET ROUTINE ADDRESS             BM001780
         BALR  R14,R15 ^           LINK TO GET ROUTINE                  BM001790
         AGO   .C05                                                     BM001800
.C025    ANOP                                                           BM001810
         AIF   ('&PARM3' NE 'PRINT' OR '&RTN' NE'').C022                BM001820
IOMD&SYSNDX EQU * 0                LOOP BACK FOR EOP POOCESSING         BM001830
.C022    ANOP                                                           BM001840
         L     R1,&PARM1.+IOPSDCB ^POINT R1 AT DCB ADDRESS              BM001850
         L     R15,48(,R1) 0       GET I/O RTN ADDRESS                  BM001860
         BALR  R14,R15 ^           LINK TO I/O ROUTINE                  BM001870
         ST    R1,&PARM1.+IOPSRECA STORE BUFFER ADDRESS                 BM001880
         AIF   ('&PARM2' EQ '').C05                                     BM001890
         AIF   ('&PARM2'(1,1) EQ '(').C04                               BM001900
.C031    MNOTE 16,'INVALID REGISTER SPECIFICATION FOR &SUBTYPE'         BM001910
         MEXIT                                                          BM001920
.C04     LR    &PARM2(1),R1 0      SET BUFFER ADDRESS IN WORK REGISTER  BM001930
.C05     AP    &PARM1.+IOPSRCNT(4),=P'1' 0 INCREMENT RECORD COUNT       BM001940
         AIF   ('&PARM3' NE 'PRINT').C9                                 BM001950
&LNECNT  SETC  '&PARM4'                                                 BM001960
         AIF   ('&PARM4' NE '').C6                                      BM001970
         MNOTE *,'NO LINE COUNT SUPPLIED - 60 ASSUMED'                  BM001980
&LNECNT  SETC  '60'                                                     BM001990
.C6      CP    &PARM1.+IOPSRCNT(4),=P'&LNECNT' 0TEST FOR END OF PAGE    BM002000
         BL    IOMC&SYSNDX 0       BRANCH IF NOT                        BM002010
         ZAP   &PARM1.+IOPSRCNT(4),=P'0' 0 ZEROISE LINE COUNT           BM002020
         AIF   ('&RTN' NE '').C7                                        BM002030
         MNOTE *,'NO EOP ROUTINE SUPPLIED - PAGE SKIP FORCED'           BM002040
         MVI   0(R1),PAGESKIP 0    ESTABLISH PAGE SKIP                  BM002050
         B     IOMD&SYSNDX 0       SKIP TO NEW PAGE                     BM002060
.C62     ANOP                                                           BM002070
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       BM002080
.C8      AIF   ('&TYPE' NE '').A03                                      BM002090
         AIF   ('&LOOP' NE '').A03                                      BM002100
         MEXIT                                                          BM002110
.C7      ST    R4,IOMD&SYSNDX 0    PRESERVE RETURN ADDRESS              BM002120
         CBAL  R4,&RTN 0           PERFORM HEADING ROUTINE              BM002130
         L     R4,IOMD&SYSNDX 0    RESTORE RETURN ADDRESS               BM002140
         B     IOMC&SYSNDX 0       BRANCH OVER SAVE AREA                BM002150
IOMD&SYSNDX DS F 0                 SAVE AREA FOR R4                     BM002160
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       BM002170
         AGO   .C8                                                      BM002180
.C9      ANOP                                                           BM002190
IOMC&SYSNDX EQU * 0                 END OF ROUTINE                      BM002200
         AIF   ('&PARM3' NE '').A03                                     BM002210
         AIF   ('&PARM4' NE '').A03                                     BM002220
         AIF   ('&TYPE' NE '').A03                                      BM002230
         AIF   ('&LOOP' NE '').A03                                      BM002240
         AIF   ('&RTN' NE '').A03                                       BM002250
         MEXIT                                                          BM002260
.D00     AIF   ('&SUBTYPE' NE 'OPEN').E00                               BM002270
         AIF   ('&TYPE' EQ '').D04                                      BM002280
         AIF   ('&TYPE' EQ 'DEF').D02                                   BM002290
.D01     MNOTE 16,'UNKNOWN TYPE OPERAND'                                BM002300
         MEXIT                                                          BM002310
.*                                                                      BM002320
.*                                                                      BM002330
.*       IOM   OPEN,DCBSW-ADDR (,LOOP=N) (,RTN=AAA)                     BM002340
.*                                                                      BM002350
.D02     ANOP                                                           BM002360
&LABEL   SETC  'OPEN'                                                   BM002370
         AIF   ('&NAME' EQ '').D03                                      BM002380
&LABEL   SETC  '&NAME'                                                  BM002390
.D03     ANOP                                                           BM002400
&LABEL   DS    0H 0                ENTRY TO OPEN SUBROUTINE             BM002410
         L     R1,IOPSDCB(,R2) 0   GET DCB ADDRESS                      BM002420
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         BM002430
         BNO   0(R4) 0             RETURN IF NOT                        BM002440
         TM    IOPSSW(R2),IOSWOPEN 0 TEST IF DATA SET OPEN              BM002450
         BO    0(R4) 0             RETURN IF DATA STE OPEN              BM002460
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM002470
         ST    R1,*+8 0            STORE DCB ADDRESS                    BM002480
         BAL   R1,*+8 ^            LOAD REG 1 WITH LIST ADDRESS         BM002490
         DC    A(0) 0              DCB ADDRESS                          BM002500
         TM    IOPSSW(R2),IOSWINPT 0 TEST IF INPUT                      BM002510
         BO    IOMD&SYSNDX 0       BRANCH IF YES                        BM002520
         MVI   0(R1),143 0         SET OPTION BYTE FOR INPUT            BM002530
         B     *+8 0               GO TO SVC                            BM002540
IOMD&SYSNDX MVI 0(R1),128 ^        SET OPTION BYTE                      BM002550
         SVC   19 0                ISSUE OPEN SVC                       BM002560
         OI IOPSSW(R2),IOSWOPEN+IOSWOPNH INDICATE DATA SET OPEN         BM002570
         MVI   IOPSEOD(R2),C'X' ^  RESET EOD INDICATOR IF NECESSARY     BM002580
         BR    R4 0                RETURN TO MAIN-LINE                  BM002590
.D031    AIF   ('&PARM1' NE '').A03                                     BM002600
         AIF   ('&PARM2' NE '').A03                                     BM002610
         AIF   ('&PARM3' NE '').A03                                     BM002620
         AIF   ('&PARM4' NE '').A03                                     BM002630
         AIF   ('&LOOP' NE '').A03                                      BM002640
         AIF   ('&RTN' NE '').A03                                       BM002650
         MEXIT                                                          BM002660
.D04     AIF   ('&PARM1' EQ '').C011                                    BM002670
         AIF   ('&LOOP' EQ '').D05                                      BM002680
&NAME    LA    R10,&LOOP 0         ESTABLISH LOOP                       BM002690
.D05     ANOP                                                           BM002700
&LABEL   SETC  '&NAME'                                                  BM002710
         AIF   ('&LOOP' EQ '').D06                                      BM002720
&LABEL   SETC  ' '                                                      BM002730
.D06     ANOP                                                           BM002740
&LABEL   LA    R2,&PARM1 0         POINT AT DCBSW                       BM002750
         AIF   ('&RTN' EQ '').D07                                       BM002760
&RTNE    SETC  '&RTN'                                                   BM002770
         AGO   .D09                                                     BM002780
.D07     AIF   ('&SUBTYPE' EQ 'CLOSE').D08                              BM002790
&RTNE    SETC  'OPEN'                                                   BM002800
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               BM002810
&RTNE    SETC  'TIOTSCAN'                                               BM002820
         AGO   .D09                                                     BM002830
.D08     ANOP                                                           BM002840
&RTNE    SETC  'CLOSE'                                                  BM002850
.D09     ANOP                                                           BM002860
IOMD&SYSNDX CBAL R4,&RTNE 0        PERFORM SUB-ROUTINE                  BM002870
         AIF   ('&LOOP' EQ '').D10                                      BM002880
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              BM002890
         BCT   R10,IOMD&SYSNDX 0   LOOP BACK TO PROCESS NEXT            BM002900
.D10     AIF   ('&PARM2' NE '').A03                                     BM002910
         AIF   ('&PARM3' NE '').A03                                     BM002920
         AIF   ('&PARM4' NE '').A03                                     BM002930
         MEXIT                                                          BM002940
.E00     AIF   ('&SUBTYPE' NE 'CLOSE').F00                              BM002950
         AIF   ('&TYPE' EQ 'DEF').E01                                   BM002960
         AIF   ('&TYPE' EQ '').D04                                      BM002970
         AGO   .D01                                                     BM002980
.E01     ANOP                                                           BM002990
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               BM003000
&RTNE    SETC  'TIOTSCAN'                                               BM003010
&LABEL   SETC  'CLOSE'                                                  BM003020
         AIF   ('&NAME' EQ '').E02                                      BM003030
&LABEL   SETC  '&NAME'                                                  BM003040
.E02     ANOP                                                           BM003050
&LABEL   DS    0H 0                ENTRY TO CLOSE SUBROUTINE            BM003060
         TM    IOPSSW(R2),IOSWOPEN TEST IF DATA SET OPEN                BM003070
         BZ    0(R4) 0             RETURN IF NOT                        BM003080
         L     R1,IOPSDCB(R2) 0    GET DCB ADDRESS                      BM003090
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             BM003100
         ST    R1,*+8 0            STORE DCB ADDRESS                    BM003110
         BAL   R1,*+8 ^            POINT R1 AT PARM LIST                BM003120
         DC    A(0) 0              DCB ADDRESS                          BM003130
         MVI   0(R1),128 0         SET OPTION BYTE                      BM003140
         SVC   20 0                ISSUE CLOSE SVC                      BM003150
         L     R1,IOPSDCB(R2) ^    GET DCB ADDRESS                      BM003160
       FREEPOOL (R1) ^             FREE ACQUIRED BUFFER POOL            BM003170
         NI    IOPSSW(R2),IOSWCLOS INDICATE CLOSED                      BM003180
         BR    R4 0                RETURN TO MAIN-LINE                  BM003190
         AIF   ('&PARM1' NE '').A03                                     BM003200
         AIF   ('&PARM2' NE '').A03                                     BM003210
         AIF   ('&PARM3' NE '').A03                                     BM003220
         AIF   ('&PARM4' NE '').A03                                     BM003230
         AIF   ('&LOOP' NE '').A03                                      BM003240
         AIF   ('&RTN' NE '').A03                                       BM003250
         MEXIT                                                          BM003260
.*                                                                      BM003270
.*                                                                      BM003280
.*       IOM   EOF,DCBSW-NAME (,DUMMY BUFFER ADDRESS)                   BM003290
.*                                                                      BM003300
.F00     AIF   ('&SUBTYPE' NE 'EOF').G00                                BM003310
         AIF   ('&PARM1' EQ '').C011                                    BM003320
&NAME    OI    &PARM1.+IOPSSW,IOSWEOF INDICATE EOF                      BM003330
         MVI   &PARM1.+IOPSEOD,C'Y' SET CHARACTER FOR EOF INDICATION    BM003340
         AIF   ('&PARM2' EQ '').F01                                     BM003350
         L     R1,&PARM2 ^         POINT R1 AT DUMMY BUFFER             BM003360
         ST    R1,&PARM1.+IOPSRECA 0PRESERVE DUMMY BUFFER ADDRESS       BM003370
         AGO   .F02                                                     BM003380
.F01     XC    &PARM1.+IOPSRECA(4),&PARM1.+IOPSRECA NULLIFY RECORD ADD  BM003390
.F02     ANOP                                                           BM003400
         AGO   .A02                                                     BM003410
.G00     AIF   ('&SUBTYPE' NE 'TIOTSCAN').H00                           BM003420
         AIF   ('&TYPE' EQ 'DEF').G01                                   BM003430
         AIF   ('&TYPE' NE '').D01                                      BM003440
         AGO   .D04                                                     BM003450
.G01     ANOP                                                           BM003460
&LABEL   SETC  'TIOTSCAN'                                               BM003470
         AIF   ('&NAME' EQ '').G02                                      BM003480
&LABEL   SETC  '&NAME'                                                  BM003490
.G02     ANOP                                                           BM003500
&LABEL   DS    0H 0                ENTRY TO TIOT SCAN ROUTINE           BM003510
         BC    0,IOMG&SYSNDX 0     FIRST TIME SWITCH                    BM003520
         OI    *-3,X'F0' 0         SET FIRST TIME SWITCH                BM003530
         EXTRACT IOMATIOT,'S',FIELDS=TIOT ^OBTAIN ADDRESS OF TOOT       BM003540
         B     IOMG&SYSNDX ^       BRANCH AROUND SAVE AREAS             BM003550
IOMATIOT DS    F 0                 ADDRESS OF TIOT                      BM003560
IOMTIOT1 DS    F 0                 SAVE AREA FOR R3                     BM003570
IOMTIOT2 DS    F 0                 SAVE AREA FOR R10                    BM003580
IOMG&SYSNDX EQU * 0                SUBSEQUENT PROCESSING                BM003590
         ST    R3,IOMTIOT1 0       PRESERVE CONTENTS                    BM003600
         ST    R10,IOMTIOT2 0       OF R3 AND R10                       BM003610
         L     R3,IOMATIOT 0       GET ADDRESS OF TIOT                  BM003620
         LA    R3,24(,R3) 0        POINT AT FIRST DD ENTRY              BM003630
IOMH&SYSNDX CLC 0(4,R3),=F'0' 0     TEST FOR END OF TIOT                BM003640
         BE    IOMI&SYSNDX.+4      RETURN IF YES                        BM003650
         CLC   4(8,R3),IOPSDDN(R2) TEST FOR DDNAME MATCH                BM003660
         BE    IOMI&SYSNDX 0       BRANCH IF YES                        BM003670
         SR    R10,R10 0           ZEROISE WORK REGISTER                BM003680
         IC    R10,0(R3) 0         INSERT ENTRY LENGTH                  BM003690
         AR    R3,R10 0            INCREMENT TO NEXT ENTRY              BM003700
         B     IOMH&SYSNDX 0       LOOP TO PROCESS NEXT ENTRY           BM003710
IOMI&SYSNDX OI IOPSSW(R2),IOSWPRES INDICATE DD STATEMENT PRESENT        BM003720
         L     R3,IOMTIOT1 0       RETRIEVE CONTENTS                    BM003730
         L     R10,IOMTIOT2 0       OF R3 AND R10                       BM003740
         BR    R4 0                RETURN TO MAIN LINE                  BM003750
         AGO   .D031                                                    BM003760
.H00     AIF   ('&SUBTYPE' NE 'BLKSZRTN').I00                           BM003770
         AIF   ('&TYPE' EQ 'DEF').H02                                   BM003780
         AIF   ('&TYPE' NE '').D01                                      BM003790
         MNOTE 16,'INCOMPLETE BLKSIZE REQUEST'                          BM003800
         MEXIT                                                          BM003810
.H02     ANOP                                                           BM003820
&LABEL   SETC  'BLKSZRTN'                                               BM003830
         AIF   ('&NAME' EQ '').H01                                      BM003840
&LABEL   SETC  '&NAME'                                                  BM003850
.H01     ANOP                                                           BM003860
&LABEL   DS    0H 0                SUPPLY DEFAULT IF NO BLOCK SIZE      BM003870
         USING IHADCB,R1 0         ESTABLISH DCB ADDRESSABILITY         BM003880
         CLC   DCBBLKSI,=F'0' 0    TEST IF BLKSIZE SUPPLIED             BM003890
         BNE   0(R14) 0            RETURN TO OPEN IF YES                BM003900
         MVC   DCBBLKSI,DCBLRECL 0 MOVE LRECL TO BLKSIZE                BM003910
         BR    R14 0               RETURN TO OS OPEN ROUTINE            BM003920
         DROP  R1 0                DROP DCB ADDRESSABILITY              BM003930
         AGO   .D031                                                    BM003940
.*                                                                      BM003950
.*                                                                      BM003960
.*       IOM   SUMMARY,DCBSW-ADDR,(REG),RTN= (,MSGID=)                  BM003970
.*                                                                      BM003980
.I00     AIF   ('&SUBTYPE' NE 'SUMMARY').J00                            BM003990
         AIF   ('&PARM1' EQ '').C011                                    BM004000
         AIF   ('&PARM2' NE '').I01                                     BM004010
.I001    MNOTE 16,'MANDATORY REGISTER SPECIFICATION IS MISSING'         BM004020
         MEXIT                                                          BM004030
.I01     AIF   ('&PARM2'(1,1) NE '(').C031                              BM004040
         AIF   ('&RTN' NE '').I02                                       BM004050
.I011    MNOTE 16,'MANDATORY RTN NAME IS MISSING'                       BM004060
         MEXIT                                                          BM004070
.I02     ANOP                                                           BM004080
&NAME    DS    0H 0                PRINT SUMMARY OF D/S ACTIVITY        BM004090
         LA    R2,&PARM1 0         GET DCBSW ADDRESS                    BM004100
         AIF   ('&LOOP' EQ '').I03                                      BM004110
         LA    R10,&LOOP 0         ESTABLISH LOOP                       BM004120
IOMI&SYSNDX EQU * 0                RETURN POINT FOR LOOP                BM004130
.I03     AIF   ('&PARM3' EQ '').I05                                     BM004140
         AIF   ('&PARM3' NE 'PRESENT').B10                              BM004150
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         BM004160
         BZ    IOMJ&SYSNDX 0       BYPASS PROCESSING IF NOT             BM004170
.I05     ANOP                                                           BM004180
&REG     SETC  '&PARM2(1)'                                              BM004190
         TM    IOPSSW(R2),IOSWEOP ^TEST IF PRINT DATA SET               BM004200
         BO    IOMJ&SYSNDX ^       BYPASS PROCESSING IF YES             BM004210
&BA      SETA  0                                                        BM004220
         AIF   ('&MSGID' EQ '').I10                                     BM004230
&BA      SETA  K'&MSGID                                                 BM004240
         AIF   ('&MSGID'(1,1) NE '''').I30                              BM004250
&BA      SETA  &BA-2                                                    BM004260
.I30     ANOP                                                           BM004270
         AIF   ('&MSGID'(1,1) NE '''').I20                              BM004280
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             BM004290
         AGO   .I21                                                     BM004300
.I20     ANOP                                                           BM004310
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            BM004320
.I21     ANOP                                                           BM004330
&BA      SETA  &BA+2                                                    BM004340
.I10     ANOP                                                           BM004350
&DA      SETA  &BA+5                                                    BM004360
         MVC   &DA.(18,&REG),=C'NUMBER OF RECORDS ' ADD MESSSAGE TO BUF BM004370
&DA      SETA  &BA+23                                                   BM004380
         MVC   &DA.(11,&REG),=C'READ FROM  ' ADD FUTHER MESSAGE         BM004390
         TM    IOPSSW(R2),IOSWINPT TEST IF INPUT DATA SET               BM004400
         BO    *+10 ^              BR IF INPUT                          BM004410
         MVC   &DA.(11,&REG),=C'WRITTEN TO ' SHOW WHITTEN TO NOT READ   BM004420
&DA      SETA  &BA+34                                                   BM004430
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DNAME TO MESSAGE            BM004440
&DA      SETA  &BA+42                                                   BM004450
         MVC   &DA.(2,&REG),=C' =' ADD EQUALS SIGN TO MESSGGE           BM004460
&DA      SETA  &BA+44                                                   BM004470
         MVC   &DA.(10,&REG),=X'40206B2020206B202120' EDIT MASK TO MSG  BM004480
         ED    &DA.(10,&REG),IOPSRCNT(R2) EDIT THE RECORD COUNT         BM004490
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                BM004500
IOMJ&SYSNDX EQU * 0                BYPASS BRANCH ADDRESS                BM004510
.I06     AIF   ('&LOOP' EQ '').I07                                      BM004520
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              BM004530
         BCT   R10,IOMI&SYSNDX 0   LOOP TO PROCESS NEXT                 BM004540
.I07     AIF   ('&PARM4' NE '').A03                                     BM004550
         AIF   ('&TYPE' NE '').A03                                      BM004560
         MEXIT                                                          BM004570
.*                                                                      BM004580
.*                                                                      BM004590
.*       IOM   AUDIT,DCBSW-ADDR,(REG),EOJRTN,RTN= (,MSGID=)             BM004600
.*                                                                      BM004610
.J00     AIF   ('&SUBTYPE' NE 'AUDIT').K00                              BM004620
         AIF   ('&PARM1' EQ '').C011                                    BM004630
         AIF   ('&PARM3' NE '').J001                                    BM004640
         MNOTE *,'NO END-OF-JOB ROUTINE ADDRESS SUPPLIED'               BM004650
         MNOTE *,'PROGRAM WILL ABEND WITH 0C1 IF MANDATORY STATEMENT MI$BM004660
               SSING'                                                   BM004670
.J001    ANOP                                                           BM004680
         AIF   ('&PARM2' EQ '').I001                                    BM004690
         AIF   ('&PARM2'(1,1) NE '(').C031                              BM004700
         AIF   ('&RTN' EQ '').I011                                      BM004710
&NAME    DS    0H 0                REPORT ON PRESENCE OF DD STATEMENTS  BM004720
         LA    R2,&PARM1 ^         GET DCBSW ADDRESS                    BM004730
         AIF   ('&LOOP' EQ '').J01                                      BM004740
         LA    R10,&LOOP 0         ESTABLISH LOOP                       BM004750
IOMJ&SYSNDX EQU * 0                RETURN POINT FOR LOOP                BM004760
.J01     ANOP                                                           BM004770
&REG     SETC  '&PARM2(1)'                                              BM004780
&BA      SETA  0                                                        BM004790
         AIF   ('&MSGID' EQ '').J10                                     BM004800
&BA      SETA  K'&MSGID                                                 BM004810
         AIF   ('&MSGID'(1,1) NE '''').J30                              BM004820
&BA      SETA  &BA-2                                                    BM004830
.J30     ANOP                                                           BM004840
         AIF   ('&MSGID'(1,1) NE '''').J20                              BM004850
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             BM004860
         AGO   .J21                                                     BM004870
.J20     ANOP                                                           BM004880
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            BM004890
.J21     ANOP                                                           BM004900
&BA      SETA  &BA+2                                                    BM004910
.J10     ANOP                                                           BM004920
&DA      SETA  &BA+5                                                    BM004930
         MVC   &DA.(35,&REG),=C'MANDATORY DATA SET          PRESENT'    BM004940
&DA      SETA  &BA+24                                                   BM004950
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DDNAME TO MESSAGE           BM004960
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    BM004970
         BO    *+10 0              BRANCH IF YES                        BM004980
&DA      SETA  &BA+5                                                    BM004990
         MVC   &DA.(9,&REG),=C' OPTIONAL' SHOW DATA SET IS OPTIONAL     BM005000
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      BM005010
         BO    *+10 0              BRANCH IF YES                        BM005020
&DA      SETA  &BA+33                                                   BM005030
         MVC   &DA.(7,&REG),=C'MISSING' SHOW DATA SET IS MISSING        BM005040
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                BM005050
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    BM005060
         BZ    IOMK&SYSNDX 0       BRANCH IF NOT                        BM005070
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      BM005080
         BO    IOMK&SYSNDX 0       BRANCH IF YES                        BM005090
         OI    IOML&SYSNDX.+1,X'F0' 0    SET TO BRANCH AT END OF JOB    BM005100
         MVC   IOMM&SYSNDX.+27(8),IOPSDDN(R2) ADD DD NAME TO WRO        BM005110
IOMM&SYSNDX WTO 'MANDATORY DATA SET ******** MISSING'                   BM005120
IOMK&SYSNDX EQU * 0                                                     BM005130
         AIF   ('&LOOP' EQ '').J02                                      BM005140
         LA    R2,IOPSLGTH(,R2) 0  POINT AT NEXT DCBSW                  BM005150
         BCT   R10,IOMJ&SYSNDX 0   LOOP BACK TO PROCESS                 BM005160
.J02     ANOP                                                           BM005170
&RTNE    SETC  '*+2'                                                    BM005180
         AIF   ('&PARM3' NE '').J03                                     BM005190
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED'                       BM005200
         AGO   .J04                                                     BM005210
.J03     ANOP                                                           BM005220
&RTNE    SETC  '&PARM3'                                                 BM005230
.J04     ANOP                                                           BM005240
IOML&SYSNDX BC 0,&RTNE 0           GO TO END-OF-JOB IF MAND MISSING     BM005250
         AGO   .I07                                                     BM005260
.*                                                                      BM005270
.*                                                                      BM005280
.*       IOM   IOERROR,(REG),PRINTRTN,EOJRTN (,TYPE=DEF)                BM005290
.*                                                                      BM005300
.K00     AIF   ('&SUBTYPE' NE 'IOERROR').L00                            BM005310
         AIF   ('&TYPE' EQ 'DEF').K01                                   BM005320
         AIF   ('&TYPE' NE '').D01                                      BM005330
         MNOTE 16,'INVALID I/O ERROR REQUEST'                           BM005340
         MEXIT                                                          BM005350
.K01     ANOP                                                           BM005360
&RTNE    SETC  'PRINT'                                                  BM005370
&EOJRTNE SETC  'PRINTCDE'                                               BM005380
&REG     SETC  'R5'                                                     BM005390
&LABEL   SETC  'IOERROR'                                                BM005400
         AIF   ('&NAME' EQ '').K02                                      BM005410
&LABEL   SETC  '&NAME'                                                  BM005420
.K02     AIF   ('&PARM3' NE '').K03                                     BM005430
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED - ''PRINTCDE'' ASSUMD' BM005440
         AGO   .K04                                                     BM005450
.K03     ANOP                                                           BM005460
&EOJRTNE SETC  '&PARM3'                                                 BM005470
.K04     AIF   ('&PARM2' NE '').K05                                     BM005480
         MNOTE *,'NO PRINT ROUTINE ADDRESS - ''PRINT'' ASSUMED'         BM005490
         AGO   .K06                                                     BM005500
.K05     ANOP                                                           BM005510
&RTNE    SETC  '&PARM2'                                                 BM005520
.K06     AIF   ('&PARM1' EQ '').K07                                     BM005530
         AIF   ('&PARM1'(1,1) NE '(').C031                              BM005540
&REG     SETC  '&PARM1(1)'                                              BM005550
         AGO   .K08                                                     BM005560
.K07     MNOTE *,'NO REGISTER SPECIFIED - R5 ASSUMED'                   BM005570
.K08     ANOP                                                           BM005580
&LABEL   DS    0H 0                ENSURE ALIGNMENT                     BM005590
        SYNADAF ACSMETH=QSAM 0     CALL ANALYSIS ROUTINE                BM005600
         MVC   IOML&SYSNDX.+16(86),50(R1) ADD RESULT OF ANALYSIS        BM005610
        SYNADRLS , 0               RELEASE OS BUFFER                    BM005620
         WTO   MF=(E,IOML&SYSNDX) 0TELL OPERATOR OF ERROR               BM005630
         MVI   0(&REG),SPCE2AFT 0  ESTABLISH DOUBLE BLANK LINES         BM005640
         CBAL  R4,&RTNE 0           AND WRITE THEM                      BM005650
         MVC   5(98,&REG),IOMM&SYSNDX 0 MOVE IN ERROR MESSAGE           BM005660
         CBAL  R4,&RTNE 0          WRITE ERROR MESSAGE                  BM005670
        SUBOUT RETURN=&EOJRTNE 0   TERMINATE JOB                        BM005680
         SPACE 1                                                        BM005690
IOML&SYSNDX DS 0F                                                       BM005700
         DC    AL2(102),H'0'                                            BM005710
IOMM&SYSNDX DC CL98'I/O ERROR - '                                       BM005720
         MEXIT                                                          BM005730
.L00     AIF   ('&SUBTYPE' NE 'PUTM').M00                               BM005740
.L01     ANOP                                                           BM005750
         AIF   ('&PARM1' EQ '').C011                                    BM005760
&REG     SETC  'R1'                                                     BM005770
         AIF   ('&PARM2' EQ '').C021                                    BM005780
         AIF   ('&PARM2'(1,1) NE '(').C031                              BM005790
&REG     SETC  '&PARM2(1)'                                              BM005800
         AGO   .C021                                                    BM005810
.M00     AIF   ('&SUBTYPE' EQ 'GETM').L01                               BM005820
.N00     AIF   ('&SUBTYPE' NE 'ISRANDOM').O00                           BM005830
.*                                                                      BM005840
.*                                                                      BM005850
.*       IOM   ISRANDOM,DCBSW-ADDR,KEY-ADDR                             BM005860
.*                                                                      BM005870
&NAME    LA    R2,&PARM1 ^         POINT R2 AT DCBSW                    BM005880
         MVI   IOPSISI(R2),C'Y' ^  ASSUME RECORD NOT FOUND              BM005890
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMNT PRESENT          BM005900
         BZ    IOMN&SYSNDX ^       BYPASS I/O IF DD STAT MISSING        BM005910
         AIF   ('&OPEN' EQ 'N').N01                                     BM005920
         TM    IOPSSW(R2),IOSWOPEN TEST IF DD STATEMENT OPEN            BM005930
         BO    IOON&SYSNDX ^       BR IF OPEN                           BM005940
         CBAL  R4,ISOPEN ^         OPEN DCB                             BM005950
.N01     ANOP                                                           BM005960
IOON&SYSNDX L  R2,IOPSDCB(R2) ^    GET THE DCB ADDRESS                  BM005970
         LA    R15,&PARM2 ^        GET KEY ADDRESS                      BM005980
         READ  DECB&SYSNDX,K,(R2),'S','S',(R15) READ I.S. RANDOMLY      BM005990
         WAIT  ECB=DECB&SYSNDX ^   WAIT FR COMPLETION OF I/O            BM006000
         LA    R2,&PARM1 ^         REFRESH DCBSW ADDRESS                BM006010
         TM    DECB&SYSNDX.+24,DCBEXNKY TEST IF RECORD NOT FOUND        BM006020
         BO    IOMN&SYSNDX ^       EXIT TEST IF RECORD NOT FOUND        BM006030
         MVI   IOPSISI(R2),C'W' ^  ASSUME SOME SORT OF ERROR OCCURRED   BM006040
         NI    DECB&SYSNDX.+25,FF-DCBEXOFL IGNORE OVERFLOW FLAG         BM006050
         CLC   DECB&SYSNDX.+24(2),=X'0000' TEST IF ERROR CONDITION      BM006060
         BNE   IOMN&SYSNDX ^       EXIT IF ANY ERROR CONDITION          BM006070
         MVI   IOPSISI(R2),C'Y' ^  ASSUME RECORD IS DELETED             BM006080
         L     R1,IOPSDCB(R2) ^    GET ADDRESS OF DCB                   BM006090
         TM    DCBOPTCD-IHADCB(R1),DCBOPTL DOES DELETE FLAG EXIST       BM006100
         BZ    *+16 ^              BR IF NO DELETE FLAG                 BM006110
         L     R1,DECB&SYSNDX.+16 ^GET RECORD ADDRESS                   BM006120
         CLI   0(R1),X'FF' ^       TEST IF RECORD IS DELETED            BM006130
         BE    IOMN&SYSNDX ^       EXIT IF RECORD DELETED               BM006140
         MVI   IOPSISI(R2),C'X' ^  SHOW RECORD FOUND                    BM006150
         L     R1,DECB&SYSNDX.+16 ^GET RECORD ADDRESS                   BM006160
IOMN&SYSNDX EQU * ^                CONTINUE PROCESSING                  BM006170
         MEXIT                                                          BM006180
.O00     ANOP                                                           BM006190
         MNOTE 16,'UNKNOWN MACRO SUBTYPE'                               BM006200
         MEND                                                           BM006210
