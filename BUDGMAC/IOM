         MACRO                                                          PM000020
&NAME    IOM   &SUBTYPE,&PARM1,&PARM2,&PARM3,&PARM4,                   *PM000030
               &TYPE=,&LOOP=,&RTN=,&MSGID=,&AUTOPEN=                    PM000040
.*                                                                      PM000050
.*       EQUATES,MAXDD                                                  PM000060
.*                                                                      PM000070
.*       DCBSW,DDNAME,DCBNAME,INPUT ,MANDAT                             PM000080
.*       DCBSW,DDNAME,DCBNAME,OUTPUT,MANDAT                             PM000090
.*       DCBSW,DDNAME,DCBNAME,PRINT,MANDAT                              PM000100
.*                                                                      PM000110
.*       PUT,DCBSW,(REG),PRINT,LNECNT,RTN=HEADING                       PM000120
.*                                                                      PM000130
.*       PUTM,DCBSW,(REG)                                               PM000140
.*                                                                      PM000150
.*       GET,DCBSW,(REG)                                                PM000160
.*                                                                      PM000170
.*       GETM,DCBSW,(REG)                                               PM000180
.*                                                                      PM000190
.*       OPEN,TYPE=DEF                                                  PM000200
.*       CLOSE,TYPE=DEF                                                 PM000210
.*       TIOTSCAN,TYPE=DEF                                              PM000220
.*                                                                      PM000230
.*       OPEN,DCBSW,NOREOPEN,LOOP=1,RTN=OPEN                            PM000240
.*       OPEN,DCBSW,NOREOPEN,LOOP=N,RTN=NAME                            PM000250
.*                                                                      PM000260
.*       CLOSE,DCBSW,LOOP=1,RTN=CLOSE                                   PM000270
.*       CLOSE,DCBSW,LOOP=N,RTN=NAME                                    PM000280
.*                                                                      PM000290
.*       TIOTSCAN,DCBSW,LOOP=1,RTN=TIOTSCAN                             PM000300
.*       TIOTSCAN,DCBSW,LOOP=N,RTN=NAME                                 PM000310
.*                                                                      PM000320
.*       SUMMARY,DCBSW,(REG),PRESENT,RTN=NAME,LOOP=N                    PM000330
.*                                                                      PM000340
.*       AUDIT,DCBSW,(REG),ENDJOB,RTN=NAME,LOOP=N                       PM000350
.*                                                                      PM000360
.*       EOF,DCBSW,BUFF-ADDR                                            PM000370
.*                                                                      PM000380
.*       BLKSZRTN,TYPE=DEF                                              PM000390
.*                                                                      PM000400
.*       IOERROR,(REG),PRINTRTN,EOJRTN,TYPE=DEF                         PM000410
.*                                                                      PM000420
.*       ISRANDOM,DCBSW-ADDR,KEY-ADDR                                   PM000430
.*                                                                      PM000440
         GBLC  &OPEN                                                    PM000450
         LCLA  &MAXDD                                                   PM000460
         LCLC  &BIT0,&BIT1,&DCB                                         PM000470
         LCLC  &BIT8                                                    PM000480
         LCLC  &B,&D                                                    PM000490
         LCLA  &BA,&DA                                                  PM000500
         LCLC  &LABEL,&RTNE,&REG                                        PM000510
         LCLC  &EOJRTNE                                                 PM000520
         LCLC  &LNECNT                                                  PM000530
.*                                                                      PM000540
.*                                                                      PM000550
.*       DETERMINE IF AUTOPEN WAS SPECIFIED                             PM000560
.*                                                                      PM000570
         AIF   ('&AUTOPEN' EQ '').A00                                   PM000580
&OPEN    SETC  'Y'                                                      PM000590
         AIF   ('&AUTOPEN' EQ 'YES').A00                                PM000600
&OPEN    SETC  'N'                                                      PM000610
         AIF   ('&AUTOPEN' EQ 'NO').A00                                 PM000620
         MNOTE 1,'UNKNOWN ''AUTOPEN'' SPECIFICATION - TREATED AS NO'    PM000630
.A00     ANOP                                                           PM000640
         AIF   ('&SUBTYPE' NE 'EQUATES').B00                            PM000650
IOSWMAND EQU   128 0               DDNAME MANDATORY                     PM000660
IOSWINPT EQU   64 0                INPUT DATA SET (DEFAULT)             PM000670
IOSWOUTP EQU   191 0               OUTPUT DATA SET            (NI ONLY) PM000680
IOSWPRES EQU   32 0                DDNAME PRESENT                       PM000690
IOSWOPEN EQU   16 0                DCB NOW OPEN                         PM000700
IOSWCLOS EQU   239 0               CLOSE DCB                  (NI ONLY) PM000710
IOSWEOF  EQU   8 0                 EOF DETECTED                         PM000720
IOSWIOER EQU   4 0                 I/O ERROR DETECTED                   PM000730
IOSWOPNH EQU   2 0                 DCB HAS BEEN OPENED                  PM000740
IOSWEOP  EQU   1 0                 PRINT DATA SET WITH EOP ROUTINE      PM000750
IOPSSW   EQU   0                   DISPLACEMENT OF SWITCH BYTE          PM000760
IOPSEOD  EQU   1                   DISPLACEMENT OF EOD INDICATOR        PM000770
IOPSISI  EQU   2                   DISPLACEMENT OF IS STATUS FLAG       PM000780
IOPSDCB  EQU   4                   DISPLACEMENT OF DCB ADDRESS          PM000790
IOPSDDN  EQU   8                   DISPLACEMENT OF DDNAME               PM000800
IOPSRECA EQU   16                  DISPLACEMENT OF RECORD ADDRESS       PM000810
IOPSRCNT EQU   20                  DISPLACEMENT OF RECORD COUNT         PM000820
IOPSR4SA EQU   24                  DISPLACEMENT OF R4 SAVE AREA         PM000830
IOPSLGTH EQU   28                  LENGTH OF DCBSW C/B                  PM000840
         AIF   ('&PARM1' EQ '').A02                                     PM000850
         AIF   (T'&PARM1 NE 'N').A01                                    PM000860
&MAXDD   SETA  &PARM1                                                   PM000870
IOMMAXDD EQU   &MAXDD 0            MAX NO. OF DD STATEMENTS             PM000880
         AGO   .A02                                                     PM000890
.A01     MNOTE 1,'MAX NO OF DD STATEMENTS IS NON-NUMERIC'               PM000900
.A02     AIF   ('&PARM2' NE '').A03                                     PM000910
         AIF   ('&PARM3' NE '').A03                                     PM000920
         AIF   ('&PARM4' NE '').A03                                     PM000930
         AIF   ('&TYPE' NE '').A03                                      PM000940
         AIF   ('&LOOP' NE '').A03                                      PM000950
         AIF   ('&RTN' NE '').A03                                       PM000960
         AGO   .A04                                                     PM000970
.A03     MNOTE *,'THE SUPERFLUOUS OPERANDS CODED WERE IGNORED'          PM000980
.A04     MEXIT                                                          PM000990
.B00     AIF   ('&SUBTYPE' NE 'DCBSW').C00                              PM001000
         AIF   ('&PARM1' NE '').B01                                     PM001010
         MNOTE 16,'NO DDNAME SUPPLIED FOR DCBSW OPERATION'              PM001020
         MEXIT                                                          PM001030
.B01     AIF   ('&PARM2' NE '').B02                                     PM001040
&DCB     SETC  '&PARM1'                                                 PM001050
         MNOTE *,'NO DCB NAME SUPPLIED - DDNAME ASSUMED'                PM001060
         AGO   .B03                                                     PM001070
.B02     ANOP                                                           PM001080
&DCB     SETC  '&PARM2'                                                 PM001090
.B03     ANOP                                                           PM001100
&BIT0    SETC  '0'                                                      PM001110
&BIT1    SETC  '1'                                                      PM001120
&BIT8    SETC  '0'                                                      PM001130
         AIF   ('&PARM3' EQ '').B04                                     PM001140
         AIF   ('&PARM3' EQ 'INPUT').B05                                PM001150
         AIF   ('&PARM3' EQ 'PRINT').B20                                PM001160
         AIF   ('&PARM3' NE 'OUTPUT').B10                               PM001170
&BIT1    SETC  '0'                                                      PM001180
         AGO   .B05                                                     PM001190
.B20     ANOP                                                           PM001200
&BIT8    SETC  '1'                                                      PM001210
&BIT1    SETC  '0'                                                      PM001220
         AGO   .B05                                                     PM001230
.B04     MNOTE *,'I/O TYPE NOT SPECIFIED - INPUT ASSUMED'               PM001240
.B05     AIF   ('&PARM4' EQ '').B06                                     PM001250
         AIF   ('&PARM4' NE 'MANDAT').B10                               PM001260
&BIT0    SETC  '1'                                                      PM001270
         AGO   .B07                                                     PM001280
.B06     MNOTE *,'DD STATEMENT IS OPTIONAL'                             PM001290
.B07     ANOP                                                           PM001300
&B       SETC  '00000'                                                  PM001310
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM001320
&B       SETC  '&BIT0&BIT1.00000&BIT8'                                  PM001330
&NAME    DC    B'&B',C'X  ',V(&DCB),CL8'&PARM1',A(0),PL4'0',A(0)        PM001340
         AIF   ('&TYPE' NE '').A03                                      PM001350
         AIF   ('&LOOP' NE '').A03                                      PM001360
         AIF   ('&RTN' NE '').A03                                       PM001370
         MEXIT                                                          PM001380
.B10     MNOTE 16,'UNKNOWN POSITIONAL PARAMETER'                        PM001390
         MEXIT                                                          PM001400
.*                                                                      PM001410
.*                                                                      PM001420
.*       IOM   PUT,DCBSW (,(REG) (,PRINT) (,LNECNT) (,RTN=HEADING)      PM001430
.*                                                                      PM001440
.*       IOM   GET,DCBSW (,(REG))                                       PM001450
.*                                                                      PM001460
.C00     AIF   ('&SUBTYPE' EQ 'PUT').C01                                PM001470
         AIF   ('&SUBTYPE' NE 'GET').D00                                PM001480
.C01     AIF   ('&PARM1' NE '').C021                                    PM001490
.C011    MNOTE 16,'MANDATORY DCBSW ADDRESS NOT SUPPLIED'                PM001500
         MEXIT                                                          PM001510
.C021    ANOP                                                           PM001520
&NAME    TM    &PARM1.+IOPSSW,IOSWPRES 0IS DD STATEMENT PRESENT         PM001530
         BZ    IOMC&SYSNDX 0       BYPASS I/O IF NO DD STATEMENT        PM001540
         AIF   ('&OPEN' EQ 'N').C100                                    PM001550
         TM    &PARM1.+IOPSSW,IOSWOPEN 0 TEST IF DCB OPEN               PM001560
         BO    IOME&SYSNDX 0       BRANCH IF OPEN                       PM001570
         ST    R4,&PARM1.+IOPSR4SA 0 PRESERVE R4 RETUR  ADDRESS         PM001580
         LA    R2,&PARM1           POINT R2 AT DCBSW                    PM001590
         CBAL  R4,OPEN,LOOP=NO     OPEN DATA SET                        PM001600
         L     R4,&PARM1.+IOPSR4SA 0 RESTORE SAVED R4 VALUE             PM001610
IOME&SYSNDX EQU * 0                BYPASS OPEN PROCESSING               PM001620
.C100    ANOP                                                           PM001630
         AIF   ('&SUBTYPE' NE 'GET').C023                               PM001640
         TM    &PARM1.+IOPSSW,IOSWEOF 0TEST FOR END OF FILE ALREADY     PM001650
         BO    IOMC&SYSNDX 0       BR IF EOF ALREADY REACHED            PM001660
.C023    ANOP                                                           PM001670
         AIF   ('&SUBTYPE' NE 'PUTM').C024                              PM001680
         LR    R0,&REG             POINT R0 AT DATA                     PM001690
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001700
         L     R15,48(0,R1)        LOAD PUT ROUTINE ADDRESS             PM001710
         BALR  R14,R15             LINK TO PUT ROUTINE                  PM001720
         AGO   .C05                                                     PM001730
.C024    ANOP                                                           PM001740
         AIF   ('&SUBTYPE' NE 'GETM').C025                              PM001750
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001760
         LR    R0,&REG             POINT R0 AT DESTINATION              PM001770
         L     R15,48(0,R1)        LOAD GET ROUTINE ADDRESS             PM001780
         BALR  R14,R15             LINK TO GET ROUTINE                  PM001790
         AGO   .C05                                                     PM001800
.C025    ANOP                                                           PM001810
         AIF   ('&PARM3' NE 'PRINT' OR '&RTN' NE'').C022                PM001820
IOMD&SYSNDX EQU * 0                LOOP BACK FOR EOP POOCESSING         PM001830
.C022    ANOP                                                           PM001840
         L     R1,&PARM1.+IOPSDCB  POINT R1 AT DCB ADDRESS              PM001850
         L     R15,48(,R1) 0       GET I/O RTN ADDRESS                  PM001860
         BALR  R14,R15             LINK TO I/O ROUTINE                  PM001870
         ST    R1,&PARM1.+IOPSRECA STORE BUFFER ADDRESS                 PM001880
         AIF   ('&PARM2' EQ '').C05                                     PM001890
         AIF   ('&PARM2'(1,1) EQ '(').C04                               PM001900
.C031    MNOTE 16,'INVALID REGISTER SPECIFICATION FOR &SUBTYPE'         PM001910
         MEXIT                                                          PM001920
.C04     LR    &PARM2(1),R1 0      SET BUFFER ADDRESS IN WORK REGISTER  PM001930
.C05     AP    &PARM1.+IOPSRCNT(4),=P'1' 0 INCREMENT RECORD COUNT       PM001940
         AIF   ('&PARM3' NE 'PRINT').C9                                 PM001950
&LNECNT  SETC  '&PARM4'                                                 PM001960
         AIF   ('&PARM4' NE '').C6                                      PM001970
         MNOTE *,'NO LINE COUNT SUPPLIED - 60 ASSUMED'                  PM001980
         CP    &PARM1.+IOPSRCNT(4),=P'60' TEST FOR END OF PAGE          PM001990
         AGO   .C63                                                     PM002000
.C6      ANOP                                                           PM002010
         AIF   (T'&PARM4 EQ 'N').C62                                    PM002020
         CP    &PARM1.+IOPSRCNT(4),&PARM4 TEST FOR END OF PAGE          PM002030
         AGO   .C63                                                     PM002040
.C62     CP    &PARM1.+IOPSRCNT(4),=P'&LNECNT' 0TEST FOR END OF PAGE    PM002050
.C63     BL    IOMC&SYSNDX 0       BRANCH IF NOT                        PM002060
         ZAP   &PARM1.+IOPSRCNT(4),=P'0' 0 ZEROISE LINE COUNT           PM002070
         AIF   ('&RTN' NE '').C7                                        PM002080
         MNOTE *,'NO EOP ROUTINE SUPPLIED - PAGE SKIP FORCED'           PM002090
         MVI   0(R1),PAGESKIP 0    ESTABLISH PAGE SKIP                  PM002100
         B     IOMD&SYSNDX 0       SKIP TO NEW PAGE                     PM002110
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       PM002120
.C8      AIF   ('&TYPE' NE '').A03                                      PM002130
         AIF   ('&LOOP' NE '').A03                                      PM002140
         MEXIT                                                          PM002150
.C7      ST    R4,IOMD&SYSNDX 0    PRESERVE RETURN ADDRESS              PM002160
         CBAL  R4,&RTN,LOOP=NO     PERFORM HEADING ROUTINE              PM002170
         L     R4,IOMD&SYSNDX 0    RESTORE RETURN ADDRESS               PM002180
         B     IOMC&SYSNDX 0       BRANCH OVER SAVE AREA                PM002190
IOMD&SYSNDX DS F 0                 SAVE AREA FOR R4                     PM002200
IOMC&SYSNDX EQU * 0                END OF ROUTINE                       PM002210
         AGO   .C8                                                      PM002220
.C9      ANOP                                                           PM002230
IOMC&SYSNDX EQU * 0                 END OF ROUTINE                      PM002240
         AIF   ('&PARM3' NE '').A03                                     PM002250
         AIF   ('&PARM4' NE '').A03                                     PM002260
         AIF   ('&TYPE' NE '').A03                                      PM002270
         AIF   ('&LOOP' NE '').A03                                      PM002280
         AIF   ('&RTN' NE '').A03                                       PM002290
         MEXIT                                                          PM002300
.D00     AIF   ('&SUBTYPE' NE 'OPEN').E00                               PM002310
         AIF   ('&TYPE' EQ '').D04                                      PM002320
         AIF   ('&TYPE' EQ 'DEF').D02                                   PM002330
.D01     MNOTE 16,'UNKNOWN TYPE OPERAND'                                PM002340
         MEXIT                                                          PM002350
.*                                                                      PM002360
.*                                                                      PM002370
.*       IOM   OPEN,DCBSW-ADDR, (,NOREOPEN) (,LOOP=N) (,RTN=AAA)        PM002380
.*                                                                      PM002390
.D02     ANOP                                                           PM002400
&LABEL   SETC  'OPEN'                                                   PM002410
         AIF   ('&NAME' EQ '').D03                                      PM002420
&LABEL   SETC  '&NAME'                                                  PM002430
.D03     ANOP                                                           PM002440
&LABEL   DS    0H 0                ENTRY TO OPEN SUBROUTINE             PM002450
         L     R1,IOPSDCB(,R2) 0   GET DCB ADDRESS                      PM002460
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         PM002470
         BNO   0(R4) 0             RETURN IF NOT                        PM002480
         TM    IOPSSW(R2),IOSWOPEN 0 TEST IF DATA SET OPEN              PM002490
         BO    0(R4) 0             RETURN IF DATA STE OPEN              PM002500
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM002510
         ST    R1,*+8 0            STORE DCB ADDRESS                    PM002520
         BAL   R1,*+8              LOAD REG 1 WITH LIST ADDRESS         PM002530
         DC    A(0) 0              DCB ADDRESS                          PM002540
         TM    IOPSSW(R2),IOSWINPT 0 TEST IF INPUT                      PM002550
         BO    IOMD&SYSNDX 0       BRANCH IF YES                        PM002560
         MVI   0(R1),143 0         SET OPTION BYTE FOR INPUT            PM002570
         B     *+8 0               GO TO SVC                            PM002580
IOMD&SYSNDX MVI 0(R1),128          SET OPTION BYTE                      PM002590
         SVC   19 0                ISSUE OPEN SVC                       PM002600
         OI IOPSSW(R2),IOSWOPEN+IOSWOPNH INDICATE DATA SET OPEN         PM002610
         MVI   IOPSEOD(R2),C'X'    RESET EOD INDICATOR IF NECESSARY     PM002620
         BR    R4 0                RETURN TO MAIN-LINE                  PM002630
.D031    AIF   ('&PARM1' NE '').A03                                     PM002640
         AIF   ('&PARM2' NE '').A03                                     PM002650
         AIF   ('&PARM3' NE '').A03                                     PM002660
         AIF   ('&PARM4' NE '').A03                                     PM002670
         AIF   ('&LOOP' NE '').A03                                      PM002680
         AIF   ('&RTN' NE '').A03                                       PM002690
         MEXIT                                                          PM002700
.D04     AIF   ('&PARM1' EQ '').C011                                    PM002710
         AIF   ('&LOOP' EQ '').D05                                      PM002720
&NAME    LA    R10,&LOOP 0         ESTABLISH LOOP                       PM002730
.D05     ANOP                                                           PM002740
&LABEL   SETC  '&NAME'                                                  PM002750
         AIF   ('&LOOP' EQ '').D06                                      PM002760
&LABEL   SETC  ' '                                                      PM002770
.D06     ANOP                                                           PM002780
&LABEL   LA    R2,&PARM1 0         POINT AT DCBSW                       PM002790
         AIF   ('&RTN' EQ '').D07                                       PM002800
&RTNE    SETC  '&RTN'                                                   PM002810
         AGO   .D09                                                     PM002820
.D07     AIF   ('&SUBTYPE' EQ 'CLOSE').D08                              PM002830
&RTNE    SETC  'OPEN'                                                   PM002840
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               PM002850
&RTNE    SETC  'TIOTSCAN'                                               PM002860
         AGO   .D09                                                     PM002870
.D08     ANOP                                                           PM002880
&RTNE    SETC  'CLOSE'                                                  PM002890
.D09     ANOP                                                           PM002900
         AIF   ('&PARM2' NE 'NOREOPEN').D081                            PM002910
         TM    IOPSSW(R2),IOSWOPNH TEST IF OPENED ALREADY               PM002920
         BO    IOME&SYSNDX         BR IF ALREADY OPENED ONCE            PM002930
.D081    ANOP                                                           PM002940
IOMD&SYSNDX CBAL R4,&RTNE 0        PERFORM SUB-ROUTINE                  PM002950
IOME&SYSNDX    EQU *               CONTINUE PROCESSING                  PM002960
         AIF   ('&LOOP' EQ '').D10                                      PM002970
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              PM002980
         BCT   R10,IOMD&SYSNDX 0   LOOP BACK TO PROCESS NEXT            PM002990
.D10     AIF   ('&PARM2' NE '').A03                                     PM003000
         AIF   ('&PARM3' NE '').A03                                     PM003010
         AIF   ('&PARM4' NE '').A03                                     PM003020
         MEXIT                                                          PM003030
.E00     AIF   ('&SUBTYPE' NE 'CLOSE').F00                              PM003040
         AIF   ('&TYPE' EQ 'DEF').E01                                   PM003050
         AIF   ('&TYPE' EQ '').D04                                      PM003060
         AGO   .D01                                                     PM003070
.E01     ANOP                                                           PM003080
         AIF   ('&SUBTYPE' EQ 'OPEN').D09                               PM003090
&RTNE    SETC  'TIOTSCAN'                                               PM003100
&LABEL   SETC  'CLOSE'                                                  PM003110
         AIF   ('&NAME' EQ '').E02                                      PM003120
&LABEL   SETC  '&NAME'                                                  PM003130
.E02     ANOP                                                           PM003140
&LABEL   DS    0H 0                ENTRY TO CLOSE SUBROUTINE            PM003150
         TM    IOPSSW(R2),IOSWOPEN TEST IF DATA SET OPEN                PM003160
         BZ    0(R4) 0             RETURN IF NOT                        PM003170
         L     R1,IOPSDCB(R2) 0    GET DCB ADDRESS                      PM003180
         CNOP  0,4 0               ENSURE CORRECT ALIGNMENT             PM003190
         ST    R1,*+8 0            STORE DCB ADDRESS                    PM003200
         BAL   R1,*+8              POINT R1 AT PARM LIST                PM003210
         DC    A(0) 0              DCB ADDRESS                          PM003220
         MVI   0(R1),128 0         SET OPTION BYTE                      PM003230
         SVC   20 0                ISSUE CLOSE SVC                      PM003240
         L     R1,IOPSDCB(R2)      GET DCB ADDRESS                      PM003250
       FREEPOOL (R1)               FREE ACQUIRED BUFFER POOL            PM003260
         NI    IOPSSW(R2),IOSWCLOS INDICATE CLOSED                      PM003270
         BR    R4 0                RETURN TO MAIN-LINE                  PM003280
         AIF   ('&PARM1' NE '').A03                                     PM003290
         AIF   ('&PARM2' NE '').A03                                     PM003300
         AIF   ('&PARM3' NE '').A03                                     PM003310
         AIF   ('&PARM4' NE '').A03                                     PM003320
         AIF   ('&LOOP' NE '').A03                                      PM003330
         AIF   ('&RTN' NE '').A03                                       PM003340
         MEXIT                                                          PM003350
.*                                                                      PM003360
.*                                                                      PM003370
.*       IOM   EOF,DCBSW-NAME (,DUMMY BUFFER ADDRESS)                   PM003380
.*                                                                      PM003390
.F00     AIF   ('&SUBTYPE' NE 'EOF').G00                                PM003400
         AIF   ('&PARM1' EQ '').C011                                    PM003410
&NAME    OI    &PARM1.+IOPSSW,IOSWEOF INDICATE EOF                      PM003420
         MVI   &PARM1.+IOPSEOD,C'Y' SET CHARACTER FOR EOF INDICATION    PM003430
         AIF   ('&PARM2' EQ '').F01                                     PM003440
         L     R1,&PARM2           POINT R1 AT DUMMY BUFFER             PM003450
         ST    R1,&PARM1.+IOPSRECA 0PRESERVE DUMMY BUFFER ADDRESS       PM003460
         AGO   .F02                                                     PM003470
.F01     XC    &PARM1.+IOPSRECA(4),&PARM1.+IOPSRECA NULLIFY RECORD ADD  PM003480
.F02     ANOP                                                           PM003490
         AGO   .A02                                                     PM003500
.G00     AIF   ('&SUBTYPE' NE 'TIOTSCAN').H00                           PM003510
         AIF   ('&TYPE' EQ 'DEF').G01                                   PM003520
         AIF   ('&TYPE' NE '').D01                                      PM003530
         AGO   .D04                                                     PM003540
.G01     ANOP                                                           PM003550
&LABEL   SETC  'TIOTSCAN'                                               PM003560
         AIF   ('&NAME' EQ '').G02                                      PM003570
&LABEL   SETC  '&NAME'                                                  PM003580
.G02     ANOP                                                           PM003590
&LABEL   DS    0H 0                ENTRY TO TIOT SCAN ROUTINE           PM003600
*                                                                       PM003610
*        EXTRACT TIOT ADDRESS EVERY TIME LEST TIOT ALTERED BY           PM003620
*         DYNAMICALLY ALLOCATED DD STATEMENTS.                          PM003630
*                                                                       PM003640
         EXTRACT IOMATIOT,'S',FIELDS=TIOT  OBTAIN ADDRESS OF TOOT       PM003650
         B     IOMG&SYSNDX         BRANCH AROUND SAVE AREAS             PM003660
IOMATIOT DS    F 0                 ADDRESS OF TIOT                      PM003670
IOMTIOT1 DS    F 0                 SAVE AREA FOR R3                     PM003680
IOMTIOT2 DS    F 0                 SAVE AREA FOR R10                    PM003690
IOMG&SYSNDX EQU * 0                SUBSEQUENT PROCESSING                PM003700
         ST    R3,IOMTIOT1 0       PRESERVE CONTENTS                    PM003710
         ST    R10,IOMTIOT2 0       OF R3 AND R10                       PM003720
         L     R3,IOMATIOT 0       GET ADDRESS OF TIOT                  PM003730
         LA    R3,24(,R3) 0        POINT AT FIRST DD ENTRY              PM003740
IOMH&SYSNDX CLC 0(4,R3),=F'0' 0     TEST FOR END OF TIOT                PM003750
         BE    IOMI&SYSNDX.+4      RETURN IF YES                        PM003760
         CLC   4(8,R3),IOPSDDN(R2) TEST FOR DDNAME MATCH                PM003770
         BE    IOMI&SYSNDX 0       BRANCH IF YES                        PM003780
         SR    R10,R10 0           ZEROISE WORK REGISTER                PM003790
         IC    R10,0(R3) 0         INSERT ENTRY LENGTH                  PM003800
         AR    R3,R10 0            INCREMENT TO NEXT ENTRY              PM003810
         B     IOMH&SYSNDX 0       LOOP TO PROCESS NEXT ENTRY           PM003820
IOMI&SYSNDX OI IOPSSW(R2),IOSWPRES INDICATE DD STATEMENT PRESENT        PM003830
         L     R3,IOMTIOT1 0       RETRIEVE CONTENTS                    PM003840
         L     R10,IOMTIOT2 0       OF R3 AND R10                       PM003850
         BR    R4 0                RETURN TO MAIN LINE                  PM003860
         AGO   .D031                                                    PM003870
.H00     AIF   ('&SUBTYPE' NE 'BLKSZRTN').I00                           PM003880
         AIF   ('&TYPE' EQ 'DEF').H02                                   PM003890
         AIF   ('&TYPE' NE '').D01                                      PM003900
         MNOTE 16,'INCOMPLETE BLKSIZE REQUEST'                          PM003910
         MEXIT                                                          PM003920
.H02     ANOP                                                           PM003930
&LABEL   SETC  'BLKSZRTN'                                               PM003940
         AIF   ('&NAME' EQ '').H01                                      PM003950
&LABEL   SETC  '&NAME'                                                  PM003960
.H01     ANOP                                                           PM003970
&LABEL   DS    0H 0                SUPPLY DEFAULT IF NO BLOCK SIZE      PM003980
         USING IHADCB,R1 0         ESTABLISH DCB ADDRESSABILITY         PM003990
         CLC   DCBBLKSI,=F'0' 0    TEST IF BLKSIZE SUPPLIED             PM004000
         BNE   0(R14) 0            RETURN TO OPEN IF YES                PM004010
         MVC   DCBBLKSI,DCBLRECL 0 MOVE LRECL TO BLKSIZE                PM004020
         BR    R14 0               RETURN TO OS OPEN ROUTINE            PM004030
         DROP  R1 0                DROP DCB ADDRESSABILITY              PM004040
         AGO   .D031                                                    PM004050
.*                                                                      PM004060
.*                                                                      PM004070
.*       IOM   SUMMARY,DCBSW-ADDR,(REG),RTN= (,MSGID=)                  PM004080
.*                                                                      PM004090
.I00     AIF   ('&SUBTYPE' NE 'SUMMARY').J00                            PM004100
         AIF   ('&PARM1' EQ '').C011                                    PM004110
         AIF   ('&PARM2' NE '').I01                                     PM004120
.I001    MNOTE 16,'MANDATORY REGISTER SPECIFICATION IS MISSING'         PM004130
         MEXIT                                                          PM004140
.I01     AIF   ('&PARM2'(1,1) NE '(').C031                              PM004150
         AIF   ('&RTN' NE '').I02                                       PM004160
.I011    MNOTE 16,'MANDATORY RTN NAME IS MISSING'                       PM004170
         MEXIT                                                          PM004180
.I02     ANOP                                                           PM004190
&NAME    DS    0H 0                PRINT SUMMARY OF D/S ACTIVITY        PM004200
         LA    R2,&PARM1 0         GET DCBSW ADDRESS                    PM004210
         AIF   ('&LOOP' EQ '').I03                                      PM004220
         LA    R10,&LOOP 0         ESTABLISH LOOP                       PM004230
IOMI&SYSNDX EQU * 0                RETURN POINT FOR LOOP                PM004240
.I03     AIF   ('&PARM3' EQ '').I05                                     PM004250
         AIF   ('&PARM3' NE 'PRESENT').B10                              PM004260
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMENT PRESENT         PM004270
         BZ    IOMJ&SYSNDX 0       BYPASS PROCESSING IF NOT             PM004280
.I05     ANOP                                                           PM004290
&REG     SETC  '&PARM2(1)'                                              PM004300
         TM    IOPSSW(R2),IOSWEOP  TEST IF PRINT DATA SET               PM004310
         BO    IOMJ&SYSNDX         BYPASS PROCESSING IF YES             PM004320
&BA      SETA  0                                                        PM004330
         AIF   ('&MSGID' EQ '').I10                                     PM004340
&BA      SETA  K'&MSGID                                                 PM004350
         AIF   ('&MSGID'(1,1) NE '''').I30                              PM004360
&BA      SETA  &BA-2                                                    PM004370
.I30     ANOP                                                           PM004380
         AIF   ('&MSGID'(1,1) NE '''').I20                              PM004390
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             PM004400
         AGO   .I21                                                     PM004410
.I20     ANOP                                                           PM004420
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            PM004430
.I21     ANOP                                                           PM004440
&BA      SETA  &BA+2                                                    PM004450
.I10     ANOP                                                           PM004460
&DA      SETA  &BA+5                                                    PM004470
         MVC   &DA.(18,&REG),=C'NUMBER OF RECORDS ' ADD MESSSAGE TO BUF PM004480
&DA      SETA  &BA+23                                                   PM004490
         MVC   &DA.(11,&REG),=C'READ FROM  ' ADD FUTHER MESSAGE         PM004500
         TM    IOPSSW(R2),IOSWINPT TEST IF INPUT DATA SET               PM004510
         BO    *+10                BR IF INPUT                          PM004520
         MVC   &DA.(11,&REG),=C'WRITTEN TO ' SHOW WHITTEN TO NOT READ   PM004530
&DA      SETA  &BA+34                                                   PM004540
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DNAME TO MESSAGE            PM004550
&DA      SETA  &BA+42                                                   PM004560
         MVC   &DA.(2,&REG),=C' =' ADD EQUALS SIGN TO MESSGGE           PM004570
&DA      SETA  &BA+44                                                   PM004580
         MVC   &DA.(10,&REG),=X'40206B2020206B202120' EDIT MASK TO MSG  PM004590
         ED    &DA.(10,&REG),IOPSRCNT(R2) EDIT THE RECORD COUNT         PM004600
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                PM004610
IOMJ&SYSNDX EQU * 0                BYPASS BRANCH ADDRESS                PM004620
.I06     AIF   ('&LOOP' EQ '').I07                                      PM004630
         LA    R2,IOPSLGTH(,R2) 0  INCREMENT TO NEXT DCBSW              PM004640
         BCT   R10,IOMI&SYSNDX 0   LOOP TO PROCESS NEXT                 PM004650
.I07     AIF   ('&PARM4' NE '').A03                                     PM004660
         AIF   ('&TYPE' NE '').A03                                      PM004670
         MEXIT                                                          PM004680
.*                                                                      PM004690
.*                                                                      PM004700
.*       IOM   AUDIT,DCBSW-ADDR,(REG),EOJRTN,RTN= (,MSGID=)             PM004710
.*                                                                      PM004720
.J00     AIF   ('&SUBTYPE' NE 'AUDIT').K00                              PM004730
         AIF   ('&PARM1' EQ '').C011                                    PM004740
         AIF   ('&PARM3' NE '').J001                                    PM004750
         MNOTE *,'NO END-OF-JOB ROUTINE ADDRESS SUPPLIED'               PM004760
         MNOTE *,'PROGRAM WILL ABEND WITH 0C1 IF MANDATORY STATEMENT MI$PM004770
               SSING'                                                   PM004780
.J001    ANOP                                                           PM004790
         AIF   ('&PARM2' EQ '').I001                                    PM004800
         AIF   ('&PARM2'(1,1) NE '(').C031                              PM004810
         AIF   ('&RTN' EQ '').I011                                      PM004820
&NAME    DS    0H 0                REPORT ON PRESENCE OF DD STATEMENTS  PM004830
         LA    R2,&PARM1           GET DCBSW ADDRESS                    PM004840
         AIF   ('&LOOP' EQ '').J01                                      PM004850
         LA    R10,&LOOP 0         ESTABLISH LOOP                       PM004860
IOMJ&SYSNDX EQU * 0                RETURN POINT FOR LOOP                PM004870
.J01     ANOP                                                           PM004880
&REG     SETC  '&PARM2(1)'                                              PM004890
&BA      SETA  0                                                        PM004900
         AIF   ('&MSGID' EQ '').J10                                     PM004910
&BA      SETA  K'&MSGID                                                 PM004920
         AIF   ('&MSGID'(1,1) NE '''').J30                              PM004930
&BA      SETA  &BA-2                                                    PM004940
.J30     ANOP                                                           PM004950
         AIF   ('&MSGID'(1,1) NE '''').J20                              PM004960
         MVC   5(&BA,&REG),=C&MSGID MOVE MESSAGE ID TO LINE             PM004970
         AGO   .J21                                                     PM004980
.J20     ANOP                                                           PM004990
         MVC   5(&BA,&REG),=C'&MSGID' ADD MESSAGE ID TO LINE            PM005000
.J21     ANOP                                                           PM005010
&BA      SETA  &BA+2                                                    PM005020
.J10     ANOP                                                           PM005030
&DA      SETA  &BA+5                                                    PM005040
         MVC   &DA.(35,&REG),=C'MANDATORY DATA SET          PRESENT'    PM005050
&DA      SETA  &BA+24                                                   PM005060
         MVC   &DA.(8,&REG),IOPSDDN(R2) ADD DDNAME TO MESSAGE           PM005070
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    PM005080
         BO    *+10 0              BRANCH IF YES                        PM005090
&DA      SETA  &BA+5                                                    PM005100
         MVC   &DA.(9,&REG),=C' OPTIONAL' SHOW DATA SET IS OPTIONAL     PM005110
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      PM005120
         BO    *+10 0              BRANCH IF YES                        PM005130
&DA      SETA  &BA+33                                                   PM005140
         MVC   &DA.(7,&REG),=C'MISSING' SHOW DATA SET IS MISSING        PM005150
         CBAL  R4,&RTN 0           PERFORM PRINT ROUTINE                PM005160
         TM    IOPSSW(R2),IOSWMAND TEST IF MANDATORY                    PM005170
         BZ    IOMK&SYSNDX 0       BRANCH IF NOT                        PM005180
         TM    IOPSSW(R2),IOSWPRES TEST IF PRESENT                      PM005190
         BO    IOMK&SYSNDX 0       BRANCH IF YES                        PM005200
         OI    IOML&SYSNDX.+1,X'F0' 0    SET TO BRANCH AT END OF JOB    PM005210
         MVC   IOMM&SYSNDX.+27(8),IOPSDDN(R2) ADD DD NAME TO WRO        PM005220
IOMM&SYSNDX WTO 'MANDATORY DATA SET ******** MISSING'                   PM005230
IOMK&SYSNDX EQU * 0                                                     PM005240
         AIF   ('&LOOP' EQ '').J02                                      PM005250
         LA    R2,IOPSLGTH(,R2) 0  POINT AT NEXT DCBSW                  PM005260
         BCT   R10,IOMJ&SYSNDX 0   LOOP BACK TO PROCESS                 PM005270
.J02     ANOP                                                           PM005280
&RTNE    SETC  '*+2'                                                    PM005290
         AIF   ('&PARM3' NE '').J03                                     PM005300
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED'                       PM005310
         AGO   .J04                                                     PM005320
.J03     ANOP                                                           PM005330
&RTNE    SETC  '&PARM3'                                                 PM005340
.J04     ANOP                                                           PM005350
IOML&SYSNDX BC 0,&RTNE 0           GO TO END-OF-JOB IF MAND MISSING     PM005360
         AGO   .I07                                                     PM005370
.*                                                                      PM005380
.*                                                                      PM005390
.*       IOM   IOERROR,(REG),PRINTRTN,EOJRTN,MSGID=TEXT' (,TYPE=DEF)    PM005400
.*                                                                      PM005410
.K00     AIF   ('&SUBTYPE' NE 'IOERROR').L00                            PM005420
         AIF   ('&TYPE' EQ 'DEF').K01                                   PM005430
         AIF   ('&TYPE' NE '').D01                                      PM005440
         MNOTE 16,'INVALID I/O ERROR REQUEST'                           PM005450
         MEXIT                                                          PM005460
.K01     ANOP                                                           PM005470
&RTNE    SETC  'PRINT'                                                  PM005480
&EOJRTNE SETC  'PRINTCDE'                                               PM005490
&REG     SETC  'R5'                                                     PM005500
&LABEL   SETC  'IOERROR'                                                PM005510
         AIF   ('&NAME' EQ '').K02                                      PM005520
&LABEL   SETC  '&NAME'                                                  PM005530
.K02     AIF   ('&PARM3' NE '').K03                                     PM005540
         MNOTE *,'NO END-OF-JOB ADDRESS SUPPLIED - ''PRINTCDE'' ASSUMD' PM005550
         AGO   .K04                                                     PM005560
.K03     ANOP                                                           PM005570
&EOJRTNE SETC  '&PARM3'                                                 PM005580
.K04     AIF   ('&PARM2' NE '').K05                                     PM005590
         MNOTE *,'NO PRINT ROUTINE ADDRESS - ''PRINT'' ASSUMED'         PM005600
         AGO   .K06                                                     PM005610
.K05     ANOP                                                           PM005620
&RTNE    SETC  '&PARM2'                                                 PM005630
.K06     AIF   ('&PARM1' EQ '').K07                                     PM005640
         AIF   ('&PARM1'(1,1) NE '(').C031                              PM005650
&REG     SETC  '&PARM1(1)'                                              PM005660
         AGO   .K08                                                     PM005670
.K07     MNOTE *,'NO REGISTER SPECIFIED - R5 ASSUMED'                   PM005680
.K08     ANOP                                                           PM005690
&LABEL   DS    0H 0                ENSURE ALIGNMENT                     PM005700
        SYNADAF ACSMETH=QSAM 0     CALL ANALYSIS ROUTINE                PM005710
         MVC   IOMM&SYSNDX,50(R1) ADD RESULT OF ANALYSIS                PM005720
        SYNADRLS , 0               RELEASE OS BUFFER                    PM005730
         WTO   MF=(E,IOML&SYSNDX) 0TELL OPERATOR OF ERROR               PM005740
         MVI   0(&REG),SPCE2AFT 0  ESTABLISH DOUBLE BLANK LINES         PM005750
         CBAL  R4,&RTNE,LOOP=NO     AND WRITE THEM                      PM005760
         MVC   5(98,&REG),IOMM&SYSNDX 0 MOVE IN ERROR MESSAGE           PM005770
         CBAL  R4,&RTNE,LOOP=NO    WRITE ERROR MESSAGE                  PM005780
        SUBOUT RETURN=&EOJRTNE 0   TERMINATE JOB                        PM005790
         SPACE 1                                                        PM005800
IOML&SYSNDX DS 0F                                                       PM005810
         DC    AL2(IOMN&SYSNDX.-*),AL2(0)                               PM005820
         AIF   ('&MSGID' EQ '').K09                                     PM005830
         DC    C&MSGID             MESSAGE IDENTIFIER                   PM005840
.K09     DC    C'I/O ERROR - '                                          PM005850
IOMM&SYSNDX DC CL86' '             TEXT OF ERROR ANALYSIS               PM005860
IOMN&SYSNDX EQU *                  END OF I/O ERROR MESSAGE             PM005870
         MEXIT                                                          PM005880
.L00     AIF   ('&SUBTYPE' NE 'PUTM').M00                               PM005890
.L01     ANOP                                                           PM005900
         AIF   ('&PARM1' EQ '').C011                                    PM005910
&REG     SETC  'R1'                                                     PM005920
         AIF   ('&PARM2' EQ '').C021                                    PM005930
         AIF   ('&PARM2'(1,1) NE '(').C031                              PM005940
&REG     SETC  '&PARM2(1)'                                              PM005950
         AGO   .C021                                                    PM005960
.M00     AIF   ('&SUBTYPE' EQ 'GETM').L01                               PM005970
.N00     AIF   ('&SUBTYPE' NE 'ISRANDOM').O00                           PM005980
.*                                                                      PM005990
.*                                                                      PM006000
.*       IOM   ISRANDOM,DCBSW-ADDR,KEY-ADDR                             PM006010
.*                                                                      PM006020
&NAME    LA    R2,&PARM1           POINT R2 AT DCBSW                    PM006030
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD NOT FOUND              PM006040
         TM    IOPSSW(R2),IOSWPRES TEST IF DD STATEMNT PRESENT          PM006050
         BZ    IOMN&SYSNDX         BYPASS I/O IF DD STAT MISSING        PM006060
         AIF   ('&OPEN' EQ 'N').N01                                     PM006070
         TM    IOPSSW(R2),IOSWOPEN TEST IF DD STATEMENT OPEN            PM006080
         BO    IOON&SYSNDX         BR IF OPEN                           PM006090
         CBAL  R4,ISOPEN           OPEN DCB                             PM006100
.N01     ANOP                                                           PM006110
IOON&SYSNDX LA R1,IOPSDCB(R2)      GET DCB ADDRESS                      PM006120
         LA    R15,&PARM2          GET KEY ADDRESS                      PM006130
         READ  DECB&SYSNDX,K,(R1),'S','S',(R15) READ IS RANDOMLY        PM006140
         CHECK DECB&SYSNDX,DSORG=IS WAIT FOR COMPLETION OF I/O          PM006150
.*       WAIT  ECB=DECB&SYSNDX     WAIT FR COMPLETION OF I/O            PM006160
         TM    DECB&SYSNDX.+24,DCBEXNKY TEST IF RECORD NOT FOUND        PM006170
         BO    IOMN&SYSNDX         EXIT TEST IF RECORD NOT FOUND        PM006180
.*       MVI   IOPSISI(R2),C'W'    ASSUME SOME SORT OF ERROR OCCURRED   PM006190
.*       CLC   DECB&SYSNDX.+24(2),=X'0000' TEST IF ERROR CONDITION      PM006200
.*       BNE   IOMN&SYSNDX         EXIT IF ANY ERROR CONDITION          PM006210
         MVI   IOPSISI(R2),C'Y'    ASSUME RECORD IS DELETED             PM006220
         L     R1,IOPSDCB(R2)      GET ADDRESS OF DCB                   PM006230
         TM    DCBOPTCD-IHADCB(R1),DCBOPTL DOES DELETE FLAG EXIST       PM006240
         BZ    *+16                BR IF NO DELETE FLAG                 PM006250
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                   PM006260
         CLI   0(R1),X'FF'         TEST IF RECORD IS DELETED            PM006270
         BE    IOMN&SYSNDX         EXIT IF RECORD DELETED               PM006280
         MVI   IOPSISI(R2),C'X'    SHOW RECORD FOUND                    PM006290
         L     R1,DECB&SYSNDX.+16  GET RECORD ADDRESS                   PM006300
IOMN&SYSNDX EQU *                  CONTINUE PROCESSING                  PM006310
         MEXIT                                                          PM006320
.O00     ANOP                                                           PM006330
         MNOTE 16,'UNKNOWN MACRO SUBTYPE'                               PM006340
         MEND                                                           PM006350
