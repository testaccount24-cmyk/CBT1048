***(ID)                            JES2B324
***(SUBSYSTEM)                     JES2
***(DESIGNER)                      D.A.MOORCROFT
***(AUTHOR)                        J. NOLS
*
***(DATE WRITTEN)                  JULY 1977.
***(DATE TESTED)                   JULY 1977.
***(DATE INSTALLED)                JULY 1977.
*
***(ABSTRACT)
*
*        OUR EXTENSION TO THE JQE CONTAINS A BYTE OF AUXILIARY HOLD
*         FLAGS, AND WHEN ONE OF THESE FLAGS IS SET ON, THE PRIMARY
*         AUXILIARY HOLD FLAG ( AJQFPHLD IN FLAG BYTE AJQEHOLD ) AND THE
*         BASIC JES2 HOLD FLAG ( JQEHLD1 ) ARE ALSO SET ON.  AN ADDITIONAL
*         FLAG ( AJQFHLD1 ) IS ALSO SET ON IF THE JOB IS ALREADY IN HOLD
*         STATUS, SO THAT, WHEN THE JOB IS RELEASED FROM ITS AUXILIARY
*         HOLD STATUS, IT MAY BE LEFT IN BASIC HOLD AGAIN.
*        THE PURPOSE OF THIS MODIFICATION IS TO FURTHER EXTEND OUR CONTROL
*         OF THE JOB BY ALLOWING THE OPERATOR TO PLACE THE JOB INTO 'BASIC'
*         HOLD ( VIA THE $H COMMAND ) WHILE IT IS IN AN AUXILIARY HOLD STATE.
*         THIS IS ACHIEVED BY MAINTAINING THE FLAG 'AJQFHLD1' BY THE $A
*         AND $H COMMANDS AT THE SAME TIME AS THE BASIC FLAG ( QUEHOLD1
*         IN FLAG BYTE JQEFLAGS ), SO THAT THE OPERATOR CAN ISSUE A $H
*         TO A JOB ALREADY IN AUXILIARY HOLD STATE, AND HAVE THE JOB REVERT
*         TO BASIC HOLD STATUS AFTER THE AUXILIARY HOLD HAS BEEN REMOVED.
*
*        NOTE THAT IT IS NOT NECESSARY TO PERFORM A SIMILIAR FUNCTION FOR
*         THE OTHER JES2 HOLD FLAGS ( QUEHOLDA AND QUEHOLD2 ) BECAUSE THERE
*         IS NO AMBIGUITY ABOUT THEIR USAGE.  THE PROCESSING OUTLINED ABOVE
*         IS ONLY NECESSARY BECAUSE, IN EFFECT, QUEHOLD1 PERFORMS TWO
*         DISCRETE FUNCTIONS, AND IT IS USEFUL TO BE ABLE TO DISTINGUISH
*         BETWEEN THEM.
*
*        ( UNDER HASP 3.1 THERE WAS NO EQUIVALENT MODIFICATION ).
*
***(LOGIC SUMMARY)
*
*        THIS MODIFICATION IS ENTERED FROM BOTH $A COMMAND PROCESSING
*         AND $H COMMAND PROCESSING.  IN EACH CASE IT IS INVOKED WITH
*         THE 'ENTRY=' OPTION OF THE $CBAL MACRO, SO THAT THE ROUTINE
*         KNOWS WHETHER TO SET THE FLAG ON OR OFF, AND IN EACH CASE THE
*         $CBAL IS IMMEDIATELY AFTER THE BASIC FLAG ( QUEHOLD1 ) HAS BEEN
*         SET BY THE JES2 COMMAND.
*        NOTE THAT THE MODIFICATION NEED CONCERN ITSELF WITH NOTHING EXCEPT
*         SETTING THE FLAG AJQFHLD1 ON OR OFF, SINCE IT WILL ONLY RECEIVE
*         CONTROL IF IT IS LEGITIMATE TO ALTER THE FLAG.  ( MODIFICATION
*         JES2B321 BYPASSES $A PROCESSING IF THE PRIMARY AUXILIARY HOLD
*         FLAG IS ON ).
*
*        NOTE : THE MACRO $AUXFLAG IS USED TO SET ON OR OFF AJQFHLD1 FLAG.
*
*
***(INSTALLATION)
*
*        THIS IS A MONSANTO JES2 MOD DYNAMICALLY LOADED AT
*        INITIALISATION TIME UPON REQUEST VIA AN 'EXIT=' CONTROL CARD.
*
***(TESTING)
*
*        ON A JES2 TEST SYSTEM :-
*
*           - ENTER $ZI TO STOP INITIATORS
*           - SUBMIT ANY TEST JOB (WITH NO HOLD REQUEST).
*           - ENTER THE FOLLOWING COMMANDS, IN ORDER :-
*
*             - $HJNNN TO HOLD THE JOB
*               (*) ------------------------------------+ HOLD
*             - $SI TO START INITIATORS
*             - $KJNNN TO SET THE JOB IN 'KEEP' HOLD
*               (*) ------------------------------------+ HOLD+KEEP
*             - $UJNNN TO SET THE JOB IN 'USER' HOLD
*               (*) ------------------------------------+ HOLD+KEEP+UHLD
*             - $HA TO SET THE JOB IN 'SOFT' HOLD
*             - $DJNNN TO DISPLAY THE JOB
*               (*) ------------------------------------+ HOLD+SOFT+KEEP+UHLD
*             - $RJNNN TO REMOVE JOB FROM 'USER' HOLD STATUS
*               (*) ----  JOB NNNN URELEASED
*             - $DJNNN TO DISPLAY THE JOB
*               (*) ------------------------------------+ HOLD+SOFT+KEEP
*             - $FJNNN TO REMOVE THE 'KEEP' HOLD STATUS
*               (*) ----  JOB NNNN FREED
*             - $DJNNN TO DISPLAY THE JOB
*               (*) ------------------------------------+ HOLD+SOFT
*             - $AA TO REMOVE 'SOFT' HOLD STATUS
*               (*) ----  JOB(S) RELEASED
*             - $DJNNN TO DISPLAY THE JOB
*               (*) ------------------------------------+ HOLD
*             - $AJNNN TO RELEASE JOB FROM 'USER' HOLD
*               (*) ----  JOB NNNN RELEASED
*     -------> ((*)) AT THIS STAGE THE JOB WILL START IN EXECUTION.
*                     IF THE JOB START BEFORE $AJNNN, THERE IS
*                     SOMETHING WRONG WITH THIS MOD.
*
*               (*) NORMAL JES2 MESSAGE DISPLAYED.
*
*
*
