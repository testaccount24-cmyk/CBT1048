//OSDITTO  JOB (302D001300080D),                                        OS000100
//  MSGLEVEL=1,CLASS=A,REGION=150K                                      OS000200
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL,AC=1'                          OS000300
//ASM.SYSPUNCH DD DUMMY                                                 OS000400
//ASM.SYSIN DD *                                                        OS000500
         TITLE '* * * * * * *       O S / D I T T O     * * * * * * *'  OS000600
         SPACE 20                                                       OS000700
*********************************************************************** OS000800
*                                                                     * OS000900
*             5798-ARD  COPYRIGHT IBM CORPORATION  1973               * OS001000
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * OS001100
*                                                                     * OS001200
*********************************************************************** OS001300
         EJECT                                                          OS001400
*********************************************************************** OS001500
*                                                                     * OS001600
*                                                                     * OS001700
* * * * * * * * * * *       O S / D I T T O       * * * * * * * * * * * OS001800
*                                                                     * OS001900
*                                                                     * OS002000
*        XXX       LIST DITTO FUNCTIONS                               * OS002100
*        CC        CARD TO CARD                                       * OS002200
*        CCS       CARD TO CARD WITH SEQ. NUMBERS AND DECK NAME       * OS002300
*        CP        CARD TO PRINTER IN CHARACTER FORMAT                * OS002400
*        CD        CARD TO PRINTER IN CHAR. AND HEX DUMP FORMAT       * OS002500
*        CT        CARD TO TAPE BLOCKED TO 400                        * OS002600
*        CTS       CARD TO TAPE WITH SEQ. NUMBERS AND DECKNAME        * OS002700
*        CCL       CANCEL CARD INPUT (FLUSH TO EOF)                   * OS002800
*        TC        TAPE TO CARD BLOCKED OR UNBLOCKED                  * OS002900
*        TP        TAPE TO PRINTER UNBLOCKED IN CHAR. FORMAT          * OS003000
*        TPD       TAPE TO PRINTER DEBLOCKED IN CHAR. FORMAT          * OS003100
*        TD        TAPE TO PRINTER UNBLOCKED IN CHAR. AND HEX DUMP    * OS003200
*        TDD       TAPE TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP    * OS003300
*        TPV       TAPE TO PRINTER VARIABLE RECORDS IN CHAR. FORMAT   * OS003400
*        TDV       TAPE TO PRINTER VARIABLE RECORDS IN CHAR. AND HEX  * OS003500
*        TFA       THIS FUNCTION IS NOT AVAILABLE IN OS/DITTO         * OS003600
*        TFD       THIS FUNCTION IS NOT AVAILABLE IN OS/DITTO         * OS003700
*        TRS       TAPE RECORD SCAN                                   * OS003800
*        TRL       TAPE RECORD LOAD                                   * OS003900
*        INT       INTIALIZE TAPE                                     * OS004000
*        TT        TAPE TO TAPE  (01 TO 99) FILES                     * OS004100
*        TTR       TAPE TO TAPE REBLOCKED                             * OS004200
*        WTM       WRITE TAPE MARK                                    * OS004300
*        REW       REWIND TAPE                                        * OS004400
*        RUN       REWIND AND UNLOAD TAPE ( VIA CLOSE MACRO )         * OS004500
*        FSR       FORWARD SPACE RECORD                               * OS004600
*        BSR       BACK SPACE RECORD                                  * OS004700
*        FSF       FORWARD SPACE FILE                                 * OS004800
*        BSF       BACK SPACE FILE                                    * OS004900
*        ERT       ERASE TAPE, 3420 ONLY-DATA SECURITY ERASE VOLUME   * OS005000
*        DSE       DISPLAY DATA SET EXTENT, USE FOR VALID CCCHH       * OS005100
*        DD        DISK TO PRINTER IN CHAR. AND HEX FORMAT UNBLOCKED  * OS005200
*        SD        DISK TO PRINTER - SPLIT CYLINDER                   * OS005300
*        DDD       DISK TO PRINTER IN CHAR. AND HEX FORMAT DEBLOCKED  * OS005400
*        SDD       DISK TO PRINTER DEBLOCKED - SPLIT CYLINDER         * OS005500
*        DRL       DISK RECORD LOAD                                   * OS005600
*        DRS       DISK RECORD SCAN                                   * OS005700
*        SRS       DISK RECORD SCAN - SPLIT CYLINDER                  * OS005800
*        EOF       WRITE DISK END OF FILE RECORD                      * OS005900
*        DID       ALTER DISK IDENTIFICATION VOLUME LABEL (OFFLINE)   * OS006000
*        EOJ       END OF JOB                                         * OS006100
*                                                                     * OS006200
*                                                                     * OS006300
*********************************************************************** OS006400
         EJECT                                                          OS006500
*********************************************************************** OS006600
**********              SAVE REGISTERS                      *********** OS006700
**********              SET UP BASE REGISTERS               *********** OS006800
**********              BRANCH TO INIALIZATION ROUTINE      *********** OS006900
*********************************************************************** OS007000
         SPACE 1                                                        OS007100
         ISEQ  75,80                                                    OS007200
OSDITTO  START                                                          OS007300
         USING *,RF                                                     OS007400
         SAVE  (14,12)                                                  OS007500
         LR    R2,RD                                                    OS007600
         DROP  RF                                                       OS007700
         BALR  R6,R0                                                    OS007800
         USING *,R6,RD,RE,RF           SET                              OS007900
         L     R7,BUMP                 UP                               OS008000
         LR    RD,R6                   THE                              OS008100
         AR    RD,R7                   BASE                             OS008200
         LR    RE,RD                   REGISTERS                        OS008300
         AR    RE,R7                                                    OS008400
         LR    RF,RE                                                    OS008500
         AR    RF,R7                                                    OS008600
         B     INITIALZ            GO DO INIALIZATION IN IO AREA        OS008700
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               OS008800
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED  OS008900
NBUFPAGS EQU   7                   THIS EQU CONTROLS THE SIZE OF THE    OS009000
*                                  DISK/TAPE I/O BUFFER AND CCW BYTE    OS009100
*                                  COUNT IN 2K INCREMENTS. IT IS SIG-   OS009200
*                                  NIFICANT FOR TWO REASONS:            OS009300
*                                      1. REGION/PARTITION SIZE IN MFT  OS009400
*                                         AND MVT. ALSO VS/1 AND VS/2   OS009500
*                                         IF OS/DITTO IS RUN V=R.       OS009600
*                                      2. CCW BYTE COUNT IS USED BY IOS OS009700
*                                         TO DETERMINE NO. OF SHORT-    OS009800
*                                         TERM PAGE FIXES FOR I/O.      OS009900
*                                  A VALUE OF 7 IN THE EQU WILL ALLOC.  OS010000
*                                  14K WHICH IS LARGE ENOUGH FOR FULL   OS010100
*                                  TRK 3330 BLKSIZES. IT MAY BE REDUCED OS010200
*                                  IF SMALLER BUFFER IS DESIRED.        OS010300
         DS    0F                                                       OS010400
SAVEAREA DC    3F'0'                   FORWARD BACKWARD PTRS            OS010500
         DC    15F'0'                  SAVE R14 TO R12 - CALLED PGM     OS010600
SAVREGS  DC    14F'0'                  SAVE R1 TO R14, DITTO TAPERR RTN OS010700
SV13TO15 DC    3F'0'               SAVE BASE REGS, LM AFTER EACH MACRO  OS010800
BUMP     DC    F'4096'                                                  OS010900
         DC    F'0'                MAKE BUMP 2 WORDS                    OS011000
SAV      EQU   BUMP                USE BUMP AS SAV                      OS011100
SAVRCSZ  EQU   SAVREGS             SAVE RECSIZE VALUE AT SAVREGS        OS011200
         EJECT                                                          OS011300
*********************************************************************** OS011400
*********      CHECK FOR INTERRUPT OF A FUNCTION HERE    ************** OS011500
*********************************************************************** OS011600
         SPACE 2                                                        OS011700
CHKIRPT  EQU   *                                                        OS011800
         MVI   IRPTECB,X'00'           RESET WTOR ECB FOR FUNC IRPT     OS011900
         OC    IRPT(4),BLANKS          SET INTERUPT REPLY TO UPPER CASE OS012000
         CLC   IRPT(3),EOJDC           GO TO EOJ ?                      OS012300
         BE    EOJ                                                      OS012400
         EJECT                                                          OS013000
*********************************************************************** OS013100
**********    WTOR INTERRUPT ROUTINE & CONSOLE INPUT        *********** OS013200
*********************************************************************** OS013300
         SPACE 1                                                        OS013400
INTRP    EQU   *                                                        OS013500
         MVI   IRPTECB,X'00'           RESET WTOR ECB FOR FUNC IRPT     OS013600
         MVC   IRPT(4),BLANKS          BLANK OUT WTOR REPLY AREA        OS013700
         WTOR  '***** OS/DITTO ACTIVE *****',IRPT,4,IRPTECB,           XOS013800
               DESC=6,ROUTCDE=2                                         OS013801
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS013900
         MVC   CONIO(54),IRPTMSG   'REPLY : U . . . '                   OS014000
         MVI   WCNCCW+7,54         SET MSG LNTH                         OS014100
         BAL   R8,WCON2                                                 OS014200
         MVC   CONIO(30),ENTERMSG  'ENTER: XXX . . .                    OS014300
         MVI   WCNCCW+7,X'1E'                                           OS014400
         BAL   R8,WCON2                                                 OS014500
CONSOLE  EQU   *                                                        OS014600
         MVC   SCALE(20),BLANKS    BLANK SCALE AREA                     OS014700
         MVI   SCANVSW+1,X'00'     SET SW TO NOP AFTER EACH FUNCTION    OS015100
         LA    R8,SHCCW                RESET SEEK CCW                   OS015200
         ST    R8,DSKCCWA              IN DISK IOB                      OS015300
         LA    R8,DTPIO            RESET IO POINTER IN                  OS015400
         ST    R8,RWCCW            DISK CCW.                            OS015500
         ST    R8,OTTPCCW          RESET IO ADDRESS IN OUT TAPE CCW     OS015600
         MVI   BLCT,X'FF'          RESET                                OS015700
         MVI   BLCT+1,X'FF'        SIMULATED END OF FILE SW.            OS015800
         MVC   INTPCCW+6(2),DSL+2  RESET TAPE LNGTH                     OS015900
         MVC   OTTPCCW+6(2),DSL+2  IN TAPE CCWS.                        OS016000
         MVI   LISTSW,0            PREPARE LISTSW FOR ZERO PROPOGATION  OS016100
         MVC   LISTSW+1(LNOFMOVE),LISTSW   SET SW'S & W/A'S TO X'00'    OS016200
         MVI   OTTPCCW,X'01'       RESET OUT TAPE TO WRITE.             OS016300
         MVI   INTPCCW,X'02'       RESET IN-TAPE TO READ                OS016400
         MVI   INTPERSW,X'00'      TURN OFF OPER ERROR HANDLING-INTAPE  OS016500
         MVC   HH2,HH1+7           SET HEADING FORMAT.                  OS016600
         MVC   ADRSLO(215),BLANKS  BLANK OUT HEADING BUFFERS            OS016700
         CLI   CNTRLSW,X'FF'       DO WE READ CONTROL CARDS ?           OS016800
         BE    CNTRLCD             YES,  GO TO CONTROL CARD ROUTINE.    OS016900
         MVI   CDEOFSW+1,X'F0'     DO NOT CHK FOR /+ DELIM. IN CONSL OP OS017000
         MVI   INTPERSW,X'02'      NO, SET TAPEIN FOR OPER ERR HANDLING OS017100
         MVC   CONIO(6),DITTODC        'DITTO '                         OS017200
         MVC   CONIO+6(9),FUNCMSG      'FUNCTION '                      OS017300
         MVI   CONIO+15,C'?'           '?'                              OS017400
         MVI   WCNCCW+7,X'10'                                           OS017500
         MVI   RCNCCW+7,X'40'      SET FOR REPLY                        OS017600
         MVI   P,X'00'             SET PARAM COUNTER = ZERO             OS017700
         LA    R2,P1               INDEX TO P1                          OS017800
         LA    R5,5                NUMBER OF P SAVE AREAS               OS017900
         BAL   R8,WRTCON                                                OS018000
         LA    R1,CONIO+2                                               OS018100
         MVC   FUNCOD,CONIO        SAVE FUNCTION CODE                   OS018200
         CLI   FUNCOD+2,C','       COMMA AFTER FUNCTION ?               OS018300
         BNE   CONSL1              NO, GO CHECK 3RD POSITION            OS018400
         MVI   FUNCOD+2,C' '       YES, OVERLAY WITH BLANK              OS018500
         B     CONSL2              GO SCAN PARAMETERS                   OS018600
CONSL1   LA    R1,CONIO+3                                               OS018700
         CLI   CONIO+3,C','        COMMA AFTER 3RD POSITION ?           OS018800
         BNE   CONDONE             NO, NO PARAMETERS - WE ARE DONE      OS018900
CONSL2   MVC   P1(50),BLANKS       BLANK PARAM SAVE AREAS               OS019000
SCNMOV   LA    R1,1(R1)            BUMP INPUT PAST COMMA                OS019100
         LA    R4,11               MAX. LENGTH OF PARAM SAVE AREA + 1   OS019200
         LR    R3,R1               SAVE ADDRESS OF INPUT                OS019300
SCNMOV1  CLI   0(R1),C','          COMMA IS END OF PARAMETER ?          OS019400
         BE    SCNMOV2             YES                                  OS019500
         CLI   0(R1),C' '          BLANK IS END OF PARAMETER ?          OS019600
         BE    SCNMOV2             YES                                  OS019700
         LA    R1,1(R1)            NO, BUMP TO NEXT INPUT CHARACTER     OS019800
         BCT   R4,SCNMOV1            AND GO CHECK AGAIN                 OS019900
         B     CONDONE             INVALID LENGTH, EXIT                 OS020000
SCNMOV2  IC    R7,P                ADD 1 TO                             OS020100
         LA    R7,1(R7)             VALID PARAMETER                     OS020200
         STC   R7,P                  COUNTER                            OS020300
         LA    R7,11               LENGTH OF P1 + 1 IN REG 7            OS020400
         SR    R7,R4               LESS REG 4 = LENGTH OF INPUT PARAM   OS020500
         LTR   R7,R7               WAS PARAM OMITTED ?  (R7 = 0)        OS020600
         BZ    SCNMOV3             YES, BYPASS DATA MOVE                OS020700
         BCTR  R7,R0               DECREMENT LNTH FOR MOVE              OS020800
         EX    R7,SCNMOVE          MOVE DATA                            OS020900
SCNMOV3  LA    R2,10(R2)           BUMP TO NEXT PARAMETER SAVE AREA     OS021000
         BCTR  R5,R0               DECREMENT SAVE AREA COUNTER          OS021100
         LTR   R5,R5               ARE WE OUT OF SAVE AREAS ?           OS021200
         BZ    CONDONE             YES, EXIT                            OS021300
         CLI   0(R1),C' '             MORE INPUT PARAMETERS ?           OS021400
         BNE   SCNMOV              YES, GO SCAN NEXT PARAM              OS021500
CONDONE  BAL   R8,LOOKUP           GO LOOK UP FUNCTION                  OS021600
         MVC   CONIO(8),INVLDMSG       'INVALID '                       OS021700
         MVC   CONIO+8(8),FUNCMSG      'FUNCTION'                       OS021800
         MVI   WCNCCW+7,X'10'                                           OS021900
         BAL   R8,WCON2                                                 OS022000
         B     CONSOLE             INVALID FUNCTION , RETURN TO CONSOLE OS022100
SCNMOVE  MVC   0(1,R2),0(R3)       VARIABLE MOVE MODIFIED BY EXECUTE    OS022200
P        DC    X'00'               COUNTER = NUMBER OF ACTIVE SAVE AREA OS022300
P1       DS    CL10                                                     OS022400
P2       DS    CL10                PARAMETER                            OS022500
P3       DS    CL10                 SAVE                                OS022600
P4       DS    CL10                  AREAS                              OS022700
P5       DS    CL10                                                     OS022800
         EJECT                                                          OS022900
*********************************************************************** OS023000
**********               CONTROL CARD INPUT                 *********** OS023100
*********************************************************************** OS023200
         SPACE 2                                                        OS023300
CNTRLCD  BAL   R8,DHDG                                                  OS023400
         BAL   R8,OVFLO            SKIP TO CHAN 1                       OS023500
         BAL   R8,CDRD             READ A CARD                          OS023600
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS023700
         BE    EOJ                 YES, EXIT                            OS023800
         MVI   PL,X'50'            SET PRINT LNTH TO 80                 OS023900
         BAL   R8,PRNT             PRINT THE CONTROL CARD.              OS024000
         CLC   CONIO(8),CTL        CC 1-8 = '$$DITTO '     ?            OS024100
         BE    CTLOK               YES                                  OS024200
         B     BADCTL              ISSUE BAD CONTROL CARD MSG           OS024400
CTLOK    LA    RB,CONIO+8          YES, SET UP FOR CONTROL CARD SCAN    OS024500
         LA    R5,64               SCAN TO 72 INCLUSIVE. 73-80 = SEQ NO OS024600
IDLOOP   CLI   0(RB),C' '          FUNCTION CODE ?                      OS024700
         BNE   HOLDID              YES, GO SAVE IT                      OS024800
         LA    RB,1(RB)            BUMP SCAN POINTER                    OS024900
         BCT   R5,IDLOOP           GO LOOK AGAN                         OS025000
         B     BADCTL              NO ID                                OS025100
HOLDID   MVC   FUNCOD,0(RB)        SAVE FUNCTION CODE                   OS025200
         LA    RB,3(RB)            BUMP PAST FUNC. CODE                 OS025300
         BCTR  R5,R0               DECREMENT                            OS025400
         BCTR  R5,R0                COUNTER                             OS025500
         BCTR  R5,R0                                                    OS025600
PARMLOP  CLI   0(RB),C' '          PARAMETERS GIVEN ?                   OS025700
         BNE   CKBG                YES                                  OS025800
         LA    RB,1(RB)            NO, BUMP POINTER                     OS025900
         BCT   R5,PARMLOP           AND LOOK AGAIN                      OS026000
         B     CHKID               NO PARAMETERS, EXIT                  OS026100
CKBG     CLC   BG,0(RB)            PARAM = BEGIN ?                      OS026200
         BNE   CKEN                NO, BRANCH.                          OS026300
         LA    RB,6(RB)                                                 OS026400
         MVC   ADRSLO,0(RB)        YES, SAVE IT.                        OS026500
         LA    RB,5(RB)                                                 OS026600
         OI    CT,X'02'            SET BEGIN SW ON.                     OS026700
         B     BUMPIT                                                   OS026800
CKEN     CLC   EN,0(RB)            PARAM = END ?                        OS026900
         BNE   CKIN                NO, BRANCH                           OS027000
         LA    RB,4(RB)                                                 OS027100
         MVC   ADRSUP,0(RB)        YES, SAVE IT.                        OS027200
         LA    RB,5(RB)                                                 OS027300
         OI    CT,X'01'            SET END SW ON.                       OS027400
         B     BUMPIT                                                   OS027500
CKIN     CLC   IN,0(RB)            PARAM = INPUT ?                      OS027600
         BNE   CKOT                NO, BRANCH.                          OS027700
         LA    RB,6(RB)            INCR PAST INPUT=                     OS027800
         LA    R1,8                SET SCAN LENGTH                      OS027900
         BAL   R8,DDNMSCN          LOOK FOR TAPEIN, DISKIN, OR TAPEOUT  OS028000
         MVC   INDDSAV,DDWK1       SAVE DDNAME                          OS028100
         BAL   R8,CKTPINDD         IS OPEN REQ'D ?  VALIDATE DDNAME     OS028200
         OI    CT,X'80'            SET INPUT SW ON.                     OS028300
         B     BUMPIT                                                   OS028400
CKOT     CLC   OT,0(RB)            PARAM = OUTPUT ?                     OS028500
         BNE   CKNB                NO, BRANCH.                          OS028600
         LA    RB,7(RB)                                                 OS028700
         LA    R1,8                                                     OS028800
         BAL   R8,DDNMSCN          LOOK FOR TAPEOUT OR TAPEIN           OS028900
         MVC   OUTDDSAV,DDWK1      SAVE DDNAME                          OS029000
         BAL   R8,CKTPOTDD         OPEN REQ'D ? VALIDATE DDNAME         OS029100
         OI    CT,X'40'            SET OUTPUT SW ON.                    OS029200
         B     BUMPIT                                                   OS029300
CKNB     CLC   NB,0(RB)            PARAM = NBLKS ?                      OS029400
         BNE   CKRS                NO, BRANCH.                          OS029500
         LA    RB,6(RB)                                                 OS029600
         LA    R1,4                MAX. LNGTH OF NBLKS VALUE            OS029700
         BAL   R8,RJUST            GO RT ADJUST                         OS029800
         MVC   HNB,0(RC)           VALUE IN HNB                         OS029900
         LA    R1,HNB              PRIME R1 FOR TSTNUM1                 OS030000
         LA    RC,4(R0)            SET RC TO MAX SIZE OF 4              OS030100
         BAL   R8,TSTNUM1          TEST FOR NUMERIC.                    OS030200
         B     BADCTL                                                   OS030300
         MVC   HOLD+4(4),HNB       CHANGED TO HNB FOR NBLKS             OS030400
         BAL   R8,BINCVT           CONVERT TO BINARY                    OS030500
         STH   R1,BLCT             AND STORE.                           OS030600
         LTR   R1,R1               IS IT ZERO ?                         OS030700
         BZ    BADCTL              YES, INVALID                         OS030800
         OI    CT,X'20'            SET NBLKS SW ON.                     OS030900
         B     BUMPIT                                                   OS031000
CKRS     CLC   RS,0(RB)            PARAM = RECSIZE ?                    OS031100
         BNE   CKDT                NO, BRANCH.                          OS031200
         LA    RB,8(RB)                                                 OS031300
         LA    R1,5                MAX. LNGTH OF RECSIZE VALUE          OS031400
         BAL   R8,RJUST            GO RT ADJUST                         OS031500
         MVC   HRS,0(RC)           VALUE IN HRS                         OS031600
         OI    CT,X'10'            SET RECSIZE SW ON.                   OS031700
         B     BUMPIT                                                   OS031800
CKDT     CLC   DT,0(RB)            PARAM = DECKTYPE ?                   OS031900
         BNE   CKBF                NO, BRANCH.                          OS032000
         LA    RB,9(RB)                                                 OS032100
         MVC   DECKTYPE,0(RB)      YES, SAVE IT.                        OS032200
         LA    RB,3(RB)                                                 OS032300
         OI    CT,X'08'            SET DECKTYPE SW ON.                  OS032400
         B     BUMPIT                                                   OS032500
CKBF     CLC   BF,0(RB)            PARAM = BLKFACTOR ?                  OS032600
         BNE   CKDN                NO, BRANCH.                          OS032700
         LA    RB,10(RB)                                                OS032800
         LA    R1,3                MAX. LNGTH OF BLKFACTOR              OS032900
         BAL   R8,RJUST            GO RT ADJUST                         OS033000
         MVC   HBF,0(RC)           VALUE IN HBF                         OS033100
         OI    CT,X'04'            SET BLKFACTOR SW ON.                 OS033200
         B     BUMPIT                                                   OS033300
CKDN     CLC   DN,0(RB)            PARAM = DECKNAME ?                   OS033400
         BNE   BUMPIT              NO, BRANCH.                          OS033500
         LA    RB,9(RB)                                                 OS033600
         LR    R3,RB               YES, SET UP TO SAVE VARIABLE         OS033700
         SR    RC,RC               LENGTH PARAMETER                     OS033800
         CLI   0(RB),C','          COMMA = END OF VALUE ?               OS033900
         BE    BUMPIT              YES, GO MOVE IT                      OS034000
         CLI   0(RB),C' '          BLANK = END OF VALUE ?               OS034100
         BE    BUMPIT              YES, GO MOVE IT                      OS034200
DNLOOP   LA    RB,1(RB)            BUMP PAST DATA ELEMENT               OS034300
         CLI   0(RB),C' '          IS NEXT POS. BLANK ?                 OS034400
         BE    FILLIT              YES, GO MOVE DATA                    OS034500
         CLI   0(RB),C','          IS NEXT POS. A COMMA ?               OS034600
         BE    FILLIT              YES, GO MOVE DATA                    OS034700
         LA    RC,1(RC)            NO, ADD 1 TO COUNTER                 OS034800
         B     DNLOOP              AND CHECK AGAIN                      OS034900
FILLIT   LA    R1,7(R0)            MAX FIELD LNGTH MINUS 1              OS035000
         CR    RC,R1               USER GIVE MORE THAN 8 POS. ?         OS035100
         BH    BADCTL              YES, BAD FORMAT                      OS035200
         STC   RC,*+5              NO, STORE LNGTH MINUS 1              OS035300
         MVC   DECKNAME,0(R3)      IN MOVE INSTRUCTION                  OS035400
BUMPIT   CLI   0(RB),C' '          CHECK FOR BLANK                      OS035500
         BE    CHKID               YES, END OF PARAMETERS, EXIT         OS035600
         CLI   0(RB),C','          OR COMMA .                           OS035700
         BNE   BADCTL              NO, BAD FORMAT                       OS035800
         LA    RB,1(RB)            YES, BUMP PAST COMMA                 OS035900
         B     CKBG                AND LOOP FOR NEXT PARAMETER          OS036000
RJUST    MVC   WK2,0(RB)           VARIABLE LENGTH VALUE IN WK2         OS036100
         LR    R0,R1               SAVE MAX. LNGTH OF VALUE             OS036200
         LA    RC,WK2+1            WORK REGISTER                        OS036300
RJUST1   CLI   0(RC),C' '          END OF PARAMETER ?                   OS036400
         BE    RTMOVE              YES                                  OS036500
         CLI   0(RC),C','          COMMA ?                              OS036600
         BE    RTMOVE              YES                                  OS036700
         LA    RB,1(RB)            BUMP CONTROL CARD SCAN POINTER       OS036800
         LA    RC,1(RC)            BUMP WORK POINTER                    OS036900
         BCT   R1,RJUST1           LOOP AND LOOK AGAIN                  OS037000
RTMOVE   SR    RC,R0               12 NOW POINTS TO BEGIN OF RT ADJ VAL OS037100
         LA    RB,1(RB)            BUMP CONTROL CARD SCAN TO DELIMITER  OS037200
         BR    R8                  RETURN                               OS037300
DDNMSCN  MVC   DDWK1,BLANKS        CLEAR WORK AREA                      OS037400
         MVC   DDWK1,0(RB)         MOVE IN VAR LEN DDNAME               OS037500
         LR    R0,R1               SAVE MAX VALUE OF 8                  OS037600
         LA    RC,DDWK1+1          PRIME SCAN PTR TO 2ND CHAR           OS037700
DDNMSCN1 CLI   0(RC),C' '          BLANK ?                              OS037800
         BE    DDSCNDON                                                 OS037900
         CLI   0(RC),C','          COMMA ?                              OS038000
         BE    DDSCNDON                                                 OS038100
         LA    RB,1(RB)            BUMP CTL CRD SCAN PTR                OS038200
         LA    RC,1(RC)            BUMP DDNAME  SCAN PTR                OS038300
         BCT   R1,DDNMSCN1         LOOP CTL                             OS038400
DDSCNDON LA    RB,1(RB)            BUMP CTL CRD SCAN TO DELIMITER       OS038500
         MVC   0(7,RC),BLANKS      SET RT PORTION OF DDNM TO BLANKS     OS038600
         BR    R8                                                       OS038700
CHKID    BAL   R8,LOOKUP           GO LOOKUP FUNCTION                   OS038800
BADCTL   MVC   CONIO(80),BLANKS    RETURN HERE IF INVALID               OS038900
         MVC   CONIO(42),CTLERROR  'CONTROL CARD ERROR, . . .           OS039400
         BAL   R8,PRNT                                                  OS039500
         MVI   ABENDSW+1,X'F0'     SET RETURN SW TO XXXRET              OS039600
         B     LSTFUNCT            GO LIST DOCUMENTATION FOR PGMR       OS039700
XXXRET   EQU   *                                                        OS039800
         MVI   HIORDBIT,X'00'      SET DUMP BIT OFF                     OS039900
**************************** HAND CODED ABEND MACRO ******************* OS040000
ABEND    DS    0H                                                       OS040100
         CNOP  0,4                                                      OS040200
         B     LOADCODE                                                 OS040300
HIORDBIT DC    AL1(128)            DUMP BIT SET UNTIL BADCTL CARD       OS040400
UCODE    DC    AL3(100)            U100 TILL SET BY OTHER THAN BADCTL   OS040500
*                                  U100 IS CONTROL CARD ERROR           OS040600
LOADCODE L     R1,HIORDBIT         LOAD CODES INTO R1                   OS040700
         SVC   13                  ABEND SVC                            OS040800
**************************** END OF THE ABEND MACRO ******************* OS040900
U200     DC    AL3(200)            INADEQUATE BUFFER                    OS041000
U300     DC    AL3(300)            UNUSUAL TAPE I/O ERROR               OS041100
U400     DC    AL3(400)            UNUSUAL DISK I/O ERROR               OS041200
U500     DC    AL3(500)            CURR. INPUT BLK > 1ST BLK IN TTR RTN OS041300
*                                  OR I/P BLK NOT MULTIPLE OF RECSIZE.  OS041400
WK1      DC    CL6'000000'             HI ORDER 0'S FOR RT. JUSTIFY     OS041500
WK2      DS    CL6                     LOW ORDER WORK AREA              OS041600
         EJECT                                                          OS041700
*********************************************************************** OS041800
**********         VALIDATE AND TRANSLATE TAPE MODE SET     *********** OS041900
*********************************************************************** OS042000
         SPACE 1                                                        OS042100
CHKMOD   LA    R3,MSICCW           SET IN-TAPE IOB TO                   OS042200
         ST    R3,INTPCCWA         CHAIN TO MODE SET CCW.               OS042300
         LA    R3,MSOCCW           SET OUT-TAPE IOB TO                  OS042400
         ST    R3,OTTPCCWA         CHAIN TO MODE SET CCW.               OS042500
         OI    INTPIOB,X'40'           FORCE COMM. CHAIN BIT ON         OS042600
         OI    OTTPIOB,X'40'           FORCE COMM. CHAIN BIT ON         OS042700
         LA    R3,MODTBL           SET UP FOR                           OS042800
         LA    R9,MODTBL2          TABLE SEARCH.                        OS042900
         CLC   CONIO+3(2),ZEROS    WAS MODE SET ZEROS ?                 OS043000
         BNE   NOTZERO             NO, BRANCH.                          OS043100
         MVC   CONIO+3(2),MODTBL   YES, SET MODE = C0.                  OS043200
NOTZERO  CLC   CONIO+3(2),BLANKS   MODE SET BLANKS ?                    OS043300
         BNE   MODLOOP             NO, BRANCH.                          OS043400
         MVC   CONIO+3(2),MODTBL   YES, SET MODE = C0                   OS043500
MODLOOP  CLC   CONIO+3(2),0(R3)    OPERATOR MODE SET MATCH TABLE ?      OS043600
         BE    GOODMOD             YES, GO SET MODE.                    OS043700
         CLI   0(R3),X'FF'         NO, ARE WE AT END OF TABLE ?         OS043800
         BE    BADMOD              YES, BAD MODE GIVEN.                 OS043900
         LA    R3,2(R3)            NO, BUMP TABLE                       OS044000
         LA    R9,1(R9)            LOOKUP.                              OS044100
         B     MODLOOP                                                  OS044200
GOODMOD  MVI   CONIO+5,X'09'       SET 9 TRK SW.                        OS044300
         TM    0(R9),X'C0'         IS MODE FOR 9 TRK ?                  OS044400
         BO    4(R8)               YES, BRANCH.                         OS044500
         MVI   CONIO+5,X'07'       NO, SET 7 TRK SW.                    OS044600
         B     4(R8)               RETURN.                              OS044700
BADMOD   MVC   CONIO(8),INVLDMSG       'INVALID '                       OS044800
         MVC   CONIO+8(8),=C'MODE SET'                                  OS044900
         MVI   WCNCCW+7,X'10'                                           OS045000
         B     WCON2                                                    OS045100
MODTBL   DC    CL36'C01020283038506068707890A0A8B0B8C8D0'               OS045200
         DC    X'FF'                                                    OS045300
MODTBL2  DC       X'C313232B333B53636B737B93A3ABB3BBCBD3'               OS045400
         EJECT                                                          OS045500
*********************************************************************** OS045600
**********               VERTICAL HEX ROUTINE               *********** OS045700
*********************************************************************** OS045800
         SPACE 1                                                        OS045900
HEXDP    MVC   HEXIO+20(100),0(RA)     MOVE DATA TO HEX AREA.           OS046000
         SR    R8,R8               BUMP PRINT LENGTH                    OS046100
         IC    R8,PRLTH            BY                                   OS046200
         LA    R8,32(R8)           32 POSITIONS                         OS046300
         STC   R8,PL               FOR HEX HEADINGS.                    OS046400
         MVC   CONIO(7),BLANKS                                          OS046500
         MVI   INPUT,X'FF'         SET IGNORE OVERFLOW SW ON.           OS046600
         MVC   CONIO(26),HDG1      SET UP FIRST                         OS046700
         MVC   HEXIO+14(6),DET1    HEADING.                             OS046800
         MVI   CC,X'09'            SINGLE SPACE.                        OS046900
         BAL   R8,EDIT             EDIT AND PRINT.                      OS047000
         MVC   HEXIO+20(1),0(RA)       MOVE                             OS047100
         PACK  HEXIO+20(0),HEXIO+20(0) ZONES AND                        OS047200
         MVO   HEXIO+21(16),0(16,RA)   WITH OFFSET TO                   OS047300
         MVO   HEXIO+36(16),15(16,RA)  NUMERIC POSITIONS.               OS047400
         MVO   HEXIO+51(16),30(16,RA)                                   OS047500
         MVO   HEXIO+66(16),45(16,RA)                                   OS047600
         MVO   HEXIO+81(16),60(16,RA)                                   OS047700
         MVO   HEXIO+96(16),75(16,RA)                                   OS047800
         MVO   HEXIO+111(10),90(10,RA)                                  OS047900
         NC    HEXIO+20(100),SET   AND OFF ZONE S.                      OS048000
         TR    HEXIO+20(100),HEXTB TRANSLATE TO HEX CHAR.               OS048100
         MVC   CONIO(26),HDG2      SET UP ZONE                          OS048200
         MVC   HEXIO+14(6),DET2    HEADINGS.                            OS048300
         BAL   R8,PRNT             PRINT ZONES.                         OS048400
         MVC   HEXIO+20(100),0(RA) REFILL HEX AREA.                     OS048500
         NC    HEXIO+20(100),SET   AND OFF ZONES.                       OS048600
         TR    HEXIO+20(100),HEXTB TRANSLATE TO HEX CHAR.               OS048700
         MVC   CONIO(26),HDG3      SET UP NUMERIC                       OS048800
         MVC   HEXIO+14(6),DET3    HEADINGS.                            OS048900
         BAL   R8,PRNT             PRINT NUMERIC LINE.                  OS049000
         MVC   CONIO(33),BLANKS                                         OS049100
         MVC   HEXIO(120),SCALE    MOVE SCALE TO PRINT AREA.            OS049200
         MVI   CC,X'11'            SET TO DOUBLE SPACE.                 OS049300
         MVI   INPUT,X'00'         TURN OFF IGNORE OVERFLOW SW.         OS049400
         BAL   R8,PRNT             PRINT SCALE.                         OS049500
         BR    R9                  RETURN.                              OS049600
PRLTH    DC    CL1' '                                                   OS049700
HEXTB    DC    CL16'0123456789ABCDEF'                                   OS049800
SET      DC    X'0F'                   SET IS PROPOGATED                OS049900
         DS    CL99                    HERE AT INITIALIZE TIME          OS050000
SCALE    DC    CL20' '                                                  OS050100
         DC    CL50'1...5...10...15...20...25...30...35...40...45...50' OS050200
         DC    CL50'...55...60...65...70...75...80...85...90...95.....' OS050300
TRTBL    DC    CL50' '                                                  OS050400
         DC    CL30'                        ó.<(+|'                     OS050500
         DC    X'50'                                                    OS050600
         DC    CL20'         !$*);^-/   '                               OS050700
         DC    CL24'      ,%_>?          :#@'                           OS050800
         DC    X'7D'                                                    OS050900
         DC    CL25'="                       '                          OS051000
         DC    CL50'                                          ABCDEFGH' OS051100
         DC    CL50'I       JKLMNOPQR        STUVWXYZ      0123456789 ' OS051200
         DC    CL5' '                                                   OS051300
         EJECT                                                          OS051400
*********************************************************************** OS051500
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** OS051600
*********************************************************************** OS051700
         SPACE 1                                                        OS051800
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                OS051900
         BCTR  R0,R0                   CONSOLE REPLY.                   OS052000
         MVC   CONIO+50(5),ZEROS                                        OS052100
         MVC   CONIO+55(10),CONIO                                       OS052200
         LA    R1,CONIO+54                                              OS052300
         AR    R1,RC                                                    OS052400
RTJUST   CLI   0(R1),C' '                                               OS052500
         BNE   MOVBAC                                                   OS052600
         BCTR  R1,R0                                                    OS052700
         BCT   R0,RTJUST                                                OS052800
MOVBAC   SR    R1,RC                                                    OS052900
         MVC   CONIO(10),1(R1)                                          OS053000
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    OS053100
TSTNUM1  TM    0(R1),X'F0'                                              OS053200
         BNO   NUMBAD                                                   OS053300
         LA    R1,1(R1)                                                 OS053400
         BCT   RC,TSTNUM1                                               OS053500
         B     4(R8)                                                    OS053600
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS053700
         BE    BADCTL                                                   OS053800
         MVI   P,0                                                      OS053900
         B     0(R8)                                                    OS054000
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               OS054100
         CVB   R1,HOLD             RESULTS IN REG 1.                    OS054200
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  OS054300
         MVC   HOLD+1(7),HOLD                                           OS054400
         BR    R8                                                       OS054500
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                OS054600
         UNPK  HOLDSEQ,HOLD        IN REG 7                             OS054700
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          OS054800
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  OS054900
         MVC   HOLD+1(7),HOLD                                           OS055000
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       OS055100
         MVI   ESW,X'00'                                                OS055200
         BNE   0(R8)               NO, RETURN.                          OS055300
         LA    R1,HOLDSEQ                                               OS055400
         LA    R0,7                REPLACE WITH                         OS055500
DECLOP   CLI   0(R1),C'0'          BLANKS.                              OS055600
         BNE   0(R8)                                                    OS055700
         MVI   0(R1),C' '                                               OS055800
         LA    R1,1(R1)                                                 OS055900
         BCT   R0,DECLOP                                                OS056000
         BR    R8                                                       OS056100
         EJECT                                                          OS056200
*********************************************************************** OS056300
**********         DEBLOCK  RECORDS FOR PRINTING OR DUMP    *********** OS056400
*********************************************************************** OS056500
         SPACE 1                                                        OS056600
DEBLOK   LA    R4,100(R0)          REC LNTH TO BE PRINTED IS 100        OS056700
         SR    R7,R7                                                    OS056800
DB1      MVI   CC,X'09'                                                 OS056900
         CR    R3,R4               IS RECORD LNTH GREATER THAN 100 ?    OS057000
         BNH   LSBLK               NO, SET UP FOR LAST BLOCK.           OS057100
         SR    R3,R4                                                    OS057200
DB2      CLI   DPSW,X'FF'          DUMP IN HEX ?                        OS057300
         BNE   LST                 NO, GO TO LIST                       OS057400
         CLI   LISTSW,X'FF'        DP,DPD,SP,SPD ?                      OS057410
         BE    DISKLST             YES                                  OS057411
         STC   R4,PRLTH            YES, SET                             OS057500
         BAL   R8,DECCVT           UP TO                                OS057600
         MVC   SCALE+12(8),HOLDSEQ                                      OS057700
         BAL   R9,HEXDP            HEX PRINT 100 POS.                   OS057800
         MVC   HDG1(78),BLANKS                                          OS057900
         AR    RA,R4               BUMP I/O POINTER BY 100.             OS058000
         LA    R7,10(R7)                                                OS058100
         B     DB1                                                      OS058200
DISKLST  MVC   HDG1(8),HDG3        REC NUMBER                           OS058210
         MVC   HDG2,BLANKS         OMIT 'HEAD' TITLE                    OS058211
LST      LR    R1,R4                                                    OS058300
         STC   R1,LSTMVC+1             STORE MVC LNTH                   OS058301
         LA    R1,32(R1)           BUMP PRINT LENGTH                    OS058400
         STC   R1,PL               BY 32 POS ( FOR HDGS)                OS058500
         MVC   CONIO(32),HDG1      MOVE HDG1 TO PRINT AREA              OS058600
LSTMVC   MVC   CONIO+32(100),0(RA)     MOVE FROM DTPIO TO PRINT AREA    OS058700
         AR    RA,R4               BUMP I/O AREA POINTER BY 100.        OS058800
         BAL   R8,EDIT             EDIT AND PRINT.                      OS058900
         MVC   HDG1(78),BLANKS                                          OS059000
         B     DB1                                                      OS059100
LSBLK    LTR   R3,R3               ARE WE DONE ?                        OS059200
         BZ    0(RB)               YES, RETURN.                         OS059300
         LR    R4,R3               NO, SET PRINT LNGTH TO REMAINING     OS059400
         SR    R3,R3               RECORD LENGTH.                       OS059500
         B     DB2                                                      OS059600
         EJECT                                                          OS059700
*********************************************************************** OS059800
**********         EDIT AND CONVERT DISK ADDRESS TO BINARY   ********** OS059900
*********************************************************************** OS060000
         SPACE 1                                                        OS060100
EDTADR   LA    RC,5(R0)                                                 OS060200
         BAL   R8,TSTNUM           IS ADDRESS NUMERIC ?                 OS060300
         B     EDTBAD              NO, BRANCH.                          OS060400
         PACK  HOLD,0(3,RB)        NO, CONVERT CYLINDER NUMBERS         OS060700
         CVB   R0,HOLD             TO BINARY.                           OS060800
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  OS060900
         MVC   HOLD+1(7),HOLD                                           OS061000
         PACK  HOLD,3(2,RB)        YES, CONVERT                         OS061300
         CVB   R1,HOLD             HEAD NUMBER TO BINARY.               OS061400
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  OS061500
         MVC   HOLD+1(7),HOLD                                           OS061600
         CH    R1,UPPERH               HEAD ADDRESS VALID ?             OS061610
         BH    EDTBAD                  NO, BAD ADDRESS                  OS061611
RELTRKSW BC    0,VALCCC                FALL THRU FOR REL. TRK           OS061614
         L     R8,DKDEBADR             GET DEB ADRR                     OS061616
         AH    R0,6(R8)                ADD EXTENT BEGIN TO REL CCC      OS061618
         AH    R1,8(R8)                ADD EXTENT BEGIN TO REL HH       OS061620
         CH    R1,UPPERH               REL HH G.T. HEAD MAX ?           OS061622
         BNH   VALCCC                  NO, ASSUME CYL BOUNDARY          OS061624
         SH    R1,UPPERH               YES, DECREMENT HH BY HEAD MAX    OS061626
         BCTR  R1,0                    DECR HH BY 1 - HD 0 SIGNIFICANT  OS061628
         AH    R0,=H'1'                BUMP CCC BY 1                    OS061630
VALCCC   EQU   *                                                        OS061632
         CH    R0,UPPERC               CYL ADDR VALID ?                 OS061634
         BH    EDTBAD                  NO                               OS061636
         B     4(R9)               RETURN, CYL IN R0 , HEAD IN R1       OS061700
EDTBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS061800
         BE    BADCTL                                                   OS061900
         MVI   P,0                                                      OS062000
         B     0(R9)                                                    OS062100
BEGHD    DS    CL1                                                      OS062200
ENDHD    DS    CL1                                                      OS062300
         SPACE 2                                                        OS062400
*********************************************************************** OS062500
*******************   TAPE CHARACTERISTICS ( TRACK AND       ********** OS062600
*******************   DENSITY ) ARE PLACED IN THE HEADING    ********** OS062700
*******************   BY THIS ROUTINE                        ********** OS062800
*********************************************************************** OS062900
         SPACE 1                                                        OS063000
TAPECHAR TM    0(R8),X'C0'         IS IT 9 TRACK ?                      OS063100
         BNO   MOVSEV8             NO, GO CHECK 7 TRACK.                OS063200
         MVI   HH2+31,C'9'         SET HDG TO 9 TRACK                   OS063300
         MVC   MOVSEVCC+1(1),INTPCCW   SAVE CCW COMMAND                 OS063400
         MVI   INTPCCW,X'02'           READ WILL SET DRIVE MODE         OS063401
         BAL   R8,INTP                 ISSUE READ                       OS063402
         MVI   INTPCCW,X'27'           BSR TO ORIG. POSIT.              OS063403
         BAL   R8,INTP                 ISSUE BSR                        OS063404
         MVI   INTPCCW,X'04'           SET CCW FOR SENSE CMD            OS063405
         BAL   R8,INTP                 ISSUE SENSE                      OS063406
MOVSEVCC MVI   INTPCCW,0               RESTORE CCW                      OS063407
         TM    DTPIO+5,X'40'       NEW SUBSYSTEM - 3803-2/3420-4,6,8 ?  OS063408
         BO    CHK3420             YES                                  OS063409
         TM    DTPIO+3,X'04'       IS  DRIVE PHASE ENCODED ?            OS063410
         BNO   0(R9)               NO, LEAVE AS 800                     OS063411
HDG1600  MVC   HH2+40(2),=C'16'    YES, SET 1600                        OS063412
         BR    R9                                                       OS063413
CHK3420  TM    DTPIO+6,X'10'       800 OR 6250 ?                        OS063414
         BNO   HDG1600             NO, THEREFORE ITS 1600               OS063420
CHK6250  TM    DTPIO+6,X'08'       MODEL 4,6, OR 8 ?                    OS063425
         BNO   0(R9)               NO, LEAVE AS 800                     OS063430
         MVC   HH2+40(3),=C'625'   YES, SET TO 6250                     OS063431
         BR    R9                  HEADING INFOR COMPLETE, RETURN       OS063500
MOVSEV8  MVI   HH2+31,C'7'         SET HDG FOR 7 TRACK                  OS063600
         TM    0(R8),X'80'         IS IT 800 ?                          OS063800
         BNO   MOVSEV5             NO, BRANCH?                          OS063900
         MVI   HH2+41,C'8'         SET DENSITY TO 800                   OS064000
         BR    R9                  HEADING INFOR COMPLETE, RETURN       OS064100
MOVSEV5  TM    0(R8),X'40'         IS IT 556 ?                          OS064200
         BNO   MOVSEV2             NO, BRANCH                           OS064300
         MVC   HH2+41(3),=C'556'   SET TO 556                           OS064400
         BR    R9                  HEADING INFOR COMPLETE, RETURN       OS064500
MOVSEV2  MVI   HH2+41,C'2'         SET TO 200                           OS064600
         BR    R9                  HEADING INFOR COMPLETE, RETURN       OS064700
         EJECT                                                          OS064800
*********************************************************************** OS064900
******************   TAPE TRACK IS CHECKED BY THIS ROUTINE   ********** OS065000
******************   TO INSURE THAT OPERATOR GAVE MODE       ********** OS065100
******************   COMPATIBLE WITH DEVICE ALLOCATED        ********** OS065200
*********************************************************************** OS065300
         SPACE 1                                                        OS065400
TAPETRK  EQU   *                                                        OS065500
         TM    1(R3),X'80'         IS IT 7 TRK TAPE ?                   OS065600
         BZ    CHKTP1              NO, BRANCH.                          OS065700
         CLI   TRK7OR9,X'07'       YES, WAS 7 TRK MODE SET GIVEN ?      OS065800
         BNE   BADTPTK9            NO, ISSUE 'UNIT IS NOT 9 TRK' MSG.   OS065900
         B     4(R9)               YES, RETURN    + 4                   OS066000
CHKTP1   CLI   TRK7OR9,X'09'       WAS 9 TRK MODE SET GIVEN ?           OS066100
         BNE   BADTPTK7            NO, ISSUE 'UNIT IS NOT 7 TRK' MSG    OS066200
         B     4(R9)               YES, RETURN    + 4                   OS066300
BADTPTK7 MVC   CONIO(17),=C'UNIT IS NOT 9 TRK'                          OS066400
         MVI   CONIO+12,C'7'                                            OS066500
         B     BADTRK79                                                 OS066600
BADTPTK9 MVC   CONIO(17),=C'UNIT IS NOT 9 TRK'                          OS066700
BADTRK79 MVI   WCNCCW+7,X'11'                                           OS066800
         LR    R8,R9               PRIME R8 FOR RETURN + 0              OS066900
         MVI   P,0                 TURN OFF STRING PARAM.               OS067000
         B     WCON2               GO TO WTO TRN, THEN REVERT TO TUTOR. OS067100
         SPACE 2                                                        OS067200
*********************************************************************** OS067300
**********          DISK CARACTERISTICS ARE DETER-          *********** OS067400
**********          MINED BY THIS ROUTINE AND               *********** OS067500
**********          PLACED IN THE HEADING FOR SYPRINT       *********** OS067600
*********************************************************************** OS067700
         SPACE 1                                                        OS067800
DISKCHAR EQU   *                                                        OS067900
         MVI   DEVTYP,C'0'         RESET DEVICE TYPE.                   OS068000
         LA    RB,DISKTABL         LOAD DISK SUPPORT TABLE              OS068100
DSKCHK   CLI   0(RB),X'FF'         END OF TABLE ?                       OS068200
         BE    BADUCBDK            YES, BR INTO BADUCB CODE             OS068300
         CLC   DSKTYPE(1),4(RB)    UCB    DEVICE TYPE CODE MATCH TABLE? OS068400
         BE    DSKHIT              YES,                                 OS068500
         LA    RB,8(RB)            NO, BUMP TO NEXT ENTRY               OS068600
         B     DSKCHK                ENTRY & CHECK AGAIN                OS068700
DSKHIT   MVI   DEVTYP,C'D'         SET DEVICE TYPE CODE FOR DISK        OS068800
         MVC   GATRK+10(4),0(RB)   SET DEVICE NAME IN                   OS068900
         MVC   BPTRK+10(4),0(RB)     HEADINGS                           OS069000
         MVC   ENDHD,7(RB)         HEX VALUE - UPPER HEAD               OS069100
         MVC   UPPERC(2),5(RB)         END CYL. ADDRESS - HEX           OS069200
         MVC   UPPERH+1(1),7(RB)       END HD . ADDRESS - HEX           OS069300
         BR    R9                                                       OS069400
         EJECT                                                          OS069500
*********************************************************************** OS069600
*********           EVALUATE DDNAMES, CHECK FOR OPEN STATUS     ******* OS069700
*********           PERFORM OPEN IF NECESSARY                   ******* OS069800
*********************************************************************** OS069900
         SPACE 1                                                        OS070000
OPENCRD  EQU   *                                                        OS070100
         OPEN  (CRDDCB,(INPUT))                                         OS070200
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS070300
         MVI   CDINOPSW,X'FF'      SET OPEN SW FOR CARD IN              OS070400
         BR    R9                                                       OS070500
CKTPINDD CLC   INDDSAV,TPINDD      TAPEIN  ?                            OS070600
         BNE   CKINFMOT                NO, CHECK INPUT FROM TAPEOUT DD  OS070700
         CLI   TPINOPSW,X'FF'          OPEN ?                           OS070800
         BE    TPINDONE                                                 OS070900
OPINFROT EQU   *                                                        OS071000
         OPEN  (INTPDCB,(INPUT,DISP))                                   OS071100
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS071200
         L     R1,INTPDCB+44           PTR TO DEB AFTER OPEN            OS071500
         L     R2,32(R1)               PTR TO UCB AFTER OPEN            OS071600
         ST    R2,ITMODE           STORE MODE SET FROM DEB, HI ORD BYTE OS071700
         MVC   ITUCB(3),13(R2)         GET UCB UNITNAME                 OS071800
         DEVTYPE TPINDD,ITDEVTYP    OBTAIN UCB INFORMATION              OS071900
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS072000
         CLI   ITCLASS,X'80'       TAPE ?                               OS072100
         BE    TPINOK              YES                                  OS072200
         MVC   CONIO(23),DVTYPMSG  NO                                   OS072300
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS072400
         BE    TELPGMR             YES                                  OS072500
         B     TELOPER             NO                                   OS072600
TPINOK   EQU   *                                                        OS072700
         MVI   TPINOPSW,X'FF'                                           OS072800
TPINDONE EQU   *                                                        OS072900
         BR    R8                      RETURN                           OS073000
CKINFMOT CLC   INDDSAV,TPOTDD          INPUT OPER FROM TAPEOUT DD ?     OS073100
         BNE   CKDKINDD            NO, GO TO DSKIN                      OS073200
         MVI   INFMOTSW,X'FF'          SET IN FROM OUT SW               OS073300
         CLI   TPOTOPSW,X'FF'          IN TAPEOUT DD OPEN ?             OS073400
         BE    TPINDONE                YES                              OS073500
         B     OPOTFRIN                NO                               OS073600
CKDKINDD CLC   INDDSAV,DSKINDD     DISKIN ?                             OS073700
         BNE   BADCTL              NO, INVALID CTL CRD                  OS073800
         CLI   DKINOPSW,X'FF'      OPEN ?                               OS073900
         BE    DKINDONE            YES                                  OS074000
         OPEN  (DSKDCB,(INOUT))                                         OS074100
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS074200
CKDSKDEV L     R1,DSKDCB+44            PTR TO DEB AFTER OPEN            OS074700
         L     R2,32(R1)               PTR TO UCB AFTER OPEN            OS074800
         MVC   EXTNTCNT(1),16(R1)  SAVE EXTENT CNT FIELD OF DEB         OS074900
         LA    R1,32(R1)           BUMP R1 TO DASD SECTION OF DEB       OS075000
         ST    R1,DKDEBADR             SAVE DEB XTNT PTR                OS075100
         MVC   DKUCB(3),13(R2)         GET UCB UNITNAME                 OS075200
         DEVTYPE DSKINDD,DKDEVTYP    OBTAIN UCB INFORMATION             OS075300
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS075400
         CLI   DSKCLASS,X'20'      IS DISKIN DASD DEVICE ?              OS075500
         BE    DASD                YES                                  OS075600
         MVC   CONIO(23),DVTYPMSG  NO, MOVE IN MSG                      OS075700
         MVC   CONIO(8),DSKINDD    MOVE IN DDNAME                       OS075800
         MVC   CONIO+12(4),=C'DASD'                                     OS075900
TELUSER  CLI   CNTRLSW,X'FF'       ARE WE IN CONTROL CARD MODE ?        OS076000
         BNE   TELOPER             NO                                   OS076100
TELPGMR  MVI   PL,X'17'                                                 OS076200
         MVI   CC,X'19'            SET CTL CAR                          OS076300
         BAL   R8,PRNT             PRINT MSG TO PGMR                    OS076400
         B     EOJ                 QUIT                                 OS076500
TELOPER  EQU   *                                                        OS076600
         MVI   WCNCCW+7,X'17'                                           OS076700
         BAL   R8,WCON2            TELL OPERATOR                        OS076800
         B     CONSOLE             GET ANOTHER FUNC IF DESIRED          OS076900
DASD     EQU   *                                                        OS077000
         MVI   DKINOPSW,X'FF'                                           OS077100
DKINDONE BR    R8                                                       OS077200
CKTPOTDD CLC   OUTDDSAV,TPOTDD     TPAEOUT ?                            OS077300
         BNE   CKTPOTIN            NO,  CHK FOR TAPEIN                  OS077400
         CLI   TPOTOPSW,X'FF'      OPEN ?                               OS077500
         BE    TPOTDONE            YES                                  OS077600
OPOTFRIN EQU   *                                                        OS077700
         OPEN  (OTTPDCB,(OUTPUT,DISP)) THIS WILL REQ RING ON TAPEOUT    OS077800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS077900
         L     R1,OTTPDCB+44           PTR TO DEB AFTER OPEN            OS078200
         L     R2,32(R1)               PTR TO UCB AFTER OPEN            OS078300
         ST    R2,OTMODE           STORE MODE SET FROM DEB, HI ORD BYTE OS078400
         MVC   OTUCB(3),13(R2)         GET UCB UNITNAME                 OS078500
         DEVTYPE TPOTDD,OTDEVTYP    OBTAIN UCB INFORMATION              OS078600
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS078700
         CLI   OTCLASS,X'80'       TAPE ?                               OS078800
         BE    TPOTOK              YES                                  OS078900
         MVC   CONIO(23),DVTYPMSG  NO                                   OS079000
         MVC   CONIO(8),TPOTDD     MOVE IN DDNAME                       OS079100
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS079200
         BE    TELPGMR             YES                                  OS079300
         B     TELOPER             NO                                   OS079400
TPOTOK   EQU   *                                                        OS079500
         MVI   TPOTOPSW,X'FF'                                           OS079600
TPOTDONE BR    R8                                                       OS079700
CKTPOTIN CLC   OUTDDSAV,TPINDD     OUTPUT OPER ON TAPEIN ?              OS079800
         BNE   BADCTL              NO                                   OS079900
         MVI   OTONINSW,X'FF'      YES, SET SW                          OS080000
         CLI   TPINOPSW,X'FF'      OPEN ALREADY ?                       OS080100
         BE    TPOTINDN            YES                                  OS080200
         B     OPINFROT            NO OPEN INTP FOR OUTPUT OPER         OS080300
TPOTINDN EQU   *                                                        OS080400
         BR    R8                                                       OS080500
         EJECT                                                          OS080600
*********************************************************************** OS080700
**********            DISK CHARACTERISTICS TABLE            *********** OS080800
**********     THE FOLLOWING TABLE PROVIDES THE CAPABILITY  *********** OS080900
**********     TO SUPPORT EXISTING & NEW DASD DEVICES.      *********** OS081000
**********     TABLE ELEMENTS ARE USED TO ESTABLISH         *********** OS081100
**********     UPPER SEEK LIMIT EDITING, AND FOR PRNT HDGS. *********** OS081200
*********************************************************************** OS081300
         SPACE 1                                                        OS081400
DISKTABL DS    0CL1                                                     OS081500
DSKDEV1  DS    0CL8                2311 ELEMENTS                        OS081600
         DC    CL4'2311'                 DEVICE NAME                    OS081601
         DC    XL1'01'                   UCB DEVICE TYPE                OS081602
         DC    AL2(202)                  MAXIMUM CYLINDER NUMBER        OS081603
         DC    AL1(09)                   MAXIMUM HEAD NUMBER            OS081604
DSKDEV2  DS    0CL8                2314 ELEMENTS                        OS081700
         DC    CL4'2314'                 DEVICE NAME                    OS081701
         DC    XL1'08'                   UCB DEVICE TYPE                OS081702
         DC    AL2(202)                  MAXIMUM CYLINDER NUMBER        OS081703
         DC    AL1(19)                   MAXIMUM HEAD NUMBER            OS081704
DSKDEV3  DS    0CL8                3330 ELEMENTS                        OS081800
         DC    CL4'3330'                 DEVICE NAME                    OS081801
         DC    XL1'09'                   UCB DEVICE TYPE                OS081802
         DC    AL2(410)                  MAXIMUM CYLINDER NUMBER        OS081803
         DC    AL1(18)                   MAXIMUM HEAD NUMBER            OS081804
DSKDEV4  DS    0CL8                3330 - MODEL 11 ELEMENTS             OS081900
         DC    CL4'3330'                 DEVICE NAME                    OS081901
         DC    XL1'0D'                   UCB DEVICE TYPE                OS081902
         DC    AL2(814)                  MAXIMUM CYLINDER NUMBER        OS081903
         DC    AL1(18)                   MAXIMUM HEAD NUMBER            OS081904
DSKDEV5  DS    0CL8                3340 - MODEL 35 & 70 ELEMENTS        OS082000
         DC    CL4'3340'                 DEVICE NAME                    OS082001
         DC    XL1'0A'                   UCB DEVICE TYPE                OS082002
         DC    AL2(697)                  MAXIMUM CYLINDER NUMBER        OS082003
         DC    AL1(11)                   MAXIMUM HEAD NUMBER            OS082004
DSKDEV7  DS    0CL8                2305 - MODEL 1  ELEMENTS             OS082200
         DC    CL4'2305'                 DEVICE NAME                    OS082201
         DC    XL1'06'                   UCB DEVICE TYPE                OS082202
         DC    AL2(048)                  MAXIMUM CYLINDER NUMBER        OS082203
         DC    AL1(07)                   MAXIMUM HEAD NUMBER            OS082204
DSKDEV8  DS    0CL8                2305 - MODEL 2  ELEMENTS             OS082300
         DC    CL4'2305'                 DEVICE NAME                    OS082301
         DC    XL1'07'                   UCB DEVICE TYPE                OS082302
         DC    AL2(96)                   MAXIMUM CYLINDER NUMBER        OS082303
         DC    AL1(07)                   MAXIMUM HEAD NUMBER            OS082304
         DC    X'FF'               END OF TABLE                         OS083800
         EJECT                                                          OS083900
*********************************************************************** OS084000
**********         OPERATOR I/O DEVICE ALLOCATION ROUTINE   *********** OS084100
*********************************************************************** OS084200
         SPACE 1                                                        OS084300
ITMSG0   MVI   P,0                                                      OS084400
ITMSG    EQU   *                                                        OS084500
         MVC   CONIO(18),SYSITMSG  GET IN-TAPE ADDRESS.                 OS085500
         MVI   WCNCCW+7,X'12'      AND MODE SET FROM CONSOLE            OS085600
         MVI   RCNCCW+7,X'05'                                           OS085700
         BAL   R8,WRTCON                                                OS085800
         BAL   R8,CHKMOD           VALIDATE MODE SET GIVEN.             OS085900
         B     ITMSG0              RETURN HERE IF INVALID               OS086000
         MVC   TRK7OR9(1),CONIO+5      SAVE 7 OR 9 TRK INDICATOR        OS086100
         MVC   MSICCW(1),0(R9)     PLACE MODE SET IN MODE SET CCW       OS086200
         MVC   HH2(48),DEVH                                             OS086400
ITOPENCK CLI   TPINOPSW,X'FF'          TAPEIN  OPEN ?                   OS086500
         BE    ITUCBEQ                 YES                              OS086600
         CLI   TIALLOSW,X'FF'      TAPEIN  ALLOCATED ?                  OS086610
         BNE   ITOTOPCK            NO, CHECK TAPEOUT                    OS086611
         CLC   CONIO(3),TIALLUCB   OPER. UCB = UCB ALLOCATED TO TAPEIN? OS086612
         BNE   ITOTOPCK            NO, CHECK TAPEOUT                    OS086613
         MVC   INDDSAV,TPINDD      PREPARE FOR OPEN                     OS086614
         BAL   R8,CKTPINDD         GO FORCE TAPEIN OPEN                 OS086615
         B     ITOPENCK            CHECK TAPEIN AGAIN                   OS086616
ITOTOPCK CLI   TPOTOPSW,X'FF'          TAPEOUT OPEN ?                   OS087100
         BE    ITOTUCB             YES, OPER UCB=OTUCB? NO, BAD UCB     OS087200
         CLI   TOALLOSW,X'FF'      TAPEOUT ALLOCATED ?                  OS087210
         BNE   BADUCB              NO, ISSUE INVALID CUU MSG            OS087211
         CLC   CONIO(3),TOALLUCB   OPER. UCB = UCB ALLOC. TO TAPEOUT ?  OS087212
         BNE   BADUCB              NO, ISSUE INVALID CUU MSG            OS087213
         MVC   OUTDDSAV,TPOTDD     PREPARE FOR OPEN                     OS087214
         BAL   R8,CKTPOTDD         GO FORCE TAPEOUT OPEN                OS087215
         B     ITOTOPCK            CHECK TAPEOUT AGAIN                  OS087216
ITUCBEQ  CLC   CONIO(3),ITUCB          DOES OPER UCB = ITUCB ?          OS087700
         LA    R3,ITDEVTYP         PROVIDE PTR TO ITTRK INDICATOR       OS087800
         BE    ITOK                    YES                              OS087900
         B     ITOTOPCK            NO, CHECK TAPEOUT UCB                OS088000
ITOTUCB  CLC   CONIO(3),OTUCB          YES, DOES OPER UCB = OTUCB ?     OS088100
         BNE   BADUCB              NO                                   OS088200
ITOTOK   MVI   INFMOTSW,X'FF'          USE TAPEOUT FOR INPUT OPER       OS088300
         MVC   OTMODE(1),MSICCW        STORE OPER MODE IN OTMODE        OS088310
         LA    R3,OTDEVTYP         PROVIDE PTR TO OTTRK INDICATOR       OS088400
ITOK     EQU   *                                                        OS088500
         BAL   R9,TAPETRK          GO EDIT MODE GIVEN BY OPERATOR       OS088600
         B     ITMSG0              RETURN HERE IF INVALID               OS088700
         MVC   ITMODE(1),MSICCW    PUT OPER. MODE IN ITMODE AFTER OPEN  OS088710
         B     0(R7)                                                    OS088800
BADUCB   MVC   CONIO(13),BADCUUMM              NO, GIVE  BAD UCB MSG    OS088900
         MVI   WCNCCW+7,X'0D'                                           OS089000
         B     WCON2                                                    OS089100
OTMSG0   MVI   P,0                                                      OS089200
OTMSG    EQU   *                                                        OS089300
         MVC   CONIO(19),SYSOTMSG  GET OUT-TAPE ADDRESS.                OS090300
         MVI   WCNCCW+7,X'13'      AND MODE SET FROM SYSLOG.            OS090400
         MVI   RCNCCW+7,X'05'                                           OS090500
         BAL   R8,WRTCON                                                OS090600
         BAL   R8,CHKMOD           VALIDATE MODE SET.                   OS090700
         B     OTMSG0              RETURN HERE IF INVALID               OS090800
         MVC   TRK7OR9(1),CONIO+5      SAVE 7 OR 9 TRK INDICATOR        OS090900
         MVC   MSOCCW(1),0(R9)     PLACE MODE SET IN MODE SET CCW       OS091000
OTOPENCK CLI   TPOTOPSW,X'FF'          TAPEOUT OPEN ?                   OS091200
         BE    OTUCBEQ                 YES                              OS091300
         CLI   TOALLOSW,X'FF'      TAPEOUT ALLOCATED ?                  OS091310
         BNE   OTITOPCK            NO, CHECK TAPEIN                     OS091311
         CLC   CONIO(3),TOALLUCB   OPER. UCB = UCB ALLOC. TO TAPEOUT ?  OS091312
         BNE   OTITOPCK            NO, CHECK TAPEIN                     OS091313
         MVC   OUTDDSAV,TPOTDD     PREPARE FOR OPEN                     OS091314
         BAL   R8,CKTPOTDD         GO FORCE TAPEOUT OPEN                OS091315
         B     OTOPENCK            CHECK TAPEOUT AGAIN                  OS091316
OTITOPCK CLI   TPINOPSW,X'FF'          TAPEIN  OPEN ?                   OS091800
         BE    OTITUCB             YES, OPER UCB=ITUCB? NO, OPN TAPEOUT OS091900
         CLI   TIALLOSW,X'FF'      TAPEIN  ALLOCATED ?                  OS091910
         BNE   BADUCB              NO, ISSUE INVALID CUU MSG            OS091911
         CLC   CONIO(3),TIALLUCB   OPER. UCB = UCB ALLOCATED TO TAPEIN? OS091912
         BNE   BADUCB              NO, ISSUE INVALID CUU MSG            OS091913
         MVC   INDDSAV,TPINDD      PREPARE FOR OPEN                     OS091914
         BAL   R8,CKTPINDD         GO FORCE TAPEIN OPEN                 OS091915
         B     OTITOPCK            CHECK TAPEIN AGAIN                   OS091916
OTUCBEQ  CLC   CONIO(3),OTUCB          DOES OPER UCB = OTUCB ?          OS092400
         LA    R3,OTDEVTYP         PROVIDE PTR TO OTTRK INDICATOR       OS092500
         BE    OTOK                    YES                              OS092600
         B     OTITOPCK            NO, CHECK TAPEIN UCB                 OS092700
OTITUCB  EQU   *                                                        OS092800
         CLC   CONIO(3),ITUCB          YES, DOES OPER UCB = ITUCB ?     OS092900
         BNE   BADUCB                                                   OS093000
OTITOK   MVI   OTONINSW,X'FF'          USE TAPEIN FOR OUTPUT OPERATION  OS093100
         LA    R3,ITDEVTYP         PROVIDE PTR TO ITTRK INDICATOR       OS093200
OTOK     EQU   *                                                        OS093300
         BAL   R9,TAPETRK          GO EDIT MODE GIVEN BY OPERATOR       OS093400
         B     OTMSG0              RETURN HERE IF INVALID               OS093500
         MVC   OTMODE(1),MSOCCW    PUT OPER. MODE IN OTMODE AFTER OPEN  OS093510
         B     0(R7)                                                    OS093600
IDMSG0   MVI   P,0                                                      OS093700
IDMSG    MVC   CONIO(10),SYSDSK    GET DISK ADDRESS AND VALIDATE UCB    OS093800
         MVI   WCNCCW+7,X'0A'                                           OS093900
         MVI   RCNCCW+7,X'03'                                           OS094000
         BAL   R8,WRTCON                                                OS094100
IDOPENCK CLI   DKINOPSW,X'FF'      IS DISKIN OPEN ?                     OS094200
         BE    IDUCBEQ             YES, COMPARE TO OPERATOR CUU         OS094300
         MVC   INDDSAV,DSKINDD     NO, PREPARE FOR OPEN                 OS094400
         BAL   R8,CKDKINDD         GO OPEN DISKIN                       OS094500
         B     IDOPENCK            CHK AGAIN, IF BAD OPEN, WON'T RETURN OS094600
IDUCBEQ  CLC   CONIO(3),DKUCB      OPER CUU = UCB ?                     OS094700
         BE    IDOK                YES                                  OS094800
BADUCBDK MVC   CONIO(11),BADCUUMM  NO, PREPARE BAD CUU MSG              OS094900
         MVI   WCNCCW+7,X'0B'                                           OS095000
         BAL   R8,WCON2            ISSUE MSG, RETURN                    OS095100
         B     IDMSG0              GIVE OPER ANOTHER CHANCE             OS095200
IDOK     EQU   *                                                        OS095300
         BAL   R9,DISKCHAR         GO GET DISK DEVICE CHARACTERISTICS   OS095400
         B     0(R7)               RETURN TO FUNCTION                   OS095500
         EJECT                                                          OS095600
*********************************************************************** OS095700
**********     DATA SET EXTENT CONSOLE DISPLAY ROUTINE.     *********** OS095800
*********************************************************************** OS095900
         SPACE 1                                                        OS096000
DISKDSE  EQU   *                                                        OS096100
         CLI   CNTRLSW,X'FF'       VALID FOR CONSOLE ONLY               OS096200
         BE    BADCTL                                                   OS096300
         BAL   R7,IDMSG            GET CUU                              OS096400
         MVC   CONIO(34),ENTCCCHH  ASK FOR ABSOL DISK ADDRESSES         OS096500
         MVC   CONIO+34(19),DASHBEG    ' - BEGIN=CCCHH,END='            OS096600
         L     R9,DKDEBADR         GET PTR TO DEB                       OS096700
         LA    R2,2(R0)            SET LOOP CTL TO 2                    OS096800
         LA    R1,CONIO+43         ADDRESS BEGIN CCCHH AREA OF MSG      OS096900
DEBLOOP  EQU   *                                                        OS097000
         SR    R7,R7               CLEAR                                OS097100
         IC    R7,9(R9)            GET HEAD                             OS097200
         MVI   ESW,X'FF'                                                OS097300
         BAL   R8,DECCVT                                                OS097400
         MVC   3(2,R1),HOLDSEQ+6   MOVE HH TO MSG                       OS097500
         LH    R7,6(R9)            GET CYLINDER                         OS097600
         MVI   ESW,X'FF'                                                OS097700
         BAL   R8,DECCVT                                                OS097800
         MVC   0(3,R1),HOLDSEQ+5   MOVE CCC TO MSG                      OS097900
         LA    R9,4(R9)            BUMP R9 TO END CCCHH                 OS098000
         LA    R1,CONIO+53         ADDRESS END   CCCHH AREA OF MSG      OS098100
         BCT   R2,DEBLOOP          FORMAT END 2ND TIME THRU             OS098200
DISKDSE1 MVI   WCNCCW+7,X'3A'                                           OS098300
         BAL   R8,WCON2            'ENTER CCCHH WITHIN DATA SET EX...   OS098400
         B     CONSOLE                                                  OS098500
         EJECT                                                          OS098600
*********************************************************************** OS098700
**********               DISK  DEBLOCK  ROUTINE             *********** OS098800
*********************************************************************** OS098900
         SPACE 1                                                        OS099000
DSKDEBL  MVI   RWCCW,X'1E'         SET TO READ COUNT, KEY, DATA.        OS099100
         MVC   RWCCW+6(2),DSL+2    SET MAX. RECORD LNTH.                OS099200
DSKDEBL1 EQU   *                   DECREMENT RECORD #(BR HERE FROM EOF) OS099300
         IC    R7,LOWLIM+6             TO SEARCH FOR                    OS099400
         BCTR  R7,R0                   R-1 RECORD.                      OS099500
         STC   R7,LOWLIM+6                                              OS099600
         MVI   SHCCW,X'31'                                              OS099700
         BAL   R8,DISK             GET RECORD.                          OS099800
         LA    R7,1(R7)            INCR. R BACK UP TO PREVIOUS VALUE    OS099900
         STC   R7,LOWLIM+6         ST R BACK IN IOB                     OS100000
         TM    DSKS1,X'08'         NO RECORD FOUND ?                    OS100100
         BO    0(R4)               YES, RETURN.                         OS100200
         CLC   DTPIO(5),LOWLIM+2   WAS RECORD R0 ?                      OS100300
         BL    0(R4)               YES, TREAT AS NO REC.                OS100400
         CLI   EOF,X'10'           IS FUNCTION WRITE EOF ?              OS100500
         BE    DRCDEBL             YES, BRANCH.                         OS100600
         CLC   DSKCSW+5(2),DSL     IS RESIDUAL CT ZERO ??               OS100700
         BE    WRGLNTC             YES, I/O AREA TOO SMALL.             OS100800
DRCDEBL  MVI   DPSW,X'FF'          SET HEX DUMP SW ON.                  OS100900
         LA    RA,DTPIO+8                                               OS101000
         STM   R3,R4,SAV                                                OS101100
         SR    R7,R7                                                    OS101200
         IC    R7,DTPIO+4          GET RECORD # FROM COUNT FIELD.       OS101300
         BAL   R8,DECCVT           CONVERT TO DECIMAL                   OS101400
         MVC   HDG1(8),DCYL                                             OS101500
         MVC   HDG2(8),DHED        MOVE REC # IN HEADING.               OS101600
         MVC   HDG3(8),DREC                                             OS101700
         MVC   HDG3+5(3),HOLDSEQ+5                                      OS101800
         IC    R7,DTPIO+5          GET KEY LNTH FROM COUNT.             OS101900
         LR    R2,R7               KEY LNTH RETURNED IN R2.             OS102000
         LTR   R7,R7               IS KEY LNTH ZERO ?                   OS102100
         BZ    NOKEY               YES, BRANCH.                         OS102200
         BAL   R8,DECCVT           NO, PUT KEY                          OS102300
         MVC   KEYH+5(5),HOLDSEQ+3  LNTH IN HEADING.                    OS102400
         MVC   HDG1+13(10),KEYH                                         OS102500
         LR    R3,R7                                                    OS102600
         BAL   RB,DEBLOK           GO PRINT KEY RECORD.                 OS102700
         SR    R7,R7                                                    OS102800
NOKEY    IC    R7,DTPIO+6          GET DATA LNTH FROM COUNT FIELD.      OS102900
         SLL   R7,8(R0)                                                 OS103000
         IC    R7,DTPIO+7                                               OS103100
         LR    R5,R7               RETURN DATA LNTH IN R5.              OS103200
         LTR   R7,R7               IS DATA LNTH ZERO ?                  OS103300
         BZ    ENDFL               YES, GO PRINT EOF RECORD.            OS103400
         BAL   R8,DECCVT           NO, PUT LNTH IN HEADING.             OS103500
         MVC   DATH+5(5),HOLDSEQ+3                                      OS103600
         MVC   HDG1+13(10),DATH                                         OS103700
         CLI   DBLSW,X'00'         IS DATA TO BE DEBLOCKED ?            OS103800
         BE    DEBLK2              NO, BRANCH.                          OS103900
DEBLK1   C     R7,SAVRCSZ          IS DATA LNTH GREATER THAN LOG. LNTH? OS104000
         BNH   DEBLK2              NO, BRANCH.                          OS104100
         L     R3,SAVRCSZ          YES, GO                              OS104200
         SR    R7,R3               DEBLOCK FIRST LOGICAL PORTION.       OS104300
         ST    R7,SAVREGS+4                                             OS104400
         BAL   RB,DEBLOK                                                OS104500
         L     R7,SAVREGS+4        DECREMENT DATA LNTH AND LOOP         OS104600
         B     DEBLK1              UNTIL FINISHED.                      OS104700
DEBLK2   LR    R3,R7               LOAD LNTH IN R3.                     OS104800
         BAL   RB,DEBLOK           GO PRINT DATA RECORD.                OS104900
         MVI   CC,X'13'                                                 OS105000
DEBLK3   BAL   R8,PRNT                                                  OS105100
         LM    R3,R4,SAV                                                OS105200
         B     4(R4)               RETURN.                              OS105300
ENDFL    MVC   CONIO(26),HDG1      *****    EOF ROUTINE    *****        OS105400
         MVC   DATH+5(4),BLANKS                                         OS105500
         MVI   DATH+8,C'0'         DATA LNTH = 0.                       OS105600
         MVC   CONIO+13(9),DATH                                         OS105700
         MVC   CONIO+22(20),BLANKS                                      OS105800
         MVC   CONIO+32(19),ALTERMSG                                    OS105900
         MVC   CONIO+32(7),=C'E-O-F  '                                  OS106000
         MVI   CC,X'09'                                                 OS106100
         MVI   PL,X'33'                                                 OS106200
         MVI   INPUT,X'FF'                                              OS106300
         BAL   R8,PRNT                                                  OS106400
         MVC   CONIO+13(50),BLANKS                                      OS106500
         MVC   CONIO(26),HDG2                                           OS106600
         BAL   R8,PRNT                                                  OS106700
         MVC   CONIO(26),HDG3                                           OS106800
         MVI   CC,X'19'                                                 OS106900
         MVI   INPUT,X'00'                                              OS107000
         B     DEBLK3                                                   OS107100
         EJECT                                                          OS107200
*********************************************************************** OS107300
**********               ALTER RECORD FROM CONSOLE          *********** OS107400
*********************************************************************** OS107500
         SPACE 1                                                        OS107600
CHNG     MVI   WCNCCW+7,X'22'      REG 9 = BEGIN OF RECORD AT ENTER     OS107700
         MVI   RCNCCW+7,X'02'      REG 10 = END OF RECORD AT ENTER      OS107800
         MVC   DECKNAME(5),ALTRMSG                                      OS107900
         MVC   CONIO(34),PRTIO     # TYPE BYTES TO BE CHANGED           OS108000
         BAL   R8,WRTCONP          GET REPLY                            OS108100
         LA    RC,2(R0)                                                 OS108200
         LA    RB,CONIO                                                 OS108300
         BAL   R8,TSTNUMV          IS REPLY NUMERIC ?                   OS108400
         B     CHNG                                                     OS108500
         MVC   HOLD+6(2),CONIO                                          OS108600
         BAL   R8,BINCVT           CONVERT TO BINARY, RESULTS IN R1.    OS108700
         MVC   ALTCT+6(2),CONIO    STORE DECIMAL VALUE.                 OS108800
         LA    R8,35(R0)                                                OS108900
         CR    R1,R8               AMOUNT OF CHANGE = 1-35 ?            OS109000
         BH    CHNG                NO, RESTART.                         OS109100
         LTR   R1,R1               REPLY 0 ?                            OS109200
         BZ    CHNG                YES, RESTART.                        OS109300
         LR    R3,R1               NO,  SAVE AMOUNT IN R3.              OS109400
GETLTH   MVC   CONIO(29),SDPMSG    GET STARTING                         OS109500
         MVI   WCNCCW+7,X'1D'      POSITION OF CHANGE.                  OS109600
         MVI   RCNCCW+7,X'05'      ALLOW 5 DIGIT MAXIMUM                OS109700
         BAL   R8,WRTCONP                                               OS109800
         LA    RB,CONIO                                                 OS109900
         LA    RC,5(R0)            ALLOW 5 DIGIT MAXIMUM                OS110000
         BAL   R8,TSTNUMV          IS REPLY NUMERIC ?                   OS110100
         B     GETLTH                                                   OS110200
         MVC   HOLD+3(5),CONIO     ALLOW 5 DIGIT MAXIMUM                OS110300
         BAL   R8,BINCVT           CONVERT TO BINARY.                   OS110400
         LTR   R1,R1               REPLY GREATER THAN 0000 ?            OS110500
         BZ    GETLTH              NO, RESTART.                         OS110600
         LA    R8,1(R0)                                                 OS110700
         SR    R1,R8                                                    OS110800
         LR    R0,R1                                                    OS110900
         LR    R8,R9               RECORD LNTH IN R8.                   OS111000
         AR    R8,R1               ADD STARTING ALTER POSITION.         OS111100
         AR    R8,R3               ADD # BYTES OF CHANGE.               OS111200
         CR    R8,RA               IS TOTAL GREATER THAN REC LNTH ?     OS111300
         BNH   LNTHOK              NO, LENGTH OK.                       OS111400
         MVC   CONIO(28),LNGTHMSG      'LENGTH EXCEEDS END OF RECORD'   OS111500
         MVI   WCNCCW+7,X'1C'                                           OS111600
         BAL   R8,WCON2                                                 OS111700
         B     CHNG                                                     OS111800
LNTHOK   MVC   CONIO(26),ALTRMSG   LOG MSSG,                            OS111900
         MVC   CONIO(5),DECKNAME   ENTER OR ALTER                       OS112000
         MVI   WCNCCW+7,X'1A'                                           OS112100
         MVI   RCNCCW+7,X'01'                                           OS112200
         BAL   R8,WRTCONP                                               OS112300
         LA    RC,CONIO                                                 OS112400
         CLI   CONIO,C'C'          IS ALTER IN CHAR. MODE ?             OS112500
         BE    CHARIN              YES, BRANCH.                         OS112600
         CLI   CONIO,C'H'          IS ALTER IN HEX MODE ?               OS112700
         BNE   LNTHOK              NO, INVALID REPLY, RESTART.          OS112800
HEXIN    MVC   CONIO(31),ALTCT     MOVE SCALE TO SYSLOG.                OS112900
         MVI   WCNCCW+7,X'1F'                                           OS113000
         MVI   CONIO+16,C'2'                                            OS113100
         LR    R7,R3                                                    OS113200
         AR    R7,R3                                                    OS113300
         BAL   R8,WCON2                                                 OS113400
         MVC   CONIO(75),SCALE+20                                       OS113500
         STC   R7,WCNCCW+7                                              OS113600
         STC   R7,RCNCCW+7                                              OS113700
         BAL   R8,WRTCONP                                               OS113800
HLOP     TM    0(RC),C'0'          HEX CHAR = 0-9 ?                     OS113900
         BO    HEND                YES, BRANCH.                         OS114000
         TM    0(RC),X'C0'         HEX CHAR = A-F ?                     OS114100
         BNO   BDHEX               NO, BAD HEX CHAR.                    OS114200
         NI    0(RC),X'0F'                                              OS114300
         CLI   0(RC),X'06'                                              OS114400
         BH    BDHEX                                                    OS114500
         TR    0(1,RC),ADTBL-1     SHIFT ZONE TO FORM 0X.               OS114600
HEND     LA    RC,1(RC)                                                 OS114700
         BCT   R7,HLOP                                                  OS114800
         PACK  CONIO+80(8),CONIO(15)   PACK DATA                        OS114900
         PACK  CONIO+87(8),CONIO+14(15)    2 HEX POS. PER BYTE.         OS115000
         PACK  CONIO+94(8),CONIO+28(15)                                 OS115100
         PACK  CONIO+101(8),CONIO+42(15)                                OS115200
         PACK  CONIO+108(8),CONIO+56(15)                                OS115300
         LA    RC,CONIO+80                                              OS115400
         B     MOVLOPS                                                  OS115500
CHARIN   MVC   CONIO(31),ALTCT     GET ALTER                            OS115600
         MVI   WCNCCW+7,X'1F'      DATA IN                              OS115700
         MVI   CONIO+16,C'1'       CHARACTER                            OS115800
         BAL   R8,WCON2            FORM FROM                            OS115900
         MVC   CONIO(75),SCALE+20  CONSOLE                              OS116000
         STC   R3,WCNCCW+7                                              OS116100
         STC   R3,RCNCCW+7                                              OS116200
         BAL   R8,WRTCONP                                               OS116300
MOVLOPS  LR    R8,R9                                                    OS116400
         AR    R8,R0                                                    OS116500
MOVLOP   MVC   0(1,R8),0(RC)                                            OS116600
         LA    R8,1(R8)            MOVE NEW DATA                        OS116700
         LA    RC,1(RC)            1 BYTE AT A TIME                     OS116800
         BCT   R3,MOVLOP           TO RECORD AND OVERLAY.               OS116900
         B     0(R4)               RETURN FOR OTHER FUNCTIONS.          OS117000
BDHEX    MVC   CONIO(8),INVLDMSG       'INVALID '                       OS117100
         MVC   CONIO+8(8),=C'HEX CHAR'                                  OS117200
         MVI   WCNCCW+7,X'10'                                           OS117300
         BAL   R8,WCON2                                                 OS117400
         LA    RC,CONIO                                                 OS117500
         B     HEXIN                                                    OS117600
ADTBL    DC    X'0A0B0C0D0E0F'                                          OS117700
         EJECT                                                          OS117800
*********************************************************************** OS117900
**********               TAPE ERROR CORRECTION              *********** OS118000
*********************************************************************** OS118100
         SPACE 1                                                        OS118200
TPERR    MVC   CONIO(20),TAPERR    'INPUT TAPE I/O ERROR'               OS118300
         CLI   INTPERSW,X'02'          DO WE GIVE ERRORS TO OPER ?      OS118400
         BE    TPERR1                  YES, GO TO OPER ERR RTN          OS118500
         MVI   PL,X'24'                PRIME PRINT LENTGH               OS118600
         MVI   CC,X'19'                PRIME CAR CTL                    OS118700
         MVC   CONIO+20(7),COMMABLK    ', BLOCK'                        OS118800
         MVC   CONIO+27(9),=C' BYPASSED'                                OS118900
         BAL   R8,PRNT                 PRINT ERROR MSG TO PGMR          OS119000
         B     RTTPER                  GO TO BYPASS RTN                 OS119100
TPERR1   MVI   WCNCCW+7,X'14'                                           OS119200
         BAL   R8,WCON2            WRITE TAPE ERROR MSG.                OS119300
TPE      MVC   CONIO(50),TPERRMSG                                       OS119400
         MVI   WCNCCW+7,X'32'      WRITE OPERATOR OPTION MSG            OS119500
         MVI   RCNCCW+7,X'01'                                           OS119600
         BAL   R8,WRTCONP                                               OS119700
         CLI   CONIO,C'B'          REPLY = BYPASS ?                     OS119800
         BE    RTTPER              YES, GO READ NEXT TAPE RECORD        OS119900
         CLI   CONIO,C'I'          REPLY = IGNORE ?                     OS120000
         BE    TAPOK               YES, EXIT & PROCESS RECORD AS READ   OS120100
         CLI   CONIO,C'C'          REPLY = CORRECTION BY OPERATOR ?     OS120200
         BNE   TPE                 NO, BAD REPLY                        OS120300
         MVI   REPEAT+1,X'F0'      YES,                                 OS120400
TPERLP   BAL   R8,DHDG              PRINT HEADING                       OS120500
         BAL   R8,OVFLO                                                 OS120600
         L     R5,DSL                                                   OS120700
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS120800
         CLC   INTPCSW+5(2),DSL        RECORD EXCEED BUFFER ?           OS120900
         BE    WRGLNTC             YES, GO TO EXCEED LNTH MSG           OS121000
         LR    R7,R5                                                    OS121100
         BAL   R8,DECCVT           LNTH IN HEADING                      OS121200
         MVC   HDG1(7),TPERRMSG+22   ' ERROR '                          OS121300
         MVC   HDG1+7(6),BADLTH+1      'BLOCK '                         OS121400
         MVC   HDG1+13(10),DATB                                         OS121500
         MVC   HDG1+18(5),HOLDSEQ+3                                     OS121600
         LR    R3,R5                                                    OS121700
         LA    RA,DTPIO                                                 OS121800
         LR    R2,R5                                                    OS121900
         MVI   DPSW,X'FF'          SET HEX PRINT SWITCH ON              OS122000
         BAL   RB,DEBLOK           GO PRINT RECORD                      OS122100
REPEAT   BC    15,CHNGIT                                                OS122200
REPEAT1  MVC   CONIO(26),CHNGMSG   'CHANGES COMPLETE ?' MSG             OS122300
         MVI   WCNCCW+7,X'1A'                                           OS122400
         MVI   RCNCCW+7,X'01'                                           OS122500
         BAL   R8,WRTCONP                                               OS122600
         CLI   CONIO,C'Y'          YES,                                 OS122700
         BE    TAPOK               RETURN TO ORINAL FUNCTION            OS122800
         CLI   CONIO,C'N'          NO,                                  OS122900
         BNE   REPEAT1             PREPARE TO ACCEPT USER CORRECTION    OS123000
CHNGIT   MVI   REPEAT+1,X'00'                                           OS123100
         MVC   CONIO(26),CHNGMSG   'CHANGE TO LENGTH ?' MSG             OS123200
         MVC   CONIO+6(10),TOLNGTH     'TO LENGTH'                      OS123300
         MVI   WCNCCW+7,X'1A'                                           OS123400
         MVI   RCNCCW+7,X'01'                                           OS123500
         BAL   R8,WRTCONP                                               OS123600
         CLI   CONIO,C'N'          NO,                                  OS123700
         BE    OKLNTH                  LENGTH OK, BRANCH                OS123800
         CLI   CONIO,C'Y'          YES,                                 OS123900
         BNE   CHNGIT                                                   OS124000
NEWLNTH  MVC   CONIO(16),RECSIZ    'ENTER NEW REC. LNTH' MSG            OS124100
         MVC   CONIO(7),DESIRED                                         OS124200
         MVI   WCNCCW+7,X'10'                                           OS124300
         MVI   RCNCCW+7,X'05'                                           OS124400
         BAL   R8,WRTCONP                                               OS124500
         LA    RC,5(R0)                                                 OS124600
         LA    RB,CONIO                                                 OS124700
         BAL   R8,TSTNUMV          REPLY NUMERIC ?                      OS124800
         B     NEWLNTH             NO                                   OS124900
         MVC   HOLD+3(5),CONIO     YES,                                 OS125000
         BAL   R8,BINCVT           CONVERT TO BINARY                    OS125100
         CR    R1,R5               NEW LNTH SHORTER ?                   OS125200
         BNH   NOBLK               YES, LNTH IN REGISTER 1              OS125300
         C     R1,DSL              NEW LNTH FIT IN BUFFER ?             OS125400
         BH    WRGLNTC             NO, GO TO BADLNTH MSG.               OS125500
         LA    RA,DTPIO                                                 OS125600
         AR    RA,R5                                                    OS125700
         LR    R8,R1               PAD OUT NEW EXTENDED LNTH WITH BLANK OS125800
         SR    R8,R5                                                    OS125900
PADLOOP  MVI   0(RA),C' '                                               OS126000
         LA    RA,1(RA)                                                 OS126100
         BCT   R8,PADLOOP                                               OS126200
NOBLK    ST    R1,SAVREGS+16       STORE NEW LNTH                       OS126300
         L     R5,DSL                                                   OS126400
         SR    R5,R1                                                    OS126500
         STH   R5,INTPCSW+5            SET BYTE CNT                     OS126600
         STH   R5,TPLNTH+2             STORE NEW RES. CNT.              OS126610
         B     TPERLP              GO PRINT & SEE IF DONE               OS126700
OKLNTH   MVI   PRTIO,C'#'          '# BYTES TO BE CHANGED' MSG          OS126800
         MVC   PRTIO+1(28),BYTMSG                                       OS126900
         MVC   PRTIO+29(10),BLANKS                                      OS127000
         LA    R9,DTPIO                                                 OS127100
         LR    RA,R9                                                    OS127200
         AR    RA,R5                                                    OS127300
         BAL   R4,CHNG             GO TO ALTER REC ROUTINE FOR CHANGES  OS127400
         B     TPERLP              GO PRINT & SEE IF DONE               OS127500
TAPOK    LM    R1,RE,SAVREGS       EXIT TO PROCESS CORRECTED RECORD     OS127600
         B     4(R1)                 WITH ORIGINAL FUNCTION             OS127700
RTTPER   LM    R1,RE,SAVREGS       EXIT TO READ NEXT RECORD AND THEN    OS127800
         B     0(R1)                 TO ORIGINAL FUNCTION               OS127900
         EJECT                                                          OS128000
*********************************************************************** OS128200
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** OS128300
*********************************************************************** OS128400
         SPACE 1                                                        OS128500
LOOKUP   LA    R5,FUNCT            FUNCTION TABLE POINTER IN R5.        OS128600
         CLI   FUNCOD+2,C' '           BLANK - ONLY 2 CHAR IN FUNCTION  OS128700
         BNE   LKLOOP                  NO, SKIP NEXT INSTR.             OS128800
         MVI   FUNCOD+2,C'U'       OVERLAY POS 3 OP CODE IF BLANK       OS128900
LKLOOP   CLC   FUNCOD,0(R5)        OP CODE MATCH FUNCTION TABLE ?       OS129000
         BE    4(R5)               YES, BRANCH TO VECTOR TABLE          OS129100
         LA    R5,8(R5)            BUMP INDEX                           OS129200
         CLI   0(R5),X'FF'         END OF TABLE ?                       OS129300
         BE    0(R8)               YES, RETURN                          OS129400
         B     LKLOOP              NO, LOOP FOR NEXT LOOK.              OS129500
FUNCT    DC    C'CCU '                                                  OS129600
         B     CDCD                CARD - CARD                          OS129700
         DC    C'CPU '                                                  OS129800
         B     CDPR                CARD - PRINTER                       OS129900
         DC    C'CTU '                                                  OS130000
         B     CDTP                CARD - TAPE                          OS130100
         DC    C'CTS '                                                  OS130200
         B     CDTPSQ              CARD - TAPE WITH RESEQUENCING        OS130300
         DC    C'TCU '                                                  OS130400
         B     TPCD                TAPE - CARD                          OS130500
         DC    C'TPU '                                                  OS130600
         B     TPPRU               TAPE - LIST PRINT UNBLOCKED.         OS130700
         DC    C'TPD '                                                  OS130800
         B     TPPRR               TAPE - LIST PRINT REBLOCKED.         OS130900
         DC    C'TDU '                                                  OS131000
         B     TPDPU               TAPE - PRINT HEX UNBLOCKED.          OS131100
         DC    C'TDD '                                                  OS131200
         B     TPDPR               TAPE - PRINT HEX REBLOCKED.          OS131300
         DC    C'TPV '                                                  OS131400
         B     TPPRR               TAPE - LIST VARIABLE RECORDS         OS131500
         DC    C'TDV '                                                  OS131600
         B     TPDPR               TAPE - HEX  VARIABLE RECORDS         OS131700
TTDC     DC    C'TTU '             USE ALSO FOR TT = IF NEEDED          OS131800
         B     TPTP                TAPE - TAPE.                         OS131900
         DC    C'WTM '                                                  OS132000
         B     WTMK                WRITE TAPE MARK.                     OS132100
         DC    C'FSF '                                                  OS132200
         B     FSPF                FORWARD SPACE FILE.                  OS132300
BSFDC    DC    C'BSF '                 USE FOR BSR OR BSF MSG ALSO      OS132400
         B     BSPF                BACK SPACE FILE.                     OS132500
FSRDC    DC    C'FSR '                                                  OS132600
         B     FSPR                FORWARD SPACE RECORD.                OS132700
         DC    C'BSR '                                                  OS132800
         B     BSPR                BACK SPACE RECORD.                   OS132900
         DC    C'REW '                                                  OS133000
         B     REWTP               REWIND TAPE.                         OS133100
         DC    C'DSE '                                                  OS133200
         B     DISKDSE             DISPLAY DATA SET EXTENT ON CONSOLE   OS133300
         DC    C'DDU '                                                  OS133400
         B     DISKDP              DISK PRINT UNBLOCKED.                OS133500
         DC    C'DRL '                                                  OS133600
         B     DISKRLD             DISK RECORD LOAD.                    OS133700
         DC    C'DID '                                                  OS133800
         B     DSID                CHANGE DISK VOL  LABEL               OS133900
EOJDC    DC    C'EOJ '             USE FOR EOJ CHECK IN CHKIRPT         OS134000
         B     EOJ                 EOJ.                                 OS134100
         DC    C'CCS '                                                  OS134200
         B     CDCDS               CARD - CARD WITH SEQ. #'S.           OS134300
         DC    C'RUN '                                                  OS134400
         B     RUNTP               REWIND AND UNLOAD TAPE.              OS134500
         DC    C'CDU '                                                  OS134600
         B     CDDP                CARD - PRINTER IN HEX.               OS134700
         DC    C'CCL '                                                  OS134800
         B     CANC                CANCEL INPUT CARD DATA.              OS134900
         DC    C'INT '                                                  OS135000
         B     INITP               INITIALIZE TAPE.                     OS135100
         DC    C'ERT '                                                  OS135200
         B     ERASETP             ERASE TAPE RECORDS                   OS135300
TRLDC    DC    C'TRL '             USE ALSO FOR TRL = IF NEEDED         OS135400
         B     TPRLD               TAPE RECORD LOAD.                    OS135500
         DC    C'TRS '                                                  OS135600
         B     TRSCAN              TAPE RECORD SCAN.                    OS135700
         DC    C'DRS '                                                  OS135800
         B     DRSCAN              DISK RECORD SCAN.                    OS135900
         DC    C'DDD '                                                  OS136000
         B     DISKDR              DISK - PRINT REBLOCKED.              OS136100
         DC    C'EOF '                                                  OS136200
         B     WRTEOF              WRITE DISK EOF RECORD.               OS136300
         DC    C'SDU '                                                  OS136400
         B     SPLITDD             DISK PRINT - SPLIT CYLINDER.         OS136500
         DC    C'SDD '                                                  OS136600
         B     SPLITDR             DISK PRINT REBLOCKED - SPLIT CYL.    OS136700
         DC    C'DPU '                                                  OS136710
         B     DISKPRT             DP                                   OS136711
         DC    C'DPD '                                                  OS136712
         B     DISKPRTD            DPD                                  OS136713
         DC    C'SPU '                                                  OS136714
         B     SPLITPRT            SP                                   OS136715
         DC    C'SPD '                                                  OS136716
         B     SPLITPRD            SPD                                  OS136717
         DC    C'SRS '                                                  OS136800
         B     SPLITRS             DISK RECORD SCAN - SPLIT CYL.        OS136900
         DC    C'XXX '                                                  OS137000
         B     LSTFUNCT            LIST DITTO FUNCTIONS                 OS137100
         DC    C'TTR '                                                  OS137200
         B     TPTPR               TAPE - TAPE REBLOCKED                OS137300
         DC    X'FF'                                                    OS137400
FUNCOD   DS    CL3                                                      OS137500
         EJECT                                                          OS137600
*********************************************************************** OS137700
*                                                                     * OS137800
*                        OS/DITTO UTILITY ROUTINES                    * OS137900
*                                                                     * OS138000
*********************************************************************** OS138100
         SPACE 2                                                        OS138200
*********************************************************************** OS138300
**********               LIST OS/DITTO FUNCTIONS               ******** OS138400
*********************************************************************** OS138500
         SPACE 1                                                        OS138600
LSTFUNCT BAL   R8,DHDG                                                  OS138700
         BAL   R8,OVFLO            SKIP TO CHANNEL 1                    OS138800
         MVI   PL,X'84'                                                 OS138900
         LOAD  EPLOC=LOADMODL          BRING IN XXX RTN                 OS139000
         LR    RC,R0               ENTRY POINT OF XXX FROM OS           OS139100
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS139200
         LA    R7,CC               ADDRESS OF CARRIAGE CONTROL POS.     OS139300
         LA    R9,PRNT             ADDRESS OF PRINT AREA                OS139400
         LA    RB,CONIO                                                 OS139500
         MVI   INPUT,X'FF'                                              OS139600
         BALR  RA,RC               BR TO XXX RETURN ON RA TO DELETE     OS139700
         DELETE EPLOC=LOADMODL         DELETE XXX RTN AFTER USE         OS139800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS139900
ABENDSW  BC    0,XXXRET            IF ABENDING U100,RETURN TO ABEND     OS140000
         B     CONSOLE             GET NEXT FUNCTION                    OS140100
         DS    0F                                                       OS140200
LOADMODL DC    CL8'DITTOXXX'           XXX RTN NAME                     OS140300
         EJECT                                                          OS140400
*********************************************************************** OS140500
**********      CARD TO CARD WITH OR WITHOUT SEQ.  NUM.     *********** OS140600
*********************************************************************** OS140700
         SPACE 1                                                        OS140800
CDCD     MVI   SEQSW+1,X'F0'       SW TO BYPASS RE-SEQUENCING           OS140900
         MVI   TAPSW+1,0                                                OS141000
         B     CDCD1                                                    OS141100
CDCDS    MVI   TAPSW+1,X'00'       INACTIVATE TAPE OUTPUT               OS141200
TAPSQ    MVI   SEQSW+1,X'00'       SW TO CAUSE RE-SEQUENCING            OS141300
         LA    R7,1010             PAGE & LINE # FOR RPG & COBOL DECKS  OS141400
         LA    RA,HOLDSEQ                                               OS141500
         LA    R2,CONIO                                                 OS141600
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS141700
         BNE   GETDT               NO, GO GET FROM CONSOLE              OS141800
         LA    R9,CDCD1                                                 OS141900
         MVC   CONIO(3),DECKTYPE                                        OS142000
         B     CHK1                                                     OS142100
GETDT    MVC   CONIO(6),XXXDASH        'XXX - '                         OS142200
         MVC   CONIO+6(8),DT           'DECKTYPE'                       OS142300
         MVI   WCNCCW+7,X'0E'                                           OS142400
         MVI   RCNCCW+7,X'03'                                           OS142500
         LA    R9,GETDK                                                 OS142600
         BAL   R8,WRTCON                                                OS142700
CHK1     CLC   CONIO(3),=C'BAL'    DECKTYPE = BAL ?                     OS142800
         BNE   CHK2                NO,                                  OS142900
         LA    R7,10               YES, SET 1ST CARD # = 0001           OS143000
         LA    R3,75(R2)           SEQ. IN CC 76                        OS143100
         MVI   ALT2+1,X'04'        SEQ. LNGTH = 5                       OS143200
         LA    R5,72(R2)           NAME IN CC 73                        OS143300
         MVI   ALT1+1,X'02'        NAME LNGTH = 3                       OS143400
         MVI   DCKMSG+10,C'3'                                           OS143500
         MVI   GETDK+11,X'03'                                           OS143600
         LA    RA,3(RA)                                                 OS143700
         B     0(R9)                                                    OS143800
CHK2     CLC   CONIO(3),=C'RPG'    DECKTYPE = RPG ?                     OS143900
         BNE   CHK3                NO,                                  OS144000
         LR    R3,R2               YES, SEQ IN CC 01                    OS144100
         MVI   ALT2+1,X'04'        SEQ LNGTH = 5                        OS144200
         LA    R5,74(R2)           NAME IN CC 75                        OS144300
         MVI   ALT1+1,X'05'        NAME LNGTH =6                        OS144400
         MVI   DCKMSG+10,C'6'                                           OS144500
         MVI   GETDK+11,X'06'                                           OS144600
         LA    RA,3(RA)                                                 OS144700
         B     0(R9)                                                    OS144800
CHK3     CLC   CONIO(3),=C'COB'    DECKTYPE = COBOL ?                   OS144900
         BNE   BADDT               NO, BAD FORMAT                       OS145000
         LR    R3,R2               SEQ IN CC 01                         OS145100
         MVI   ALT2+1,X'05'        SEQ LNGTH = 6                        OS145200
         LA    R5,72(R2)           NAME IN CC 73                        OS145300
         MVI   ALT1+1,X'07'        NAME LNGTH = 8                       OS145400
         LA    RA,2(RA)                                                 OS145500
         MVI   DCKMSG+10,C'8'                                           OS145600
         MVI   GETDK+11,X'08'                                           OS145700
         B     0(R9)                                                    OS145800
GETDK    MVC   CONIO(18),DCKMSG    CONSOLE MSG                          OS145900
         MVI   WCNCCW+7,X'12'      'DECK NAME X CHARS.'                 OS146000
         MVI   RCNCCW+7,X'08'                                           OS146100
         BAL   R8,WRTCON                                                OS146200
         MVC   DECKNAME,CONIO      SAVE OPERATOR REPLY                  OS146300
CDCD1    SR    R4,R4               ZERO CARD COUNTER FOR LOGOUT MSG     OS146400
         MVC   TPDKMV+1(1),ALT1+1  LNTH FOR DECKNAME MOVE               OS146500
         MVC   TPSQMV+1(1),ALT2+1  LNTH FOR SEQUENCE MOVE               OS146600
         ST    R7,TPSQNUM          SAVE SEQ. NUMBER                     OS146700
         ST    R5,DECKADR          SAVE POINTER TO DECKNAME CC.         OS146800
         ST    R3,SEQADR           SAVE POINTER TO SEQUENCE CC.         OS146900
TAPSW    NOP   TAPSQ1              EXIT IF CTS FUNCTION                 OS147000
CDCD2    BAL   R8,CDRD             READ CARD                            OS147100
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS147200
         BE    CCEND7                                                   OS147300
SEQSW    BC    15,PNCHIT           BRANCH IF 80/80 ONLY                 OS147400
ALT1     MVC   0(8,R5),DECKNAME    MOVE IN DECKNAME                     OS147500
         MVI   ESW,X'FF'           DO NOT SUPPRESS LEAD ZEROS           OS147600
         BAL   R8,DECCVT           CONVERT REG 7 TO EBCDIC              OS147700
ALT2     MVC   0(4,R3),0(RA)       MOVE SEQ NUMBER                      OS147800
         LA    R7,10(R7)           BUMP SEQ COUNTER                     OS147900
PNCHIT   BAL   R8,CDPN             GO PUNCH IT                          OS148000
         LA    R4,1(R4)            BUMP CARD COUNTER                    OS148100
         B     CDCD2               LOOP AND DO IT AGAIN                 OS148200
BADDT    CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS148300
         BE    BADCTL              YES, PRNT MSG AND ABEND              OS148400
         MVI   P,X'00'                                                  OS148500
         B     CDCDS               NO, RESTART                          OS148600
CCEND7   LR    R7,R4                                                    OS148700
CCEND    EQU   *                                                        OS148800
         MVC   CONIO(80),BLANKS    FORCE OUT LAST CARD                  OS148900
         BAL   R8,CDPN                                                  OS149000
         B     IOCNT               GO LOG-OUT CARD COUNT                OS149100
         EJECT                                                          OS149200
*********************************************************************** OS149300
**********         CARD TO PRINTER   LIST OR HEX            *********** OS149400
*********************************************************************** OS149500
         SPACE 1                                                        OS149600
CDPR     BAL   R8,DHDG             ENTRY FOR LIST ONLY                  OS149700
         BAL   R8,OVFLO                                                 OS149800
         SR    R7,R7               CARD COUNTER = 0                     OS149900
         MVI   PL,X'50'            PRNT LNGTH = 80                      OS150000
CDPR1    BAL   R8,CDRD             READ CARD                            OS150100
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS150200
         BE    IOCNT               YES, GO LOG CARD COUNT               OS150300
         MVI   CC,X'09'            SINGLE SPACE PRINT                   OS150400
         BAL   R8,EDIT             EDIT AND PRINT.                      OS150500
         LA    R7,1(R7)            BUMP COUNTER                         OS150600
         B     CDPR1               LOOP AND DO IT AGAIN                 OS150700
CDDP     BAL   R8,DHDG             ENTRY FOR HEX DUMP                   OS150800
         BAL   R8,OVFLO                                                 OS150900
         SR    R7,R7               ZERO RECORD COUNTER                  OS151000
         MVC   HDG1(10),DREC       SET UP HEADINGS                      OS151100
         MVC   HDG1+13(7),DATH                                          OS151200
         MVI   HDG1+18,C'8'                                             OS151300
         MVI   HDG1+19,C'0'                                             OS151400
         LA    RA,DTPIO                                                 OS151500
CDDP1    BAL   R8,CDRD             READ CARD                            OS151600
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS151700
         BE    IOCNT               YES, GO LOG COUNT                    OS151800
         MVC   DTPIO(80),CONIO     MOVE TO HEX DUMP AREA                OS151900
         LA    R7,1(R7)            BUMP CARD COUNTER                    OS152000
         BAL   R8,DECCVT           CONVERT REC # TO EBCDIC, REG 7       OS152100
         MVC   HDG1+5(5),HOLDSEQ+3                                      OS152200
         MVI   PRLTH,X'50'                                              OS152300
         BAL   R9,HEXDP            GO HEX DUMP                          OS152400
         B     CDDP1                                                    OS152500
         EJECT                                                          OS152600
*********************************************************************** OS152700
**********          CARD TO TAPE - BLOCKED 1 TO 400         *********** OS152800
**********      WITH OR WITHOUT SEQ. NUMBERS & DECKNAME     *********** OS152900
*********************************************************************** OS153000
         SPACE 1                                                        OS153100
CDTPSQ   MVI   TAPSW+1,X'F0'       ACTIVATE RETURN IN CCS FUNCTION      OS153200
         MVI   TPSEQSW+1,X'00'     ENABLE RE-SEQUENCING                 OS153300
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS153400
         BE    CTCOM               YES,                                 OS153500
         TM    CT,X'4C'            NO, ALL PARAMS GIVEN ?               OS153600
         BNO   BADCTL              NO, BAD CTL CARD                     OS153700
         B     CTCOM1                                                   OS153800
CDTP     MVI   TPSEQSW+1,X'F0'     BYPASS SEQUENCING                    OS153900
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS154000
         BE    CTCOM               YES                                  OS154100
         TM    CT,X'44'            NO, ALL PARAMS GIVEN ?               OS154200
         BNO   BADCTL              NO - BAD CTL CARD                    OS154300
         B     CTCOM1                                                   OS154400
CTCOM    BAL   R7,OTMSG            GET OUTPUT TAPE                      OS154500
CTCOM1   EQU   *                                                        OS154600
         MVC   CONIO(3),HBF                                             OS154700
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS154800
         BE    CTRCOM              YES, BYPASS CONSOLE REQUEST          OS154900
CDTPR1   MVC   CONIO(9),BF             'BLKFACTOR'                      OS155000
         MVI   WCNCCW+7,X'09'                                           OS155100
         MVI   RCNCCW+7,X'03'                                           OS155200
         BAL   R8,WRTCON                                                OS155300
CTRCOM   LA    RC,3(R0)                                                 OS155400
         LA    RB,CONIO                                                 OS155500
         BAL   R8,TSTNUMV          BLK FACTOR NUMERIC ?                 OS155600
         B     CDTPR1              NO,                                  OS155700
         CLC   CONIO(3),ZEROS      GREATER THAN ZERO ?                  OS155800
         BH    BFOK                YES                                  OS155900
         CLI   CNTRLSW,X'FF'       NO, EXIT.  CONTROL CARDS ?           OS156000
         BE    BADCTL              OR    OPERATOR                       OS156100
         MVI   P,X'00'             ERROR, IGNORE STRING PARAMS          OS156200
         B     CDTPR1              RETRY                                OS156300
BFOK     MVC   HOLD+5(3),CONIO                                          OS156400
         BAL   R8,BINCVT           CONVERT BLK FACTOR                   OS156500
         STH   R1,HBF              TO BINARY AND SAVE                   OS156600
         CLI   TPSEQSW+1,X'00'     ARE WE RE-SEQUENCING                 OS156700
         BE    TAPSQ               YES, GO GET PARAMS FROM CCS          OS156800
TAPSQ1   SR    RC,RC               CLEAR CARD COUNTER                   OS156900
         SR    R4,R4               CLEAR BUFFER LNTH COUNTER            OS157000
         LA    R5,DTPIO            TAPE OUTPUT AREA                     OS157100
         LH    R2,HBF              BLK FACTOR                           OS157200
         MH    R2,EIGHTY           MULTIPLY FOR BLOCK LENGTH            OS157300
         ST    R2,INEND            SAVE BLOCK SIZE                      OS157400
         STH   R2,OTTPCCW+6        STORE IN CCW                         OS157500
         C     R2,DSL              IS BUFFER TO BIG FOR CORE ?          OS157600
         BNH   MORCD               NO,                                  OS157700
         MVC   CONIO(6),SYSOTMSG+8 YES, ISSUE MSG TO OPERATOR           OS157800
         B     WRGLNTCA            'OUTPUT BLOCK EXCEEDS BUFFER, . . .  OS157900
MORCD    BAL   R8,CDRD             READ CARD                            OS158000
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS158100
         BE    LASTOT              YES, EXIT                            OS158200
TPSEQSW  NOP   TPSQBPAS            BRANCH IF NOT RE-SEQUENCING          OS158300
         L     R1,DECKADR          INPUT ADDRESS FOR DECKNAME           OS158400
TPDKMV   MVC   0(1,R1),DECKNAME    MOVE DECKNAME TO CARD                OS158500
         L     R7,TPSQNUM          LOAD SEQ NUMBER                      OS158600
         MVI   ESW,X'FF'           DO NOT SUPPRESS LEADING ZEROS        OS158700
         BAL   R8,DECCVT           CONVERT TO DECIMAL                   OS158800
         L     R1,SEQADR                                                OS158900
TPSQMV   MVC   0(1,R1),0(RA)       MOVE SEQ # TO CARD                   OS159000
         LA    R7,10(R7)           BUMP SEQ #                           OS159100
         ST    R7,TPSQNUM           AND SAVE IT                         OS159200
TPSQBPAS MVC   0(80,R5),CONIO      MOVE TO TAPE BUFFER                  OS159300
         LA    RC,1(RC)            BUMP CARD COUNTER                    OS159400
         LA    R5,80(R5)           BUMP BUFFER POINTER                  OS159500
         LA    R4,80(R4)           KEEP TRACK OF LNGTH                  OS159600
         C     R4,INEND            BUFFER FULL ?                        OS159700
         BL    MORCD               NO,                                  OS159800
         LA    R5,DTPIO            YES, RESET POINTERS                  OS159900
         SR    R4,R4                                                    OS160000
         BAL   R8,TPOT             WRITE TAPE BLOCK                     OS160100
         TM    OTEOR,1             END OF REEL ?                        OS160200
         BZ    MORCD               NO                                   OS160300
         BAL   R9,NEWTAPOT         YES, GET NEW TAPE                    OS160400
         B     MORCD                                                    OS160500
LASTOT   LTR   R4,R4               LAST BLOCK A SHORT BLOCK ?           OS160600
         BZ    CDTPEND             NO,                                  OS160700
         STH   R4,OTTPCCW+6        YES, UPDATE CCW LNGTH                OS160800
         BAL   R8,TPOT             GO WRITE SHORT BLOCK                 OS160900
CDTPEND  BAL   RA,LTMKR            WRITE TAPE MARK                      OS161000
         LR    R7,RC                                                    OS161100
         B     IOCNT               GO LOG CARD COUNT                    OS161200
TPSQNUM  DS    1F                                                       OS161300
DECKADR  DS    1F                                                       OS161400
SEQADR   DS    1F                                                       OS161500
         EJECT                                                          OS161600
*********************************************************************** OS161700
**********         TAPE TO CARD - BLOCKED OR UNBLOCKED      *********** OS161800
*********************************************************************** OS161900
         SPACE 1                                                        OS162000
TPCD     CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS162100
         BE    TC1                 YES,                                 OS162200
         TM    CT,X'80'            VALID CONTROL CARD ?                 OS162300
         BNO   BADCTL              NO                                   OS162400
         MVI   CT,X'00'                                                 OS162500
         B     TCCOM                                                    OS162600
TC1      BAL   R7,ITMSG            GET INPUT TAPE                       OS162700
TCCOM    EQU   *                                                        OS162800
         SR    R7,R7               ZERO CARD COUNTER                    OS162900
MORTP    BAL   R8,INTP             READ TAPE                            OS163000
         CLI   TMSW,X'FF'          EOF ?                                OS163100
         BE    CCEND               YES, WE ARE DONE                     OS163200
         SR    R2,R2               ZERO BLK LNGTH COUNTER               OS163300
         LA    R4,DTPIO            BUFFER ADDRESS                       OS163400
         L     R5,DSL              CALCULATE BLOCK LNGTH                OS163500
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS163600
         CLC   INTPCSW+5(2),DSL        BUFFER TOO SMALL ?               OS163700
         BE    WRGLNTC             YES                                  OS163800
PUNCHMOR CH    R5,=X'0051'         IS TAPE 81 CHAR BLK ?                OS163900
         BNE   MOVPNCH             NO,                                  OS164000
         LA    R2,1(R2)            YES, MUST HAVE SS CODE, BUMP PAST    OS164100
         LA    R4,1(R4)                                                 OS164200
MOVPNCH  MVC   CONIO(80),0(R4)     MOVE TO PUNCH AREA                   OS164300
         LA    R2,80(R2)                                                OS164400
         LA    R4,80(R4)           BUMP BUFFER POINTER                  OS164500
         BAL   R8,CDPN             GO PUNCH IT                          OS164600
         LA    R7,1(R7)            ADD 1 TO CARD COUNTER                OS164700
         CR    R2,R5               END OF BUFFER ?                      OS164800
         BL    PUNCHMOR            NO,                                  OS164900
         BE    MORTP               YES, GO GET TAPE BLK                 OS165000
         MVC   CONIO(59),BLANKS    TAPE NOT MULTIPLE OF 80,             OS165100
         MVC   CONIO(19),TLMSG     ISSUE MSG AND EXIT                   OS165200
         B     WRGLNTC1            BYPASS BADLTH MSG                    OS165300
WRGLNTC  MVC   CONIO(6),SYSITMSG+8     'INPUT '                         OS165400
WRGLNTCA MVC   CONIO+6(53),BADLTH      ' BLOCK EXCEEDS BUFFER, TO ...   OS165500
         MVC   UCODE(3),U200       MOVE  IN 200 FOR INADEQ. BUFFER      OS165600
WRGLNTC1 CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS165700
         BE    WMSGP                                                    OS165800
         MVI   WCNCCW+7,X'3B'                                           OS165900
         LA    R8,CONSOLE                                               OS166000
         B     WCON2                                                    OS166100
WMSGP    MVI   PL,X'3B'                                                 OS166200
         BAL   R8,OVFLO                                                 OS166300
         BAL   R8,PRNT                                                  OS166400
         B     ABEND               BR TO ABEND ( HAND CODED )           OS166500
         EJECT                                                          OS166600
*********************************************************************** OS166700
**********     TAPE TO PRINTER - LIST OR HEX, BLK OR UNBLK  *********** OS166800
*********************************************************************** OS166900
         SPACE 1                                                        OS167000
TPPRU    MVI   RSZSW5+1,X'F0'     ENTRY - LIST UNBLOCKED                OS167100
         MVI   DPSW,X'00'                                               OS167200
         B     TP0                                                      OS167300
TPPRR    MVI   RSZSW5+1,X'00'     ENTRY - DEBLOCK AND LIST              OS167400
         MVI   DPSW,X'00'                                               OS167500
         B     TP0                                                      OS167600
TPDPU    MVI   RSZSW5+1,X'F0'     ENTRY - UNBLOCKED LIST & HEX          OS167700
         MVI   DPSW,X'FF'                                               OS167800
         B     TP0                                                      OS167900
TPDPR    MVI   RSZSW5+1,X'00'     ENTRY - DEBLOCK LIST & HEX            OS168000
         MVI   DPSW,X'FF'                                               OS168100
TP0      SR    R2,R2                                                    OS168200
         MVC   HH2(48),DEVH        BUILD HEADINGS                       OS168300
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS168400
         BE    TP1                                                      OS168500
         TM    CT,X'80'            VALID CONTROL CARD ?                 OS168600
         BNO   BADCTL              NO                                   OS168700
         B     RSZSW0                                                   OS168800
TP1      BAL   R7,ITMSG            GET INPUT TAPE                       OS168900
RSZSW0   EQU   *                                                        OS169000
         MVC   HH2+8(3),ITUCB          MOVE UCB TO DEVICE FIELD         OS169100
         LA    R8,ITMODE           PICK UP TAPEIN  MODE SET FROM DEB    OS169200
         CLI   INFMOTSW,X'FF'          INPUT FROM TAPEOUT DD ?          OS169300
         BNE   RSZSW                   NO                               OS169400
         MVC   HH2+8(3),OTUCB          MOVE UCB TO DEVICE FIELD         OS169500
         MVC   HH2+13(8),TPOTDD        MOVE TAPEOUT TO HEADING          OS169600
         LA    R8,OTMODE           PICK UP TAPEOUT MODE SET FROM DEB    OS169700
RSZSW    MVI   TPLPSW+1,X'F0'                                           OS169800
         LA    R1,18               SET TABLE LENGTH                     OS169900
         LA    R4,MODTBL2          ADDRESS OF 2ND HALF OF TABLE         OS170000
         LA    R7,MODTBL                                                OS170100
PRNTSS   CLC   0(1,R8),0(R4)       LOOP THRU MODTBL                     OS170200
         BE    GOODSS              UNTIL MATCH IS FOUND                 OS170300
         LA    R7,2(R7)            EQUAL TO EXIST.                      OS170400
         LA    R4,1(R4)            MODE SET GIVEN.                      OS170500
         BCT   R1,PRNTSS                                                OS170600
         LA    R7,BLANKS                                                OS170700
GOODSS   MVC   HH2+27(2),0(R7)     MOVE DECIMAL MODE SET TO HEADING.    OS170800
         BAL   R9,TAPECHAR         GO EVAL. MODE & PUT TRK & DEN IN HDG OS170900
TRSRETSW NOP   TRSRETRN                RETURN TO TRS                    OS170910
RSZSW5   BC    0,TPCOM             BRANCH IF NOT DEBLOCKING             OS171000
         MVI   TPLPSW+1,X'00'                                           OS171100
RSZSWDK  EQU   *                       BR HERE FOR DISK INPUT RECSIZE   OS171200
         CLI   FUNCOD+2,C'V'       IS THIS VARIABLE LNGTH TAPE ?        OS171300
         BE    TPCOM               YES                                  OS171400
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS171500
         BE    TP3                                                      OS171600
TP2      MVC   CONIO(16),RECSIZ    CONSOLE MSG 'RECSIZE ?'              OS171700
         MVI   WCNCCW+7,X'10'                                           OS171800
         MVI   RCNCCW+7,X'05'                                           OS171900
         BAL   R8,WRTCON                                                OS172000
         LA    RC,5(R0)                                                 OS172100
         LA    RB,CONIO                                                 OS172200
         BAL   R8,TSTNUMV          RECSIZE NUMERIC ?                    OS172300
         B     TP2                 NO,                                  OS172400
         B     TP4                 YES                                  OS172500
TP3      TM    CT,X'10'                                                 OS172600
         BZ    BADCTL                                                   OS172700
         MVC   CONIO(5),HRS                                             OS172800
TP4      LA    RC,5(R0)                                                 OS172900
         CLC   CONIO(5),ZEROS      GREATER THAN ZERO ?                  OS173000
         BNE   GRTRZERO            YES,                                 OS173100
         MVI   CONIO,C'X'                                               OS173200
GRTRZERO LA    RB,CONIO                                                 OS173300
         BAL   R8,TSTNUM                                                OS173400
         B     TP2                                                      OS173500
         MVC   HOLD+3(5),CONIO                                          OS173600
         BAL   R8,BINCVT                                                OS173700
         CLI   DBLSW,X'FF'         IS DISK DUMP USING THIS CODE ?       OS173800
         BE    DISKDR1             YES, RETURN                          OS173900
         LR    R7,R1               LOGICAL REC LNGTH                    OS174000
         ST    R1,INEND            SAVE LOG. REC. SIZE TO LOAD RC LATER OS174100
         BAL   R8,DECCVT                                                OS174200
         MVC   DATH+5(5),HOLDSEQ+3     PLACE IN HEADING                 OS174300
TPCOM    CLI   P,0                 OPERATOR LIMIT # PRINT BLOCKS ?      OS174400
         BE    TPCOM1              NO                                   OS174500
         BAL   R8,WRTCON           YES, GO GET IT                       OS174600
         LA    RC,4                                                     OS174700
         LA    RB,CONIO                                                 OS174800
         BAL   R8,TSTNUMV          IS IT NUMERIC ?                      OS174900
         B     TPCOM1              NO,  IGNORE                          OS175000
         MVC   HOLD+4(4),CONIO                                          OS175100
         BAL   R8,BINCVT           CONVERT TO BINARY                    OS175200
         STH   R1,BLCT             SAVE IT                              OS175300
         MVI   CT,X'20'            TURN ON LIMIT PRINT SWITCH           OS175400
TPCOM1   BAL   R8,DHDG                                                  OS175500
         BAL   R8,OVFLO                                                 OS175600
         MVC   CONIO,HH1                                                OS175700
         MVI   PL,X'84'                                                 OS175800
         MVI   CC,X'19'                                                 OS175900
         CLI   RSZSW5+1,X'00'     ARE WE DEBLOCKING ?                   OS176000
         BE    PRTLTR              YES, PRINT HEADING LATER             OS176100
         BAL   R8,PRNT             NO, PRINT NOW                        OS176200
PRTLTR   SR    R2,R2                                                    OS176300
         ST    R2,SAV              SET BLOCK COUNT = ZERO               OS176400
         BAL   R8,INTP             READ TAPE                            OS176500
         CLI   TMSW,X'FF'          LEADING TAPE MARK ?                  OS176600
         BNE   TPLOOP2             NO, BRANCH AROUND RE-READ            OS176700
TPMKPRNT EQU   *                                                        OS176800
         MVI   CC,X'13'            SPACE IMMEDIATE                      OS176900
         BAL   R8,PRNT                                                  OS177000
         MVC   CONIO(10),TAPMRK                                         OS177100
         MVC   CONIO+10(2),HH1+1                                        OS177200
         MVC   CONIO+12(120),CONIO+10                                   OS177300
         MVI   PL,X'84'                                                 OS177400
         MVI   CC,X'19'            PRINT AND DOUBLE SPACE               OS177500
         BAL   R8,PRNT             PRINT 'TAPE MARK'                    OS177600
TPMKDONE B     CONSOLE             TREAT   LEADING T.M. AS EOF IN OS    OS177700
TPLOOP   EQU   *                                                        OS177800
         BAL   R8,INTP             READ TAPE                            OS177900
         CLI   TMSW,X'FF'          TAPE MARK ?                          OS178000
         BE    TPMKPRNT            YES, GO PRNT IT THEN EXIT            OS178100
TPLOOP2  LA    RA,DTPIO            NO, CONTINUE                         OS178200
         L     R5,DSL                                                   OS178300
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS178400
         CLC   INTPCSW+5(2),DSL    DOES RES CNT = 0 ?                   OS178500
         BE    WRGLNTC             YES, ISSUE BLOCK EXCEEDS BUFFER MSG  OS178600
         LR    R7,R5               BLOCK LNGTH IN REG 7                 OS178700
         BAL   R8,DECCVT           CONVERT TO EBCDIC                    OS178800
         MVC   HDG1(10),TBLK       PLACE IN HEADINGS                    OS178900
         MVC   HDG1+13(10),DATH                                         OS179000
         MVC   HDG1+18(5),HOLDSEQ+3                                     OS179100
         L     R7,SAV                                                   OS179200
         LA    R7,1(R7)            BUMP BLOCK COUNT                     OS179300
         ST    R7,SAV                                                   OS179400
         BAL   R8,DECCVT                                                OS179500
         MVC   HDG1+5(5),HOLDSEQ+3 BLOCK NUMBER IN HEADING              OS179600
TPLPSW   BC    15,TDU              NOP IF DEBLOCKING                    OS179700
         MVI   CC,X'19'                                                 OS179800
         MVI   PL,X'84'                                                 OS179900
         MVC   CONIO,HH1           SET UP HEADING                       OS180000
         MVC   CONIO+63(23),HDG1                                        OS180100
         BAL   R8,PRNT             PRINT HEADING                        OS180200
         CLI   FUNCOD+2,C'V'       IS THIS VARIABLE LNGTH TAPE ?        OS180300
         BNE   TDRLOP1             NO                                   OS180400
         LA    RA,4(RA)            YES, BUMP PAST BLOCK LNGTH FIELD     OS180500
         LA    R1,4                                                     OS180600
         SR    R5,R1               DECREMENT BLOCK LNGTH BY BLOCK FIELD OS180700
TDRLOP   CLI   FUNCOD+2,C'V'       IS THIS VARIABLE LNGTH TAPE ?        OS180800
         BNE   TDRLOP1             NO,                                  OS180900
         SR    RC,RC               YES, GET VARIABLE                    OS181000
         IC    RC,0(RA)              RECORD LNGTH                       OS181100
         SLL   RC,8                  FROM LOGICAL LNGTH FIELD           OS181200
         IC    RC,1(RA)                                                 OS181300
         LA    RA,4(RA)            BUMP BUFFER POINTER PAST LNGTH FIELD OS181400
         LA    R1,4                4 IN REG 1 - LNTH OF REC LNTH FIELD  OS181500
         SR    RC,R1               RC=ACTUAL USER DATA LNTH             OS181600
         ST    RC,INEND            ST RC LOG. RECSIZE FOR LOAD NEXT PAR OS181700
         SR    R5,R1               DECREMENT BLOCK LNTH REMAINING       OS181800
TDRLOP1  EQU   *                                                        OS181900
         L     RC,INEND            LOAD RC WITH LOG. RECSIZE            OS182000
         LR    R3,RC               LOGICAL RECORD LENGTH                OS182100
         MVC   HDG1(10),DREC                                            OS182200
         MVC   HDG1+13(10),DATH                                         OS182300
         LA    R2,1(R2)            BUMP RECORD NUMBER                   OS182400
         LR    R7,R2                                                    OS182500
         BAL   R8,DECCVT                                                OS182600
         MVC   HDG1+5(5),HOLDSEQ+3 RECORD NUMBER IN HEADING             OS182700
         LR    R7,R3               LOGICAL RECORD LENGTH                OS182800
         BAL   R8,DECCVT           CONVERT TO EBDIC                     OS182900
         MVC   HDG1+18(5),HOLDSEQ+3  AND PLACE IN DATA LNGTH HEADING    OS183000
         CR    R5,RC               FULL LOGICAL REC REMAINING ?         OS183100
         BNL   FULBLK              YES                                  OS183200
         LR    R3,R5               NO, UPDATE LNGTH FOR PRINT           OS183300
         LR    R5,RC                                                    OS183400
         LR    R7,R3                                                    OS183500
         BAL   R8,DECCVT           CONVERT NEW LNGTH TO EBDIC           OS183600
         MVC   HDG1+18(5),HOLDSEQ+3    AND PLACE IN HEADING             OS183700
FULBLK   BAL   RB,DEBLOK           GO PRINT IT                          OS183800
         SR    R5,RC               SUBTRACT FROM BUFFER LNGTH           OS183900
         BNZ   TDRLOP              LOOP IF BUFFER NOT EMPTY             OS184000
         MVI   CC,X'13'            SET UP TO SPACE 2, NO PRNT           OS184100
         BAL   R8,PRNT             DO IT                                OS184200
         B     TPLOOPCT            GO LOAD BUFFER                       OS184300
TDU      LR    R3,R5               BLOCK LN. IN REG 3                   OS184400
         BAL   RB,DEBLOK           GO PRINT BLOCK                       OS184500
         LA    R1,100(R0)                                               OS184600
         CR    R5,R1               PRINT MORE THAN 1 LINE ?             OS184700
         BNH   TPLOOPCT            NO,                                  OS184800
         MVI   CC,X'13'            YES,                                 OS184900
         BAL   R8,PRNT             PRINT ADD'NL LINE                    OS185000
TPLOOPCT TM    CT,X'20'            DO WE LIMIT # BLKS PRINTED ?         OS185100
         BZ    TPLOOP              NO                                   OS185200
         LH    R1,LOWLIM           GET BLK COUNT                        OS185300
         LA    R1,1(R1)            BUMP                                 OS185400
         STH   R1,LOWLIM               BLOCK COUNT BY 1                 OS185500
         CLC   BLCT,LOWLIM         REACH LIMIT ?                        OS185600
         BE    CONSOLE             YES, WE ARE DONE                     OS185700
         B     TPLOOP              DOUBLE SPACE &  READ AGAIN           OS185800
         EJECT                                                          OS185900
*********************************************************************** OS186000
**********                    TAPE TO TAPE                  *********** OS186100
*********************************************************************** OS186200
         SPACE 1                                                        OS186300
TPTP     MVI   TRLSW+1,X'00'       NOP TAPE RECORD LOAD EXIT            OS186400
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS186500
         BE    TPTP1                                                    OS186600
         TM    CT,X'C0'                                                 OS186700
         BNO   BADCTL                                                   OS186800
         TM    CT,X'20'                OPTIONAL NBLKS GIVEN ?           OS186810
         BNO   NONBLKS                 NO                               OS186811
         MVI   NBLKSW+1,X'00'          YES, SET SWITCH                  OS186812
NONBLKS  EQU   *                       BR HERE IF PGMR OMITS NBLKS      OS186813
         MVI   CT,X'00'                                                 OS186900
         LA    R3,1                                                     OS187000
         B     FILELP                                                   OS187100
TPTP1    BAL   R7,ITMSG            GET INPUT TAPE                       OS187200
         BAL   R7,OTMSG            GET OUTPUT TAPE                      OS187300
FILECT   MVC   CONIO(7),FILNUM     GET NUMBER OF FILES                  OS187400
         MVI   WCNCCW+7,X'07'                                           OS187500
         MVI   RCNCCW+7,X'02'                                           OS187600
         BAL   R8,WRTCON                                                OS187700
         LA    RC,2(R0)                                                 OS187800
         LA    RB,CONIO                                                 OS187900
         BAL   R8,TSTNUMV          NUMBER OF FILES NUMERIC ?            OS188000
         B     FILECT              NO                                   OS188100
         MVC   HOLD+6(2),CONIO                                          OS188200
         BAL   R8,BINCVT           CONVERT TO BINARY                    OS188300
         LR    R3,R1               REG 3 HAS # OF FILES                 OS188400
         LTR   R3,R3               # FILES = ZERO ?                     OS188500
         BNZ   FILELP              NO                                   OS188600
         MVI   P,X'00'             TURN OFF STRING PARAM INDICATOR      OS188700
         B     FILECT              GO GET # FILES AGAIN                 OS188800
FILELP   SR    R7,R7               CLEAR BLOCK COUNTER                  OS188900
TTCOM    BAL   R8,INTP             GET INPUT TAPE BLOCK                 OS189000
         CLI   TMSW,X'FF'          TAPE MARK ?                          OS189100
         BNE   TTMORE              NO                                   OS189200
         BAL   RA,LTMKR            GO WRITE OUTPUT T.M.                 OS189210
         MVC   CONIO+8(21),BLKTMSG     ' BLKS AND T.M. COPIED'          OS189300
NBLKSMSG EQU   *                       BR HERE FOR NBLKS MSQ W/O T.M.   OS189310
         MVI   ESW,X'00'                                                OS189400
         BAL   R8,DECCVT                                                OS189500
         MVC   CONIO(8),HOLDSEQ        MOVE # BLKS TO MSG               OS189600
         LA    R4,29                                                    OS189800
         BAL   R9,IOCNT1           GO LOG RECORD COUNT                  OS189900
         BCT   R3,FILELP           LOOP UNTIL ALL FILES COPIED          OS190000
         B     CONSOLE                                                  OS190100
TTMORE   LA    R7,1(R7)            BUMP BLOCK COUNT                     OS190200
         L     R5,DSL              CALCULATE TAPE                       OS190300
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS190400
         CLC   INTPCSW+5(2),DSL    EXCEED BUFFER ?                      OS190500
         BE    WRGLNTC             YES                                  OS190600
         STH   R5,OTTPCCW+6        NO, STORE IN OUTPUT CCW              OS190700
         BAL   R8,TPOT             WRITE TAPE                           OS190800
         TM    OTEOR,1             END OF REEL ?                        OS190900
         BZ    TRLSW               NO,                                  OS191000
         BAL   R9,NEWTAPOT         YES, GO GET ANOTHER TAPE MOUNTED     OS191100
TRLSW    BC    0,TRLRT             'TAPE RECORD LOAD' ROUTINE EXIT      OS191200
NBLKSW   BC    15,TTCOM            LOOP AND READ AGAIN, UNLESS NBLKS    OS191300
         STH   R7,LOWLIM               STORE PRESENT BLK CNT            OS191310
         CLC   BLCT,LOWLIM             COMPARE TO NBLKS                 OS191311
         BNE   TTCOM                   CONTINUE COPY                    OS191312
         MVI   NBLKSW+1,X'F0'          FALL THRU, RESET SW TO NORM      OS191313
         MVC   CONIO+8(21),BLKTMSG     ' BLKS AND T.M. COPIED'          OS191314
         MVC   CONIO+13(4),=C', NO'    ' BLKS, NO T.M. COPIED'          OS191315
         B     NBLKSMSG                GO PRINT MSG                     OS191316
         EJECT                                                          OS191400
*********************************************************************** OS191500
**********               INITIALIZE  TAPE (VOL1XXXXXX)      *********** OS191600
*********************************************************************** OS191700
         SPACE 1                                                        OS191800
INITP    CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS191900
         BE    BADCTL              YES, NOT ALLOWED - EXIT              OS192000
         BAL   R7,OTMSG            GET OUTPUT TAPE ADDRESS              OS192100
         MVC   CONIO(15),NVOLMSG                                        OS192200
         MVC   CONIO+14(6),XX      'ENTER NEW VOL XXXXXX'               OS192300
         MVI   WCNCCW+7,X'14'                                           OS192400
         MVI   RCNCCW+7,X'06'                                           OS192500
         BAL   R8,WRTCON                                                OS192600
         MVC   DTPIO(80),BLANKS                                         OS192700
         MVC   DTPIO(4),=C'VOL1'       BUILD NEW VOL LABEL              OS192800
         MVC   DTPIO+4(6),CONIO                                         OS192900
         MVC   CONIO(11),NVOLMSG+6 'NEW VOL IS '                        OS193000
         MVC   CONIO+11(6),DTPIO+4 'XXXXXX'                             OS193100
         LA    R8,DTPIO                                                 OS193200
         MVC   41(10,R8),USERNAME                                       OS193300
         MVC   OTTPCCW+6(2),EIGHTY                                      OS193400
         BAL   R8,TPOT             WRITE VOL1 LABEL                     OS193500
         MVC   DTPIO(61),BLANKS                                         OS193600
         MVC   DTPIO(4),=C'HDR1'                                        OS193700
         BAL   R8,TPOT             WRITE HDR1 LABEL                     OS193800
         MVI   WCNCCW+7,X'11'                                           OS193900
         BAL   R8,WCON2                                                 OS194000
         B     LTMK                                                     OS194100
         EJECT                                                          OS194200
*********************************************************************** OS194300
**********              TAPE TO TAPE REBLOCKED              *********** OS194400
*********************************************************************** OS194500
         SPACE 1                                                        OS194600
TPTPR    CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS194700
         BE    TTR1                YES                                  OS194800
         TM    CT,X'D4'            VALID PARAMETERS ?                   OS194900
         BNO   BADCTL              NO                                   OS195000
         MVC   CONIO(5),HRS        RECSIZE PARAMETER                    OS195100
         B     TTR3                                                     OS195200
TTR1     BAL   R7,ITMSG            GET INPUT TAPE FROM CONSOLE          OS195300
         BAL   R7,OTMSG            GET OTPUT TAPE FROM CONSOLE          OS195400
TTR2     MVC   CONIO(16),RECSIZ    CONSOLE MSG 'RECSIZE ?'              OS195500
         MVI   WCNCCW+7,16                                              OS195600
         MVI   RCNCCW+7,5                                               OS195700
         BAL   R8,WRTCON           GET RECSIZE FROM CONSOLE             OS195800
TTR3     LA    RC,5                                                     OS195900
         LA    RB,CONIO                                                 OS196000
         BAL   R8,TSTNUMV          RECSIZE NUMERIC ?                    OS196100
         B     TTR2                NO                                   OS196200
         LA    R4,TTR2             YES,                                 OS196300
         MVC   HOLD+3(5),CONIO                                          OS196400
         BAL   R8,BINCVT           CONVERT TO BINARY IN REG 1           OS196500
         LTR   R1,R1               IS IT ZERO ?                         OS196600
         BZ    TTBAD               YES                                  OS196700
         LR    R2,R1               SAVE RECSIZ                          OS196800
         MVC   CONIO(3),HBF        CONTROL CARD BLKFACTOR               OS196900
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS197000
         BE    TTR5                YES                                  OS197100
TTR4     MVC   CONIO(4),=C'NEW '                                        OS197200
         MVC   CONIO+4(9),BF           'BLKFACTOR'                      OS197300
         MVI   WCNCCW+7,X'0D'                                           OS197400
         MVI   RCNCCW+7,X'03'                                           OS197500
         BAL   R8,WRTCON           GO GET BLK FACTOR                    OS197600
TTR5     LA    RC,3                                                     OS197700
         LA    RB,CONIO                                                 OS197800
         BAL   R8,TSTNUMV          BLK FACTOR NUMERIC ?                 OS197900
         B     TTR4                NO                                   OS198000
         LA    R4,TTR4             YES                                  OS198100
         MVC   HOLD+5(3),CONIO     BLKFACTOR TO HOLD                    OS198200
         BAL   R8,BINCVT           CONVERT TO BINARY IN REG 1           OS198300
         LTR   R1,R1               IS IT ZERO ?                         OS198400
         BZ    TTBAD               YES                                  OS198500
         LR    R3,R1               SAVE BLKFACTOR                       OS198600
TTR6     SR    R7,R7               CLEAR RECORD COUNTER                 OS198700
         BAL   R8,INTP             GET FIRST BLOCK                      OS198800
         CLI   TMSW,X'FF'          TAPE MARK ?                          OS198900
         BNE   TTR7                NO                                   OS199000
         BAL   R9,TPMKMSG          YES, GO LOG IT                       OS199100
         B     CONSOLE             DONE                                 OS199200
TTR7     CLC   INTPCSW+5(2),DSL    RESIDUAL COUNT ZERO ?                OS199300
         BE    WRGLNTC             YES, BUFFER TO SMALL                 OS199400
         L     R5,DSL              CCW READ LNTH   INITIALLY            OS199500
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS199600
         MVC   FRSBLKCT,INTPCSW+5  SAVE, CHK CONSISTENT MAX BLKSZ, I/P  OS199700
         LA    R9,DTPIO            ADDRESS OF BUFFER POOL               OS199800
         AR    R9,R5               PLUS INPUT LNTH = ADDRESS OF OUTPUT  OS199900
         ST    R9,OTTPCCW            BUFFER IN OTTPCCW                  OS200000
         MVI   OTTPCCW,1           RESET OTTPCCW TO WRITE               OS200100
         LR    R9,R2               RECSIZE                              OS200200
         MR    R8,R3               X'S BLKFACTOR = OUTPUT BLK LNTH      OS200300
         STH   R9,OTTPCCW+6        STORE IN OUTPUT CCW                  OS200400
         L     R1,OTTPCCW          OUTPUT BUFFER ADDRESS                OS200500
         AR    R1,R9               PLUS OUTPUT LNTH                     OS200600
         LA    R1,0(R1)            DROP HIGH ORDER BYTE                 OS200700
         ST    R1,OTEND            GIVES ADDRESS OF BUFFER END +1       OS200800
         LA    R9,0(R9)            DROP SIGN BIT OF OUTPUT BLK LNTH     OS200900
         AR    R5,R9               ADD TO INPUT LNTH = TOTAL BUFFER     OS201000
         C     R5,DSL              I/P + O/P GREATER THAN BUFFER SIZE ? OS201100
         MVC   CONIO(6),SYSOTMSG+8     'OUTPUT'-SET UP MSG IF BR TAKEN  OS201200
         BH    WRGLNTCA            YES, EXIT                            OS201300
         MVI   MOVREC2+1,X'F0'     BYPASS SHORT MOVE                    OS201400
         SR    RC,RC               CLEAR COUNTER                        OS201500
         LA    RA,256              MAX LNTH OF MVC                      OS201600
TTR8     SR    R2,RA               DECREMENT RECSIZE UNTIL MINUS        OS201700
         LTR   R2,R2               TEST IT                              OS201800
         BM    TTR9                BRANCH IF MINUS                      OS201900
         BZ    TTR10               BRANCH IF ZERO                       OS202000
         LA    RC,1(RC)            ELSE BUMP COUNTER                    OS202100
         B     TTR8                 AND DO AGAIN                        OS202200
TTR9     MVI   MOVREC2+1,0         ENABLE SHORT MOVE CODE               OS202300
         AR    R2,RA               MAKE IT PLUS                         OS202400
         BCTR  R2,R0               DECREMENT BY 1 FOR SHORT             OS202500
         STC   R2,TTRSHORT          MOVE FOR LOGICAL REC.               OS202600
TTR10    STH   RC,MOVECT           SAVE # OF 256 LNTH MOVES PER LOG REC OS202700
         L     R3,OTTPCCW          ADDRESS OF OUTPUT BUFFER             OS202800
         LA    R3,0(R3)            DROP HIGH ORDER BYTE                 OS202900
         B     TTR13                                                    OS203000
TTR12    BAL   R8,INTP             GET INPUT RECORD                     OS203100
         CLI   TMSW,X'FF'          TAPE MARK ?                          OS203200
         BE    TTRLAST             YES                                  OS203300
         CLC   FRSBLKCT,INTPCSW+5  CURR. I/P BLK > 1ST I/P BLK ?        OS203400
         BH    WRGLNREC            YES                                  OS203500
TTR13    L     R5,DSL              IN-TAPE READ LNTH                    OS203600
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS203700
         LA    R1,DTPIO            BEGIN OF INPUT BUFFER                OS203800
         AR    R1,R5               ADD LNTH OF INPUT BLOCK              OS203900
         ST    R1,INEND            EQUALS ADDRESS+1 OF BLOCK END        OS204000
         LA    R2,DTPIO            ADDRESS INPUT BUFFER                 OS204100
TTR14    LA    R7,1(R7)            BUMP LOGICAL REC COUNT               OS204200
         LH    R1,MOVECT           NUMBER OF MOVES PER LOG REC          OS204300
         LTR   R1,R1               DO WE NEED FULL MOVES ?              OS204400
         BZ    MOVREC2             NO, JUST SHORT MOVE                  OS204500
MOVREC   MVC   0(256,R3),0(R2)     LOGICAL REC FROM IN TO OUT BUFFER    OS204600
         LA    R2,256(R2)          BUMP INPUT BUFFER ADDRESS            OS204700
         LA    R3,256(R3)          BUMP OUTPUT BUFFER ADDRESS           OS204800
         BCT   R1,MOVREC                                                OS204900
MOVREC2  B     TTR15               BRANCH IF ALL OF RECORD MOVED        OS205000
         SR    R1,R1               CLEAR REGISTER                       OS205100
         IC    R1,TTRSHORT         LNTH-1 OF REMAINING PART OF REC      OS205200
         EX    R1,MOVREC3          MOVE IT                              OS205300
         LA    R1,1(R1)            BUMP LNTH-1 TO LNTH                  OS205400
         AR    R2,R1               ADD IT TO INPUT BUFFER               OS205500
         AR    R3,R1               ADD IT TO OUTPUT BUFFER              OS205600
TTR15    C     R3,OTEND            IS OUTPUT BUFFER FULL ?              OS205700
         BL    TTR16               NO                                   OS205800
         BAL   R8,TPOT             YES, EMPTY IT                        OS205900
         TM    OTEOR,1             IS THIS END OF REEL ?                OS206000
         BZ    NOTERR              NO                                   OS206100
         BAL   R9,NEWTAPOT         YES, GO GET ANOTHER TAPE MOUNTED     OS206200
NOTERR   L     R3,OTTPCCW          RESET POINTER TO BEGIN OF BUFFER     OS206300
         LA    R3,0(R3)            DROP HIGH ORDER BYTE                 OS206400
TTR16    C     R2,INEND            IS INPUT BUFFER EMPTY ?              OS206500
         BL    TTR14               NO, GO MOVE NEXT RECORD              OS206600
         BE    TTR12               YES, GO READ NEXT TAPE BLOCK         OS206700
WRGLNREC MVC   CONIO(6),SYSITMSG+8     'INPUT '                         OS206800
WRGLNRC1 MVC   CONIO+6(15),BADLTH      ' BLOCK EXCEEDS '                OS206900
         MVC   CONIO+21(38),BLOCKMSG   'FIRST BLOCK OR NOT MULTIPLE...  OS207000
         MVC   UCODE(3),U500       SET U500 ABEND FOR THIS COND.        OS207100
         B     WRGLNTC1                                                 OS207200
TTBAD    CLI   CNTRLSW,X'FF'       BAD DATA, IS THIS CONTROL CARDS ?    OS207300
         BE    BADCTL              YES                                  OS207400
         MVI   P,0                 NO                                   OS207500
         BR    R4                  TURN OFF STRING PARAMETER & RETRY    OS207600
TTRLAST  L     R1,OTTPCCW          ADDRESS OF OUTPUT BUFFER             OS207700
         SR    R3,R1               RESULTS EQUAL ACTIVE BUFFER LNTH     OS207800
         LA    R3,0(R3)            DROP HIGH-ORDER BYTE                 OS207900
         LTR   R3,R3               IS BUFFER EMPTY ?                    OS208000
         BZ    TTRDONE             YES                                  OS208100
         STH   R3,OTTPCCW+6        NO, LNTH FOR LAST WRITE              OS208200
         BAL   R8,TPOT             EMPTY BUFFER                         OS208300
TTRDONE  BAL   R9,TPMKMSG          GO LOG REC COUNT & WRITE T.M.        OS208400
         B     CONSOLE             RETURN TO DITTO FUNCTION             OS208500
TPMKMSG  BAL   RA,LTMKR            WRITE OUTPUT TAPE MARK               OS208600
         MVC   CONIO+8(16),LGRCDMSG    ' LOGICAL RECORDS'               OS208700
         MVC   CONIO+24(16),TMCOPIED   ' AND T. M. COPIED'              OS208800
         MVI   ESW,X'00'           ALLOW LEADING ZEROS                  OS208900
         BAL   R8,DECCVT           CONVERT REG 7 TO DECIMAL             OS209000
         MVC   CONIO(8),HOLDSEQ    RESULTS TO PRINT AREA                OS209100
         LA    R4,40                                                    OS209200
         B     IOCNT1              GO LOG RECORD COUNT                  OS209300
TTRSHORT DS    CL1                                                      OS209400
FRSBLKCT DS    CL2                 RESID. CNT OF 1ST I/P BLK IN TTR RTN OS209500
MOVECT   DS    H                                                        OS209600
INEND    DS    F                                                        OS209700
OTEND    DS    F                                                        OS209800
MOVREC3  MVC   0(1,R3),0(R2)       MODIFIED BY EXECUTE                  OS209900
         EJECT                                                          OS210000
*********************************************************************** OS210100
**********              TAPE RECORD LOAD                    *********** OS210200
*********************************************************************** OS210300
         SPACE 2                                                        OS210400
TPRLD    CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS210500
         BE    BADCTL              YES, INVALID FUNCTION                OS210600
         BAL   R8,DHDG                                                  OS210700
         BAL   R7,ITMSG            GET INPUT TAPE ADDRESS               OS210800
         BAL   R7,OTMSG            GET OUTPUT TAPE ADDRESS              OS210900
         SR    R7,R7               CLEAR BLOCK COUNTER                  OS211000
HOWFAR   MVC   CONIO(6),BLKMSG                                          OS211100
         MVI   WCNCCW+7,X'06'                                           OS211200
         MVI   RCNCCW+7,X'04'                                           OS211300
         BAL   R8,WRTCON           NBLKS MSG TO SYSLOG                  OS211400
         LA    RC,4(R0)                                                 OS211500
         LA    RB,CONIO                                                 OS211600
         BAL   R8,TSTNUMV          IS IT NUMERIC ?                      OS211700
         B     HOWFAR              NO                                   OS211800
         MVC   HOLD+4(4),CONIO     YES, CONVERT TO                      OS211900
         BAL   R8,BINCVT           BINARY                               OS212000
         LR    R2,R1                                                    OS212100
         CLC   CONIO(4),ZEROS      IS IT ZERO ?                         OS212200
         BE    HOWFAR              YES, RESTART                         OS212300
WHICHWAY MVC   CONIO(24),DIRECT                                         OS212400
         MVI   WCNCCW+7,X'18'                                           OS212500
         MVI   RCNCCW+7,X'01'                                           OS212600
         BAL   R8,WRTCON           'DIRECTION F OR B ?' MSG TO SYSLOG   OS212700
         CLI   CONIO,C'B'          COPY BACKWARD ?                      OS212800
         BE    COPYB               YES                                  OS212900
         CLI   CONIO,C'F'          COPY FORWARD ?                       OS213000
         BE    COPYF               YES                                  OS213100
         MVI   P,0                 NO, TURN OF STRING PARAMS            OS213200
         B     WHICHWAY            LOOP & ASK AGAIN                     OS213300
COPYF    MVI   INTPCCW,X'02'       SET CCWS TO COPY                     OS213400
         MVI   OTTPCCW,X'01'       FORWARD                              OS213500
         MVI   TRLSW+1,X'F0'       SET 'TT' EXIT SW ON                  OS213600
         LA    R3,1(R0)            # FILES = 1                          OS213700
FLOOP    B     TTCOM               EXIT TO TAPE TO TAPE                 OS213800
TRLRT    BCT   R2,FLOOP            AND LOOP UNTIL DONE                  OS213900
         MVI   OTTPCCW,X'27'                                            OS214000
         BAL   R8,OVFLO                                                 OS214100
         BAL   R8,TPOT             BACKSPACE OUTPUT TAPE IN CASE WE     OS214200
         MVI   OTTPCCW,X'01'       ALTER RECORD IN CORE AND REWRITE     OS214300
         LR    R3,R5                                                    OS214400
         MVI   DPSW,X'FF'                                               OS214500
         LA    RA,DTPIO            I/O AREA                             OS214600
         BAL   R8,DECCVT                                                OS214700
         MVC   TBLK+5(5),HOLDSEQ+3                                      OS214800
         MVC   HDG1(10),TBLK                                            OS214900
         ST    R7,SAV              SAVE COUNT OF BLOCKS                 OS215000
         LR    R7,R5                                                    OS215100
         BAL   R8,DECCVT                                                OS215200
         MVC   HDG1+13(10),DATB        SET UP PRINT HDG.                OS215300
         MVC   HDG1+18(5),HOLDSEQ+3                                     OS215400
         BAL   RB,DEBLOK           GO HEX PRINT TAPE RECORD             OS215500
RIGHTREC MVC   CONIO(11),DESIRED                                        OS215600
         MVC   CONIO+11(10),CHNGMSG+16                                  OS215700
         MVI   WCNCCW+7,X'15'                                           OS215800
         MVI   RCNCCW+7,X'01'                                           OS215900
         BAL   R8,WRTCONP                                               OS216000
         L     R7,SAV                                                   OS216100
         CLI   CONIO,C'N'                                               OS216200
         BE    TRLRET              ANSWER NO, GO COPY AGAIN             OS216300
         CLI   CONIO,C'Y'                                               OS216400
         BNE   RIGHTREC                                                 OS216500
         LA    R1,TRLRET           ANSWER YES, SAVE REGS                OS216600
         STM   R1,RE,SAVREGS       AND EXIT TO TAPE ERROR ROUTINE       OS216700
         B     CHNGIT              TO ALTER RECORD                      OS216800
TRLRET   NOP   TRLRET1                                                  OS216900
TRLRET1  STH   R5,OTTPCCW+6                                             OS217000
         BAL   R8,TPOT             WRITE UPDATED RECORD ON OUTPUT TAPE  OS217100
         B     HOWFAR              LOOP AND ASK IF DONE                 OS217200
COPYB    MVI   INTPCCW,X'27'                                            OS217300
         MVI   OTTPCCW,X'27'       SET UP TO BACKSPACE BOTH TAPES       OS217400
         SR    R7,R2               DECREMENT BLK COUNTER BY # OF BLOCKS OS217500
BLOOP    BAL   R8,INTP                                                  OS217600
         BAL   R8,TPOT                                                  OS217700
         BCT   R2,BLOOP            LOOP UNTIL BACKSPACED DESIRED AMOUNT OS217800
         LA    R2,1(R0)                                                 OS217900
         B     COPYF               GO PRINT LAST RECORD                 OS218000
         EJECT                                                          OS218100
*********************************************************************** OS218200
**********                   TAPE RECORD SCAN               *********** OS218300
*********************************************************************** OS218400
         SPACE 1                                                        OS218500
TRSCAN   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS218600
         BE    BADCTL              VALID FUNCTION FOR CONSOLE ONLY      OS218700
         BAL   R8,DHDG                                                  OS218800
         MVI   TRSRETSW+1,X'F0'        SET SW FOR RETURN                OS218900
         B     TP0                     GO USE TP CODE                   OS218910
TRSRETRN MVI   TRSRETSW+1,X'00'        RESET TRSRETSW TO NOP            OS218920
         L     R2,DSL              MAX REC LNTH FOR VARIABLE RECORD     OS219000
TRSDRS   MVC   CONIO(16),RECSIZ                                         OS219100
         MVI   WCNCCW+7,X'10'                                           OS219200
         MVI   RCNCCW+7,X'05'                                           OS219300
         BAL   R8,WRTCON           MSG ' LOGICAL REC LENGTH ?'          OS219400
         LA    R0,4                LNTH OF COUNT FIELD =4, VAR. RECDS   OS219500
         CLI   CONIO,C'V'          RECSIZE=V ? (VARIABLE RECORDS)       OS219600
         BE    TRSVAR              YES                                  OS219700
         LA    RB,CONIO                                                 OS219800
         LA    RC,5(R0)                                                 OS219900
         BAL   R8,TSTNUMV          IS LOG. REC LN. NUMERIC ?            OS220000
         B     TRSDRS              NO, RESTART                          OS220100
         MVC   HOLD+3(5),CONIO                                          OS220200
         BAL   R8,BINCVT           YES, CONVERT TO BINARY               OS220300
         LR    R2,R1               REG 2 HAS LOG. RE. LENGTH            OS220400
         LA    R0,0                LNTH OF COUNT FIELD =0, FIXED LNTH   OS220500
TRSVAR   STH   R0,HBF              STORE LNGTH OF COUNT FIELD           OS220600
SCANLTH  MVC   CONIO(25),LNTHMSG   'LNTH SCAN ARGUMENT (1-35)'          OS220700
         MVI   WCNCCW+7,X'19'                                           OS220800
         LA    RB,CONIO                                                 OS220900
         MVI   RCNCCW+7,X'02'                                           OS221000
         BAL   R8,WRTCON           MSG 'LENGTH OF SCAN ARGUMENT ?'      OS221100
         MVI   P,0                                                      OS221200
         LA    RC,2(R0)                                                 OS221300
         BAL   R8,TSTNUMV          SCAN LNGTH NUMERIC ?                 OS221400
         B     SCANLTH             NO                                   OS221500
         MVC   ALTCT+6(2),CONIO                                         OS221600
         MVC   HDG1(13),SCANMSG2+1     'SCAN ARGUMENT'                  OS221700
         MVC   HDG1+14(7),DATH     SET UP PRINT HEADINGS                OS221800
         MVC   HDG1+19(2),CONIO                                         OS221900
         MVC   HOLD+6(2),CONIO                                          OS222000
         BAL   R8,BINCVT                                                OS222100
         LA    R8,35(R0)                                                OS222200
         CR    R1,R8               SCAN LENGTH EXCEED 35 ?              OS222300
         BH    SCANLTH             YES, RESTART                         OS222400
         LTR   R1,R1               SCAN LN. = 0 ?                       OS222500
         BZ    SCANLTH             YES, RESTART                         OS222600
         LR    R3,R1                                                    OS222700
         LR    R5,R3               REG 5 HAS SCAN LENGTH                OS222800
SCANST   MVC   CONIO(29),SDPMSG                                         OS222900
         MVI   WCNCCW+7,X'1D'                                           OS223000
         MVI   RCNCCW+7,X'05'                                           OS223100
         BAL   R8,WRTCON           MSG 'START POS. OF SCAN FIELD ?'     OS223200
         LA    RC,5(R0)                                                 OS223300
         LA    RB,CONIO                                                 OS223400
         BAL   R8,TSTNUMV          IS IT NUMERIC                        OS223500
         B     SCANST              NO, RESTART                          OS223600
         MVC   HOLD+3(5),CONIO                                          OS223700
         BAL   R8,BINCVT           CONVERT TO BINARY                    OS223800
         LTR   R1,R1               IS IT ZERO ?                         OS223900
         BZ    SCANST              YES, RESTART                         OS224000
         LR    R4,R1               REG 4 HAS SCAN DISPLACEMENT          OS224100
         SR    R0,R0                                                    OS224200
         LA    R9,PRTIO                                                 OS224300
         BCTR  R4,0                DECREMENT SCAN DISPLACEMENT BY 1     OS224400
         LR    RA,R4                                                    OS224500
         CLI   TYP,X'01'           IS THIS DISK SCAN FOR EOF ?          OS224600
         BE    SCANOK              YES, BYPASS LENGTH CHECK             OS224700
         AR    R4,R5               ADD SCAN LN. TO SCAN DISPLACEMENT    OS224800
         CR    R2,R4               TOTAL EXCEED REC LN. ?               OS224900
         BNL   SCANOK              NO                                   OS225000
         MVC   CONIO(28),LNGTHMSG  'LENGTH EXCEEDS END OF RECORD'       OS225100
         MVI   WCNCCW+7,X'1C'                                           OS225200
         BAL   R8,WCON2            YES, ISSUE MSG AND RESTART           OS225300
         CLI   TYP,X'02'           IS THIS DISK SCAN ON KEY ?           OS225400
         BE    SCANLTH             YES, RESTART WITHOUT REC LN.         OS225500
         B     TRSDRS              ELSE RESTART FOR BOTH                OS225600
SCANOK   MVC   DECKNAME(5),ALTCT       CHANGE MSG TO 'ENTER ...'        OS225700
         BAL   R4,LNTHOK           GO GET SCAN ARGUMENT DATA            OS225800
         STC   R5,PRLTH                                                 OS225900
         CLI   TYP,X'00'           IS DISK SCAN USING CODING ?          OS226000
         BNE   DRS1                YES, THEY EXIT HERE                  OS226100
         MVC   DTPIO(35),PRTIO     SAVE SCAN ARG                        OS226200
         BAL   R8,OVFLO                                                 OS226300
         BCTR  R5,0                MODIFY COMPARE LN WITH SCAN LN - 1   OS226400
         STC   R5,SCANCHK+1                                             OS226500
         LR    R5,RA               SAVE REG 10                          OS226600
         LA    RA,DTPIO                                                 OS226700
         BAL   R9,HEXDP            GO HEX DUMP SCAN ARG.                OS226800
         LR    RA,R5               REG 10 = SCAN DISPLACEMENT           OS226900
         MVC   HDG1(35),DTPIO          SAVE SCAN ARG                    OS227000
         SR    R7,R7               ZERO BLOCK COUNTER                   OS227100
SCANIN   BAL   R8,INTP             READ TAPE                            OS227200
         CLI   TMSW,X'FF'          EOF ?                                OS227300
         BNE   SCANIN2             NO, BRANCH & CONTINUE                OS227400
         MVC   CONIO(14),=C'NO MATCH FOUND'                             OS227500
         MVI   WCNCCW+7,X'0E'                                           OS227600
         BAL   R8,WCON2            PRNT 'NO MATCH FOUND'                OS227700
         B     CONSOLE             WE ARE DONE                          OS227800
SCANIN2  LA    R7,1(R7)            BUMP BLOCK COUNT                     OS227900
         SR    RC,RC               CLEAR LRECL CTR                      OS227910
         SR    R4,R4                                                    OS228000
         L     R5,DSL                                                   OS228100
         S     R5,TPLNTH           LESS RESIDUAL COUNT = LNTH READ      OS228200
         CLC   INTPCSW+5(2),DSL    BLOCK EXCEED BUFFER ?                OS228300
         BE    WRGLNTC             YES, EXIT                            OS228400
         LA    R1,DTPIO            POINT TO BEGIN OF BUFFER             OS228500
         AH    R1,HBF              HBF=LNTH OF COUNT FIELD              OS228600
         AH    R4,HBF                 =4 FOR VARIABLE, =0 FOR FIXED LN  OS228700
SCANLOOP LH    R8,HBF                                                   OS228800
         LA    RC,1(RC)            BUMP  LRECL CTR                      OS228810
         LTR   R8,R8               HBF = 0 ?                            OS228900
         BZ    SCANLOP1            YES, THIS IS FIXED LNTH RECORDS      OS229000
         MVI   SCANVSW+1,X'F0'     SET SW TO BR IN FIXED LENGTH SCAN    OS229100
         SR    R2,R2               NO, UPDATE R2 WITH LOGICAL LNTH      OS229200
         IC    R2,0(R1)             OF VARIABLE RECORD                  OS229300
         SLL   R2,8                                                     OS229400
         IC    R2,1(R1)                                                 OS229500
         AR    R4,R2               CNT BUF PTR, R4=(LOG.DATA+4+4)       OS229600
         LA    R0,4                DECREMENT R2 TO                      OS229700
         SR    R2,R0               DATA PORTION OF VAR. BLK. FORMAT     OS229800
         LA    R1,4(R1)            BUMP PAST COUNT FIELD                OS229900
SCANLOP1 LR    R3,R1               POINT TO BEGIN OF LOGICAL RECORD     OS230000
         AR    R3,RA               ADD SCAN DISPLACEMENT - 1            OS230100
SCANCHK  CLC   0(1,R3),HDG1        MATCH ?                              OS230200
         BE    SCANHIT             YES,                                 OS230300
         AR    R1,R2               NO, BUMP TO NEXT LOGICAL RECORD      OS230400
SCANVSW  BC    0,SCNBUFCK          BR IF SCAN IS VAR.BLK.               OS230500
         AR    R4,R2               DO ONLY IN FIXED LENGTH SCAN         OS230600
SCNBUFCK CR    R5,R4               ARE WE AT END OF BUFFER ?            OS230700
         BH    SCANLOOP            NO, LOOP & CHECK NEXT LOG. REC.      OS230800
         B     SCANIN              YES, GO GET NEW BLOCK                OS230900
SCANHIT  MVI   DPSW,X'FF'          SET HEX DUMP SWITCH ON               OS231000
         MVC   HDG1(35),BLANKS         CLEAR ARG FROM SAVE AREA         OS231010
         LR    R9,R1                   SAVE R1 (PTR TO LREC IN DTPIO)   OS231020
         BAL   R8,DECCVT           CONVERT BLK # TO EBCDIC              OS231100
         MVC   HDG1(10),TBLK       SET UP HEADINGS                      OS231200
         MVC   HDG1+5(5),HOLDSEQ+3                                      OS231300
         LR    R7,R5               BLOCK LENGTH                         OS231500
         BAL   R8,DECCVT           CONVERT TO EBCDIC                    OS231600
         MVC   HDG1+13(10),DATH                                         OS231700
         MVC   HDG1+18(5),HOLDSEQ+3                                     OS231800
         MVC   CONIO,HH1           HDG TO PRINT AREA                    OS231900
         MVC   CONIO+63(23),HDG1       BLK CT & LN                      OS231910
         MVI   PL,132                  PRT LN                           OS231920
         BAL   R8,PRNT             PRINT HEADING                        OS231930
         LR    R7,RC               RECORD #                             OS231940
         MVC   HDG1(10),DREC           HDG                              OS231950
         BAL   R8,DECCVT           CNVRT TO DEC                         OS231960
         MVC   HDG1+5(5),HOLDSEQ+3     REC # IN HDG                     OS231970
         LR    R7,R2               LRECL                                OS231980
         BAL   R8,DECCVT               CNVRT TO DEC                     OS231990
         MVC   HDG1+18(5),HOLDSEQ+3    LRECL IN HDG                     OS232000
         LR    R3,R2                   LRECL FOR DE BLOCK & PRT         OS232010
         LR    RA,R9                   POINT TO LREC IN DTPIO           OS232020
         BAL   RB,DEBLOK               GO PRT                           OS232030
         B     CONSOLE                 ALL DONE                         OS232040
         EJECT                                                          OS232400
*********************************************************************** OS232500
**********         TAPE CONTROL AND MISC. FUNCTIONS         *********** OS232600
*********************************************************************** OS232700
         SPACE 1                                                        OS232800
IOCNT    MVI   ESW,X'00'           BEGIN 'LOG CARD COUNT MSG' ROUTINE   OS232900
         BAL   R8,DECCVT           REG 7 CONTAINS COUNT                 OS233000
         MVC   CONIO(8),HOLDSEQ                                         OS233100
         MVC   CONIO+8(10),=C' I/O CARDS'                               OS233200
         LA    R4,18                                                    OS233300
         LA    R9,CONSOLE          RETURN ADDRESS                       OS233400
IOCNT1   CLI   CONIO,C' '                                               OS233500
         BNE   IOCNT2                                                   OS233600
         MVC   CONIO(40),CONIO+1   LEFT JUSTIFY MSG                     OS233700
         BCT   R4,IOCNT1                                                OS233800
IOCNT2   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS233900
         BE    IOCNTLST            YES, LOG ON SYSPRINT                 OS234000
         STC   R4,WCNCCW+7         NO, LOG ON CONSOLE                   OS234100
         BAL   R8,WCON2                                                 OS234200
         BR    R9                  RETURN                               OS234300
IOCNTLST BAL   R8,OVFLO                                                 OS234400
         STC   R4,PL                                                    OS234500
         BAL   R8,PRNT                                                  OS234600
         BR    R9                  END 'LOG CARD COUNT MSG'             OS234700
NEWTAPOT EQU   *                                                        OS234800
         MVC   CONIO(27),NWTPMSG                                        OS234900
         MVI   WCNCCW+7,X'1B'                                           OS235000
         BAL   R8,WCON2            'MOUNT NEW OUTPUT TAPE...'           OS235100
         OI    OTTPDCB+48,X'80'    SET OFLGS BIT TO WTM ON EOV MACRO    OS235200
         EOV   OTTPDCB             ISSUE EOV TO REWIND & UNLOAD         OS235300
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS235400
         BR    R9                  END MULTIPLE TAPE OUTPUT             OS235500
DHDG     NOPR  R8                  PRINT  OS/DITTO HEADING              OS235600
         OI    *-1,X'F0'           1ST TIME ONLY                        OS235700
         ST    R8,SAVREGS+32       SAVE RETURN REGISTER                 OS235800
         BAL   R8,OVFLO                                                 OS235900
         MVI   CC,X'1B'                                                 OS236000
         MVI   CONIO,C' '                                               OS236100
         MVC   CONIO+1(131),CONIO                                       OS236200
         MVI   PL,X'84'            TRIPLE SPACE                         OS236300
         BAL   R8,PRNT             4                                    OS236400
         BAL   R8,PRNT             TIMES                                OS236500
         BAL   R8,PRNT                                                  OS236600
         BAL   R8,PRNT                                                  OS236700
         MVI   CC,X'09'                                                 OS236800
LL1      MVC   D1((6*L+6*S)-7),D1-1    PRINT LINE 1, -7 ADJUSTS FOR OS  OS236900
         MVC   OO1(L),OO1-1                                             OS237000
         MVI   DD1,C'D'                                                 OS237100
         MVC   DD2(L-2),DD1                                             OS237200
         MVI   O2,C'O'                                                  OS237300
         MVC   O3(L-3),O2                                               OS237400
         MVI   S2,C'S'                                                  OS237500
         MVC   S3(L-3),S2                                               OS237600
         MVC   OO1(L),O1                                                OS237700
         MVI   I1,C'I'                                                  OS237800
         MVC   I2(L-1),I1                                               OS237900
         BCR   0,R1                                                     OS238000
         OI    *-1,X'F0'                                                OS238100
         MVI   T1,C'T'                                                  OS238200
         MVC   T2(L-1),T1                                               OS238300
         MVC   TT1(L),T1                                                OS238400
         MVC   X+L-01(2),=C'* '                                         OS238500
         BAL   R8,PRNT                                                  OS238600
LL2      MVC   DD2(L-1),DD1         PRINT LINE 2                        OS238700
         MVI   O1,C'O'                                                  OS238800
         MVC   O2(L-1),O1                                               OS238900
         MVI   S1,C'S'                                                  OS239000
         MVC   S2(L-1),S1                                               OS239100
         MVI   I1,C'I'                                                  OS239200
         MVC   I2(L-1),I1                                               OS239300
         MVC   OO1(L),O1                                                OS239400
         BCR   0,R1                                                     OS239500
         OI    *-1,X'F0'                                                OS239600
         MVC   X+L-02(2),=C'* '                                         OS239700
         BAL   R8,PRNT                                                  OS239800
         MVC   DD3(L-4),BLANKS                                          OS239900
         MVC   O3(L-4),BLANKS                                           OS240000
         MVC   S3(L-4),BLANKS                                           OS240100
         MVC   OO1(L),O1                                                OS240200
         MVC   I1(L/2-1),BLANKS                                         OS240300
         MVC   I1+L/2+1(L),BLANKS                                       OS240400
         MVC   T1+L/2+1(L),BLANKS                                       OS240500
         MVC   TT1(L),T1                                                OS240600
         MVC   X+L-03(2),=C'* '                                         OS240700
         BAL   R8,PRNT             PRINT LINE 3                         OS240800
         MVC   S3+1(L),S3                                               OS240900
         MVC   X+L-04(2),=C'* '                                         OS241000
         BAL   R8,PRNT             PRINT LINE 4                         OS241100
         MVC   X+L-05(2),=C'* '                                         OS241200
         BAL   R8,PRNT             PRINT LINE 5                         OS241300
         MVC   S2(L-2),S1                                               OS241400
         MVC   X+L-06(2),=C'* '                                         OS241500
         BAL   R8,PRNT             PRINT LINE 6                         OS241600
         MVI   S1,C' '                                                  OS241700
         MVI   S1+L-1,C'S'                                              OS241800
         MVC   X+L-07(2),=C'* '                                         OS241900
         BAL   R8,PRNT             PRINT LINE 7                         OS242000
         MVC   S2(L-3),S1                                               OS242100
         MVC   X+L-08(2),=C'* '                                         OS242200
         BAL   R8,PRNT             PRINT LINE 8                         OS242300
         MVC   X+L-09(2),=C'* '                                         OS242400
         BAL   R8,PRNT             PRINT LINE 9                         OS242500
         MVI   S1,C'S'                                                  OS242600
         MVI   S2,C'S'                                                  OS242700
         MVC   X+L-10(2),=C'* '                                         OS242800
         BAL   R8,PRNT             PRINT LINE 10                        OS242900
         BAL   R1,LL2                                                   OS243000
         MVC   X+L-11(2),=C'* '                                         OS243100
         BAL   R8,PRNT             PRINT LINE 11                        OS243200
         BAL   R1,LL1                                                   OS243300
         MVC   X+L-12(2),=C'* '                                         OS243400
         MVI   CC,X'19'                                                 OS243500
         BAL   R8,PRNT             PRINT LINE 12                        OS243600
         MVC   D1(124),D1-1                                             OS243700
         MVC   D1+41(39),COPYRT                                         OS243800
         BAL   R8,PRNT                                                  OS243900
         MVC   D1(124),D1-1                                             OS244000
         MVC   D1+48(5),=C'DATE='                                       OS244100
         MVC   D1+53(6),DATESAVE   GET DATE FROM TIME MACRO SAVE AREA   OS244200
         MVC   D1+60(12),COPYRT+48     'OS/DITTO-00?'     MAINT. VER.   OS244202
         BAL   R8,PRNT             PRINT IT                             OS244300
         L     R8,SAVREGS+32       LOAD RETURN REGISTER                 OS244400
         BR    R8                  RETURN                               OS244500
LTMK     LA    RA,CONSOLE          WRITE LAST TAPE MARK ROUTINE         OS244600
LTMKR    MVI   OTTPCCW,X'1F'                                            OS244700
         BAL   R8,TPOT                                                  OS244800
         MVI   OTTPCCW,X'01'                                            OS244900
         BR    RA                                                       OS245000
REWTP    MVI   OTTPCCW,X'07'       REWIND TAPE                          OS245100
         B     TPCT                                                     OS245200
RUNTP    EQU   *                       REWIND & UNLOAD VIA CLOSE MACRO/ OS245300
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS245400
         BE    TPCT1RN                 YES                              OS245500
         TM    CT,X'40'                NO, OUTPUT TAPE GIVEN ?          OS245600
         BNO   BADCTL                                                   OS245700
         B     GOTTCTRN                                                 OS245800
TPCT1RN  BAL   R7,OTMSG                                                 OS245900
GOTTCTRN CLI   OTONINSW,X'FF'          CLOSE TAPEIN ?                   OS246000
         BE    SETCLSIT                YES GO SET CLOSE TAPEIN SW       OS246100
SETCLSOT MVI   CLOSOTSW+1,X'00'        SET SW TO FALL THRU AFTER CLOSE  OS246200
         B     CLOSOTTP                                                 OS246300
SETCLSIT MVI   CLOSITSW+1,X'00'        SET SW TO FALL THRU AFTER CLOSE  OS246400
         B     CLOSINTP                                                 OS246500
ERASETP  MVI   OTTPCCW+7,1         3420 ERASE TAPE                      OS246600
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS246700
         BE    BADCTL              YES, INVALID                         OS246800
         BAL   R7,OTMSG            GET TAPE ADDRESS                     OS246900
ERT1     LA    R1,ERTCCW                                                OS249000
         ST    R1,OTTPCCWA                                              OS249100
         MVC   ERTCCW(1),MSOCCW    GET MODE SET                         OS249200
         BAL   R8,TPOT             ERASE TAPE                           OS249300
         B     CONSOLE             RETURN                               OS249400
WTMK     MVI   OTTPCCW,X'1F'       WRITE TAPE MARK                      OS249500
         B     TPCT                                                     OS249600
BSPF     MVI   OTTPCCW,X'2F'       BACK SPACE TAPE FILE                 OS249700
         MVI   INTPCCW+4,X'60'     SET CD TO NOP FOR BSF,BSR,FSR        OS249701
         MVI   OTTPCCW+4,X'60'     SET CD TO NOP FOR BSF,BSR,FSR        OS249702
         B     NFILMSG                                                  OS249800
FSPF     MVI   OTTPCCW,X'3F'       FORWARD SPACE TAPE FILE              OS249900
NFILMSG  CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS250000
         BE    TPCT                YES                                  OS250100
         MVC   DECKNAME,FILNUM     # FILES TO MESSAGE AREA              OS250200
         B     NTAPMSG                                                  OS250300
FSPR     MVI   OTTPCCW,X'37'       FORWARD SPACE TAPE RECORD            OS250400
         B     NBLKMSG0            GO SET CD NOP                        OS250500
BSPR     MVI   OTTPCCW,X'27'       BACK SPACE TAPE RECORD               OS250600
NBLKMSG0 EQU   *                                                        OS250601
         MVI   INTPCCW+4,X'60'     SET CD TO NOP FOR BSF,BSR,FSR        OS250602
         MVI   OTTPCCW+4,X'60'     SET CD TO NOP FOR BSF,BSR,FSR        OS250603
NBLKMSG  CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS250700
         BE    TCNTSAV             YES,                                 OS250800
         MVC   DECKNAME,BLANKS     CLEAR POSITION  7                    OS250900
         MVC   DECKNAME(6),BLKMSG  # BLKS TO MESSAGE AREA               OS251000
NTAPMSG  BAL   R7,OTMSG            GET OUTPUT TAPE                      OS251100
NBLKMSG1 MVC   CONIO(7),DECKNAME   CONSOLE MESSAGE                      OS251200
         MVI   WCNCCW+7,X'07'                                           OS251300
         MVI   RCNCCW+7,X'04'                                           OS251400
         BAL   R8,WRTCON           WRITE ON SYSLOG                      OS251500
         LA    RC,4(R0)                                                 OS251600
         LA    RB,CONIO                                                 OS251700
         BAL   R8,TSTNUMV          WAS IT NUMERIC ?                     OS251800
         B     NBLKMSG1                                                 OS251900
         B     TCNTCOM             YES,                                 OS252000
TCNTSAV  MVC   CONIO(4),HNB        GET CONTROL CARD NBLOCKS             OS252100
         TM    CT,X'20'            WAS IT GIVEN ?                       OS252200
         BZ    TPCT                NO, DEFAULT IS 1                     OS252300
         TM    CT,X'60'            OUTPUT TAPE GIVEN ?                  OS252400
         BNO   BADCTL              NO, BAD , BAD                        OS252500
TCNTCOM  LA    RC,4(R0)                                                 OS252600
         CLC   CONIO(4),ZEROS      WAS IT ZERO ?                        OS252700
         BNE   NOZER                                                    OS252800
         MVI   CONIO,C'X'          YES, MAKE IT BAD                     OS252900
NOZER    LA    RB,CONIO                                                 OS253000
         BAL   R8,TSTNUM           IS IT NUMERIC ?                      OS253100
         B     NBLKMSG1                                                 OS253200
         MVC   HOLD+4(4),CONIO     YES, CONVERT TO BINARY               OS253300
         BAL   R8,BINCVT           REG 5 = # BLKS                       OS253400
         LR    R5,R1                                                    OS253500
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS253700
         BE    GOTTCT              YES                                  OS253800
         B     TPCTO               BRANCH AROUND BLKS=1                 OS253900
TPCT     LA    R5,1(R0)            SET DEFAULT = 1                      OS254000
TPCTO    EQU   *                                                        OS254100
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS254200
         BE    TPCT1               YES,                                 OS254300
         LA    R8,OTTPCCW          NO, SET CCW'S TO BYPASS MODE SET     OS254400
         ST    R8,OTTPCCWA                                              OS254500
         TM    CT,X'40'            OUTPUT TAPE GIVEN ?                  OS254600
         BNO   BADCTL              NO, EXIT                             OS254700
         B     GOTTCT              YES                                  OS254800
TPCT1    BAL   R7,OTMSG            GET CONSOLE OUTPUT TAPE              OS254900
GOTTCT   EQU   *                                                        OS255000
         SR    R7,R7                                                    OS255100
TPCPLP   BAL   R8,TPOT             GO PERFORM TAPE OPERATION            OS255200
         BCT   R5,TPCPLP           NOP WHEN DONE                        OS255300
         MVI   INTPCCW+4,X'20'     SET OFF CD TO NOP AFTER BSF,BSR,FSR  OS255301
         MVI   OTTPCCW+4,X'20'     SET OFF CD TO NOP AFTER BSF,BSR,FSR  OS255302
         B     CONSOLE                                                  OS255400
CANC     CLI   CNTRLSW,X'FF'       CANCEL CARD INPUT FUNCTION           OS255500
         BE    BADCTL              VALID FOR CONSOLE ONLY               OS255600
FLUSHLP  CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        OS255700
         BE    CONSOLE             YES, DONE                            OS255800
         BAL   R8,CDRD             NO, FLUSH RDR                        OS255900
         B     FLUSHLP             UNTIL EOF                            OS256000
         EJECT                                                          OS256100
*********************************************************************** OS256200
**********               CHANGE DISK VOLUME NUMBER          *********** OS256300
*********************************************************************** OS256400
         SPACE 1                                                        OS256500
DSID     CLI   CNTRLSW,X'FF'       VALID FOR CONSOLE ONLY               OS256600
         BE    BADCTL                                                   OS256700
         LINK  EP=DITTODID                                              OS256800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER MACRO        OS256900
         B     CONSOLE             RETURN                               OS257000
NOID     MVC   CONIO(20),NOREC                                          OS257100
         MVI   WCNCCW+7,X'14'                                           OS257200
         BAL   R8,WCON2            LOG 'NO REC FOUND' MSG               OS257300
         B     CONSOLE                                                  OS257400
         EJECT                                                          OS257500
*********************************************************************** OS257600
**********                    DISK RECORD LOAD              *********** OS257700
*********************************************************************** OS257800
         SPACE 1                                                        OS257900
DISKRLD  CLI   CNTRLSW,X'FF'       VALID FOR CONSOLE MODE ONLY          OS258000
         BE    BADCTL                                                   OS258100
         BAL   R8,DHDG                                                  OS258200
         BAL   R7,IDMSG            GET DISK UNIT ADDRESS                OS258300
         MVC   DEVH+8(3),CONIO                                          OS258400
         MVC   HH2(19),DEVH                                             OS258500
         MVC   HH2+13(8),DSKINDD   PLACE DDNAME IN HDG                  OS258600
DRECAD   MVC   CONIO(23),RECADDRS                                       OS258700
         MVI   WCNCCW+7,X'17'                                           OS258800
         MVI   RCNCCW+7,X'0A'                                           OS258900
         BAL   R8,WRTCON           GET ADDRESS 'CCC-HH-RRR'             OS259000
         MVI   P,0                                                      OS259100
         LA    RB,CONIO+7                                               OS259200
         LA    RC,3(R0)                                                 OS259300
         BAL   R8,TSTNUM                                                OS259400
         B     DRECAD                                                   OS259500
         MVC   HOLD+5(3),CONIO+7                                        OS259600
         BAL   R8,BINCVT                                                OS259700
         LTR   R1,R1               REC # = 0 ?                          OS259800
         BZ    DRECAD              YES, INVALID                         OS259900
         LA    R8,255(R0)                                               OS260000
         CR    R1,R8               REC # GREATER THAN 255 ?             OS260100
         BH    DRECAD              YES, INVALID                         OS260200
         STC   R1,LOWLIM+6         STORE RRR IN SEEK ADDRESS            OS260300
         MVC   CONIO+3(2),CONIO+4                                       OS260400
         LA    RB,CONIO            GO VALIDATE CCCHH                    OS260500
         BAL   R9,EDTADR                                                OS260600
         B     DRECAD              INVALID, RESTART                     OS260700
         STH   R0,LOWLIM+2         CCC IN SEEK ADDRESS                  OS261300
         STC   R1,LOWLIM+5         HH IN SEEK ADDRESS                   OS261400
         MVI   DSKDRLSW+1,X'F0'    SET RETURN SW TO A BRANCH            OS261500
         B     FOUNDHA             GO USE DEC CNVRT CODE IN FOUNDHA     OS261600
DRLRET   EQU   *                                                        OS261700
         MVI   DSKDRLSW+1,X'00'    SET RETURN SW TO A NOP               OS261800
         MVC   DCYL+5(3),HOLDSEQ+5 MOVE CCC TO HDG                      OS261900
         MVC   HH2+41(2),BLANKS        BLANK OUT HH MOVED IN BY FOUNDHA OS262000
         MVC   CONIO,HH1                                                OS262100
         BAL   R8,OVFLO                                                 OS262200
         MVI   PL,X'84'                                                 OS262300
         BAL   R8,PRNT             PRINT HDG                            OS262400
         MVI   CC,X'13'                                                 OS262500
         BAL   R8,PRNT                                                  OS262600
         BAL   R4,DSKDEBL          GET DISK REC AND PRINT IT            OS262700
         B     NOID                                                     OS262800
         CLI   EOF,X'10'           IS CODE BEING USED BY 'WRITE EOF' ?  OS262900
         BE    WRTEOFR             YES, THEY EXIT HERE                  OS263000
ALTKEY   LA    R9,DTPIO+8                                               OS263100
         LTR   R2,R2               KEY LENGTH = 0 ?                     OS263200
         BZ    ALTDAT              YES,                                 OS263300
         LTR   R5,R5               IS DATA LENGTH = 0 ?                 OS263400
         BZ    KEYONLY             YES, REC HAS KEY ONLY                OS263500
         MVC   CONIO(5),ALTRMSG                                         OS263600
         MVC   CONIO+5(18),SCANMSG+4                                    OS263700
         MVI   WCNCCW+7,X'17'                                           OS263800
         MVI   RCNCCW+7,X'01'                                           OS263900
         BAL   R8,WRTCONP                                               OS264000
         CLI   CONIO,C'D'          CHANGE DATA ?                        OS264100
         BE    ALTDAT              YES,                                 OS264200
         CLI   CONIO,C'K'          MODIFY KEY ?                         OS264300
         BNE   ALTKEY              NO, RESTART                          OS264400
KEYONLY  MVC   PRTIO(5),LBKEY          MSG '# KEY BYTES TO BE CHANGED ? OS264500
         MVC   PRTIO+5(28),BYTMSG                                       OS264600
         MVC   PRTIO+33(10),BLANKS                                      OS264700
         LR    RA,R9               REG 9 = BEGIN OF KEY                 OS264800
         AR    RA,R2               REG 10 = END OF KEY                  OS264900
         BAL   R4,CHNG             GO ALTER KEY IN CORE                 OS265000
         B     DRLPRT              GO PRINT ALTERED RECORD              OS265100
ALTDAT   LTR   R5,R5               IS DATA LENGTH = 0 ?                 OS265200
         BZ    CONSOLE             YES, MUST BE AN EOF RECORD - INVALID OS265300
         AR    R9,R2                                                    OS265400
         LR    RA,R9               REG 9 = BEGIN OF DATA                OS265500
         AR    RA,R5               REG 10 = END OF DATE                 OS265600
         MVC   PRTIO(6),LBDATA                                          OS265700
         MVC   PRTIO+6(28),BYTMSG                                       OS265800
         BAL   R4,CHNG             GO ALTER DATA REC IN CORE            OS265900
DRLPRT   BAL   R8,OVFLO                                                 OS266000
         MVC   CONIO(27),ALTERMSG                                       OS266100
         MVI   PL,X'1B'                                                 OS266200
         BAL   R8,PRNT             PRNT ALTERED RECORD                  OS266300
         BAL   R4,DRCDEBL                                               OS266400
         B     DRCMSG                                                   OS266500
DRCMSG   MVC   CONIO(26),CHNGMSG                                        OS266600
         MVI   WCNCCW+7,X'1A'                                           OS266700
         MVI   RCNCCW+7,X'01'                                           OS266800
         BAL   R8,WRTCON           MSG 'CHANGES COMPLETE, Y OR N ?      OS266900
         CLI   CONIO,C'Y'                                               OS267000
         BE    WRTDRC              YES, GO REWRITE DISK REC             OS267100
         CLI   CONIO,C'N'                                               OS267200
         BNE   DRCMSG              NEITHER, RE-ASK QUESTION             OS267300
         B     ALTKEY              NO, GO ALTER SOME MORE               OS267400
WRTDRC   EQU   *                                                        OS267500
         LA    R8,DTPIO+8                                               OS267600
         ST    R8,RWCCW                                                 OS267700
         MVI   RWCCW,X'0D'         SET CCW TO WRITE K & D               OS267800
         BAL   R8,DISK             GO DO IT                             OS267900
         TM    DSKS1,X'08'         SUCCESSFUL ?  OR NO RECORD FOUND ?   OS268000
         BO    NOID                NO, BAD DISK                         OS268100
         B     CONSOLE             YES, WE ARE DONE                     OS268200
         EJECT                                                          OS268300
*********************************************************************** OS268400
***********             DISK DUMP  BLK OR UNBLK             *********** OS268500
*********************************************************************** OS268600
         SPACE 1                                                        OS268700
DISKPRT  MVI   LISTSW,X'FF'        DP ENTRY                             OS268710
         B     DISKDP                                                   OS268711
DISKPRTD MVI   LISTSW,X'FF'        DPD ENTRY                            OS268712
         B     DISKDR                                                   OS268713
SPLITPRD MVI   LISTSW,X'FF'        SPD ENTRY                            OS268714
         B     SPLITDR                                                  OS268715
SPLITPRT MVI   LISTSW,X'FF'        SP ENTRY                             OS268716
SPLITDD  MVI   EOF,X'01'           ENTRY - SPLIT CYL. UNBLK             OS268800
         B     DISKDP                                                   OS268900
SPLITDR  MVI   EOF,X'01'           ENTRY - SPLIT CYL. DEBLOCK           OS269000
DISKDR   MVI   DBLSW,X'FF'         ENTRY - FULL CYL. DEBLOCK            OS269100
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS269200
         BE    DISKDP                                                   OS269300
         TM    CT,X'93'                                                 OS269400
         BO    DISKDP                                                   OS269500
         MVI   CT,X'00'                                                 OS269600
DISKDP   MVI   DRSSW,X'00'         TURN OFF DISK REC SCAN EXIT          OS269700
DISKDP1  MVC   HH2(22),DEVH        ENTRY FOR DRS, ENTRY ABOVE FOR DDU   OS269800
         MVC   HH2+22(24),DSKH                                          OS269900
         BAL   R8,DHDG                                                  OS270000
         MVC   HH2+13(8),DSKINDD       MOVE DDNAME TO HDG               OS270100
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS270200
         BE    DSKCON                                                   OS270300
         TM    CT,X'83'                                                 OS270400
         BNO   BADCTL                                                   OS270500
         BAL   R9,DISKCHAR             GO GET DISK CHAR. & PLACE IN HDG OS270600
         MVC   CONIO(5),ADRSLO                                          OS270700
         B     DSPR1                                                    OS270800
DSKCON   BAL   R7,IDMSG            GET DISK UNIT ADDRESS                OS270900
ADDBG    MVC   CONIO(13),BEGINMSG      'CCCHHH - BEGIN'                 OS271000
         MVI   WCNCCW+7,X'0D'                                           OS271100
         MVI   RCNCCW+7,X'05'                                           OS271200
         BAL   R8,WRTCON           GET BEGIN ADDRESS - CCCHH            OS271300
DSPR1    LA    RB,CONIO                                                 OS271400
         MVC   HH2+8(3),DKUCB          MOVE UCB TO HDG                  OS271500
         BAL   R9,EDTADR           GO VALIDATE CCCHH                    OS271600
         B     ADDBG                                                    OS271700
         STH   R0,LOWLIM+2         CCC IN SEEK ADDRESS                  OS272300
         MVI   BEGHD,X'00'                                              OS272400
         CLI   EOF,X'01'           SPLIT CYL. ?                         OS272500
         BNE   DSPR1A              NO, LEAVE TOP TRK = 0                OS272600
         STC   R1,BEGHD            YES, SET TOP TRK = HH                OS272700
DSPR1A   STC   R1,LOWLIM+5         HH IN SEEKADDRESS                    OS272800
         MVC   CONIO(5),ADRSUP                                          OS272900
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      OS273000
         BE    DSPR2                                                    OS273100
ADDEN    MVC   CONIO(11),BEGINMSG      'CCCHH - BEG'                    OS273200
         MVC   CONIO+8(3),EN           MOVE 'END' OVER 'BEG'            OS273300
         MVI   WCNCCW+7,X'0B'                                           OS273400
         MVI   RCNCCW+7,X'05'                                           OS273500
         BAL   R8,WRTCON           GET END ADDRESS - CCCHH              OS273600
DSPR2    BAL   R9,EDTADR           GO VALIDATE IT                       OS273700
         B     ADDEN                                                    OS273800
         STH   R0,UPPLIM+2         STORE CCC                            OS274400
         STC   R1,UPPLIM+5         STORE HH                             OS274500
         CLI   EOF,X'01'           SPLIT CYL ?                          OS274600
         BNE   DRSSW1              NO, LEAVE BOTTOM TRACK ALONE         OS274700
         STC   R1,ENDHD            YES, SET BOTTOM TRK = HH             OS274800
DRSSW    EQU   *+1                 BRANCH CTL SWITCH                    OS274900
DRSSW1   NOP   DRSCAN1             EXIT. IF DRS                         OS275000
         BAL   R8,OVFLO                                                 OS275100
         CLI   DBLSW,X'FF'         DO WE DEBLOCK INTO LOG LNGTH ?       OS275200
         BNE   RO                  NO                                   OS275300
         MVI   CT,X'10'            YES, GO USE 'TP' CODE TO GET LOG LN. OS275400
         B     RSZSWDK             RETURN VIA B TO DISKDR1              OS275500
DISKDR1  ST    R1,SAVRCSZ          LOG REC LNGTH RETURNED IN REG 1,SAVE OS275600
RO       CLC   UPPLIM,LOWLIM       ARE WE DONE ?                        OS275700
         BL    CONSOLE             YES                                  OS275800
         LA    R8,SRCHA            NO, SET TO READ R0 REC               OS275900
         ST    R8,DSKCCWA                                               OS276000
         BAL   R8,DISK             GO READ R0                           OS276100
         TM    DSKS1,X'08'         NO RECORD FOUND ?                    OS276200
         BZ    FOUNDHA             BRANCH, WE FOUND IT                  OS276300
         MVC   CONIO(17),=C'NO HOME ADDRS REC'                          OS276400
         MVI   WCNCCW+7,X'11'                                           OS276500
         BAL   R8,WCON2                                                 OS276600
         B     CONSOLE                                                  OS276700
FOUNDHA  SR    R7,R7                                                    OS276800
         IC    R7,LOWLIM+5         PHYSICAL HEAD #                      OS276900
         MVI   ESW,X'FF'                                                OS277000
         BAL   R8,DECCVT                                                OS277100
         MVC   HH2+41(2),HOLDSEQ+6                                      OS277200
         MVC   DHED+6(2),HOLDSEQ+6                                      OS277300
         LH    R7,LOWLIM+2         PHYSICAL CYL #                       OS277400
         MVI   ESW,X'FF'                                                OS277500
         BAL   R8,DECCVT                                                OS277600
DSKDRLSW BC    0,DRLRET            NOP TIL SET BY DRL FUNCTION          OS277700
         MVC   HH2+31(3),HOLDSEQ+5                                      OS277800
         MVC   DCYL+5(3),HOLDSEQ+5                                      OS277900
         MVC   HH2+52(65),BLANKS                                        OS278000
         LA    R8,SHCCW            RESET IOB TO                         OS278100
         ST    R8,DSKCCWA              READ RN RECORD                   OS278200
         MVC   RWCCW+6(2),DSL+2                                         OS278300
         MVC   LLIMSAVE,LOWLIM     SAVE DISK ADDRESS                    OS278400
         TM    DTPIO,X'03'         DEFECTIVE ALTERNATE TRACK ?          OS278500
         BNO   TRDP                NO,                                  OS278600
         MVC   HH2+46(30),GATRK    DEFECTIVE ALTERNATE TRACK            OS278700
         MVC   HH2+46(9),BPTRK     YES, BUILD HDG.                      OS278800
         MVI   ALTSW,X'FF'                                              OS278900
         B     PRTRO               GO PRNT HDG                          OS279000
TRDP     TM    DTPIO,X'02'         DEFECTIVE PRIMARY TRACK ?            OS279100
         BNO   TROA                NO,                                  OS279200
         MVC   HH2+46(66),BPTRK    DEFECTIVE PRIMARY TRACK              OS279300
         SR    R7,R7               YES,                                 OS279400
         IC    R7,DTPIO+8          GET HH OF ALTERNATE TRACK            OS279500
         MVI   ESW,X'FF'                                                OS279600
         BAL   R8,DECCVT                                                OS279700
         MVC   HH2+110(2),HOLDSEQ+6                                     OS279800
         IC    R7,DTPIO+5          GET CCC OF ALTERNATE TRACK           OS279900
         SLL   R7,8                                                     OS280000
         IC    R7,DTPIO+6                                               OS280100
         MVI   ESW,X'FF'                                                OS280200
         BAL   R8,DECCVT                                                OS280300
         MVC   HH2+99(3),HOLDSEQ+5                                      OS280400
         B     PRTRO               GO PRINT R0 REC                      OS280500
TROA     TM    DTPIO,X'01'         OPERATIVE ALTERNATE TRACK ?          OS280600
         BNO   TROP                NO,                                  OS280700
         MVC   HH2+46(69),GATRK    OPERATIVE ALTERNATE TRACK            OS280800
         SR    R7,R7               YES,                                 OS280900
         IC    R7,DTPIO+8          GET HH OF ORIGINAL TRACK             OS281000
         MVI   ESW,X'FF'                                                OS281100
         BAL   R8,DECCVT                                                OS281200
         MVC   HH2+113(2),HOLDSEQ+6                                     OS281300
         MVC   DHED+6(2),HOLDSEQ+6                                      OS281400
         IC    R7,DTPIO+5          GET CCC OF ORIGINAL TRACK            OS281500
         SLL   R7,8                                                     OS281600
         IC    R7,DTPIO+6                                               OS281700
         MVI   ESW,X'FF'                                                OS281800
         BAL   R8,DECCVT                                                OS281900
         MVC   HH2+102(3),HOLDSEQ+5                                     OS282000
         MVC   DCYL+5(3),HOLDSEQ+5                                      OS282100
         MVC   LOWLIM+2(4),DTPIO+5 RESET SEEK ADDRESS TO ORIGINAL TRACK OS282200
         B     PRTRO               GO PRINT R0                          OS282300
TROP     MVC   HH2+46(28),BPTRK    OPERATIVE PRIMARY TRACK              OS282400
         MVC   HH2+46(9),GATRK     MUST BE OPERATIVE PRIMARY TRACK      OS282500
PRTRO    MVI   PL,X'84'                                                 OS282600
         MVI   CC,X'19'                                                 OS282700
         MVC   CONIO(132),HH1                                           OS282800
         BAL   R8,PRNT             PRINT HEADING USING R0 DATA          OS282900
         SR    R3,R3               CLEAR RRR COUNTER                    OS283000
         CLI   ALTSW,X'FF'         ARE WE ON BAD ALT. TRK ?             OS283100
         BE    BUMPTK              YES, NO DATA HERE - EXIT             OS283200
RN       LA    R3,1(R3)            BUMP TO NEXT COUNT ID                OS283300
         STC   R3,LOWLIM+6         STORE ID RRR IN SEEK ADDRESS         OS283400
         BAL   R4,DSKDEBL          GO GET REC & PRINT IT                OS283500
         B     BUMPTK              NO MORE RECS ON TRACK - EXIT         OS283600
         CLI   TYP,X'00'           DISK REC SCAN USING THIS CODE ?      OS283700
         BNE   DRS3                YES, THEY EXIT HERE                  OS283800
         CLI   DSKEOFSW,X'FF'      EOF ON DISK? SET ONLY IN CTL CD MODE OS283900
         BNE   RNCONT              NO, KEEP GOING                       OS284000
         B     CONSOLE             YES, WE'RE DONE WHEN EOF & CNTRL CDS OS284100
RNCONT   EQU   *                                                        OS284200
         B     RN                  LOOP AND GET NEXT REC                OS284300
BUMPTK   MVC   LOWLIM,LLIMSAVE     RESET SEEK ADDRESS IN CASE           OS284400
         MVI   ALTSW,X'00'           WE WERE READING AN ALT TRACK       OS284500
         CLC   LOWLIM+5(1),ENDHD       LAST TRACK THIS CYL ?            OS284600
         BL    BUMPHD              NO, GO BUMP HEAD                     OS284700
         LH    R3,LOWLIM+2         YES, BUMP CYL BY 1                   OS284800
         LA    R3,1(R3)                                                 OS284900
         STH   R3,LOWLIM+2                                              OS285000
         MVC   LOWLIM+5(1),BEGHD       RESET SEEK ADDRESS TO UPPER TRAC OS285100
         B     RO                  GO READ R0 REC                       OS285200
BUMPHD   IC    R3,LOWLIM+5         BUMP TRACK BY 1                      OS285300
         LA    R3,1(R3)                                                 OS285400
         STC   R3,LOWLIM+5                                              OS285500
         B     RO                  GO READ R0                           OS285600
         EJECT                                                          OS285700
*********************************************************************** OS285800
**********               DISK  RECORD  SCAN                 *********** OS285900
*********************************************************************** OS286000
         SPACE 1                                                        OS286100
SPLITRS  MVI   EOF,X'01'           ENTRY - SPLIT REC SCAN               OS286200
DRSCAN   CLI   CNTRLSW,X'FF'       ENTRY - FULL CYL SCAN                OS286300
         BE    BADCTL              INVALID FUNCTION FOR CONTROL CARDS   OS286400
         MVI   DRSSW,X'F0'         TURN ON DRS SW FOR DDU CODING        OS286500
         B     DISKDP1             USE DD CODE FOR CUU & CCCHH-CCCHH    OS286600
DRSCAN1  MVI   WCNCCW+7,X'1F'      RETURN HERE FROM DD CODE             OS286700
         MVI   RCNCCW+7,X'01'                                           OS286800
         MVC   CONIO(31),SCANMSG                                        OS286900
         BAL   R8,WRTCON           MSG 'SCAN KEY, DATA, OR EOF ?'       OS287000
         MVI   TYP,X'01'           SCAN EOF SWITCH                      OS287100
         CLI   CONIO,C'E'          SCAN EOF ?                           OS287200
         BE    DRS2                YES, NO MORE INPUT NEEDED            OS287300
         MVI   TYP,X'02'           SCAN KEY SWITCH                      OS287400
         LA    R2,255(R0)          MAX KEY LNGTH                        OS287500
         CLI   CONIO,C'K'          SCAN KEY ?                           OS287600
         BE    SCANLTH             YES, USE TRS CODING                  OS287700
         MVI   TYP,X'03'           SCAN DATA SWITCH                     OS287800
         CLI   CONIO,C'D'          SCAN DATA ?                          OS287900
         BE    TRSDRS              YES, USE TRS CODING                  OS288000
         MVI   P,0                                                      OS288100
         B     DRSCAN1                                                  OS288200
DRS1     ST    R2,SAVREGS+8        RETURN HERE FROM TRS CODING          OS288300
         ST    R5,SAVREGS                                               OS288400
         ST    RA,SAVREGS+4                                             OS288500
DRS2     MVI   WCNCCW+7,X'0A'                                           OS288600
         MVC   CONIO(10),RCDMSG    'RECORDS AT'                         OS288700
         BAL   R8,WCON2                                                 OS288800
         MVC   CONIO(10),RECADDRS  'CCC-HH-RRR'                         OS288900
         BAL   R8,WCON2            LOG CONSOLE HEADING                  OS289000
         LA    R1,1(R0)                                                 OS289100
         L     R4,SAVREGS                                               OS289200
         SR    R4,R1                                                    OS289300
         STC   R4,KEYLNTH+1        MODIFY LENGTH OF COMPARES WITH       OS289400
         STC   R4,DATLNTH+1            USER'S SCAN LENGTH               OS289500
         B     RO                  EXIT TO DD CODE -RETURN AT DRS3      OS289600
DRS3     CLI   TYP,X'02'           SCAN ON KEY ?                        OS289700
         BE    CKKEY               YES                                  OS289800
         BH    CKDAT               03 = SCAN ON DATA                    OS289900
         LTR   R5,R5               ELSE SCAN ON EOF                     OS290000
         BZ    HITIT               BRANCH IF DATA LN = 0                OS290100
         B     RN                  ELSE RETURN AND READ NEXT REC        OS290200
CKKEY    LTR   R2,R2               KEY LN = 0 ?                         OS290300
         BZ    RN                  YES, GO READ NEXT REC                OS290400
         L     R0,SAVREGS+4        SCAN DISPLACEMENT                    OS290500
         L     R1,SAVREGS          SCAN LNGTH                           OS290600
         AR    R1,R0               ADD THEM                             OS290700
         CR    R2,R1               ARE WE WITHIN THIS KEY LNGTH ?       OS290800
         BL    RN                  NO, GO READ NEXT REC                 OS290900
         LA    R1,DTPIO+8          YES, POINT TO KEY IN BUFFER          OS291000
         AR    R1,R0               BUMP BY USER'S DISPLACEMENT          OS291100
KEYLNTH  CLC   PRTIO,0(R1)         SCAN MATCH ?                         OS291200
         BE    HITIT               YES                                  OS291300
         B     RN                  NO, GO READ NEXT REC                 OS291400
CKDAT    LA    R1,DTPIO+8          POINT TO KEY IN BUFFER               OS291500
         AR    R1,R2               ADD KEY LNGTH                        OS291600
         L     R2,SAVREGS+4        ADD SCAN DISPLACEMENT                OS291700
         AR    R1,R2                                                    OS291800
         L     R4,SAVREGS+8        USER'S LOGICAL REC LNGTH             OS291900
         LR    R0,R4                                                    OS292000
DATLOOP  CR    R0,R5               ARE WE WITHIN LOGICAL DATA REC       OS292100
         BH    RN                  NO, GO READ NEXT REC                 OS292200
DATLNTH  CLC   PRTIO,0(R1)         SCAN MATCH ?                         OS292300
         BE    HITIT               YES                                  OS292400
         AR    R1,R4               NO, BUMP TO NEXT                     OS292500
         AR    R0,R4                   LOGICAL REC                      OS292600
         B     DATLOOP             AND CHECK AGAIN                      OS292700
HITIT    SR    R7,R7                                                    OS292800
         MVC   CONIO(10),RECADDRS      'CCC-HH-RRR' FORMAT DISPLAY AREA OS292810
         IC    R7,DTPIO+3          GET HH OF THIS RECORD                OS292900
         MVI   ESW,X'FF'                                                OS293000
         BAL   R8,DECCVT                                                OS293100
         MVC   CONIO+4(2),HOLDSEQ+6    PLACE IN CONSOLEAREA             OS293200
         IC    R7,DTPIO+4          GET RRR - THIS RECORD                OS293300
         MVI   ESW,X'FF'                                                OS293400
         BAL   R8,DECCVT                                                OS293500
         MVC   CONIO+7(3),HOLDSEQ+5                                     OS293600
         LH    R7,DTPIO            GET CCC OF THIS RECORD               OS293700
         MVI   ESW,X'FF'                                                OS293800
         BAL   R8,DECCVT                                                OS293900
         MVC   CONIO(3),HOLDSEQ+5                                       OS294000
         MVI   WCNCCW+7,X'0A'                                           OS294100
         BAL   R8,WCON2            LOG 'CCC-HH-RRR' ON CONSOLE          OS294200
         B     RN                  GO GET NEXT REC.                     OS294300
         EJECT                                                          OS294400
*********************************************************************** OS294500
**********                   WRITE EOF RECORD               *********** OS294600
*********************************************************************** OS294700
         SPACE 1                                                        OS294800
WRTEOF   MVI   EOF,X'10'           SET WRITE EOF SWITCH ON              OS294900
         B     DISKRLD             DRL CODING WILL GET RECORD           OS295000
WRTEOFR  MVI   DTPIO+5,X'00'                                            OS295100
         MVC   DTPIO+6(2),DTPIO+5      SET K & D LN = 0 IN COUNT FIELD  OS295200
         MVI   RWCCW+6,X'00'                                            OS295300
         MVI   RWCCW+7,X'08'       SET CCW LENGTH = 8 (COUNT ONLY)      OS295400
         MVI   RWCCW,X'1D'         SET CCW = WRITE COUNT, KEY & DATA    OS295500
         BAL   R4,DSKDEBL1         GO REWRITE DISK REC                  OS295600
         B     NOID                NOT SUCCESSFUL - EXIT TO MSG         OS295700
         B     CONSOLE             SUCCESS - WE ARE DONE                OS295800
         EJECT                                                          OS295900
*********************************************************************** OS296000
**********                EOJ    ( CLOSE FILES )            *********** OS296100
*********************************************************************** OS296200
         SPACE 1                                                        OS296300
EOJ      EQU   *                                                        OS296400
CLOSINTP CLI   TPINOPSW,X'FF'      INTP OPEN ?                          OS296500
         BNE   CLOSOTTP            NO                                   OS296600
         CLOSE (INTPDCB,DISP)                                           OS296700
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS296800
CLOSITSW BC    15,CLOSOTTP             BR TILL RUN FUNC FOR TAPEIN      OS296900
         MVI   CLOSITSW+1,X'F0'        RESTORE SW TO A BR               OS297000
         MVI   TPINOPSW,X'00'          RESET TAPEIN OPEN SW TO CLOSED   OS297100
         B     CONSOLE                 GET NEXT FUNCTION                OS297200
CLOSOTTP CLI   TPOTOPSW,X'FF'      OTTP OPEN ?                          OS297300
         BNE   CLOSDKIN            NO                                   OS297400
         CLOSE (OTTPDCB,DISP)                                           OS297500
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS297600
CLOSOTSW BC    15,CLOSDKIN             BR TILL RUN FUNC FOR TAPEOUT     OS297700
         MVI   CLOSOTSW+1,X'F0'        RESTORE SW TO A BR               OS297800
         MVI   TPOTOPSW,X'00'          RESET TAPEOUT OPEN SW TO CLOSED  OS297900
         B     CONSOLE                 GET NEXT FUNCTION                OS298000
CLOSDKIN CLI   DKINOPSW,X'FF'      DKIN OPEN ?                          OS298100
         BNE   CLOSCDIN            NO                                   OS298200
         CLOSE DSKDCB                                                   OS298300
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS298400
CLOSDKSW BC    15,CLOSCDIN         BR TIL NOPD BY OPEN NOT DASD RTN     OS298500
         MVI   CLOSDKSW+1,X'F0'    RESTORE SW TO A BR                   OS298600
         B     CONSOLE             GET ANOTHER FUNC AFTER NOT DASD RTN  OS298700
CLOSCDIN CLI   CDINOPSW,X'FF'      CDIN OPEN ?                          OS298800
         BNE   CLOSCDOT            NO                                   OS298900
         CLOSE CRDDCB                                                   OS299000
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS299100
CLOSCDSW BC    15,CLOSCDOT             BR TILL RDR HDWR EOF IN CNSL MOD OS299200
         MVI   CLOSCDSW+1,X'F0'        RESTORE SW TO A BR               OS299300
         MVI   CDINOPSW,X'00'          RESET OP SW TO OFF               OS299400
         BR    R8                      RETURN TO FUNC THAT BR TO CDRD   OS299500
CLOSCDOT CLI   CDOTOPSW,X'FF'      CDOT OPEN ?                          OS299600
         BNE   CLOSPRTR            NO                                   OS299700
         CLOSE PCHDCB                                                   OS299800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS299900
CLOSPRTR CLOSE PRTRDCB                                                  OS300000
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS300100
         LA    RD,SAVEAREA             PRIME   R13 BEFORE RETURN        OS300200
         L     RD,4(RD)                                                 OS300300
         RETURN (14,12),RC=0                                            OS300400
         EJECT                                                          OS300500
*********************************************************************** OS300600
**********                                                       ****** OS300700
********** I/O ROUTINES ( QSAM FOR U/R - EXCP FOR TAPE & DISK )  ****** OS300800
**********                                                       ****** OS300900
*********************************************************************** OS301000
         SPACE 1                                                        OS301100
*********************************************************************** OS301200
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** OS301300
*********************************************************************** OS301400
WRTCONP  MVI   P,0                 TURN OFF SW - DONT USE STRING PARAMS OS301500
WRTCON   CLI   P,0                 USING STRING PARAMS                  OS301600
         BE    WRTCON1             NO,                                  OS301700
         MVC   CONIO(10),P1        YES, MOVE PARAM INTO READ AREA       OS301800
         MVC   P1(40),P2           MOVE PARAMS UP ONE                   OS301900
         IC    R0,P                DECREMENT                            OS302000
         BCTR  R0,R0                PARAMETER COUNTER                   OS302100
         STC   R0,P                                                     OS302200
         OC    CONIO(10),BLANKS                                         OS302300
         BR    R8                  RETURN                               OS302400
WRTCON1  EQU   *                                                        OS302500
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS302600
         BO    CHKIRPT                                                  OS302700
         MVC   CONIOMSG(60),CONIO      PRIME MSG AREA                   OS302800
         ST    R0,SAVECCWA         SAVE R0 BEFORE WTOR                  OS302810
         MVC   CONIO(80),BLANKS        CLEAR REPLY AREA                 OS302900
         MVI   CONIOECB,X'00'          CLEAR ECB                        OS303000
         LA    R1,CONIOMSG         PRIME R1 AS BASE REG                 OS303010
         AH    R1,MSGLNGTH         INDEX R1 BY CURRENT MSG LENGTH       OS303011
         MVC   0(4,R1),WTORDESC    MOVE DESC INTO VAR POSITION          OS303012
         LH    R1,MSGLNGTH             ADD 4 TO MSGLNGTH                OS303100
         LA    R1,4(R1)                TO ALLOW FOR MSGLNGTH ADCON,FLAG OS303200
         STH   R1,MSGLNGTH             STORE RESULT BACK                OS303300
***************  COMMON WTOR ROUTINE  ********************************* OS303500
WTOR     WTOR  '60 CHAR.S-012345678901234567890123456789012345678901234XOS303510
               56789',CONIO,80,CONIOECB,DESC=6,ROUTCDE=2                OS303520
WTORDESC EQU   *-6                 USE TO ADDRESS DESC & ROUTCDE        OS303521
REPLNGTH EQU   WTOR+4              REPLY LENGTH                         OS303530
MSGLNGTH EQU   WTOR+12             MSG   LENGTH                         OS303540
CONIOMSG EQU   WTOR+16             MSG AREA                             OS303550
*********************************************************************** OS303560
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS304800
         WAIT  ECB=CONIOECB            WAIT FOR REPLY                   OS304900
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS305000
         L     R0,SAVECCWA         RESOTRE R0 AFTER WTOR                OS305100
         OC    CONIO(80),BLANKS        FORCES  UPPER CASE IN REPLY AREA OS305200
         MVI   P,X'00'             SET PARAM STRING COUNTER = 0         OS305300
         BR    R8                                                       OS305400
         EJECT                                                          OS305500
*********************************************************************** OS305600
**********               CONSOLE - WRITE ONLY  (WTO)        *********** OS305700
*********************************************************************** OS305800
WCON2    EQU   *                                                        OS305900
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS306000
         BO    CHKIRPT                                                  OS306100
         ST    R0,SAVECCWA         SAVE R0 BEFORE WTOR                  OS306110
         MVC   WTOCONIO(60),CONIO      PRIME MSG AREA                   OS306111
         LA    R1,WTOCONIO         PRIME R1 AS BASE REG                 OS306120
         AH    R1,MSGLNGTH         INDEX R1 BY CURRENT MSG LENGTH       OS306121
         MVC   0(4,R1),WTODESCR    MOVE DESC INTO VAR POSITION          OS306122
         LH    R1,MSGLNGTH             ADD 4 TO MSGLNGTH                OS306200
         LA    R1,4(R1)                TO ALLOW FOR MSGLNGTH ADCON,FLAG OS306300
         STH   R1,WTOLNGTH             ST RESULT IN WTO LVE MSG INTACT  OS306400
***************  COMMON WTO  ROUTINE  ********************************* OS306700
WTO      WTO   '60 CHAR.S 012345678901234567890123456789012345678901234XOS306810
               56789',DESC=6,ROUTCDE=2                                  OS306820
WTODESCR EQU   *-6                 USE TO ADDRESS DESC & ROUTCDE        OS306821
WTOLNGTH EQU   WTO+4               MSGLNGTH                             OS306840
WTOCONIO EQU   WTO+8               MSG AREA                             OS306850
*********************************************************************** OS306860
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS307700
         L     R0,SAVECCWA         RESTORE R0 AFTER WTO                 OS307800
         BR    R8                      RETURN                           OS307900
         EJECT                                                          OS308000
*********************************************************************** OS308100
**********                   CARD READING    (QSAM)         *********** OS308200
*********************************************************************** OS308300
CDRD     EQU   *                                                        OS308400
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS308500
         BO    CHKIRPT                                                  OS308600
         CLI   CDINOPSW,X'FF'          OPEN ?                           OS308700
         BE    GETCRDSW                                                 OS308800
         BAL   R9,OPENCRD                                               OS308900
GETCRDSW BC    0,CDEOFSW1          SET TO BR IF CTL CD MODE & NO /+,EOJ OS309000
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      OS309100
         GET   CRDDCB,CONIO                                             OS309200
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS309300
CDEOFSW  BC    0,CDRET                 NOP IF CTL MODE, BR IF CONSOLE   OS309400
         CLC   CONIO(2),=C'/+'         END OF DATA CARDS IN CTL MODE ?  OS309500
         BNE   CDRET                   NO                               OS309600
CDEOFSW1 MVI   EOF,X'FF'               SET EOF SW ON                    OS309700
CDRET    BR    R8                      RETURN                           OS309800
EODADCK  EQU   *                                                        OS309900
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS310000
         CLI   CNTRLSW,X'FF'       ARE WE IN CTL CRD MODE & EOD HIT ?   OS310100
         BNE   EODADCK1            NO, SKIP SW SET TO AVOID LOOP, WHEN  OS310200
         MVI   GETCRDSW+1,X'F0'    YES.    NO /+ OR $$DITTO EOJ SUBMT'D OS310300
EODADCK1 MVI   EOF,X'FF'           BR HERE TO SKIP SW SET IN OPR MODE   OS310400
         MVI   CLOSCDSW+1,X'00'        SET SW TO FALL THRU AFTER CLOSW  OS310500
         B     CLOSCDIN                GO CLOSE AT HDWR EOF             OS310600
         EJECT                                                          OS310700
*********************************************************************** OS310800
**********                   CARD PUNCHING   (QSAM)         *********** OS310900
*********************************************************************** OS311000
CDPN     EQU   *                                                        OS311100
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS311200
         BO    CHKIRPT                                                  OS311300
         CLI   CDOTOPSW,X'FF'          OPEN ?                           OS311400
         BE    PUTCRD                                                   OS311500
         OPEN  (PCHDCB,(OUTPUT))                                        OS311600
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS311700
         MVI   CDOTOPSW,X'FF'                                           OS311800
PUTCRD   EQU   *                                                        OS311900
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      OS312000
         PUT   PCHDCB,CONIOI                                            OS312100
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS312200
         BR    R8                                                       OS312300
         EJECT                                                          OS312400
*********************************************************************** OS312500
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** OS312600
*********************************************************************** OS312700
EDIT     TR    CONIO(132),TRTBL    TRANSLATE UNPRINTABLE CHAR FOR MAX   OS312800
PRNT     EQU   *                                                        OS312900
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS313000
         BO    CHKIRPT                                                  OS313100
         CLI   TYP,X'00'           PRNT SPPED.                          OS313200
         BNE   0(R8)               EXIT IF SUPPRESS PRINTING            OS313300
         SR    R1,R1                                                    OS313400
         IC    R1,CC                   CCW OP CODE                      OS313500
         SRL   R1,3(R0)                TRANSLATE TO # OF PRINTLINES     OS313600
         AH    R1,LINCT                ADD   TO COUNTER                 OS313700
         STH   R1,LINCT                                                 OS313800
         IC    R1,PL                   GET PRINT LENGTH                 OS313900
         BCTR  R1,R0               DECREMENT R1 BY 1                    OS314000
         STC   R1,PR1+1                STORE COUNT LENGTH IN MOVE       OS314100
         MVI   PRTIO,C' '                                               OS314200
         MVC   PRTIO+1(131),PRTIO      CLEAR PRINTLINE                  OS314300
         CLI   INPUT,X'FF'             SUPPRESS SKIP TO CHAN 1          OS314400
         BE    PR1                                                      OS314500
         CLI   LINCT+1,X'3A'           AT END OF PAGE ? (58 LINES/PAGE) OS314600
         BNH   PR1                     NO                               OS314700
         MVI   LINCT+1,X'01'           YES, RESET LINCT                 OS314800
         CLI   CC,X'8B'                IS THIS SKIP TO CHAN 1 ?         OS314900
         BE    PR1BYPAS                                                 OS315000
         CLI   CC,X'13'                IF SPACE IMMED. BYPASS DATA MOVE OS315100
         MVI   CC,X'89'                SET TO WRITE & SKIP TO CHAN 1    OS315200
         BE    PR1BYPAS                                                 OS315300
PR1      MVC   PRTIO,CONIO         MOVE DATA TO BUFFER                  OS315400
PR1BYPAS EQU   *                                                        OS315500
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      OS315600
         PUT   PRTRDCB,CC                                               OS315700
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS315800
PRNTEXIT BR    R8                      RETURN                           OS315900
         OI    PRNTEXIT+1,X'F0'                                         OS316000
         MVI   CC,X'11'                DOUBLE SPACING                   OS316100
         BR    R8                      RETURN                           OS316200
OVFLO    EQU   *                                                        OS316300
         MVI   CC,X'8B'                SKIP TO CH 1                     OS316400
         NI    PRNTEXIT+1,X'0F'                                         OS316500
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         OS316600
         B     PRNT                                                     OS316700
         EJECT                                                          OS316800
*********************************************************************** OS316900
**********                   OUTPUT TAPE   (EXCP)           *********** OS317000
*********************************************************************** OS317100
TPOT     EQU   *                                                        OS317200
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS317300
         BO    CHKIRPT                                                  OS317400
         ST    R4,SAVREGS+24       SAVE R4 BEFORE USE AS DSCT REG       OS317500
         CLI   OTONINSW,X'FF'          OUTPUT OPER ON INPUT DCB ?       OS317600
         BE    TPOTONIN                YES                              OS317700
         LA    R4,OTECBIOB         SET R4 WITH ECB/IOB OF TAPEOUT       OS317800
         USING DSCTAPE,R4          SET ADDRESSABILITY REL. TO DSECT     OS317900
         B     TPOTNORM            GO USE TAPEOUT ECB/IOB               OS318000
TPOTONIN EQU   *                                                        OS318100
         LA    R4,ITECBIOB         SET R4 WITH ECB/IOB OF TAPEIN        OS318200
         MVC   SAVECCWA,INTPCCWA       SAVE INTPCCWA                    OS318300
         MVC   INTPCCWA,OTTPCCWA                                        OS318400
TPOTNORM LA    R1,DSCTIOB              PRIME R1 FOR EXCP                OS318500
         MVI   DSCTECB,X'00'           CLEARECB                         OS318600
         EXCP  (R1)                                                     OS318700
         WAIT  ECB=DSCTECB                                              OS318800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS318900
         NI    OTEOR,0                 RESET EOR SWITCH                 OS318910
         CLI   OTONINSW,X'FF'          OUTPUT OPER ON INPUT DCB ?       OS319000
         BNE   SKOTONIN                                                 OS319100
         MVC   INTPCCWA,SAVECCWA       RESTORE INTPCCWA                 OS319200
SKOTONIN EQU   *                                                        OS319300
         CLI   DSCTECB,X'7F'           CHECK FOR NORMAL COMPLETION      OS319500
         BE    TPOTRET                 YES, RETURN                      OS319600
         CLI   DSCTECB,X'41'       PERM. ERROR ?                        OS319700
         BE    TPOTERR             YES                                  OS319800
         CLI   DSCTECB,X'44'       PERM. ERROR ON PREVIOUS CCW ?        OS319900
         BE    TPOT                YES, RETRY                           OS320000
ABEND300 EQU   *                                                        OS320100
         MVC   UCODE(3),U300       MOVE IN 300 - UNUSUAL TAPE I/O ERROR OS320200
         B     ABEND               USER ABEND ROUTINE                   OS320300
TPOTERR  TM    DSCTCSW+3,X'02'     UNIT CHK ?                           OS320400
         BO    CKBSRBSF            BSR OR BSF ?                         OS320500
         TM    DSCTCSW+3,X'01'     UNIT EXCEPTION ?                     OS320600
         BNO   ABEND300            NO                                   OS320700
         CLC   FUNCOD+1(2),FSRDC+1     XXX = XSR ?                      OS320800
         BE    TMBSRFSR            YES                                  OS320900
         OI    OTEOR,1             NO, ASSUME WRITE OPER. & SET EOR     OS321000
         B     TPOTRET             RETURN TO FUNCTION                   OS321100
TMBSRFSR EQU   *                       ISSUE MSG                        OS321600
         MVC   CONIO(10),TAPMRK    MOVE IN 'TAPE MARK '                 OS321800
         MVC   CONIO+10(36),BSRMSG     PRIME BSR OR FSR MSG             OS321900
         B     CKIFCNSL            CHECK FOR CONSOLE OR CONTROL MODE    OS322000
CKBSRBSF CLC   FUNCOD(2),BSFDC         XXX = BSX ?                      OS322010
         BNE   ABEND300            NO                                   OS322020
         TM    DSCTSENS+1,X'08'    S1B4 ON ? ( LOAD POINT )             OS322030
         BNO   ABEND300            YES, LPBSRFSR. NO, END UNIT CHK ANAL OS322040
         DROP  R4                  DROP DSECT REG                       OS322099
LPBSRBSF EQU   *                       ISSUE MSG                        OS322100
         SR    R5,R5               SET NBLKS CT TO 0 FOR FUNCTION END   OS322300
         LA    R5,1(R5)            SET R5 NBLKS TO 1 FOR BCT LOOP       OS322400
         MVC   CONIO(10),=C'LOAD POINT'                                 OS322500
         MVC   CONIO+10(36),BSRMSG     PRIME BSR OR BSF MSG             OS322600
         MVC   CONIO+23(3),BSFDC       MOVE IN BSF                      OS322700
         MVC   CONIO+37(9),COMPLDC     'COMPLETE'                       OS322800
CKIFCNSL ST    R8,SAVREGS          SAVE R8 BEFORE BAL                   OS322900
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS323200
         BE    OPERMSG             YES                                  OS323300
PGMRMSG  EQU   *                   NO                                   OS323400
         MVI   PL,X'2E'            SET PRINT LENGTH                     OS323500
         MVI   CC,X'19'            SET CAR CTL                          OS323600
         BAL   R8,PRNT             PRINT MSG TO PGMR                    OS323700
         B     TPOTERR1            BR TO RETURN PRIMER                  OS323800
OPERMSG  MVI   WCNCCW+7,X'2E'      SET MSG LENGTH                       OS324100
         BAL   R8,WCON2            PRINT MSG TO OPER                    OS324200
TPOTERR1 L     R8,SAVREGS          RESTORE R8                           OS324300
TPOTRET  EQU   *                                                        OS324400
         L     R4,SAVREGS+24       RESTORE R4 AFTER DSECT USE           OS324500
         BR    R8                  RETURN TO FUNCTION OR END FUNCTION   OS324510
         EJECT                                                          OS324600
*********************************************************************** OS324700
**********                    INPUT TAPE   (EXCP)          ************ OS324800
*********************************************************************** OS324900
INTP     EQU   *                                                        OS325000
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS325100
         BO    CHKIRPT                                                  OS325200
         ST    R4,SAVREGS+24       SAVE R4 BEFORE USE AS DSCT REG       OS325300
         CLI   INFMOTSW,X'FF'          INPUT OPER FROM TAPEOUT  DD ?    OS325400
         BE    INTPFMOT                YES                              OS325500
         LA    R4,ITECBIOB         SET R4 WITH ECB/IOB OF TAPEIN        OS325600
         USING DSCTAPE,R4          SET ADDRESSABILITY REL. TO DSECT     OS325700
         B     INTPNORM            GO USE TAPEIN FOR I/P                OS325800
INTPFMOT EQU   *                                                        OS325900
         LA    R4,OTECBIOB         SET R4 WITH ECB/IOB OF TAPEOUT       OS326000
         MVC   SAVECCWA,OTTPCCWA       SAVE OTTPCCWA                    OS326100
         MVC   OTTPCCWA,INTPCCWA       PRIME OTTPCCWA FOR INPUT OPER    OS326200
INTPNORM LA    R1,DSCTIOB              PTR TO IOB                       OS326300
         MVI   DSCTECB,X'00'           CLEAR ECB                        OS326400
         MVI   TMSW,X'00'              CLEAR TM SWITCH                  OS326500
         EXCP  (R1)                                                     OS326600
         WAIT  ECB=DSCTECB             WAIT ON ECB                      OS326700
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS326800
         MVC   TPLNTH+2(2),DSCTCSW+5 SAVE RESIDUAL COUNT                OS326900
         CLI   INFMOTSW,X'FF'                                           OS327000
         BNE   SKINFMOT                                                 OS327100
         MVC   INTPCSW+5(2),OTTPCSW+5  MOVE RESIDUAL CNT TO INTPCSW     OS327200
         MVC   OTTPCCWA,SAVECCWA       RESTORE OTTPCCWA                 OS327300
SKINFMOT EQU   *                                                        OS327400
         CLI   DSCTECB,X'7F'           CHK FOR NORMAL COMPL             OS327600
         BE    INTPRET                 YES, RETURN                      OS327700
         CLI   DSCTECB,X'41'       CHECK FOR PERM. I/O ERROR            OS327800
         BE    TSTFRTM             GO TEST FOR TAPE MARK                OS327900
         CLI   DSCTECB,X'44'       DID PREVIOUS CCW HAVE PERM. ERROR?   OS328000
         BE    INTP                RETRY INTERCEPTED CCW                OS328100
         B     ABEND300            OTHERWISE, UNUSUAL COND, ABEND       OS328200
TSTFRTM  TM    DSCTCSW+3,X'01'         EOF ?                            OS328300
         BNO   INTPERR                 NO , CONTINUE INTP               OS328400
         DROP  R4                  DROP R4 ADDRESSING AT THIS POINT     OS328500
SETTMSW  MVI   TMSW,X'FF'              SET TAPE MARK SWITCH             OS328600
INTPRET  EQU   *                   COMMON RETURN TO ALLOW RESTORE OF R4 OS328700
         L     R4,SAVREGS+24       RESTORE R4 AFTER USE AS DSCT REG     OS328800
         BR    R8                      RETURN TO FUNCTION               OS328900
INTPERR  LA    R1,INTPRT           YES, SET RETURN ADDRESS              OS329000
         L     R4,SAVREGS+24       RESTORE R4 AFTER USE AS DSCT REG     OS329100
         STM   R1,RE,SAVREGS           SAVE REGS                        OS329200
         B     TPERR               GO HANDLE ERROR                      OS329300
INTPRT   B     INTP                RETURN HERE IF RECORD BYPASSED       OS329400
         BR    R8                  RETURN HERE IF RECORD IGNORED        OS329500
         DS    0F                                                       OS329600
TPLNTH   DC    F'0'                SAVE RESIDUAL CNT                    OS329700
         EJECT                                                          OS329800
*********************************************************************** OS329900
**********             DISK - READ OR WRITE  (EXCP)         *********** OS330000
*********************************************************************** OS330100
         SPACE 1                                                        OS330110
DISK     EQU   *                                                        OS330200
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       OS330300
         BO    CHKIRPT                                                  OS330400
         LA    R1,DSKIOB                                                OS330500
         MVI   DSKECB,X'00'            CLEARECB                         OS330600
         MVC   DSKCC(5),LOWLIM+2   PRIME IOB DSK ADRRESS - CCHHR        OS330700
         EXCP  (R1)                                                     OS330800
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS330900
         WAIT  ECB=DSKECB                                               OS331000
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS331100
         CLI   DSKECB,X'7F'        OK ?                                 OS331200
         BE    DSKRET              YES, RETURN                          OS331300
         CLI   DSKECB,X'41'        PERMANENT ERROR POSTED ?             OS331400
         BE    CHK41               MAY BE NO REC FND OR EOE, EOF        OS331500
         CLI   DSKECB,X'42'        DSK ADRESS OUT OF DEB LIMIT?         OS331600
         BE    CHKEOE              ELSE ABEND - UNUSUAL I/O ERROR       OS331700
         B     ABEND400                                                 OS331800
CHK41    TM    DSKCSW+3,X'02'      UNIT CHK ? MAY BE NO REC FND         OS331900
         BO    CHKNOREC                                                 OS332000
         TM    DSKCSW+3,X'01'      UNIT EXCEPTION ?  MAY BE EOF OR EOE  OS332100
         BO    SETDKEOF            YES MAY WANT TO SET EOF SW           OS332200
         B     ABEND400                                                 OS332300
CHKEOE   EQU   *                   NO CHECK EOE  ABEND FOR NOW          OS332400
         MVC   CONIO(7),NWTPMSG                                         OS332500
         MVC   CONIO+7(15),DSMSG                                        OS332600
         MVC   CONIO+22(24),DSEMSG     ', NEXT IS AVAIL. USE DSE'       OS332700
         SR    R0,R0               CLEAR                                OS332800
         SR    R1,R1               CLEAR                                OS332900
         IC    R0,EXTNTCNT         GET NO OF EXTENTS                    OS333000
         IC    R1,DSKM             PICK UP CURR. XTNT NO.               OS333100
         LA    R1,1(R1)            BUMP BY 1                            OS333200
         CLR   R0,R1               ARE WE DONE ?                        OS333300
         BE    EOENOMOR            YES                                  OS333400
         STC   R1,DSKM             PUT UPDATED M BACK - MAKE AVAIL.     OS333500
         L     R1,DKDEBADR         GET DASD DEB SECTION PTR             OS333600
         LA    R1,16(R1)           UPDATE TO NEXT SECTION               OS333700
         ST    R1,DKDEBADR         PUT BACK - MAKE AVAIL.               OS333800
         B     EOERET              RETURN, NOW THAT EOE INCREMENTED     OS333900
EOENOMOR EQU   *                                                        OS334000
         MVC   CONIO+24(7),=C'NO MORE'                                  OS334100
EOERET   EQU   *                                                        OS334200
         LA    R8,CONSOLE          END FUNC. NEXT XTNT OR LAST AVAIL.   OS334300
         B     CKIFCNSL            GO WRT MSG TO OPER/PGMR              OS334400
CHKNOREC TM    DSKS1,X'08'         NO REC FOUND POSTED IN SENSE BYTE1 ? OS334500
         BO    DSKRET              YES, RETURN - DISK FUNC WILL HANDLE  OS334600
ABEND400 EQU   *                                                        OS334700
         MVC   UCODE(3),U400       MOVE IN 400 - UNUSUAL DISK I/O ERROR OS334800
         B     ABEND               BR TO ABEND ( HAND CODED )           OS334900
SETDKEOF EQU   *                                                        OS335000
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  OS335100
         BE    DSKRET              DO NOT SET DSK EOF IN CONSOLE MODE   OS335200
         MVI   DSKEOFSW,X'FF'      SET TO ON COND.                      OS335300
DSKRET   EQU   *                                                        OS335400
         BR    R8                  RETURN                               OS335600
         EJECT                                                          OS335700
*********************************************************************** OS335800
**********               CHANNEL COMMAND WORDS              *********** OS335900
*********************************************************************** OS336000
         SPACE 1                                                        OS336100
         CNOP  0,8                                                      OS336200
RCNCCW   EQU   REPLNGTH-7              ADJUST FOR OS                    OS336300
WCNCCW   EQU   MSGLNGTH-6              ADJUST FOR OS  HAND-CODED WTOR   OS336400
MSICCW   CCW   X'00',DTPIO,X'40',1     MODE SET    INPUT TAPE CCW       OS336500
INTPCCW  CCW   X'02',DTPIO,X'20',1     READ TAPE CCW                    OS336600
INTPNOP  CCW   X'03',*,X'20',1         NOP FOR BSR,FSR,BSF DEV. END ST. OS336601
ERTCCW   CCW   X'03',*,X'40',1         ERT TAPE CCW LIST  - NOP CTL CCW OS336700
         CCW   X'1F',*,X'40',1         WTM CONTROL CCW                  OS336800
         CCW   X'17',*,X'40',1         ERG CONTROL CCW                  OS336900
         CCW   X'97',*,X'40',1         ERASE LONG CONTROL CCW-3420 ONLY OS337000
         CCW   X'07',*,X'20',1         REW CONTROL CCW                  OS337100
MSOCCW   CCW   X'00',DTPIO,X'40',1     MODE SET   OUTPUT TAPE CCW       OS337200
OTTPCCW  CCW   X'01',DTPIO,X'20',1     WRITE TAPE CCW (SET SLI BIT )    OS337300
OTTPNOP  CCW   X'03',*,X'20',1         NOP FOR BSR,FSR,BSF DEV. END ST. OS337301
SHCCW    CCW   X'31',DSKCC,X'40',5     SEARCH ID EQ DISK CCW            OS337400
TIC      CCW   X'08',*-8,X'00',1       TIC CCW                          OS337500
RWCCW    CCW   X'1E',DTPIO,X'20',4001  READ/WRITE DISK CCW              OS337600
SRCHA    CCW   X'39',DSKCC,X'40',4     SEARCH HA EQ DISK CCW            OS337700
TIC2     CCW   X'08',*-8,X'00',1       TIC CCW                          OS337800
HACCW    CCW   X'1A',DTPIO,X'40',5     READ HA CCW                      OS337900
ROCCW    CCW   X'16',DTPIO+5,X'00',16  READ R0 CCW                      OS338000
         EJECT                                                          OS338100
*********************************************************************** OS338200
**********                   CONSTANTS                      *********** OS338300
*********************************************************************** OS338400
         SPACE 1                                                        OS338500
DSL      DC    AL4(NBUFPAGS*2048)      LIMIT TO ACTUAL NO. OF PAGES     OS338600
*                                      NEEDED TO READ INSTALLATION      OS338700
*                                      BLKSIZES. THE RIGHT HW (DSL+2)   OS338800
*                                      IS PLACED IN CCW BYTE COUNT      OS338900
*                                      FIELD DURING DISK/TAPE I/O.      OS339000
EIGHTY   DC    X'0050'                                                  OS339100
LINCT    DC    X'0000'                                                  OS339200
BLCT     DC    CL2' '                                                   OS339300
HBF      DC    X'000000'                                                OS339400
ON       DC    X'FF'                                                    OS339500
DCYL     DC    CL8'CYL  XXX'                                            OS339600
DHED     DC    CL8'HEAD  XX'                                            OS339700
DREC     DC    CL10'REC  XXXXX'                                         OS339800
LBKEY    DC    C'# '               USE 'KEY' OF NEXT                    OS339900
KEYH     DC    CL10'KEY  XXXXX'                                         OS340000
LBDATA   DC    C'# '               USE 'DATA' OF NEXT                   OS340100
DATB     DC    CL10'DATA XXXXX'                                         OS340200
DATH     DC    CL10'DATA XXXXX'                                         OS340300
COMMABLK DC    C', '               USED IN MSG                          OS340400
TBLK     DC    CL10'BLOCKXXXXX'                                         OS340500
IN       DC    CL6'INPUT='                                              OS340600
OT       DC    CL7'OUTPUT='                                             OS340700
ENTCCCHH DC    C'ENTER CCCHH WITHIN '        'DATA SET ...              OS340800
DSMSG    DC    C'DATA SET EXTENT'                                       OS340900
BEGINMSG DC    C'CCCHH'            ' - BEGIN' USED FROM NEXT MSG        OS341000
DASHBEG  DC    C' - '              'BEGIN=CCCHHH,END=' USED FROM NEXT   OS341100
BG       DC    CL6'BEGIN='                                              OS341200
         DC    C'CCCHH,'           FILL AND COMMA                       OS341300
EN       DC    CL4'END='                                                OS341400
NB       DC    CL6'NBLKS='                                              OS341500
BLOCKMSG DC    C'FIRST BLOCK OR NOT MULTIPLE OF '    USE 'RECSIZE' NXT  OS341600
RS       DC    CL8'RECSIZE='                                            OS341700
BF       DC    CL10'BLKFACTOR='                                         OS341800
DT       DC    CL9'DECKTYPE='                                           OS341900
DN       DC    CL9'DECKNAME='                                           OS342000
ZEROS    DC    CL5'00000'                                               OS342100
ENTERMSG DC    C'ENTER: '              USE 'XXX - ' OF NEXT MSG         OS342200
XXXDASH  DC    C'XXX - '               USE 'TO LIST FUNCTIONS' OF NEXT  OS342300
         DC    C'TO LIST FUNCTIONS'                                     OS342400
BSRMSG   DC    C' - ON BSR OR FSR, '   FUNCMSG WILL BE USED FROM NEXTDC OS342500
FUNCMSG  DC    C'FUNCTION '        USE 'CONTINUES' OF NXT MSG           OS342600
CONTMSG  DC    C'CONTINUES'                                             OS342700
DVTYPMSG DS    0CL1                USE 'TAPEIN NOT TAPE DEVICE'         OS342800
TPINDD   DC    CL8'TAPEIN  '           DDNAMES TO BE SUPPLIED ON CTL CD OS342900
         DC    C'NOT TAPE '                                             OS343000
DEVH     DC    CL22'DEVICE  XXX  TAPEIN   '                             OS343100
         DC    CL26'MODE XX  X TRACK   800 BPI'                         OS343200
BYTMSG   DC    CL28' BYTES TO BE CHANGED, (1-35)'                       OS343300
SDPMSG   DC    CL29'STARTING DATA POSITION IN REC'                      OS343400
DSKH     DC    CL24'CYLINDER XXX, HEAD  X,  '                           OS343500
BPTRK    DC    CL48'DEFECTIVE 231X PRIMARY TRACK, ALTERNATE TRACK IS'   OS343600
         DC    CL18' CYL XXX, TRACK  X'                                 OS343700
GATRK    DC    CL50'OPERATIVE 231X ALTERNATE TRACK, DEFECTIVE TRACK WA' OS343800
         DC    CL19'S CYL XXX, TRACK  X'                                OS343900
DET1     DC    CL6'CHAR  '                                              OS344000
DET2     DC    CL6'ZONE  '                                              OS344100
DET3     DC    CL6'NUMR  '                                              OS344200
CTL      DC    CL8'$$DITTO '                                            OS344300
DCKMSG   DC    CL18'DECK NAME X CHARS.'                                 OS344400
INVLDMSG DS    0CL8                USE 'INVALID ' OF NEXT MSG           OS344500
BADCUUMM DC    C'INVALID '         'CUUMM' OF NEXT MSG IS USED ALSO     OS344600
SYSOTMSG DC    C'CUUMM - OUTPUT '      'TAPE' OF NEXT                   OS344700
TAPMRK   DC    CL10'TAPE MARK '                                         OS344800
SYSITMSG DC    C'CUUMM - '            USE 'INPUT TAPE' OF NEXT MSG      OS344900
TAPERR   DC    C'INPUT TAPE I/O ERROR'                                  OS345000
SYSDSK   DC    CL10'CUU - DISK'                                         OS345100
BLKMSG   DC    C'#'                USE ' BLKS' OF NEXT MSG              OS345200
BLKTMSG  DC    C' BLKS'            USE ' AND T.M. COPIED' OF NEXT MSG   OS345300
TMCOPIED DC    C' AND T.M. COPIED'                                      OS345400
RECADDRS DC    CL23'CCC-HH-RRR  REC ADDRESS'                            OS345500
SCANMSG  DC    CL31'SCAN KEY - K, DATA - D, EOF - E'                    OS345600
DESIRED  DC    CL11'DESIRED REC'                                        OS345700
DIRECT   DC    CL24'COPY FWD OR BACK, F OR B'                           OS345800
FILNUM   DC    CL7'# FILES'                                             OS345900
TPERRMSG DC    CL50'BYPASS REC - B, IGNORE ERROR - I, USER CORRECT - C' OS346000
NOREC    DC    CL20'NO DISK RECORD FOUND'                               OS346100
NVOLMSG  DC    CL17'ENTER NEW VOL IS '                                  OS346200
TOLNGTH  DC    C' TO '             USE 'LENGTH' OF NEXT MSG             OS346300
LNGTHMSG DC    C'LENGTH EXCEEDS END OF'  USE' BLOCK'  OF NEXT MSG       OS346400
BADLTH   DC    C' BLOCK EXCEEDS BUFFER, TO INCREASE SIZE - '            OS346500
         DC    C'RE-ASSEMBLE'                                           OS346600
LGRCDMSG DC    C' LOGICAL '        USE 'RECORDS' OF NEXT MSG            OS346700
RCDMSG   DC    C'RECORDS AT'                                            OS346800
ALTERMSG DC    C'ALTERED DISK RECORD IN CORE'                           OS346900
ALTRMSG  DC    CL26'ALTER IN HEX - H, CHAR - C'                         OS347000
ALTCT    DC    CL31'ENTER XX BYTES, X CHAR PER BYTE'                    OS347100
RECSIZ   DC    C'LOGICAL REC '     USE 'LNTH' OF NEXT MSG               OS347200
LNTHMSG  DC    C'LNTH'             USE 'SCAN ARGUMENT (1-35)' OF NEXT   OS347300
SCANMSG2 DC    C' SCAN ARGUMENT (1-35)'    ' SCAN' PORTION USED         OS347400
NWTPMSG  DC    C'END OF REEL, MOUNT NEW '    USE 'TAPE' OF NEXT MSG     OS347500
TLMSG    DC    CL19'TAPE NOT CARD IMAGE'                                OS347600
CHNGMSG  DC    C'CHANGES '         USE  ' COMPLETE ' OF NEXT MSG        OS347700
COMPLDC  DC    C'COMPLETE '        USE '?, Y OR N' OF NEXT MSG          OS347800
YORNMSG  DC    C'?, Y OR N'                                             OS347900
XX       DC    CL6'XXXXXX'                                              OS348000
INTPERSW DC    X'00'                   CONTROLS OPER INTP ERROR RTN     OS348100
TPINOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348400
TPOTOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348500
CDINOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348600
CDOTOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348700
DKINOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348800
TPOTDD   DC    CL8'TAPEOUT '           DDNAMES TO BE SUPPLIED ON CTL CD OS348900
DSKINDD  DC    CL8'DISKIN  '           DDNAMES TO BE SUPPLIED ON CTL CD OS349000
IRPTMSG  DC    C'REPLY: '                                               OS349500
IRPTDC   DC    C'U'                REPLY U WILL IRPT FUNCTION           OS349600
         DC    C' - TO INTERRUPT A FUNCTION, EOJ - '                    OS349700
         DC    C'TO END '          USE 'DITTO' OF NEXT MSG              OS349800
DITTODC  DC    C'DITTO '                                                OS349900
CTLERROR DC    C'CONTROL CARD ERROR, '                                  OS349910
XXXMSG   DC    C'REFER TO ''XXX'' LISTING'                              OS350000
DSEMSG   DC    C', NEXT IS AVAIL. '                                     OS350010
USEDSE   DC    C'USE DSE'          BLANKED OUT IN CTL CRD MODE          OS350011
         DS    0H                                                       OS350090
UPPERC   DC    AL2(202)                INITIALLY 2311/2314              OS350100
UPPERH   DC    AL2(09)                 INITIALLY 2311                   OS350200
USERNAME DC    CL10'IBM  S/370'    USED IN INT FUNCTION                 OS350300
CNTRLSW  DC    X'FF'               SW FOR CONTOL CARD MODE-SET ON NOW   OS350400
DPSW     DC    X'00'               HEX DUMP SW                          OS350500
EXTNTCNT DC    X'0'                SAVE DEB EXTENT CNT HERE             OS350600
TMSW     DC    X'00'               TAPE MARK SW SET WHEN T.M. READ      OS350700
TRK7OR9  DC    X'00'               X'07' = 7-TRK, X'09' = 9-TRK         OS350800
         DS    0F                                                       OS350900
CONIOECB DC    F'0'                    WTOR ECB FOR REPLY               OS351000
IRPT     DC    CL4' '                                                   OS351100
IRPTECB  DC    F'0'                                                     OS351200
DKDEBADR DC    F'0'                SAVE DEB PTR                         OS351300
DATESAVE DS    CL6                 MACHINE DATE FOR TITLE PAGE YY.DDD   OS351400
H16      DC    H'16'                   HALFWORD OF 16 TO INCR DEB       OS351500
H8       DC    H'8'                    HALF WORD OF 8 TO INCR CCW LNTH  OS351600
******************* DEVTYP MACRO INFOR. FOR TAPEIN,TAPEOUT, DISKIN **** OS351700
         DS    0F                                                       OS351800
TIALLOSW DC    X'00'               SWITH=X'FF' WHEN TAPEIN  ALLOCATED   OS351810
TIALLUCB DC    C'***'              TAPEIN  UCB FROM TIOT                OS351811
TOALLOSW DC    X'00'               SWITH=X'FF' WHEN TAPEOUT ALLOCATED   OS351812
TOALLUCB DC    C'***'              TAPEOUT UCB FROM TIOT                OS351813
ITMODE   DC    C' '                                                     OS351900
ITUCB    DC    CL3' '                  UCB SAVE                         OS352000
ITDEVTYP DS    0F                                                       OS352100
         DC    CL1' '                                                   OS352200
ITTRK    DC    CL1' '      00-9TRK,20-9TRK(D.D.),80-7TRK,C0-7TRK(D.C.)  OS352300
ITCLASS  DC    CL1' '                                                   OS352400
IT3420   DC    CL1' '      03-3420                                      OS352500
ITBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  OS352600
         DS    0F                                                       OS352700
OTMODE   DC    C' '                                                     OS352800
OTUCB    DC    CL3' '                  UCB SAVE                         OS352900
OTDEVTYP DS    0F                                                       OS353000
         DC    CL1' '                                                   OS353100
OTTRK    DC    CL1' '      00-9TRK,20-9TRK(D.D.),80-7TRK,C0-7TRK(D.C.)  OS353200
OTCLASS  DC    CL1' '                                                   OS353300
OT3420   DC    CL1' '      03-3420                                      OS353400
OTBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  OS353500
         DS    0F                                                       OS353600
         DC    C' '                                                     OS353700
DKUCB    DC    CL3' '                  UCB SAVE                         OS353800
DKDEVTYP DS    0F                                                       OS353900
DSKSTAT  DC    CL1' '                                                   OS354000
         DC    CL1' '                                                   OS354100
DSKCLASS DC    CL1' '                                                   OS354200
DSKTYPE  DC    CL1' '                                                   OS354300
DKBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  OS354400
         EJECT                                                          OS354410
*********************************************************************** OS354500
         LTORG                     FORCE LITERALS TO ORIGIN HERE        OS354600
*********************************************************************** OS354700
         EJECT                                                          OS354800
*********************************************************************** OS354900
**********                   QSAM DCB'S                     *********** OS355000
*********************************************************************** OS355100
         SPACE 1                                                        OS355200
PRTRDCB  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FM,LRECL=133,   XOS355300
               BLKSIZE=133                                              OS355400
         EJECT                                                          OS355410
CRDDCB   DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EODADCK             OS355500
         EJECT                                                          OS355510
PCHDCB   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPUNCH,                      XOS355600
               RECFM=FA,BLKSIZE=81                                      OS355601
         EJECT                                                          OS355700
*********************************************************************** OS355800
**********                   EXCP DCB'S                     *********** OS355900
*********************************************************************** OS356000
         SPACE 1                                                        OS356100
DSKDCB   DCB   MACRF=E,DDNAME=DISKIN,DSORG=PS,DEVD=DA                   OS356200
         EJECT                                                          OS356210
INTPDCB DCB DDNAME=TAPEIN,DSORG=PS,MACRF=E,DEVD=TA                      OS356300
         EJECT                                                          OS356310
OTTPDCB  DCB   DDNAME=TAPEOUT,MACRF=E,DSORG=PS,DEVD=TA                  OS356400
         EJECT                                                          OS356410
*********************************************************************** OS356500
ITECBIOB DS    0F                  TAPEIN  ECB & IOB                    OS356600
INTPECB  DC    F'0'                    ECB                              OS356700
INTPIOB  DS    0F                                                       OS356800
INTPIOBF DC    X'4200'             NO RELATED CCW'S AND CD              OS356900
INTPSENS DC    H'00'                                                    OS357000
         DC    X'7F'                                                    OS357100
         DC    AL3(INTPECB)                                             OS357200
INTPFLG  DC    X'00'                                                    OS357300
INTPCSW  DC    XL7'00'                                                  OS357400
INTPCCWA DC    A(INTPCCW)              CCW IS 16 BYTES FROM IOB         OS357500
INTPDCBA DC    A(INTPDCB)                                               OS357600
         DC    F'0'                                                     OS357700
INTPBCI  DC    H'0'                BCI = 0 WHEN NOT USED BY EXCP PGM    OS357800
         DC    H'0'                                                     OS357900
*********************************************************************** OS358000
OTECBIOB DS    0F                  TAPEOUT ECB & IOB                    OS358100
OTTPECB  DC    F'0'                                                     OS358200
OTTPIOB  DS    0F                                                       OS358300
OTTPIOBF DC    X'4200'             NO RELATED CCW'S AND CD              OS358400
OTTPSENS DC    H'00'                                                    OS358500
         DC    X'7F'                                                    OS358600
         DC    AL3(OTTPECB)                                             OS358700
OTTPFLG  DC    X'00'                                                    OS358800
OTTPCSW  DC    XL7'00'                                                  OS358900
OTTPCCWA DC    A(OTTPCCW)                                               OS359000
OTTPDCBA DC    A(OTTPDCB)                                               OS359100
         DC    F'0'                                                     OS359200
OTTPBCI  DC    H'0'                BCI = 0 WHEN NOT USED BY EXCP PGM    OS359300
         DC    H'0'                                                     OS359400
*********************************************************************** OS359500
DSKIOBAR DS    0F                  DISKIN ECB AND IOB                   OS359600
DSKECB   DC    F'0'                                                     OS359700
DSKIOB   DS    0F                                                       OS359800
DSKFLG1  DC    X'42'               NO RELATED CCW'S & COMM. CHAINING    OS359900
DSKFLG2  DC    X'00'                                                    OS360000
DSKS0    DC    X'00'                                                    OS360100
DSKS1    DC    X'00'                                                    OS360200
         DC    X'00'                                                    OS360300
DSKECBA  DC    AL3(DSKECB)                                              OS360400
DSKERFLG DC    X'00'                                                    OS360500
DSKCSW   DC    XL7'00'                                                  OS360600
DSKCCWA  EQU   *                                                        OS360700
DSKSIOCC DC    X'00'                                                    OS360800
         DC    AL3(SHCCW)                                               OS360900
         DC    X'00'                                                    OS361000
DSKDCBA  DC    AL3(DSKDCB)                                              OS361100
         DC    2F'0'                                                    OS361200
DSKM     DC    X'00'                                                    OS361300
DSKBB    DC    XL2'00'                                                  OS361400
DSKCC    DC    XL2'00'                                                  OS361500
DSKHH    DC    XL2'00'                                                  OS361600
DSKR     DC    X'00'                                                    OS361700
         EJECT                                                          OS361800
*********************************************************************** OS361900
**********                 STORAGE AND EQUATES              *********** OS362000
*********************************************************************** OS362100
         SPACE 1                                                        OS362200
HH1      DC    CL8'* * * * '       LEADING *'S IN HEADING               OS362300
HH2      DS    CL117               HEADING BODY                         OS362400
HH3      DC    CL7'* * * *'        TRAILING *'S IN HEADING              OS362500
BLANKS   DC    CL80' '             UTILITY BLANKS FOR CLEARING CRD AREA OS362600
ADRSLO   DS    CL5                 LOWER DISK ADDRESS                   OS362700
ADRSUP   DS    CL5                 UPPER DISK ADDRESS                   OS362800
INPUT    DS    CL1                 OVERFLOW SW                          OS362900
HNB      DS    CL4                 HOLD NBLKS                           OS363000
HRS      DS    CL5                 HOLD RECSIZE                         OS363100
HDG1     DS    CL26                HEADING BUFFER                       OS363200
HDG2     DS    CL26                HEADING BUFFER                       OS363300
HDG3     DS    CL26                HEADING BUFFER                       OS363400
DECKTYPE DS    CL3                 HOLD DECKTYPE                        OS363500
DECKNAME DS    CL8                 HOLD DECKNAME                        OS363600
CC       DS    CL1                 CARRIAGE CONTROL CHARACTER           OS363700
PRTIO    DS    CL132               PRINT BUFFER                         OS363800
CP       DS    CL1                     ALLOW FOR PRINT CTL ON 3525      OS363900
CONIO    DS    CL132               COMMON BUFFER FOR CONSOLE,CARD, ETC. OS364000
CONIOI   EQU   CONIO-1                 ALLOW FOR PRINT CTL ON 3525      OS364100
HEXIO    EQU   CONIO+12            BEGIN HEX                            OS364200
DEVTYP   DS    CL1                 DEVICE TYPE INDICATOR SET BY LUBPUB  OS364300
LISTSW   DS    CL1                 DP,DPD,SP,SPD LIST CTL               OS364310
MVBEGIN  EQU   *                   BEGIN ZERO CLEAR                     OS364311
HOLD     DS    1D                  PACK AREA                            OS364500
HOLDSEQ  DS    1D                  PACK AREA                            OS364600
LOWLIM   DS    CL8                 BEGIN= LOWER CCCHH, ALSO BLKCNT LIM  OS364700
UPPLIM   DS    CL6                 END= UPPER CCCHH                     OS364800
LLIMSAVE DS    CL8                 LOWLIM SAVE AREA                     OS364900
DBLSW    DS    CL1                 DE-BLOCK SW                          OS365000
ALTSW    DS    CL1                 ALTERNATE TRK SW                     OS365100
CT       DS    CL1                 PARAMTRS. FOUND MASK, BIT0=INPUT,ETC OS365200
EOF      DS    CL1                 CARD EOF SW                          OS365300
TYP      DS    CL1                 TYPE OF DISK SCAN                    OS365400
PL       DS    CL1                 PRINT LENGTH                         OS365500
ESW      DS    CL1                 LEAD ZERO SW ( SUPPRESS )            OS365600
OTEOR    DS    CL1                 OUTPUT TAPE END OF REEL SW           OS365700
OTONINSW DS    CL1                 SW FOR O/P OPER. ON TAPEIN  DD       OS365710
INFMOTSW DS    CL1                 SW FOR I/P OPER. ON TAPEOUT DD       OS365711
DSKEOFSW DS    CL1                 SET TO X'FF' ON EOF READ (CTL.CRD.)  OS365712
MVEND    EQU   *                   END   ZERO CLEAR                     OS365713
LNOFMOVE EQU   MVEND-MVBEGIN       LENGTH OF MOVE TO ZERO SWITCHES      OS365714
OUTDDSAV DS    CL8                                                      OS365800
         DS    CL1                                                      OS365900
INDDSAV  DS    CL8                                                      OS366000
         DS    CL1                                                      OS366100
DDWK1    DS    CL9                                                      OS366200
DDWK2    DS    CL8                                                      OS366300
DTPIO    DS    0F                  DISK/TAPE IO AREA                    OS366400
         DS    CL(NBUFPAGS*2048)       LIMIT TO ACTUAL NO. OF PAGES     OS366500
*                                      NEEDED TO READ TYPICAL INSTAL-   OS366600
*                                      LATION BLKSIZES.                 OS366700
L        EQU   12                  LETTER WIDTH                         OS366800
S        EQU   2                   SIZE OF BLOCKED LETTERS              OS366900
D1       EQU   CONIO+3             BEGIN 'D'                            OS367000
D2       EQU   D1+1                'D' CONT.                            OS367100
D3       EQU   D2+1                'D' CONT. NOT PRINTED IN OS/DITTO    OS367200
O1       EQU   D1+L/2+S/2-1            MOVE O OVER 1/2 'D' WIDTH - 1    OS367300
O2       EQU   O1+1                'O' CONT.                            OS367400
O3       EQU   O2+1                'O' CONT.                            OS367500
S1       EQU   O1+L+S              'S' POSITION                         OS367600
S2       EQU   S1+1                'S' CONT.                            OS367700
S3       EQU   S2+1                'S' CONT.                            OS367800
X        EQU   S1+L+S              SLASH POSITION                       OS367900
DD1      EQU   X+L+S               'D' IN DITTO                         OS368000
DD2      EQU   DD1+1               'D' CONT.                            OS368100
DD3      EQU   DD2+1               'D' CONT.                            OS368200
I1       EQU   DD1+L+S             'I' IN DITTO                         OS368300
I2       EQU   I1+1                'I' CONT.                            OS368400
T1       EQU   I1+L+S              'T' IN DITTO                         OS368500
T2       EQU   T1+1                'T' CONT.                            OS368600
TT1      EQU   T1+L+S              'T' ( 2ND ) IN DITTO                 OS368700
OO1      EQU   TT1+L+S             LAST 'O' IN DITTO                    OS368800
R0       EQU   0                   REGISTER NOTATION                    OS368900
R1       EQU   1                   REGISTER NOTATION                    OS369000
R2       EQU   2                   REGISTER NOTATION                    OS369100
R3       EQU   3                   REGISTER NOTATION                    OS369200
R4       EQU   4                   REGISTER NOTATION                    OS369300
R5       EQU   5                   REGISTER NOTATION                    OS369400
R6       EQU   6                   REGISTER NOTATION                    OS369500
R7       EQU   7                   REGISTER NOTATION                    OS369600
R8       EQU   8                   REGISTER NOTATION                    OS369700
R9       EQU   9                   REGISTER NOTATION                    OS369800
RA       EQU   10                  REGISTER NOTATION                    OS369900
RB       EQU   11                  REGISTER NOTATION                    OS370000
RC       EQU   12                  REGISTER NOTATION                    OS370100
RD       EQU   13                  REGISTER NOTATION                    OS370200
RE       EQU   14                  REGISTER NOTATION                    OS370300
RF       EQU   15                  REGISTER NOTATION                    OS370400
SAVECCWA EQU   DSKECB              USE DSK ECB FOR TEMP. STORAGE        OS370500
         ORG   ADRSLO              ORIGIN THERE   TO USE DS FOR INIT.   OS370600
         EJECT                                                          OS370700
*********************************************************************** OS370800
**********         GET PARM FIELD                           *********** OS370900
**********         ADJUST SAVE AREA POINTERS                *********** OS371000
**********         GET DATE, OPEN SYSPRINT                  *********** OS371100
**********         CHECK PARM FIELD                         *********** OS371200
**********         DETERMINE MODE OF OPERATION, SET         *********** OS371300
**********         TAPE ALLOCATION SWITCHES, AND ISSUE      *********** OS371400
**********         SYSIN OPEN IF IN CONTROL CARD MODE       *********** OS371500
**********         THIS ROUTINE WILL BE OVERLAYED           *********** OS371600
*********************************************************************** OS371700
         SPACE 1                                                        OS371800
INITIALZ ST    R1,PARMPTR                                               OS371900
         LA    R3,SAVEAREA                                              OS372000
         ST    R3,8(R2)                PTR TO MY SAVE AREA              OS372100
         ST    R2,4(R3)                PTR TO PREVIOUS SAVE AREA        OS372200
         STM   RD,RF,SV13TO15      SAVE BASE REGS ONCE, LM AFTER MACRO  OS372300
         TIME  DEC                     ISSUE MACRO TO OBTAIN DATE       OS372400
         L     RF,SV13TO15+8           RESTORE R15 BEFORE NEXT INSTR.   OS372500
         ST    R1,DATEPKED             STORE DATE                       OS372600
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS372700
         UNPK  DATUPKD(8),DATEPKED     UNPK IN TO SAVE AREA             OS372800
         MVC   DATESAVE(2),DATUPKD+3 GET DATE FROM TIME MACRO WORK AREA OS372900
         MVI   DATESAVE+2,C'.'     INSERT PERIOD                        OS373000
         MVC   DATESAVE+3(3),DATUPKD+5 GET DATE FROM TIME MACRO WORK AR OS373100
         OPEN  (PRTRDCB,(OUTPUT))                                       OS373200
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS373300
RELOCAT  MVC   SET+1(99),SET                                            OS373400
         L     R8,PARMPTR                                               OS373500
         L     R8,0(R8)            PTR TO LENGTH FIELD                  OS373510
BGRD     CLC   2(9,R8),JOBSTRM     CONTROL CARD MODE ?                  OS373600
         BNE   BYPASCRD                NO, BYPASS OPEN CARD             OS373700
         BAL   R9,OPENCRD              YES, OPEN SYSIN                  OS373800
         MVC   USEDSE(7),BLANKS    BLANK OUT DSE PORTION OF MSG         OS373810
         B     CONSOLE                 GO INITIALIZE FOR CONTROL CARD   OS373900
BYPASCRD MVI   CNTRLSW,X'00'           NO, TURN OFF CONTROL CARD SW.    OS374000
         MVI   RELTRKSW+1,X'F0'    REL TRK RTNE SKIPPED IN OPER MODE    OS374100
TIOTLOOK EQU   *                                                        OS374400
         EXTRACT TIOTADDR,FIELDS=(TIOT)    GET TIOT POINTER FROM TCB    OS374402
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER MACRO        OS374412
         CLC   TIOTADDR,ZEROWORD       DID EXTRACT FILL IN FIELD ?      OS374413
         BNE   LOOKINIT            IF EXTRACT OK - USE, ELSE SIMULATE   OS374414
*              SIMULATE EXTRACT MACRO                                   OS374449
         L     R3,16               CVT PTR                              OS374450
         L     R2,0(R3)            PTR TO TCB PTR                       OS374452
         L     R3,4(R2)            CURRENT TCB PTR                      OS374454
         L     R2,12(R3)           TIOTADDR                             OS374456
         ST    R2,TIOTADDR         STORE TIOT ADDR                      OS374458
*                                  END OF EXTRACT                       OS374460
LOOKINIT EQU   *                   INITIALIZE FOR TIOT SCAN             OS374490
         L     R8,TIOTADDR         PRIME R8 WITH TIOT PTR               OS374500
         LA    R8,24(R8)           BUMP TO 1ST DD ENTRY                 OS374502
LOOKTI   CLC   4(8,R8),TPINDD      DDNAME IN TIOT ENTRY = TAPEIN ?      OS374504
         BNE   LOOKTO              NO, LOOK FOR TAPEOUT                 OS374506
         MVI   TIALLOSW,X'FF'      JES, SET TAPEIN ALLOCATIONS SWITCH   OS374508
         LH    R9,18(R8)           GET UCB ADDRESS                      OS374510
         MVC   TIALLUCB(3),13(R9)  SAVE UCB CUU                         OS374512
         B     LOOKBUMP            INCRMENT POUNTERS                    OS374514
LOOKTO   CLC   4(8,R8),TPOTDD      DDNAME IN TIOT ENTRY = TAPEOUT ?     OS374516
         BNE   LOOKBUMP            NO, BUMP TO NEXT ENTRY               OS374518
         MVI   TOALLOSW,X'FF'      YES, SET TAPEOUT ALLOCATED SWITCH    OS374520
         LH    R9,18(R8)           GET UCB ADDRESS                      OS374522
         MVC   TOALLUCB(3),13(R9)  SAVE UCB CUU                         OS374524
LOOKBUMP SR    R9,R9               CLEAR R9                             OS374526
         IC    R9,0(R8)            PICK UP TIOT ENTRY LENGTH            OS374528
         AR    R8,R9               BUMP TO NEXT ENTRY ADDRESS           OS374530
         CLI   0(R8),X'00'         END OF TIOT ?                        OS374532
         BNE   LOOKTI              NO, CONTINUE LOOKING. YES, FALL THRU OS374534
GOINTRP  B     INTRP                   GO INTIALIZE IRPT FUNCTION       OS375700
         DS    0F                                                       OS375800
TIOTADDR DC    F'0'                PTR TO TIOT, USE TO GET TAPE UCB'S   OS375810
ZEROWORD DC    F'0'                IF NOT EQ. TO TIOTADDR, EXTRACT OK   OS375812
PARMPTR  DC    F'0'                                                     OS375900
DATEPKED DS    F                                                        OS376000
DATUPKD  DS    2F                                                       OS376100
JOBSTRM  DC    CL9'JOBSTREAM'                                           OS376200
         EJECT                                                          OS376210
*********************************************************************** OS376300
DSCTAPE  DSECT                     DUMMY SECTION FOR TAPE ECB & IOB     OS376400
         DS    0F                                                       OS376500
DSCTECB  DS    F                                                        OS376600
DSCTIOB  DS    0F                                                       OS376700
         DS    H                                                        OS376800
DSCTSENS DS    H                                                        OS376900
         DS    CL1                                                      OS377000
         DS    CL3                                                      OS377100
DSCTFLG  DS    CL1                                                      OS377200
DSCTCSW  DS    CL7                                                      OS377300
DSCTCCWA DS    F                                                        OS377400
DSCTDCBA DS    F                                                        OS377500
         DS    F                                                        OS377600
DSCTBCI  DS    H                   BLK CNT INCR = +1 (FWD) / -1 (BWD)   OS377700
         DS    H                                                        OS377800
         CSECT                     END DUMMY SECTION FOR ECB/IOB, TAPE  OS377900
         END   OSDITTO                                                  OS378000
/*                                                                      OS378100
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB(OSDITTO),UNIT=SYSDA,                 OS378200
//       DISP=(SHR,KEEP)                                                OS378300
//                                                                      OS378400
//DITTOXXX JOB (302D001300080D),                                        XX378500
//  MSGLEVEL=1,CLASS=A,REGION=100K                                      XX378600
// EXEC ASMFCL,PARM.LKED='REUS,LIST,XREF,NCAL,AC=1'                     XX378700
//ASM.SYSPUNCH DD DUMMY                                                 XX378800
//ASM.SYSIN DD *                                                        XX378900
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'   XX379000
*********************************************************************** XX379100
**********               XXX LOAD MODULE LOADED             *********** XX379200
**********          INTO PARTITION FOR XXX FUNCTION         *********** XX379300
*********************************************************************** XX379400
         SPACE 2                                                        XX379500
         ISEQ  75,80                                                    XX379600
DITTOXXX START                                                          XX379700
         USING *,RC,R5,RA                                               XX379800
         LR    R5,RC                                                    XX379900
         AH    R5,BUMP                                                  XX380000
         ST    RA,RETURN           SAVE RETURN ADDRESS                  XX380100
         LR    RA,R5                                                    XX380200
         AH    RA,BUMP                                                  XX380300
         USING CCX,R7                                                   XX380400
         USING PGX,RB                                                   XX380500
         B     AROUND              BR BY COPYRIGHT                      XX380600
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               XX380700
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED  XX380800
AROUND   EQU   *                                                        XX380900
         SPACE 2                                                        XX381000
*********************************************************************** XX381100
**********          PAGE 1 -  LIST OF FUNCTIONS WITH        *********** XX381200
**********            DESCRIPTIONS WITH * FRAMING           *********** XX381300
*********************************************************************** XX381400
         SPACE 1                                                        XX381500
         MVI   BL,C' '                                                  XX381600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX381700
         MVI   CC,W1               CARRIAGE CTL = WRITE & SPACE         XX381800
         MVI   PG,C'*'                                                  XX381900
         MVC   PG+1(W),PG          *'S ACROSS PAGE                      XX382000
         MVC   PG+30(17),=C' O S / D I T T O '                          XX382100
         BALR  R8,R9               PRINT HEADING                        XX382200
         MVI   PG+1,C' '                                                XX382300
         MVC   PG+2(W-2),PG+1      BLANK HEADING                        XX382400
         BALR  R8,R9               PRINT LINE 4                         XX382500
         LA    R2,TBL1             POINTER TO PRINT LITERALS            XX382600
         LA    R3,NTBL1            # OF TABLE ENTRIES                   XX382700
         MVI   CC,W1               SET UP PRINT & SINGLE SPACE          XX382800
MOVTBL1  MVC   OPCODE,0(R2)        FUNCTION CODE TO PRNT AREA           XX382900
         MVC   COMMENT,3(R2)       DESCN. TO PRNT AREA                  XX383000
         BALR  R8,R9               PRINT LINE                           XX383100
         LA    R2,52(R2)           BUMP TO NEXT LITERAL                 XX383200
         BCT   R3,MOVTBL1          LOOP & PRNT AGAIN TO COMMENTS        XX383300
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S                     XX383400
         BALR  R8,R9               PRINT SPACE AFTER XXX                XX383500
         MVC   OPCODE(66),COMNT1                                        XX383600
         BALR  R8,R9               PRINT COMNT1                         XX383700
         MVC   OPCODE(66),COMNT1AA                                      XX383800
         BALR  R8,R9               PRINT COMNT1AA                       XX383900
         MVC   OPCODE(66),COMNT1A                                       XX384000
         BALR  R8,R9               PRINT COMNT1A                        XX384100
         MVC   OPCODE(66),COMNT2                                        XX384200
         BALR  R8,R9               PRINT COMNT2                         XX384300
         MVC   OPCODE(66),COMNT2A                                       XX384400
         BALR  R8,R9                   'FOR SPLIT CYL . . .             XX384500
         MVC   OPCODE(66),COMNT3                                        XX384600
         BALR  R8,R9               PRINT 'PUNCHED OUTPUT MAY BE ETC.    XX384700
         MVC   OPCODE(66),COMNT4                                        XX384800
         BALR  R8,R9               PRINT 'DCB=( . . .                   XX384900
         MVC   PG+2(W-2),PG+1                                           XX385000
         BALR  R8,R9               PRINT SPACE LINE                     XX385100
         MVC   COMMENT(41),WHO     MOVE L.S.B... LINE                   XX385200
         BALR  R8,R9               PRINT IT                             XX385300
         MVC   PG+1(W),PG          PROPAGATE *'S                        XX385400
         MVI   CC,WC1              SET TO PRNT & SKIP TO NEW PG.        XX385500
         BALR  R8,R9               PRINT LAST LINE PG1                  XX385600
         EJECT                                                          XX385700
*********************************************************************** XX385800
**********        PAGE 2 - 'FUNCTION CONTROL CARD FORMAT '  *********** XX385900
*********************************************************************** XX386000
         SPACE 1                                                        XX386100
         MVC   PG,PG-1             CLEAR PRINT AREA                     XX386200
         MVC   PG+0(19),=C'* * * * * * * * * *'                         XX386300
         MVC   PG+62(19),PG        BUILD HEADING                        XX386400
         MVC   PG+27(28),CNTRLHD                                        XX386500
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX386600
         BALR  R8,R9               PRINT 'FUNCTION CARD...' HDG.        XX386700
         MVC   PG,PG-1             CLEAR PRINT AREA                     XX386800
         MVC   PG+2(6),=C'CC 1-7'     COLUMN HEADING                    XX386900
         MVC   PG+13(8),=C'FUNCTION'  COLUMN HEADING                    XX387000
         MVC   PAR(10),=C'PARAMETERS'   'PARAMETERS' TO HEADING         XX387100
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX387200
         BALR  R8,R9               PRINT COLUMN HEADINGS                XX387300
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX387400
         MVC   PG+2(7),=C'$$DITTO'                                      XX387500
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX387600
         LA    R2,TBL1             POINTER TO FUNCTION CODE LITERALS    XX387700
         LA    R3,NTBL3            NUMBER OF TBL4 ENTRIES               XX387800
         LA    R4,TBL4             POINTER TO PARAMETER SWITCHES        XX387900
LOOP     LA    R8,PARAM-4          POINTER TO VECTOR TABLE              XX388000
         SR    R0,R0               CLEAR REG 0                          XX388100
         LA    R1,PG+25            ADDRESS OF PARAMETER PRINT AREA      XX388200
         MVC   PG+15(70),PG+14     CLEAR PRINT AREA EXCEPT $$DITTO      XX388300
         MVC   PG+15(3),0(R2)      FUNCTION CODE TO PRINT AREA          XX388400
         IC    R0,0(R4)            INDEX VALUE FROM TBL4                XX388500
         LTR   R0,R0               IS IT ZERO?                          XX388600
         BZ    END                 YES, GO PRINT FUNCTION CODE ONLY     XX388700
GO       SLL   R0,2                NO, DOUBLE INDEX VALUE               XX388800
         AR    R8,R0               ADD TO VECTOR TABLE FOR ENTRY        XX388900
         BALR  R0,R8               BRANCH TO VECTOR TABLE (PARAM+)      XX389000
         SR    R0,R0               CLEAR REG 0                          XX389100
         LA    R8,PARAM-4          RESET POINTER TO VECTOR TABLE        XX389200
         LA    R4,1(R4)            BUMP TO NEXT INDEX VALUE             XX389300
         IC    R0,0(R4)            INDEX INTO REG 0                     XX389400
         LTR   R0,R0               IS IT ZERO?                          XX389500
         BNZ   GO                  NO, LOOP & ADD NEXT PARAMETER        XX389600
         BALR  R8,R9               YES, GO PRINT LINE                   XX389700
END      LA    R4,1(R4)            BUMP TO INDEX FOR NEXT FUNCTION      XX389800
         LA    R2,52(R2)           BUMP TO NEXT FUNCTION CODE           XX389900
         MVC   PG+11(70),PG+10     CLEAR PRINT AREA                     XX390000
         BCT   R3,LOOP             LOOP UNTIL ALL FUNCTIONS LISTED      XX390100
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX390200
         MVC   PG+1(20),PG         CLEAR $$DITTO                        XX390300
         BALR  R8,R9               DOUBLE SPACE                         XX390400
         MVC   TRK+1(9),=C'PARAMETERS'                                  XX390500
         MVC   PAR+8(11),=C'DESCRIPTION'                                XX390600
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX390700
         BALR  R8,R9               PRINT LOWER HALF PAGE HDGS.          XX390800
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX390900
         LA    R2,M2               POINTER TO PARAMETER TABLE           XX391000
         LA    R3,DESCN            POINTER TO DESCRIPTION TABLE         XX391100
         LA    R4,9                NUMBER OF PARAMETERS                 XX391200
PARMLP   MVC   TRK(14),0(R2)       PARAMETER TO PRINT AREA              XX391300
         LA    R2,15(R2)           BUMP TO NEXT PARAMETER               XX391400
         MVC   PAR(33),0(R3)       DESCN. TO PRINT AREA                 XX391500
         LA    R3,33(R3)           BUMP TO NEXT DESCN.                  XX391600
         BALR  R8,R9               PRINT PARAM & DESCN.                 XX391700
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX391800
         BCT   R4,PARMLP           LOOP UNTIL DONE                      XX391900
         MVI   CC,W2                                                    XX392000
         BALR  R8,R9               DOUBLE SPACE                         XX392100
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX392200
         MVC   TRK(78),PARM1       'PARM NOTE' TO PRINT AREA            XX392300
         BALR  R8,R9               PRINT 1ST LINE PARM NOTE             XX392400
         MVC   TRK(78),DDNOTE      SUBMIT DD NOTE                       XX392500
         BALR  R8,R9               PRINT DD NOTE                        XX392600
         MVC   TRK(78),NOTE3       FILE PROTECT NOTE                    XX392700
         BALR  R8,R9               PRINT FILE PROTECT NOTE              XX392800
         MVC   TRK(78),NOTE4       TAPE MARK NOTE                       XX392900
         BALR  R8,R9               PRINT TAPEMARK NOTE                  XX393000
         MVC   TRK(78),NOTE4A      SET UP DCB NOTE                      XX393100
         BALR  R8,R9               PRINT IT                             XX393200
         MVC   TRK(78),CCCHH1      'CCCHH IS ...                        XX393300
         BALR  R8,R9               PRINT IT                             XX393400
         MVC   TRK(78),CCCHH2      'E.G. BEGIN= . . .                   XX393500
         BALR  R8,R9               PRINT IT                             XX393600
         MVC   TRK(78),CCCHH3      ABSOL. NOTE                          XX393700
         BALR  R8,R9               PRINT IT HERE AS NO ROOM ON CONSOL.  XX393800
         MVC   TRK(78),NBLKSNOT    'NBLKS NOTE' TO PRINT AREA-LINE 2    XX393900
         MVI   CC,WC1              SET TO PRINT & SKIP TO NEW PAGE      XX394000
         BALR  R8,R9               PRINT & SKIP TO NEW PAGE             XX394100
         EJECT                                                          XX394200
*********************************************************************** XX394300
**********        PAGE 3 - 'CONSOLE PROCEDURES'             *********** XX394400
*********************************************************************** XX394500
         SPACE 1                                                        XX394600
         MVI   PG,C' '                                                  XX394700
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX394800
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX394900
         MVC   BL+7(19),=C'* * * * * * * * * *'                         XX395000
         MVC   BL+104(19),BL+7                                          XX395100
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '                          XX395200
         MVC   BL+68(10),PROCED                                         XX395300
         BALR  R8,R9               PRINT IT                             XX395400
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX395500
         MVC   BL+7(116),PROC1                                          XX395600
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX395700
         BALR  R8,R9               PRINT IT                             XX395800
         MVC   BL+7(116),PROC2                                          XX395900
         BALR  R8,R9               PRINT IT                             XX396000
         MVC   BL+7(116),PROC3                                          XX396100
         BALR  R8,R9               PRINT IT                             XX396200
         MVC   BL+7(116),PROC4                                          XX396300
         BALR  R8,R9               PRINT IT                             XX396400
         MVC   BL+7(116),PROC5                                          XX396500
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX396600
         BALR  R8,R9               PRINT IT                             XX396700
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX396800
         MVC   BL+7(9),PROCED                                           XX396900
         MVC   PG+5(18),SYMBOLPA                                        XX397000
         MVC   PG+58(12),FUNCMSG                                        XX397100
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX397200
         BALR  R8,R9               PRINT IT                             XX397300
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX397400
         MVC   BL+7(4),NAME                                             XX397500
         MVC   PG+5(14),DEFVALU                                         XX397600
         MVC   PG+58(10),GDELINE                                        XX397700
         MVI   CC,W2               SPACE 2 AFTER PRINT                  XX397800
         BALR  R8,R9               PRINT IT                             XX397900
         LA    R2,DITPROC                                               XX398000
         LA    R3,DEFVAL                                                XX398100
         LA    R4,GDELIN                                                XX398200
         ST    R6,SAVR6            STORE R6 BEFORE BCT LOOP             XX398300
         LA    R6,12               LOOP 12 TIMES                        XX398400
         MVC   BL+1(131),BL                                             XX398500
         MVI   CC,W1                                                    XX398600
         MVC   BL+8(5),=C'DITTO'                                        XX398700
MOVLOP1  EQU   *                                                        XX398800
         MVC   BL+13(3),0(R2)                                           XX398900
         MVC   PG+6(30),0(R3)                                           XX399000
         MVC   PG+59(33),0(R4)                                          XX399100
         LA    R2,3(R2)                                                 XX399200
         LA    R3,30(R3)                                                XX399300
         LA    R4,33(R4)                                                XX399400
         ST    R6,SAVR6XXX         STORE R6 BEFORE BALR TO PRINT        XX399500
         L     R6,SAVR6            RESTORE R6 BEFORE BALR TO PRINT      XX399600
         BALR  R8,R9               PRINT IT                             XX399700
         L     R6,SAVR6XXX         RESTORE R6 AFTER  BALR TO PRINT      XX399800
         BCT   R6,MOVLOP1                                               XX399900
         L     R6,SAVR6            RESTORE R6 BEFORE BALR TO PRINT      XX400000
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX400100
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX400200
         BALR  R8,R9               PRINT IT                             XX400300
         MVC   PG+5(11),=C'UNIT RECORD'                                 XX400400
         MVC   PG+17(19),SYMBOLPA                                       XX400500
         MVC   PG+58(13),=C'TAPE AND DISK'                              XX400600
         MVC   PG+72(19),SYMBOLPA                                       XX400700
         MVI   CC,W2               SPACE 2 AFTER PRINT                  XX400800
         BALR  R8,R9               PRINT IT                             XX400900
         LA    R2,UNTRCD                                                XX401000
         LA    R3,TPNDSK                                                XX401100
         LA    R4,6                                                     XX401200
         MVC   BL+1(131),BL                                             XX401300
         MVI   CC,W1                                                    XX401400
MOVLOP2  MVC   PG+6(30),0(R2)                                           XX401500
         MVC   PG+59(31),0(R3)                                          XX401600
         LA    R2,30(R2)                                                XX401700
         LA    R3,31(R3)                                                XX401800
         BALR  R8,R9               PRINT IT                             XX401900
         BCT   R4,MOVLOP2                                               XX402000
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX402100
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX402200
         BALR  R8,R9               PRINT IT                             XX402300
         MVC   PG+5(84),SAMPSTRT                                        XX402400
         MVI   CC,W2                                                    XX402500
         BALR  R8,R9               PRINT                                XX402600
         MVC   BL+1(131),BL                                             XX402700
         MVC   PG+5(7),=C'COMMAND'                                      XX402800
         MVC   PG+58(11),=C'EXPLANATION'                                XX402900
         BALR  R8,R9               PRINT                                XX403000
         LA    R4,11                                                    XX403100
         LA    R2,SAMPCOMM                                              XX403200
         LA    R3,COMEXPL                                               XX403300
         MVC   BL+1(131),BL                                             XX403400
         MVI   CC,W1                                                    XX403500
MOVLOP3  MVC   PG+6(44),0(R2)                                           XX403600
         MVC   PG+59(41),0(R3)                                          XX403700
         LA    R2,44(R2)                                                XX403800
         LA    R3,41(R3)                                                XX403900
         BALR  R8,R9               PRINT                                XX404000
         BCT   R4,MOVLOP3                                               XX404100
         MVC   BL+1(131),BL                                             XX404200
         MVI   CC,W1                                                    XX404300
         BALR  R8,R9               PRINT                                XX404400
         MVI   CC,W2                                                    XX404500
         MVC   BL+8(5),=C'NOTE.'                                        XX404600
         BALR  R8,R9               PRINT                                XX404700
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX404800
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX404900
         MVC   BL+8(121),CCINOTE                                        XX405000
         BALR  R8,R9               PRINT                                XX405100
         MVC   BL+8(121),TCTLNOTE                                       XX405200
         BALR  R8,R9               PRINT                                XX405300
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX405400
         MVC   BL+8(68),DSKNOTE                                         XX405500
         BALR  R8,R9               PRINT                                XX405600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX405700
         MVC   BL+8(50),XXXNOTE                                         XX405800
         BALR  R8,R9               PRINT                                XX405900
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX406000
         MVI   CC,WC1              PRINT & SKIP TO 1                    XX406100
         BALR  R8,R9               PRINT IT                             XX406200
         EJECT                                                          XX406300
*********************************************************************** XX406400
**********        PAGE 4 - 'CONSOLE OPERATION'              *********** XX406500
*********************************************************************** XX406600
         SPACE 1                                                        XX406700
         MVI   PG,C' '                                                  XX406800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX406900
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX407000
         MVC   BL+7(19),=C'* * * * * * * * * *'                         XX407100
         MVC   BL+104(19),BL+7                                          XX407200
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '                          XX407300
         MVC   BL+68(9),=C'OPERATION'                                   XX407400
         BALR  R8,R9               PRINT PAGE 2 HDG. - CONSOLE OPER..   XX407500
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX407600
         MVC   BL+7(115),OPERATOR  OPER. PRINT COMMENT LINE 1           XX407700
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX407800
         BALR  R8,R9               PRINT IT                             XX407900
         MVC   BL+7(116),OPERATOR+116   2ND LINE OF OPER. COMMENT       XX408000
         BALR  R8,R9               PRINT IT                             XX408100
         MVC   BL+7(116),TE7       SET UP WTOR NOTE                     XX408200
         MVI   CC,W2                                                    XX408300
         BALR  R8,R9               PRINT IT                             XX408400
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX408500
         LA    R2,TBL1+3           POINTER TO FUNCTION DESCNS.          XX408600
         LA    R3,NTBL1            # OF PRINT LINES                     XX408700
         LA    R4,STRING                                                XX408800
         MVI   CC,W1                                                    XX408900
         MVC   PG+62(22),REQUR                                          XX409000
         B     OPLOOP1                                                  XX409100
OPERLOOP MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX409200
         MVC   PG+54(37),PG+53     CLEAR PRINT AREA                     XX409300
         LA    R1,PG+54                                                 XX409400
SAVCORE  CLI   0(R4),C' '          END OF LITERAL ?                     XX409500
         BE    BUMPBL              YES                                  XX409600
         MVC   0(1,R1),0(R4)       MOVE DATA                            XX409700
         LA    R1,1(R1)            BUMP PRINT AREA                      XX409800
         LA    R4,1(R4)            BUMP PRINT LITERAL POINTER           XX409900
         B     SAVCORE                                                  XX410000
BUMPBL   LA    R4,1(R4)            BUMP PAST BLANK                      XX410100
OPLOOP1  MVC   PG+1(49),0(R2)      DESCNS. TO PRINT AREA                XX410200
         LA    R2,52(R2)           BUMP TO NEXT DESCN.                  XX410300
         BALR  R8,R9               PRINT LINE                           XX410400
         BCT   R3,OPERLOOP                                              XX410500
         MVC   PG+1(95),PG         CLEAR PRINT AREA                     XX410600
         BALR  R8,R9               SINGLE SPACE                         XX410700
         LA    R2,M6+1             ADDRESS OF NBLKS=N..N                XX410800
         LA    R3,DESCN1           ADDRESS OF NBLKS DESCN               XX410900
         LA    R4,6                # OF PRINT LINES                     XX411000
         MVI   BL+66,C'*'                                               XX411100
OPLOOP   MVI   CC,W1               SET TO SINGLE SPACE                  XX411200
         MVC   BL+07(14),00(R2)    LEFT PARAMETER TO PRINT AREA         XX411300
         MVC   BL+27(33),00(R3)    LEFT DESCRIPTION TO PRINT AREA       XX411400
         MVC   BL+74(14),15(R2)    RIGHT PARAMETER TO PRINT AREA        XX411500
         MVC   BL+94(33),33(R3)    RIGHT DESCRIPTION TO PRINT AREA      XX411600
         LA    R2,30(R2)           BUMP PARAMETER POINTER               XX411700
         LA    R3,66(R3)           BUMP DESCRIPTION POINTER             XX411800
         BALR  R8,R9               PRINT IT                             XX411900
         BCT   R4,OPLOOP                                                XX412000
         MVC   BL+01(130),BL       CLEAR PRINT AREA                     XX412100
         MVI   CC,WC1              PRINT & SKIP TO 1                    XX412200
         BALR  R8,R9                                                    XX412300
         EJECT                                                          XX412400
*********************************************************************** XX412500
**********        PAGE 5 - 'TAPE DENSITY & MODE VALUES'     *********** XX412600
*********************************************************************** XX412700
         SPACE 1                                                        XX412800
         MVI   CC,W3               SET TO PRNT & TRIPLE SPACE           XX412900
         MVC   PG+22(38),TAPHDG    'TAPE DENSITY...' HDG.               XX413000
         MVC   PG+0(19),=C'* * * * * * * * * *'                         XX413100
         MVC   PG+62(19),PG                                             XX413200
         BALR  R8,R9               PRINT IT - LINE 1                    XX413300
         MVC   PG,HDG              COL. HDGS. - 'TRACK DENSITY...'      XX413400
         BALR  R8,R9               PRINT THE COLUMN HDGS.               XX413500
         MVI   CC,W1               SET TO PRNT & SINGLE SPACE           XX413600
         MVC   PG+1,PG             CLEAR PRNT AREA                      XX413700
         LA    R2,TBL2             POINTER TO PRINT LITERALS            XX413800
         LA    R3,NTBL2            NUMBER OF LITERALS                   XX413900
MOVTBL2  MVC   DEN,0(R2)           DENSITY VALUE TO PRINT AREA          XX414000
         MVC   PAR,3(R2)           PARITY VALUE TO PRINT AREA           XX414100
         MVC   TRN,7(R2)           TRANSLATE VALUE TO PRINT AREA        XX414200
         MVC   DCT,10(R2)          DATA CONVERT VALUE TO PRINT AREA     XX414300
         MVC   MMS,13(R2)          MODE VALUE TO PRINT AREA             XX414400
         MVC   TRK,15(R2)          TRACK VALUE TO PRINT AREA            XX414500
         BALR  R8,R9               PRINT THE VALUES                     XX414600
         LA    R2,16(R2)           BUMP TO NEXT LITERAL                 XX414700
         BCT   R3,MOVTBL2          LOOP & PRINT ALL 7 TRACK             XX414800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX414900
         BALR  R8,R9               PRINT BLANK LINE                     XX415000
         MVI   TRK,C'9'            9 TO TRACK                           XX415100
         MVC   DEN-1(4),=C' 800'   800 TO DENSITY                       XX415200
         MVC   PAR(14),=C'SINGLE DENSITY'                               XX415300
         MVC   MMS,=C'C0'          MODE VALUE TO PRINT AREA             XX415400
         BALR  R8,R9               PRINT 9-800-SINGLE DENSITY           XX415500
         MVC   DEN-1(2),=C'16'     1600 TO DENSITY                      XX415600
         BALR  R8,R9               PRINT 9-1600-SINGLE DENSITY          XX415800
         MVC   DEN-1(3),=C'625'    6250 BPI                             XX415810
         MVI   MMS,C'D'            D0 MODE SET                          XX415820
         MVI   CC,W2               PRT & DOUBLE SPACE                   XX415830
         BALR  R8,R9               PRINT                                XX415840
         MVC   DEN-1(4),=C' 800'   800 TO DENSITY                       XX415900
         MVC   PAR(6),=C'DUAL  '   OVERLAY SINGLE WITH DUAL             XX416000
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX416100
         MVC   MMS,=C'C8'              C8                               XX416200
         BALR  R8,R9               PRINT 9-800-DUAL DENSITY             XX416300
         MVC   DEN-1(2),=C'16'     1600 TO DENSITY                      XX416400
         MVI   MMS+1,C'0'          MODE TO C0                           XX416500
         BALR  R8,R9               PRINT 9-1600-DUAL DENSITY            XX416700
         MVC   DEN-1(3),=C'625'    6250 BPI                             XX416710
         MVI   MMS,C'D'            D0                                   XX416720
         MVI   CC,W3               PRT & TRIPLE SPACE                   XX416730
         BALR  R8,R9               PRINT                                XX416740
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX416800
         MVC   TRK(63),DEFAULT     'NOTE. MM...' TO PRINT AREA          XX416900
         BALR  R8,R9               PRINT NOTE & TRIPLE SPACE            XX417000
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX417100
         MVC   PG(80),TE1          TAPE ERROR COMMENT LINE 1            XX417200
         BALR  R8,R9               PRINT IT                             XX417300
         MVC   PG(80),TE2          TAPE ERROR COMMENT LINE 2            XX417400
         BALR  R8,R9               PRINT IT                             XX417500
         MVC   PG(80),TE3          TAPE ERROR COMMENT LINE 3            XX417600
         BALR  R8,R9               PRINT IT                             XX417700
         MVC   PG(80),TE4          TAPE ERROR COMMENT LINE 4            XX417800
         BALR  R8,R9               PRINT IT                             XX417900
         MVC   PG(80),TE5          TAPE ERROR COMMENT LINE 5            XX418000
         BALR  R8,R9               PRINT IT                             XX418100
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX418200
         MVC   PG(28),TE6          TAPE ERROR COMMENT - LINE 6          XX418300
         BALR  R8,R9               PRINT IT                             XX418400
         L     RA,RETURN                                                XX418500
         BR    RA                  WE ARE DONE - RETURN TO DITTO        XX418600
RETURN   DS    1F                                                       XX418700
SAVR6    DS    F                   SAVE R6 DURING PROCEDURE PAGE LOOP   XX418800
SAVR6XXX DS    F                   SAVE R6 BEFORE BR TO PRINT           XX418900
BUMP     DC    H'4096'             BASE REGISTER BUMP                   XX419000
PARAM    B     X1                  VECTOR TABLE                         XX419100
         B     X2                  ENTRY INTO THIS TABLE                XX419200
         B     X3                  IS BASED ON AN INDEX                 XX419300
         B     X4                  VALUE OBTAINED FROM                  XX419400
         B     X5                  TBL4.                                XX419500
         B     X6                  EXIT IS TO A SPECIFIC                XX419600
         B     X7                  MOVE STATEMENT FOR                   XX419700
         B     X8                  THE REQUIRED PARAMETER               XX419800
         B     X9                                                       XX419900
         B     XA                                                       XX420000
         B     XB                                                       XX420100
         B     XC                                                       XX420200
X1       LR    R8,R0               NO PARAMETER REQUIRED                XX420300
         BR    R8                  RETURN                               XX420400
X2       MVC   0(12,R1),M2         'INPUT = SYSNNN' TO PRINT AREA       XX420500
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX420600
         B     X1                  RETURN                               XX420700
X3       MVC   0(14,R1),M3         'OUTPUT = ...' TO PRINT AREA         XX420800
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX420900
         B     X1                  RETURN                               XX421000
X4       MVC   0(12,R1),M4         'BEGIN...' TO PRINT AREA             XX421100
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX421200
         B     X1                  RETURN                               XX421300
X5       MVC   0(10,R1),M5         'END=...' TO PRINT AREA              XX421400
         LA    R1,10(R1)           BUMP PRINT AREA POINTER              XX421500
         B     X1                  RETURN                               XX421600
X6       MVC   0(11,R1),M6         'NBLKS=...' TO PRINT AREA            XX421700
         LA    R1,11(R1)           BUMP PRINT AREA POINTER              XX421800
         B     X1                  RETURN                               XX421900
X7       MVC   0(14,R1),M7         'RECSIZE=..#' TO PRINT AREA          XX422000
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX422100
         B     X1                  RETURN                               XX422200
X8       MVC   0(14,R1),M8         'BLKFACTOR...' TO PRINT AREA         XX422300
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX422400
         B     X1                  RETURN                               XX422500
X9       MVC   0(12,R1),M9+1       'DECKTYPE=...' TO PRINT AREA         XX422600
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX422700
         B     X1                  RETURN                               XX422800
XA       MVC   0(15,R1),MA         'DECKNAME=...' TO PRINT AREA         XX422900
         LA    R1,15(R1)           BUMP PRINT AREA POINTER              XX423000
         B     X1                  RETURN                               XX423100
XB       MVC   0(13,R1),MB         'OUTPUT...' TO PRINT AREA            XX423200
         LA    R1,13(R1)           BUMP PRINT AREA POINTER              XX423300
         B     X1                  RETURN                               XX423400
XC       MVC   0(13,R1),M9         ',DECKTYPE=...' TO PRINT AREA        XX423500
         LA    R1,13(R1)           BUMP PRINT AREA POINTER              XX423600
         B     X1                  RETURN                               XX423700
         SPACE 2                                                        XX423800
*********************************************************************** XX423900
**********             THIS TABLE DETERMINES THE LINE       *********** XX424000
**********          SEQUENCE AND PARAMETERS FOR THE         *********** XX424100
**********          FUNCTION CONTROL CARD PAGE.             *********** XX424200
**********             PARAMETERS ARE ASSEMBLED IN A        *********** XX424300
**********          STRING FORMAT IN THE PRINT AREA. THE    *********** XX424400
**********          HEX VALUES 02 THRU 0B CORRESPOND TO     *********** XX424500
**********          PARAMETERS LABELED M2 THRU MB.          *********** XX424600
*********************************************************************** XX424700
         SPACE 1                                                        XX424800
TBL4     DC    X'00'     BYPASS FIRST ELEMENT IN TBL1                   XX424900
         DC    X'0100'     CC                                           XX425000
         DC    X'090A00'   CCS                                          XX425100
         DC    X'0100'     CP                                           XX425200
         DC    X'0100'     CH                                           XX425300
         DC    X'0B0800'   CT                                           XX425400
         DC    X'0B080C0A00' CTS                                        XX425500
         DC    X'00'               BYPASS CCL                           XX425600
         DC    X'00'       BYPASS PAGE 1 SPACE                          XX425700
         DC    X'00'       BYPASS *** TAPE FUNCTION COMMENT             XX425800
         DC    X'0200'     TC                                           XX425900
         DC    X'020600'   TP                                           XX426000
         DC    X'02070600' TPR                                          XX426100
         DC    X'020600'   TH                                           XX426200
         DC    X'02070600' THR                                          XX426300
         DC    X'020600'   TPV                                          XX426400
         DC    X'020600'   TDV                                          XX426500
         DC    X'00'       BYPASS TRS                                   XX426600
         DC    X'00'       BYPASS TRL                                   XX426700
         DC    X'00'       BYPASS INT                                   XX426800
         DC    X'02030600' TT (WITH OPTIONAL NBLKS)                     XX426900
         DC    X'0203070800' TTR                                        XX427000
         DC    X'0B00'     WTM                                          XX427100
         DC    X'0B00'     REW                                          XX427200
         DC    X'0B00'     RUN                                          XX427300
         DC    X'0B0600'   FSR                                          XX427400
         DC    X'0B0600'   BSR                                          XX427500
         DC    X'0B00'     FSF                                          XX427600
         DC    X'0B00'     BSF                                          XX427700
         DC    X'00'       BYPASS ERT                                   XX427800
         DC    X'00'       BYPASS SPACE LINE                            XX427900
         DC    X'00'       BYPASS *** DISK FUNCTION COMMENT             XX428000
         DC    X'00'               BYPASS DSE                           XX428100
         DC    X'02040500'         DP                                   XX428200
         DC    X'02040500'         DD                                   XX428300
         DC    X'0204050700'       DPD                                  XX428400
         DC    X'0204050700'       DDD                                  XX428500
         DC    X'00'       BYPASS DRL                                   XX428600
         DC    X'00'       BYPASS DRS                                   XX428700
         DC    X'00'       BYPASS EOF                                   XX428900
         DC    X'00'       BYPASS DID                                   XX429000
         DC    X'00'       BYPASS SPACE LINE                            XX429100
         DC    X'0100'     XXX                                          XX429200
         DC    X'0100'     EOJ                                          XX429300
         SPACE 2                                                        XX429400
*********************************************************************** XX429500
**********                     CONSTANTS                    *********** XX429600
*********************************************************************** XX429700
         SPACE 1                                                        XX429800
TBL1     DC    C'               CARD FUNCTIONS                       '  XX429900
         DC    C'CC CARD TO CARD                                     '  XX430000
         DC    C'CCSCARD TO CARD WITH SEQ. NUMBERS AND DECK NAME     '  XX430100
         DC    C'CP CARD TO PRINTER IN CHARACTER FORMAT              '  XX430200
         DC    C'CD CARD TO PRINTER IN CHARACTER AND HEX DUMP FORMAT '  XX430300
         DC    C'CT CARD TO TAPE BLOCKED 1 TO 400                    '  XX430400
         DC    C'CTSCARD TO TAPE RESEQUENCED                         '  XX430500
         DC    C'CCLCANCEL CARD INPUT (FLUSH TO EOF)                 '  XX430600
         DC    C'                                                    '  XX430700
         DC    C'               TAPE FUNCTIONS                       '  XX430800
         DC    C'TC TAPE TO CARD BLOCKED OR UNBLOCKED                '  XX430900
         DC    C'TP TAPE TO PRINTER UNBLOCKED IN CHAR. FORMAT        '  XX431000
         DC    C'TPDTAPE TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  XX431100
         DC    C'TD TAPE TO PRINTER UNBLOCKED IN CHAR. AND HEX DUMP  '  XX431200
         DC    C'TDDTAPE TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  XX431300
         DC    C'TPVTAPE TO PRINTER VARIABLE RECDS CHAR. FORMAT      '  XX431400
         DC    C'TDVTAPE TO PRINTER VARIABLE RECDS CHAR. AND HEX DUMP'  XX431500
         DC    C'TRSTAPE RECORD SCAN                                 '  XX431600
         DC    C'TRLTAPE RECORD LOAD                                 '  XX431700
         DC    C'INTINITIALIZE TAPE                                  '  XX431800
         DC    C'TT TAPE TO TAPE  (01 TO 99) FILES                   '  XX431900
         DC    C'TTRTAPE TO TAPE REBLOCKED                           '  XX432000
         DC    C'WTMWRITE TAPE MARK                                  '  XX432100
         DC    C'REWREWIND TAPE                                      '  XX432200
         DC    C'RUNREWIND AND UNLOAD TAPE                           '  XX432300
         DC    C'FSRFORWARD SPACE RECORD                             '  XX432400
         DC    C'BSRBACK SPACE RECORD                                '  XX432500
         DC    C'FSFFORWARD SPACE FILE                               '  XX432600
         DC    C'BSFBACK SPACE FILE                                  '  XX432700
         DC    C'ERTERASE TAPE  (DATA SECURITY ERASE - 3420 ONLY)    '  XX432800
         DC    C'                                                    '  XX432900
         DC    C'               DISK FUNCTIONS                       '  XX433000
         DC    C'DSEDISPLAY DATA SET EXTENT ON CONSOLE, USE FOR CCCHH'  XX433100
         DC    C'DP DISK TO PRINTER UNBLOCKED IN CHAR. FORMAT        '  XX433200
         DC    C'DD DISK TO PRINTER UNBLOCKED IN CHAR. AND HEX DUMP  '  XX433300
         DC    C'DPDDISK TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  XX433400
         DC    C'DDDDISK TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  XX433500
         DC    C'DRLDISK RECORD LOAD - KEY AND/OR DATA               '  XX433600
         DC    C'DRSDISK RECORD SCAN - PARTIAL KEY OR DATA OR EOF    '  XX433700
         DC    C'EOFWRITE DISK EOF RECORD                            '  XX433900
         DC    C'DIDALTER DISK IDENTIFICATION VOLUME LABEL (OFFLINE) '  XX434000
         DC    C'                                                    '  XX434100
         DC    C'XXXLIST FUNCTIONS ON SYSPRINT                       '  XX434200
         DC    C'EOJEND OF JOB                                       '  XX434300
COMNT1   DC    C'CONTROL CARD OPERATION - /*'                           XX434400
         DC    C' IS SYSIN EOF FOR CONTROL '                            XX434500
         DC    C'CARDS '                                                XX434600
         DC    X'50'                   &                                XX434700
         DC    C' DATA.'                                                XX434800
COMNT1AA DC    C'                           '                           XX434900
         DC    C' IF /* IN DATA, //SYSIN DD DATA,DLM=AA.'               XX435000
COMNT1A  DC    C'                         /+'                           XX435100
         DC    C' IS OS/DITTO EOF FOR DATA CARD INPUT.  '               XX435200
COMNT2   DC    C'CONSOLE OPERATION - READER EOF KEY'                    XX435300
         DC    C' IS END OF FILE FOR CARD INPUT.  '                     XX435400
COMNT2A  DC    C'FOR SPLIT CYLINDER DISK FUNCTIONS:'                    XX435410
         DC    C' USE SP, SD, SPD, SDD, AND SRS.  '                     XX435411
COMNT3   DC    C'PUNCHED OUTPUT MAY BE INTERPRETE'                      XX435500
         DC    C'D BY USING //SYSPUNCH DD UNIT=00D,'                    XX435600
COMNT4   DC    C'DCB=(BLKSIZE=81,RECFM=FA,FUNC=I) -'                    XX435700
         DC    C' 3525 PRINT FEATURE REQUIRED.   '                      XX435800
TBL2     DC    C'200ODD OFFON 107'                                      XX435900
         DC    C'200EVENOFFOFF207'                                      XX436000
         DC    C'200EVENON OFF287'                                      XX436100
         DC    C'200ODD OFFOFF307'                                      XX436200
         DC    C'200ODD ON OFF387'                                      XX436300
         DC    C'                '                                      XX436400
         DC    C'556ODD OFFON 507'                                      XX436500
         DC    C'556EVENOFFOFF607'                                      XX436600
         DC    C'556EVENON OFF687'                                      XX436700
         DC    C'556ODD OFFOFF707'                                      XX436800
         DC    C'556ODD ON OFF787'                                      XX436900
         DC    C'                '                                      XX437000
         DC    C'800ODD OFFON 907'                                      XX437100
         DC    C'800EVENOFFOFFA07'                                      XX437200
         DC    C'800EVENON OFFA87'                                      XX437300
         DC    C'800ODD OFFOFFB07'                                      XX437400
         DC    C'800ODD ON OFFB87'                                      XX437500
DESCN    DC    C'MUST BE TAPEIN,DISKIN, OR TAPEOUT'                     XX437600
         DC    C'MUST BE TAPEOUT OR TAPEIN        '                     XX437700
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET'                     XX437800
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET'                     XX437900
DESCN1   DC    C'NUMBER OF TAPE BLOCKS     1-9999 '                     XX438000
         DC    C'LOGICAL RECORD SIZE      1-99999 '                     XX438100
         DC    C'DECKTYPE (BAL, RPG, COB)         '                     XX438200
         DC    C'DECKNAME (0-3, 0-5, 0-8) CHAR.   '                     XX438300
         DC    C'OUTPUT BLOCKING FACTOR     1-999 '                     XX438400
         DC    C'LENGTH OF SCAN ARGUMENT (1-35)   '                     XX438500
         DC    C'COPY FORWARD OR BACK    (F OR B) '                     XX438600
         DC    C'NEW VOLUME SERIAL NUMBER  LNTH=6 '                     XX438700
         DC    C'NUMBER OF FILES         (1-99)   '                     XX438800
         DC    C'SCAN FOR (K=KEY, D=DATA, E=EOF)  '                     XX438900
         DC    C'OPTIONAL - (LIMITS PRINTING)     '                     XX439000
         DC    C'TRS VARIABLE LENGTH RECORDS ONLY '                     XX439100
M2       DC    C'INPUT=DDNAME  '                                        XX439200
M3       DC    C',OUTPUT=DDNAME '                                       XX439300
M4       DC    C',BEGIN=CCCHH   '                                       XX439400
M5       DC    C',END=CCCHH     '                                       XX439500
M6       DC    C',NBLKS=N..N    '                                       XX439600
M7       DC    C',RECSIZE=N...N '                                       XX439700
M9       DC    C',DECKTYPE=XXX  '                                       XX439800
MA       DC    C',DECKNAME=X...X'                                       XX439900
M8       DC    C',BLKFACTOR=N.N '                                       XX440000
         DC    C',SCANLNTH=NN   '                                       XX440100
         DC    C',COPYD=X       '                                       XX440200
         DC    C',VOLSER=NNNNNN '                                       XX440300
         DC    C',NFILES=NN     '                                       XX440400
         DC    C',SCANTYPE=X    '                                       XX440500
         DC    C',NRECS=N..N    '                                       XX440600
         DC    C',RECSIZE=V     '                                       XX440700
MB       EQU   M3+1                                                     XX440800
NTBL1    EQU   44                  # OF ELEMENTS IN TBL1                XX440900
NTBL2    EQU   17                                                       XX441000
NTBL3    EQU   NTBL1                                                    XX441100
W1       EQU   09                                                       XX441200
W2       EQU   17                                                       XX441300
W3       EQU   25                                                       XX441400
WC1      EQU   137                                                      XX441500
W        EQU   80                                                       XX441600
R0       EQU   0                                                        XX441700
R1       EQU   1                                                        XX441800
R2       EQU   2                                                        XX441900
R3       EQU   3                                                        XX442000
R4       EQU   4                                                        XX442100
R5       EQU   5                                                        XX442200
R6       EQU   6                                                        XX442300
R7       EQU   7                                                        XX442400
R8       EQU   8                                                        XX442500
R9       EQU   9                                                        XX442600
RA       EQU   10                                                       XX442700
RB       EQU   11                                                       XX442800
RC       EQU   12                                                       XX442900
RD       EQU   13                                                       XX443000
RE       EQU   14                                                       XX443100
RF       EQU   15                                                       XX443200
DEFAULT  DC    C'NOTE.  MM PORTION OF CUUMM IS OPTIONAL - '             XX443300
         DC    C'VALUE IS C0 IF OMITTED'                                XX443400
CNTRLHD  DC    C'FUNCTION CONTROL CARD FORMAT'                          XX443500
PARM1    DC    C'NOTE. SUBMIT (PARM=''JOBSTREAM'') ON EXEC CARD '       XX443600
         DC    C'TO DENOTE CONTROL CARD OPERATION.'                     XX443700
DDNOTE   DC    C'      SUBMIT TAPEIN, TAPEOUT, '                        XX443800
         DC    X'50'                   &                                XX443900
         DC    C' DISKIN DD CARDS IF USED IN INPUT= OR OUTPUT=. '       XX444000
NOTE3    DC    C'      TAPEOUT IS OPENED AS OUTPUT; THEREFORE, A FILE ' XX444100
         DC    C'PROTECT RING IS REQUIRED.'                             XX444200
NOTE4    DC    C'      TWO TAPE MARKS ARE WRITTEN ON TAPEOUT BY A CLOS' XX444300
         DC    C'E IN FUNCTIONS RUN '                                   XX444400
         DC    X'50'                   &                                XX444500
         DC    C' EOJ.'                                                 XX444600
NOTE4A   DC    C'      DCB=(DEN=X,TRTCH=XX) MAY BE SPECIFIED ON TAPEIN' XX444700
         DC    C' AND TAPEOUT DD CARDS.   '                             XX444800
CCCHH1   DC    C'      CCCHH IS RELATIVE TO FIRST CCCHH OF DATA SET EX' XX444900
         DC    C'TENT; E.G. BEGIN=00000,  '                             XX445000
CCCHH2   DC    C'            END=00418 WILL ACCESS ENTIRE 3330 FIVE CY' XX445100
         DC    C'LINDER 3330 DATA SET.    '                             XX445200
NBLKSNOT DC    C'      NBLKS=N..N PARAMETER IS OPTIONAL. LAST PARAMETE' XX445300
         DC    C'R MUST BE EOJ.           '                             XX445400
CCCHH3   DC    C'      FROM CONSOLE CCCHH IS ABSOLUTE. OPERATOR MUST U' XX445500
         DC    C'SE DSE FOR VALID CCCHH.  '                             XX445600
TAPHDG   DC    C'CONSOLE TAPE DENSITY '                                 XX445700
         DC    X'50'                                                    XX445800
         DC    C' MODE VALUES  MM'                                      XX445900
HDG      DC    C'     '                                                 XX446000
         DC    C'TRACK'                                                 XX446100
         DC    C'      '                                                XX446200
         DC    C'DENSITY'                                               XX446300
         DC    C'      '                                                XX446400
         DC    C'PARITY'                                                XX446500
         DC    C'      '                                                XX446600
         DC    C'TRANSLATE'                                             XX446700
         DC    C'      '                                                XX446800
         DC    C'DATA CONVERT'                                          XX446900
         DC    C'      '                                                XX447000
         DC    C'MM'                                                    XX447100
         DC    C'      '                                                XX447200
TE1      DC    C'A USER INPUT TAPE ERROR CORRECTION ROUTI'              XX447300
         DC    C'NE IS AVAILABLE UNDER CONSOLE OPERATION.'              XX447400
TE2      DC    C'CONTROL WILL BE PASSED TO THE ROUTINE FO'              XX447500
         DC    C'R ALL INPUT TAPE DITTO FUNCTIONS IF  OS '              XX447600
TE3      DC    C'ERROR RECOVERY IS UNSUCCESSFUL.  THE CON'              XX447700
         DC    C'SOLE OPERATOR MAY EITHER IGNORE THE     '              XX447800
TE4      DC    C'ERROR (ACCEPTING THE RECORD AS READ), BY'              XX447900
         DC    C'PASS (DROP) THE ERROR RECORD, OR PERFORM'              XX448000
TE5      DC    C'CONSOLE ALTERATION TO THE RECORD LENGTH '              XX448100
         DC    C'AND/OR DATA, BEFORE RETURNING CONTROL TO'              XX448200
TE6      DC    C'THE ORIGINAL DITTO FUNCTION.'                          XX448300
TE7      DC    C'A FUNCTION MAY BE ENDED BY REPLYING ''U'' TO THE FIRS' XX448400
         DC    C'T WTOR MESSAGE. A REPLY OF ''EOJ'' WILL END THE FUNCT' XX448500
         DC    C'ION AND DITTO.'                                        XX448600
WHO      DC    C'L. S. BRAMMER       IBM CORPORATION  1973'             XX448700
OPERATOR DC    C'TO MINIMIZE CONSOLE MESSAGES, YOU MAY ENTER'  LINE 1A  XX448800
         DC    C' WITH THE FUNCTION ALL OR PART OF THE  '               XX448900
         DC    C'REQUIRED PARAMETERS.  A PARAMETER ERROR '  LINE 2A     XX449000
         DC    C'WILL CAUSE DITTO TO REVERT TO THE '                    XX449100
         DC    C'TUTORIAL ROUTINES AND REQUEST REMAINING '  LINE 3A     XX449200
         DC    C'PARAMETERS IN A SINGLE REQUEST MODE.    '  LINE 3B     XX449300
REQUR    DC    C'PARAMETER REQUIREMENTS'                                XX449400
STRING   DC    C'CC '                                                   XX449500
         DC    C'CCS,DECKTYPE,DECKNAME '                                XX449600
         DC    C'CP '                                                   XX449700
         DC    C'CD '                                                   XX449800
         DC    C'CT,CUUMM,BLKFACTOR '                                   XX449900
         DC    C'CTS,CUUMM,BLKFACTOR,DECKTYPE,DECKNAME '                XX450000
         DC    C'CCL '                                                  XX450100
         DC    C' '                                                     XX450200
         DC    C' '                                                     XX450300
         DC    C'TC,CUUMM '                                             XX450400
         DC    C'TP,CUUMM,NRECS '                                       XX450500
         DC    C'TPD,CUUMM,RECSIZE,NRECS '                              XX450600
         DC    C'TD,CUUMM,NRECS '                                       XX450700
         DC    C'TDD,CUUMM,RECSIZE,NRECS '                              XX450800
         DC    C'TPV,CUUMM,NRECS '                                      XX450900
         DC    C'TDV,CUUMM,NRECS '                                      XX451000
         DC    C'TRS,CUUMM,RECSIZE,SCANLNTH '                           XX451100
         DC    C'TRL,CUUMM,CUUMM,NBLKS,COPYD '                          XX451200
         DC    C'INT,CUUMM,VOLSER '                                     XX451300
         DC    C'TT,CUUMM,CUUMM,NFILES '                                XX451400
         DC    C'TTR,CUUMM,CUUMM,RECSIZE,BLKFACTOR '                    XX451500
         DC    C'WTM,CUUMM '                                            XX451600
         DC    C'REW,CUUMM '                                            XX451700
         DC    C'RUN,CUUMM '                                            XX451800
         DC    C'FSR,CUUMM,NBLKS '                                      XX451900
         DC    C'BSR,CUUMM,NBLKS '                                      XX452000
         DC    C'FSF,CUUMM,NFILES '                                     XX452100
         DC    C'BSF,CUUMM,NFILES '                                     XX452200
         DC    C'ERT,CUUMM '                                            XX452300
         DC    C' '                                                     XX452400
         DC    C' '                                                     XX452500
         DC    C'DSE,CUU '                                              XX452600
         DC    C'DP,CUU,CCHHH,CCCHH '                                   XX452700
         DC    C'DD,CUU,CCHHH,CCCHH '                                   XX452800
         DC    C'DPD,CUU,CCCHH,CCCHH,RECSIZE '                          XX452900
         DC    C'DDD,CUU,CCCHH,CCCHH,RECSIZE '                          XX453000
         DC    C'DRL,CUU,CCC-HH-RRR '                                   XX453100
         DC    C'DRS,CUU,CCCHH,CCCHH,SCANTYPE '                         XX453200
         DC    C'EOF,CUU,CCC-HH-RRR '                                   XX453400
         DC    C'DID '                                                  XX453500
         DC    C' '                                                     XX453600
         DC    C'XXX '                                                  XX453700
         DC    C'EOJ '                                                  XX453800
DITPROC  DC    C'CC '                                                   XX453900
         DC    C'CCI'                                                   XX454000
         DC    C'CP '                                                   XX454100
         DC    C'CT '                                                   XX454200
         DC    C'TC '                                                   XX454300
         DC    C'TCI'                                                   XX454400
         DC    C'TP '                                                   XX454500
         DC    C'TT '                                                   XX454600
         DC    C'TRL'                                                   XX454700
         DC    C'TRS'                                                   XX454800
         DC    C'DP '                                                   XX454900
         DC    C'DID'                                                   XX455000
DEFVAL   DC    C'RDR=00C,PUN=00D,CLS=          '                        XX455100
         DC    C'RDR=00C,PUN=00D               '                        XX455200
         DC    C'RDR=00C,PRT=,CLS=A            '                        XX455300
         DC    C'RDR=00C,OUT=TAPE              '                        XX455400
         DC    C'IN=TAPE,PUN=00D,CLS=          '                        XX455500
         DC    C'IN=TAPE,PUN=00D               '                        XX455600
         DC    C'IN=TAPE,PRT=,CLS=A            '                        XX455700
         DC    C'IN=TAPE,OUT=TAPE              '                        XX455800
         DC    C'IN=TAPE,OUT=TAPE,PRT=00E,CLS= '                        XX455900
         DC    C'IN=TAPE,PRT=00E,CLS=          '                        XX456000
         DC    C'IN=SYSDA,DSNM=,SER=,PRT=,CLS=A'                        XX456100
         DC    C'NONE                          '                        XX456200
GDELIN   DC    C'CC,CCS,CP,CD,CCL                 '                     XX456300
         DC    C'CC,CCS,CP,CD,CCL                 '                     XX456400
         DC    C'CP,CD,CCL                        '                     XX456500
         DC    C'CT,CTS,CCL                       '                     XX456600
         DC    C'TC,TP,TPD,TD,TDD                 '                     XX456700
         DC    C'TC,TP,TPD,TD,TDD                 '                     XX456800
         DC    C'TP,TPD,TD,TDD,TPV,TDV,TRS,INT,ERT'                     XX456900
         DC    C'TT,TTR                           '                     XX457000
         DC    C'TRL                              '                     XX457100
         DC    C'TRS                              '                     XX457200
         DC    C'DSE,DP,DD,DPD,DDD,DRL,DRS,SRS,EOF'                     XX457300
         DC    C'DID,XXX                          '                     XX457400
UNTRCD   DC    C'RDR=CUU   SELECT SYSIN UNIT   '                        XX457500
         DC    C'PUN=CUU   SELECT SYSPUNCH UNIT'                        XX457600
         DC    C'CLS=      SYSOUT CLASS=NULL   '                        XX457700
         DC    C'CLS=A     SYSOUT CLASS=A OR B '                        XX457800
         DC    C'PRT=      SYSPRINT UNIT=NULL  '                        XX457900
         DC    C'PRT=CUU   SELECT SYSPRINT UNIT'                        XX458000
TPNDSK   DC    C'IN=CUU    SELECT TAPEIN UNIT   '                       XX458100
         DC    C'IN=CUU    SELECT DISKIN UNIT   '                       XX458200
         DC    C'OUT=CUU   SELECT TAPEOUT UNIT  '                       XX458300
         DC    C'DSNM=     SPECIFY DISKIN DSN   '                       XX458400
         DC    C'SER=      PROVIDE DISKIN VOLUME'                       XX458500
         DC    C'          SERIAL NUMBER        '                       XX458600
PROC1    DC    C'TO INITIATE OS/DITTO FROM THE CONSOLE ENTER A START C' XX458700
         DC    C'OMMAND OF THE FORM; ''S DITTO---.PN''. REPLACE --- WI' XX458800
         DC    C'TH OS/DITTO '                                          XX458900
PROC2    DC    C'PROCEDURE NAME SUFFIX; E.G. S DITTOTP.P2 WILL ALLOCAT' XX459000
         DC    C'E ONE TAPE DRIVE AND SYSPRINT. THIS ALLOCATION WILL '  XX459100
         DC    C'SUPPORT    '                                           XX459200
PROC3    DC    C'DITTO FUNCTION TP AND ALL OTHER FUNCTIONS THAT REQUIR' XX459300
         DC    C'E NO MORE THAN ONE TAPE DRIVE AND SYSPRINT. TO SELECT' XX459400
         DC    C' INPUT     '                                           XX459500
PROC4    DC    C'TAPE DRIVE AND PRINT ONLINE, ENTER OPTIONAL SYMBOLIC ' XX459600
         DC    C'PARAMETERS; E.G. S DITTOTP.P2,IN=281,PRT=00E,CLS= . U' XX459700
         DC    C'SE THE     '                                           XX459800
PROC5    DC    C'FOLLOWING PROCEDURE NAME, SYMBOLIC PARAMETER, AND FUN' XX459900
         DC    C'CTION USE GUIDELINES TO CHOOSE CORRECT PROCEDURE AND ' XX460000
         DC    C'FUNCTION. '                                            XX460100
PROCED   DC    C'PROCEDURES'                                            XX460200
SYMBOLPA DC    C'SYMBOLIC PARAMETERS'                                   XX460300
FUNCMSG  DC    C'FUNCTION USE'                                          XX460400
NAME     DC    C'NAME'                                                  XX460500
DEFVALU  DC    C'DEFAULT VALUES'                                        XX460600
GDELINE  DC    C'GUIDELINES'                                            XX460700
SAMPSTRT DC    C'SAMPLE START COMMANDS USING OPTIONAL SYMBOLIC PARAMET' XX460800
         DC    C'ERS TO OVERRIDE DEFAULT VALUES.'                       XX460900
SAMPCOMM DC    C'S DITTOCC.P0,RDR=00A,PUN=,CLS=B             '          XX461000
         DC    C'S DITTOCCI.P1,RDR=00A                       '          XX461100
         DC    C'S DITTOCP.P2,PRT=00F,CLS=                   '          XX461200
         DC    C'S DITTOCT.P3,OUT=TAPE7                      '          XX461300
         DC    C'S DITTOTC.P4,IN=285,PUN=,CLS=B              '          XX461400
         DC    C'S DITTOTCI.P5,PUN=00B                       '          XX461500
         DC    C'S DITTOTP.P6,IN=287,PRT=00F,CLS=            '          XX461600
         DC    C'S DITTOTT.P7,IN=284,OUT=281                 '          XX461700
         DC    C'S DITTOTRL.P8,PRT=,CLS=A                    '          XX461800
         DC    C'S DITTOTRS.P9,IN=270,PRT=,CLS=A             '          XX461900
         DC    C'S DITTODP.P10,IN=151,DSNM=DATASET,SER=333001'          XX462000
COMEXPL  DC    C'SYSIN ON 00A, SYSPUNCH TO SYSOUT=B       '             XX462100
         DC    C'SYSIN ON 00A                             '             XX462200
         DC    C'SYSPRINT ON 00F                          '             XX462300
         DC    C'TAPEOUT ON 7-TRACK  (NEED UNITNAME=TAPE7)'             XX462400
         DC    C'TAPEIN ON 285, SYSPUNCH TO SYSOUT=B      '             XX462500
         DC    C'SYSPUNCH ON 00B                          '             XX462600
         DC    C'TAPEIN ON 287, SYSPRINT ON 00F           '             XX462700
         DC    C'TAPEIN ON 284, TAPEOUT ON 281            '             XX462800
         DC    C'SYSPRINT TO SYSOUT=A                     '             XX462900
         DC    C'TAPEIN ON 270, SYSPRINT TO SYSOUT=A      '             XX463000
         DC    C'DISKIN ON 151, DSN=DATASET,VOL=SER=333001'             XX463100
CCINOTE  DC    C'DITTOCCI AND DITTOTCI INTERPRET CARD OUTPUT. 3525 FEA' XX463200
         DC    C'TURE AND OS JCL FUNC=I SUPPORT REQUIRED. SYSPUNCH MUS' XX463300
         DC    C'T BE ONLINE.   '                                       XX463400
TCTLNOTE DC    C'TAPE CONTROL FUNCTIONS (INT,WTM,REW,RUN,FSR,BSR,FSF,B' XX463500
         DC    C'SF,ERT) ARE VALID WHEN TAPEIN OR TAPEOUT ALLOCATED BY' XX463600
         DC    C' PROCEDURE.    '                                       XX463700
DSKNOTE  DC    C'DISKIN IS OPENED AS INOUT TO ALLOW DISK WRITE FUNCTIO' XX463800
         DC    C'NS DRL AND EOF.'                                       XX463900
XXXNOTE  DC    C'XXX AND DID FUNCTIONS ARE VALID IN ALL PROCEDURES.'    XX464000
PGX      DSECT                                                          XX464100
BL       DS    CL20                                                     XX464200
PG       DS    0CL81                                                    XX464300
         DS    CL7                                                      XX464400
TRK      DS    CL1                                                      XX464500
         DS    CL10                                                     XX464600
DEN      DS    CL3                                                      XX464700
         DS    CL9                                                      XX464800
PAR      DS    CL4                                                      XX464900
         DS    CL10                                                     XX465000
TRN      DS    CL3                                                      XX465100
         DS    CL14                                                     XX465200
DCT      DS    CL3                                                      XX465300
         DS    CL10                                                     XX465400
MMS      DS    CL2                                                      XX465500
         ORG   PG                                                       XX465600
         DS    CL10                                                     XX465700
OPCODE   DS    CL3                                                      XX465800
         DS    CL7                                                      XX465900
COMMENT  DS    CL49                                                     XX466000
         DS    CL4                                                      XX466100
DOLLAR   DS    CL1                                                      XX466200
CCX      DSECT                                                          XX466300
CC       DS    CL1                                                      XX466400
         END                                                            XX466500
/*                                                                      XX466600
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB(DITTOXXX),UNIT=SYSDA,                XX466700
//       DISP=(SHR,KEEP)                                                XX466800
//                                                                      XX466900
//DIDMFMVT JOB (302D001300080D),                                        DI467000
//  MSGLEVEL=1,CLASS=A,REGION=100K                                      DI467100
// EXEC ASMFCL,PARM.LKED='REUS,LIST,XREF,NCAL,AC=1'                     DI467200
//ASM.SYSPUNCH DD DUMMY                                                 DI467300
//ASM.SYSIN DD *                                                        DI467400
         TITLE '* * * * * *    DID FUNCTION FOR MFT/MVT  * * * * * *'   DI467500
*********************************************************************** DI467600
**********               DID LOAD MODULE LINKED             *********** DI467700
**********           INTO PARTITION FOR DID FUNCTION        *********** DI467800
*********************************************************************** DI467900
         SPACE 2                                                        DI468000
         ISEQ  75,80                                                    DI468100
DITTODID START                                                          DI468200
         SAVE  (14,12)                                                  DI468300
         LR    R2,RD                                                    DI468400
         BALR  RB,R0                                                    DI468500
         USING *,RB                                                     DI468600
         B     AROUND              BR BY COPYRIGHT                      DI468700
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               DI468800
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED  DI468900
AROUND   EQU   *                                                        DI469000
         LA    R3,SAVEAREA                                              DI469100
         ST    R3,8(R2)            PTR TO MY SA                         DI469200
         ST    R2,4(R3)            PTR TO PREVIOUS SA                   DI469300
FRSTWTOR EQU   *                                                        DI469400
         MVI   CUUECB,X'00'                                             DI469500
         WTOR  'REPLY: CUUXXXXXX - TO SPECIFY UNIT AND VOLSER, OR END -XDI469600
                TO END DID',UCBNAME,9,CUUECB,DESC=6,ROUTCDE=2           DI469700
         WAIT ECB=CUUECB                                                DI469800
         OC    UCBNAME(9),=C'         '    FORCE CAPS ON REPLY          DI469900
         CLC   UCBNAME,=C'END'                                          DI470000
         BE    RETURN                                                   DI470100
UCBFIND  EQU   *                                                        DI470200
         L     R9,CVTPTR                                                DI470300
NEEDUCB  EQU   *                                                        DI470400
         L     RF,40(R9)           UCB ADDR TABL                        DI470500
STARTEST LH    R1,0(RF)            GET TABL ENTRY                       DI470600
         LTR   R1,R1               VALID ENTRY ?                        DI470700
         BZ    UPUCBPTR            NO, LOOK FOR MORE ENTRIES            DI470800
         TM    18(R1),X'20'        DASD ?                               DI470900
         BZ    UPUCBPTR            NO, GO LOOK FOR MORE ENTRIES         DI471000
         CLC   UCBNAME,13(R1)      DESIRED UCB ?                        DI471100
         BNE   UPUCBPTR            NO, GO LOOK FOR MORE ENTRIES         DI471200
UCBRET   LR    R9,R1               ADDR OF UCB                          DI471300
         B     LABELIT                                                  DI471400
UPUCBPTR LA    RF,2(RF)            INCREMENT TO NEXT ENTRY              DI471500
         CLC   0(2,RF),UCBLAST     ANY MORE ENTRIES ?                   DI471600
         BNE   STARTEST            YES, KEEP LOOKING                    DI471700
         MVC   WTO1+8(3),UCBNAME                                        DI471800
WTO1     WTO   'CUU NOT DASD OR NOT IN SYSTEM',DESC=6,ROUTCDE=2         DI471900
         B     FRSTWTOR                                                 DI472000
         EJECT                                                          DI472100
*********************************************************************** DI472200
*********  LABEL ROUTINE: READ VOL LABEL, ENTER NEW SER,    *********** DI472300
*********  WRITE OUT NEW LABEL ON VOLUME, POST UCB.         *********** DI472400
*********************************************************************** DI472500
         SPACE 1                                                        DI472600
LABELIT  EQU   *                                                        DI472700
************************  OFFLINE CHECKING BEFORE LABELING  *********** DI472800
         TM    3(R9),X'80'         ONLINE ?                             DI472900
         BO    ONLINERR                                                 DI473000
         TM    6(R9),X'40'         NOT READY ?                          DI473100
         BO    NOTRDY                                                   DI473200
         LA    R1,RDAREA           ADDR OF AREA FOR LIST                DI473300
         ST    R9,0(R1)            ST UCB PTR IN LIST                   DI473400
         MVI   0(R1),X'8F'         BUILD DEB INDICATOR                  DI473500
         L     R8,RDDCBAD          PTR TO DCB                           DI473600
         ST    R8,4(R1)            ST DCB PTR IN LIST                   DI473700
         MVI   4(R1),X'88'         SET LAST ENTRY INDICATOR             DI473800
         SVC   82                  CONSTRUCT DEB                        DI473900
         LTR   RF,RF               DEB SUCCESSFULLY BUILT ?             DI474000
         BNZ   ONLINERR            NO, ERROR MSG                        DI474100
READ     EQU   *                                                        DI474200
         LA    R5,RDAREA                                                DI474300
         ST    R5,RDWRTCCW         PRIME CCW                            DI474400
         MVI   RDWRTCCW,6          READ OP CODE                         DI474500
         MVI   RDWRTCCW+4,X'20'                                         DI474600
         EXCP  RDIOB               READ VOL LABEL                       DI474700
         BAL   R4,WAITD                                                 DI474800
         MVC   OLDSER(6),RDAREA+4      SAVE OLD SER                     DI474900
NOSET    MVC   RDAREA+4(6),VOLSER  MOVE IN NEW SER                      DI475000
WRITEOUT MVI   RDWRTCCW,5          WRT OPCODE                           DI475100
         MVI   RDWRTCCW+4,X'60'                                         DI475200
         EXCP  RDIOB               WRITE VOL LABEL                      DI475300
         BAL   R4,WAITD                                                 DI475400
OFFLNPS  EQU   *                   OFFLINE POST OF UCB                  DI475500
         LA    R1,RDAREA           AREA FOR LIST                        DI475600
         LA    R2,VOLSER           PTR TO NEW VOLSER                    DI475700
         ST    R9,0(R1)            UCB PTR TO LIST                      DI475800
         MVI   0(R1),X'88'         SET SPECIAL POST INDIC.              DI475900
         ST    R2,4(R1)            PTR TO NEW VOLSER                    DI476000
         SR    R2,R2               CLEAR                                DI476100
         ST    R2,8(R1)            ZERO VTOC PTR                        DI476200
         MVC   12(4,R1),RDDCB+44   DEB PTR TO LIST                      DI476300
         MVI   12(R1),X'80'        SET LAST ENTRY                       DI476400
         SVC   82                  POST UCB WITH NEW VOLSER             DI476500
         MVC   WTO2+16(6),OLDSER       MOVE OLD SER                     DI476600
         MVC   WTO2+32(6),VOLSER       MOVE NEW SER                     DI476700
WTO2     WTO   'OLD SER=XXXXXX, NEW SER=XXXXXX - DID COMPLETE: ISSUE MOXDI476800
               UNT, VARY ONLINE',DESC=6,ROUTCDE=2                       DI476900
         B     FRSTWTOR                                                 DI477000
         EJECT                                                          DI477100
*********************************************************************** DI477200
**********         ERROR MESSAGES AND RETURN ROUTINE.       *********** DI477300
*********************************************************************** DI477400
         SPACE 1                                                        DI477500
NOTRDY   EQU   *                                                        DI477600
         MVC   NOTRDY1+8(3),UCBNAME                                     DI477700
NOTRDY1  WTO   'CUU NOT READY, CYCLE UP (OFFLINE) BEFORE DID',         XDI477800
               DESC=6,ROUTCDE=2                                         DI477810
         B     FRSTWTOR                                                 DI477900
ONLINERR EQU   *                                                        DI478000
         MVC   ONLINER1+8(3),UCBNAME                                    DI478100
ONLINER1 WTO   'CUU ONLINE, VARY OFFLINE BEFORE DID',DESC=6,ROUTCDE=2   DI478200
         B     FRSTWTOR                                                 DI478300
IOERR    EQU   *                                                        DI478400
         WTO   'DISK I/O ERROR',DESC=6,ROUTCDE=2                        DI478500
RETURN   EQU   *                                                        DI478600
         LA    RD,SAVEAREA         PRIME RD BEFORE RETURN               DI478700
         L     RD,4(RD)                                                 DI478800
         RETURN (14,12),RC=0                                            DI478900
         EJECT                                                          DI479000
*********************************************************************** DI479100
**********            WAIT ROUTINE FOR DISK I/O             *********** DI479200
*********************************************************************** DI479300
         SPACE 1                                                        DI479400
WAITD    TM    DISKECB,X'40'       COMPL ?                              DI479500
         BO    TESTD                                                    DI479600
         WAIT  ECB=DISKECB                                              DI479700
TESTD    CLI   DISKECB,X'7F'       OK ?                                 DI479800
         BNE   IOERR               NO                                   DI479900
         MVI   DISKECB,0                                                DI480000
         BR    R4                  YES, RETURN                          DI480100
         EJECT                                                          DI480200
*********************************************************************** DI480300
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** DI480400
*********************************************************************** DI480500
         SPACE 1                                                        DI480600
RDDCB    DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,SIOA=P7               DI480700
         DS    0D                  ALLIGN                               DI480800
CCWLIST  CCW   X'31',RDSEEK+3,X'60',5   SRCH FOR REC 3                  DI480900
         CCW   8,CCWLIST,0,0           REPEAT UNTIL FOUND               DI481000
RDWRTCCW CCW   0,0,X'20',80            R/W DATA                         DI481100
CCWLIST1 CCW   X'31',RDSEEK+3,X'60',5  SRCH FOR REC 3                   DI481200
         CCW   X'08',CCWLIST1,0,0      REPEAT UNITL DONE                DI481300
         CCW   X'06',0,X'30',80        READ CHECK                       DI481400
RDAREA   DS    CL80                                                     DI481500
DISKECB  DC    F'0'                WAIT/COMPLETE BITS                   DI481600
RDIOB    DS    0F                                                       DI481700
RDFLAGS  DC    XL2'2000'                                                DI481800
RDSENSE  DC    H'0'                                                     DI481900
RDECBAD  DC    A(DISKECB)                                               DI482000
RDSTATUS DC    2F'0'                                                    DI482100
RDCCWAD  DC    A(CCWLIST)                                               DI482200
RDDCBAD  DC    A(RDDCB)                                                 DI482300
RDRESAD  DC    F'0'                                                     DI482400
RDBLKCT  DC    H'1'                                                     DI482500
RDERROR  DC    H'0'                                                     DI482600
RDSEEK   DC    1F'0'               MBBC                                 DI482700
         DC    X'00000003'         CHHR                                 DI482800
         DS    0F                                                       DI482900
CUUECB   DC    F'0'                                                     DI483000
SAVEAREA DS    18F                                                      DI483100
UCBLAST  DC    X'FFFF'                                                  DI483200
UCBNAME  DS    CL3                 UCB FROM OPERTAOR                    DI483300
VOLSER   DC    CL6'XXXXXX'         XXXXXXX IS DEFAULT SER               DI483400
OLDSER   DC    CL6'OLDSER'         SAVE OLD SER HERE, OLDSER IS DEFAULT DI483500
CVTPTR   EQU   16                                                       DI483600
R0       EQU   0                                                        DI483700
R1       EQU   1                                                        DI483800
R2       EQU   2                                                        DI483900
R3       EQU   3                                                        DI484000
R4       EQU   4                                                        DI484100
R5       EQU   5                                                        DI484200
R6       EQU   6                                                        DI484300
R7       EQU   7                                                        DI484400
R8       EQU   8                                                        DI484500
R9       EQU   9                                                        DI484600
RA       EQU   10                                                       DI484700
RB       EQU   11                                                       DI484800
RC       EQU   12                                                       DI484900
RD       EQU   13                                                       DI485000
RE       EQU   14                                                       DI485100
RF       EQU   15                                                       DI485200
         END   DITTODID                                                 DI485300
/*                                                                      DI485400
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB(DITTODID),UNIT=SYSDA,                DI485500
//       DISP=(SHR,KEEP)                                                DI485600
//                                                                      DI485700
//DIDVS1#2 JOB (302D001300080D),                                        DI485800
//  MSGLEVEL=1,CLASS=A,REGION=100K                                      DI485900
//*        THIS ASSEMBLY HAS A VS PAGE FIX PARAMETER ON THE RDDCB       DI486000
//*        JOB  WILL NOT LE INTO LINKLIB UNDER MFT/MVT DUE TO COND CODE DI486100
// EXEC ASMFCL,PARM.LKED='REUS,LIST,XREF,NCAL,AC=1'                     DI486200
//ASM.SYSPUNCH DD DUMMY                                                 DI486300
//ASM.SYSIN DD *                                                        DI486400
         TITLE '* * * * * *    DID FUNCTION FOR VS1/VS2  * * * * * *'   DI486500
*********************************************************************** DI486600
**********               DID LOAD MODULE LINKED             *********** DI486700
**********           INTO PARTITION FOR DID FUNCTION        *********** DI486800
*********************************************************************** DI486900
         SPACE 2                                                        DI487000
         ISEQ  75,80                                                    DI487100
DITTODID START                                                          DI487200
         SAVE  (14,12)                                                  DI487300
         LR    R2,RD                                                    DI487400
         BALR  RB,R0                                                    DI487500
         USING *,RB                                                     DI487600
         B     AROUND              BR BY COPYRIGHT                      DI487700
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               DI487800
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED  DI487900
AROUND   EQU   *                                                        DI488000
         LA    R3,SAVEAREA                                              DI488100
         ST    R3,8(R2)            PTR TO MY SA                         DI488200
         ST    R2,4(R3)            PTR TO PREVIOUS SA                   DI488300
FRSTWTOR EQU   *                                                        DI488400
         MVI   CUUECB,X'00'                                             DI488500
         WTOR  'REPLY: CUUXXXXXX - TO SPECIFY UNIT AND VOLSER, OR END -XDI488600
                TO END DID',UCBNAME,9,CUUECB,DESC=6,ROUTCDE=2           DI488700
         WAIT ECB=CUUECB                                                DI488800
         OC    UCBNAME(9),=C'         '    FORCE CAPS ON REPLY          DI488900
         CLC   UCBNAME,=C'END'                                          DI489000
         BE    RETURN                                                   DI489100
UCBFIND  EQU   *                                                        DI489200
         L     R9,CVTPTR                                                DI489300
NEEDUCB  EQU   *                                                        DI489400
         L     RF,40(R9)           UCB ADDR TABL                        DI489500
STARTEST LH    R1,0(RF)            GET TABL ENTRY                       DI489600
         LTR   R1,R1               VALID ENTRY ?                        DI489700
         BZ    UPUCBPTR            NO, LOOK FOR MORE ENTRIES            DI489800
         TM    18(R1),X'20'        DASD ?                               DI489900
         BZ    UPUCBPTR            NO, GO LOOK FOR MORE ENTRIES         DI490000
         CLC   UCBNAME,13(R1)      DESIRED UCB ?                        DI490100
         BNE   UPUCBPTR            NO, GO LOOK FOR MORE ENTRIES         DI490200
UCBRET   LR    R9,R1               ADDR OF UCB                          DI490300
         B     LABELIT                                                  DI490400
UPUCBPTR LA    RF,2(RF)            INCREMENT TO NEXT ENTRY              DI490500
         CLC   0(2,RF),UCBLAST     ANY MORE ENTRIES ?                   DI490600
         BNE   STARTEST            YES, KEEP LOOKING                    DI490700
         MVC   WTO1+8(3),UCBNAME                                        DI490800
WTO1     WTO   'CUU NOT DASD OR NOT IN SYSTEM',DESC=6,ROUTCDE=2         DI490900
         B     FRSTWTOR                                                 DI491000
         EJECT                                                          DI491100
*********************************************************************** DI491200
*********  LABEL ROUTINE: READ VOL LABEL, ENTER NEW SER,    *********** DI491300
*********  WRITE OUT NEW LABEL ON VOLUME, POST UCB.         *********** DI491400
*********************************************************************** DI491500
         SPACE 1                                                        DI491600
LABELIT  EQU   *                                                        DI491700
************************  OFFLINE CHECKING BEFORE LABELING  *********** DI491800
         TM    3(R9),X'80'         ONLINE ?                             DI491900
         BO    ONLINERR                                                 DI492000
         TM    6(R9),X'40'         NOT READY ?                          DI492100
         BO    NOTRDY                                                   DI492200
         LA    R1,RDAREA           ADDR OF AREA FOR LIST                DI492300
         ST    R9,0(R1)            ST UCB PTR IN LIST                   DI492400
         MVI   0(R1),X'8F'         BUILD DEB INDICATOR                  DI492500
         L     R8,RDDCBAD          PTR TO DCB                           DI492600
         ST    R8,4(R1)            ST DCB PTR IN LIST                   DI492700
         MVI   4(R1),X'88'         SET LAST ENTRY INDICATOR             DI492800
         SVC   82                  CONSTRUCT DEB                        DI492900
         LTR   RF,RF               DEB SUCCESSFULLY BUILT ?             DI493000
         BNZ   ONLINERR            NO, ERROR MSG                        DI493100
READ     EQU   *                                                        DI493200
         LA    R5,RDAREA                                                DI493300
         ST    R5,RDWRTCCW         PRIME CCW                            DI493400
         MVI   RDWRTCCW,6          READ OP CODE                         DI493500
         MVI   RDWRTCCW+4,X'20'                                         DI493600
         EXCP  RDIOB               READ VOL LABEL                       DI493700
         BAL   R4,WAITD                                                 DI493800
         MVC   OLDSER(6),RDAREA+4      SAVE OLD SER                     DI493900
NOSET    MVC   RDAREA+4(6),VOLSER  MOVE IN NEW SER                      DI494000
WRITEOUT MVI   RDWRTCCW,5          WRT OPCODE                           DI494100
         MVI   RDWRTCCW+4,X'60'                                         DI494200
         EXCP  RDIOB               WRITE VOL LABEL                      DI494300
         BAL   R4,WAITD                                                 DI494400
OFFLNPS  EQU   *                   OFFLINE POST OF UCB                  DI494500
         LA    R1,RDAREA           AREA FOR LIST                        DI494600
         LA    R2,VOLSER           PTR TO NEW VOLSER                    DI494700
         ST    R9,0(R1)            UCB PTR TO LIST                      DI494800
         MVI   0(R1),X'88'         SET SPECIAL POST INDIC.              DI494900
         ST    R2,4(R1)            PTR TO NEW VOLSER                    DI495000
         SR    R2,R2               CLEAR                                DI495100
         ST    R2,8(R1)            ZERO VTOC PTR                        DI495200
         MVC   12(4,R1),RDDCB+44   DEB PTR TO LIST                      DI495300
         MVI   12(R1),X'80'        SET LAST ENTRY                       DI495400
         SVC   82                  POST UCB WITH NEW VOLSER             DI495500
         MVC   WTO2+16(6),OLDSER       MOVE OLD SER                     DI495600
         MVC   WTO2+32(6),VOLSER       MOVE NEW SER                     DI495700
WTO2     WTO   'OLD SER=XXXXXX, NEW SER=XXXXXX - DID COMPLETE: ISSUE MOXDI495800
               UNT, VARY ONLINE',DESC=6,ROUTCDE=2                       DI495900
         B     FRSTWTOR                                                 DI496000
         EJECT                                                          DI496100
*********************************************************************** DI496200
**********         ERROR MESSAGES AND RETURN ROUTINE.       *********** DI496300
*********************************************************************** DI496400
         SPACE 1                                                        DI496500
NOTRDY   EQU   *                                                        DI496600
         MVC   NOTRDY1+8(3),UCBNAME                                     DI496700
NOTRDY1  WTO   'CUU NOT READY, CYCLE UP (OFFLINE) BEFORE DID',         XDI496800
               DESC=6,ROUTCDE=2                                         DI496810
         B     FRSTWTOR                                                 DI496900
ONLINERR EQU   *                                                        DI497000
         MVC   ONLINER1+8(3),UCBNAME                                    DI497100
ONLINER1 WTO   'CUU ONLINE, VARY OFFLINE BEFORE DID',DESC=6,ROUTCDE=2   DI497200
         B     FRSTWTOR                                                 DI497300
IOERR    EQU   *                                                        DI497400
         WTO   'DISK I/O ERROR',DESC=6,ROUTCDE=2                        DI497500
RETURN   EQU   *                                                        DI497600
         LA    RD,SAVEAREA         PRIME RD BEFORE RETURN               DI497700
         L     RD,4(RD)                                                 DI497800
         RETURN (14,12),RC=0                                            DI497900
         EJECT                                                          DI498000
*********************************************************************** DI498100
**********            WAIT ROUTINE FOR DISK I/O             *********** DI498200
*********************************************************************** DI498300
         SPACE 1                                                        DI498400
WAITD    TM    DISKECB,X'40'       COMPL ?                              DI498500
         BO    TESTD                                                    DI498600
         WAIT  ECB=DISKECB                                              DI498700
TESTD    CLI   DISKECB,X'7F'       OK ?                                 DI498800
         BNE   IOERR               NO                                   DI498900
         MVI   DISKECB,0                                                DI499000
         BR    R4                  YES, RETURN                          DI499100
         EJECT                                                          DI499200
*********************************************************************** DI499300
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** DI499400
*********************************************************************** DI499500
         SPACE 1                                                        DI499600
RDDCB    DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,SIOA=P7,PGFX=YES      DI499700
         DS    0D                  ALLIGN                               DI499800
CCWLIST  CCW   X'31',RDSEEK+3,X'60',5   SRCH FOR REC 3                  DI499900
         CCW   8,CCWLIST,0,0           REPEAT UNTIL FOUND               DI500000
RDWRTCCW CCW   0,0,X'20',80            R/W DATA                         DI500100
CCWLIST1 CCW   X'31',RDSEEK+3,X'60',5  SRCH FOR REC 3                   DI500200
         CCW   X'08',CCWLIST1,0,0      REPEAT UNITL DONE                DI500300
         CCW   X'06',0,X'30',80        READ CHECK                       DI500400
RDAREA   DS    CL80                                                     DI500500
DISKECB  DC    F'0'                WAIT/COMPLETE BITS                   DI500600
RDIOB    DS    0F                                                       DI500700
RDFLAGS  DC    XL2'2000'                                                DI500800
RDSENSE  DC    H'0'                                                     DI500900
RDECBAD  DC    A(DISKECB)                                               DI501000
RDSTATUS DC    2F'0'                                                    DI501100
RDCCWAD  DC    A(CCWLIST)                                               DI501200
RDDCBAD  DC    A(RDDCB)                                                 DI501300
RDRESAD  DC    F'0'                                                     DI501400
RDBLKCT  DC    H'1'                                                     DI501500
RDERROR  DC    H'0'                                                     DI501600
RDSEEK   DC    1F'0'               MBBC                                 DI501700
         DC    X'00000003'         CHHR                                 DI501800
         DS    0F                                                       DI501900
CUUECB   DC    F'0'                                                     DI502000
SAVEAREA DS    18F                                                      DI502100
UCBLAST  DC    X'FFFF'                                                  DI502200
UCBNAME  DS    CL3                 UCB FROM OPERTAOR                    DI502300
VOLSER   DC    CL6'XXXXXX'         XXXXXXX IS DEFAULT SER               DI502400
OLDSER   DC    CL6'OLDSER'         SAVE OLD SER HERE, OLDSER IS DEFAULT DI502500
CVTPTR   EQU   16                                                       DI502600
R0       EQU   0                                                        DI502700
R1       EQU   1                                                        DI502800
R2       EQU   2                                                        DI502900
R3       EQU   3                                                        DI503000
R4       EQU   4                                                        DI503100
R5       EQU   5                                                        DI503200
R6       EQU   6                                                        DI503300
R7       EQU   7                                                        DI503400
R8       EQU   8                                                        DI503500
R9       EQU   9                                                        DI503600
RA       EQU   10                                                       DI503700
RB       EQU   11                                                       DI503800
RC       EQU   12                                                       DI503900
RD       EQU   13                                                       DI504000
RE       EQU   14                                                       DI504100
RF       EQU   15                                                       DI504200
         END   DITTODID                                                 DI504300
/*                                                                      DI504400
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB(DITTODID),UNIT=SYSDA,                DI504500
//       DISP=(SHR,KEEP)                                                DI504600
//                                                                      DI504700
//ADDREPL  JOB (302D001300080D),                                        PR504800
//  CLASS=A,MSGLEVEL=1,REGION=100K                                      PR504900
// EXEC PGM=IEBUPDTE,PARM=NEW                                           PR505000
//SYSPRINT DD SYSOUT=A                                                  PR505100
//SYSUT1 DD DSN=SYS1.PROCLIB,DISP=SHR                                   PR505200
//SYSUT2 DD DSN=SYS1.PROCLIB,DISP=SHR                                   PR505300
//SYSIN DD DATA                                                         PR505400
./ ADD  LIST=ALL,NAME=DITTOCC                                           PR505500
//IEFPROC  PROC RDR=00C,PUN=00D,CLS=                                    PR505600
//STEP1    EXEC PGM=OSDITTO                                             PR505700
//SYSIN    DD UNIT=&RDR,                                                PR505800
//            DCB=(BLKSIZE=80,RECFM=F,BUFNO=6,OPTCD=C)                  PR505900
//SYSPUNCH DD UNIT=&PUN,SYSOUT=&CLS,                                    PR506000
//            DCB=(BLKSIZE=81,RECFM=FA,BUFNO=6,OPTCD=C)                 PR506100
//SYSPRINT DD SYSOUT=A                                                  PR506200
//SYSUDUMP DD SYSOUT=A                                                  PR506300
./ ADD  LIST=ALL,NAME=DITTOCCI                                          PR506400
//IEFPROC  PROC RDR=00C,PUN=00D                                         PR506500
//STEP1    EXEC PGM=OSDITTO                                             PR506600
//SYSIN    DD UNIT=&RDR,                                                PR506700
//            DCB=(BLKSIZE=80,RECFM=F,BUFNO=6,OPTCD=C)                  PR506800
//SYSPUNCH DD UNIT=&PUN,                                                PR506900
//            DCB=(BLKSIZE=81,RECFM=FA,FUNC=I)                          PR507000
//SYSPRINT DD SYSOUT=A                                                  PR507100
//SYSUDUMP DD SYSOUT=A                                                  PR507200
./ ADD  LIST=ALL,NAME=DITTOCP                                           PR507300
//IEFPROC  PROC RDR=00C,PRT=,CLS=A                                      PR507400
//STEP1    EXEC PGM=OSDITTO                                             PR507500
//SYSIN    DD UNIT=&RDR,                                                PR507600
//            DCB=(BLKSIZE=80,RECFM=F,BUFNO=6,OPTCD=C)                  PR507700
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR507800
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR507900
//SYSUDUMP DD SYSOUT=A                                                  PR508000
./ ADD   LIST=ALL,NAME=DITTOCT                                          PR508100
//IEFPROC  PROC RDR=00C,OUT=TAPE                                        PR508200
//STEP1    EXEC PGM=OSDITTO                                             PR508300
//SYSIN    DD UNIT=&RDR,                                                PR508400
//            DCB=(BLKSIZE=80,RECFM=F,BUFNO=6,OPTCD=C)                  PR508500
//TAPEOUT  DD DSN=CT.DUMOUT,UNIT=&OUT,VOL=SER=CT-OUT,DISP=(NEW,KEEP),   PR508600
//            LABEL=(,BLP)                                              PR508700
//SYSPRINT DD SYSOUT=A                                                  PR508800
//SYSUDUMP DD SYSOUT=A                                                  PR508900
./ ADD  LIST=ALL,NAME=DITTOTC                                           PR509000
//IEFPROC  PROC IN=TAPE,PUN=00D,CLS=                                    PR509100
//STEP1    EXEC PGM=OSDITTO                                             PR509200
//TAPEIN   DD DSN=TC.DUMIN,UNIT=&IN,VOL=SER=TC-IN,DISP=(OLD,KEEP),      PR509300
//            LABEL=(,BLP)                                              PR509400
//SYSPUNCH DD UNIT=&PUN,SYSOUT=&CLS,                                    PR509500
//            DCB=(BLKSIZE=81,RECFM=FA,BUFNO=6,OPTCD=C)                 PR509600
//SYSPRINT DD SYSOUT=A                                                  PR509700
//SYSUDUMP DD SYSOUT=A                                                  PR509800
./ ADD  LIST=ALL,NAME=DITTOTCI                                          PR509900
//IEFPROC  PROC IN=TAPE,PUN=00D                                         PR510000
//STEP1    EXEC PGM=OSDITTO                                             PR510100
//TAPEIN   DD DSN=TCI.DUMIN,UNIT=&IN,VOL=SER=TCI-IN,DISP=(OLD,KEEP),    PR510200
//            LABEL=(,BLP)                                              PR510300
//SYSPUNCH DD UNIT=&PUN,                                                PR510400
//            DCB=(BLKSIZE=81,RECFM=FA,FUNC=I)                          PR510500
//SYSPRINT DD SYSOUT=A                                                  PR510600
//SYSUDUMP DD SYSOUT=A                                                  PR510700
./ ADD  LIST=ALL,NAME=DITTOTP                                           PR510800
//IEFPROC  PROC IN=TAPE,PRT=,CLS=A                                      PR510900
//STEP1    EXEC PGM=OSDITTO                                             PR511000
//TAPEIN   DD DSN=TP.DUMIN,UNIT=&IN,VOL=SER=TP-IN,DISP=(OLD,KEEP),      PR511100
//            LABEL=(,BLP)                                              PR511200
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR511300
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR511400
//SYSUDUMP DD SYSOUT=A                                                  PR511500
./ ADD  LIST=ALL,NAME=DITTOTT                                           PR511600
//IEFPROC  PROC IN=TAPE,OUT=TAPE                                        PR511700
//STEP1    EXEC PGM=OSDITTO                                             PR511800
//TAPEIN   DD DSN=TT.DUMIN,UNIT=&IN,VOL=SER=TT-IN,DISP=(OLD,KEEP),      PR511900
//            LABEL=(,BLP)                                              PR512000
//TAPEOUT  DD DSN=TT.DUMOUT,UNIT=&OUT,VOL=SER=TT-OUT,DISP=(NEW,KEEP),   PR512100
//            LABEL=(,BLP)                                              PR512200
//SYSPRINT DD SYSOUT=A                                                  PR512300
//SYSUDUMP DD SYSOUT=A                                                  PR512400
./ ADD   LIST=ALL,NAME=DITTOTRL                                         PR512500
//IEFPROC  PROC IN=TAPE,OUT=TAPE,PRT=00E,CLS=                           PR512600
//STEP1    EXEC PGM=OSDITTO                                             PR512700
//TAPEIN   DD DSN=TRL.DUMIN,UNIT=&IN,VOL=SER=TRL-IN,DISP=(OLD,KEEP),    PR512800
//            LABEL=(,BLP)                                              PR512900
//TAPEOUT  DD DSN=TRL.DUMOUT,UNIT=&OUT,VOL=SER=TRL-OT,DISP=(NEW,KEEP),  PR513000
//            LABEL=(,BLP)                                              PR513100
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR513200
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR513300
//SYSUDUMP DD SYSOUT=A                                                  PR513400
./ ADD  LIST=ALL,NAME=DITTOTRS                                          PR513500
//IEFPROC  PROC IN=TAPE,PRT=00E,CLS=                                    PR513600
//STEP1    EXEC PGM=OSDITTO                                             PR513700
//TAPEIN   DD DSN=TRS.DUMIN,UNIT=&IN,VOL=SER=TRS-IN,DISP=(OLD,KEEP),    PR513800
//            LABEL=(,BLP)                                              PR513900
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR514000
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR514100
//SYSUDUMP DD SYSOUT=A                                                  PR514200
./ ADD  LIST=ALL,NAME=DITTODD                                           PR514300
//IEFPROC PROC IN=SYSDA,DSNM=,SER=,PRT=,CLS=A                           PR514400
//STEP1    EXEC PGM=OSDITTO                                             PR514500
//DISKIN   DD UNIT=&IN,DSN='&DSNM',VOL=SER=&SER,DISP=OLD                PR514600
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR514700
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR514800
//SYSUDUMP DD SYSOUT=A                                                  PR514900
./ ADD  LIST=ALL,NAME=DITTODID                                          PR515000
//IEFPROC  PROC                                                         PR515010
//STEP1    EXEC PGM=OSDITTO                                             PR515100
//SYSPRINT DD SYSOUT=A                                                  PR515300
//SYSUDUMP DD SYSOUT=A                                                  PR515400
./ ADD  LIST=ALL,NAME=DITTODP                                           PR515410
//IEFPROC  PROC IN=SYSDA,DSNM=,SER=,PRT=,CLS=A                          PR515411
//STEP1    EXEC PGM=OSDITTO                                             PR515412
//DISKIN   DD UNIT=&IN,DSN='&DSNM',VOL=SER=&SER,DISP=OLD                PR515413
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR515414
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR515415
//SYSUDUMP DD SYSOUT=A                                                  PR515416
./ ADD  LIST=ALL,NAME=DITTODSN                                          PR515420
//IEFPROC  PROC IN=SYSDA,SER=,PRT=,CLS=A,QUAL=,DSNM=                    PR515421
//STEP1    EXEC PGM=OSDITTO                                             PR515422
//*              TO ACCESS DSN=MY.DATA USE DITTODSN.                    PR515423
//*        E.G.  S DITTODSN,IN=250,SER=WORK01,QUAL=MY,DSNM=DATA         PR515424
//DISKIN   DD UNIT=&IN,DSN='&QUAL..&DSNM',VOL=SER=&SER,DISP=OLD         PR515425
//SYSPRINT DD UNIT=&PRT,SYSOUT=&CLS,                                    PR515426
//            DCB=(LRECL=133,RECFM=FM,BUFNO=6,OPTCD=C)                  PR515427
//SYSUDUMP DD SYSOUT=A                                                  PR515428
./ ENDUP                                                                PR515500
/*                                                                      PR515600
//SAMPXXX  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=46K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO XXX
$$DITTO EOJ
/*
//
//SAMPU100 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=104K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//* BAD $$DITTO IN CC 1-8
//GO.SYSIN DD *
$*DITTO XXX
/*
//SAMPU100 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=104K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//* NO OPERTAION CODE
//GO.SYSIN DD *
$$DITTO
/*
//SAMPU100 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=104K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//* BAD PARAMETER
//GO.SYSIN DD *
$$DITTO X
/*
//SAMPNOIP JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=104K,TIME=0010,MSGLEVEL=1
//* NO SYSIN SUBMITTED
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
/*
//NOSL#EOJ JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD *
$$DITTO CP
12&456789*************************************************************98
12&456789*************************************************************98
12&456789*************************************************************98
/*
//NOEOJ    JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD *
$$DITTO CP
12&456789*************************************************************98
12&456789*************************************************************98
12&456789*************************************************************98
/+
/*
//NOSL     JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD *
$$DITTO CP
12&456789*************************************************************98
12&456789*************************************************************98
12&456789*************************************************************98
$$DITTO EOJ
/*
//SL#EOJ   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD *
$$DITTO CP
12&456789*************************************************************98
12&456789*************************************************************98
12&456789*************************************************************98
/+
$$DITTO EOJ
/*
//SAMPCC   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSPUNCH DD SYSOUT=B,
//       DCB=(BLKSIZE=81,RECFM=FA)
//SYSIN DD DATA,DLM=AA,DCB=BLKSIZE=80
$$DITTO CC
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CC  CARD # 10 ********767880
/+
$$DITTO EOJ
AA
//
//SAMPCCS  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSPUNCH DD SYSOUT=B,
//       DCB=(BLKSIZE=81,RECFM=FA)
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CCS DECKTYPE=BAL,DECKNAME=STEVE
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CCS CARD # 15 ********767880
/+
$$DITTO EOJ
/*
//SAMPCP   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CP
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CP  CARD # 20 ********767880
/+
$$DITTO EOJ
/*
//SAMPCD   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD DATA,DLM=AA
$$DITTO CD
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 20 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 21 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 22 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 23 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 24 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CD  CARD # 25 ********767880
/+
$$DITTO CD
// LABEL=(,BLP),DCB=(DEN=3)
//TESTTT   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
//SYSPUNCH DD UNIT=00D,DCB=(BLKSIZE=80,RECFM=F)
//GO.TAPEIN DD DSN=DUMMYE,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
//GO.TAPEOUT DD DSN=DUMMYE,UNIT=TAPE,VOL=SER=OTAPE,DISP=OLD,
//TESTCCCP JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
//TESTTT   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
/*

/*
/*
/*
//
//*
/&
/$
//
/*
/+
$$DITTO CD
$$DITTO EOJ
$$DITTO EOJ
$$DITTO EOJ
/+
$$DITTO EOJ
AA
//
//SAMPCT   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.TAPEOUT DD DSN=DUMMYOUT,UNIT=TAPE,DISP=(,KEEP),
//   LABEL=(,BLP),
//   VOL=SER=000000
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CT OUTPUT=TAPEOUT,BLKFACTOR=5
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 20 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 21 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 22 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 23 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 24 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 25 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 26 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 27 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 28 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 29 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CT  CARD # 30 ********767880
/+
$$DITTO WTM OUTPUT=TAPEOUT
$$DITTO WTM OUTPUT=TAPEOUT
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80
$$DITTO EOJ
/*
//SAMPCTS  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEOUT DD DSN=DUMMYOUT,UNIT=TAPE,VOL=SER=OUTAPE,DISP=SHR,
// LABEL=(,BLP),DCB=(DEN=3)
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CTS OUTPUT=TAPEOUT,BLKFACTOR=5,DECKTYPE=COB,DECKNAME=KAREN
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 20 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 21 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 22 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 23 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 24 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 25 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 26 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 27 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 28 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 29 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 30 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 31 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 32 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 33 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 34 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CTS CARD # 35 ********767880
/+
$$DITTO WTM OUTPUT=TAPEOUT
$$DITTO WTM OUTPUT=TAPEOUT
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80
$$DITTO EOJ
/*
//SAMPTC   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=SHR,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPUNCH DD SYSOUT=B,
//       DCB=(BLKSIZE=81,RECFM=FA)
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CT OUTPUT=TAPEIN,BLKFACTOR=5
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 20 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 21 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 22 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 23 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 24 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 25 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 26 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 27 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 28 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 29 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 30 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 31 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 32 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 33 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 34 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 35 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 36 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 37 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 38 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 39 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TC  CARD # 40 ********767880
/+
$$DITTO WTM OUTPUT=TAPEIN
$$DITTO WTM OUTPUT=TAPEIN
$$DITTO  REW OUTPUT=TAPEIN
$$DITTO TC INPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80
$$DITTO EOJ
/*
//
//SAMPCCI  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSPUNCH DD UNIT=00D,
// DCB=(BLKSIZE=81,RECFM=FA,FUNC=I)
//SYSIN DD DATA,DLM=AA,DCB=BLKSIZE=80
$$DITTO CC
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD # 10 ********767880
/+
$$DITTO CC
//
/*
//*
// JOB N
//JOBX JOB MSGLEVEL=1
/&
/+
$$DITTO EOJ
AA
//
//SAMPCCSI JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSPUNCH DD DCB=(BLKSIZE=81,RECFM=FA,FUNC=I),UNIT=00D
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CCS DECKTYPE=BAL,DECKNAME=STEVE
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 15 ********767880
/+
$$DITTO EOJ
/*
//SAMPTCI  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=SHR,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPUNCH DD DCB=(BLKSIZE=81,RECFM=FA,FUNC=I),UNIT=00D
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CT OUTPUT=TAPEIN,BLKFACTOR=5
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 20 ********767880
/+
$$DITTO WTM OUTPUT=TAPEIN
$$DITTO WTM OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO TC INPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80
$$DITTO EOJ
/*
//LSTICRDS JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD DATA,DLM=AA
$$DITTO CP

12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION CI  CARD # 10 ********767880

//
/*
//*
// JOB N
//JOBX JOB MSGLEVEL=1
/&


12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  1 ******STE00010
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  2 ******STE00020
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  3 ******STE00030
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  4 ******STE00040
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  5 ******STE00050
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  6 ******STE00060
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  7 ******STE00070
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  8 ******STE00080
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD #  9 ******STE00090
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 10 ******STE00100
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 11 ******STE00110
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 12 ******STE00120
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 13 ******STE00130
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 14 ******STE00140
12345************** OS/DITTO TEST DATA FOR FUNCTION CIS CARD # 15 ******STE00150


12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  1 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  2 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  3 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  4 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  5 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  6 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  7 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  8 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD #  9 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 10 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 11 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 12 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 13 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 14 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 15 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 16 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 17 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 18 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 19 ********767880
12345************** OS/DITTO TEST DATA FOR FUNCTION TI  CARD # 20 ********767880

/+
$$DITTO EOJ
AA
//
//
//TPTPD    JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO  TP    INPUT=TAPEIN,NBLKS=5
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO  TP    INPUT=TAPEIN,NBLKS=5
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO EOJ
/*
//TDTDD    JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.SYSPRINT DD SYSOUT=A
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO  TD    INPUT=TAPEIN,NBLKS=5
$$DITTO  TDD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO  TD    INPUT=TAPEIN,NBLKS=5
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO  TDD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO EOJ
/*
//TPVTDV   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO TPV INPUT=TAPEIN,NBLKS=5
$$DITTO TDV INPUT=TAPEIN,NBLKS=5
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO TPV INPUT=TAPEIN,NBLKS=5
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO TDV INPUT=TAPEIN,NBLKS=5
$$DITTO EOJ
/*
//SAMPTT   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.TAPEOUT DD DSN=DUMMYOUT,UNIT=TAPE,VOL=SER=OUTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO TT  INPUT=TAPEIN,OUTPUT=TAPEOUT
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO  TPD   INPUT=TAPEIN,NBLKS=0010,RECSIZE=80
$$DITTO  TPD   INPUT=TAPEOUT,RECSIZE=80,NBLKS=05
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO FSF OUTPUT=TAPEOUT
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO BSR OUTPUT=TAPEOUT,NBLKS=5
$$DITTO TPD INPUT=TAPEIN,NBLKS=5,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80
$$DITTO EOJ
/*
//SAMPTTR  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.TAPEOUT DD DSN=DUMMYOUT,UNIT=TAPE,VOL=SER=OUTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO TTR INPUT=TAPEIN,OUTPUT=TAPEOUT,RECSIZE=80,BLKFACTOR=150
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO TPD INPUT=TAPEOUT,NBLKS=2,RECSIZE=80
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO FSF OUTPUT=TAPEOUT
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=5
$$DITTO BSR OUTPUT=TAPEOUT,NBLKS=5
$$DITTO TPD INPUT=TAPEIN,NBLKS=5,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,NBLKS=5,RECSIZE=80
$$DITTO EOJ
/*
//REWRUN   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=50
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEIN
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=50
$$DITTO RUN OUTPUT=TAPEIN
$$DITTO  TPD   INPUT=TAPEIN,RECSIZE=80,NBLKS=05
$$DITTO EOJ
/*
//FSRBSR   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//TAPEIN     DD DSN=DUMMYINT,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=3
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=3
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=3
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=50
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=51
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO FSR OUTPUT=TAPEIN,NBLKS=200
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=201
$$DITTO TPD INPUT=TAPEIN,NBLKS=1,RECSIZE=80
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=10
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=2
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=50
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO EOJ
/*
//FSFBSF   JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEIN DD DSN=DUMMYIN,UNIT=TAPE,VOL=SER=INTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO TDD INPUT=TAPEIN,RECSIZE=80,NBLKS=2
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO TDD INPUT=TAPEIN,RECSIZE=80,NBLKS=2
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO TDD INPUT=TAPEIN,RECSIZE=80,NBLKS=2
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO TDD INPUT=TAPEIN,RECSIZE=80,NBLKS=2
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=1
$$DITTO TDD INPUT=TAPEIN,RECSIZE=80,NBLKS=5
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEIN
$$DITTO EOJ
/*
//
//
//SAMPWTM  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=64K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//GO.TAPEOUT DD DSN=DUMMYOUT,UNIT=TAPE,VOL=SER=OUTAPE,DISP=OLD,
// LABEL=(,BLP),DCB=(DEN=3)
//GO.SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO CTS OUTPUT=TAPEOUT,BLKFACTOR=5,DECKTYPE=BAL,DECKNAME=SCO



















/+
$$DITTO WTM OUTPUT=TAPEOUT
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80
$$DITTO EOJ
/*
//COPY9TO7 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//        EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//SYSUDUMP DD SYSOUT=A
//TAPEIN DD DSN=TT.DUMIN,UNIT=TAPE,VOL=SER=DISTP,DISP=(OLD,KEEP),
// LABEL=(,BLP)
//TAPEOUT DD DSN=TAP.T7,UNIT=2400-1,VOL=SER=TRACK7,DISP=(NEW,KEEP),
// LABEL=(,BLP),
// DCB=(DEN=2,TRTCH=ET)
//SYSIN DD DATA
$$DITTO TTR INPUT=TAPEIN,OUTPUT=TAPEOUT,RECSIZE=80,BLKFACTOR=10
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO TPD INPUT=TAPEIN,NBLKS=3,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80,NBLKS=3
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO FSF OUTPUT=TAPEOUT
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=3
$$DITTO BSR OUTPUT=TAPEOUT,NBLKS=3
$$DITTO TPD INPUT=TAPEIN,NBLKS=3,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,NBLKS=5,RECSIZE=80
$$DITTO EOJ
/*
//COPY7TO9 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//        EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//SYSUDUMP DD SYSOUT=A
//TAPEIN  DD DSN=TAP.T7,UNIT=2400-1,VOL=SER=TRACK7,DISP=(OLD,KEEP),
// LABEL=(,BLP),
// DCB=(DEN=2,TRTCH=ET)
//TAPEOUT DD DSN=TRL.DUMOUT,UNIT=TAPE,VOL=SER=SCRTCH,DISP=(NEW,KEEP),
// LABEL=(,BLP),DCB=(DEN=3)
//SYSIN DD DATA
$$DITTO TTR INPUT=TAPEIN,OUTPUT=TAPEOUT,RECSIZE=80,BLKFACTOR=20
$$DITTO REW OUTPUT=TAPEIN
$$DITTO REW OUTPUT=TAPEOUT
$$DITTO TPD INPUT=TAPEIN,NBLKS=3,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80,NBLKS=3
$$DITTO FSF OUTPUT=TAPEIN
$$DITTO BSF OUTPUT=TAPEOUT
$$DITTO BSR OUTPUT=TAPEIN,NBLKS=3
$$DITTO BSR OUTPUT=TAPEOUT,NBLKS=3
$$DITTO TPD INPUT=TAPEIN,NBLKS=3,RECSIZE=80
$$DITTO TPD INPUT=TAPEOUT,RECSIZE=80,NBLKS=3
$$DITTO EOJ
/*
//SAMPU200 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//* THIS JOB WILL TTR BY A BLK FACTOR OF 200, BEYOND BUFFER SIZE
//        EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//TAPEIN DD DSN=TC.DUMIN,UNIT=TAPE,VOL=SER=TC-IN,DISP=(OLD,KEEP),
//       LABEL=(,BLP)
//TAPEOUT DD DSN=CT.DUMOUT,UNIT=TAPE,VOL=SER=CT-OUT,DISP=(NEW,KEEP),
//       LABEL=(,BLP)
//SYSIN DD DATA
$$DITTO TTR INPUT=TAPEIN,OUTPUT=TAPEOUT,RECSIZE=80,BLKFACTOR=200
$$DITTO EOJ
/*
//
//SAMPU500 JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//* THIS JOB WILL DEPENDS ON AN INCONSISTENT BLKSIZE I/P TAPE, MSG
//*            BLKSIZE EXCEEDS FIRST BLOCK OR NOT MULITPLE OF RECSIZE
//        EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//SYSPRINT DD SYSOUT=A
//TAPEIN DD DSN=TP.DUMIN,UNIT=TAPE,VOL=SER=TP-IN,DISP=(OLD,KEEP),
// LABEL=(,BLP)
//TAPEOUT DD DSN=TT.DUMOUT,UNIT=TAPE,VOL=SER=TT-OUT,DISP=(NEW,KEEP),
// LABEL=(,BLP)
//SYSIN DD DATA
$$DITTO TTR INPUT=TAPEIN,OUTPUT=TAPEOUT,RECSIZE=80,BLKFACTOR=100
$$DITTO EOJ
/*
//DD30DDD  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
// EXEC PGM=IEHPROGM
//DD1 DD UNIT=3330,DISP=OLD,VOL=REF=SYS1.MACLIB
//SYSPRINT DD SYSOUT=A
//SYSIN DD *
 SCRATCH DSNAME=DITGARBG,VOL=3330=VS1410,PURGE
 SCRATCH DSNAME=DITGARBG,VOL=3330=SYS207,PURGE
 SCRATCH DSNAME=DITGARBG,VOL=3330=VS1310,PURGE
/*
//S2 EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSUT1    DD DSN=NON,UNIT=TAPE,VOL=SER=SOURCE,DISP=(OLD,KEEP),
// LABEL=(,BLP),
//     DCB=(LRECL=80,BLKSIZE=1600,RECFM=FB)
//SYSUT2  DD  DSN=DITGARBG,DISP=(NEW,KEEP),
// SPACE=(CYL,(3,1)),VOL=REF=SYS1.MACLIB,
//  DCB=(BLKSIZE=800,LRECL=80,RECFM=FB),UNIT=3330
//SYSIN DD DUMMY
//STEP  EXEC  PGM=IEHLIST
//DD1 DD UNIT=3330,DISP=OLD,VOL=REF=SYS1.MACLIB
//SYSPRINT DD SYSOUT=A
//SYSIN DD *
 LISTVTOC FORMAT
/*
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//DISKIN  DD  DSN=DITGARBG,DISP=(OLD,KEEP),
//    UNIT=3330,VOL=REF=SYS1.MACLIB
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO DP  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DD  INPUT=DISKIN,BEGIN=00001,END=00001
$$DITTO DPD INPUT=DISKIN,BEGIN=00018,END=00018,RECSIZE=80
$$DITTO DDD INPUT=DISKIN,BEGIN=00018,END=00018,RECSIZE=80
$$DITTO DDD INPUT=DISKIN,BEGIN=00100,END=00100,RECSIZE=80
$$DITTO DDD INPUT=DISKIN,BEGIN=00118,END=00118,RECSIZE=80
$$DITTO DDD INPUT=DISKIN,BEGIN=00200,END=00200,RECSIZE=80
$$DITTO DDD INPUT=DISKIN,BEGIN=00201,END=00201,RECSIZE=80
$$DITTO EOJ
/*
//
//SD30SDD  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//DISKIN DD DSN=DITGARBG,DISP=(OLD,KEEP),UNIT=3330,VOL=REF=SYS1.MACLIB
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO SD  INPUT=DISKIN,BEGIN=00000,END=00200
$$DITTO SD  INPUT=DISKIN,BEGIN=00001,END=00201
$$DITTO SDD INPUT=DISKIN,BEGIN=00109,END=00109,RECSIZE=80
$$DITTO SDD INPUT=DISKIN,BEGIN=00110,END=00110,RECSIZE=80
$$DITTO EOJ
/*
//
//EOE2314  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
// EXEC PGM=IEHPROGM
//DD1 DD UNIT=2314,DISP=OLD,VOL=SER=EEEEEE
//SYSPRINT DD SYSOUT=A
//SYSIN DD *
 SCRATCH DSNAME=DITGARBG,VOL=2314=EEEEEE,PURGE
/*
//S2 EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSUT1    DD DSN=NON,UNIT=TAPE,VOL=SER=SOURCE,DISP=(OLD,KEEP),
// LABEL=(,BLP),
//     DCB=(LRECL=80,BLKSIZE=1600,RECFM=FB)
//SYSUT2  DD  DSN=DITGARBG,DISP=(NEW,KEEP),
// SPACE=(CYL,(1,1)),VOL=SER=EEEEEE,
//  DCB=(BLKSIZE=800,LRECL=80,RECFM=FB),UNIT=2314
//SYSIN DD DUMMY
//STEP  EXEC  PGM=IEHLIST
//DD1 DD UNIT=2314,DISP=OLD,VOL=SER=EEEEEE
//SYSPRINT DD SYSOUT=A
//SYSIN DD *
 LISTVTOC FORMAT,VOL=2314=EEEEEE
/*
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//DISKIN  DD  DSN=DITGARBG,DISP=OLD,VOL=SER=EEEEEE,UNIT=2314
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//SYSIN DD *
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DD  INPUT=DISKIN,BEGIN=00001,END=00001
$$DITTO DDD INPUT=DISKIN,BEGIN=00019,END=00100,RECSIZE=80
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DDD INPUT=DISKIN,BEGIN=00019,END=00100,RECSIZE=80
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DDD INPUT=DISKIN,BEGIN=00019,END=00100,RECSIZE=80
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO DDD INPUT=DISKIN,BEGIN=00016,END=00016,RECSIZE=80
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000
$$DITTO EOJ
/*
//SD14SDD  JOB (6280,02D,05,4,500,,01,,66),'02D000000000002DBOP ',     C JAN  72
// CLASS=A,REGION=52K,TIME=0010,MSGLEVEL=1
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'
//DISKIN  DD  DSN=DITGARBG,DISP=OLD,VOL=SER=EEEEEE,UNIT=2314
//SYSPRINT DD SYSOUT=A
//GO.SYSUDUMP DD SYSOUT=A
//GO.SYSIN DD *
$$DITTO SD  INPUT=DISKIN,BEGIN=00000,END=00300
$$DITTO SD  INPUT=DISKIN,BEGIN=00001,END=00301
$$DITTO SDD INPUT=DISKIN,BEGIN=00009,END=00309,RECSIZE=80
$$DITTO SDD INPUT=DISKIN,BEGIN=00019,END=00319,RECSIZE=80
$$DITTO SDD INPUT=DISKIN,BEGIN=00212,END=00212,RECSIZE=80
$$DITTO SDD INPUT=DISKIN,BEGIN=00213,END=00213,RECSIZE=80
$$DITTO SDD INPUT=DISKIN,BEGIN=00014,END=00214,RECSIZE=80
$$DITTO EOJ
/*
//
//DITTORDI JOB (302D001200080D),MSGLEVEL=1,CLASS=A,REGION=64K
//*                                                                     HSP00030
//* THE PROCEDURE DITTORDI MAY BE USED FROM THE CONSOLE TO INITIATE     HSP00040
//*      OS/DITTO CONSOLE FUNCTIONS THROUGH THE HASP INTERNAL READER.   HSP00050
//* THIS HAS THE ADVANTAGE OF HASP PRINTING AND PUNCHING OF SYSOUT      HSP00060
//*      GENERATED BY OS/DITTO FUNCTIONS INVOKED FROM THE CONSOLE.      HSP00070
//* THE DITTORDI PROCEDURE MAY BE USED FOR ALL DITTO PROCEDURES         HSP00080
//*     DOCUMENTED IN THE 'XXX' LISTING EXCEPT DITTODD. FOR DITTODD     HSP00090
//*     CONSOLE FUNCTIONS USE A CONSOLE DECK SUBMITTED THROUGH THE      HSP00100
//*     LOCAL HASP READER.                                              HSP00110
//*                                                                     HSP00120
//* HASP OPERARATION: S DITTORDI,PRC=DITTO___,RDI=CUU                   HSP00130
//*                     E.G. S DITTORDI,PRC=DITTOTC,RDI=DAF             HSP00140
//*                     DEFAULTS: PRC=DITTOTP,RDI=D8F                   HSP00150
//*                     PRC= IS DESIRED DITTO CONSOLE PROCEDURE         HSP00160
//*                     RDI=  IS HASP INTERNAL READER ADDRESS           HSP00170
//*                                                                     HSP00180
//     EXEC PGM=IEBUPDTE,PARM=NEW                                       HSP00190
//SYSUT1 DD DSN=SYS1.PROCLIB,DISP=SHR                                   HSP00200
//SYSUT2 DD DSN=SYS1.PROCLIB,DISP=SHR                                   HSP00210
//SYSPRINT DD SYSOUT=A                                                  HSP00220
//SYSIN DD DATA,DCB=BLKSIZE=80,DLM=AA                                   HSP00230
./ ADD NAME=DITTOJOB,LIST=ALL                                           HSP00360
//DITTOJOB JOB (302D001200080D),MSGLEVEL=1,CLASS=A,REGION=64K
./ ADD NAME=DITTORDI,LIST=ALL                                           HSP00240
//IEFPROC PROC PRC=DITTOTP,RDI=DAF                                      HSP00250
//       EXEC  PGM=IEBGENER                                             HSP00260
//SYSPRINT DD SYSOUT=A                                                  HSP00270
//SYSUT1 DD    DSN=SYS1.PROCLIB(DITTOJOB),DISP=SHR  JOB CARD            HSP00280
//       DD    DSN=SYS1.PROCLIB(&PRC),DISP=SHR      DITTO PROCEDURE     HSP00290
//       DD    DSN=SYS1.PROCLIB(PEND),DISP=SHR      PEND IN-STREAM PROC HSP00300
//       DD    DSN=SYS1.PROCLIB(EXECPROC),DISP=SHR  EXEC IN-STREAM PROC HSP00310
//       DD    DSN=SYS1.PROCLIB(EOF),DISP=SHR       /*EOF FOR HASP RDI  HSP00320
//SYSUT2 DD    UNIT=&RDI,DCB=(BLKSIZE=80,RECFM=U,BUFNO=1)               HSP00330
//*            HASP INTERNAL READER ( RDI DEFAULTS TO DAF )             HSP00340
//SYSIN  DD    DUMMY                                                    HSP00350
./ ADD NAME=PEND,LIST=ALL                                               HSP00390
//         PEND                                                         HSP00400
./ ADD NAME=EXECPROC,LIST=ALL                                           HSP00410
//         EXEC PROC=IEFPROC                                            HSP00420
./ ADD NAME=EOF,LIST=ALL                                                HSP00430
/*EOF                                                                   HSP00440
./ ENDUP                                                                HSP00450
AA                                                                      HSP00460
//                                                                      HSP00470
//DITTOCCP JOB (302D001200080D),MSGLEVEL=1,CLASS=A,REGION=64K,          HSP00480
// TYPRUN=HOLD                                                          HSP00490
//*                                                                     HSP00500
//* HASP CONSOLE DECK TO INITIATE OS/DITTO CARD FUNCTIONS THROUGH       HSP00510
//*      THE HASP LOCAL CARD READER WITH CONSOLE CONTROL OF DITTO.      HSP00520
//*                                                                     HSP00530
//* HASP OPERATION: READ IN DITTOCCP, $PRDR1 (00C), V 00C,ONLINE,       HSP00540
//*                 $A'DITTOCCP'                                        HSP00550
//*    ENTER DITTO FUNCTIONS: CC,CCS,CP,CD,CCL                          HSP00560
//*                                                                     HSP00570
//         EXEC PGM=OSDITTO                                             HSP00580
//SYSIN    DD UNIT=00C,                                                 HSP00590
//            DCB=(BLKSIZE=80,RECFM=F,BUFNO=6,OPTCD=C)                  HSP00600
//SYSPUNCH DD SYSOUT=B,                                                 HSP00610
//            DCB=(BLKSIZE=81,RECFM=FA,BUFNO=6,OPTCD=C)                 HSP00620
//SYSPRINT DD SYSOUT=A                                                  HSP00630
//SYSUDUMP DD SYSOUT=A                                                  HSP00640
//                                                                      HSP00650
//DITTOTCP JOB (302D001200080D),MSGLEVEL=1,CLASS=A,REGION=64K
//*                                                                     HSP00680
//* HASP CONSOLE DECK TO INITIATE OS/DITTO TAPE FUNCTIONS THROUGH       HSP00690
//*      THE HASP LOCAL CARD READER WITH CONSOLE CONTROL OF DITTO.      HSP00700
//*                                                                     HSP00710
//* HASP OPERATION: READ IN DITTOTCP                                    HSP00720
//*    ENTER DITTO FUNCTIONS: TC,TP,TPD,TD,TDD,INT,ERT,TPV,TDV          HSP00730
//*                                                                     HSP00740
//         EXEC PGM=OSDITTO                                             HSP00750
//TAPEIN   DD DSN=TC.DUMIN,UNIT=TAPE,VOL=SER=TC-IN,DISP=(OLD,KEEP),     HSP00760
//            LABEL=(,BLP)                                              HSP00770
//SYSPUNCH DD SYSOUT=B,                                                 HSP00780
//            DCB=(BLKSIZE=81,RECFM=FA,BUFNO=6,OPTCD=C)                 HSP00790
//SYSPRINT DD SYSOUT=A                                                  HSP00800
//SYSUDUMP DD SYSOUT=A                                                  HSP00810
//                                                                      HSP00820
//DITTODP  JOB (302D001200080D),MSGLEVEL=1,CLASS=A,REGION=64K
//*                                                                     HSP00850
//* HASP CONSOLE DECK TO INITIATE OS/DITTO DISK FUNCTIONS THROUGH       HSP00860
//*      THE HASP LOCAL CARD READER WITH CONSOLE CONTROL OF DITTO.      HSP00870
//*                                                                     HSP00880
//* HASP OPERATION: CHANGE DISKIN DD CARD SER & DSN, READ IN DITTODD    HSP00890
//*    ENTER DITTO FUNCTIONS: DSE,DP,DPD,DD,DDD,DRL,DRS,EOF             HSP00900
//*                                                                     HSP00910
//         EXEC PGM=OSDITTO                                             HSP00920
//DISKIN   DD UNIT=SYSDA,DISP=OLD,VOL=SER=??????,DSN=????????           HSP00930
//SYSPRINT DD SYSOUT=A                                                  HSP00940
//SYSUDUMP DD SYSOUT=A                                                  HSP00950
//                                                                      HSP00960
LIBDISTRIBUTION1PID0512 MO02 21:17 77138       47B470
