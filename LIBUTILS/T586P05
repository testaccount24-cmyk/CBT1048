IEX TITLE 'MONSANTO LIBRARIAN INPUT EXIT'
T586P05  CSECT
R0       EQU   0                   TEMP. WORK REGISTER
R1       EQU   1                   POINTS TO START OF PARAMETER LIST
R2       EQU   2                   TEMP. WORK REGISTER
R3       EQU   3                   BASE REGISTER
R4       EQU   4                   POINTS TO RECORD IN LIBRARIAN
R5       EQU   5                   POINTS TO HALF WORD RETURN CODE
R6       EQU   6                   POINTS TO FULL WORD IN LIBRARIAN
R7       EQU   7                   DSECT POINTER
R8       EQU   8                   UNUSED
R9       EQU   9                   UNUSED
R10      EQU   10                  UNUSED
R11      EQU   11                  UNUSED
R12      EQU   12                  UNUSED
R13      EQU   13                  REGISTER SAVE AREA POINTER
R14      EQU   14                  RETURN ADDR. TO LIBRARIAN
R15      EQU   15                  EXIT ENTRY POINT ADDRESS
         SPACE 10
* PROGRAMMER -         P.S.GRANT    FROM AN ADR USER PROGRAM
*                      TECHNICAL SUPPORT GROUP
*                      MONSANTO EUROPE S.A.
*                      270-272 AV DE TERVUREN
*                      1150 BRUSSELS
*                      BELGIUM
         SPACE 3
* ATTRIBUTES -  RE-ENTRANT AND RE-USABLE
         EJECT
* PURPOSE -
*
*        THIS PROGRAM IS AN INPUT EXIT FOR THE LIBRARYN WHICH ENFORCES
*         VARIOUS INSTALLATION STANDARDS.  THESE STANDARDS ARE:-
*
*              1. THE UTILITY '-COPY' OPERATION IS NOT ALLOWED TO
*                 USED IN NORMAL CIRCUMSTANCES. SEE SPECIAL FACILTIES.
*
*              2. THE 'PUNCH' OPERATION IS INVALID ( IN -OPT, -SEL,
*                 AND -ADD, ALSO IN THE UTILITY).
*                 THIS ENSURES PEOPLE ALWAYS USE THE LIBRARIAN.
*
*              3. THE -HSTD CARD IS INVALID UNLESS IT FOLLOWS A
*                 -SEL WITH A COPY= OPERAND.
*                 THIS IS TO ENSURE THAT HISTORY CARDS ARE NOT
*                 ACCIDENTLY DELETED.
*
*              4. -DESC AND -PGMR CARDS MUST BE SUPPLIED FOR -ADD AND
*                 -SEL/COPY OPERATIONS, TO ENSURE A MINIMUM LEVEL OF
*                 DOCUMENTATION.
*
*              5. TEMP OR VERS= IS MANDATORY IN ALL -SEL CARDS. THIS
*                 ENSURES THAT A MODULE IS ONLY UPDATED WHEN THE
*                 PROGRAMMER KNOWS WHAT VERSION OF THE MODULE HE IS
*                 PROCESSING. (LEVL= IS A SYNONYM FOR VERS=).
*                 THERE ARE EXCEPTIONS TO THIS:-
*                 TO FACILITATE THE USE OF CMS FACILITIES
*                 A -SEL CARD WILL BE ACCEPTED WITHOUT TEMP OR VERS=
*                 PROVIDED THAT THE LAST PARAMETER OF THE -SEL CARD IS
*                 'REPALL', AND PROVIDED THAT THE FIRST MODULE CONTROL
*                 CARD ENCOUNTERED IS '-REP ALL'.
*                 WHEN A -SEL WITH A COPY OPERAND IS ENCOUNTERED, NO
*                 CHECK FOR TEMP OR VERS= IS MADE.
*
*
*        IF ANY OF THESE STANDARDS IS NOT MET, THE ASSOCIATED REQUEST
*         IS FORCIBLY INVALIDATED BY THE INSERTION OF EXTRANEOUS DATA,
*         AND AN ERROR MESSAGE IS INSERTED INTO THE OFFENDING CARD OR
*         MODULE, DEPENDING UPON WHEN THE ERROR IS RECOGNISED.  UNDER
*         ALL CIRCUMSTANCES, AN ATTEMPT TO IGNORE A STANDARD WILL
*         RESULT IN THE LIBRARIAN REJECTING THE REQUEST UNACTIONED.
         EJECT
* SPECIAL FACILITIES -
*
*              1. THE EXIT IS BYPASSED IF AN -MCD CARD IS SUPPLIED.
*                 ( THIS PERMITS AUTHORISED FUNCTIONS TO BE PERFORMED
*                 ONLY BY THE TECHNICAL SUPPORT GROUP ).
*
*              2. IF THE FIRST CARD IN A RUN IS '-OPT GPO', THEN
*                 THE COPY FACILITY MAY BE USED AND TEMP/VERS=
*                 CKECKING IS BYPASSED. STANDARDS ARE STILL ENFORCED
*                 IN RESPECT OF PUNCH, PGMR/DESC, HSTD AND REPALL.
*
*              3. THE FACILITY ABOVE MAY ALSO BE INVOKED BY REPLACING
*                 THE HYPHEN '-' BY AN UNDERSCORE '_' IN THE FIRST
*                 -OPT CARD FOR A LIBRARIAN RUN.
*
*              4. THE OUTPUT FORM A -COPY REQUEST IS A MODULE WITH
*                 A -ADD HEADER CARD. THE EXIT ALWAYS RECOGNISES THIS
*                 AND BYPASSES THE PGMR/DESC CHECK WHEN ADDING THE
*                 MODULE IN A SUBSEQUENT LIBRARIAN EXECUTION.
         EJECT
*
* ASSUMPTIONS -
*
*        THE LIBRARIAN USES THE STANDARD IBM LINKAGE CONVENTIONS WHEN
*        CALLING THE USER EXIT ROUTINE. REGISTER 1 POINTS TO THE START
*        OF A PARAMETER LIST CONSISTING OF 3 FULL-WORD ADDRESSES AS
*        FOLLOWS--
*        1. THE FIRST PARAMETER POINTS TO THE 80-BYTE CARD IMAGE IN
*           THE LIBRARIAN
*        2. THE SECOND PARAMETER POINTS TO A HALF-WORD AREA IN THE
*           LIBRARIAN CONTAINING THE RETURN CODE.
*        3. THE THIRD PARAMETER POINTS TO A FULL-WORD IN THE LIBRARIAN,
*           USED ONLY BY THE USER EXIT ROUTINE, IF NEEDED.
*
*        WHEN CONTROL IS RETURNED TO THE LIBRARIAN, THE RETURN CODE
*        PASSED IN THE HALF-WORD OF THE SECOND PARAMETER WILL BE TESTED
*        FOR THE FOLLOWING VALUES--
*        0 - THE USER EXIT ROUTINE SHOULD NOT BE CALLED AGAIN.
*        4 - REPLACEMENT
*        8 - INSERTION
*        12- DELETION
*        ANY OTHER VALUE IS TREATED THE SAME AS CODE 0
*
*        THE LIBRARIAN WILL PASS AN -END CARD TO THIS ROUTINE
*        REGARDLESS OF WHETHER OR NOT ONE IS GIVEN TO IT.
         EJECT
***********************************************************************
*        PROGRAM INITIALIZATION ROUTINE
***********************************************************************
         SPACE 1
         USING *,R3
         USING DUMMY,R7
BEGIN    SAVE  (14,12)             SAVE ALL REGISTERS
         LR    R2,R13              SAVE REGISTER 13
         LR    R3,R15              INIT. BASE REGISTER
         LM    R4,R6,0(R1)         LOAD PARAMETER LIST
         ICM   R7,15,0(R6)         LOAD AND TEST DSECT POINTER
         BNZ   START               GOT MAIN-STORAGE
***********************************************************************
*        OBTAIN AND INITIALISE A WORKAREA                             *
***********************************************************************
         GETMAIN R,LV=DUMMYL       GET SOME WORKING STORAGE
         ST    R1,0(R6)            STORE DSECT ADDR IN LIBRARIAN AREA
         LR    R7,R1               INIT. DSECT REGISTER
         XC    0(76,R1),0(R1)      CLEAR REGISTER SAVE AREA & BRANCH
         NI    SWBYTE,X'00'        CLEAR SWITCHES.
         MVI   BLANK,C' '          SET RECORD -
         MVC   REC1(242),BLANK     CLEAR CARD SET AREA.
         MVC   BRANCH,=A(START1)   INIT. BRANCH POINTER
***********************************************************************
*        CHECK FIRST CARD IN INPUT FOR SPECIAL RUN REQUESTS           *
***********************************************************************
         CLI   0(R4),X'6D'         SPECIAL CHARACTER ON FIRST CARD?
         BE    CORRECT             YES. SET-UP FOR SPECIAL RUN.
         CLC   0(8,R4),=CL8'-OPT GPO' IS THIS A GPO RUN?
         BE    CORRECT             YES. SET SPECIAL RUN INDICATOR
         CLI   79(R4),X'E0'        ALTERNATE SPECIAL CHARACTER?
         BNE   START               NO. NORMAL START.
CORRECT  EQU   *
         MVI   0(R4),C'-'          INSERT NORMAL CHARACTER.
         OI    SWBYTE,GPOSW        SET SPECIAL RUN SWITCH
***********************************************************************
*        CONTINUE INITIALISATION                                      *
***********************************************************************
START    LA    R13,SAVEREG         SET SAVE AREA POINTER
         ST    R13,8(R2)           PASS SAVE-AREA POINTER TO LIBR.
         ST    R2,4(R13)           STORE SAVE-AREA POINTER OF LIBR.
         CLC   0(2,R5),=H'0'       IS THIS END OF FILE CONDITION
         BNE   NORET               YES--RETURN TO LIBRARIAN
         MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         L     R1,BRANCH           LOAD BRANCH ADDR.
         BR    R1                  BRANCH TO RESP. ROUTINE
         EJECT
***********************************************************************
*        NORMAL ENTRY POINT. SELECT LIBRARIAN CONTROL CARDS.          *
***********************************************************************
         SPACE 1
START1   CLI   0(R4),C'-'          IS THIS A CONTROL STATEMENT
         BNE   RETURN              NO.RETURN TO LIBRARIAN
         SPACE 1
***********************************************************************
*        CKECK FOR '-MCD' CARD. IF FOUND DO NOT RETURN TO EXIT.       *
***********************************************************************
MCDCHECK EQU   *
         CLC   1(4,R4),=CL4'MCD'   IS THIS A MANAGEMENT CNTRL-STATEMENT
         BE    NORET               YES--SET DO NOT RETURN CODE
         SPACE 1
***********************************************************************
*        CHECK FOR SPECIAL RUN AND OPT CARDS IN THAT RUN.             *
***********************************************************************
         TM    SWBYTE,GPOSW        SPECIAL RUN?
         BNO   REPALLCK            NO. BRANCH
         CLC   1(4,R4),=C'OPT '    -OPT CARD?
         BNE   REPALLCK            NO. GO ON WITH CHECKS
         MVI   79(R4),X'E0'        YES. SET IND FOR FUTURE RUNS.
         SPACE 1
***********************************************************************
*        CKECK FOR VALID '-REP ALL' CONTROL CARD. ERROR IF NOT FOUND. *
***********************************************************************
REPALLCK EQU   *
         TM    SWBYTE,REPALLSW     REP ALL REQUESTED?
         BNO   PUNCHCK             NO. GO ON TO NEXT PARAGRAPH
         CLC   1(4,R4),=C'INS '    INS CARD IN REP ALL REQUEST?
         BE    REPALERR            YES. GO TO ERROR ROUTINE
         CLC   1(4,R4),=C'DEL '    DEL CARD IN REP ALL REQUEST?
         BE    REPALERR            YES. GO TO ERROR ROUTINE.
         CLC   1(4,R4),=C'REP '    REP CARD?
         BNE   PUNCHCK             NO. CONTINUE CONTROL CARD CHECKS
         CLC   4(5,R4),=C' ALL '   IS IT A REP ALL?
         BNE   REPALERR            NO. GO TO ERROR ROUTINE
         NI    SWBYTE,255-REPALLSW  YES. TURN OFF SWITCH
         B     RETURN              RETURN TO LIBRARIAN
         SPACE 1
***********************************************************************
*        REP ALL ERROR ROUTINE. INVALIDATES INPUT STREAM.             *
***********************************************************************
REPALERR EQU   *
         MVC   0(33,R4),=CL33'-REP ALL-INDICATED, BUT NOT FACT.'
*                                  OVERWRITE ERRONEOUS CONTROL CARD.
         NI    SWBYTE,255-REPALLSW PREVENT REOCCURENCE OF ERROR MSG.
         B     RETURN              RETURN TO LIBRARIAN
         EJECT
***********************************************************************
*        CHECK -OPT -ADD & -SEL CARDS FOR PUNCH OPERAND.              *
***********************************************************************
PUNCHCK  EQU   *
         CLC   1(4,R4),=C'OPT '    -OPT CARD?
         BE    PNCHLOOK            YES. CHECK FOR PUNCH
         CLC   1(4,R4),=C'SEL '    -SEL STATEMENT?
         BE    PNCHLOOK            YES. SCAN FOR PUNCH
         CLC   1(4,R4),=C'ADD '    -ADD CARD?
         BNE   PNCHBYPP            NO. BYPASS SCAN FOR PUNCH
PNCHLOOK EQU   *
*        ADD OR SEL CARD FOUND. CLEAR INDICATORS.
         NI    SWBYTE,X'00'+GPOSW  CLEAR SWITCHES EXCEPT SPECIAL RUN SW
         LA    R1,4(0,R4)          JUMP TO FIRST OPERAND
         LA    R0,74(0,R4)         GET LAST POSSIBLE COMPARE ADDRESS
         SR    R0,R1               GET SEARCH LENGTH
         LPR   R0,R0               MAKE SURE IT IS POSITIVE
PNCHLOOP EQU   *
         CLC   0(6,R1),=C' PUNCH'  IS PUNCH FIRST OPERAND?
         BE    PNCHFND             YES. BRANCH.
         CLC   0(6,R1),=C',PUNCH'  PUNCH ANY OTHER OPERAND?
         BE    PNCHFND             YES.BRANCH
         LA    R1,1(0,R1)          JUMP ONE NOTCH ON CARD
         BCT   R0,PNCHLOOP         GO ROUND AGAIN
         EJECT
***********************************************************************
*        DETERMINE CARD TYPE AND BRANCH TO RESPONSIBLE ROUTINE.       *
***********************************************************************
PNCHBYPP EQU   *
         CLC   1(4,R4),=CL4'SEL '  IS IT A SEL CARD?
         BE    SELANAL             YES. ANALYZE IT.
         CLC   1(4,R4),=C'ADD '    ADD CARD?
         BE    STORADD             YES. STORE IT
         CLC   1(6,R4),=C'PUNCH '  IS IT A PUNCH UTILITY?
         BE    UTERROR             YES. UTILITY ERROR
         CLC   1(5,R4),=C'COPY '   IS IT A COPY UTILITY
         BNE   HSTDTEST            NO. GO ON TO NEXT TEST
         TM    SWBYTE,GPOSW        SPECIAL RUN?
         BNO   UTERROR             NO. UTILITY ERROR
HSTDTEST EQU   *
         CLC   1(5,R4),=C'HSTD '   IS IT A HSTD CARD?
         BNE   RETURN              NO. RETURN TO LIBRARYN
         TM    SWBYTE,COPYSW       HSTD IN -SEL COPY OPERATION?
         BO    RETURN              YES. LET IT GO.
         MVC   50(30,R4),MSG1      MOVE ERROR MESSAGE
         MVC   55(5,R4),1(R4)      MODIFY IT
         MVI   4(R4),C' '          CHANGE -HSTD TO -HST
         B     RETURN              RETURN TO LIBRARYN
         SPACE 1
***********************************************************************
*        ERROR ROUTINE FOR RESTRICTED UTILITY CONTROL STATEMENTS.     *
***********************************************************************
UTERROR  EQU   *
         MVC   50(30,R4),MSG1      MOVE ERROR MESSAGE
         MVC   55(5,R4),1(R4)     MOVE OPERATION REQUESTED TO MSG.
         B     ERROR               GO TO COMMON ERROR ROUTINE
PNCHFND  EQU   *
         MVC   50(30,R4),MSG1      MOVE PUNCH RESTRICTED MESSAGE
         B     ERROR               GO TO ERROR ROUTINE
         EJECT
***********************************************************************
*        ANALYSE CONTENTS OF -SEL CONTROL CARD.                       *
***********************************************************************
SELANAL  EQU   *
         TRT   6(63,R4),COMMA      LOOK FOR FIRST COMMA
         BZ    RETURN              RETURN IF NONE
         LA    R1,1(0,R1)          JUMP ONE BYTE
         TRT   0(5,R1),COMMA       LOOK FOR SECOND COMMA AFTER PSWD.
         BZ    SELDECSN            IF NOT FOUND MAKE UNAVOIDABLE DECSN
         LA    R0,76(0,R4)         GET END OF CARD -4 ADDRESS
         SR    R0,R1               GET SEARCH LENGTH
         LPR   R0,R0               MAKE SURE ITS POSITIVE
SELALOOP EQU   *
         CLI   0(R1),C' '          END OF OPERANDS?
         BE    SELDECSN            YES. MAKE DECISIONS
         CLC   0(6,R1),=C',COPY='  COPY OF MODULE REQUESTED?
         BNE   *+12                NO.JUMP NEXT INSTRUCTION.
         OI    SWBYTE,COPYSW       YES. TURN ON COPY SWITCH
         B     LOOPAGN             CKECK NEXT BYTE ALONG.
         SPACE 1
         CLC   0(5,R1),=C',TEMP'   IS IT A TEMPORARY UPDATE?
         BNE   *+12                NO. JUMP NEXT INSTRUCTION.
         OI    SWBYTE,TEMPSW       YES. TURN ON TEMP SWITCH.
         B     LOOPAGN             CHECK NEXT BYTE ALONG
         SPACE 1
         CLC   0(6,R1),=C',VERS='  VERSION CODED?
         BNE   *+12                NO. JUMP NEXT INSTRUCTION.
         OI    SWBYTE,VERSSW       YES.TURN ON VERSION SWITCH.
         B     LOOPAGN             CHECK NEXT BYTE ALONG
         SPACE 1
         CLC   0(5,R1),=C',LEVL='  ALTERNATE FOR VERS CODED?
         BNE   *+12                NO. SKIP NSI
         OI    SWBYTE,VERSSW       YES. TURN ON VERSION SWITCH.
         B     LOOPAGN             CHECK NEXT BYTE ALONG
         SPACE 1
         CLC   0(8,R1),=C',REPALL '  DOES USER WISH TO REPLACE WHOLE?
         BNE   LOOPAGN             NO. CONTINUE SEARCHING CARD
         OI    SWBYTE,REPALLSW     YES. SET SWITCH
         MVI   0(R1),C' '          TERMINATE LIBRARIAN OPERANDS
         B     SELDECSN            BRANCH. THIS OPERAND MUST BE LAST
         SPACE 1                   ON CARD.
LOOPAGN  EQU   *
         LA    R1,1(0,R1)          MOVE ALONG ONE BYTE ON CARD
         BCT   R0,SELALOOP         GO THROUGH TESTS AGAIN.
SELDECSN EQU   *
         TM    SWBYTE,COPYSW       HAS A COPY BEEN REQUESTED
         BNO   TESTVERS            NO. TEST FOR TEMP OR VERS=
         B     STORADD             YES. STORE AND LOOK FOR -PGMR/-DESC
         EJECT
***********************************************************************
*        CHECK FOR PRESENSE OF TEMP(S) OR VERS ON -SEL CARD.          *
*                                                                     *
*        TEMP OR VERS= IS OPTIONAL UNDER THE FOLLOWING CONDITIONS:-   *
*              WHEN THIS RUN IS INDICATED AS SPECIAL.                 *
*              THIS -SEL IS TO REPLACE A COMPLETE MODULE.             *
*              WHEN -SEL WITH COPY= IS SPECIFIED.                     *
*        IN ALL OTHER CASES TEMP OR VERS= MUST BE SUPPLIED.           *
*                                                                     *
***********************************************************************
TESTVERS EQU   *
         TM    SWBYTE,GPOSW        SPECIAL RUN?
         BO    RETURN              YES. RETURN TO LIBRARIAN.
         TM    SWBYTE,REPALLSW     REPLACING WHOLE MODULE?
         BO    RETURN              YES. RETURN TO LIBRARIAN.
*        THERE IS NO TEST FOR -SEL/COPY= SINCE THIS ROUTINE IS BYPASSED
         TM    SWBYTE,VORT         TEMP OR VERS SPECIFIED?
         BC    5,RETURN            YES. RETURN TO LIBRARIAN.
         MVC   50(30,R4),MSG2      NO. MOVE MESSAGE FOR USER.
         SPACE 1
***********************************************************************
*        GENERAL ERROR ROUTINE TO INVALIDATE MODULE CONTROL CARDS     *
***********************************************************************
ERROR    EQU   *
         MVI   7(R4),C','          PUT COMMA IN COL8 OF CONTROL CARD
         MVI   8(R4),C','          AND IN COL9 OF CONTROL CARD
         B     RETURN
         EJECT
***********************************************************************
*        STORE -ADD OR -SEL/COPY= PREPARATORY TO CHECKING FOR THE     *
*        PRESENCE OF -PGMR AND DESC CARDS.                            *
***********************************************************************
STORADD  EQU   *    STORE -ADD CARD AND LOOK FOR -PGMR & -DESC CARDS
*
*        BEFORE STORING, CHECK FOR COMPRESSED INPUT FROM A -COPY
*        OPERATION. THIS ALWAYS HAS A -ADD HEADER CARD.
*        IF FOUND, DONT'T STORE, BUT RETURN TO LIBRARIAN.
*
         CLI   79(R4),X'FF'        SPECIAL ADD FROM -COPY?
         BE    RETURN              YES. RETURN TO LIBRARYN
         MVC   REC1,0(R4)          STORE SEL CARD
         MVC   BRANCH,=A(FOUND)    SET BRANCH FOR NEXT RECORD
         B     DELETE              DELETE -SEL CARD
         SPACE 1
***********************************************************************
*        ENTRY POINT WHEN -ADD OR -SEL/COPY CARD HAS BEEN DETECTED.   *
*        STORES AND CHECKS THAT NEXT TWO CARDS ARE -PGMR AND -DESC.   *
***********************************************************************
FOUND    EQU   *
         CLC   1(4,R4),=C'ADD '    NEXT CARD AN ADD A CARD
         BNE   *+8                 NO. SKIP NEXT INSTRUCTION.
         OI    SWBYTE,NXTFNDSW     INDICATE CARD IS ADD OR SEL
         CLC   1(4,R4),=C'SEL '    NEXT CARD A SEL CARD?
         BNE   *+8                 NO. SKIP NEXT INSTRUCTION.
         OI    SWBYTE,NXTFNDSW     INDICATE CARD IS ADD OR SEL
         CLC   0(6,R4),=C'-PGMR '  PGMR SUPPLIED?
         BNE   *+8                 NO. JUMP NEXT INSTN.
         OI    SWBYTE,PGMRSW       YES. INDICATE IT
         CLC   0(6,R4),=C'-DESC '  DESC SUPPLIED?
         BNE   *+8                 NO. JUMP NEXT INSTRUCTION
         OI    SWBYTE,DESCSW       YES. INDICATE IT.
         CLC   REC2,REC2-1         IS RECORD2 OCCUPIED?
         BNE   STOR3               YES. STORE IN AREA 3
         MVC   REC2,0(R4)          NO. STORE RECORD 2
         TM    SWBYTE,NXTFNDSW     RECORD JUST STORED ADD OR SEL?
         BNO   DELETE              NO. DELETE RECORD FROM I/P.
         B     INVALID             YES. INVALIDATE REC1.
STOR3    EQU   *
         MVC   REC3,0(R4)          STORE RECORD 3.
         TM    SWBYTE,NXTFNDSW     IS THIS REC AN ADD OR SEL.
         BO    INVALID             YES. INVALIDATE REC1
         TM    SWBYTE,PGRNDESC     BOTH PGMR & DESC SUPPLIED?
         BO    VALID               YES. MOVE RECORDS BACK TO LIBRN.
INVALID  EQU   *
         MVI   REC1+7,C','         NO. INVALIDATE -ADD SEL/COPY CARD.
         MVI   REC1+8,C','         AND IN NEXT COLLUMN FOR GOOD MEASURE
         MVC   REC1+50(30),MSG3    TELL USER OF REQUIRMENTS.
         B     VALID               RETURN CARDS TO USER
         EJECT
***********************************************************************
*        ENTRY POINTS VALID AND VALID1                                *
*        RTN. TO PASS STORED RECORDS BACK TO LIBRARIAN                *
***********************************************************************
VALID    MVC   0(80,R4),REC1       MOVE RECORD BACK TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   BRANCH,=A(VALID1)   SET BRANCH ADDR FOR NEXT RECORD
         MVC   REC1,REC1-1         SET STORAGE AREA TO BLANKS
         B     RETURN              RETURN TO LIBRARIAN
VALID1   CLC   REC2,REC2-1         WAS PGMR RECORD PASSED ALREADY
         BE    VALID2              YES--PASS HST RECORD TO LIBR.
         MVC   0(80,R4),REC2       MOVE PGMR RECORD TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   REC2,REC2-1         SET STORAGE AREA TO BLANKS
         CLC   REC3,REC3-1         IS THERE A HST RECORD TO BE PASSED
         BE    VALID3              NO--SET RETURN CODE TO REPLACE
         B     RETURN              RETURN TO LIBRARIAN
VALID2   MVC   0(80,R4),REC3       MOVE HST RECORD TO LIBRARIAN
VALID3   MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         MVC   REC3,REC3-1         SET STORAGE AREA TO BLANKS
         MVC   BRANCH,=A(START1)   SET BRANCH ADDR FOR NEXT RECORD
         TM    SWBYTE,NXTFNDSW     THIS CARD TO BE RE-CYCLED THRU EXIT?
         BO    START1              YES. GO TO BEGINING AGAIN.
         B     RETURN              RETURN TO LIBRARIAN
         EJECT
***********************************************************************
*        COMMON ROUTINE TO SET RETURN CODES AND RETURN TO LIBRARIAN.  *
***********************************************************************
         SPACE 1
DELETE   MVC   0(2,R5),=H'12'      SET DELETE RETURN CODE
         B     RETURN              RETURN TO LIBRARIAN
NORET    MVC   0(2,R5),=H'0'       SET DO-NOT-RETURN CODE
RETURN   L     R13,4(R13)          RESET REGISTER SAVE AREA POINTER
         RETURN (14,12)            RETURN TO LIBRARIAN
         EJECT
***********************************************************************
*        CONTSTANTS AND EQUATES.                                      *
***********************************************************************
         LTORG
COMMA    DC    107X'00'
         DC    001X'FF'            COMMA
         DC    148X'00'
MSG1     DC    CL30'*****PUNCH RESTRICTED. SEE TSG'
MSG2     DC    CL30'*****TEMP(S) / VERS= MANDATORY'
MSG3     DC    CL30'ADD/COPY REQUIRES DESC && PGMR'
COPYSW   EQU   128
TEMPSW   EQU   64
VERSSW   EQU   32
REPALLSW EQU   16
PGMRSW   EQU   8
DESCSW   EQU   4
NXTFNDSW EQU   2
GPOSW    EQU   1
PGRNDESC       EQU                 PGMRSW+DESCSW
VORT     EQU   TEMPSW+VERSSW
         EJECT
***********************************************************************
*        MASK FOR WORK AREA AQUIRED TO MAKE THE PROGRAM RE-ENTRANT    *
***********************************************************************
DUMMY    DSECT
SAVEREG  DS    9D                  REGISTER SAVE AREA
BRANCH   DS    F                   BRANCH ADDRESS
SWBYTE   DS    XL1
BLANK    DS    C                   BLANK POSITION
REC1     DS    CL80                -SEL  CNTRL STMT STORAGE AREA
BLANK2   DS    C
REC2     DS    CL80                -PGMR OR -DESC STORAGE AREA 1.
BLANK3   DS    C
REC3     DS    CL80                -PGMR OR -DESC STORAGE AREA 2.
DUMMYL   EQU   *-DUMMY             LENGTH OF DSECT
         END
