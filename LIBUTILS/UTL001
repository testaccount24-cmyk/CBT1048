         TITLE ' DATA LISTING PROGRAM    - BY C.G.HALL'
*
***********************************************************************
*              PROGRAM WRITTEN BY C.G.HALL.  MISD - LONDON.           *
*                       NOVEMBER 1967.                                *
***********************************************************************
*
*           MODIFIED BY C.G.HALL TO PRINT IN HEXADECIMAL NOTATION
*              OR  HEXADECIMAL AND CHARACTER NOTATION     JULY 1968.
*                              ---
*
*                   INCORPORATING J.L.PYLE,S  - DATERTN  --
*
STARTA   START 0
         PGMIN USING=(13,12)
         B     BEGIN
*
*                     DATA CONTROL BLOCKS.
*
INPUT    DCB   DSORG=PS,                                               X
               MACRF=GM,                                               X
               DDNAME=LISTDATA,                                        X
               RECFM=FB,                                               X
               EODAD=ENDOFJOB
*
*
OUTPUT   DCB   DSORG=PS,                                               X
               MACRF=PM,                                               X
               DDNAME=SYSPRINT,                                        X
               RECFM=FM,                                               X
               LRECL=133,                                              X
               BLKSIZE=133
PRINT    DS    CL133          PRINT AREA.
WORD     DC    F'0'
CC       DC    X'09'               ASSUMED 1 LINE FEED.
H1       DC    C'         1         2         3         4         5'
         DC    C'         6         7         8         9        10'
         DC    C'        11        12        13  '
H2       DC    13C'1234567890'
         DC    C'12'
H3       DC    C'RECORD LENGTH = '
EDITWD1  DC    X'402020202020'
         DC    C'   BLOCKING FACTOR = '
EDITWD2  DC    X'402020202020'
BEGIN    L     8,0(0,1)        LOAD ADDRESS OF PARAMETER LIST TO R8.
         OPEN  (INPUT)                 OPEN INPUT FILE.
         LH    7,0(0,8)        LOAD PARAMETER CHARACTER COUNT TO R7.
         LTR   7,7             TEST IF CHARACTER COUNT IS ZERO.
         BZ    PROCESS         CHARACTER COUNT IS ZERO.
         LA    5,2(0,8)        SET ADDRESS OF BEGINNING OF PARAMETERS.
         CLI   0(5),C','       TEST FOR 1ST DELIMITER CHARACTER.
         BNE   FIRSTPAR
AX       S     7,=F'1'         DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         LA    5,1(5)          INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 2ND DELIMITER CHARACTER.
         BNE   SECPAR
BX       S     7,=F'1'         DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         LA    5,1(5)          INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 3RD DELIMITER CHARACTER.
         BNE   THIRDPAR
CX       S     7,=F'1'         DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO,NO MORE PARAMETERS.
         LA    5,1(5)          INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 4TH DELIMITER CHARACTER
         BNE   FOURTPAR
DX       S     7,=F'1'        DECREMENT CHARACTER COUNT.
         BZ    PROCESS        IF ZERO, NO MORE PARAMETERS.
         LA    5,1(5)         INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','      TEST FOR 5TH DELIMITER CHARACTER.
         BNE   FIFTHPAR
EX       B     PROCESS   ---- NO 6TH PARAMETER YET.  ----
*---------------------------------------------------------------------
FIRSTPAR CLI   0(5),C'X'      TEST FOR HEXADECIMAL REQUEST.
         BNE   F1
         OI    NOP3+1,X'F0'
         OI    NOP5+1,X'F0'
         CLI   1(5),C'X'
         BNE   F3
         OI    NOP7+1,X'F0'
F0       S     7,=F'1'
         BZ    PROCESS
         LA    5,1(5)
         B     F3
F1       CLI   0(5),C'D'      TEST FOR DUMP REQUEST.
         BNE   F2
         OI    NOP4+1,X'F0'
         OI    NOP6+1,X'F0'
         CLI   1(5),C'D'
         BNE   F3
         OI    NOP8+1,X'F0'
         B     F0
F2       PACK  SPACE,0(1,5)   PACK LINE FEED VALUE.
F3       S     7,=F'1'        DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         LA    5,1(5)          INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 1ST DELIMITER CHARACTER.
         BE    AX
         B     ERROP           INCORRECT PARAMETERS, SO ABANDON.
*
SECPAR   L     4,=F'2'         MAX. CHARS IN 2ND PARAMETER = 2
         BAL   14,SCANPAR
         EX    8,PACK2         PACH LINE COUNT PARAMETER TO STORE.
         OI    NOP9+1,X'F0'
         OI    NOP10+1,X'F0'
         A     8,=F'1'         REINSTATE TRUE LENGTH OF PARAMETER.
         SR    7,8             DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         AR    5,8             INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 2ND DELIMITER CHARACTER.
         BE    BX
         B     ERROP           INCORRECT PARAMETERS, SO ABANDON.
PACK2    PACK  LINES,0(0,5)
*
THIRDPAR L     4,=F'5'         MAX. CHARS IN 3RD PARAMETER = 5
         BAL   14,SCANPAR
         EX    8,PACK3         PACK 1ST RELATIVE RCD NUMBER TO STORE.
         A     8,=F'1'         REINSTATE TRUE LENGTH OF PARAMETER.
         SR    7,8             DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         AR    5,8             INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 3RD DELIMITER CHARACTER.
         BE    CX
         B     ERROP           INCORRECT PARAMETERS, SO ABANDON.
PACK3    PACK  FIRSTREC,0(0,5)
*
FOURTPAR L     4,=F'5'         MAX. CHARS IN 4TH PARAMETER = 5
         BAL   14,SCANPAR
         EX    8,PACK4         PACK RECORD COUNT TO STORE.
         A     8,=F'1'         REINSTATE TRUE LENGTH OF PARAMETER.
         SR    7,8             DECREMENT CHARACTER COUNT.
         BZ    PROCESS         IF ZERO, NO MORE PARAMETERS.
         AR    5,8             INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','       TEST FOR 4TH DELIMITER CHARACTER.
         BE    DX
         B     ERROP          INCORRECT PARAMETER SO ABANDON.
PACK4    PACK  PRINTREC,0(0,5)
*
FIFTHPAR CLI   0(5),X'40'
         BE    *+12
         OI    NOP1+1,X'F0'   SET BRANCHES TO OMIT HEADINGS.
         OI    NOP2+1,X'F0'
         S     7,=F'1'        DECREMENT CHARACTER COUNT.
         BZ    PROCESS        IF ZERO, NO MORE PARAMETERS.
         LA    5,1(5)         INCREMENT PARAMETER ADDRESS COUNT.
         CLI   0(5),C','      TEST FOR 5TH DELIMITER CHARACTER.
         BE    EX
         B     ERROP          INCORRECT PARAMETERS, SO ABANDON.
*
ERROP    ABEND 999,DUMP
SCANPAR  SR    8,8             SUBROUTINE TO CALCULATE LENGTHS OF
         LR    6,7                  INDIVIDUAL PARAMETERS, AND TO PUT
         LR    9,5                    THIS LENGTH INTO REGISTER 8.
ZZ       CLI   0(9),C','                     .        .
         BE    SUBTR1                        .        .
         LA    8,1(8)                        .        .
         LA    9,1(9)                        .        .
         S     6,=F'1'                       .        .
         BZ    SUBTR1                        .        .
         S     4,=F'1'                       .        .
         BZ    SUBTR1                        .        .
         B     ZZ                            .        .
SUBTR1   S     8,=F'1'                       .        .
         BR    14                            .        .
SPACE    DC    P'1'            ASSUMED VALUE OF SPACE CONSTANT.
LINES    DC    P'55'           ASSUMED VALUE OF LINE COUNT.
FIRSTREC DC    P'00001'        ASSUMED FIRST RECORD PROCESSED.
PRINTREC DC    P'00000'        INDICATES ALL RECORDS TO BE PRINTED.
RECOUNT  DC    P'00000'        RECORD COUNT.
COUNTER  DC    P'00'           LINE COUNT.
PAGE     DC    P'001'          INITIAL PAGE NUMBER.
LRECPACK DC    P'00000'        RECORD LENGTH - PACKED.
BLKSPACK DC    P'00000'        BLOCKING FACTOR - PACKED.
         DS    0D
CVD      DC    2F'0'
RCCONT   DC    P'000000'       RECORDS PRINTED COUNTER.
H4       DC    C'   TOTAL RECORDS PRINTED = '
EDITWD3  DC    X'4020202020202020'
HXWK1    DC    CL48' '
HXWK2    DC    CL48' '
TRAN1    DC    C'000000000000000011111111111111112222222222222222'
         DC    C'333333333333333344444444444444445555555555555555'
         DC    C'666666666666666677777777777777778888888888888888'
         DC    C'9999999999999999AAAAAAAAAAAAAAAABBBBBBBBBBBBBBBB'
         DC    C'CCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEE'
         DC    C'FFFFFFFFFFFFFFFF'
TRAN2    DC    C'0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF'
         DC    C'0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF'
         DC    C'0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF'
         DC    C'0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF'
         DC    C'0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF'
         DC    C'0123456789ABCDEF'
CHECK    DC    P'0'
WDCHK    DC    PL2'0'
ODDCHK   DC    F'0'
XDWK1    EQU   HXWK1
XDWK2    EQU   HXWK2
TRAN3    DC    C'................................................'
         DC    C'................ ...........<(+|&&.........!รณ*);^'
         DC    C'-/.........,%_>?..........:#@''="................'
         DC    C'................................................'
         DC    C'.ABCDEFGHI.......JKLMNOPQR........STUVWXYZ......'
         DC    C'0123456789......'
         DCBD  DSORG=(LR),DEVD=(PR)
STARTA   CSECT
         USING IHADCB,3        DEFINE BASE REGISTER FOR DSECT OF DCB.
PROCESS  LA    3,INPUT         LOAD BASE REGISTER FOR DSECT OF DCB.
         LH    4,IHADCB+62
         LH    6,DCBLRECL
         LA    R0,200(6)           R0 = LRECL + 200
         GETMAIN R,LV=(0)          NEW INPUT AREA (LRECL+200)
         ST    1,INPUTADR          STORE INPUT ADDRESS
         SRDA  4,32
         DR    4,6
         CVD   5,CVD
         MVC   BLKSPACK(3),CVD+5        BLOCKING FACTOR - PACKED.
         CVD   6,CVD
         MVC   LRECPACK(3),CVD+5        RECORD LENGTH - PACKED.
         ED    EDITWD1,LRECPACK
         ED    EDITWD2,BLKSPACK
         LH    4,DCBLRECL      LOAD INPUT RECORD LENGTH INTO REGISTER 4
         LA    7,PRINT+1
NOP3     NOP   HEX
NOP4     NOP   HEXDEC
         C     4,=F'132'       CHECK IF RECORD LENGTH TOO LARGE FOR
*        -----                                                 PRINTER.
         BNH   OK              IF NOT TOO LARGE, GO TO OK.
         LR    5,4
         SR    4,4
         D     4,=F'100'       REG 5 CONTAINS NUMBER OF 100 CHARACTER
*                                              PRINT LINES PER RECORD.
*                              REG 4 CONTAINS REMAINING LENGTH TO BE
*                                                              PRINTED.
         MVI   NI1+1,X'63'
         MVI   NI2+1,X'63'
         MVI   NI3+1,X'62'
         MVI   NI4+1,X'62'
         MVI   NI5+1,X'62'
         B     MISSOK
OK       OI    ALL+1,X'F0'
         S     4,=F'1'
         ST    4,WORD
         MVC   NI1+1(1),WORD+3
         MVC   NI2+1(1),WORD+3
         S     4,=F'1'
         ST    4,WORD
         MVC   NI3+1(1),WORD+3
         MVC   NI4+1(1),WORD+3
         MVC   NI5+1(1),WORD+3
         A     4,=F'2'
MISSOK   LTR   4,4            TEST IF ODD LENGTH IS ZERO.
         BZ    *+8
         S     4,=F'1'
OK2      BAL   9,DTERTN
         LA    6,JPDATE
         B     CONTINUE
HEADER   UNPK  PRINT+128(3),PAGE        INSERT PAGE NUMBER.
         MVZ   PRINT+130(1),=X'F1'      SUPPRESS ZONE ON PAGE NUMBER.
         AP    PAGE,=P'1'               INCREMENT PAGE NUMBER.
         MVC   PRINT+123(4),=C'PAGE'    INSERT PAGE CONSTANT.
         MVC   PRINT+101(9),0(6)        INSERT ACTUAL DATE.
NOP1     NOP   *+16
         MVC   PRINT+1(49),H3
         MVC   PRINT+60(33),=C'D A T A   L I S T   U T I L I T Y'
         MVI   PRINT,X'8B'         IMMEDIATE SKIP TO 1.
         PUT   OUTPUT,PRINT            HEADER LINE 1.
         MVI   PRINT,X'11'         AFTER SPACE 2.
         PUT   OUTPUT,PRINT
         BAL   14,CLEAR
NOP2     NOP   CLRCOUNT
NI1      MVC   PRINT+1(132),H1
         MVI   PRINT,X'09'         AFTER SPACE 1.
         PUT   OUTPUT,PRINT             HEADER LINE 2.
         BAL   14,CLEAR
NI2      MVC   PRINT+1(132),H2
         MVI   PRINT,X'09'         AFTER SPACE 1.
         PUT   OUTPUT,PRINT             HEADER LINE 3.
         MVI   PRINT+1,C'-'
NI3      MVC   PRINT+2(131),PRINT+1
         MVC   PRINT(1),CC
         PUT   OUTPUT,PRINT             PRINT DASHES.
CLRCOUNT MVC   PRINT(1),CC
         SP    COUNTER,COUNTER          CLEAR LINE COUNT.
         BR    9                        BRANCH TO RETURN ADDRESS.
CLEAR    MVI   PRINT+1,X'40'
         MVC   PRINT+2(131),PRINT+1     CLEAR PRINT WORKAREA.
         BR    14                       BRANCH TO RETURN ADDRESS.
CONTINUE LA    3,OUTPUT
         CP    SPACE,=X'2F'
         BE    IS2
         CP    SPACE,=X'3F'
         BNE   IS1
         MVI   CC,X'19'            INSERT 3 SPACES INTO PRINTER CONTROL
         B     IS1
IS2      MVI   CC,X'11'            INSERT 2 SPACES INTO PRINTER CONTROL
IS1      OPEN  (OUTPUT,(OUTPUT))       OPEN OUTPUT FILE.
         BAL   14,CLEAR               BRANCH TO CLEAR ROUTINE.
         BAL   9,HEADER               BRANCH TO HEADER ROUTINE.
         BAL   14,CLEAR
         CP    PRINTREC,=P'00000'   ARE ALL RECORDS TO BE PRINTED.
         BNE   *+8
         OI    BYPASS+1,X'F0'     SET BYPASS SWITCH BRANCH.
         CP    FIRSTREC,=P'00001'    FIRST RCD TO BE PROCESSED.
         BE    READ
         L     2,INPUTADR          SOMEWHERE TO PUT RECORD *JEA*
SKIPREAD GET   INPUT,(2)           READ AND IGNORE RECORD  *JEA*
         AP    RECOUNT,=P'1'
         CP    RECOUNT,FIRSTREC
         BE    *+8
         B     SKIPREAD
         SP    RECOUNT,RECOUNT
         B     STOR1
READ     EQU   *
         L     2,INPUTADR          GET NEW INPUT ADDRESS
         GET   INPUT,0(2)               GET INPUT DATA.
STOR1    AP    RCCONT,=P'1'           INCREMENT RECORD COUNT.
BYPASS   NOP   ALL
         AP    RECOUNT,=P'1'
         CP    RECOUNT,PRINTREC
         BNH   ALL
         SP    RCCONT,=P'1'
         B     ENDOFJOB
ALL      NOP   PRINTALL
NOP5     NOP   ALLHEX
NOP6     NOP   ALLHXD
         LR    8,5
MOVE1    MVC   0(100,7),0(2)          MOVE 100 CHARS. TO PRINT AREA.
         PUT   OUTPUT,PRINT           WRITE.
         BAL   14,CLEAR               BRANCH TO CLEAR ROUTINE
         AP    COUNTER,=P'1'          INCREMENT LINE COUNT.
         CP    COUNTER,LINES          TEST LINE COUNT.
         BNE   *+12
         BAL   9,HEADER               PAGE FULL - BRANCH TO HEADER RTN.
         BAL   14,CLEAR
         LA    2,100(2)               INCREMENT REGISTER 2 BY 100.
         BCT   8,MOVE1
         B     ANYMORE
MOVE2    MVC   0(0,7),0(2)
ANYMORE  LTR   4,4                 TEST IF ODD LENGTH TO BE PRINTED.
         BZ    READ                NO ODD LENGTH  GO TO READ NEXT RECD.
PRINTALL EX    4,MOVE2                MOVE DATA TO PRINT AREA.
DP       PUT   OUTPUT,PRINT             WRITE
         BAL   14,CLEAR
         AP    COUNTER,=P'1'          INCREMENT LINE COUNT.
         CP    COUNTER,LINES          TEST LINE COUNT.
         BNE   READ
         BAL   9,HEADER
         BAL   14,CLEAR
         B     READ                   BRANCH TO READ NEXT RECORD.
ENDOFJOB BAL   14,CLEAR
         MVI   PRINT+1,C'-'
NI4      MVC   PRINT+2(131),PRINT+1
         MVI   PRINT,X'09'
         PUT   OUTPUT,PRINT
         BAL   14,CLEAR
         ED    EDITWD3,RCCONT
         MVC   PRINT+1(35),H4
         PUT   OUTPUT,PRINT
         MVI   PRINT+1,C'-'
NI5      MVC   PRINT+2(131),PRINT+1
         MVI   PRINT,X'89'
         PUT   OUTPUT,PRINT
         CLOSE (INPUT,,OUTPUT)
        PGMOUT RC=0
HEX      OI    NOP1+1,X'F0'
         OI    NOP2+1,X'F0'
NOP9     NOP   *+10
         AP    LINES,=P'5'     INCREASE LINES PER PAGE TO 60.
         C     4,=F'48'       CHECK IF RECORD LENGTH TOO LGE FOR PRNTER
         BNH   OKHEX          IF NOT TOO LARGE, GO TO OKHEX.
         LR    5,4
         SR    4,4
         D     4,=F'48'       REG 5 CONTAINS NUMBER OF PRINT LINES
*                                                           PER RECORD.
*                             REG 4 CONTAINS ODD LENGTH TO BE PRINTED.
         B     OK2
OKHEX    OI    ALLHEX+1,X'F0'
         B     OK2
HEXDEC   OI    NOP1+1,X'F0'
         OI    NOP2+1,X'F0'
NOP10    NOP   *+10
         AP    LINES,=P'5'     INCREASE LINES PER PAGE TO 60.
         C     4,=F'32'
         BNH   OKHXD
         LR    5,4
         SR    4,4
         D     4,=F'32'
         B     OK2
OKHXD    OI    ALLHXD+1,X'F0'
         B     OK2
*
ALLHEX   NOP   XPRNTALL
         LR    8,5
YY       MVC   HXWK1(48),0(2)
         MVC   HXWK2(48),0(2)
         TR    HXWK1(48),TRAN1
         TR    HXWK2(48),TRAN2
         LR    11,7                LOAD ADDRESS OF PRINT AREA.
         LA    10,HXWK1
         LA    9,HXWK2
YA       MVC   0(1,11),0(10)
         MVC   1(1,11),0(9)
YAA      NOP   ODDITYA
YAB      AP    CHECK,=P'1'
         CP    CHECK,=P'4'
         BE    YC
YAC      LA    11,2(11)
YB       LA    10,1(10)
         LA    9,1(9)
         B     YA
YC       SP    CHECK,CHECK
         AP    WDCHK,=P'1'
YCB      CP    WDCHK,=P'12'
         BE    YD
NOP7     NOP   YAC
         LA    11,4(11)
         B     YB
YD       SP    WDCHK,WDCHK
         PUT   OUTPUT,PRINT
         BAL   14,CLEAR
         AP    COUNTER,=P'1'
         CP    COUNTER,LINES
         BL    *+12
         BAL   9,HEADER
         BAL   14,CLEAR
YDA      NOP   ODDITYB
         LA    2,48(2)
         BCT   8,YY
         LTR   4,4            TEST IF ODD LENGTH TO BE PRINTED.
         BZ    DP
XPRNTALL OI    YAA+1,X'F0'
         OI    YDA+1,X'F0'
         B     YY
ODDITYA  L     8,ODDCHK
         A     8,=F'1'
         CR    8,4
         BE    YE
         ST    8,ODDCHK
         B     YAB
YE       MVI   PRINT,X'11'
         AP    COUNTER,=P'1'
         CP    COUNTER,LINES
         BNE   YD
         BAL   9,HEADER
         BAL   14,CLEAR
         B     YD
ODDITYB  SP    CHECK,CHECK
         XI    YAA+1,X'F0'
         XI    YDA+1,X'F0'
         MVC   ODDCHK,=F'0'
         MVI   PRINT,X'09'
         B     READ
ALLHXD   NOP   XDPRTALL
         LR    8,5
YF       MVC   XDWK1(32),0(2)
         MVC   XDWK2(32),0(2)
         TR    XDWK1(32),TRAN1
         TR    XDWK2(32),TRAN2
         LR    11,7           LOAD ADDRESS OF PRINT AREA.
         LA    10,XDWK1
         LA    9,XDWK2
YG       MVC   0(1,11),0(10)
         MVC   1(1,11),0(9)
YGA      NOP   ODDITYC
YGB      AP    CHECK,=P'1'
         CP    CHECK,=P'4'
         BE    YI
YGC      LA    11,2(11)
YH       LA    10,1(10)
         LA    9,1(9)
         B     YG
YI       SP    CHECK,CHECK
         AP    WDCHK,=P'1'
         CP    WDCHK,=P'8'
         BE    YJ
NOP8     NOP   YGC
         LA    11,4(11)
         B     YH
YJ       SP    WDCHK,WDCHK
         MVC   XDWK1(32),0(2)
YJ0      TR    XDWK1(32),TRAN3
         MVC   PRINT+95(32),XDWK1
         MVI   PRINT+94,C'*'
         MVI   PRINT+127,C'*'
         PUT   OUTPUT,PRINT
         BAL   14,CLEAR
         AP    COUNTER,=P'1'
         CP    COUNTER,LINES
         BNE   *+12
         BAL   9,HEADER
         BAL   14,CLEAR
YJA      NOP   ODDITYD
         LA    2,32(2)
         BCT   8,YF
         LTR   4,4
         BZ    DP
XDPRTALL OI    YGA+1,X'F0'
         OI    YJA+1,X'F0'
         B     YF
ODDITYC  L     8,ODDCHK
         A     8,=F'1'
         CR    8,4
         BE    YJB
         ST    8,ODDCHK
         B     YGB
YJB      MVI   PRINT,X'11'
         AP    COUNTER,=P'1'
         CP    COUNTER,LINES
         BNE   *+12
         BAL   9,HEADER
         BAL   14,CLEAR
         S     4,=F'1'
         MVI   XDWK1,X'40'
         MVC   XDWK1+1(31),XDWK1
         LA    8,XDWK1
         EX    4,MOVE3
         A     4,=F'1'
         SP    WDCHK,WDCHK
         B     YJ0
MOVE3    MVC   0(0,8),0(2)
ODDITYD  SP    CHECK,CHECK
         XI    YGA+1,X'F0'
         XI    YJA+1,X'F0'
         MVC   ODDCHK,=F'0'
         MVI   PRINT,X'09'
         B     READ
         ISEQ  73,80
DTERTN   STM   3,9,SAVEAREA
         TIME
         LR    3,1                      LOAD DATE TO
         ST    3,FULL1                  REG 3 & SAVE.     05
         SRL   3,8                      CLEAR DAYS
         IC    3,=X'FF'                 OUT AND
         SRL   3,4                      SIGN YEAR.
         ST    3,FULL2
         DP    FULL2(4),=PL1'4'
         CP    FULL2+3(1),=PL1'0'       TEST FOR
         BE    LOADLEAP                 LEAPYEAR.
         LA    4,MONTH
         LA    6,MONTH+26
         B     NEXT
ERROR    MVC   JPDATE(9),=C'999999999'  LOAD ERROR-DATE TO O/P AREA.
         B     MOVE
LOADLEAP LA    4,MONTHL
         LA    6,MONTHL+26
NEXT     ST    3,FULL2
         UNPK  JPDATE+7(2),FULL2+2(2)   YEAR IN.
         LA    5,NAME
         A     4,=F'2'
COMP     CP    FULL1+2(2),0(2,4)         TEST MONTH.
         BNH   INSERT
         A     5,=F'3'
         A     4,=F'2'
         CR    4,6
         BH    ERROR
         B     COMP
INSERT   MVC   JPDATE+3(3),0(5)
         S     4,=F'2'
         SP    FULL1+2(2),0(2,4)
         UNPK  JPDATE(2),FULL1+2(2)
         MVZ   JPDATE+1(1),=X'F0'
MOVE     LM    3,9,SAVEAREA
         BR    9          RETURN.
SAVEAREA DS    7F
MONTH    DC    PL2'0'
         DC    PL2'31'
         DC    PL2'59'       FEBRUARY=28.
         DC    PL2'90'
         DC    PL2'120'
         DC    PL2'151'
         DC    PL2'181'
         DC    PL2'212'
         DC    PL2'243'
         DC    PL2'273'
         DC    PL2'304'
         DC    PL2'334'
         DC    PL2'365'
MONTHL   DC    PL2'0'
         DC    PL2'31'
         DC    PL2'60'       FEBRUARY=29(LEAPYEAR).
         DC    PL2'91'
         DC    PL2'121'
         DC    PL2'152'
         DC    PL2'182'
         DC    PL2'213'
         DC    PL2'244'
         DC    PL2'274'
         DC    PL2'305'
         DC    PL2'335'
         DC    PL2'366'
NAME     DC    CL3'JAN'
         DC    CL3'FEB'
         DC    CL3'MAR'
         DC    CL3'APR'
         DC    CL3'MAY'
         DC    CL3'JUN'
         DC    CL3'JUL'
         DC    CL3'AUG'
         DC    CL3'SEP'
         DC    CL3'OCT'
         DC    CL3'NOV'
         DC    CL3'DEC'
FULL1    DS    F
FULL2    DS    F
INPUTADR DS    F                   NEW INPUT RECORD ADDRESS
ADATE    DC    A(JPDATE)                ADCON OF JPDATE.
JPDATE   DC    CL9'         '           OUTPUT DATE FIELD.
         END
