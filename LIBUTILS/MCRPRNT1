PRTO     TITLE 'PRINT ROUTINE TO SERVICE PRINTOUT MACRO.    A035     '
*        CODED BY JOHN R. EHRMAN (SLAC)  26 MAY, 1967
*
         PRINT DATA
         SPACE   4
MCRPRNT1 CSECT               CSECT = MCRPRNT1 FOR RELEASE 16
         ENTRY MCRPRNTO                ENTRY TO PRINT DATA
         ENTRY MCRPRNTU                ENTRY TO DEFINE UNIT NUMBER
*
*        THIS ROUTINE SERVICES THE CALLING SEQUENCE GENERATED BY THE
*        PRINTOUT MACRO-INSTRUCTION.  IT PRINTS THE VALUE AND NAME OF A
*        A LIST OF ARGUMENTS ON FORTRAN LOGICAL UNIT NUMBER 6.  THIS
*        UNIT NUMBER MAY BE CHANGED BY A CALL TO MCRPRNTU, WHICH IS A
*        STANDARD OS/360 SUBROUTINE WITH ONE ARGUMENT, THE INTEGER UNIT
*        NUMBER WHICH IS TO REPLACE THE DEFAULT VALUE OF 6 THAT IS AS-
*        SEMBLED INTO THE ROUTINE.
*
*        CALLING SEQUENCE GENERATED BY MACRO...
*
*        CNOP  2,4
*        STM   14,15,*+10
*        L     15,*+18
*        BALR  14,15
*        DC    2F'0'
*        DC    F'NUMBER OF ITEMS TO PRINT'
*
*        DC    X'*0',VL3(MCRPRNTO)     WHERE *=0 IF NO NAME FIELD IS
*              USED ON THE PRINTOUT INSTRUCTION, AND *=8 IF A NAME IS
*              PROVIDED (THAT IS, &LOC IS NOT A NULL CHARACTER STRING).
*              IN THE LATTER CASE, AN EXTRA 8 BYTES ARE GENERATED...
*        DC    CL8'NAME OF PRINTOUT INSTRUCTION'
*
*   EACH ITEM TO BE PRINTED GENERATES A BLOCK OF 3 WORDS,
*        DC    CL8'NAME OF ITEM'
*        DC    CL1'TYPE OF ITEM'
*        DC    AL3(ADDRESS OF ITEM)
*   AND IF THE ITEM IS OF VARIABLE LENGTH, 1 EXTRA WORD...
*        DC    F'LENGTH OF ITEM'
*        ...AND SO ON FOR EACH ITEM
*
*        LM    14,15,0(14)     RETURN COMES HERE
*
         SPACE   4
IMPLIED  EQU   0
EXPLICIT EQU   255
OUTUNIT  EQU   6                       FORTRAN PRINTER UNIT
LINELG   EQU   120                     MAX NO. OF CHARS ON RH OF LINE
EXITCODE EQU   3
         EJECT
         USING *,15
MCRPRNTO STM   0,13,RSAVE              SAVE R0-R13
         ST    14,CALLPT               SAVE ADDRESS FOR LM ON RETURN
         MVC   RSAVE+56(8),0(14)       SAVE R14-R15
         L     11,8(0,14)              GET NUMBER OF ITEMS IN R11
         LA    12,16(0,14)             R12 POINTS TO 1ST BLOCK OR NAME
         LR    13,15                   R13 IS BASE
         USING MCRPRNTO,13
         DROP  15
         STD   0,FPSAVE                SAVE FP REGISTERS
         STD   2,FPSAVE+8
         STD   4,FPSAVE+16
         STD   6,FPSAVE+24
         LH    1,CALLCT                BUMP CALL COUNT
         LA    1,1(0,1)
         STH   1,CALLCT
         LA    0,6(0,14)               SET UP CALLING ADDRESS
         SH    0,H16                   DECREASE R14 BY 10 FOR LOCATION
         ST    0,OUTLIN                STORE HEX ADDRESS FOR UNPACKING
         UNPK  OUTLIN(9),OUTLIN(5)     SPREAD TO HEX
         TR    OUTLIN(8),EBCDIC-C'0'   TRANSLATE TO EBCDIC
         MVI   OUTLIN+8,C' '           BLANK A SPACE FOR NAME IF ANY
         MVC   OUTLIN+9(19),OUTLIN+8
         TM    12(14),X'80'            SEE IF NAME FLAG IS SET
         BC    8,PRTHED                JUMP IF NONE
         MVC   OUTLIN+8(L'NAMMSG),NAMMSG  MOVE NAME HEADER
         MVC   OUTLIN+16(8),0(12)      MOVE IN THE MACRO NAME FIELD
         MVC   OUTLIN+24(L'ENDQUOT),ENDQUOT  MOVE IN FINAL QUOTE AFTER
         LA    12,8(0,12)              MOVE BLOCK POINTER PAST NAME
         CNOP  0,4
PRTHED   L     15,VIBCOM
         BAL   14,4(0,15)
         DC    X'01',AL3(UNITWD)       POINTER TO UNIT NUMBER
         DC    A(HEADER)
         BAL   14,8(0,15)              PRINT THE GREETING
         DC    X'0200',S(CALLCT)       NOTE HALFWORD INTEGER OPERAND
         BAL   14,12(0,15)             PRINT LOCATION
         DC    A(OUTLIN)
         DC    X'04000007'             7 FULL WORDS
         BAL   14,16(0,15)
         LTR   11,11                   CHECK FOR VACUOUS LIST
         BC    8,RETURN                EXIT IF ONLY LOCATION WAS WANTED
OUTER    MVC   NAME,0(12)              MOVE NAME IN
         CLC   NAME,ASTERISK           SEE IF NAME IS A SINGLE ASTERISK
         BC    7,NOTLAST               JUMP IF NOT TERMINATION
         LA    9,TMESG                 POINTER TO TERMINATION MESSAGE
         LA    10,L'TMESG              LENGTH OF THE SAME
         MVI   PUNTSW,1                INDICATE THE TERMINATION
         B     CHAR1                   AND GO PRINT THE FINAL LINE
NOTLAST  MVC   TYPE,8(12)              GET TYPE BYTE
         LM    9,10,8(12)              GET ITEM ADDRESS AND LENGTH
         CLI   TYPE,C'A'               CHECK FOR ILLEGAL TYPE
         BC    4,ILLEG
         TR    TYPE,TRTAB-C'A'         TRANSLATE TYPE BYTE
         SR    1,1
         IC    1,TYPE
         B     BRTAB(1)                SWITCH ACCORDING TO TYPE
*
BRTAB    B     ILLEG                   0  ILLEGAL
         B     HEX2                    4  S,Y
         B     HEX4                    8  A,Q,T,V,  IMPLIED LENGTH OF 4
         B     HEX8                    12 CCW INSTRUCTION W
         B     HEXN                    16 B,I,P,R,X,(G) EXPLICIT LENGTH
         B     CHAR                    20 C,Z
         B     DCONV                   24 D
         B     ECONV                   28 E
         B     KCONV                   32 K
         B     HCONV                   36 H
         B     GCONV                   40 G
         B     FCONV                   44 F
         B     DESCR                   48 M,N,O,U,J
*
DESCR    MVI   SWITCH,IMPLIED          SET TO BUMP BY 12
         CLI   8(12),C'U'              CHECK IF UNDEFINED
         BC    8,DESCRU                JUMP IF YES
         CLI   8(12),C'N'
         BC    4,DESCRM                JUMP IF MACRO NAME OR C/DSECT
         BC    2,IMPLP                 IGNORE OMITTED TERMS
         LA    9,0(0,9)                HERE IF SELF-DEFINING, DROP BYTE
         CH    9,H16                   CHECK SIZE OF NUMBER
         BC    4,OKREG                 JUMP IF LEGAL REGISTER
         SH    9,H16                   SEE IF IT CAN BE A F.P. REGISTER
         CH    9,H4                    16-19 MEANS FPR0-6
         BC    4,FPREG                 YEP, GOT ONE IF JUMP IS TAKEN
         LA    9,NMESG                 SET UP TO ENTER CHARACTER BLOCK
         LA    10,L'NMESG
         B     CHAR1
DESCRM   LA    9,MMESG
         LA    10,L'MMESG
         CLI   8(12),C'M'              SEE IF IT'S REALLY A MACRO NAME
         BC    8,CHAR1                 JUMP IF YES
         LA    9,JMESG                 OTHERWISE IT'S A C/DSECT NAME
         LA    10,L'JMESG
         B     CHAR1
DESCRU   LA    9,UMESG
         LA    10,L'UMESG
         B     CHAR1
OKREG    SLL   9,2
         LA    9,RSAVE(9)              POINT TO GR SAVE LOCATION
         MVC   NAME+6(2),NAME          SET UP GP REGISTER NAME
         MVC   NAME(5),GPRCH           USING THE NAME PROVIDED
         B     HEX4
*
FPREG    SLL   9,1                     SET UP FOR CHARACTER
         IC    10,EBCDIC(9)            PICK UP THE CHARACTER VALUE
         MVC   NAME(5),FPRCH           MOVE IN 'FPREG'
         STC   10,NAME+6               ADD THE REGISTER NUMBER
         SLL   9,2                     POINT TO FPR SAVE AREA
         LA    9,FPSAVE(9)             GENERATE PROPER ADDRESS
         B     DCONV                   AND PRINT IN DOUBLE PRECISION
*
CHAR     MVI   SWITCH,EXPLICIT         SET TO BUMP BY 16
CHAR1    MVI   OUTLIN,C' '             PUT BLANKS IN BUFFER
         MVC   OUTLIN+1(LINELG-1),OUTLIN
         CH    10,HLINELG              CHECK FOR EXCESSIVE LENGTH
         BC    12,CHARA
         LA    10,LINELG               SORRY, ONLY 1 LINE AT A TIME NOW
CHARA    BCTR  10,0                    BUMP DOWN BY 1
         LPR   10,10                   MOVE AT LEAST 1 BYTE IF LENGTH 0
         EX    10,MVCOUT               PUT CHARACTERS INTO LINE
         LA    10,4(0,10)
         SRL   10,2                    COMPUTE NUMBER OF FULL WORDS
         STH   10,CHWDCT               PLANT IN CALL
CHARB    MVC   FMTAIL(L'CHRTAIL),CHRTAIL   COMPLETE FORMAT STRING
         BAL   1,FRONTEND              PRINT NAME, ETC.
         CNOP  0,4                     ALIGN
         BAL   14,12(0,15)             JUMP TO FIOAF
         DC    A(OUTLIN)               ADDRESS OF ITEMS
         DC    X'0400'                 FOUR BYTES EACH
CHWDCT   DC    H'0'                    NUMBER OF ITEMS
         B     FENDUP                  JUMP TO CLOSE LIST
MVCOUT   MVC   OUTLIN(1),0(9)
*
         CNOP  0,4                     ALIGN TO FULLWORD
FRONTEND BAL   14,4(0,15)              ENTER AT FWRWF
         DC    X'01',AL3(UNITWD)       POINT TO FORTRAN UNIT NUMBER
         DC    A(FORMAT)               POINTER TO FORMAT STRING
         BAL   14,12(0,15)             JUMP TO FIOAF TO PRINT NAME AND=
         DC    A(NAME)
         DC    X'04000002'             TWO FULL WORDS
         BR    1                       RETURN
*
HCONV    LH    8,0(0,9)                GET HALFWORD INTEGER
         B     FCONVA
*
FCONV    L     8,0(0,9)                GET FULLWORD INTEGER
FCONVA   MVI   SWITCH,IMPLIED
         ST    8,OUTLIN                STORE DATUM
FCONVC   MVC   FMTAIL(3),FCONTL        COMPLETE FORMAT STRING
FCONVD   BAL   1,FRONTEND
         CNOP  0,4
         BAL   14,8(0,15)              TO FIOLF
         DC    X'0400',S(OUTLIN)       PRINT DATUM WITH I CONVERSION
         B     FENDUP
*
GCONV    MVI   SWITCH,EXPLICIT         SET TO BUMP BY 16
         CH    10,H4                   CHECK LENGTH
         BC    2,HEXN                  IF MORE THAN 4, USE HEX CONVERT
         LA    8,1                     SET WORD WITH LEFT 0'S FOR + SGN
         TM    0(9),X'80'              CHECK SIGN OF DATUM
         BC    8,GCONVA                JUMP IF +
         LCR   8,8                     NO, GET SOME - SIGN BITS
GCONVA   ST    8,OUTLIN                PLANT APPROPRIATE BYTES
         LNR   7,10                    CONSTRUCT FINAL POSITION
         LA    8,OUTLIN+4(7)           MUST RIGHT-JUSTIFY IN FULLWORD
         BCTR  10,0
         LPR   10,10                   MOVE AT LEAST 1 BYTE IF LENGTH 0
         EX    10,INMOVE               MOVE IT IN
         B     FCONVC                  AND MOVE IT OUT
INMOVE   MVC   0(1,8),0(9)             INTO OUTLIN FROM DATUM POSITION
*
ECONV    MVI   SWITCH,IMPLIED
         L     8,0(0,9)
         ST    8,OUTLIN
ECONVA   MVC   FMTAIL(4),ECONTL        FIX UP FORMAT
         B     FCONVD                  JUMP TO PUSH IT OUT
*
DCONV    MVI   SWITCH,IMPLIED
         MVC   OUTLIN(8),0(9)          MOVE IN DOUBLEWORD, SAVE FPR'S
DCONVA   MVC   FMTAIL(4),DCONTL
         BAL   1,FRONTEND
         CNOP  0,4
         BAL   14,8(0,15)              JUMP TO FIOLF TO DO D CONVERSION
         DC    X'0800',S(OUTLIN)
         B     FENDUP                  CLEAN UP
*
KCONV    MVI   SWITCH,EXPLICIT
         XC    OUTLIN(8),OUTLIN        CLEAR
         LA    8,OUTLIN
         BCTR  10,0                    BUMP COUNT DOWN BY 1
         LPR   10,10                   MOVE AT LEAST 1 BYTE IF LENGTH 0
         EX    10,INMOVE               MOVE DATUM IN
         CH    10,H4                   CHECK SIZE
         BC    4,ECONVA                IF 4 OR LESS BYTES, USE E
         B     DCONVA                  OTHERWISE D
*
HEX2     LA    10,2
         B     HEXIC
*
HEX4     LA    10,4
         B     HEXIC
*
HEX8     LA    10,8
HEXIC    MVI   SWITCH,IMPLIED
         B     HEXCOM
*
HEXN     MVI   SWITCH,EXPLICIT         FOR EXPLICIT LENGTHS
HEXCOM   MVI   OUTLIN,C' '             CLEAR BUFFER
         MVC   OUTLIN+1(LINELG-1),OUTLIN
         AR    10,10                   2N
         CH    10,HLINELG1             CHECK FOR EXCESSIVE LINE LENGTH
         BC    13,HEXNA
         LH    10,HLINELG1             SORRY, ONLY 1 LINE AT A TIME NOW
HEXNA    LA    8,3(0,10)               ROUND UP FRACTIONS OF A WORD
         LA    8,6(0,8)                INCLUDE (HEX) MESSAGE
         SRL   8,2
         STH   8,CHWDCT                PLANT FINAL WORD COUNT
         LR    7,10                    SET BYTE COUNT TO DO 1 LINE ONLY
         SRA   7,1                     ADJUST TO BYTE COUNT FOR BCT
         BC    2,HEXNB                 GO AHEAD IF POSITIVE BYTE COUNT
         LA    7,1                     OTHERWISE SET UP FOR 1 ONLY
HEXNB    LA    10,OUTLIN               R10 HAS OUTPUT POINTER
HEXLP    SR    0,0
         IC    0,0(0,9)                GET A BYTE
         SRDL  0,4                     SPREAD
         SLL   0,4
         SLDL  0,4
         STH   0,0(0,10)
         TR    0(2,10),EBCDIC          CONVERT TO EBCDIC
         LA    10,2(0,10)              BUMP POINTERS
         LA    9,1(0,9)
         BCT   7,HEXLP                 DO N BYTES
         MVC   1(5,10),HEXFG           INSERT B(HEX) IN LINE
         B     CHARB                   TREAT AS CHARACTER STRING
*
ILLEG    MVI   PUNTSW,1
         LA    9,ILMESG
         LA    10,L'ILMESG
         B     CHAR1
*
         CNOP  0,4
FENDUP   BAL   14,16(0,15)             TO FENDF TO TERMINATE ITEM LINE
         TM    PUNTSW,X'FF'            CHECK FOR EXPIRATIONS
         BC    8,IMPLP                 JUMP IF NO ERRORS
         EX    0,74(0,15)              PICK UP ADDRESS OF FIOCS
         BALR  0,1                     BRANCH TO IT
         DC    AL1(4),AL1(0)           AND TERMINATE ALL FILES
         NOP   0                       IGNORE ERROR RETURNS FROM FIOCS
         SVC   EXITCODE                TERMINATE THROUGH SUPERVISOR
*
IMPLP    LA    12,12(0,12)             BUMP BLOCK POINTER
         TM    SWITCH,EXPLICIT         CHECK FOR EXPLICIT LENGTH
         BC    8,IMPLPA
         LA    12,4(0,12)
IMPLPA   BCT   11,OUTER
RETURN   L     14,CALLPT               PICK UP CALLING ADDRESS
         LD    0,FPSAVE
         LD    2,FPSAVE+8
         LD    4,FPSAVE+16
         LD    6,FPSAVE+24
         SPM   14                      RESTORE PROGRAM MASK AND CONCODE
         LR    15,12                   RETURN ADDRESS IN R15
         LM    0,13,RSAVE              RESTORE OTHER REGISTERS
         BR    15                      RETURN
         DROP  13
*
*
         USING *,15                    ENTRY TO SET UNIT NUMBER
MCRPRNTU STM   14,1,12(13)             SAVE REGISTERS
         L     1,0(0,1)                GET POINTER TO NUMBER
         MVC   UNITWD,0(1)             MOVE IN THE UNIT NUMBER
         L     1,24(0,13)              RESTORE CALLER'S R1
         MVI   12(13),X'FF'            INDICATE EXIT
         BR    14                      RETURN
*
*
*        CONSTANTS AND STORAGE
*
EBCDIC   DC    C'0123456789ABCDEF'
FPRCH    DC    C'FPREG'
GPRCH    DC    CL5'GPREG'              FOR PRINTING GENERAL REGISTERS
HEXFG    DC    C'(HEX)'
*
ILMESG   DC    C'*** ILLEGAL TYPE CODE. SORRY, YOU''RE DEAD.'
JMESG    DC    C'NAME OF A CONTROL SECTION'
MMESG    DC    C'NAME FIELD OF A MACRO-INSTRUCTION'
NMESG    DC    C'A SELF-DEFINING QUANTITY.'
TMESG    DC    C'PRINTOUT TERMINATION.'
UMESG    DC    C'*** UNDEFINED ***'
NAMMSG   DC    C', NAME='''
ENDQUOT  DC    CL4''''
ASTERISK DC    CL8'*'                  USED FOR TERMINATION CHECK
PUNTSW   DC    X'00'
ECONTL   DC    X'0C0E0722'             E14.7)
DCONTL   DC    X'0E171022'             D23.16)
FCONTL   DC    X'100B22'               I11)
CHRTAIL  DC    X'061E140422'  30A4)    NOTE CONTAINED LINELG (1E)
HEADER   DC    X'021A19'               (25H
         DC    CL25'0PRINTOUT MACRO CALL NO.'
         DC    X'10051A0E'             I5,14H
         DC    CL14', AT LOCATION '
         DC    X'0607140422'           7A4)
CALLCT   DC    H'0'              COUNTER FOR HEAD MESSAGES
H4       DC    H'4'
H16      DC    H'16'
HLINELG1 DC    AL2(LINELG-6)           LEAVE ROOM FOR (HEX)
HLINELG  DC    AL2(LINELG)
VIBCOM   DC    V(IBCOM#)
UNITWD   DC    A(OUTUNIT)              HOLDS FORTRAN UNIT FOR OUTPUT
TRTAB    DC    X'081014181C2C282410'   ABCDEFGHI
         DC    7X'00'
         DC    X'302000303030100810'   JK*MNOPQR        NO TYPE L
         DC    8X'00'
         DC    X'040830080C100414'     STUVWXYZ
         DC    22X'00'
FORMAT   DC    X'021801060214041A03'   (1X,2A4,3H
         DC    C' = '
FMTAIL   DS    6C                      CHECK THIS LENGTH CAREFULLY
*
SWITCH   DS    C
TYPE     DS    C
RSAVE    DS    16F
CALLPT   DS    F                       CALLER'S ADDRESS
NAME     DS    CL8
FPSAVE   DS    4D                      FPR SAVE AREA
OUTLIN   DS    CL(LINELG)
*        VERSION OF MAY 26, 1967
         END
