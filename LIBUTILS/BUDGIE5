  0010**************************************************************************
  0020**************************************************************************
  0030*                                                                        *
  0040    ID  DIVISION.
  0050*                                                                        *
  0060    PROGRAM-ID.
  0070             BUDGIE5.
  0080*                                                                        *
  0090*                                                                        *
  0100**************************************************************************
  0110*                                                                        *
  0120*                                                                        *
  0130*                   - ANOTHER  STRUCTURED  PROGRAM  -                    *
  0140*                                                                        *
  0150*                THESE PROGRAM IS DIVIDED INTO SECTIONS                  *
  0160*                                                                        *
  0170*              EACH SECTION PERFORMS ONE LOGICAL FONCTION                *
  0180*                                                                        *
  0190*                                                                        *
  0200**************************************************************************
  0210**************************************************************************
  0220 AUTHOR.                                                LUC G.M. DUFRASNES
  0230     SKIP3
  0240     SKIP3
  0250     SKIP3
  0260*        PURPOSE.
  0270*        --------
  0280*
  0290*
  0300*    THIS PROGRAM CREATE
  0310     BUDGIE 2 DELETE RECORDS
  0320*
  0330*
  0340*THIS PROGRAM CONVERTS DELETION RECORDS FOR SUSPENSE
  0350*FILE UPDATING INTO A FORMAT USEABLE BY BUDGIE2.
  0360*ALSO VALIDATES NORMAL SUSPENSE UPDATE RECORDS.
  0370*
  0380*INPUT  -
  0390*     1. SUSPENSE UPDATES
  0400*            80 BYTE RECORDS
  0410*            RECORD NUMBER IN BYTES  76-79
  0420*            DELETE FLAG   IN BYTE   80
  0430*
  0440*OUTPUT.
  0450*     1. SUSPENSE UPDATES
  0460*            REFORMATTED VERSION  OF INPUT FILE
  0470*
  0480*     2. DISPLAY OF REJECTED RECORDS
  0490*
  0500*
  0510*PROCESSING.
  0520*
  0530*   1. INITIALISATION.
  0540*
  0550*        OPEN INPUT FILE  / OUTPUT FILE
  0560*
  0570*
  0580*   2. PROCESS INPUT FILE 15 FOLLOWS
  0590*
  0600*
  0610*    RECORD NUMBER = SPACE           Y  N  N
  0620*    DELETE FLAG   =  'D'            -  N  Y
  0630*
  0640* 1  WRITE INPUT TO OUTPUT       I   X
  0650*
  0660*
  0670*                                I
  0680* 2  VALIDATE RECORD NUMBER      I      X
  0690*                                I
  0700* 3  CREATE DELETE RECORD        I         X
  0710*
  0720*
  0730*
  0740*NOTES ON ACTIONS
  0750*      1. WRITE INPUT TO OUTPUT
  0760*             COPY INPUT TO OUTPUT
  0770*             READ NEXT RECORD
  0780*
  0790*      2. VALIDATE RECORD NUMBER
  0800*              REPLACE LEADING SPACE WITH ZEROS IN REC.NUM
  0810*              IF RESULTING FIELD IS NOT NUMERIC
  0820*                DISPLAY 80 BYTE RECORD
  0830*                DISPLAY 'RECORD NUMBER NOT NUMERIC'
  0840*              ELSE
  0850*                WRITE OUTPUT.
  0860*              READ NEXT RECORD.
  0870*
  0880*     3. CREATE DELETE RECORD.
  0890*             REPLACE LEADING SPACES WITH ZEROS IN RECORD NUMBER
  0900*               IF RESULT IS NOT NUMERIC
  0910*                 DISPLAY 80 BYTE RECORD
  0920*                 DISPLAY 'RECORD NUMBER NOT NUMERIC'
  0930*              ELSE
  0940*                 CREATE NEW OUTPUT RECORD THUS
  0950*                    ***DELETE RECORD=   IN BYTES 1-17
  0960*                    RECORD NUMBER IN BYTES 18-21
  0970*                    SPACE  IN BYTES 22-80
  0980*                 WRITE THIS RECORD.
  0990*            READ NEYT RECORD
  1000     EJECT
  1010     SKIP2
  1020 ENVIRONMENT       DIVISION.
  1030*===========       ========
  1040 CONFIGURATION     SECTION.
  1050 INPUT-OUTPUT      SECTION.
  1060 FILE-CONTROL.
  1070     SKIP1
  1080                     SELECT DATACARD ASSIGN TO UT-S-DATACARD.
  1090                     SELECT BUDGIE1A ASSIGN TO UT-S-BUDGIE1A.
  1100                     SELECT BUDGIN   ASSIGN TO  UT-S-BUDGIN.
  1110     EJECT
  1120 DATA    DIVISION.
  1130*====    =========
  1140 FILE    SECTION.
  1150     SKIP2
  1160  FD
  1170         DATACARD
  1180         RECORDING  MODE  IS  F
  1190         LABEL RECORD  STANDARD
  1200         BLOCK CONTAINS 0 RECORDS
  1210         DATA  RECORD  IS
  1220         RECIN.
  1230   01    RECIN.
  1240     03  REC-IN PIC X OCCURS 80.
  1250     SKIP3
  1260  FD
  1270         BUDGIE1A
  1280         RECORDING  MODE  IS  F
  1290         LABEL RECORD  STANDARD
  1300         BLOCK CONTAINS 0 RECORDS
  1310         DATA RECORD ARE
  1320         RECOUT RECOUT-R.
  1330 01      RECOUT.
  1340     03  RECOUT1 PIC X(17).
  1350     03  RECOUT2 PIC X(04).
  1360     03  FILLER  PIC X(59).
  1370     SKIP1
  1380 01      RECOUT-R.
  1390     03  REC-OUT PIC X OCCURS 80.
  1400     SKIP3
  1410 FD      BUDGIN
  1420         RECORDING F
  1430         LABEL RECORD STANDARD
  1440         BLOCK 0 RECORDS
  1450         DATA RECORD IS BUDG-IN.
  1460 01      BUDG-IN.
  1470     03  MS02          PIC X(4).
  1480     03  FILLER        PIC X(22).
  1490     03  PP1           PIC 99.
  1500     03  L1            PIC 9.
  1510     03  FILLER        PIC X(48).
  1520     03  PP2           PIC 99.
  1530     03  BUD-FLAG      PIC X.
  1540     EJECT
  1550     SKIP3
  1560 WORKING-STORAGE  SECTION.
  1570*=========================
  1580     SKIP2
  1590  77 PROGNAME        PIC X(10) VALUE
  1600                         ' T667P985 '.
  1610     SKIP1
  1620 77  USERCOD             PIC X(4) VALUE 'U987'.
  1630*    USER CODE FOR DUMP
  1640     SKIP1
  1650 77  WS-SUB              PIC S9 COMP-3 VALUE +0.
  1660*    SUBSCRIPT FOF LOAD AND UNLOAD TABLE RNUM
  1670     SKIP1
  1680 77  PP1-SUB             PIC S99 COMP-3 VALUE +0.
  1690*    SUBSCRIPT FOR LOAD AND UNLOAD TABLE RNUM
  1700     SKIP1
  1710 01  RNUM.
  1720*    TABLE RNUM
  1730     03  R-NUM PIC X OCCURS 4.
  1740     SKIP1
  1750 01  SWEND-INPUT PIC X VALUE SPACE.
  1760     SKIP3
  1770  01 MODACTIN  COPY  MODACTIN.
  1780     SKIP3
  1790     SKIP3
  1800     SKIP3
  1810     SKIP3
  1820**************************************************************************
  1830**************************************************************************
  1840**************************************************************************
  1850*                                                                        *
  1860    PROCEDURE  DIVISION.
  1870*   =========  =========                                                 *
  1880 MAIN  SECTION.
  1890*........                      ...........................................
  1900*........    CONTROL  LOGIC    ...........................................
  1910*........                      ...........................................
  1920         MOVE ' 1' TO MOD01
  1930*                                                                        *
  1940         PERFORM  STARTUP
  1950*                                                                        *
  1960         PERFORM  PROCESS-FILE UNTIL
  1970                     SWEND-INPUT
  1980                                           = HIGH-VALUE
  1990         PERFORM  END-OF-JOB.
  2000*                                                                        *
  2010 MAIN-END.   EXIT.
  2020**************************************************************************
  2030**************************************************************************
  2040**************************************************************************
  2050     EJECT
  2060 STARTUP  SECTION.
  2070*........                                                 ................
  2080*........    OPEN FILES, INITIALISE WORK AREAS, ETC...    ................
  2090*........                                                 ................
  2100         MOVE ' 2' TO MOD02
  2110     SKIP3
  2120         MOVE SPACES TO RNUM
  2130         OPEN INPUT BUDGIN
  2140         PERFORM BUDGIN-READING UNTIL MS02 = 'MS02'
  2150         OPEN  INPUT
  2160                     DATACARD OUTPUT BUDGIE1A
  2170
  2180         PERFORM READIN.
  2190     SKIP3
  2200 STARTUP-END.  MOVE '..' TO MOD02.
  2210     SKIP3
  2220     SKIP3
  2230     SKIP3
  2240 PROCESS-FILE  SECTION.
  2250*........                         ........................................
  2260*........    MAIN   PROCESSING    ........................................
  2270*........                         ........................................
  2280         MOVE ' 3' TO MOD03
  2290     SKIP3
  2300         PERFORM LOAD-RNUM
  2310         IF RNUM = SPACE MOVE RECIN TO RECOUT
  2320                         PERFORM WRITOUT
  2330         ELSE IF REC-IN (PP2) = BUD-FLAG
  2340                             PERFORM CREATE-DELREC
  2350              ELSE PERFORM VALID-RECNUM.
  2360         PERFORM READIN.
  2370     SKIP3
  2380 PROCESS-FILE-END.  MOVE '..' TO MOD03.
  2390    EJECT
  2400 END-OF-JOB  SECTION.
  2410*........                              ...................................
  2420*........    TERMINATE, CLOSE FILES    ...................................
  2430*........                              ...................................
  2440         MOVE '4' TO MOD04
  2450     SKIP3
  2460         CLOSE  BUDGIN
  2470         CLOSE DATACARD  BUDGIE1A
  2480         DISPLAY '***************************  NORMAL END  ***'.
  2490     SKIP3
  2500 END-OF-JOB-END.  MOVE '..' TO MOD04  STOP RUN.
  2510     EJECT
  2520 READIN  SECTION.
  2530*........                            .............................
  2540*........    READING OF DATA-CARD    .............................
  2550*........                            .............................
  2560         MOVE ' 5' TO MOD05
  2570     SKIP1
  2580         READ DATACARD AT END MOVE HIGH-VALUE TO SWEND-INPUT.
  2590     SKIP1
  2600 READIN-END.  MOVE '99' TO MOD05.
  2610     SKIP3
  2620     SKIP3
  2630 BUDGIN-READING  SECTION.
  2640*........                        .........................................
  2650*........    READ BUDGIN FILE    .........................................
  2660*........                        .........................................
  2670         MOVE '13' TO MOD13
  2680     SKIP1
  2690         READ BUDGIN AT END DISPLAY 'NO MS02 CARD ON BUDGIE '
  2700                            CALL 'COBDUM' USING USERCOD.
  2710     SKIP1
  2720 BUDGIE-READING-END.  MOVE '..' TO MOD13.
  2730     SKIP3
  2740     SKIP3
  2750 WRITOUT  SECTION.
  2760*........                     ....................................
  2770*........    WRITE A RECORD   ....................................
  2780*........                     ....................................
  2790         MOVE ' 6' TO MOD06
  2800     SKIP1
  2810         WRITE RECOUT.
  2820     SKIP1
  2830 WRITOUT-END.  MOVE '99' TO MOD06.
  2840     EJECT
  2850 CREATE-DELREC  SECTION.
  2860*........                                         ................
  2870*........    CREATE A DELETE RECORD FOR OUTPUT    ................
  2880*........                                         ................
  2890         MOVE ' 7' TO MOD07
  2900     SKIP1
  2910         EXAMINE RNUM REPLACING LEADING SPACE BY ZEROS
  2920         IF RNUM NOT NUMERIC
  2930         DISPLAY RECIN '  RECORD NUMBER NOT NUMERIC '
  2940         ELSE MOVE SPACE TO RECOUT
  2950             MOVE '***DELETE RECORD=' TO RECOUT1
  2960              MOVE RNUM TO RECOUT2
  2970              PERFORM WRITOUT.
  2980    SKIP1
  2990 CREATE-DELREC-END.  MOVE '..' TO MOD07.
  3000     SKIP3
  3010     SKIP3
  3020     SKIP3
  3030 VALID-RECNUM  SECTION.
  3040*........                                            .............
  3050*........    VALIDATION OF RECORD NUMBER             .............
  3060*........                                            .............
  3070         MOVE ' 8' TO MOD08
  3080     SKIP1
  3090         EXAMINE RNUM REPLACING LEADING SPACE BY ZEROS
  3100         IF RNUM NOT NUMERIC
  3110         DISPLAY RECIN '  RECORD NUMBER NOT NUMERIC '
  3120         ELSE MOVE RECIN TO RECOUT
  3130             PERFORM UNLOAD-RNUM
  3140              PERFORM WRITOUT.
  3150     SKIP1
  3160 VALID-RECNUM-END.  MOVE '..' TO MOD08.
  3170     EJECT
  3180 LOAD-RNUM  SECTION.
  3190*.......                       ...........................................
  3200*.......    LOAD TABLE RNUM    ...........................................
  3210*.......                       ...........................................
  3220         MOVE ' 9' TO MOD09
  3230     SKIP1
  3240         MOVE SPACE TO RNUM
  3250         MOVE 5 TO WS-SUB
  3260         ADD PP1  L1 GIVING PP1-SUB
  3270         PERFORM LOAD-R-NUM UNTIL PP1-SUB = PP1.
  3280     SKIP2
  3290 LOAD-RNUM-END.  MOVE '..' TO MOD09.
  3300     SKIP3
  3310     SKIP3
  3320 LOAD-R-NUM  SECTION.
  3330*........                                        .........................
  3340*........    LOAD BYTE PER BYTE TO TABLE RNUM    .........................
  3350*........                                        .........................
  3360         MOVE '10' TO MOD10
  3370     SKIP1
  3380         SUBTRACT 1 FROM PP1-SUB  WS-SUB
  3390         MOVE REC-IN (PP1-SUB) TO R-NUM (WS-SUB).
  3400     SKIP1
  3410 LOAD-R-NUM-END.  MOVE '..' TO MOD10.
  3420     EJECT
  3430 UNLOAD-RNUM  SECTION.
  3440*........                         ........................................
  3450*........    UNLOAD TABLE RNUM    ........................................
  3460*........                         ........................................
  3470         MOVE '11' TO MOD11
  3480     SKIP1
  3490         MOVE 5 TO WS-SUB
  3500         ADD PP1  L1 GIVING PP1-SUB
  3510         PERFORM UNLOAD-R-NUM UNTIL PP1-SUB = PP1.
  3520     SKIP1
  3530 UNLOAD-RNUM-END.  MOVE '..' TO MOD11.
  3540     SKIP3
  3550     SKIP3
  3560 UNLOAD-R-NUM  SECTION.
  3570*........                                       ..........................
  3580*........    UNLOAD BYTE PER BYTE TABLE RNUM    ..........................
  3590*........                                       ..........................
  3600         MOVE '12' TO MOD12
  3610     SKIP1
  3620         SUBTRACT 1 FROM PP1-SUB  WS-SUB
  3630         MOVE R-NUM (WS-SUB) TO REC-OUT (PP1-SUB).
  3640     SKIP1
  3650 UNLOAD-R-NUM-END.  MOVE '..' TO MOD12.
  3660     SKIP3
  3670*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  END OF MODULE  =-=-=-=-=-=-=-=-=-=
