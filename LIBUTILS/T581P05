T581P05  START 0
         SPACE 1
***********************************************************************
*                                                                     *
*         PROGRAM ID. :       T581P05                                 *
*         DATE WRITTEN :      FEBRUARY 1974                           *
*         LOCATION :          EUROPEAN COMPUTER CENTER                *
*         AUTHOR :            J. NOLS                                 *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        THIS PROGRAM PRODUCES FIVE REPORTS :                         *
*                                                                     *
*              T581R05A = DASD DATA SET REPORT                        *
*              T581R05B = DASD DATA SET EXCEPTION REPORT              *
*              T581R05C = DASD DUPLICATE DATA SET REPORT              *
*              T581R05D = DASD DATA SET THAT ARE NOT CATALOGUED       *
*              T581R05E = TAPE DATA SET EXCEPTION REPORT              *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*         REGISTER  EQUATES AND USAGE                                 *
***********************************************************************
         SPACE 1
R0       EQU   0    SVC COMMUNICATIONS AND WORK REGISTER
R1       EQU   1    SVC COMMUNICATIONS AND WORK REGISTER
R2       EQU   2    WORK REGISTER
R3       EQU   3    WORK REGISTER
R4       EQU   4    WORK REGISTER
R5       EQU   5    WORK REGISTER
R6       EQU   6    WORK REGISTER
R7       EQU   7    WORK REGISTER
R8       EQU   8    WORK REGISTER
R9       EQU   9    WORK REGISTER
R10      EQU   10   WORK REGISTER
R11      EQU   11   BASE REGISTER 1
R12      EQU   12   BASE REGISTER 2
R13      EQU   13   SAVE AREA POINTER
R14      EQU   14   BALR RETURN ADDRESS
R15      EQU   15   BALR ROUTINE ADDRESS
         EJECT
***********************************************************************
*         HOUSEKEEPING                                                *
***********************************************************************
         SPACE 1
         PGMIN EQUATES=NO,USING=(R11,R12) ESTABLISH ADDRESSABILITY
         SPACE 3
         PRINT NOGEN               SUPPRESS MACRO EXPANSION
         SPACE 3
         UT458 ,                   EXEC PGM=UT458
         MVC   DATE,UTREPORT       MOVE DATE REPORT TO TITLE
         MVC   TIMEHH,UTHHMMSS     MOVE TIME
         MVC   TIMEMM,UTHHMMSS+2              TO TITLE
         SPACE 3
***********************************************************************
*         OPEN THE FILES                                              *
***********************************************************************
         SPACE 1
         OPEN  (T581F010,,T581FJCL,,T581F100,,T581R05A,(OUTPUT))
         OPEN  (T581R05B,(OUTPUT),T581R05C,(OUTPUT))
         OPEN  (T581R05D,(OUTPUT),T581R05E,(OUTPUT))
         SPACE 3
         EJECT
***********************************************************************
*        READ                                                         *
***********************************************************************
         SPACE 1
READFJCL GET   T581FJCL
         MVI   JCLS,X'FF'          INDICATE JCL FILE NOT EMPTY
         MVC   DSNJCL,32(R1)       SAVE DSNAME FROM SYS1 / TEST.PROCLIB
         CLI   DSNJCL,C'A'         TEST IF FIRST POSITION = A
         BE    READF100
         B     READFJCL
         SPACE 3
READF100 LA    R4,SRA
RNF100   GET   T581F100
         MVI   F100,X'FF'          INDICATE CATLG FILE NOT EMPTY
         TM    50(R1),B'11000000'  IS IT A VSAM POINTER ?
         BO    RNF100              YES - GO READ NEXT RECORD
         TM    50(R1),B'01100000'  IS IT A CLUSTER/VOLUME/VSAM D&I ?
         BO    RNF100              YES - GO READ NEXT RECORD
         TM    50(R1),X'40'        TEST IF DATA SET RECORD
         BNO   RNF100              NO - READ NEXT RECORD
         CLI   53(R1),X'20'        TEST IF DASD
         BE    RNF100              YES - READ NEXT RECORD
         CLC   6(8,R1),=C'OFFSITE.'     TEST IF 'OFFSITE.' INDEX
         BE    RNF100                   YES - READ NEXT RECORD
         CLC   6(13,R1),=C'OPS.SECURITY.' TEST IF 'OPS.SECURITY.' INDEX
         BE    RNF100                   YES - READ NEXT RECORD
         MVC   DSNCATLG,6(R1)      SAVE DSNAME FROM HISTORIC SYSCTLG
         MVC   WARE+1(44),6(R1)    MOVE DSNAME TO PRINT LINE
         MVC   WARE+50(6),55(R1)   MOVE VOLUME ID. TO PRINT LINE
         MVC   DECIMAL(4),61(R1)   ALIGNMENT
         LH    R5,DECIMAL          LOAD SEQ.NO
         LH    R6,DECIMAL+2        LOAD MULTI-VOL.SEQ.NO
         CVD   R5,DECIMAL          CONVERT TO DECIMAL
         UNPK  WARE+63(3),DECIMAL+6(2)  UNPACK
         OI    WARE+65,SIGN        FORCE SIGN TO 'F'
         CVD   R6,DECIMAL          CONVERT TO DECIMAL
         UNPK  WARE+76(3),DECIMAL+6(2)  UNPACK
         OI    WARE+78,SIGN        FORCE SIGN TO 'F'
         BR    R4
         SPACE 3
SRA      MVI   SWREPORT,C'A'       T581R05A
         BAL   R4,HEADLINE         PERFORM HEADLINE
         MVI   SWREPORT,C'B'       T581R05B
         BAL   R4,HEADLINE         PERFORM HEADLINE
         MVI   SWREPORT,C'C'       T581R05C
         BAL   R4,HEADLINE         PERFORM HEADLINE
         MVI   SWREPORT,C'D'       T581R05D
         BAL   R4,HEADLINE         PERFORM HEADLINE
         MVI   SWREPORT,C'E'       T581R05E
         BAL   R4,HEADLINE         PERFORM HEADLINE
         EJECT
         SR    R5,R5               CLEAR
         SR    R8,R8               CLEAR
         LA    R9,50               ZERO AND ADD 50 TO R9
         SR    R10,R10             CLEAR
         SPACE 3
READF010 GET   T581F010,FORMAT1
         CLI   DS1FMTID,C'1'       TEST IF DSCB FORMAT 1
         BE    PF1                 YES - BRANCH TO PF1
         CLI   DS1FMTID,C'2'       TEST IF DSCB FORMAT 2
         BE    PF2                 YES - BRANCH TO PF2
         CLI   DS1FMTID,C'3'       TEST IF DSCB FORMAT 3
         BE    PF3                 YES - BRANCH TO PF3
         CLI   DS1FMTID,C'4'       TEST IF DSCB FORMAT 4
         BE    PF4                 YES - BRANCH TO PF4
         B     READF010            NO  - BRANCH TO NEXT READ
         EJECT
***********************************************************************
*        LOAD TABLE DSCB'S FORMAT 2 / 150 ELEMENTS MAXIMUN            *
*           FOR EACH ELEMENT, LENGTH = 16 BYTES                       *
*             BYTES  1 TO  6       VOLUME NAME                        *
*                    7 TO 11       ORIGINAL CCHHR                     *
*                   12 TO 16       POINTER (CCHHR) FOR DSCB FORMAT 3  *
***********************************************************************
         SPACE 1
PF2      CLC   DS2PTRDS(5),CCHHR0  TEST IF CCHHR FOR F.3 = ZERO
         BE    READF010            YES - BRANCH TO NEXT READ
         CH    R5,=H'150'          TEST IF VALUE OF R5 IS EQUAL TO 150
         BE    ERTMF2              YES - BRANCH TO TOO MANY DSCB'S F2
         CH    R5,=H'0'            TEST IF FIRST DSCB F2
         BE    GMAIN               YES - BRANCH TO GETMAIN
         B     PINTABF2            NO  - BRANCH TO PUT IN TABLE
GMAIN    GETMAIN R,LV=2400         FETCH 2400 BYTES FOR TABLE DSCB'S F2
         ST    R1,TABADF2          STORE ADDRESS TO TABLE OF ADDRESS F2
         LR    R8,R1               SAVE R1
PINTABF2 MVC   0(6,R8),VOLNAME     MOVE VOLUME ID. TO TABLE
         MVC   6(5,R8),ORCCHHR     MOVE CCHHR OF ORIGINAL DSCB IN VTOC
         MVC   11(5,R8),DS2PTRDS   MOVE POINTER TO DSCB FORMAT 3
         LA    R8,16(R8)           ADDRESS FOR NEXT MOVE'S
         LA    R5,1(R5)            ADD ONE TO R5
         ST    R5,NODSCB2          STORE NUMBER OF DSCB'S F2
         B     READF010            BRANCH TO NEXT READ
         EJECT
***********************************************************************
*        CONVERSION IN NUMBER OF TRACKS OF 13 EXTENTS DSCB FORMAT 3   *
*             ROUTINE LEXCONV IS ALSO USED FOR CONVERSION             *
*             OF 3 EXTENTS FROM THE DSCB FORMAT 1                     *
***********************************************************************
         SPACE 1
PF3      BAL   R3,RNTCTF4          PERFORM RESEARCH IN TABLE DSCB F4
         LA    R5,DS3EXTNT+2       ADDRESS FIRST EXTENT DESCRIPTION
         LA    R3,ENDCEX           ADDRESS ENDCEX
         SR    R8,R8               CLEAR
         SR    R9,R9               CLEAR
         B     LEXCONV             BRANCH TO CONV. EXTENTS
RNTCTF4  LM    R5,R7,TABADF4      **
         LA    R8,50               *
         LTR   R7,R7               *
         BNZ   TR7                 *
         LTR   R6,R6               *
         BNZ   TR6                 *
         B     TR5                 *
TR7      CLC   VOLNAME,0(R7)        >  TEST IF CURRENT VOLNAME IS IN
         BL    TR6                 *     TABLE DSCB F4 PART 1,2 OR 3
         LR    R5,R7               *
         B     TR5                 *
TR6      CLC   VOLNAME,0(R6)       *
         BL    TR5                 *
         LR    R5,R6               *
TR5      CLC   VOLNAME,0(R5)      **
         BNE   CNAFT
         MVC   NOTRKS,6(R5)        MOVE NO OF TRACKS PER LOG. CYLINDER
         BR    R3
CNAFT    LA    R5,8(R5)            ADDRESS FOR NEXT TEST
         BCT   R8,TR5              50 TIMES
         STH   R8,NOTRKS           CURRENT VOLNAME IS NOT IN TABLE -
         BR    R3                  DSCB F4 MOVE ZERO TO NO OF TRACKS
LEXCONV  LH    R6,0(R5)            LOAD CC OF LOWER LIMIT OF THIS EXT.
         LH    R7,4(R5)            LOAD CC OF UPPER LIMIT OF THIS EXT.
         MH    R6,NOTRKS           MULTIPLY CC L.L. BY NO OF TRKS P.CYL
         MH    R7,NOTRKS           MULTIPLY CC U.L. BY NO OF TRKS P.CYL
         AH    R6,2(R5)            ADD HH L.L. TO CC L.L. * NOTRKS
         AH    R7,6(R5)            ADD HH U.L. TO CC L.L. * NOTRKS
         SR    R7,R6               SUBTRACT LOWER L. TO UPPER L.
         AH    R7,=H'1'            ADD 1 TO RESULT = NO OF TRACK
         AR    R8,R7               ADD V.R7 TO V.R8  /   FOR THIS EXT.
         AH    R9,=H'1'            ADD 1 TO R9 (NO OF EXT FOR THIS F3)
         BR    R3
ENDCEX   CLI   8(R5),X'00'         TEST IF NEXT EXT. IS ZERO
         BE    ENDF3CV             YES - BRANCH TO END OF CONV. F3 EXTS
         CH    R9,=H'4'            TEST IF EXT. NO 4 FOR THIS F3
         BNE   TILE                NO - BRANCH TO NEXT TEST
         LA    R5,1(R5)            YES - ADD 1 TO V.R5 (SKIP IDENT.)
TILE     CH    R9,=H'13'           TEST IF LAST EXT. FOR THIS F3
         BE    ENDF3CV             YES - BRANCH TO END OF CONV. F3 EXTS
         LA    R5,10(R5)           ADDRESS FOR NEXT EXT. CONV.
         B     LEXCONV             BRANCH TO NEXT CONV. EXT.
         EJECT
***********************************************************************
*        LOAD TABLE DSCB'S FORMAT 3 / 250 ELEMENTS MAXIMUN            *
*           FOR EACH ELEMENT, LENGTH = 16 BYTES                       *
*             BYTES  1 TO  6       VOLUME NAME                        *
*                    7 TO 11       ORIGINAL CCHHR                     *
*                      12          FORMAT ID. 2 OR 3                  *
*                   13 TO 16       TOTAL ALLOC IN TRACKS              *
***********************************************************************
         SPACE 1
ENDF3CV  ST    R8,NTRKSF3          STORE NUMBER OF TRACKS
         LM    R5,R9,SAVAF3        RESTORE R5 TO R9
         CH    R5,=H'250'          TEST IF VALUE OF R5 IS EQUAL TO 250
         BE    ERTMF3              YES - BRANCH TO TOO MANY DSCB F3
         CH    R5,=H'0'            TEST IF FIRST DSCB F3
         BNE   TI5E6               YES - BRANCH TO NEXT TEST
         LA    R6,50               ZERO AND ADD 50 TO R6
         B     GTMAIN              BRANCH TO GTMAIN
TI5E6    CR    R5,R6               TEST IF R5 = R6
         BNE   PINTABF3            NO -
         LA    R6,50(R6)           ADD 50 TO V.R6
GTMAIN   GETMAIN R,LV=800          FETCH 800 BYTES FOR TABLE DSCB'S F3
         ST    R1,0(R7,R9)         STORE ADDRESS TO TABLE OF ADDRESS F3
         LA    R7,4(R7)            DEPLACEMENT FOR NEXT STORE ADDRESS
         LR    R8,R1               SAVE R1
PINTABF3 MVC   0(6,R8),VOLNAME     MOVE VOLUME ID.
         MVC   6(5,R8),ORCCHHR     MOVE ORIGINAL CCHHR OF THIS DSCB
         MVC   11(1,R8),=X'F3'     MOVE X'F3' IDENTIFIER
         MVC   12(4,R8),NTRKSF3    MOVE NUMBER OF TRACKS ALLOC FOR F3
         LA    R8,16(R8)           ADDRESS FOR NEXT MOVE'S
         LA    R5,1(R5)            ADD 1 TO V.R5
         ST    R5,NODSCB3          STORE NUMBER OF DSCB'S F3
         STM   R5,R9,SAVAF3        SAVE R5 TO R9
         B     READF010            BRANCH TO NEXT READ
         EJECT
***********************************************************************
*        LOAD TABLE DSCB'S FORMAT 4 / 150 ELEMENTS MAXIMUN            *
*           FOR EACH ELEMENT, LENGTH =  8 BYTES                       *
*             BYTES  1 TO  6       VOLUME NAME                        *
*                    7 TO 8        NUMBER OF TRACKS PER LOGICAL CYL.  *
***********************************************************************
         SPACE 1
PF4      CH    R8,=H'150'          TEST IF VALUE OF R5 IS EQUAL TO 150
         BE    ERTMF4              YES - BRANCH TO TOO MANY DSCB F4
         CH    R8,=H'0'            TEST IF FIRST DSCB F4
         BE    GETMA               YES - BRANCH TO GETMA
         CR    R8,R9               TEST IF R8 = R9
         BNE   PINTABF4            YES - BRANCH TO PUT IN TABLE F4
         LA    R9,50(R9)           ADD 50 TO R9
GETMA    GETMAIN R,LV=400          FETCH 400 BYTES FOR TABLE DSCB'S F4
         ST    R1,TABADF4(R10)     STORE ADDRESS TO TABLE OF ADDRESS F4
         LA    R10,4(R10)          DEPLACEMENT FOR NEXT STORE ADDRESS
         LR    R2,R1               SAVE R1
PINTABF4 MVC   0(6,R2),VOLNAME     MOVE VOLUME ID. TO TABLE
         MVC   6(2,R2),DS4DEVSZ+2  MOVE NUMBER OF TRACKS PER CYLINDER
         LA    R2,8(R2)            ADDRESS FOR NEXT MOVE'S
         LA    R8,1(R8)            ADD ONE TO R8
         ST    R8,NODSCB4          STORE NUMBER OF DSCB'S F4
         B     READF010            BRANCH TO NEXT READ
         EJECT
***********************************************************************
*        COMPARE EACH ELEMENT OF THE TABLE DSCB'S FORMAT 2            *
*             (KEY=(VOLNAME,POINTERF3)) WITH THE TABLE DSCB'S         *
*             FORMAT 3 (KEY=(VOLNAME,ORIGINALCCHHR)) .                *
*             IF EQUAL, REPLACE ORIGINAL CCHHR OF DSCB FORMAT 3       *
*             BY ORIGINAL CCHHR OF DSCB FORMAT2                       *
***********************************************************************
         SPACE 1
FIRSTF1  L     R5,NODSCB2          LOAD NUMBER OF DSCB F2
         LTR   R5,R5               TEST IF ZERO
         BNZ   LATF2               NO  - BRANCH TO NEXT TEST
         BR    R3
LATF2    L     R6,TABADF2          LOAD ADDRESS TABLE F2
LRESF3   MVC   WARF3(6),0(R6)      MOVE VOLNAME
         MVC   WARF3+6(5),11(R6)   MOVE ORIGINAR CCHHR OF F3
         BAL   R4,RESF3            PERFORM RESEARCH F3
         LTR   R7,R7               TEST IF ZERO
         BZ    NITF3               YES - BRANCH TO NEXT TEST
         MVC   6(5,R7),6(R6)       MOVE ORIGINAL CCHHR OF F2 TO F3
         MVI   11(R7),X'F2'
NITF3    LA    R6,16(R6)           ADDRESS NEXT ELEMENT TABLE F2
         BCT   R5,LRESF3
FMAIN    L     R1,TABADF2          YES - LOAD ADDRESS TABLE F2
         FREEMAIN R,LV=2400,A=(R1)
         BR    R3
RESF3    STM   R5,R6,SAVAF3
         L     R5,TABADF3
         L     R6,NODSCB3
         SR    R9,R9
         SR    R10,R10
         LA    R2,50
NARTF30  CLC   WARF3,0(R5)
         BNE   NARTF31
         LR    R7,R5
         L     R8,12(R5)
         LM    R5,R6,SAVAF3
         BR    R4
NARTF31  LA    R9,1(R9)
         C     R9,NODSCB3
         BNE   NARTF33
NARTF32  SR    R7,R7
         LM    R5,R6,SAVAF3
         BR    R4
NARTF33  CR    R9,R2
         BNE   NARTF34
         LA    R10,4(R10)
         LA    R2,50(R2)
         L     R5,TABADF3(R10)
         B     NARTF30
NARTF34  LA    R5,16(R5)
         B     NARTF30
         EJECT
***********************************************************************
*        DATA SET NAME, CREATION DATE AND PURGE DATE                  *
*             TO PRINT DETAIL LINE                                    *
***********************************************************************
         SPACE 1
PF1      NOP   NFT
         BAL   R3,FIRSTF1
         MVI   PF1+1,X'F0'
NFT      MVC   DSNAME,DS1DSNAM     MOVE DATA SET NAME TO DETLINE
         SR    R5,R5               CLEAR
         IC    R5,DS1CREDT         LOAD YEAR FROM CREATION DATE TO REG5
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         OI    DECIMAL+2,SIGN      FORCE SIGN
         MVC   CYEAR,DECIMAL+1     MOVE TO DETLINE
         LH    R5,DS1CREDT+1       LOAD DAY OF THE YEAR INTO REG.5
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  CDDD,DECIMAL+6(2)   UNPACK
         OI    CDDD+2,SIGN         FORCE SIGN
         SR    R5,R5               CLEAR
         IC    R5,DS1EXPDT         LOAD YEAR FROM EXPIRATION DATE TO R5
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         OI    DECIMAL+2,SIGN      FORCE SIGN
         MVC   PYEAR,DECIMAL+1     MOVE TO DETLINE
         MVC   DS1EXPDT(2),DS1EXPDT+1   ALIGNMENT
         LH    R5,DS1EXPDT         LOAD DAY OF THE YEAR FROM EXP DATE
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  PDDD,DECIMAL+6(2)   UNPACK
         OI    PDDD+2,SIGN         FORCE SIGN
         MVI   PYEAR+2,C'.'
         CLC   DTPURGE,PYEAR       TEST IF PURGE DATE = ZERO
         BNE   TESDSORG            NO  - BRANCH TO TEST DSORG
         MVI   PYEAR,BLANK         YES - MOVE
         MVC   PYEAR+1(5),PYEAR          BLANK
         EJECT
***********************************************************************
*        TESTS DATA SET ORGANIZATION                                  *
***********************************************************************
         SPACE 1
TESDSORG TM    DS1DSORG,IS         TEST IF PSORG = INDEX SEQ.
         BZ    CPS                 NO - BRANCH TO NEXT TEST
         MVC   FILETYPE,=C'I.S.'   YES - MOVE 'I.S.' TO DETLINE
         B     ETDSORG             END OF TEST DSORG
CPS      TM    DS1DSORG,PS         TEST IF DSORG = PHYSICAL SEQ.
         BZ    CDA                 NO - BRANCH TO NEXT TEST
         MVC   FILETYPE,=C'SEQ.'   YES - MOVE 'SEQ.' TO DETLINE
         B     ETDSORG             END OF TEST DSORG
CDA      TM    DS1DSORG,DA         TEST IF DSORG = DIRECT ORG.
         BZ    CPO                 NO - BRANCH TO NEXT TEST
         MVC   FILETYPE,=C'DIR.'   MOVE 'DIR.' TO DETLINE
         B     ETDSORG             END OF TEST DSORG
CPO      TM    DS1DSORG,PO         TEST IF DSORG = PARTITIONED ORG.
         BZ    CU                  NO - BRANCH TO NEXT TEST
         MVC   FILETYPE,=C'PART'   YES - MOVE 'PART' TO DETLINE
         B     ETDSORG             END OF TEST DSORG
CU       TM    DS1DSORG,UM         TEST IF DSORG = UNMOVABLE
         BZ    CNOT                NO - BRANCH TO MOVE 'NOT '
         MVC   FILETYPE,=C'UNMV'   YES - MOVE 'UNMV' TO DETLINE
         B     ETDSORG             END OF TEST DSORG
CNOT     MVC   FILETYPE,=C'NOT '   INDICATE UNKNOWN
ETDSORG  EQU   *                 END OF TEST DSORG
         EJECT
***********************************************************************
*        TESTS RECORD FORMAT                                          *
***********************************************************************
         SPACE 1
TESRECFM LA    R5,RECFORM          ADDRESS OF RECORD FORMAT
         MVI   RECFORM,BLANK       CLEAR
         MVC   RECFORM+1(4),RECFORM   RECFORM
         TM    DS1RECFM,U          TEST IF RECFM = UNDEFINED LENGTH R.
         BZ    CT                  BRANCH TO NEXT TEST
         BM    CF                  BRANCH TO NEXT TEST
         MVI   0(R5),C'U'          MOVE 'U' TO DETLINE
         LA    R5,1(R5)            ADD 1 TO R5
         B     CT                  BRANCH TO NEXT TEST
CF       TM    DS1RECFM,F          TEST IF RECFM = FIXED LENGTH R.
         BZ    CV                  NO - VARIABLE LENGTH R.
         MVI   0(R5),C'F'          YES - MOVE 'F' TO DETLINE
         B     A1
CV       MVI   0(R5),C'V'          MOVE 'V' TO DETLINE
A1       LA    R5,1(R5)            ADD 1 TO R5
CT       TM    DS1RECFM,T          TEST TRACK OVERFLOW
         BZ    CB                  NO - BRANCH TO NEXT TEST
         MVI   0(R5),C'T'          YES- MOVE 'T' TO DETLINE
         LA    R5,1(R5)            ADD 1 TO R5
CB       TM    DS1RECFM,B          TEST IF BLOCKED
         BZ    CS                  NO - BRANCH TO NEXT TEST
         MVI   0(R5),C'B'          YES - MOVE 'B' TO DETLINE
         LA    R5,1(R5)            ADD 1 TO R5
CS       TM    DS1RECFM,S          TEST IF SPANNED
         BZ    CA                  NO - BRANCH TO NEXT TEST
         MVI   0(R5),C'S'          YES - MOVE 'S' TO DETLINE
         LA    R5,1(R5)            ADD 1 TO R5
CA       TM    DS1RECFM,A          TEST IF CONTROL CHARACTER = ANSI
         BZ    CM                  NO - BRANCH TO NEXT TEST
         MVI   0(R5),C'A'          YES - MOVE 'A' TO DETLINE
         LA    R5,1(R5)            ADD 1 TO R5
CM       TM    DS1RECFM,M          TEST IF CONTROL CHARACTER = MACHINE
         BZ    ETRECFM             NO - BRANCH END OF TEST RECFM
         MVI   0(R5),C'M'          YES - MOVE 'M' TO DETLINE
ETRECFM  EQU   *                   END OF TEST RECFM
         EJECT
***********************************************************************
*        RECORD LENGTH, BLOCK SIZE, VOLUME ID., NUMBER OF EXTENTS,    *
*             KEY LENGTH, RELATIVE KEY POSITION AND VOLUME SEQUENCE   *
*             TO PRINT DETAIL LINE                                    *
***********************************************************************
         SPACE 1
         LH    R5,DS1LRECL         LOAD RECORD LENGTH
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(5),DECIMAL+5(3)  UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   RECLEN,DECIMAL      MOVE RECORD LENGTH TO DETLINE
         OI    RECLEN+4,SIGN       FORCE SIGN
         LH    R5,DS1BLKL          LOAD BLOCK SIZE
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(5),DECIMAL+5(3)  UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   BLKS,DECIMAL        MOVE BLOCK SIZE TO DETLINE
         OI    BLKS+4,SIGN         FORCE SIGN
         MVC   VOLID,VOLNAME       MOVE VOLUME ID TO DETLINE
         SR    R5,R5               CLEAR
         IC    R5,DS1NOEPV         LOAD NUMBER OF EXTENTS
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   NOEXT,DECIMAL+1     MOVE NUMBER OF EXTENTS TO DETLINE
         OI    NOEXT+1,SIGN        FORCE SIGN
         MVI   DETLINE+114,BLANK
         MVC   DETLINE+115(13),DETLINE+114
         SR    R5,R5               CLEAR
         IC    R5,DS1KEYL          LOAD KEY LENGTH
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         OI    DECIMAL+2,SIGN      FORCE SIGN
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   KEYLEN,DECIMAL      MOVE KEY LENGTH TO DETLINE
         MVC   RELKEPOS,=C'    '   CLEAR RKP
         CLC   KEYLEN,=C'   '      TEST IF KEY LENGTH IS BLANK
         BE    VOSC                YES - BRANCH TO VOL. SEQ. CONV.
         MVC   DECIMAL,DS1RKP      ALIGNMENT
         LH    R5,DECIMAL          LOAD RELATIVE KEY POSITION
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(5),DECIMAL+5(3) UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   RELKEPOS,DECIMAL+1  MOVE RELATIVE KEY POSITION TO DETLNE
         OI    RELKEPOS+3,SIGN     FORCE SIGN
         EJECT
VOSC     MVC   DECIMAL,DS1VOLSQ    ALIGNMENT
         LH    R5,DECIMAL          LOAD VOLUME SEQUENCE
         CVD   R5,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         OI    DECIMAL+2,SIGN      FORCE SIGN
         MVC   VOLSEQ,DECIMAL+1    MOVE VOLUME SEQUENCE TO DETLINE
         CLI   DS1NOEPV,X'00'      TEST IF PATTERN DSCB
         BNE   NPATDSCB            NO - GOTO NEXT TEST
         MVC   DETLINE+114(14),=C'(PATTERN DSCB)' YES - MOVE TITLE
NPATDSCB EQU   *
         EJECT
***********************************************************************
*        TOTAL ALLOCATION IN NUMBER OF TRACKS                         *
***********************************************************************
         SPACE 1
         BAL   R3,RNTCTF4          PERFORM RESEARCH IN TABLE DSCB F4
         SR    R8,R8               CLEAR
         CLC   DS1PTRDS,CCHHR0     TEST IF POINTER F2/F3 IS = ZERO
         BE    PISZ                YES - BRANCH TO NEXT TEST
         MVC   WARF3(6),VOLNAME    MOVE VOLNAME
         MVC   WARF3+6(5),DS1PTRDS MOVE POINTER TO F2/F3
         BAL   R4,RESF3            PERFORM RESEARCH F2/F3
PISZ     CLI   DS1EXT1,X'00'       TEST IF EXTENT 1 IS EQUAL TO ZERO
         BE    ENDCVEF1            YES  - BRANCH TO END OF CONV. EXT.F1
         LA    R5,DS1EXT1+2        ADDRESS FIRST EXTENT
         BAL   R3,LEXCONV          PERFORM ROUTINE CONVERSION EXTENT
         CLI   DS1EXT2,X'00'       TEST IF EXTENT 2 IS EQUAL TO ZERO
         BE    ENDCVEF1            YES  - BRANCH TO END OF CONV. EXT.F1
         LA    R5,DS1EXT2+2        ADDRESS SECOND EXTENT
         BAL   R3,LEXCONV          PERFORM ROUTINE CONVERSION EXTENT
         CLI   DS1EXT3,X'00'       TEST IF EXTENT 3 IS EQUAL TO ZERO
         BE    ENDCVEF1            YES  - BRANCH TO END OF CONV. EXT.F1
         LA    R5,DS1EXT3+2        ADDRESS THIRD  EXTENT
         BAL   R3,LEXCONV          PERFORM ROUTINE CONVERSION EXTENT
ENDCVEF1 CVD   R8,DECIMAL          CONVERT DECIMAL
         UNPK  DECIMAL(5),DECIMAL+5(3)  UNPACK
         BAL   R3,SUZEBE           PERFORM SUPPRESS ZERO BEFORE
         MVC   TOTALLOC,DECIMAL+1  MOVE TOTAL ALLOC TO DETLINE
         OI    TOTALLOC+3,SIGN     FORCE SIGN
         BAL   R4,DETALINE
         EJECT
***********************************************************************
*              FOR HISTORIC FILE    A/ VTOC'S                         *
*                                   B/ SYSCTLG'S                      *
***********************************************************************
         SPACE 1
         MVC   DSNVTOC,DSNAME
         LA    R5,DSNVTOC+1        ADDRESS DSNVTOC
         LA    R6,35               ZERO AND ADD 35
LRGDG    CLC   0(2,R5),=C'.G'      TEST IF THIS DATA SET IS A GDG
         BE    CONFIRME            YES - BRANCH TO CONFIRME
CONRES   LA    R5,1(R5)            ADDRESS FOR NEXT TEST
         BCT   R6,LRGDG            REPEAT
         B     ERGDG               BRANCH TO NEXT TEST
CONFIRME CLC   6(3,R5),=C'V00'     CONFIRME IF GDG
         BE    SGDG                YES
         B     CONRES              NO
SGDG     MVI   0(R5),BLANK         MOVE BLANK
         MVC   1(8,R5),0(R5)          ON GDG INFORMATION
ERGDG    CLC   DSNJCL,DSNVTOC
         BL    RNJCL
         BE    TIDUP               BRANCH TO TEST IF DUPLICATE DS
         BH    EXCEP
RNJCL    LA    R5,DSNCATLG+1       ADDRESS DSNCATLG
         LA    R6,35               ZERO AND ADD 35
LRGDGC   CLC   0(2,R5),=C'.G'      TEST IF THIS DATA SET IS A GDG
         BE    CONFIR              YES - BRANCH TO CONFIR
CONRE    LA    R5,1(R5)            ADDRESS FOR NEXT TEST
         BCT   R6,LRGDGC           REPEAT
         B     ERGDGC              BRANCH TO NEXT TEST
CONFIR   CLC   6(3,R5),=C'V00'     CONFIRME IF GDG
         BE    SGDGC               YES
         B     CONRE               NO
SGDGC    MVI   0(R5),BLANK         MOVE BLANK
         MVC   1(8,R5),0(R5)          ON GDG INFORMATION
ERGDGC   CLC   DSNCATLG,DSNJCL
         BL    TAPEX
         BH    RNFJCL
         CLI   DSNCATLG,X'FF'
         BE    ERGDG
         BAL   R4,RNF100
         B     RNJCL
TAPEX    BAL   R4,DETELINE
         BAL   R4,RNF100
         B     RNJCL
ENDF100  MVI   DSNCATLG,X'FF'
         MVC   DSNCATLG+1(43),DSNCATLG
         CLI   F100,X'FF'          TEST IF CATLG FILE IS EMPTY
         BNE   SRA                 BRANCH IF YES
         CLI   DSNVTOC,X'FF'
         BE    CLOSE
         B     ERGDGC
RNFJCL   GET   T581FJCL
         MVC   DSNJCL,32(R1)       SAVE DSNAME FROM SYS1 / TEST.PROCLIB
         CLI   DSNJCL,C'Z'         TEST IF FIRST POSITION > Z
         BH    RNJCL               YES
         CLI   DSNVTOC,X'FF'
         BE    ERGDGC
         B     ERGDG               NO
ENDFJCL  MVI   DSNJCL,X'FF'        MOVE HIGH VALUE
         MVC   DSNJCL+1(43),DSNJCL      TO DSNJCL
         CLI   JCLS,X'FF'          TEST IF JCL FILE EMPTY
         BNE   READF100            BRANCH IF YES
         B     ERGDGC
EXCEP    BAL   R4,DETBLINE
         EJECT
***********************************************************************
*        TEST IF DUPLICATE DATA SET                                   *
***********************************************************************
         SPACE 1
TIDUP    CLC   DSNAME(8),=C'SYSCTLG '   TEST IF THIS DSNAME = SYSCTLG
         BE    NODUP1              YES - BRANCH TO NEXT TEST
         CLC   WAP+1(44),DSNAME    TEST IF THIS DSNAME = LAST ONE DSN
         BNE   NODUP1              NO - BRANCH TO NEXT TEST
         CLC   WAP+131(2),VOLSEQ   CONFIRME IF DUPLICATE DATA SET
         BNE   NODUP1              NO - BRANCH TO NEXT TEST
         CLI   WAP,X'FF'
         BE    NODUP0
         MVC   DATASETN,DSNAME     MOVE DSNAME FOR LOCATE MACRO
         LOCATE ISITCTLG
         ST    R15,RCLOCATE        SAVE RETURN CODE
NODUP0   LA    R4,ETCATLG          ADDRESS ETCATLG
TISCATLG L     R5,RCLOCATE         LOAD RETURN CODE FROM LOCATE MACRO
         LTR   R5,R5               TEST IF ZERO
         BNE   NOCATLG             NO - BRANCH TO NEXT TEST
         LA    R5,WACTLG+6         ADDRESS FIRST VOLUME
         LA    R7,20               ZERO AND ADD 20
LCNB     CLC   0(6,R5),WAP+91
         BNE   CNB
         MVC   WAP+114(12),=C'CATALOGED   '
         BR    R4
CNB      LA    R5,12(R5)           ADD 12 TO R5
         BCT   R7,LCNB             REPEAT
NOCATLG  MVC   WAP+114(12),=C'NOT CATLG   '
         BR    R4
ETCATLG  MVI   WAP,SPACE1          MOVE CONTROL CHAR. (SP.1 AFTER W.)
         BAL   R4,DETCLINE         PERFORM PRINT DETAIL LINE (T581R05C)
         MVC   WAP,DETLINE         SAVE THIS DETAIL LINE
         MVI   WAP,X'FF'
         B     TP62
NODUP1   CLI   WAP,X'FF'
         BNE   NODUP2
         BAL   R4,TISCATLG         PERFORM TEST IF IN CATALOG
         MVI   WAP,SPACE1          MOVE CONTROL CHAR. (SP.1 AFTER W.)
         BAL   R4,DETCLINE         PERFORM PRINT DETAIL LINE (T581R05C)
NODUP2   MVC   WAP,DETLINE         SAVE THIS DETAIL LINE
         B     TP62
         SPACE 3
ISITCTLG CAMLST NAME,DATASETN,,WACTLG
         EJECT
***********************************************************************
*        TEST POSITION 62 FOR DSCB FORMAT 1.                          *
*              IF 'Y' THE DATA SET IS CATALOGUED                      *
*              IF 'N' THE DATA SET IS NOT CATALOGUED                  *
*              REMEMBER 'Y' OR 'N' IS PUT IN POS. 62 IN THE           *
*              PROGRAM T581P02, WHEN THE VTOC IS READING.             *
***********************************************************************
         SPACE 1
TP62     CLI   P62,C'N'
         BNE   READF010
         BAL   R4,DETDLINE         PERFORM PRINT DETAIL LINE (R05D)
         B     READF010
         EJECT
***********************************************************************
*        PRINT HEAD LINES                                             *
***********************************************************************
         SPACE 1
HEADLINE CLI   SWREPORT,C'B'       TEST SWITCH REPORT
         BL    R05A                T581R05A
         BE    R05B                T581R05B
         CLI   SWREPORT,C'D'       TEST SWITCH REPORT
         BL    R05C                T581R05C
         BE    R05D                T581R05D
         BH    R05E                T581R05E
R05A     AP    PAGEA,ONE           ADD ONE TO PAGECOUNT
         UNPK  DECIMAL(3),PAGEA     UNPACK PAGE COUNT
         OI    DECIMAL+2,SIGN      FORCE SIGN
         LA    R3,WRITEHA          ADDRESS WRITE HEAD LINES
         B     SUZEBE              BRANCH TO SUPPRESS ZERO BEFORE
R05B     AP    PAGEB,ONE           ADD ONE TO PAGE COUNT
         UNPK  DECIMAL(3),PAGEB    UNPACK PAGEB
         OI    DECIMAL+2,SIGN      FORCE SIGN
         LA    R3,WRITEHB          ADDRESS WRITE HEAD LINES
         B     SUZEBE              BRANCH TO SUPPRESS ZERO BEFORE
R05C     AP    PAGEC,ONE           ADD ONE TO PAGE COUNT
         UNPK  DECIMAL(3),PAGEC    UNPACK PAGEC
         OI    DECIMAL+2,SIGN      FORCE SIGN
         LA    R3,WRITEHC          ADDRESS WRITE HEAD LINES
         B     SUZEBE              BRANCH TO SUPPRESS ZERO BEFORE
R05D     AP    PAGED,ONE           ADD ONE TO PAGE COUNT
         UNPK  DECIMAL(3),PAGED    UNPACK PAGED
         OI    DECIMAL+2,SIGN      FORCE SIGN
         LA    R3,WRITEHD          ADDRESS WRITE HEAD LINES
         B     SUZEBE              BRANCH TO SUPPRESS ZERO BEFORE
R05E     AP    PAGEE,ONE           ADD ONE TO PAGE COUNT
         UNPK  DECIMAL(3),PAGEE    UNPACK PAGEE
         OI    DECIMAL+2,SIGN      FORCE SIGN
         LA    R3,WRITEHE          ADDRESS WRITE HEAD LINES
SUZEBE   CLI   DECIMAL,ZERO        TEST IF FIRST POS OF DECIMAL = ZERO
         BE    D2P                 YES - TEST SECOND POS.
         BR    R3                  NO
D2P      MVI   DECIMAL,BLANK       MOVE BLANK TO FIRST POS.
         CLI   DECIMAL+1,ZERO      TEST IF SECOND POS OF DECIMAL = ZERO
         BE    D3P                 YES - TEST THIRD POS.
         BR    R3                  NO
D3P      MVI   DECIMAL+1,BLANK     MOVE BLANK TO SECOND POS.
         CLI   DECIMAL+2,ZERO      TEST IF THIRD POS OF DECIMAL = ZERO
         BE    D4P                 YES - TEST POS. FOUR
         BR    R3                  NO
D4P      MVI   DECIMAL+2,BLANK     MOVE BLANK TO THIRD  POS.
         CLI   DECIMAL+3,ZERO      TEST IF POS FOUR OF DECIMAL = ZERO
         BE    D5P                 YES - END OF TEST
         BR    R3                  NO
D5P      MVI   DECIMAL+3,BLANK     MOVE BLANK TO POS. FOUR
         BR    R3
         EJECT
WRITEHA  MVC   PAGE,DECIMAL        MOVE PAGE COUNT TO FIRST HEAD LINE
         MVC   TITLE,NLREPORT      TITLE
         PUT   T581R05A,HEADLNE1   WRITE FIRST HEAD LINE
         PUT   T581R05A,HEADLNE2   WRITE SECOND HEAD LINE
         PUT   T581R05A,HEADLNE3   WRITE THIRD HEAD LINE
         ZAP   LINEA,FIVE          ZERO AND ADD FIVE TO LINE COUNT
         BR    R4
         SPACE 3
WRITEHB  MVC   PAGE,DECIMAL        MOVE PAGE COUNT TO FIRST HEAD LINE
         MVC   TITLE,EXREPORT      TITLE
         PUT   T581R05B,HEADLNE1   WRITE FIRST HEAD LINE
         PUT   T581R05B,HEADLNE2   WRITE SECOND HEAD LINE
         PUT   T581R05B,HEADLNE3   WRITE THIRD HEAD LINE
         ZAP   LINEB,FIVE          ZERO AND ADD FIVE TO LINE COUNT
         BR    R4
         SPACE 3
WRITEHC  MVC   PAGE,DECIMAL        MOVE PAGE COUNT TO FIRST HEAD LINE
         MVC   TITLE,DPREPORT      TITLE
         PUT   T581R05C,HEADLNE1   WRITE FIRST HEAD LINE
         MVC   HEADLNE2+114(15),TR05CL1
         PUT   T581R05C,HEADLNE2   WRITE SECOND HEAD LINE
         MVC   HEADLNE2+114(15),TR05ABL1
         MVC   HEADLNE3+114(15),TR05CL2
         PUT   T581R05C,HEADLNE3   WRITE THIRD HEAD LINE
         MVC   HEADLNE3+114(15),TR05ABL2
         ZAP   LINEC,FIVE          ZERO AND ADD FIVE TO LINE COUNT
         BR    R4
         SPACE 3
WRITEHD  MVC   PAGE,DECIMAL        MOVE PAGE COUNT TO FIRST HEAD LINE
         MVC   TITLE,NCREPORT      TITLE
         PUT   T581R05D,HEADLNE1   WRITE FIRST HEAD LINE
         PUT   T581R05D,HEADLNE2   WRITE SECOND HEAD LINE
         PUT   T581R05D,HEADLNE3   WRITE THIRD HEAD LINE
         ZAP   LINED,FIVE          ZERO AND ADD FIVE TO LINE COUNT
         BR    R4
         SPACE 3
WRITEHE  MVC   PAGE,DECIMAL        MOVE PAGE COUNT TO FIRST HEAD LINE
         MVC   TITLE,TPREPORT      TITLE
         PUT   T581R05E,HEADLNE1   WRITE FIRST HEAD LINE
         PUT   T581R05E,HEADLNE4   WRITE SECOND HEAD LINE
         ZAP   LINEE,FIVE          ZERO AND ADD FIVE TO LINE COUNT
         BR    R4
         EJECT
***********************************************************************
*        PRINT DETAIL LINE                                            *
***********************************************************************
         SPACE 1
DETALINE LR    R5,R4             SAVE R4
         CP    LINEA,L55         TEST IF LINE COUNT IS GREATER THAN 55
         BNH   WRITEDA           NO -BRANCH TO WRITE DETAIL LINE
         MVI   DETLINE,SKIP      MOVE CONTROL CHAR. ( SKIP AFTER WRITE)
         PUT   T581R05A,DETLINE  WRITE DETAIL LINE
         MVI   DETLINE,SPACE1    MOVE CONTROL CHAR. ( SP.1 AFTER WRITE)
         MVI   SWREPORT,C'A'       T581R05A
         BAL   R4,HEADLINE       PERFORM WRITE HEAD LINES
         LR    R4,R5             RESTORE R4
         BR    R4
WRITEDA  PUT   T581R05A,DETLINE  WRITE DETAIL LINE
         AP    LINEA,ONE         ADD ONE TO LINE COUNT
         BR    R4
         SPACE 3
DETBLINE LR    R5,R4             SAVE R4
         CP    LINEB,L55         TEST IF LINE COUNT IS GREATER THAN 55
         BNH   WRITEDB           NO -BRANCH TO WRITE DETAIL LINE
         MVI   DETLINE,SKIP      MOVE CONTROL CHAR. ( SKIP AFTER WRITE)
         PUT   T581R05B,DETLINE  WRITE DETAIL LINE
         MVI   DETLINE,SPACE1    MOVE CONTROL CHAR. ( SP.1 AFTER WRITE)
         MVI   SWREPORT,C'B'       T581R05B
         BAL   R4,HEADLINE       PERFORM WRITE HEAD LINES
         LR    R4,R5             RESTORE R4
         BR    R4
WRITEDB  PUT   T581R05B,DETLINE  WRITE DETAIL LINE
         AP    LINEB,ONE         ADD ONE TO LINE COUNT
         BR    R4
         SPACE 3
DETCLINE LR    R5,R4             SAVE R4
         CP    LINEC,L55         TEST IF LINE COUNT IS GREATER THAN 55
         BNH   WRITEDC           NO -BRANCH TO WRITE DETAIL LINE
         MVI   WAP,SKIP          MOVE CONTROL CHAR. ( SKIP AFTER WRITE)
         PUT   T581R05C,WAP        WRITE DETAIL LINE
         MVI   WAP,SPACE1        MOVE CONTROL CHAR. ( SP.1 AFTER WRITE)
         MVI   SWREPORT,C'C'       T581R05C
         BAL   R4,HEADLINE       PERFORM WRITE HEAD LINES
         LR    R4,R5             RESTORE R4
         BR    R4
WRITEDC  PUT   T581R05C,WAP        WRITE DETAIL LINE
         AP    LINEC,ONE         ADD ONE TO LINE COUNT
         BR    R4
         EJECT
DETDLINE LR    R5,R4             SAVE R4
         CP    LINED,L55         TEST IF LINE COUNT IS GREATER THAN 55
         BNH   WRITEDD           NO -BRANCH TO WRITE DETAIL LINE
         MVI   DETLINE,SKIP      MOVE CONTROL CHAR. ( SKIP AFTER WRITE)
         PUT   T581R05D,DETLINE  WRITE DETAIL LINE
         MVI   DETLINE,SPACE1    MOVE CONTROL CHAR. ( SP.1 AFTER WRITE)
         MVI   SWREPORT,C'D'       T581R05D
         BAL   R4,HEADLINE       PERFORM WRITE HEAD LINES
         LR    R4,R5             RESTORE R4
         BR    R4
WRITEDD  PUT   T581R05D,DETLINE  WRITE DETAIL LINE
         AP    LINED,ONE         ADD ONE TO LINE COUNT
         BR    R4
         SPACE 3
DETELINE LR    R5,R4             SAVE R4
         CP    LINEE,L55         TEST IF LINE COUNT IS GREATER THAN 55
         BNH   WRITEDE           NO -BRANCH TO WRITE DETAIL LINE
         MVI   WARE,SKIP         MOVE CONTROL CHAR. ( SKIP AFTER WRITE)
         PUT   T581R05E,WARE     WRITE DETAIL LINE
         MVI   WARE,BLANK        MOVE CONTROL CHAR. ( SP.1 AFTER WRITE)
         MVI   SWREPORT,C'E'       T581R05E
         BAL   R4,HEADLINE       PERFORM WRITE HEAD LINES
         LR    R4,R5             RESTORE R4
         BR    R4
WRITEDE  PUT   T581R05E,WARE     WRITE DETAIL LINE
         AP    LINEE,ONE         ADD ONE TO LINE COUNT
         BR    R4
         EJECT
***********************************************************************
*        SYNAD AND ABEND ROUTINE                                      *
***********************************************************************
         SPACE 1
ERF100   MVC   MIOER+47(3),=C'100' I/O ERROR ON T581F100
         B     ERF010
ERFJCL   MVC   MIOER+47(3),=C'JCL' I/O ERROR ON T581FJCL
ERF010   SYNADAF ACSMETH=QSAM
         LR    R2,R1             SAVE R1
         MVC   WAP(68),MIOER     MOVE MGS ERROR
         PUT   T581R05A,WAP      WRITE I/O ERROR MGS
         MVC   WAP+1(68),50(R2)
         PUT   T581R05A,WAP      WRITE I/O ERROR MGS
         SYNADRLS
         ABEND 581,,STEP           ABEND WITHOUT DUMP
         SPACE 1
ERTMF2   MVC   WAP+1(L'MGTMF2),MGTMF2   MOVE ERROR MSG
         B     ABEND                    BRANCH TO ABEND
ERTMF3   MVC   WAP+1(L'MGTMF3),MGTMF3   MOVE ERROR MSG
         B     ABEND                    BRANCH TO ABEND
ERTMF4   MVC   WAP+1(L'MGTMF4),MGTMF4   MOVE ERROR MSG
         B     ABEND                    BRANCH TO ABEND
ABEND    PUT   T581R05A,WAP             WRITE ERROR MSG
         ABEND 581,DUMP            ABEND WITH DUMP
         SPACE 3
***********************************************************************
*        CLOSE THE FILES AND END OF PROGRAM                           *
***********************************************************************
         SPACE 1
ENDF010  CLI   DSNCATLG,X'FF'
         BE    CLOSE
         MVI   DSNVTOC,X'FF'
         MVC   DSNVTOC+1(43),DSNVTOC
         B     RNJCL
CLOSE    CLOSE (T581F010,,T581FJCL,,T581R05A,,T581F100)
         CLOSE (T581R05B,,T581R05C,,T581R05D,,T581R05E)
         SPACE 3
         PGMOUT ,                  END OF PROGRAM
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
T581FJCL DCB   DDNAME=T581FJCL,                                        C
               DSORG=PS,                                               C
               EODAD=ENDFJCL,                                          C
               MACRF=GL,                                               C
               SYNAD=ERFJCL,                                           C
               RECFM=FB,                                               C
               LRECL=202,                                              C
               BLKSIZE=2020
         SPACE 3
T581F010 DCB   DDNAME=T581F010,                                        C
               DSORG=PS,                                               C
               EODAD=ENDF010,                                          C
               MACRF=GM,                                               C
               SYNAD=ERF010,                                           C
               RECFM=FB,                                               C
               LRECL=160,                                              C
               BLKSIZE=1600
         SPACE 3
T581F100 DCB   DDNAME=T581F100,                                        C
               DSORG=PS,                                               C
               EODAD=ENDF100,                                          C
               MACRF=GL,                                               C
               SYNAD=ERF100,                                           C
               RECFM=FB,                                               C
               LRECL=100,                                              C
               BLKSIZE=1600
         SPACE 3
T581R05A DCB   DDNAME=T581R05A,                                        C
               DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         SPACE 3
T581R05B DCB   DDNAME=T581R05B,                                        C
               DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         EJECT
T581R05C DCB   DDNAME=T581R05C,                                        C
               DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         SPACE 3
T581R05D DCB   DDNAME=T581R05D,                                        C
               DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         SPACE 3
T581R05E DCB   DDNAME=T581R05E,                                        C
               DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         EJECT
***********************************************************************
*        DEFINITION FOR DSCB FORMAT 1                                 *
***********************************************************************
         SPACE 1
         DS    0D
FORMAT1  DS    0CL160
DS1DSNAM DS    CL44                DATA SET NAME
DS1FMTID DS    C                   FORMAT IDENTIFIER
DS1DSSN  DS    CL6                 DATA SET SERIAL NUMBER
DS1VOLSQ DS    CL2                 VOLUME SEQUENCE NO.
DS1CREDT DS    CL3                 CREATION DATE
DS1EXPDT DS    CL3                 EXPIRATION DATE
DS1NOEPV DS    C                   NO. OF EXTENTS
DS1NOBDB DS    C
P62      DS    C                   'Y' IF DS CATLG, 'N' IF NOT CATLG
DS1SYSCD DS    CL13                PROGRAMMING SYSTEM CODE ID
         DS    CL7                 RESERVED
DS1DSORG DS    C                   DATA SET ORGANIZATION
         DS    C                   RESERVED
DS1RECFM DS    C                   RECORD FORMAT
DS1OPTCD DS    C                   OPTION CODES
DS1BLKL  DS    CL2                 BLOCK LENGTH
DS1LRECL DS    CL2                 LOGICAL LENGTH
DS1KEYL  DS    CL1                 KEY LENGTH
DS1RKP   DS    CL2                 RELATIVE KEY POSITION
DS1DSIND DS    C                   DATA SET INDICATORS
DS1SCALO DS    CL4                 ALLOCATION PARAMETERS
DS1LSTAR DS    CL3                 POINTER TO LAST WRITTEN BLOCK
DS1TRBAL DS    CL2                 LL PART OF DISK ADDRESS
         DS    CL2                 RESERVED
DS1EXT1  DS    CL10                FIRST EXTENT DESCRIPTION
DS1EXT2  DS    CL10                SECOND EXTENT DESCRIPTION
DS1EXT3  DS    CL10                THIRD EXTENT DESCRIPTION
DS1PTRDS DS    CL5                 DIRECT-ACCESS ADDRESS OF NEXT DSCB
         DS    CL9                 YYDDDHHMM WHEN RECORD CREATED
ORCCHHR  DS    CL5                 CCHHR OF ORIGINAL DSCB IN VTOC
VOLNAME  DS    CL6                 VOLUME ID
         EJECT
***********************************************************************
*        DEFINITION FOR DSCB FORMAT 2 , 3 AND 4                       *
***********************************************************************
         SPACE 1
FORMAT2  EQU   FORMAT1
DS2PTRDS EQU   FORMAT2+135    POINTER TO FORMAT 3 DSCB  (CCHHR)
         SPACE 3
FORMAT3  EQU   FORMAT2
DS3EXTNT EQU   FORMAT3+4      (L'40)    4 EXTENTS DESCRIPTION
DS3ADEXT EQU   FORMAT3+45     (L'90)    9 EXTENTS DESCRIPTION
         SPACE 3
FORMAT4  EQU   FORMAT3
DS4DEVSZ EQU   FORMAT4+62     NO OF LOG. CYL OR NO OF TRACKS
         EJECT
***********************************************************************
*        DEFINITION FOR T581R05A,B,C                                  *
***********************************************************************
         SPACE 1
HEADLNE1 DS    0CL133              HEAD LINE 1
         DC    X'11'               SPACE 2 AFTER WRITE
         DC    CL29'T581P05/'
SWREPORT EQU   HEADLNE1+9
TITLE    DC    CL61' '
         DC    CL7'  DATE '
DATE     DC    CL9' '
         DC    CL7'  TIME '
TIMEHH   DC    CL2' '
         DC    C'.'
TIMEMM   DC    CL2' '
         DC    CL5' '
         DC    CL6'PAGE'
PAGE     DS    CL3
HEADLNE2 DS    0CL133              HEAD LINE 2
         DC    X'09'               SPACE 1 AFTER WRITE
         DC    CL44'*-----------  DATA SET NAME  --------------*'
         DC    CL44'   DATE    DATE  FILE  RECORD  RECORD  BLOCK'
         DC    CL44'   FILE   NO OF   TOTAL   KEY   RELATIVE VOL'
HEADLNE3 DS    0CL133              HEAD LINE 3
         DC    X'11'               SPACE 2 AFTER WRITE
         DC    CL44' '
         DC    CL44' CREATED  PURGE  TYPE  FORMAT  LENGTH   SIZE'
         DC    CL44'  SERIAL EXTENTS  ALLOC  LENGTH KEY POS. SEQ'
HEADLNE4 DS    0CL133              ONLY FOR R05E
         DC    X'11'               SPACE 2 AFTER WRITE
         DC    CL44'*----------- DATA SET NAME ----------------*'
         DC    CL44'   VOLUME ID.   SEQ.NO   MULTI-VOL.SEQ.NO   '
         DC    CL44' '
         SPACE 1
DETLINE  DS    0CL133
         DC    X'09'               SPACE 1 AFTER WRITE
DSNAME   DS    CL44      DATA SET NAME
         DC    C' '
CYEAR    DS    CL2       YEAR CREATED
         DC    C'.'
CDDD     DS    CL3       DAY OF THE YEAR CREATED
         DC    CL2' '
PYEAR    DS    CL2       YEAR PURGE
         DC    C'.'
PDDD     DS    CL3       DAY OF THE YEAR PURGE
         DC    CL2' '
FILETYPE DS    CL4       FILE TYPE  ( SEQ. - PART - I.S. - D.A. - NOT )
         DC    CL4' '
RECFORM  DS    CL4       RECORD FORMAT
         DC    CL2' '
RECLEN   DS    CL5       RECORD LENGTH
         DC    CL3' '
BLKS     DS    CL5       BLOCK SIZE
         DC    CL2' '
VOLID    DS    CL6       VOLUME NAME
         DC    CL3' '
NOEXT    DS    CL2       NUMBER OF EXTENTS
         DC    CL5' '
TOTALLOC DS    CL4       TOTAL ALLOCATION IN TRACKS
         DC    CL5' '
KEYLEN   DS    CL3       KEY LENGTH
         DC    CL4' '
RELKEPOS DS    CL4       RELATIVE KEY POSITION
         DC    CL4' '
VOLSEQ   DS    CL2       VOLUME SEQUENCE
WAP      DC    CL133' '  WORK AREA FOR T581R05A,B,C
WARE     DC    CL133' '  WORK AREA FOR T581R05E
         EJECT
***********************************************************************
*        WORK AREAS                                                   *
***********************************************************************
         SPACE 1
DECIMAL  DS    D                   WORK AREA FOR DECIMAL OPERATION
TABADF2  DC    F'0'
TABADF3  DC    5F'0'
TABADF4  DC    3F'0'
NODSCB2  DC    F'0'
NODSCB3  DC    F'0'
NODSCB4  DC    F'0'
SAVAF3   DC    4F'0'               SAVE AREA
         DC    A(TABADF3)               FOR DSCB F3
NTRKSF3  DC    F'0'                SA
NOTRKS   DS    H                   NO OF TRACKS PER LOG. CYLINDER
WARF3    DS    CL11                WORK AREA FOR RESEARCH IN TABLE F3
JCLS     DC    X'00'
F100     DC    X'00'
LINEA    DC    PL2'0'              LINE COUNT
LINEB    DC    PL2'0'              LINE COUNT
LINEC    DC    PL2'0'              LINE COUNT
LINED    DC    PL2'0'              LINE COUNT
LINEE    DC    PL2'0'              LINE COUNT
PAGEA    DC    PL2'0'              PAGE COUNT
PAGEB    DC    PL2'0'              PAGE COUNT
PAGEC    DC    PL2'0'              PAGE COUNT
PAGED    DC    PL2'0'              PAGE COUNT
PAGEE    DC    PL2'0'              PAGE COUNT
DSNJCL   DC    XL44'00'            DSNAME FROM SYS1 OR TEST.PROCLIB
DSNVTOC  DC    XL44'00'            DSNAME FROM DSCB FORMAT 1
DSNCATLG DC    XL44'00'            DSNAME FROM HISTORIC FILE SYSCTLG
DATASETN DS    CL44                DATASET NAME FOR LOCATE MACRO
WACTLG   DS    0D                  WORK AREA
         DS    CL265                    FOR LOCATE MACRO
RCLOCATE DC    F'0'                RETURN CODE FROM LOCATE MACRO
         EJECT
***********************************************************************
*        CONSTANTS , EQUATES AND LITTERAL POOL                        *
***********************************************************************
         SPACE 1
TR05ABL1 DC    CL15' KEY   RELATIVE'
TR05CL1  DC    CL15' '
TR05ABL2 DC    CL15'LENGTH KEY POS.'
TR05CL2  DC    CL15' '
MIOER    DC    X'09'             SPACE 1 AFTER WRITE
         DC    CL50'* T581P05 - I/O ERROR FOR DS WITH DDNAME T581F010 '
         DC    CL17'MORE DATA FOLLOWS'
MGTMF2   DC    C'NUMBER OF DSCB''S FORMAT 2 IS GREATER THAN 150'
MGTMF3   DC    C'NUMBER OF DSCB''S FORMAT 3 IS GREATER THAN 250'
MGTMF4   DC    C'NUMBER OF DSCB''S FORMAT 4 IS GREATER THAN 150'
ONE      DC    P'1'
TWO      DC    P'2'
FIVE     DC    P'5'
L55      DC    PL2'55'
EXREPORT DC    CL61'DASD DATA SET EXCEPTION REPORT'
DPREPORT DC    CL61'DASD DUPLICATE DATA SET REPORT'
NLREPORT DC    CL61'DASD DATA SET REPORT'
NCREPORT DC    CL61'DASD DATA SET THAT ARE NOT CATALOGUED'
TPREPORT DC    CL61'TAPE DATA SET EXCEPTION REPORT'
DTPURGE  DC    C'00.000'
CCHHR0   DC    XL5'0'
         SPACE 3
IS       EQU   B'10000000'        **
PS       EQU   B'01000000'         *
DA       EQU   B'00100000'          > FOR DSORG TESTS
PO       EQU   B'00000010'         *
UM       EQU   B'00000001'        **
         SPACE 1
F        EQU   B'10000000'        **
V        EQU   B'01000000'         *
U        EQU   B'11000000'         *
T        EQU   B'00100000'          > FOR RECFM TESTS
B        EQU   B'00010000'         *
S        EQU   B'00001000'         *
A        EQU   B'00000100'         *
M        EQU   B'00000010'        **
         SPACE 1
BLANK    EQU   X'40'
ZERO     EQU   X'F0'
SIGN     EQU   X'F0'
SKIP     EQU   X'89'
SPACE2   EQU   X'11'
SPACE1   EQU   X'09'
         END
