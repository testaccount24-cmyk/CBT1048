 T580P10: PROC OPTIONS(MAIN);

         DCL   T58RATE FILE RECORD SEQUENTIAL,
               T58F110 FILE RECORD SEQUENTIAL,
               T58F111 FILE RECORD SEQUENTIAL,
               T58F112 FILE RECORD SEQUENTIAL,
               T58F113 FILE RECORD SEQUENTIAL,
               T58F130 FILE RECORD SEQUENTIAL,
               T58F120 FILE RECORD SEQUENTIAL,
               T58F121 FILE RECORD SEQUENTIAL,
               T58C100 FILE RECORD SEQUENTIAL,
               T58R100 FILE RECORD SEQUENTIAL,
               T58F050 FILE RECORD SEQUENTIAL,
               T58F150 FILE RECORD SEQUENTIAL,

             1 RATE_CARD,
             3 RATE_DATS CHAR(5),
             3 RATE_FIL1 CHAR(1),
             3 RATE_DATE CHAR(5),
             3 RATE_FIL2 CHAR(1),
             3 RATE_EXEC PIC '999V99',
             3 RATE_FIL3 CHAR(1),
             3 RATE_PRPU PIC '999V99',
             3 RATE_FIL4 CHAR(1),
             3 RATE_SYS  PIC '999V99',
             3 RATE_FIL5 CHAR(46),
             3 RATE_DAT2 CHAR(5),

             1 COST_CARD,
             3 COST_IDNT CHAR(6),
             3 COST_CNTR CHAR(5),
             3 COST_CHRG CHAR(4),
             3 COST_DESC CHAR(15),
             3 COST_OSYS  PIC '999R',                                    0000340
             3 COST_OPRP PIC '999999V99R',
             3 COST_OEXE PIC '999999V9R',
             3 COST_CAT  CHAR(2),
             3 COST_SYS  PIC '99999V9R',
             3 COST_PRPU PIC '99999V9R',
             3 COST_EXEC PIC '999999V9R',
             3 COST_DATE CHAR(5),

             1 AMND_CARD DEFINED COST_CARD,
             3 AMND_IDNT CHAR(6),
             3 AMND_PSEU CHAR(1),
             3 AMND_CNTR CHAR(4),
             3 AMND_COST CHAR(4),
             3 AMND_DESC CHAR(15),
             3 AMND_OSYS CHAR(4),
             3 AMND_OPRP CHAR(9),
             3 AMND_OEXE CHAR(8),
             3 AMND_CAT  CHAR(2),
             3 AMND_SYS  CHAR(7),
             3 AMND_PRPU CHAR(7),
             3 AMND_EXEC CHAR(8),
             3 AMND_DATE CHAR(5),

             1 COST_MOVE DEFINED COST_CARD,
             3 COST_FILL CHAR(80),

             1 STOR_CARD,
             3 STOR_IDNT CHAR(6),
             3 STOR_PSEU CHAR(1),
             3 STOR_CNTR CHAR(4),
             3 STOR_CHRG CHAR(4),
             3 STOR_DESC CHAR(15),
             3 STOR_OSYS  PIC '999R',                                    0000670
             3 STOR_OPRP PIC '999999V99R',
             3 STOR_OEXE PIC '999999V9R',
             3 STOR_CAT  CHAR(2),
             3 STOR_SYS  PIC '99999V9R',
             3 STOR_PRPU PIC '99999V9R',
             3 STOR_EXEC PIC '999999V9R',
             3 STOR_DATE CHAR(5),

             1 STOR_MOVE DEFINED STOR_CARD,
             3 STOR_FILL CHAR(80),

             1 PROJ_CARD,
             3 PROJ_PROJ CHAR(4),
             3 PROJ_CHRG CHAR(4),
             3 PROJ_CNTR CHAR(5),
             3 PROJ_PROP PIC '9V99',
             3 PROJ_FIL1 CHAR(64),

             1 PROJ_SROR (20),
             3 PSTR_CHRG CHAR(4) INIT((20)(4)' '),
             3 PSTR_CNTR CHAR(5) INIT((20)(5)' '),
             3 PSTR_PROP PIC '9V99',

             1 XDATE CHAR(6),
             1 XDTE DEFINED XDATE,
             3 XYEAR CHAR(2),
             3 XMONTH PIC '99',
             3 XDAY CHAR(2),
             1 YDATE CHAR(9),
             1 YDTE DEFINED YDATE,
             3 YDAY CHAR(2),
             3 YFILA CHAR(1),
             3 YMONTH CHAR(3),
             3 YFILB CHAR(1),
             3 YYEAR CHAR(2),
             1 ZMONTH (12) CHAR(3) INIT('JAN','FEB','MAR','APR',
                                        'MAY','JUN','JUL','AUG',
                                        'SEP','OCT','NOV','DEC'),

             1 MESSAGES,
             3 SORC_HASP CHAR(6) INIT('HASP  '),
             3 SORC_UPDT CHAR(6) INIT('UPDATE'),
             3 SORC_NONE CHAR(6) INIT('NONE  '),
             3 SORC_PSEU CHAR(6) INIT('PSEUDO'),
             3 SORC_TIME CHAR(6) INIT('TIME  '),
             3 SORC_YTD  CHAR(6) INIT('YTD   '),
             3 SORC_OS   CHAR(6) INIT('OS    '),
             3 ACTN_IGNR CHAR(18) INIT('IGNORED - BAD ID  '),
             3 ACTN_AYTD CHAR(18) INIT('ADDED TO YTD      '),
             3 ACTN_AMTD CHAR(18) INIT('ADDED TO YTD & MTD'),
             3 ACTN_DLET CHAR(18) INIT('PSEUDO - DELETED  '),
             3 ACTN_DESC CHAR(18) INIT('ADDED TO DESCRIPTN'),
             3 ACTN_NNUM CHAR(18) INIT('NONNUMERIC-IGNORED'),

             1 HEADING0,
             3 HEAD0_FIL1 CHAR(5) INIT('1'),
             3 HEAD0_DATE CHAR(9),
             3 HEAD0_FIL2 CHAR(23) INIT(' '),
             3 HEAD0_FIL3 CHAR(85)
               INIT('MISD CHARGE OUT SYSTEM STATUS AND UPDATE REPORT'),
             3 HEAD0_FIL4 CHAR(5) INIT('PAGE'),
             3 HEAD0_PAGE PIC 'ZZ9BBB',

             1 HEADING1,
             3 HEAD1_FIL1 CHAR(2) INIT('-'),
             3 HEAD1_FIL2 CHAR(8) INIT('DATA'),
             3 HEAD1_FIL3 CHAR(48)
               INIT('*----------------------------------------------'),
             3 HEAD1_FIL4 CHAR(7) INIT('RECORD'),
             3 HEAD1_FIL5 CHAR(56)
               INIT('----------------------------------------------*'),
             3 HEAD1_FIL6 CHAR(12) INIT('ACTION'),

             1 HEADING2,
             3 HEAD2_FIL1 CHAR(10) INIT(' SOURCE'),
             3 HEAD2_FIL2 CHAR(44)
               INIT('XXXXXX  XXXXX  XXXX  XXXXXXXXXXXXXXX  XXXX'),
             3 HEAD2_FIL3 CHAR(34)
               INIT('XXXXXXXXX  XXXXXXXX  XX  XXXXXXX'),
             3 HEAD2_FIL4 CHAR(45)
               INIT('XXXXXXX  XXXXXXXX  XXXXX'),

             1 HEADING3,
             3 HEAD3_FIL1 CHAR(133) INIT('0'),

             1 HEADING4,
             3 HEAD4_FIL1 CHAR(5) INIT('0'),
             3 HEAD4_FIL2 CHAR(2) INIT('('),
             3 HEAD4_DATS CHAR(5),
             3 HEAD4_FIL3 CHAR(1) INIT('-'),
             3 HEAD4_DATE CHAR(5),
             3 HEAD4_FIL4 CHAR(2) INIT(','),
             3 HEAD4_EXEC PIC 'ZZZV.99',
             3 HEAD4_FIL5 CHAR(2) INIT(','),
             3 HEAD4_PRPU PIC 'ZZZV.99',
             3 HEAD4_FIL6 CHAR(2) INIT(','),
             3 HEAD4_SYS  PIC 'ZZZV.99',
             3 HEAD4_FIL7 CHAR(91) INIT(' )'),

             1 PRINT_LINE,
             3 LINE_FIL1 CHAR(1) INIT(' '),
             3 LINE_SORC CHAR(6),
             3 LINE_FIL2 CHAR(3) INIT(' '),
             3 LINE_IDNT CHAR(6),
             3 LINE_FIL3 CHAR(2) INIT(' '),
             3 LINE_CNTR CHAR(5),
             3 LINE_FIL4 CHAR(2) INIT(' '),
             3 LINE_CHRG CHAR(4),
             3 LINE_FIL5 CHAR(2) INIT(' '),
             3 LINE_DESC CHAR(15),
             3 LINE_FIL6 CHAR(2) INIT(' '),
             3 LINE_OSYS CHAR(4),
             3 LINE_FIL7 CHAR(2) INIT(' '),
             3 LINE_OPRP CHAR(9),
             3 LINE_FIL8 CHAR(2) INIT(' '),
             3 LINE_OEXE CHAR(8),
             3 LINE_FIL9 CHAR(2) INIT(' '),
             3 LINE_CAT  CHAR(2),
             3 LINE_FL10 CHAR(2) INIT(' '),
             3 LINE_SYS  CHAR(7),
             3 LINE_FL11 CHAR(2) INIT(' '),
             3 LINE_PRPU CHAR(7),
             3 LINE_FL12 CHAR(2) INIT(' '),
             3 LINE_EXEC CHAR(8),
             3 LINE_FL13 CHAR(2) INIT(' '),
             3 LINE_DATE CHAR(5),
             3 LINE_FL14 CHAR(1) INIT(' '),
             3 LINE_CONV CHAR(1) INIT(' '),
             3 LINE_FL15 CHAR(1) INIT(' '),
             3 LINE_ACTN CHAR(18),

             1 END_LINE,
             3 END_FIL1 CHAR(133) INIT('-  END OF REPORT'),

               ALPHAMERIC CHAR(31)
                    INIT('0123456789 ABCDEFGHIJKLMNOPQR{}'),
               BYTE CHAR(1),
               TESTFIELD CHAR(10),
               TESTFLDS (10) CHAR(1) DEFINED TESTFIELD,

               COUNT_PAGE FIXED DEC(4) INIT('0'),
               COUNT_LINE FIXED DEC(4) INIT('0'),

               P POINTER,
               NEXIT LABEL,
               PEXIT LABEL,
               HEXIT LABEL,
               XEXIT LABEL,

               SW_NBLNK BIT(1) INIT('0'B),
               SW_ALPHA BIT(1) INIT('1'B),
               SW_PEND BIT(1) INIT('0'B),
               SW_PSEU BIT(1) INIT('0'B),
               SW_TIME BIT(1) INIT('0'B),
               SW_F110 BIT(1) INIT('0'B),
               SW_F150 BIT(1) INIT('0'B),
               SW_F112 BIT(1) INIT('0'B),
               SW_F113 BIT(1) INIT('0'B),

               IHESARC ENTRY(BINARY FIXED(31,0));

         XDATE = DATE;
         YYEAR = XYEAR;
         YDAY = XDAY;
         YMONTH = ZMONTH(XMONTH);
         YFILA = ' ';
         YFILB = ' ';
         HEAD0_DATE = YDATE;

         OPEN FILE(T58R100) OUTPUT;
         ON ENDFILE(T58RATE) GO TO BAD;
         OPEN FILE(T58RATE) INPUT;
         READ FILE(T58RATE) INTO(RATE_CARD);
         CLOSE FILE(T58RATE);
         ON ENDFILE(T58F120) GO TO NEXT;
         OPEN FILE(T58F120) INPUT;
         OPEN FILE(T58F121) OUTPUT;
         HEAD4_DATS = RATE_DATS;
         HEAD4_DATE = RATE_DATE;
         HEAD4_EXEC = RATE_EXEC;
         HEAD4_PRPU = RATE_PRPU;
         HEAD4_SYS  = RATE_SYS;
         PEXIT = LOOP0;
         GO TO HEAD;

 LOOP0:  READ FILE(T58F120) INTO(COST_CARD);
         COST_OSYS = 0;                                                  0002540
         COST_OPRP = 0;
         COST_OEXE = 0;
         COST_SYS = 0;
         COST_PRPU = 0;
         COST_EXEC = 0;
              AMND_DATE = '     ';
         WRITE FILE(T58F121) FROM(COST_CARD);
         GO TO LOOP0;

 NEXT:   CLOSE FILE(T58F120);
         ON ENDFILE(T58F050) GO TO PERROR;
         OPEN FILE(T58F050) INPUT;
         READ FILE(T58F050) INTO(PROJ_CARD);
         ON ENDFILE(T58F110) GO TO NEW;
         OPEN FILE(T58F110) INPUT;
         OPEN FILE(T58F111) OUTPUT;
         OPEN FILE(T58F130) OUTPUT;
         SW_F110 = '1'B;

 LOOP1:  IF SW_F110
         THEN DO;
                READ FILE(T58F110) INTO(COST_CARD);
                LINE_SORC = SORC_YTD;
         END;
         IF SW_F112
         THEN DO;
                READ FILE(T58F112) INTO(COST_CARD);
                LINE_SORC = SORC_HASP;
         END;
         IF SW_F113
         THEN DO;
                READ FILE(T58F113) INTO(COST_CARD);
               LINE_SORC = SORC_OS;
         END;
         IF SW_F150
         THEN DO;
                READ FILE(T58F150) INTO(COST_CARD);
               LINE_SORC = SORC_TIME;
         END;
         XEXIT = LOOP1;
         IF AMND_PSEU ^= 'P'
         THEN GO TO A1;
         IF SW_PEND THEN GO TO PERR1;
         STOR_MOVE = COST_MOVE;
         LINE_ACTN = ACTN_DLET;
         PEXIT = A6;
         GO TO LINE;
 A6:     LINE_SORC = SORC_PSEU;
         IF STOR_CNTR = PSTR_CHRG(1)
         THEN GO TO A2;
         SW_PSEU = '0'B;
         L = 0;
         K = 0;
 A3:     IF STOR_CNTR = PROJ_CHRG
         THEN DO;
               L = L +1;
               K = K +1;
               SW_PSEU = '1'B;
               PSTR_CHRG(L) = PROJ_CHRG;
               PSTR_CNTR(L) = PROJ_CNTR;
               PSTR_PROP(L) = PROJ_PROP;
               GO TO A4;
         END;
         IF STOR_CNTR < PROJ_CHRG
         THEN DO;
               IF SW_PSEU THEN GO TO A2;
               GO TO PERR1;
         END;
 A4:     READ FILE(T58F050) INTO(PROJ_CARD);
         GO TO A3;
 A2:     L = 0;
         XEXIT = A5;
 A5:     L = L + 1;
         IF L > K THEN GO TO LOOP1;
         COST_OSYS  = STOR_OSYS  * PSTR_PROP(L);                          003290
         COST_OPRP = STOR_OPRP * PSTR_PROP(L);
         COST_OEXE = STOR_OEXE * PSTR_PROP(L);
         COST_EXEC = STOR_EXEC * PSTR_PROP(L);                             03320
         COST_CNTR = PSTR_CNTR(L);
         AMND_PRPU = '       ';
         AMND_SYS = '       ';
 A1:     IF COST_DATE = '     ' THEN DO;
             COST_DATE = RATE_DATE;
         END;
         IF AMND_EXEC = '       ' THEN DO;                                 03390
             COST_EXEC = 0;                                                03400
             LINE_CONV = '*';                                              03410
         END;                                                              03420
         IF AMND_PRPU = '       ' THEN DO;
             COST_PRPU = COST_OPRP * RATE_PRPU;
             LINE_CONV = '*';
         END;
         IF AMND_SYS = '       ' THEN DO;
             COST_SYS = COST_OSYS * RATE_SYS;                            0003480
             LINE_CONV = '*';
         END;
         WRITE FILE(T58F111) FROM(COST_CARD);
         LINE_ACTN = ACTN_AYTD;
         IF COST_DATE = RATE_DATE THEN DO;
             LINE_ACTN = ACTN_AMTD;
             WRITE FILE(T58F130) FROM(COST_CARD);
             END;
         PEXIT = XEXIT;
         GO TO LINE;
 NEW:    SW_F110 = '0'B;
         CLOSE FILE(T58F110);
         CLOSE FILE(T58F050);
         SW_F112 = '1'B;
         ON ENDFILE(T58F112) GO TO NEW1;
         OPEN FILE(T58F112) INPUT;
         OPEN FILE(T58F050) INPUT;
         PROJ_CHRG = '    ';
         GO TO LOOP1;

 NEW1:   CLOSE FILE(T58F112);
         CLOSE FILE(T58F050);
         SW_F112 = '0'B;
         SW_F113 = '1'B;
         ON ENDFILE(T58F113) GO TO NEW2;
         OPEN FILE(T58F113) INPUT;
         OPEN FILE(T58F050) INPUT;
         PROJ_CHRG = '    ';
         GO TO LOOP1;

 NEW2:   CLOSE FILE(T58F050);
         CLOSE FILE(T58F113);
         SW_F113 = '0'B;
         IF RATE_DATS = '99999'
         THEN GO TO NEWO;
         SW_F150 = '1'B;
         ON ENDFILE(T58F150) GO TO NEW3;
         OPEN FILE(T58F150) INPUT;
         OPEN FILE(T58F050) INPUT;
         PROJ_CHRG = '    ';
         GO TO LOOP1;

 NEW3:   CLOSE FILE(T58F150);
         CLOSE FILE(T58F050);
         SW_F150 = '0'B;

 NEWO:   ON ENDFILE(T58C100) GO TO END;
         OPEN FILE(T58C100) INPUT;

 LOOP2:  READ FILE(T58C100) INTO(COST_CARD);
         LINE_SORC = SORC_UPDT;
         IF COST_IDNT ^= 'COST01'
         THEN DO;
               LINE_ACTN = ACTN_IGNR;
               PEXIT = LOOP2;
               GO TO LINE;
         END;
         IF COST_DESC ^= '               ' THEN DO;
             COST_OSYS = 0;                                              0004070
             COST_OPRP = 0;
             COST_OEXE = 0;
             COST_SYS = 0;
             COST_PRPU=0;
             COST_EXEC = 0;
             AMND_DATE = '     ';
             WRITE FILE(T58F121) FROM(COST_CARD);
             LINE_ACTN = ACTN_DESC;
             PEXIT = LOOP2;
             GO TO LINE;
         END;
         IF COST_CNTR = '*****' THEN GO TO N1;
         TESTFIELD = COST_CNTR;
         L = LENGTH(COST_CNTR);
         SW_ALPHA = '0'B;
         NEXIT = N1;
         GO TO NTEST;
 N1:     TESTFIELD = COST_CHRG;
         L = LENGTH(COST_CHRG);
         SW_ALPHA = '0'B;
         NEXIT = N2;
         GO TO NTEST;
 N2:     TESTFIELD = COST_CAT;
         L = LENGTH(COST_CAT);
         SW_ALPHA = '0'B;
         NEXIT = N3;
         GO TO NTEST;
 N3:     TESTFIELD = AMND_OSYS;
         L = LENGTH(AMND_OSYS);
         NEXIT = N4;
         GO TO NTEST;
 N4:     TESTFIELD = AMND_OPRP;
         L = LENGTH(AMND_OPRP);
         NEXIT = N5;
         GO TO NTEST;
 N5:     TESTFIELD = AMND_OEXE;
         L = LENGTH(AMND_OEXE);
         NEXIT = N6;
         GO TO NTEST;
 N6:     TESTFIELD = AMND_SYS;
         L = LENGTH(AMND_SYS);
         NEXIT = N7;
         GO TO NTEST;
 N7:     TESTFIELD = AMND_PRPU;
         L = LENGTH(AMND_PRPU);
         NEXIT = N8;
         GO TO NTEST;
 N8:     TESTFIELD = AMND_EXEC;
         L = LENGTH(AMND_EXEC);
         NEXIT = N9;
         GO TO NTEST;
 N9:     TESTFIELD = AMND_DATE;
         L = LENGTH(AMND_DATE);
         SW_ALPHA = '0'B;
         NEXIT = N10;
         GO TO NTEST;
 N10:    IF AMND_SYS ^= '       ' THEN GO TO DATER;
         IF AMND_PRPU ^= '       ' THEN GO TO DATER;
         COST_SYS = COST_OSYS * RATE_SYS;                                0004660
         COST_PRPU = COST_OPRP * RATE_PRPU;
         LINE_CONV = '*';
 DATER:  IF COST_DATE = '     '
         THEN DO;
             COST_DATE = RATE_DATE;
         END;
         LINE_ACTN = ACTN_AYTD;
         WRITE FILE(T58F111) FROM(COST_CARD);
         IF COST_DATE = RATE_DATE
         THEN DO;
               LINE_ACTN = ACTN_AMTD;
               WRITE FILE(T58F130) FROM(COST_CARD);
         END;
         PEXIT = LOOP2;
         GO TO LINE;

 NTEST:  IF SUBSTR(TESTFIELD,1,L) = ' '
         THEN DO;
               SW_ALPHA = '1'B;
               GO TO NEXIT;
         END;
         SW_NBLNK = '0'B;
         DO I = 1 TO L;
               BYTE = TESTFLDS(I);
               J = INDEX(ALPHAMERIC,BYTE);
               IF J = 0 THEN GO TO NERROR;
               IF J > 11 & I < L THEN GO TO NERROR;
               IF J > 11 & SW_ALPHA = '0'B THEN GO TO NERROR;
               IF J = 11 & SW_NBLNK = '1'B THEN GO TO NERROR;
               IF J < 11
               THEN DO;
                    SW_NBLNK = '1'B;
               END;
         END;
         SW_ALPHA = '1'B;
         GO TO NEXIT;
 NERROR: LINE_ACTN = ACTN_NNUM;
         PEXIT = LOOP2;
         GO TO LINE;

 BAD:    DISPLAY ('T580P10 - NO CONTROL CARD - RUN ABORTED');
         PUT EDIT ('T580P10 - NO CONTROL CARD')(SKIP(1),A(25));
         CLOSE FILE(T58RATE);
         CALL IHESARC(16);
         GO TO END3;

 PERROR: SW_PEND = '1'B;
         IF SW_PSEU THEN GO TO LOOP1;
 PERR1:  CLOSE FILE(T58F050);
         CLOSE FILE(T58F110);
         CLOSE FILE(T58F111);
         CLOSE FILE(T58F130);
         CLOSE FILE(T58F121);
         DISPLAY ('T580P10 - UNMATCHED PSEUDO-CODE - RUN ABORTED');
         PUT SKIP EDIT ('T580P10 - UNMATCHED PSEUDO-CODE ( ',
                       COST_CNTR,' ) - RUN ABORTED')(A);
         CALL IHESARC(16);
         GO TO END2;

 HEAD:   COUNT_PAGE = COUNT_PAGE + 1;
         HEAD0_PAGE = COUNT_PAGE;
         WRITE FILE(T58R100) FROM(HEADING0);
         WRITE FILE(T58R100) FROM(HEADING4);
         WRITE FILE(T58R100) FROM(HEADING1);
         WRITE FILE(T58R100) FROM(HEADING2);
         WRITE FILE(T58R100) FROM(HEADING3);
         COUNT_LINE = 0;
         GO TO PEXIT;

 LINE:   LINE_IDNT = COST_IDNT;
         LINE_CNTR = COST_CNTR;
         LINE_CHRG = COST_CHRG;
         LINE_DESC = COST_DESC;
         LINE_OSYS = AMND_OSYS;
         LINE_OPRP = AMND_OPRP;
         LINE_OEXE = AMND_OEXE;
         LINE_CAT  = AMND_CAT;
         LINE_SYS  = AMND_SYS;
         LINE_PRPU = AMND_PRPU;
         LINE_EXEC = AMND_EXEC;
         LINE_DATE = AMND_DATE;
         WRITE FILE(T58R100) FROM(PRINT_LINE);
         LINE_CONV =' ';
         COUNT_LINE = COUNT_LINE + 1;
         IF COUNT_LINE > 49 THEN GO TO HEAD;
         GO TO PEXIT;

 END:    CLOSE FILE(T58C100);
         CLOSE FILE(T58F111);
         CLOSE FILE(T58F121);
         IF RATE_DATS ^= '99999'
         THEN DO;
               RATE_DAT2 = RATE_DATS;
               RATE_DATS = '99999';
               OPEN FILE(T58RATE) OUTPUT;
               WRITE FILE(T58RATE) FROM(RATE_CARD);
               CLOSE FILE(T58RATE);
         END;
 END2:   WRITE FILE(T58R100) FROM(END_LINE);
 END3:   CLOSE FILE(T58R100);
         END;
