         TITLE 'MOPP REQUEST VALIDATION. BUDGIE3 EXIT.'
***********************************************************************
*                  LIBRARIAN MODULE HEADER DSECT                      *
***********************************************************************
         SPACE 1
DESCDEF  DSECT
DNAME    DS    CL8                MODULE NAME
DPASS    DS    CL4                MODULE PASSWORD
DDATAD   DS    CL6                DATE MODULE WAS ADDED TO THE MASTER
DDATUP   DS    CL6                DATE MODULE WAS LAST UPDATED
*        NOTE - IF DDATUP=0, MODULE HAS NEVER BEEN UPDATED
DTIMUP   DS    CL4                TIME MODULE WAS LAST UPDATED
DCDCNT   DS    CL3                NO. CARDS IN MODULE (PACKED)
DMBF     DS    CL1               MISC BITS-SEE BELOW
*    FORMAT OF FIELD DMBF,STARTING WITH LEFTMOST BIT
*        0     = 0 IF SUPPRESS OPTION, = 1 IF CONTINUE OPTION
*        1     = 1 IF NO SYNTAX CHECK FOR THIS MODULE
*        2     = 1 IF MODULE HAS PROD1 STATUS
*        3     = 1 IF MODULE HAS PROD2 STATUS
*        4     = 1 IF PRINTER MODULE
*        5     = 1 IF COBOL D     (NOTE - IF BITS 5, 6, AND 7 OFF,
*        6     = 1 IF COBOL ANS      THIS IS COBOL F)
*        7     = 1 IF COBOL E
*        NOTE - DO NOT CHANGE THE USE OF BIT 1 DUE TO COMPATABILITY
*        WITH OLD MASTERS (INITIALIZED TO '40' FOR THIS BYTE)
         SPACE 1
DSEQF    DS    CL1                = 1 IF SEQ NO. IN MASTER RECORD
*        NOTE - DO NOT ALTER THE ORDER OF THE NEXT 5 CARDS
DSQP     DS    0CL6               DEFINES ALL SEQ NO. PARAMETERS
DSQST    DS    CL1                START OF SEQ NO. FIELD (0=COL1)
DSQLEN   DS    CL1                LENGTH - 1 OF SEQ NO. FIELD
DSQINC   DS    CL2                INCREMENT FOR SEQUENCE NUMBER
DSQINV   DS    CL2                INIT VALUE OF SEQ NO. MINUS INCREMENT
DPROG    DS    CL15               PROGRAMMER NAME
DORG     DS    0C                 ORG BACK HERE FOR DOS FIELDS
*        OS FIELDS
DPROC    DS    CL55               PROC PARAMETER
DCLASS   DS    CL1                CLASS
DREG     DS    CL11               REGION
DPRTY    DS    CL2                PRIORITY
DSTEP    DS    CL8                STEP NAME IN USER'S PROC
DDNAME   DS    CL8                DDNAME FOR 'STOW' DD STATEMENT
DDSN     DS    CL44               DATA SET NAME FOR SYSGO DD
DMEMNAME DS    CL8                MEMBER NAME FOR SYSGO DD
DDISP    DS    CL4                DISP FIELD FOR SYSGO DD
DACCT    DS    CL55               ACCOUNT NUMBER
DPROC2   DS    CL45               EXTENSION OF PROC PARAMETER
DTIME    DS    CL7                TIME PARAMETER
DSYSIN   DS    CL6                NAME OF DD * DATA SET
DHPRTY   DS    CL2                HASP PRIORITY
*                                 NOTE - MSGCLASS PARAM IS LATER ON
         ORG   DORG               ORG BACK FOR DOS FIELDS
*        D.O.S. FIELDS
DTYPE    DS    CL10               TYPE PARAM (SEE DETAILS BELOW)
*        THE D.O.S. TYPE PARAMETER CONSISTS OF A 1 BYTE CODE
*        FOLLOWED BY THE TYPE ITSELF.  CODES HAVE THE FOLLOWING VALUES
*              0 IS 'COMPCAT'
*              1 IS 'COMPCATGO'
*              2 IS 'COMPGO'
*              3 IS 'COMP'
*              4 IS 'PARAM'
*              5 IS 'NONE'
DLANG    DS    CL10               LANGUAGE TRANSLATOR NAME
DOPTION  DS    CL60               OPTION PARAMETER
DENTRY   DS    CL8                ENTRY NAME
DPHASE   DS    CL44               PHASE PARAMETER
DSLAMP   DS    CL1                IF BLANK, INCLUDE /& AFTER MODULE
DLBLTYP  DS    CL9                LBLTYP PARAMETER
DACTION  DS    CL30               ACTION PARAMETER
DCATALR  DS    CL8                CATALR PARAM
DOSACCT  DS    CL16     ACCOUNT NO.
         DS    CL60     UNUSED FOR DOS.
*        FIELDS AGAIN COMMON TO OS AND DOS
DJOBNAME DS    CL8                JOB NAME
DATCOPY  DS    CL2               LAST DATE COPIED (-COPY)
DMSG     DS    CL1                OS ONLY - MSGCLASS PARAMETER
DCOMPFLG DS    CL1    COMPRESS STATUS:'FF' IF PART,BLANK IF FULL
*                                      '0F' IF NONE.
DDLANG   DS    CL3   LANG PARAM USED BY CPA-AUTOFLOW II
         SPACE 1
         DS    CL1      ************   UNUSED   *********
         SPACE 1
DNOAC    DS    CL2   NO. OF ACCESSES FOR THIS MODULE (TAPE)
DNOUP    DS    CL2   NO. OF UPDATES  FOR THIS MODULE
         SPACE 1
DDESC    DS    CL30              MODULE DESCRIPTION
         EJECT
***********************************************************************
*        FORMAT OF LINKAGE AREA PASSED BY BUDGIE3                     *
***********************************************************************
         SPACE 1
BUDGIE3  DSECT
BGVIRGIN DS    CL80                UNTOUCHED I/P RECORD TO BUDGIE
BGLINK   DS    0CL37
BGLCSW   DS    CL1                 CALL SWITCH:  1 - INITIALISE
*                                                2 - BATCH CARD
*                                                3 - DETAIL CARD
*                                                4 - CLOSEDOWN
*                                                5 - CALLED BY R5 OPCDE
*                                                6 - END OF BATCH
BGLRSW1  DS    CL1                 RETURN CODE:  0 - RECORD OK
*                                                1 - REJECT BATCH
*                                                2 - DELETE RECORD
BGLRSW2  DS    CL1                 RETURN CODE:  0 - FINISHED WITH RECD
*                                               ^0 - PASS RECORD AGAIN
BGLMESS  DS    CL30                ERROR MESSAGE TO BE PRINTED
BGLPOS   DS    CL2                 POSITION IN ERROR - DISPLAY FORMAT
BGELLEN  DS    CL2                 LENGTH OF FIELD IN ERROR - DISPLAY
*                        BUDGIE3 WORK-AREA STARTS HERE
BGOUTPUT DS    CL80          000   MODIFIED INPUT/OUTPUT RECORD
BGWNUM   DS    CL5           081   UPDATE NUMBER - SUPPLIED AT INIT.
*                                                - STORED AT CLOSEDOWN
BGWTYPE  DS    CL2           086   UPDATE TYPE   FROM REQUEST CARD
BGWSOURC DS    CL5           088   SOURCE CODE   FROM REQUEST CARD
BGWFLAGS DS    CL4           093   SOURCE FLAGS  FROM REQUEST CARD
BGWSYSTM DS    CL8           097   SYSTEM NAME   FROM REQUEST CARD
BGWRMTID DS    CL2           105   REMOTE NUMBER FROM REQUEST CARD
BGWSECUR DS    CL1           107   SECURITY FLAG FROM REQUEST CARD
BGWMEMBR DS    CL8           108   MODULE NAME   FROM REQUEST CARD
BGWPSWD  DS    CL4           116   PASSWORD      FROM REQUEST CARD
BGWPGMR  DS    CL6           120   PGMR. NAME    FROM REQUEST CARD
BGWALS1  DS    CL8           126   ALIAS 1       FROM REQUEST CARD
BGWALS2  DS    CL8           134   ALIAS 2       FROM REQUEST CARD
BGWSYS2  DS    CL8           142   2ND. SYSTEM   FROM REQUEST CARD
BGWSEQ   DS    CL18          156   SEQUENCE INFO. FROM SOURCE TABLE
BGWPGMRT DS    CL10          168   PROGRAMMER FROM PGMR TABLE
*                        FIELDS FOR EXIT'S USE FOLLOW
BGECALL  DS    CL1           178   EXIT CALL CODE: 1-LIBRARIAN LOOKUP
*                                                  2-SUPPLY NEXT REC.
*                                                  3-SUPPLY SSI AND MCD
*                                                  4-SUPPLY LKED RECS
*                                                  5-STORE -DESC CARD
*                                                  6-SUPPLY DESC CARD
*                                                  7-MOVE UPDT. NO.
BGELRC DS    CL1           179   LIBRN RET. CDE: 0-ALL OK.
*                                                  1-NOT FOUND /EOM/EOH
*                                                  2/9 ERROR ON MASTER
BGERET   DS    CL1           180   EXIT RET. CODE: 0-ALL OK.
*                                                  1-EOM NO LKED.DATA.
*                                                  2-EOM LKED. DATA.
*                                                  3-END OF LKED DATA.
BGEMSTAT DS    CL1           181   MODULE STATUS:  0-TEST
*                                                  1-PROD1
*                                                  2-PROD2
BGEDESC  DS    CL1           182   DESCRITION FLAG 0-NOT PRESENT
*                                                  1-PRESENT
BGEPSWD  DS    CL4           183   PASSWORD FROM LIBRARYN MASTER
BGESYSTM DS    CL8           187   SYSTEM   FROM LIBRARYN MASTER
         ORG   BGEPSWD             REDEFINE PSWD AND SYSTEM FIELDS
BGEMCD   DS    CL4           183   MCD CODE
BGESSI   DS    CL8           187   SSU INFO EXPANDED TO 8-BYTES
         ORG
BGELANG  DS    CL5           195   SOURCE   FROM LIBRARYN MASTER
BGEALS1  DS    CL8           200   ALIAS1   FROM LIBRARYN MASTER
BGEALS2  DS    CL8           208   ALIAS2   FROM LIBRARIAN MASTER
*                        ADDITIONAL RECORD OUTPUT AREA
BGWRKOUT  DS   CL80          216   BUILT UP O/P RECORDS
BGEND    EQU   *
BGLENGTH EQU   *-BUDGIE3
         EJECT
**********************************************************************
*                  ENTRY POINT. HOUSEKEEPING.                         *
**********************************************************************
         SPACE 1
T586P14  CSECT
HSEKPNG  PGMIN USING=(13,12,11,10)
         PRINT ON,NOGEN,NODATA
         EJECT
**********************************************************************
*                  ESTABLISH CALL TYPE AND PERFORM REQUIRED FUNCTION  *
**********************************************************************
         SPACE 1
CALLANAL EQU   *
         L     R7,0(0,R1)          POINT AT BUDGIE3 LINK AREA
         USING BUDGIE3,R7          SET-UP ADDRESSABILITY
CAINIT   EQU   *
         CLI   BGLCSW,C'1'         INITIALISE?
         BNE   CABATCH             NO. BRANCH
         BAL   R4,INIT             PERFORM INITIALISATION
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CABATCH  EQU   *
         CLI   BGLCSW,C'2'         BATCH-CARD?
         BNE   CADETAIL            NO. BRANCH
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CADETAIL EQU   *
         CLI   BGLCSW,C'3'         DETAIL-CARD?
         BNE   CACLOSE             NO. BRANCH
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CACLOSE  EQU   *
         CLI   BGLCSW,C'4'         END OF STEP?
         BNE   CABCHEND            NO. BRANCH
         BAL   R4,CLOSDOWN         PERFORM CLOSING FUNCTION
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CABCHEND EQU   *
         CLI   BGLCSW,C'6'         END OF BATCH?
         BNE   CAR5CALL            NO. BRANCH
         BAL   R4,ENDOFBCH         PERFORM END OF BATCH ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CAR5CALL EQU   *
         CLI   BGLCSW,C'5'         SPECIAL CALL FROM BUDGIE3
         BNE   RETURN              NO. RETURN TO BUDGIE3 *UNHANDLED*
         SPACE 1
CA5LIBLK EQU   *
         CLI   BGECALL,C'1'        LIBRARIAN LOOKUP?
         BNE   CA5NEXTR            NO. BRANCH
         CLC   BGWSOURC(4),TPROC   MEMBER ON PDS?
         BNE   CA5LBLK2            NO. MUST BE ON LIBRARYN
         BAL   R4,PDSLOOK          LOCATE MEMBER ON SYSLIB
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5LBLK2 EQU   *
         BAL   R4,LIBNLOOK         PERFORM LIBRARIAN LOOKUP
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5NEXTR EQU   *
         CLI   BGECALL,C'2'        SUPPLY NEXT SOURCE RECORD?
         BNE   CA5SSIX             NO. BRANCH
         CLC   BGWSOURC(4),TPROC   MEMBER ON PDS (TEST.PROCLIB)
         BNE   CA5NEXT2            NO. MUST BE ON LIBRARYN
         BAL   R4,PDSNEXT          YES. GET NEXT PDS RECORD
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5NEXT2 EQU   *
         BAL   R4,NEXTREC          PERFORM NEXTREC ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5SSIX  EQU   *
         CLI   BGECALL,C'3'        SSI EXPANSION AND MCD CODE REQD?
         BNE   CA5LKEDR            NO. BRANCH
         BAL   R4,SSINMCD          PERFORM ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5LKEDR EQU   *
         CLI   BGECALL,C'4'        SUPPLY NEXT LKED RECORD?
         BNE   CA5DSTOR            NO. BRANCH
         BAL   R4,NEXTLKED         PERFORM ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5DSTOR EQU   *
         CLI   BGECALL,C'5'        STORE DESCRIPTION?
         BNE   CA5DSPLY            NO. BRANCH
         BAL   R4,STORDESC         PERFORM ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5DSPLY EQU   *
         CLI   BGECALL,C'6'        SUPPLY DESCRIPTION?
         BNE   CA5MUNUM            NO.  BRANCH
         BAL   R4,SPLYDESC         PERFORM ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 1
CA5MUNUM EQU   *
         CLI   BGECALL,C'7'        MOVE UPDATE NUMBER IN W/A?
         BNE   ABORT               NO. ABEND. UNIDENTIFIED CALL CODE
         BAL   R4,MOVEUNUM         PERFORM ROUTINE
         B     RETURN              RETURN TO BUDGIE3
         SPACE 5
***********************************************************************
*                  RETURN TO BUDGIE3. EXIT FOR ALL ROUTINES.          *
***********************************************************************
         SPACE 1
RETURN   EQU   *
         MVI   BGLRSW1,C'0'        RECORD ALWAYS OK
         MVI   BGLRSW2,C'0'        NEVER RETURN FOR THIS RECORD
*                        NOTE: PROCESSING CONTROLLED BY OTHER SWITCHES
         PGMOUT RC=0
         EJECT
***********************************************************************
*                  INITIALISATION ROUTINE.                            *
*                  OPEN LIBRARIAN MASTER FILE.                        *
*                  OBTAIN LATEST SETTING OF UPDATE COUNTER            *
*                  RESETTING IF NECESSARY,                            *
*                  MOVE THIS TO BUDGIE3 LINKAREA FOR FURTHER          *
*                  INCREMENTING.                                      *
***********************************************************************
         SPACE 3
INIT     SUBIN
         CALL  MASTOPN,(0,FAIRRC),VL OPEN LIBRARIAN MASTER
         MVC   BGELRC,FAIRRC       MOVE RC TO LINK-AREA
         CLI   BGELRC,C'0'         OPEN SUCCESFUL?
         BNE   ABORT               NO. ABEND.
         TESTIOT DDNAME=PDSSW+4    IS SYSLIB DDNAME AVAILABLE
         LTR   R15,R15             YES. IF RETURN CODE ZERO
         BNZ   NOSYSLIB            NO. BRANCH ROUND OPEN.
         OPEN  (PDSDCB,INPUT)      OPEN SYSLIB DATASET
         OI    PDSSW,DDSTAT+DDOPEN SET SWITCHES
NOSYSLIB EQU   *
         UT458 ,                   CALL UNIVERSAL DATE ROUTINE
         PACK  DWORD,UTMM(4)       PACK MONTH AND DAY
         AP    DWORD,CODE          ADD CODE TO IT
         UNPK  MCDAREA+4(5),DWORD+5(3)  DISPLAY IT
         OI    MCDAREA+8,X'F0'     CORRECT LAST DIGIT
         MVI   MCDAREA+4,C' '      CORRECT FIRST DIGIT
         OPEN  (COUNTED,INPUT)
         GET   COUNTED,COUNTSTR
         CLOSE COUNTED
*              ZEROISE COUNTER ON FIRST RUN OF A NEW YEAR
         CLC   UTYY,COUNTYR        COMPARE YEAR WITH COUNTER YEAR
         MVC   COUNTYR,UTYY        MOVE CURRENT YEAR ANYWAY
         BNE   ZEROISE             BUT ZEOISE WHEN YEAR CHANGES
         CLC   COUNTER,SPACES
         BE    ZEROISE
         TM    COUNTER+2,X'0C'
         BNO   ZEROISE
         CLI   COUNTER,X'99'
         BH    ZEROISE
         CLI   COUNTER+1,X'99'
         BH    ZEROISE
         CLI   COUNTER+2,X'9C'
         BH    ZEROISE
*              ZEROISE IF THERE IS ANY DANGER OF OVERFLOWING 2-BYTES
*              OF THE SSI NUMBER PORTION WITH THE UPDATE NUMBER,
*              (FFFF = 65,535)
         CP    COUNTER,=PL3'65000' HAS COUNTER REACHED LIMIT FOR SSI?
         BNL   ZEROISE             YES. RESET COUNTER TO ZERO
         B     COUNTOK
         SPACE
ZEROISE  ZAP   COUNTER,=P'1'       RESET COUNTER TO BASE NUMBER.
COUNTOK  EQU   *
         UNPK  BGWNUM,COUNTER      MOVE COUNTER TO LINK AREA
         OI    BGWNUM+4,X'F0'      CORRECT ZONE ON LAST DIGIT
         SUBOUT
         EJECT
***********************************************************************
*              LIBRARIAN LOOKUP ROUTINE.                              *
*                  SEARCH LIBRARYN MASTER FILE FOR MODULE.            *
*                  RETURN IMMEDIATELY IF NOT FOUND.                   *
*                  IF LOCATED SUPPLY ALL DETAILS.                     *
***********************************************************************
         SPACE 1
LIBNLOOK SUBIN
         MVC   FAIRNAME,BGWMEMBR   MOVE MEMBER NAME
         CALL  MASTMOD,(FAIRNAME,FAIRRC,0,INCIND,MODHDR),VL
         MVC   BGELRC,FAIRRC       MOVE RC TO LINK-AREA
         CLI   BGELRC,C'0'         MODULE FOUND?
         BE    LLFOUND             YES. BRANCH
         B     LLEXIT              NO. RETURM TO CALLER
         SPACE 1
LLFOUND  EQU   *
         MVI   BGEPSWD,C' '        *CLEAR OUTPUT
         MVC   BGEPSWD+1(32),BGEPSWD  $ FIELDS
         LA    R8,MODHDR           GET ADDRESS BASE FOR HDR MASK
         USING DESCDEF,R8          ESTABLISH ADDRESSABILITY
         MVC   BGEPSWD,DPASS       MOVE PASSWORD
         MVI   BGEMSTAT,C'0'       SET DEFAULT TEST STATUS
         TM    DMBF,X'30'          TEST FOR PROD FLAGS
         BZ    LLDESC              IF NONE. BRANCH TO DESC CHECK
         MVI   BGEMSTAT,C'1'       SET TO PROD1
         TM    DMBF,X'20'          TEST FOR PROD1 STATUS
         BO    LLDESC              BRANCH IF SO
         MVI   BGEMSTAT,C'2'       MUST BE PROD2 STATUS
LLDESC   EQU   *                   CHECK FOR SUPPLIED CESCRIPTION
         MVI   BGEDESC,C'0'        NOT PRESENT BY DEFAULT
         CLC   DDESC(15),SPACES    ANY DESCRIPTION?
         BE    LLHSTS              NO. LEAVE DEFAULT
         MVI   BGEDESC,C'1'        YES. RESET FLAG
         MVC   DESC,DDESC          SAVE DESCRIPTION
LLHSTS   EQU   *         READ THE HST RECS TO LOCATE SLANG/SYSTEM/ALIAI
         CALL  MASTHST,(FAIRDATA,FAIRRC),VL READ A -HST CARD
         CLI   FAIRRC,C'0'         END OF -HST CARDS?
         BNE   LLHSTEOD            NO. END OF HST CARDS
         CLC   FCARD+5(6),=C'SYSTEM'  SYSTEM CARD?
         BNE   *+10                NO. SKIP NSI
         MVC   BGESYSTM,FCARD+13   YES. MOVE NAME
         CLC   FCARD+5(5),=C'SLANG'  SOURCE LANG. CARD?
         BNE   *+10                NO. SKIP NSI
         MVC   BGELANG,FCARD+12    YES. MOVE LANGUAGE
         CLC   FCARD+5(5),=C'ALIAS'  ALIAS CARD?
         BNE   LLHSTS              NO. READ NEXT HST CARD
         MVC   BGEALS1,BGEALS2     MOVE SECOND ALIAS TO FIRST
         MVC   BGEALS2,FCARD+12    MOVE NEW ALIAS TO SECOND AREA
         B     LLHSTS              PROCESS NEXT HST CARD
         SPACE 1
LLHSTEOD EQU   *
         CLC   BGEALS1,SPACES      ONLY ONE ALIAS FOUND?
         BNE   *+10                NO. TWO FOUND. SKIP NSI.
         MVC   BGEALS1,BGEALS2     YES. MOVE IT TO BGEALS1.
         CLC   BGEALS1,BGEALS2     BOTH ALIAS NAMES SAME?
         BNE   *+10                NO. SKIP NSI.
         MVC   BGEALS2,SPACES      YES. CLEAR SECOND ONE
LLEXIT   SUBOUT
         SPACE 5
***********************************************************************
*              LOOK FOR MEMBER ON PDS SPECIFIED BY 'SYSLIB'           *
*                   THIS IS USUALLY TEST.PROCLIB                      *
***********************************************************************
         SPACE 1
PDSLOOK  SUBIN SAVE=R4
         LA    R1,BGWALS1          POINT TO MEMBER NAME
*                                  THIS IS IN THE ALIAS1 SLOT
         MVI   BGELRC,C'1'         DEFAULT IS MODULE NOT FOUND
         BAL   R4,PDSFIND          SEARCH PDS DIRECTORY
         LTR   R1,R1               ZERO RETURN CODE
         BNZ   PDSLEXIT            NO. MEMBER NOT FOUND
         MVI   BGELRC,C'0'         YES. ALL OK.
PDSLEXIT SUBOUT RESTORE=R4
         EJECT
***********************************************************************
*              GET NEXT SOURCE RECORD ROUTINE                         *
***********************************************************************
         SPACE 1
NEXTREC  SUBIN
NRNEXT   EQU   *
         CALL  MASTRCD,(FAIRDATA,FAIRRC),VL  READ A RECORD FROM MODULE
         MVC   BGELRC,FAIRRC       MOVE RC TO LINK-AREA
         CLI   BGELRC,C'0'         TEST RETURN CODE
         BH    NREOMNLK            BRANCH IF NOT NORMAL RETURN
         MVC   BGWRKOUT,FCARD      MOVE RECORD TO LINK-AREA
*        IF A PROGRAM IS BEING REQUESTED, DELETE JCL CARDS,
*        OTHERWISE JUST DELETE IEBUPDTE CONTROL CARDS EXCEPT FO
*        './ DELETE'
         CLI   BGWTYPE+1,C'P'      IS IT A PROGRAM
         BE    NRPROG              YES. BRANCH
         CLC   BGWRKOUT(10),=CL10'./ DELETE' IEBUPDTE DELETE CARD?
         BE    NRGOOD              YES. GOOD RECORD
         CLC   BGWRKOUT(3),=CL3'./ ' IEBUPDTE CONTROL CARD?
         BE NRNEXT                 YES. DELETE IT
         CLC   BGWRKOUT(7),=CL7'MEMBER ' PROCEDURE HEADER?
         BE    NRNEXT              YES. DELETE IT
         B     NRGOOD              ACCEPT ALL OTHER RECORDS.
         SPACE 1
NRPROG   EQU   *                   SELECTION PROCESS FOR PROGRAMS
         CLC   BGWRKOUT(3),=CL3'/* '  /* WITH NO OPERANDS?
         BE    NREOM               YES. BRANCH
         CLC   BGWRKOUT(7),=CL7'//LKED.'  LKED INPUT FOUND?
         BE    NREOMLKD            YES. END OF MODULE LKED FOLLOWS
         CLC   BGWRKOUT(2),=C'//'  JCL CARD?
         BE    NRNEXT              YES. GO ROUND AGAIN
         CLC   BGWRKOUT(2),=C'/*'  JCL CARD?
         BE    NRNEXT              YES. GET NEXT
NRGOOD   EQU   *
         MVI   BGERET,C'0'         GOOD RECORD. SET RETURN CODE
         B     NREXIT
         SPACE 1
NREOM    EQU   *
         MVI   BGERET,C'1'         SET END OF MODULE FLAG.
NREOM1   EQU   *
         CALL  MASTRCD,(FAIRDATA,FAIRRC),VL  READ NEXT RECORD
         CLI   FAIRRC,C'0'         GOOD RETURN?
         BNE   NREXIT              NO. EXIT
         CLC   FAIRDATA(7),=CL7'//LKED.'     LKED INPUT FOUND?
         BE    NREOMLKD            YES. BRANCH
         B     NREOM1              SEARCH FOR TRUE EOM OR LKED.
         SPACE 1
NREOMNLK EQU   *
         MVI   BGERET,C'1'         END OF MODULE. NO LKED CARDS.
         B     NREXIT
         SPACE 1
NREOMLKD EQU   *
         MVI   BGERET,C'2'         END OF MODULE. LKED DATA FOLLOWS.
         OI    LKEDSW,LKEDCARD     INDICATE CARD IN INPUT AREA (FCARD)
         SPACE 1
NREXIT   SUBOUT
         EJECT
***********************************************************************
*              GET NEXT LKED RECORD ROUTINE                           *
***********************************************************************
         SPACE 1
NEXTLKED SUBIN SAVE=R4
         TM    LKEDSW,LKEDCARD     IS DATA IN FCARD?
         BO    NLTESTS             YES. JUMP CALL TO LIBRARYN
         TM    LKEDSW,LKEDNAME     HAS SETSSI BEEN FORCED?
         BO    NLNAMOUT            YES. WRITE OUT NAME CARD
NLNEXT   EQU   *
         CALL  MASTRCD,(FAIRDATA,FAIRRC),VL GET NEXT REORD
         MVC   BGELRC,FAIRRC       MOVE RC TO LINKAREA
         CLI   BGELRC,C'0'         GOOD RETURN CODE
         BH    NLEOM               NO. END OF MODULE
         CLC   FCARD(2),=C'/*'     END OF LKED CARDS?
         BE    NLEOM               YES. BRANCH
NLTESTS  EQU   *
         NI    LKEDSW,255-LKEDCARD SETOFF CARD IN FCARD SWITCH
         MVC   BGWRKOUT,FCARD      MOVE RECORD TO LINK-AREA
         CLC   BGWRKOUT(10),=CL10'//LKED.SYS'   DROP SYS CARDS
         BE    NLNEXT              READ NEXT CARD IF FOUND
         CLC   BGWRKOUT(2),=C'//'  JCL CARD?
         BNE   NLNOJCL             NO. BRANCH
         CLC   BGWRKOUT(7),=CL7'//LKED.' IF JCL, MUST BE //LKED.
         BNE   NLNEXT              IF NOT. READ NAEXT CARD
         B     NLOK                YES. BRANCH TO GOOD EXIT
         SPACE 1
NLNOJCL  EQU   *
         TM    LKEDSW,LKSYSIN      HAS FIRST LKED.SYSIN CARD BEEN O/P
         BO    NLSYSIN             YES. JUMP THIS SECTION
         OI    LKEDSW,LKSYSIN+LKEDCARD SETON SWITCHES
         MVC   BGWRKOUT(18),=CL18'//LKED.SYSIN DD * '  SETUP LKED.SYSIN
         MVC   BGWRKOUT+18(63),BGWRKOUT+17  CLEAR REST OF CARD
         B     NLOK                OUTPUT LKED.SYSIN CARD
         SPACE 1
NLSYSIN  EQU   *
         CLI   BGWRKOUT,C'%'       LIBRN MOVE SEQ.NO. IND. IN CLL1?
         BNE   *+12                NO. SKIP NEXT 2 INSTNS
         MVI   BGWRKOUT,C' '       CLEAR %
         MVI   FCARD,C' '          CLEAR %
*        IF THIS IS A NAME CARD FORCE SETSSI CARD
         SCAN  FCARD,=C' NAME ',YES=NLSSIOUT,REG=R1
*
*      ANY CARD SURVIVING THE ABOVE TESTS IS ASSUMED TO BE A LKED CARD
         B     NLOK
         SPACE 1
NLEOM    EQU   *
         MVI   BGERET,C'3'         SET END OF LKED DATA.
         MVI   LKEDSW,X'00'        CLEAR LKED SWITCHES
         B     NLEXIT
         SPACE 1
NLSSIOUT EQU   *
         OI    LKEDSW,LKEDNAME     INDICATE NAME CARD FOUND
         BAL   R4,SSINMCD          GET SSI INFO FOR MODULE
         MVC   BGWRKOUT(17),SETSSI MOVE TO LINK-AREA
         MVC   BGWRKOUT+17(64),BGWRKOUT+16  CLEAR REST OF CARD
         B     NLOK
         SPACE 1
NLNAMOUT EQU   *
         NI    LKEDSW,255-LKEDNAME  SETOFF NAME FOUND SWITCH
         MVC   BGWRKOUT,FCARD      MOVE NAME CARD TO LINK-AREA
NLOK     EQU   *
         MVI   BGERET,C'0'         SET GOOD RETURN CODE
         SPACE 1
NLEXIT   SUBOUT RESTORE=R4
         SPACE 5
***********************************************************************
*              GET NEXT RECORD IN MEMBER ON PDS. USUALLY TEST.PROCLIB *
***********************************************************************
         SPACE 1
PDSNEXT  SUBIN SAVE=R4
         MVI   BGERET,C'1'         SET EOM INDICATOR BY DEFAULT
         BAL   R4,PDSGET           GE< NEXT PDS RECORD
         LTR   R1,R1               END OF MEMBER?
         BZ    PDSNEXIT            YES. RETURN IMMEDIATELY
         LH    R2,PDSLRECL         GET LENGTH OF INPUT RECORD.
         BCTR  R2,0                REDUCE BY ONE FOR EXECUTED MOVE.
         EX    R2,PDSNMOVE         NEXT RECORD FOUND. MOVE TO LINKAREA
         MVI   BGERET,C'0'         SET GOOD RETURN CODE.
PDSNEXIT SUBOUT RESTORE=R4
         SPACE 2
PDSNMOVE MVC   BGWRKOUT(0),0(R1)   MOVE PDSREC FROM BUFFER TO WORKAREA
         EJECT
***********************************************************************
*              CLOSEDOWN ROUTINE                                      *
***********************************************************************
         SPACE 1
CLOSDOWN SUBIN
         CALL  MASTCLS
         TM    PDSSW,DDOPEN        IS SYSLIB OPEN?
         BNO   NOSLIBCL            NO. SKIP CLOSE
         CLOSE (PDSDCB)            CLOSE SYSL-B DATASET
         NI    PDSSW,255-DDOPEN    SETOFF OPEN SWITCH
NOSLIBCL EQU   *
         PACK  COUNTER,BGWNUM      MOVE CURRENT COUNTER VALUE
         NI    COUNTER+2,X'FC'     CORRECT SIGN.
         OPEN  (COUNTED,OUTPUT)    OPEN COUNTER DATASET
         PUT   COUNTED,COUNTSTR    WRITE OUT COUNTER READY FOR NEXT RUN
         CLOSE COUNTED             CLOSE COUNTER STORE
         SUBOUT
         SPACE 5
***********************************************************************
*              END OF BATCH ROUTINE                                   *
***********************************************************************
         SPACE 1
ENDOFBCH SUBIN
         PACK COUNTER,BGWNUM       MOVE CURRENT COUNTER VALUE
         NI    COUNTER+2,X'FC'     CORRECT SIGN.
         OPEN  (COUNTED,OUTPUT)    OPEN FOR UPDATE OF COUNT D/S
         PUT   COUNTED,COUNTSTR    SAVE LATEST COUNTER SETTING
         CLOSE COUNTED             CLOSE AGAIN FOR SECURITY
         SUBOUT
         EJECT
***********************************************************************
*              SSI EXPANSION AND MCD CODE ROUTINE.                    *
***********************************************************************
         SPACE 1
SSINMCD  SUBIN SAVE=R4
         PACK  COUNTER,BGWNUM      GET CURRENT COUNTER VALUE
         PACK  DWORD,UTYY          GET DECIMAL YEAR
         CVB   R2,DWORD            CHANGE IT TO HEX
         SLL   R2,8(0)             ADD TWO ZEROS TO RIGHT
         STH   R2,PRSSIYR          STORE FIRST PART OF SSI
         ZAP   DWORD,COUNTER       GET REQUEST NUMBER
         CVB   R2,DWORD            CONVERT TO HEX
         STH   R2,PRSSINO          STORE SECOND PART OF SSI
         LA    R1,PRSSIYR
         BAL   R4,HEXTRANS         EXPAND HEX INFO FOR PRINT
         MVC   BGESSI,PRSSIYR      MOVE EXPANSION TO LINK AREA
         MVC   SSINFO(8),PRSSIYR   MOVE EXPANSION TO INTERNAL SETSSI
         MVC   BGWRKOUT(9),MCDAREA MOVE MCD CODE TO LINKAREA
SSIEXIT  SUBOUT RESTORE=R4
         EJECT
***********************************************************************
*              STORE -DESC CARD ROUTINE                               *
***********************************************************************
         SPACE 1
STORDESC SUBIN
         MVC   DSTORE(36),BGVIRGIN SAVE DESCRIPTION FROM REQUEST
         MVI   BGERET,C'0'         SET GOOD RETURN CODE
         SUBOUT
         SPACE 5
***********************************************************************
*              SUPPLY DESCIPTION ROUTINE                              *
***********************************************************************
         SPACE 1
SPLYDESC SUBIN
         MVC   BGWRKOUT(36),DSTORE MOVE TO OUTPUT WORK AREA
         MVI   BGERET,C'0'         SET GOOD RETURN CODE
         SUBOUT
         SPACE 5
***********************************************************************
*              MOVE UPDATE NUMBER ROUTINE                             *
***********************************************************************
         SPACE 1
MOVEUNUM SUBIN
         MVC   BGWRKOUT+75(5),BGWNUM  MOVE UPDATE NO. TO END OF W/A
         MVI   BGERET,C'0'         SET GOOD RETURN CODE
         SUBOUT
         EJECT
***********************************************************************
*                  TRANSLATE FULLWORD OF HEX TO DISPLAY FORMAT        *
*                  R1 - CONTAINS ADDRESS OF 3-WORD AREA OF CORE       *
*                       CONTAING WORD TO BE TRANSLATED IN FIRST 4-BYTES
***********************************************************************
         SPACE
HEXTRANS SUBIN PREFIX=X,SAVE=(R2,R3)
         LA    R2,8                GET COUNTER OF 8
          LR   R3,R1               GET ADDRESS OF 3-WORD AREA
HEXLOOP  EQU   *
         MVO   0(5,R3),0(4,R3)     MOVE 4-BYTES ALONG ONE
*                                  LEAVE FIRST FOUR BITS WIT ZERO
         LA    R3,1(0,R3)          JUMP ONE BYTE
         BCT   R2,HEXLOOP          REDUCE COUNTER BY ONE AND BRANCH
         TR    0(8,R1),HEXTABLE    COUNTER EXPIRED. TRANSLATE.
         SUBOUT PREFIX=X,RESTORE=(R2,R3)
         SPACE
HEXTABLE DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         EJECT
***********************************************************************
*        PARTITIONED DATA SET PROCESSING SUBROUTINES                  *
***********************************************************************
         SPACE 2
         SPACE 4
PDSFIND  EQU   *
         LA    R15,12              RETURN CODE FOR D/S NOT OPEN.
         TM    PDSSW,DDOPEN        SYSLIB D/S OPEN?
         BZ    PDSFINDX            NO. RETURN TO CALLER
         LR    R0,R1               MOVE MEMBER NAME POINTER
         FIND  PDSDCB,(R0),D       POINT AT FIRST BLOCK FOR MEMBER
PDSFINDX EQU   *
         LR    R1,R15              PUR RETURN CODE IN R1
         BR    R4                  RETURN TO CALLER
         SPACE 4
PDSGET   EQU   *
         TM    PDSSW,DDOPEN        SYSLIB D/S OPEN?
         BZ    PDSEOF              NO. BRANCH TO EOF ROUTINE
         TM    PDSSW,FIRSTGET      FIRST RECORD FOR NEW MEMBER
         BO    PDSGET1             NO. BRANCH
         GETBUF  PDSDCB,(R2)       GET ADDRESS FIRST BUFFER
         ST    R2,PDSABUF1         STORE IN READ CONTROL BLOCK1
         GETBUF PDSDCB,(R2)        GET ADDRESS OF SECOND BUFFER.
         ST    R2,PDSABUF2         STORE IN READ CONTROL BLOCK2
         READ  PDSECB1,SF,MF=E     READ FIRST DATA BLOCK.
         OI    PDSSW,FIRSTGET+READREQ    INDICATE FIRST READ  DONE
*                                       AND ANOTHER READ REQUIRED
PDSGET1  EQU   *
         TM    PDSSW,READREQ       IS A READ REQUIRED
         BNO   PDSGET2             NO. BRANCH
         CHECK PDSECB1             WAIT FOR I/O TO COMPLETE
         MVC   PDSSEGAD,PDSABUF1        GET ADDRESS OF FIRST RECORD
         L     R2,PDSIOBA          GET ADDRESS OF IOB.
         LH    R3,PDSBLKSI         GET MAXIMUM BLOCKSIZE,
         SH    R3,14(0,R2)         SUBTRACT IOB RESIDUAL COUNT
         STH   R3,PDSBYTES         TO GIVE BYTES IN NEW BLOCK.
         NI    PDSSW,255-READREQ   RESET READ SWITCH
         L     R1,PDSABUF2         *
         MVC   PDSABUF2,PDSABUF1   ** SWAP OVER BUFFERS
         ST    R1,PDSABUF1         *
         READ  PDSECB1,SF,MF=E     INITIATE READ TO FILL OTHER BUFFER
PDSGET2  EQU   *
         L     R1,PDSSEGAD         GET CURRENT BUFFER SEGMENT ADDRESS
         LH    R3,PDSBYTES         GET BYTES LEFT IN CURRENT BUFFER
         LH    R2,PDSLRECL         GET RECORD LENGTH
         SR    R3,R2               SUBTRACT FROM BYTES LEFT IN BUFFER
         BNZ   *+8                 BRANCH IF STILL SOME LEFT
         OI    PDSSW,READREQ       SET FLAG TO INVOKE PHYSICAL READ.
         STH   R3,PDSBYTES         SAVE BYTES LEFT IN BUFFER
         LA    R2,0(R1,R2)         POINT TO NEXT RECORD IN BUFFER
         ST    R2,PDSSEGAD         SAVE NEW ADDRESS
         BR    R4                  RETURN TO CALLER
         SPACE 4
PDSEODAD EQU   *
         NI    PDSSW,255-FIRSTGET  SET FIRSTTIME SWITCH FOR NEXT MEMBER
         L     R2,PDSABUF1         GET 1ST BUFFER ADDRESS
         FREEBUF PDSDCB,(R2)       FREE IT
         L     R2,PDSABUF2         GET 2ND BUFFER ADDRESS
         FREEBUF PDSDCB,(R2)       FREE IT
PDSEOF   EQU   *
         SR    R1,R1               INDICATE END OF MEMBER
         BR    R4                  RETURN TO CALLER
         SPACE 5
IOERROR4 EQU   *
         SYNADAF ACSMETH=BPAM      CALL O.S. ANALYSIS ROUTINE
         MVC   LINE15+12(86),50(R1) SAVE RESULT OF ANALYSIS
         SYNADRLS ,                RELEASE SYNAD BUFFER
         WTO   MF=(E,LINE14)       LET OPERATOR KNOW OF I/O ERROR
         B     PDSEODAD            TERMINATE THIS MEMBER
         EJECT
***********************************************************************
*                  CRITICAL ERROR. ABEND WITH LIBRARYN COMPLETION CODE*
***********************************************************************
         SPACE
ABORT    EQU    *
         ABEND 2048,DUMP,STEP
         EJECT
***********************************************************************
*                  DATA CONTROL BLOCKS                                *
***********************************************************************
         SPACE 3
*MASTER  DCB   IS DEFINED IN    THE LIBRARIAN FILE ACCESS
*              INTERFACE ROUTINES
         SPACE
COUNTED  DCB   DDNAME=COUNTER,MACRF=(GM,PM),EODAD=ABORT,               C
               DSORG=PS,RECFM=F,LRECL=80,BLKSIZE=80,BUFNO=1
         SPACE 1
PDSDCB   DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=R,BUFNO=2,RECFM=FB,        C
               EODAD=PDSEODAD,SYNAD=IOERROR4
PDSBLKSI EQU   PDSDCB+62
PDSLRECL EQU   PDSDCB+82
         SPACE
         READ  PDSECB1,SF,PDSDCB,PDSABUF1,'S',MF=L
PDSABUF1 EQU   PDSECB1+12
PDSIOBA  EQU   PDSECB1+16
         SPACE 5
***********************************************************************
*                  WORKING STORAGE                                    *
***********************************************************************
         SPACE 3
FAIRRC   DC    C' '                RETURN CODE FROM FILE ACCESS
FAIRNAME DC    CL8' '              MODULE NAME TO     "    "
FAIRDATA DS    0CL100              DATA RETURNED BY FILE ACCESS
FPSWD    DC    CL4' '              PASSWORD
FADDDTE  DC    CL6' '              DATE ADDED (MMDDYY)
FUPDATE  DC    CL10' '             LAST UPDATE (MMDDYYHHMM)
FNOCARD  DC    PL3'0'              NO. OF CARDS IN MODULE
FPGMR    DC    CL15' '             PROGRAMMERS NAME
FPROC    DC    CL8' '              8BYTES OF PROC STATEMENT
FDESC    DC    CL30' '             DESCRIPTION OF MODULE
         DC    CL25' '
         ORG   FAIRDATA            REDEFINE FAIRDATA
FCARD    DC    CL80' '             CARD IMAGE OF DATA CARD
FSEQND   DC    CL8' '              SEQUENCE NUMBER
         DC    CL3' '
FCDATE   DC    CL8' '              DATE CARD ADDED TO MASTER
         ORG
         SPACE
MODHDR   DS    CL360
         CNOP  4,8
PRSSIYR  DC    H'0'
PRSSINO  DC    H'0'
DWORD    DS    D
         SPACE 1
DSTORE   DC    CL6'-DESC '
DESC     DC    CL30' '
LINE14   DS    3F
         DC    AL2(WTOENDD-*),H'0',C'MOPPREQ - '
LINE15   DS    0CL98
         DC    C'I/O ERROR - '
         DC    CL86' '
WTOENDD  EQU   *
         SPACE
CODE     DC    PL3'7142'
MCDAREA  DC    CL9'-MCD'
P04PSWD  DC    CL4'TEST'
TPROC    DC    CL4'TLIB'           SOURCE CODE FOR TEST.PROCLIB
PDSABUF2 DC    F'0'
PDSSEGAD DC    F'0'
PDSBYTES DC    H'0'
SETSSI   DC    CL17' SETSSI          '
SSINFO   EQU   SETSSI+8
LKEDSW   DC    X'00'
LKEDNAME EQU   X'80'               SETSSI CARD OUTPUT AS A RESULT OF
*                                  A LKED 'NAME' CARD BEING DETECTED
LKEDCARD EQU   X'40'               LKED CARD ALREADY IN INPUT AREA
LKSYSIN  EQU   X'20'               //LKED.SYSIN HAS BEEN FORCED
PDSSW    DC    X'00',AL3(PDSDCB),CL8'SYSLIB'
         SPACE 1
DDSTAT   EQU   1                   DD STATEMENT FOUND
DDOPEN   EQU   2                   DATA SET OPEN
DDOUTPUT EQU   X'80'               OUTPUT DATASET MASK
*        NEXT 2 SWITCHES ARE FOR PDS PROCESSING
FIRSTGET EQU   X'80'               FIRST TIME ROUND FOR CURRENT MEMBER
READREQ  EQU   X'40'               PHYSICAL READ REQUIRED
         SPACE 1
COUNTSTR DS    0CL80
COUNTER  DC    PL3'0'
COUNTYR  DC    CL2'76'
         DC    CL75' '
INCIND   DC    CL1'1'              REPLACE -INC WITH CARDS REFERENCED
         SPACE 1
SPACES   DC    CL15' '
         LTORG
         END   T586P14
         EJECT
