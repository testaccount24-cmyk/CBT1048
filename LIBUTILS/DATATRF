*                   POINTERS AND INDICATORS
*
*  DCDSN   DISK SEQUENCE NUMBER (DSN) OF THE CURRENT RECORD
*  DSNA    DSN OF THE NEXT RECORD TO BE READ FROM A (D0 rL()
*
*  DSNA1   DSN OF THE 1ST RECORD TO BE READ FROM A (D0)IF D.T. WITHOUT
*          CLEAR IS SELECTED  (DSNA1 IS RECORDED ON DCB1   FILE)
*
*  DSNA2   DSN OF THE 1ST RECORD TO BE READ FROM A IF D.T. WITH
*          CLEAR IS SELECTED  (DSNA2 IS RECORDED ON PCB1   FILE)
*
*  DSNA0   INITIAL DSN TO BE FOUND ON A (DSNA0 = DSNA1 OR DSNA2
*          DEPENDING ON THE SELECTED D.T.
*
*  DSNB  **
*  DSNB1  *  SAME DEFINITIONS AS HEREABOVE BUT
*  DSNB2  *  RELATED TO B (DSNB1 AND DSNB2 ARE ALSO RECORDED ON PTD0  )
*  DSNB0 **
*
*
*  DSNAA   DSN OF THE NEXT RECORD TO BE READ FROM A (C0/B2 FILE)
*
*  DSNAA1  DSN OF THE 1ST RECORD TO BE READ FROM A (C0/B2 FILE)
*          IF D.T. WITHOUT CLEAR IS SELECTED (DSNAA1 IS RECORDED
*          ON PTC0B2 FILE)
*
*  DSNAA2  DSN OF THE 1ST RECORD TO BE READ FROM A (C0/B2 FILE)
*          IF D.T. WITH CLEAR IS SELECTED (DSNAA2 IS RECORDED ON
*          PTC0B2 FILE)
*  DSNAA0  INITIAL DSN TO BE FOUND ON A (DSNAA0 = DSNAA1 OR DSNAA2
*          DEPENDING ON THE SELECTED D.T.)
*
*  DSNBB  **
*  DSNBB1  * SAME DEFINITIONS AS HEREABOVE BUT RELATED TO B
*  DSNBB2  * (DSNBB1 AND DSNBB2 ARE ALSO  RECORDED ON PTC0B2)
*  DSNBB0 **
*
*
*  THE 1ST FULLWORD OF THE 1ST RECORD OF DCB1   CONTAINS
*  THE DCB1   POINTER (ADRESS OF THE NEXT RECORD TO BE WRITTEN)
*
*  IDEM FOR DCB2
         EJECT
*                   SWITCHES
*
*  SWITCH = ON   ACTIVE CONTROLLER IS CONNECTED TO BSCA
*
*         = OFF  STANDBY CONTROLLER IS CONNECTED TO BSCA
*
*  SWER  = ON   AN ERROR OCCURED DURING D.T.
*
*         = OFF  NO ERROR OCCURED DURING D.T.
*
*  SWDA1  = ON   NO RECORD HAS BEEN READ FROM A SIDE (D0 FILE)
*
*         = OFF  AT LEAST ONE RECORD HAS BEEN READ FRON A SIDE(D0 FILE)
*                (CLEAR OF PRECEDENTLY TRANSFERED DATA HAS BEEN MADE)
*
*  SWDB1  = ON  **
*                * SAME DEFINITIONS AS SWDA1 BUT RELATED TO B (D0 FILE)
*         = OFF **
*
*  SWDA2  = ON   NO RECORD HAS BEEN READ FROM A SIDE (C0/B2 FILE)
*
*         = OF  AT LEAST ONE RECORD HAS BEEN READ FROM A SIDE (C0BB2)
*
*  SWDB2  = ON  **
*                * SAME DEFINITIONS AS SWDA2 BUT RELATED TO B (C0/B2)
*         = OF **
*
*  SWA    = ON   D.T. FROM ACTIVE ONLY (SELECTION STATUS)
*
*         = OFF  D.T. FROM BOTH SIDES  (SELECTION STATUS)
*
*  SWC    = ON   D.T.  WITH CLEAR (SELECTION STATUS)
*
*         = OFF  D.T.  WITHOUT CLEAR (SELECTION STATUS)
*
*
*
*  SWS    = ON   INITIAL DSN OF ANY FILE WAS NOT THE REQUESTED DSN
*
*         = OFF  INITIAL DSN'S WERE OK
*
*  SWSEL  = ON   D.T. SELECTION IS TO BE DONE
*
*         = OFF  D.T. SELECTION IS DONE
         EJECT
*INITIALISATION
*
         PRINT NOGEN
SL3750   START
         SAVE  (14,12),,*
         BALR  R12,0
         USING *,R12,R6
         LA    6,4095(12)
         LA    6,1(6)
         ST    R13,SAV+4
         LR    R11,R13
         LA    R13,SAV
         ST    R13,8(R11)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
REG      EQU   5
         L     R1,0(R1)
         CLC   0(2,R1),=H'0'
         BE    IN1
         MVC   SWPAR,2(R1)
         CLC   SWPAR,=C'AS  '
         BE    IN2
         CLC   SWPAR,=C'CLAB'
         BE    IN2
IN1      EQU   *
         MVC   SWPAR,=C'0000'
IN2      EQU   *
         USING IHADCB,8
         USING IECTDECB,9
         LA    8,DCB3750
         LA    9,DECB3750
         MVC   SWSEL,ON
         MVC   SWER,OFF
         MVC   SWDA1,ON
         MVC   SWDB1,ON
         MVC   SWDA2,ON
         MVC   SWDB2,ON
         MVC   SWS,OFF
         OPEN  (DCB1,(UPDAT))
         OPEN  (DCB2,(UPDAT))
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD1
         MVC   PT1(4),IOPT3750
         MVC   DSNA1(2),IOPT3750+4
         MVC   DSNA2(2),IOPT3750+6
         MVC   DSNB1(2),IOPT3750+8
         MVC   DSNB2(2),IOPT3750+10
         MVC   PT2(4),IOPT3750+99
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD2
         MVC   PT3(4),IOPT3750
         MVC   DSNAA1(2),IOPT3750+4
         MVC   DSNAA2(2),IOPT3750+6
         MVC   DSNBB1(2),IOPT3750+8
         MVC   DSNBB2(2),IOPT3750+10
         MVC   PT4(4),IOPT3750+99
*   OPEN
DEB      EQU   *
         OPEN  (SNAPDUMP,(OUTPUT))
         OPEN  (DCB3750)
         TM    DCBOFLGS,X'10'
         BO    OPENS
         WTO   'OPEN NOT OK'
         B     DEB
OPENS    EQU   *
         B     A1
         EJECT
*   ACTIVATION PAR LE 370 DE LA LIGNE BSC
A1       EQU   *
         MVC   SWITCH,ON               *BSCA ACTIVATED ON ACTIVE
         MVC   OUT(6),ME0              *START*
         BAL   REG,WRTIXR
         BAL   REG,RAB                 *UNLOCK*
         BAL   REG,RDTI
         CLC   TYPE(2),E1              *UNLOCK CHECKING
         BE    A2
         BAL   REG,RAB
         BAL   REG,RDTT
         CLC   TYPE(2),E1
         BE    A2
         XC    ECBAD,ECBAD
         XC    REPLY,REPLY
         WTOR  'UNLOCK NOT RECEIVED -RETRY OR CANCEL',REPLY,6,ECBAD
A4       EQU   *
         WAIT  ECB=ECBAD
         CLC   REPLY(5),=C'RETRY'
         BE    A3
         MVC   SWER,ON
         CLC   REPLY(6),=C'CANCEL'
         BE    EOJ
         XC    ECBAD,ECBAD
         XC    REPLY,REPLY
         MVC   SWER,OFF
         WTOR  'RETRY OR CANCEL',REPLY,6,ECBAD
         B     A4
A3       EQU   *
         BAL   REG,WRTR
         B     A1
A2       EQU   *
         BAL   REG,RAB
         BAL   REG,RDTRV
         CLI   INAREA,EOT
         BE    A5
         BAL   REG,WRTR
A5       EQU   *                       *ENDSTART*
         MVC   OUT(6),ME5
         BAL   REG,WRTIXR
         EJECT
*   SELECTION OF DATA TRANSFER
SEL      EQU   *
         CLC   SWSEL,OFF
         BE    S1                      *SKIP THE SELECTION
         MVC   SWSEL,OFF
         CLC   SWPAR,=C'CLAB'
         BNE   S02
         MVC   REP(4),SWPAR
         WTO   'CLEAR PROCEDURE'
         B     TRCLAB
S02      EQU   *
SEL1     EQU   *
         XC    ECBAD,ECBAD
         XC    REPLY,REPLY
         WTO   'DATA TRANSFER PROCEDURE'
         CLC   SWPAR,=C'0000'
         BE    S01
         MVC   REP(4),SWPAR
         B     TRANAS
S01      EQU   *
         WTOR  'SELECT D.T. REPLY  A,AS,AA,AB,CLAB OR ASAB',           *
               REPLY,4,ECBAD
*
*  SELECTION OF D.T.
*
*    A     D.T. OF ACTIVE WITHOUT CLEAR
*    AS    D.T. OF BOTH   WITHOUT CLEAR
*    AA    D.T. OF ACTIVE WITH    CLEAR OF A
*    AB    D.T. OF ACTIVE WITH    CLEAR OF B
*    ASAB  D.T. OF BOTH   WITH    CLEAR OF BOTH
*   CLAB  CLEAR OF BOTH WITHOUT D.T.
         WAIT  ECB=ECBAD
         MVC   REP(4),REPLY
         CLC   REPLY(4),=C'ASAB'
         BE    TRASAB
         CLC   REPLY(4),=C'AS  '
         BE    TRANAS
         CLC   REPLY(4),=C'AA  '
         BE    TRAA
         CLC   REPLY(4),=C'AB  '
         BE    TRAB
         CLC   REPLY(4),=C'A   '
         BE    TRANA
         CLC   REPLY(4),=C'CLAB'
         BE    TRCLAB
         B     SEL1
*  IN CASE OF RETRY ,NO SELECTION IS ASRED
*  THE PROGRAM RETRIES WITH THE SAME D.T. SELECTION
*  BUT WITH THE APPROPRIATE CLEAR MASK
S1       MVC   SWER,OFF
         CLC   REP(4),=C'CLAB'
         BE    TAS0
         CLC   SWC,OFF
         BE    TAS0
         CLC   SWA,ON
         BNE   S2
         CLC   SWDA1,OFF               *IF SWDA1=OFF CLEAR OF A
         BE    TRANA                   *HAS BEEN DONE (1ST REC TRANSF.)
         CLC   SWDB1,OFF               *IF SWDB1=OFF CLEAR OF B
         BE    TRANA                   *HAS BEEN DONE (1ST REC TRANSF.)
         CLC   SWDA2,OFF
         BE    TRANA
         CLC   SWDB2,OFF
         BE    TRANA
         B     TAS0
S2       EQU   *
         CLC   SWDA1,ON                *IF SWDA1=OFF CLEAR OF A
         BE    S3                      *HAS BEEN DONE (1ST REC TRANSF.)
S4       EQU   *
         CLC   SWDB1,ON                *IF SWDB1=OFF CLEAR OF B
         BNE   TRANAS                  *HAS BEEN DONE (1ST REC TRANSF.)
         CLC   SWDB2,ON
         BNE   TRANAS
         MVC   ME7+4(1),X0B            *DT MASK  DT OF BOTH,CLEAR OF B
         B     TAS0
S3       EQU   *
         CLC   SWDA2,ON
         BNE   S4
         CLC   SWDB1,ON                *IF SWDB1=OFF CLEAR OF B
         BNE   S6
S5       EQU   *
         CLC   SWDB2,ON
         BE    TAS0                    *HAS BEEN DONE
S6       EQU   *
         MVC   ME7+4(1),X07            *DT MASK  DT OF BOTH,CLEAR OF A
         B     TAS0
         EJECT
*    SWA  ON   TRASFER OF ACTIVE
*    SWA  OFF  TRASFER OF BOTH
*    SWC  ON   WITH    CLEAR
*    SWC  OFF  WITHOUT CLEAR
*    TRANSFER OF ACTIVE CONTROLLER
TRANA    MVC   ME7+4(1),X01            *D.T. MASK
         MVC   DSNA0,DSNA1
         MVC   DSNB0,DSNB1
         MVC   DSNAA0,DSNAA1
         MVC   DSNBB0,DSNBB1
         MVC   SWC,OFF
         MVC   SWA,ON
         B     TAS0
*TRANSFER OF BOTH CONTROLLERS    TRANAS
TRANAS   EQU   *
         MVC   ME7+4(1),X03            *D.T. MASK
         MVC   DSNA0,DSNA1
         MVC   DSNB0,DSNB1
         MVC   DSNAA0,DSNAA1
         MVC   DSNBB0,DSNBB1
         MVC   SWA,OFF
         MVC   SWC,OFF
         B     TAS0
*   TRANSFER OF BOTH WITH CLEAR
TRASAB   MVC   ME7+4(1),X0F            *D.T. MASK
         MVC   DSNA0,DSNA2
         MVC   DSNB0,DSNB2
         MVC   DSNAA0,DSNAA2
         MVC   DSNBB0,DSNBB2
         MVC   SWC,ON
         MVC   SWA,OFF
         B     TAS0
*   TRANSFER OF ACTIVE WITH CLEAR OF A
TRAA     MVC   ME7+4(1),X05            *D.T. MASK
         MVC   DSNA0,DSNA2
         MVC   DSNB0,DSNB2
         MVC   DSNAA0,DSNAA2
         MVC   DSNBB0,DSNBB2
         MVC   SWA,ON
         MVC   SWC,ON
         B     TAS0
*   TRANSFER OF ACTIVE WITH CLEAR OF B
TRAB     MVC   ME7+4(1),X09            *D.T. MASK
         MVC   DSNA0,DSNA2
         MVC   DSNB0,DSNB2
         MVC   DSNAA0,DSNAA2
         MVC   DSNBB0,DSNBB2
         MVC   SWA,ON
         MVC   SWC,ON
         B     TAS0
*   CLEAR OF BOTH WITHOUT DT
TRCLAB   EQU   *
         MVC   ME7+4(1),X0C            *D.T. MASK
         MVC   SWA,ON
         MVC   SWC,ON
         B     TAS0
         EJECT
*   TRANSFER
TAS0     EQU   *
*  START DATA TRANSFER
         MVC   OUT(6),ME7              *START D.T.
         BAL   REG,WRTIXR
         SNAP  DCB=SNAPDUMP,ID=3,                                      *
               PDATA=(REGS),                                           *
               STORAGE=(START,STOP)
TAS20    EQU   *
*  READ DATA FROM ACTIVE
         BAL   REG,RAB1
         BAL   REG,RDTI
         B     TAS1
TAS4     EQU   *
         BAL   REG,RAB1
         BAL   REG,RDTT
*  ACTIVE DATA TRANSFER CHECKING
*    D1    D.T. MESSAGE
*    EOT
*    E201  SWITCHOVERSTOP               END OF ACTIVE FILE
*    E800  STOP D.T.                    IF D.T. OF ACTIVE ONLY OR CLAB
*    E802  ERROR DURING D.T.
*    E801  D.T. NOT POSSIBLE            UTIL. PROGR RUNNING IN 3750
TAS1     EQU   *
         CLC   REP(4),=C'CLAB'
         BE    TAS2
         CLC   TYPE(2),D1              *D1   D.T. MESS
         BNE   TAS2
         BAL   REG,DATA                *MESSAGES ROUTING
         B     TAS4
TAS2     EQU   *
         CLI   INAREA,EOT              *AT THE END OF EACH 3750
         BE    TAS20                   *FILE
         CLC   SWA,ON                  *= ON IF D.T. OF ACTIVE ONLY
         BE    TAS25                   *THEN SKIP SWITCHOVERSTOP
         CLC   TYPE(2),E2              *SWITCHOVERSTOP
         BE    TAS3
TAS25    EQU   *
         CLC   TYPE(2),E8              *STOP D.T.
         BNE   ERREUR                  *IF OTHER THAN LISTED ABOVE
         CLC   TYPE+2(1),X2            *E802 ERR DURING D.T.
         BNE   TAS22
         WTO   'ACTIVE   ERROR DURING DATA TRANSFER'
         B     ERREUR
TAS22    CLC   TYPE+2(1),E1+2          *E801 D.T. NOT POSSIBLE
         BNE   TAS24
         WTO   'ACTIVE  DATA TRANSFER NOT POSSIBLE'
         B     ERREUR
TAS24    EQU   *
         CLC   SWA,ON
         BNE   ERREUR
         CLC   TYPE+2(1),F0            *E800 STOP D.T.(ACTIVE ONLY)
         BE    DA3
         B     ERREUR
         EJECT
*    TRANSFER OF STANDBY
*    START OF THE BSCA SWITCHING PROCEDURE
TAS3     EQU   *
         WTO   'START BSC SW PROC'
         BAL   REG,RAB1
         BAL   REG,RDTRV
         CLI   INAREA,EOT
         BE    TAS5
         BAL   REG,WRTR
TAS5     EQU   *
         MVC   OUT(6),ME6              *ENDSTOP
         BAL   REG,WRTIXR
*  THE 3750 WILL SWITCH THE RSCA FROM ACTIVE TO STANDBY AND
*                SEND A START MESSAGE (E0) TO 370
TAS6     EQU   *
         BAL   REG,RAB
         BAL   REG,RDTI                *READ START(E0)
         CLC   TYPE(2),E0              *START MESS CHECKING
         BE    TAS7
         CLI   INAREA,EOT              *IF EOT IN LIEU OF E0
         BE    TAS30                   *GO TO ERR MESSAGE
         BAL   REG,RAB                 *ELSE
         BAL   REG,RDTT                *RETRY TO READ E0
         CLC   TYPE(2),E0              *E0 MESSAGE CHECKING
         BE    TAS7                    *IF E0
TAS30    WTO   'START STANDBY BSC  E0 NOT RECEIVED'
         BAL   REG,WRTR
         B     ERREUR
TAS7     EQU   *
         MVC   SWITCH,OFF              *= BSCA ON STANDBY
         BAL   REG,RAB
         BAL   REG,RDTRV
         CLI   INAREA,EOT
         BE    TAS8
         BAL   REG,WRTR
TAS8     EQU   *
         MVC   OUT(6),ME1              *UNLOCK
         BAL   REG,WRTIX
         MVC   OUT(6),ME5              *ENDSTART
         BAL   REG,WRTTXR
*  READ DATA FROM STANDBY
TAS21    EQU   *
         BAL   REG,RAB1
         BAL   REG,RDTI
         B     TAS9
TAS11    EQU   *
         BAL   REG,RAB1
         BAL   REG,RDTT
*  STANDBY DATA CHECKING
*    D1    D.T. MESSAGE
*    EOT
*    E201  SWITCHOVERSTOP               END OF STANDBY FILE
*    E800  STOP D.T.
*    E802  ERROR DURING D.T.
*    E801  D.T. NOT POSSIBLE            UTIL PROGR RUNNING IN 3750
TAS9     EQU   *
         CLC   TYPE(2),D1
         BNE   TAS10
         BAL   REG,DATA
         B     TAS11
TAS10    EQU   *
         CLI   INAREA,EOT
         BE    TAS21
         CLC   TYPE(2),E8              *STOP DATA TRANSFER
         BNE   ERR1
         CLC   TYPE+2(1),F0
         BE    TAS12
         CLC   TYPE+2(1),X2
         BNE   TAS23
         WTO   'ERROR DURING DATA TRANSFER STANDBY'
         B     ERR1
TAS23    EQU   *
         WTO   'STDBY   DATA TRANSFER NOT POSSIBLE'
         B     ERR1
*    READ SWITCHOVER STOP
TAS12    EQU   *
         BAL   REG,RAB
         BAL   REG,RDTT
TAS122   EQU   *
         CLI   INAREA,EOT
         BE    TAS121
         CLC   TYPE(3),E2              *SSWITCHOVERSTOP
         BNE   ERR1
         B     DA2
TAS121   EQU   *
         BAL   REG,RAB
         BAL   REG,RDTI
         B     TAS122
         EJECT
*    BSCA SWITCHING FROM STANDBY TO ACTIVE
*  THE 3750 WILL SWITCH THE RSCA FROM STANDBY TO ACTIVE AND
*                SEND A START MESSAGE (E0) TO 370
DA2      EQU   *
         BAL   REG,RAB
         BAL   REG,RDTRV
         CLI   INAREA,EOT
         BE    TAS13
         BAL   REG,WRTR
TAS13    EQU   *
         MVC   OUT(6),ME6              *ENDSTOP
         BAL   REG,WRTIXR
TAS14    EQU   *
         BAL   REG,RAB
         BAL   REG,RDTI                *READ START
         CLC   TYPE(2),E0
         BE    DA3
         CLI   INAREA,EOT
         BE    TAS31
         BAL   REG,RAB
         BAL   REG,RDTT
         CLC   TYPE(2),E0
         BE    DA3
TAS31    WTO   'RESTART ACTIVE BSC   E0 NOT RECEIVED'
         B     ERR1
DA3      EQU   *
         BAL   REG,RAB
         BAL   REG,RDTRV
         CLI   INAREA,EOT
         BE    DA1
         BAL   REG,WRTR
         B     DA1
         EJECT
*   DEACTIVATION DE LA LIGNE BSC
DA1      EQU   *
         MVC   SWITCH,ON               *BSCA ON ACTIVE
         MVC   OUT(4),ME2              *STOP
         MVC   OUT+4(2),F0
         BAL   REG,WRTIX
         MVC   OUT(6),ME6              *ENDSTOP
         BAL   REG,WRTTXR
         MVC   SWITCH,OFF
         B     EOJ
         EJECT
*   END OF JOB
EOJ      EQU   *
         CLOSE (DCB3750)
MEOJ     EQU   *
         CLC   SWER,ON                 *IF AN ERROR OCCURED
         BE    MEOJ1                   *GO TO RETRY OR CANCEL
         CLC   REP(4),=C'CLAB'
         BE    MEOJ8
         WTO   'DATA TRANSFER COMPLETED'         *ELSE...
         CLC   SWS,ON
         BNE   MEOJ2
         WTO   'DATATRF - ABEND - JOB FOR J. NOLS ****'
         ABEND 3750
MEOJ1    XC    ECBAD,ECBAD
         XC    REPLY,REPLY
         WTO   ' LD AE  RESET   ON 3750'
         WTOR  'EOJ                 -RETRY OR CANCEL',REPLY,6,ECBAD
         WAIT  ECB=ECBAD
         CLC   REPLY(5),=C'RETRY'
         BE    DEB
         CLC   REPLY(6),=C'CANCEL'
         BNE   MEOJ1
         WTO   'CANCELED BY OPERATOR'
         ABEND 3
MEOJ2    EQU   *
         CLOSE (DCB1)
         CLOSE (DCB2)
         CLOSE (SNAPDUMP)
RET      L     R13,SAV+4
         LM    14,12,12(13)
         BR    14
MEOJ8    EQU   *
         MVC   IOPT3750(4),PT1
         MVC   IOPT3750+4(2),DSNA2
         MVC   IOPT3750+6(2),DSNA2
         MVC   IOPT3750+8(2),DSNB2
         MVC   IOPT3750+10(2),DSNB2
         MVC   IOPT3750+99(4),PT2
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR1
         SNAP  DCB=SNAPDUMP,ID=9,PDATA=(REGS),                         *
               STORAGE=(IOPT3750,IOPT3750+11)
         MVC   IOPT3750(4),PT3
         MVC   IOPT3750+4(2),DSNAA2
         MVC   IOPT3750+6(2),DSNAA2
         MVC   IOPT3750+8(2),DSNBB2
         MVC   IOPT3750+10(2),DSNBB2
         MVC   IOPT3750+99(4),PT4
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR2
         WTO   'CLEAR COMPLETED'
         SNAP  DCB=SNAPDUMP,ID=9,PDATA=(REGS),                         *
               STORAGE=(IOPT3750,IOPT3750+11)
         B     MEOJ2
         EJECT
*  ERROR LOOPS
*
RSYNAD1  SNAP  DCB=SNAPDUMP,ID=2,PDATA=(REGS),                         X
               STORAGE=(DECB1,DECB1+28,DECB2,DECB2+28,IOPT3750,        X
               IOPT3750+255,DECB3,DECB3+28,DECB4,DECB4+28)
         ABEND 2,DUMP
         B     MEOJ2
*
*DUMP    DEACTIVATION    EOJ
ERREUR   EQU   *
         MVC   SWER,ON                 *AN ERROR OCCURED DURING D.T.
         WTO   'ERREUR  ACTIVE'
         SNAP  DCB=SNAPDUMP,ID=0,                                      *
               PDATA=(REGS),                                           *
               STORAGE=(START,STOP)
         BAL   REG,WRTR
         B     DA1
ERR1     EQU   *
         MVC   SWER,ON                 *AN ERROR OCCURED DURING D.T.
         WTO   'ERR1 STANDBY'
         SNAP  DCB=SNAPDUMP,ID=6,                                      *
               PDATA=(REGS),                                           *
               STORAGE=(START,STOP)
         BAL   REG,WRTR
         B     EOJ
*
         EJECT
*   ROUTINES
*   CREATION DES MESSAGES 370
DATA     EQU   *
         CLI   DCAB,XA
         BE    DATA1
         CLI   DCAB,X1A
         BE    DATA11
         CLI   DCAB,XB
         BE    DATA2
         CLI   DCAB,X1B
         BE    DATA12
         WTO   'WRONG D1 MESSAGE  SIDE A OR B NOT FOUND'
         B     DATA9
DATA1    EQU   *
         CLC   SWDA1,ON
         BE    DATA5
         B     DATA3
DATA5    EQU   *
         MVC   SWDA1,OFF
         CLC   DCDSN,DSNA0
         BE    DATA51
         WTO   'WARNING ON A SIDE (DATA) INITIAL DSN OTHER THAN REQUEST*
               ED'
DATA51   EQU   *
         MVC   DSNA,DCDSN
         MVC   DSNA1,DCDSN
DATA3    EQU   *
         XR    R1,R1
         XR    R2,R2
         LH    R1,DCDSN
         LH    R2,DSNA
         CLC   DCDSN,DSNA
         BE    DATA31
         BL    DATA32
DATA33   EQU   *
         SH    R1,DSNA
         CH    R1,=X'10E0'
         BL    DATA34
         B     DATA9
DATA34   EQU   *
         WTO   'A SIDE   D1 MESSAGE(S) LOST'
         B     DATA31
DATA32   EQU   *
         SH    R2,DCDSN
         CH    R2,=X'10E0'
         BH    DATA34
         B     DATA9
DATA31   EQU   *
         CLC   DCDSN,=X'FFFF'
         BE    DATA35
         XR    R3,R3
         LH    R3,DCDSN
         LA    R3,1(R3)
         STH   R3,DSNA
         B     DATA36
DATA35   EQU   *
         XC    DSNA,DSNA
DATA36   EQU   *
         MVC   DSNA2,DSNA
         B     DATA4
DATA2    EQU   *
         CLC   SWDB1,ON
         BE    DATA7
         B     DATA6
DATA7    EQU   *
         MVC   SWDB1,OFF
         CLC   DCDSN,DSNB0
         BE    DATA71
         WTO   'WARNING ON B SIDE (DATA) INITIAL DSN OTHER THAN REQUEST*
               ED'
DATA71   EQU   *
         MVC   DSNB,DCDSN
         MVC   DSNB1,DCDSN
DATA6    EQU   *
         XR    R1,R1
         XR    R2,R2
         LH    R1,DCDSN
         LH    R2,DSNB
         CLC   DCDSN,DSNB
         BE    DATA61
         BL    DATA62
DATA63   EQU   *
         SH    R1,DSNB
         CH    R1,=X'10E0'
         BL    DATA64
         B     DATA9
DATA64   EQU   *
         WTO   'B SIDE   D1 MESSAGE(S) LOST'
         B     DATA61
DATA62   EQU   *
         SH    R2,DCDSN
         CH    R2,=X'10E0'
         BH    DATA64
         B     DATA9
DATA61   EQU   *
         CLC   DCDSN,=X'FFFF'
         BE    DATA65
         XR    R3,R3
         LH    R3,DCDSN
         LA    R3,1(R3)
         STH   R3,DSNB
         B     DATA66
DATA65   EQU   *
         XC    DSNB,DSNB
DATA66   EQU   *
         MVC   DSNB2,DSNB
         B     DATA4
DATA11   EQU   *
         CLC   SWDA2,ON
         BE    DATA15
         B     DATA13
DATA15   EQU   *
         MVC   SWDA2,OFF
         CLC   DCDSN,DSNAA0
         BE    DATA151
         WTO   'WARNING ON A SIDE (ACR) INITIAL DSN OTHER THAN REQUESTE*
               D'
         MVC   SWS,ON
DATA151  EQU   *
         MVC   DSNAA,DCDSN
         MVC   DSNAA1,DCDSN
DATA13   EQU   *
         XR    R1,R1
         XR    R2,R2
         LH    R1,DCDSN
         LH    R2,DSNAA
         CLC   DCDSN,DSNAA
         BE    DATA131
         BL    DATA132
DATA133  EQU   *
         SH    R1,DSNAA
         CH    R1,=X'0B40'
         BL    DATA134
         B     DATA9
DATA134  EQU   *
         WTO   'AA SIDE  D1 MESSAGE(S) LOST'
         B     DATA131
DATA132  EQU   *
         SH    R2,DCDSN
         CH    R2,=X'0B40'
         BH    DATA134
         B     DATA9
DATA131  EQU   *
         CLC   DCDSN,=X'FFFF'
         BE    DATA135
         XR    R3,R3
         LH    R3,DCDSN
         LA    R3,1(R3)
         STH   R3,DSNAA
         B     DATA136
DATA135  EQU   *
         XC    DSNAA,DSNAA
DATA136  EQU   *
         MVC   DSNAA2,DSNAA
         B     DATA41
DATA12   EQU   *
         CLC   SWDB2,ON
         BE    DATA17
         B     DATA16
DATA17   EQU   *
         MVC   SWDB2,OFF
         CLC   DCDSN,DSNBB0
         BE    DATA171
         WTO   'WARNING ON B SIDE (ACR) INITIAL DSN OTHER THAN REQUESTE*
               D'
         MVC   SWS,ON
DATA171  EQU   *
         MVC   DSNBB,DCDSN
         MVC   DSNBB1,DCDSN
DATA16   EQU   *
         XR    R1,R1
         XR    R2,R2
         LH    R1,DCDSN
         LH    R2,DSNBB
         CLC   DCDSN,DSNBB
         BE    DATA161
         BL    DATA162
DATA163  EQU   *
         SH    R1,DSNBB
         CH    R1,=X'0B40'
         BL    DATA164
         B     DATA9
DATA164  EQU   *
         WTO   'BB SIDE  D1 MESSAGE(5) LOST'
         B     DATA161
DATA162  EQU   *
         SH    R2,DCDSN
         CH    R2,=X'0B40'
         BH    DATA164
         B     DATA9
DATA161  EQU   *
         CLC   DCDSN,=X'FFFF'
         BE    DATA165
         XR    R3,R3
         LH    R3,DCDSN
         LA    R3,1(R3)
         STH   R3,DSNBB
         B     DATA166
DATA165  EQU   *
         XC    DSNBB,DSNBB
DATA166  EQU   *
         MVC   DSNBB2,DSNBB
         B     DATA41
DATA4    EQU   *
         CLC   DCD0,D0
         BE    DATA40
         CLC   DCD0,H0
         BNE   DATA91
DATA92   EQU   *
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD1
         MVC   IOPT3750+4(2),DSNA1
         MVC   IOPT3750+6(2),DSNA2
         MVC   IOPT3750+8(2),DSNB1
         MVC   IOPT3750+10(2),DSNB2
         MVC   IOPT3750+12(4),REP
         MVC   IOPT3750+99(4),PT2
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR1
         B     DATA91
DATA40   EQU   *
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD1
         MVC   RNPT3750,IOPT3750
         MVC   IOPT3750(256),INAREA+2
         BAL   R7,DAWR1
         L     R4,RNPT3750
         LA    R4,1(R4)
         ST    R4,IOPT3750
         MVC   IOPT3750+4(2),DSNA1
         MVC   IOPT3750+6(2),DSNA2
         MVC   IOPT3750+8(2),DSNB1
         MVC   IOPT3750+10(2),DSNB2
         MVC   IOPT3750+12(4),REP
         MVC   IOPT3750+99(4),PT2
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR1
DATA9    BR    REG
DATA41   EQU   *
         CLC   DCD0,C0
         BE    DATA410
         CLC   DCD0,B2
         BE    DATA410
         CLC   DCD0,H0
         BNE   DATA91
DATA93   EQU   *
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD2
         MVC   IOPT3750+4(2),DSNAA1
         MVC   IOPT3750+6(2),DSNAA2
         MVC   IOPT3750+8(2),DSNBB1
         MVC   IOPT3750+10(2),DSNBB2
         MVC   IOPT3750+12(4),REP
         MVC   IOPT3750+99(4),PT4
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR2
         B     DATA91
DATA410  EQU   *
         MVC   RNPT3750,=F'0'
         BAL   R7,DARD2
         MVC   RNPT3750,IOPT3750
         MVC   IOPT3750(256),INAREA+2
         BAL   R7,DAWR2
         L     R4,RNPT3750
         LA    R4,1(R4)
         ST    R4,IOPT3750
         MVC   IOPT3750+4(2),DSNAA1
         MVC   IOPT3750+6(2),DSNAA2
         MVC   IOPT3750+8(2),DSNBB1
         MVC   IOPT3750+10(2),DSNBB2
         MVC   IOPT3750+12(4),REP
         MVC   IOPT3750+99(4),PT4
         MVC   RNPT3750,=F'0'
         BAL   R7,DAWR2
         B     DATA9
DATA91   EQU   *
         SNAP  DCB=SNAPDUMP,ID=1,                                      *
               PDATA=(REGS),                                           *
               STORAGE=(INAREA,INAREA+255)
         B     DATA9
         EJECT
RAB      EQU   *                        REMISE A BLANC DE INAREA(10)
         MVI   INAREA,X'40'
         MVC   INAREA+1(10),INAREA
         BR    REG
*
RAB1     EQU   *                        REMISE A BLANC DE INAREA(255)
         MVI   INAREA,X'40'
         MVC   INAREA+1(255),INAREA
         BR    REG
*
ERROR    EQU   *
         STC   15,RTC
         CLI   RTC,X14
         BE    LOPEN
         B     WAIT1
LOPEN    EQU   *
         LOPEN DECB3750
         STC   15,RTC
         STM   0,15,SAVE
         CLI   RTC,X'00'
         BNE   WAIT1
         S     REG,=F'4'
         B     0(REG)
*
WAIT     EQU   *
         STIMER REAL,TOT,BINTVL=C6000
         WAIT  ECB=DECB3750
         TTIMER CANCEL
         CLI   DECB3750,X7F
         BNE   WAIT1
         BR    REG
WAIT1    CLC   SWITCH,ON
         BE    ERREUR
         B     ERR1
*
*IFNO RESPONSE FROM 3750 ON A READ TI AFTER WAITING 1 MIN
TOT      EQU   *
         WTO   'NO RESPONSE ON READ TI'
         ABEND 522,DUMP
C6000    DC    F'6000'                 *
         EJECT
*   DIRECT ACCESS ROUTINES
*
*   READ DCB1
*
DARD1    EQU   *
         READ  DECB1,DI,DCB1,IOPT3750,256,0,RNPT3750+1
         CHECK DECB1
         BR    R7
*
*   READ DCB2
*
DARD2    EQU   *
         READ  DECB2,DI,DCB2,IOPT3750,256,0,RNPT3750+1
         CHECK DECB2
         BR    R7
*
*   WRITE DCB1
*
DAWR1    EQU   *
         WRITE DECB3,DI,DCB1,IOPT3750,256,0,RNPT3750+1
         CHECK DECB3
         BR    R7
*
*   WRITE DCB2
*
DAWR2    EQU   *
         WRITE DECB4,DI,DCB2,IOPT3750,256,0,RNPT3750+1
         CHECK DECB4
         BR    R7
         EJECT
*   MACROS BTAM
WRTIXR   EQU   *
         WRITE DECB3750,TIXR,DCB3750,OUT,6,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
WRTIX    EQU   *
         WRITE DECB3750,TIX,DCB3750,OUT,6,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
WRTTXR   EQU   *
         WRITE DECB3750,TTXR,DCB3750,OUT,6,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
WRTR     EQU   *
         WRITE DECB3750,TR,DCB3750,,,,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
WRTIXV   EQU   *
         WRITE DECB3750,TIVX,DCB3750,OUT,6,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
RDTI     EQU   *
         READ  DECB3750,TI,DCB3750,INAREA,266,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
RDTT     EQU   *
         READ  DECB3750,TT,DCB3750,INAREA,266,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
*
RDTRV    EQU   *
         READ  DECB3750,TRV,DCB3750,INAREA,256,,,MF=E
         LTR   15,15
         BNZ   ERROR
         B     WAIT
         EJECT
*   CONSTANTES
ME0      DC    X'1002'
E0       DC    C'E0'
         DC    X'0100'
ME1      DC    X'1002'
E1       DC    C'E1'
         DC    X'0100'
EOT      EQU   X'37'
ME5      DC    X'1002'
E5       DC    C'E5'
         DC    X'0100'
ME7      DC    X'1002'
E7       DC    C'E7'
TMASK1   DC    X'03'
TMASK2   DC    X'00'
TMASK3   DC    4X'00'
F0       DC    F'0'
X2       DC    X'2'
F11      DC    F'11'
SWS      DC    X'00'
SWA      DC    X'00'
SWAS     DC    X'00'
SWC      DC    X'00'
SWPAR    DC    C'0000'
SWSEL    DC    X'FF'
SWER     DC    X'00'
SWDA1    DC    X'FF'
SWDB1    DC    X'FF'
SWDA2    DC    X'FF'
SWDB2    DC    X'FF'
ON       DC    X'FF'
OFF      DC    X'00'
SWITCH   DC    X'00'
ECBAD    DC    A(0)
REPLY    DC    6C' '
SAV      DS    18F
D1       DC    C'D1'
ME6      DC    X'1002'
E6       DC    C'E6'
         DC    X'0000'
ME8      DC    X'1002'
E8       DC    C'E8'
         DC    X'0000'
ME2      DC    X'1002'
E2       DC    C'E2'
         DC    X'0100'
RTC      DC    C' '
X14      EQU   X'14'
X7F      EQU   X'7F'
D0       DC    C'D0'
C0       DC    C'C0'
H0       DC    C'H0'
B2       DC    C'B2'
F1       DC    F'1'
XA       EQU   X'0A'
XB       EQU   X'0B'
X1A      EQU   X'1A'
X1B      EQU   X'1B'
DSNA     DC    XL2'0'
DSNA0    DC    XL2'0'
DSNA1    DC    XL2'0'
DSNA2    DC    XL2'0'
DSNB     DC    XL2'0'
DSNB0    DC    XL2'0'
DSNB1    DC    XL2'0'
DSNB2    DC    XL2'0'
DSNAA    DC    XL2'0'
DSNAA0   DC    XL2'0'
DSNAA1   DC    XL2'0'
DSNAA2   DC    XL2'0'
DSNBB    DC    XL2'0'
DSNBB0   DC    XL2'0'
DSNBB1   DC    XL2'0'
DSNBB2   DC    XL2'0'
REP      DC    CL4'0'
PT1      DC    XL4'0'
PT2      DC    XL4'0'
PT3      DC    XL4'0'
PT4      DC    XL4'0'
X01      DC    X'01'
X03      DC    X'03'
X05      DC    X'05'
X0F      DC    X'0F'
X0B      DC    X'0B'
X07      DC    X'07'
X09      DC    X'09'
X0C      DC    X'0C'
         DS    0F
         EJECT
*   DCB AND I/O AREAS
*
DCB1     DCB   DDNAME=DTDC,DSORG=DA,MACRF=(RIC,WIC),SYNAD=RSYNAD1,     *
               OPTCD=R
DCB2     DCB   DDNAME=DTACR,DSORG=DA,MACRF=(RIC,WIC),SYNAD=RSYNAD1,    *
               OPTCD=R
IOPT3750 DS    CL258
RNPT3750 DC    F'0'
START    DS    0F
SAVE     DC    9D'0'
         DC    C'****'
         READ  DECB3750,TI,DCB3750,INAREA,266,,1,MF=L
         DC    C'****'
INAREA   DC    266C' '
         ORG   INAREA
FIRST    DS    CL2
TYPE     DS    CL2
DCDSN    DS    CL2
DCL      DS    CL1
DCAB     DS    CL1
DCD0     DS    CL2
DCF1     DS    CL1
DCF2     DS    CL1
DCLM     DS    CL1
DCLH     DS    CL1
DCPR     DS    CL2
DCTHTU   DS    CL2
DCDAY    DS    CL2
DCTIME   DS    CL2
DCDATA   DS    CL244
         DC    C'****'
OUT      DC    8C' '
         DC    C'****'
STOP     EQU   *
DCB3750  DCB   DDNAME=BSCLINE,                                         *
               DSORG=CX,                                               *
               DEVD=BS,                                                *
               MACRF=(R,W),                                            *
               EROPT=E,                                                *
               CODE=EBCDIC,                                            *
               MODE=(,CNTRL)
         DC    C'****'
         SPACE 4
SNAPDUMP DCB   DSORG=PS,RECFM=VBA,MACRF=(W),                           *
               BLKSIZE=882,LRECL=125,                                  *
               DDNAME=SNAPDUMP
*
         DCBD  DEVD=BS,DSORG=BX
*
         IECTDECB
         END   SL3750
