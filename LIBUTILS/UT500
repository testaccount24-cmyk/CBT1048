         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
*        B1201
         TITLE ' SUBRTNE 12 - OBTAINS TODAYS DATE IN 3 DIFFER. FORMS  '
B1201    CSECT
         ENTRY B1201O2             INSERT MODULE NUMBER CHANGING
B1201O2  EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
         SPACE
         SPACE
***********************************************************************
*                                                                     *
*  MODULE B1201X                                                      *
*  PROGRAMMER                         DATE ASSIGNED  16/04/70         *
*                                                                     *
*  MODULE FUNCTIONS  OBTAINS DATE USING TIME MACRO AND TRANSLATES     *
*  ----------------  INTO 1 OF 3 FORMS -                              *
*                    1. EDITED DATE IN 8 BYTES - DD.MM.YY             *
*                    2. EDIT DATE IN 18 BYTES DDMONTHYYYY             *
*                    3. PACKED DATE YYDDD SIGN - AS IN H.B.S. YEAR    *
*                    WHERE 1 FEB = 001 DAYS                           *
*                     ALL LEAP YEARS ARE ALLOWED FOR.                 *
*                                                                     *
*                                                                     *
*                                                                     *
*  PARAMETERS  NO. I/O                DESCRIPTION                     *
*  ----------  --- ---                -----------                     *
*                                                                     *
*              1.  I    LENGTH OF OUTPUT FIELD - 8 FOR DD.MM.YY,      *
*                       18 FOR DDMONTHYYYY AND 3 FOR PACKED DATE.     *
*              2.  O    OUTPUT FIELD.                                 *
*                                                                     *
*              3.       NONE                                          *
*                                                                     *
*              4.       NONE                                          *
*                                                                     *
*              5.       NONE                                          *
*                                                                     *
*                                                                     *
*  SPECIAL NOTES                                                      *
*  -------------                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
*     AMENDMENT TO MODULE B1201    AMENDED BY  P.A.D.  19/05/71   O.S.*
*                                                                     *
*     MODULE  READS CONTROL CARD CONTAINING DATE IN THE FORMAT        *
*     YYDDD . THIS DATE REPLACES THE MACHINE DATE AND IS PASSED       *
*     BACK TO THE CALLING MODULE. IF NO CONTROL CARD IS SUBMITTED     *
*     OR DUMMY CODED IN DD CARD, THEN THE DATE IS OBTAINED USING      *
*     THE TIME MACRO IN THE NORMAL MANNER.                            *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE B1201    BY S WELLOCK
*
**  ASSIGNED 30/11/72, EFFECTIVE 04/12/72 AMENDMENT IS 0.2
*
**  DETAILS OF AMENDMENT MODULE AMENDED TO ALLOW FOR LEAP YEAR WHEN
*   -------------------- ACCEPTING A DATE FROM A TIME CARD. PREVIOUSLY
*                        JAN DATES IN A YEAR FOLLOWING A LEAP YEAR
*                        WERE INCORRECT (1 DAY LOW)
*
***********************************************************************
         EJECT
         MODIN           SAVE, LOAD BASE, LOAD PARAM REGS,
*                        POINT TO SAVE AREA (DEFINED IN MACRO)
*                                                                    OS
BA01     BC    0,BA02              NOTE... 1ST TIME THROUGH ONLY     OS
         OI    BA01+1,X'F0'        ------- RESET TO BC 15,BA02       OS
         OPEN  (TIME)                                                OS
         GET   TIME,SCW080         READ CONTROL CARD                 OS
BA0101   CLOSE (TIME)                                                OS
BA02     BC    0,BA05              NOTE... SET TO BC 15 IF MACHINE   OS
*                                  ------- TIME & DATE REQUIRED      OS
BA0201   EQU   *                                                     OS
         BC    0,BA06              NOTE...  1ST TIME THROUGH ONLY SETOS
         OI    BA0201+1,X'F0'      -------  TO BC 15,BA06.           OS
*                                                                    OS
         CLI   SCW080,C'0'         Q.VALID CONTROL CARD              OS
         BE    BA04                A.YES                             OS
*                                                                    OS
**       INVALID CONTROL CARD                                        OS
*        --------------------                                        OS
         WTO   'B1201T - INVALID CONTROL CARD'                       OS
         ABEND 92,DUMP                                               OS
*                                                                    OS
**       EODAD ON TIME - MEANS NO CONTROL CARD                       OS
*        -------------------------------------                       OS
BA03     EQU   *                                                     OS
         OI    BA02+1,X'F0'        SET BC INST. TO USE MACHINE VALUESOS
         B     BA0101              GO CLOSE FILE                     OS
*                                                                    OS
BA04     PACK  SFD004,SCW080+1(5)  GET DATE IN CORRECT FORMAT        OS
         B     BA06                     GO PROCESS AS NORMAL         OS
*                                                                    OS
BA05     EQU   * NORMAL BRNCH POINT TO PREVIOUS VERSION OF B1201     OS
         TIME
         ST    R1,SFD004
BA06     EQU   * BRANCH POINT USED WHEN NONSTANDARD DATE IS REQUIRED OS
         LA    R1,SFD004
         C     R6,=F'3'       Q. - INPUT PARAM = 3 PACKED DATE
         BE    B1202          YES.
         C     R6,=F'8'       Q  - INPUT PARAM = 8  DD.MM.YY REQ'D
         BE    B1205          YES.
         C     R6,=F'18'      Q-   INPUT PARAM = 18 DD.MONTH.19YR REQ'D
         BE    B1211          YES.
         ABEND 92,DUMP
*
***********************************************************************
*                                                                     *
*  DATE IN PACKED FORM - YYDDS.                                       *
*  ----------------------------                                       *
*  TEST DAYS.  - IF LESS THAN 31 THEN H.B.S YEAR IS PREVIOUS ONE      *
*  ---------   - IF GREATER THAN 31 THEN ADJUST SO START OF YEAR      *
*                IS 1ST FEB.                                          *
*                                                                     *
***********************************************************************
*
B1202    ZAP   SPW003,1(3,R1)      STORE DATE FROM R1
         CP    SPW003+1(2),=P'32'  Q. DAYS LESS THAN 32.
         BNL   B1203               NO-H.B.S YEAR IS SAME.
         SP    SPW003,=P'666'      YES- SUBTRACT 666 FOR HBS YR
         BAL   R10,B1250           GO CHECK FOR LEAP YEAR           0.2
         CP    CCT024+2(2),=PL2'29'     Q. LEAP YR FOUND            0.2
         BNE   B1204                    A. NO, OK                   0.2
         AP    SPW003,=P'1'             ALLOW FOR 29TH FEB.         0.2
         B     B1204               SET UP OUTPUT P2
B1203    SP    SPW003,=P'31'       NO - ADJUST DAYS SO  START OF YEAR
*                                       IS 1ST FEB
B1204    MVC   0(3,R7),SPW003      MOVE DATE TO PARAM 2.
         B     B1299               RETURN TO CALLING ROUTINE.
*
***********************************************************************
*                                                                     *
*  DATE IN THE FORM DD.MM.YY.                                         *
*  --------------------------                                         *
*                                                                     *
***********************************************************************
*
*
B1205    ZAP   SPW003,1(3,R1)           STORE DATE
         UNPK  CCW080+6(5),SPW003(3)    UNPACK YEAR
         OI    CCW080+10,X'F0'
         BAL   R10,B1250                GO TO CHECK FOR LEAP YEAR
         ZAP   CPC002,=P'1'             SET MONTH = 1
         LA    R2,CCT024                SET ADDRESS OF DAYS IN MONTHS.
*
B1206    CP    SPW003+1(2),0(2,R2)      Q - DAYS GREATER THAN DAYS
         BH    B1207                         IN NEXT MONTH
         UNPK  CCW080+3(2),CPC002       NO -  UNPACK MONTH
         OI    CCW080+4,X'F0'
         UNPK  CCW080(2),SPW003+1(2)          UNPACK DAYS.
         OI    CCW080+1,X'F0'
         ZAP   CCW004,=P'0'
         B     B1208               YES -
B1207    SP    SPW003(3),0(2,R2)        SUBT MONTH DAYS FROM DATE
         AP    CPC002,=P'1'             ADD 1 TO MONTH NO
         LA    R2,2(R2)
         B     B1206
*
**  REMOVE LEADING ZEROS FROM DAYS AND MONTH.
**  -----------------------------------------
*
B1208    CLI   CCW080,C'0'              Q. 1ST DIGIT OF DAY ZERO
         BNE   B1209
         MVI   CCW080,C' '              YES. SET TO SPACE.
B1209    CLI   CCW080+3,C'0'            Q. 1ST DIGIT OF MONTH ZERO.
         BNE   B1210
         MVI   CCW080+3,C' '            YES. SET TO SPACE.
B1210    MVC   0(8,R7),CCW080           MOVE DATE TO PARAM 2.
         B     B1299
*
***********************************************************************
*                                                                     *
* DATE IN THE FORM  DD. MONTH. 19YR                                   *
*                                                                     *
***********************************************************************
*
B1211    ZAP   SPW003,1(3,R1)           STORE DATE
         UNPK  SCW018+15(5),SPW003(3)   UNPACK YEAR INTO SCW018
         BAL   R10,B1250                TEST FOR LEAP YEAR
         ZAP   CPC002,=P'1'             SET MONTH = 1
         LA    R2,CCT024                ADDRESS OF DAYS IN MONTHS TABLE
         MVI   SCW018+17,C' '           CLEAR LAST POS'N OF SCW018
B1212    CP    SPW003+1(2),0(2,R2)      Q. DAYS GREATER THAN CURR MONTH
         BH    B1213                    YES. DATE IS NOT IN THIS MONTH
         UNPK  SCW018(2),SPW003+1(2)    NO. UNPACK DAYS INTO SCW018
         OI    SCW018+1,X'F0'               FORCE ZONE = F
         B     B1214
B1213    SP    SPW003(3),0(2,R2)
         AP    CPC002,=P'1'             INCREASE MONTH BY 1
         LA    R2,2(R2)
         B     B1212
*
B1214    CLI   SCW018,C'0'              Q - 1ST DIGIT OF DAY = 0
         BNE   B1215
         MVI   SCW018,C' '              YES - REPLACE WITH SPACE.
*
B1215    LA    R4,CXT013                ADDRESS OF MONTH LENGTHS.
         LA    R2,CCT074                ADDRESS OF MONTH NAMES.
*
B1216    MVC   CFW004+3(1),0(R4)        STORE LENGTH OF MONTH.
B1217    SP    CPC002,=P'1'             SUBT 1 FROM MONTH CTR
         BZ    B1218                    Q - MONTH CTR ZERO.
         A     R2,CFW004                NO - ADJUST R2 FOR NEXT MONTH.
         LA    R4,1(R4)                      INCREASE R4 FOR NEXT MNTH.
         B     B1216
*
B1218    SR    3,3                      CLEAR R3.
         IC    3,0(R4)                  INSERT LENGTH IN R3
         SH    3,=H'1'                  SUBT 1 FOR INSTRUCTION LENGTH
         EX    3,B1220                  EXECUTE MOVE.
         LA    9,SCW018+5
         AR    9,3                      FIND POSITION OF YEAR.
         MVC   0(2,R9),=C'19'           MOVE IN CENTURY
         MVC   2(2,R9),SCW018+15        MOVE IN YEAR
         MVC   4(8,R9),=C'        '     CLEAR REST
*
         MVI   0(R7),C' '
         MVC   1(17,R7),SCW018
         B     B1299
*
B1220    MVC   SCW018+3(1),0(R2)
B1299    ZAP   CCT024+2(2),=PL2'28'
         MODOUT
*
**   CHECK FOR LEAP YEAR.
**   --------------------
*
B1250    MVO   CCW004(4),SPW003(1)      SET UP YEAR  AS  YYS
         OI    CCW004+3,X'0F'
         DP    CCW004(4),=P'4'          DIVIDE BY 4
         CP    CCW004+3(1),=P'0'        Q. REMAINDER = 4
         BNE   B1251                    NO.
         ZAP   CCT024+2(2),=PL2'29'     YES - SET FEB CONSTANT = 29.
B1251    BR    R10
*
**   CONSTANTS  AND STORAGE FOLLOW.
**   ------------------------------
*
SPW003   DS    CL3            PACKED DATE  YYDDDS
CCW080   DC    C'  .  .     ' UNPACKED DATE  DD.MM.YY
CPC002   DC    PL2'0'         MONTH NO
CCT024   DC    X'031C028C031C030C031C030C031C031C030C031C030C031C'
CCW004   DC    XL4'00'
SCW018   DC    CL26' '
CCT074   DC    C'JANUARYFEBRUARYMARCHAPRILMAYJUNEJULYAUGUSTSEPTEMBER'
         DC    C'OCTOBERNOVEMBERDECEMBER'
CXT013   DC    X'070805050304040609070808'
CFW004   DC    F'0'
SFD004   DS    F
*
SCW080   DS    CL80                CONROL CARD AREA                  OS
*                                                                    OS
**       DCB FOR TIME CONTROL CARD                                   OS
*        -------------------------                                   OS
TIME     DCB   DSORG=PS,DDNAME=TIME,MACRF=(GM),LRECL=80,BUFNO=1,     OSX
               EODAD=BA03,BLKSIZE=80,RECFM=F                         OS
         LTORG
         END
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
*        RG0203
         TITLE 'RG0203 OUTPUT PRINT LINES ONTO PRINTER'
RG0203   CSECT
         ENTRY RG020301            INSERT MODULE NUMBER CHANGING
RG020301 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         ENTRY P03
         SPACE 2
***********************************************************************
*                                                                     *
*    MODULE RG0203                                                    *
*                                                                     *
*    PROGRAMMER  D S THOMSON       ASSIGNED  08/01/71                 *
*                                                                     *
*    MODULE FUNCTIONS                                                 *
*    ----------------                                                 *
*              OUTPUT 133 BYTE PRINT LINES AND CLOSE FILE             *
*              IF REQUIRED.                                           *
*                                                                     *
*                                                                     *
*    PARAMETERS                                                       *
*    ----------                                                       *
*        1.    133 BYTE PRINT LINE WITH ASA CC.                       *
*                                                                     *
*    SPECIAL NOTES                                                    *
*    -------------                                                    *
*        2. PRINT LINE CLEARED TO SPACES EXCEPT FOR ASA CC AFTER EACH *
*           'PUT'                                                     *
*                                                                     *
*        3. 'NIL REPORT' INDICATED IF NO DATA IS GIVEN                *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE RG0203   BY C.G.MARTIN
*
**  ASSIGNED 09/11/72, EFFECTIVE 01/12/72 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT  MODULE AMENDED TO CLOSE P03 AT END OF FILE.
*   --------------------  (IE ON RECEIVING HEX'FF' AT P1)
*
*
***********************************************************************
         EJECT
         MODIN
*
**  FIRST TIME THRU ROUTINE
*   -----------------------
BA01     BC    0,BA03              BRANCH IF NOT FIRST TIME THRU
         OI    BA01+1,X'F0'        ALTER BA01 TO BC 15,BA03
         OPEN  (P03,(OUTPUT))      OPEN FILE
*
*   CHECK FOR NIL REPORT CONDITION
*   ------------------------------
BA03     BC    0,BA06              BRANCH IF NOT FIRST TIME THRU
         OI    BA03+1,X'F0'        ALTER BA03 TO BC 15,BA06
         CLI   0(R6),X'FF'         Q. END OF REPORT
         BNE   BA07                A. NO, GO PRINT LINE
         MVI   0(R6),C'1'          CC = NEW PAGE
         MVI   1(R6),C' '          CLEAR WORK AREA
         MVC   2(131,R6),1(R6)          TO SPACES
         MVC   51(31,R6),=C'***** N I L   R E P O R T *****'
         BAL   R10,BB01            PERFORM TAPE WRITE SUBROUTINE
*
**  END ROUTINE
*   -----------
BA04     NI    BA01+1,X'0F'        RESET FIRST TIME
         NI    BA03+1,X'0F'             THRU SWITCHES
         CLOSE P03                 CLOSE OUTPUT FILE                0.1
BA05     MODOUT
*
*   CHECK FOR PRINT TAPE TO BE CLOSED
*   ---------------------------------
BA06     CLI   0(R6),X'FF'         Q. END OF REPORT
         BE    BA04                A. YES, RESET SWITCHES
BA07     BAL   R10,BB01            PERFORM PRINT SUBROUTINE
         B     BA05                EXIT
*
*   SUBROUTINE TO WRITE A PRINT LINE ONTO TAPE
*   ------------------------------------------
BB01     PUT   P03,(R6)            PRINT LINE
         MVI   1(R6),C' '          CLEAR PRINT LINE EXCEPT
         MVC   2(131,R6),1(R6)          FOR ASA CC
         BR    R10                 GOBACK
*
         LTORG
         EJECT
*
**  FILE DEFINITION
*   ---------------
P03      DCB   DDNAME=P03,DSORG=PS,MACRF=(PM)
*
         END
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
*        GP020112
*
         TITLE 'GP020112 READ PDS DIRECTORY AND BUILD ADDRESS LIST    '
GP020112 CSECT
         ENTRY GP020101            INSERT MODULE NUMBER CHANGING
GP020101 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE GP020112  PROGRAMMER PAUL.A.DANIELSON.  ASSIGNED 30/03/72 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  MODULE READS ANY PDS DIRECTORY AND DEPENDING ON THE CONTENTS OF    *
*  P1 FILLS IN EITHER A TABLE OF 4BYTE ENTRIES WITH THE STARTING      *
*  ADDRESS OF EACH MEMBER,  OR IF P1 INITIALLY CONTAINS FF'S IT       *
*  FILLS IN A TABLE OF 12 BYTE ENTRIES WITH AN 8 BYTE MEMBER NAME     *
*  AND 4 BYTE STARTING ADDRESS FOR EACH MEMBER OF THE PDS.            *
*  AS THE DIRECTORY IS ORGANISED IN ASCENDING ORDER SO THE TABLE      *
*  IS FILLED IN IN ASCENDING ORDER. THE END OF TABLE IS INDICATED     *
*  BY X'FF' IN THE LAST ENTRY.                                        *
*                                                                     *
*                                                                     *
         SPACE 2
*                             PARAMETERS                              *
*                             ----------                              *
*  1. I/O TABLE OF EITHER 4 BYTE OR 12 BYTE ENTRIES TO BE FILLED IN   *
*         WITH MEMBER ADDRESSES OR MEMBER NAMES & ADDRESSES.          *
*  2.                                                                 *
*                                                                     *
*  3.                                                                 *
*                                                                     *
*  4.                                                                 *
*                                                                     *
*  5.                                                                 *
*                                                                     *
*                                                                     *
*                           SPECIAL NOTES                             *
*                           -------------                             *
*  IF P1 1ST ENTRY IS X'00' FILL IN ADDRESSES ONLY. IF IT IS X'FF'    *
*  NAMES & ADDRESSES ARE FILLED IN.                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE GP020112 BY P.A. DANIELSON
*
**  ASSIGNED 16/09/72, EFFECTIVE 18/09/72 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT
*   --------------------   NOW ALLOWS FOR CORRECT HANDLING OF USER
*                          DATA IN A DIRECTORY RECORD.
*
*
*
*
*
*
***********************************************************************
         EJECT
         MODIN
*
**       OPEN PDS DIRECTORY AS SEQUENTIAL DATA SET
*        -----------------------------------------
         OPEN  (PDSDIR,(INPUT))
*
**       TEST P1 TO SEE IF NAME AND ADDRESS OR ADDRESS ONLY
*        --------------------------------------------------
         CLC   0(4,R6),=F'-1'      Q. NAMES REQUIRED
         BNE   BA02                A. NO
         NI    BA09+1,X'00'        SET BRANCH TO ALLOW NAME RETRIVAL
*
**       READ DIRECTORY BLOCK
*        --------------------
BA02     EQU   *
         GET   PDSDIR              READ DIRECTORY BLOCK
         LR    R2,R1               POINT TO RECORD
         LH    R3,0(R2)            PUT NO OF BYTES USED INTO R3
         LA    R2,2(R2)            POINT TO FIRST MEMBER NAME IN BLOCK
         BCTR  R3,R0               SUBTRACT TWO FROM NUMBER OF -
         BCTR  R3,R0               BYTES USED IN THIS BLOCK
*
BA04     EQU   *
         CLI   0(R2),X'FF'         Q. END OF ENTRIES
         BE    BA50                A. YES - GO CLOSE ETC.
*
**       BRANCH INSTRUCTION CHANGED IF MEMBER NAMES REQUIRED
*        ---------------------------------------------------
BA09     EQU   *
         BC    15,BA12             CHANGED TO BC 0 IF NAMES REQUIRED
*
**       OBTAIN MEMBER NAME AND ADDRESS
*        ------------------------------
**********************************************************************
*
*        MODIFY FOR IDENTIFYING ALIAS
*
         MVC   0(12,R6),0(R2)      SAVE MEMBER NAME AND ADDRESS (TTRZ)
*        MVC   0(11,R6),0(R2)      SAVE MEMBER NAME AND ADDRESS
*        MVI   11(R6),X'00'        PUT ZEROS IN Z OF TTRZ
*
**********************************************************************
         LA    R6,12(R6)           POINT TO NEXT ENTRY IN OUTPUT LIST
         B     BA14                GO OBTAIN NEXT ENTRY
*
**       OBTAIN ADDRESS ONLY
*        -------------------
BA12     EQU   *
         MVC   0(3,R6),8(R2)       SAVE MEMBER ADDRESS IN LIST
         MVI   3(R6),X'00'         PUT ZEROS IN Z OF TTRZ
         LA    R6,4(R6)            POINT TO NEXT ENTRY IN OUTPUT LIST
*
**       POINT TO NEXT ENTRY IN DIRECTORY BLOCK
*        --------------------------------------
BA14     EQU   *
         SH    R3,=H'12'           SUBTRACT 12 FROM REMAINING NO OF BYT
         SR    R15,R15             ZEROISE WORK REGISTER
         MVC   SCW001,11(R2)       MOVE LENGTH OF XTRA INFO TO W/A  0.1
         NI    SCW001,X'1F'        SET OFF BITS 0-2                 0.1
         IC    R15,SCW001          PUT LENGTH IN WORK REGISTER      0.1
         SLA   R15,1               MULTIPLY BY 2 TO GIVE NO OF BYTES
         LA    R2,12(R2)           POINT TO EXTRA INFORMATION
         AR    R2,R15              ADD LENGTH OF EXTRA INFORMATION
         SR    R3,R15              OBTAIN NO OF REMAINING BYTES
         BP    BA04                GO PROCESS NEXT MEMBER IN BLOCK
         B     BA02                GO READ NEXT BLOCK
*
**       END OF DIRECTORY ROUTINE
*        ------------------------
BA50     EQU   *
         CLOSE (PDSDIR)            CLOSE DIRECTORY DCB
         MVC   0(4,R6),=F'-1'      INDICATE END OF LIST
         OI    BA09+1,X'F0'        MAKE MODULE REUSABLE
         MODOUT
*        ------
*
**       DIRECTORY DCB
*        -------------
PDSDIR   DCB   DSORG=PS,MACRF=(GL),DDNAME=PDSDIR,EODAD=BA50,           X
               BLKSIZE=256,LRECL=256,RECFM=F
*                                                                   0.1
SCW001   DS    C                   W/A FOR LENGTH OF EXTRA INFO     0.1
*
         LTORG
*
         END
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
*        B3401
         TITLE 'B340113  SUBROUTINE TO PRINT REPORTS.                 '
B3401    CSECT
         ENTRY B340102             INSERT MODULE NUMBER CHANGING
B340102  EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         ENTRY CPD002
         SPACE 3
***********************************************************************
*                                                                     *
*   PROGRAM B3401     PROGRAMMER D.S.THOMSON        ASSIGNED 17/11/70 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  SUBROUTINE FOR PRODUCING PRINTED REPORTS. PUTS OUT DETAIL LINES    *
*  AND ALSO HANDLES HEADING ROUTINES, PAGE OVERFLOW, SHEET COUNTING,  *
*  AND DETERMINING AND EDITING DATE, WHERE DATE POSITION IS BLANK     *
*                                                                     *
         SPACE 2
*                             PARAMETERS                              *
*                             ----------                              *
*  1. ADDRESS OF HEADINGS, UP TO 8 LINES. ANY ASA CC'S MAY BE USED    *
*     BUT THAT FOR FIRST LINE MUST BE 1 . POSITION 92-100 OF LINE 2   *
*     MUST BE LEFT BLANK FOR INSERTION OF SHEET NO. IF POSITION       *
*     111-129 IS BLANK CURRENT DATE WILL BE INSERTED.                 *
*                                                                     *
*  2. ADDRESS OF PRINT-LINE (WITH ASA CC). FF IN BYTE 0 CAUSES        *
*     MODULE TO CLOSE PRINTER/PRINT-TAPE.                             *
*                                                                     *
*  3. ADDRESS OF 1-BYTE INDICATOR.                                    *
*          0 - NORMAL LINE-COUNTING,SHEET-NUMBERING AND PAGE OVERFLO  *
*              ROUTINES APPLY.                                        *
*          1 - SKIP TO NEW PAGE CONTINUE NORMAL SHEET-NUMBERING.      *
*          2 - AS 1 BUT RESTART SHEET-NUMBERING AT 1 ON NEW PAGE.     *
*                                                                     *
*  4. ADDRESS OF FULLWORD CONTAINING MAX LINES PER PAGE EXCLUDING     *
*     HEADINGS (USUALLY 55).                                          *
*                                                                     *
*                                                                     *
*
**  AMENDMENT TO MODULE B3401    BY D S THOMSON
*
**  ASSIGNED 02/07/71, EFFECTIVE 02/07/71 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT   MODULE NOW CHECKS FOR EOF BEFORE ANYTHING
*   --------------------   ELSE TO AVOID SPECIFICATION EXCEPTION IF
*                          OTHER PARAMETERS NOT CORRECTLY SET UP
*
***********************************************************************
*
**  AMENDMENT TO MODULE B3401    BY N.G.WADDINGTON
*
**  ASSIGNED 18/12/72, EFFECTIVE 31/12/72 AMENDMENT IS 0.2
*
**  DETAILS OF AMENDMENT MODULE AMENDED TO MAKE THE LINE COUNT
*   -------------------- ACCESSIBLE BY OTHER MODULES WHICH USE THE
*                        MACRO LATCH WHEN USING SUBROUTINE B3401.
*
***********************************************************************
         EJECT
         MODIN
***********************************************************************
*   TEST FOR END OF RUN AND CLOSE PRINTER/PRINT TAPE IF NECESSARY     *
***********************************************************************
*
         CLI   0(R7),X'FF'         Q. END OF RUN
         BNE   BA04                A. NO, CARRY ON
         MVI   SCO133,X'FF'
         CALL  RG0203,(SCO133)
*
BA03     EQU   *
         ZAP   0(2,R9),CPD002      RETURN PRESENT LINE COUNT        0.2
         MODOUT
*
*   SAVE MAX LINES FIRST TIME THROUGH
*   ---------------------------------
BA04     CLI   CCX001,C'0'         Q. FIRST TIME THRU
         BNE   BA05                A. NO CARRY ON
         LH    R3,2(R9)            SAVE MAX LINES                   0.2
         CVD   R3,SPD008           PACK MAX LINES
         MVI   CCX001,C'1'         RESET SWITCH
*
*   CHECK PARAMETER 3
*   -----------------
*
BA05     CLI   0(R8),C'0'          Q. PARAMETER 3 = 0
         BE    BA06                A-YES,GO CHECK LINE COUNT
*
         ZAP   CPD002(2),=P'0'     A-NO,ZEROISE LINE COUNT
         CLI   0(R8),C'1'          Q-PARAMETER 3 = 1
         BE    BA06                A-YES,GO UPDATE SHEET NO
         ZAP   CPD002A,=P'0'       A-NO,RESTART SHEET NUMBERING
*
***********************************************************************
*   MAIN ROUTINE TO BRANCH TO HEADINGS ROUTINE WHEN NECESSARY AND     *
*   UPDATE SHEET NO, ELSE PUT OUT DETAIL LINE AND UPDATE LINE COUNT   *
***********************************************************************
*
*   CHECK LINE-COUNT
*   ----------------
*
BA06     CP    CPD002(2),=P'0'     Q-HEADINGS REQUIRED
         BE    BB03                A-YES,GO TO HEADINGS ROUTINE
*
BA10     ST    R7,SFD004           PRINT ONE
         LA    R1,SFD004                LINE OF
         CALL  RG0203                        DETAILS
         BAL   R10,BC02            GO UPDATE LINE COUNT
         CP    SPD008,CPD002       Q-PAGE OVERFLOW
         BH    BA03                A-NO,GOBACK
*
         CP    CPD002A,=P'999'     Q-SHEET NO = 999
         BNE   BA12                A-NO,CARRY ON
*
         ZAP   CPD002A,=P'0'       A-YES,RESTART SHEET NUMBERING
BA12     ZAP   CPD002,=P'0'        ZEROISE LINE COUNT
         B     BA03                GOBACK
*
***********************************************************************
*   ROUTINE TO PRINT HEADINGS UP TO MAXIMUM OF EIGHT LINES            *
***********************************************************************
*
BB03     AP    CPD002A,=P'1'       ADD 1 TO SHEET NO
         CLI   CCX001A,C'0'        Q-FIRST TIME THROUGH
         BNE   BB05                A-NO,CARRY ON
         CALL  B1201,(18,SCD018)   A-YES,GET DATE
         MVI   CCX001A,C'1'        RESET SWITCH
*
*   PRINT FIRST HEADINGS LINE
*   -------------------------
*
BB05     MVC   SCO133,0(R6)
         CALL  RG0203,(SCO133)
*
*   CHECK FOR SECOND LINE PRESENT
*   -----------------------------
*
         CLI   133(R6),C'Z'        Q-IS THERE ANOTHER HEADINGS LINE
         BNE   BB08                A-YES,GO FIND IT
         MVI   SCO133,C' '         A-NO,SET UP
         MVC   SCO133+1(132),SCO133     DUMMY
         B     BB10                CARRY ON
BB08     MVC   SCO133,133(R6)      MOVE SECOND LINE TO STORAGE
*
*   SET UP SHEET NO AND DATE IF NECESSARY
*   ------------------------------------
*
BB10     MVC   SCO133+97(4),CXE004 EDIT SHEET
         ED    SCO133+97(4),CPD002A     NUMBER
         MVC   SCO133+92(5),=C'SHEET'
*
         CLC   SCO133+111(18),=CL18' '  Q. DATE PRESENT
         BNE   BB14                A-YES,BYPASS DATE INSERTION
*
         MVC   SCO133+111(18),SCD018    INSERT DATE
BB14     CALL  RG0203,(SCO133)     PRINT SECOND HEADINGS LINE
         CLI   133(R6),C'Z'        Q. WAS THERE A SECOND LINE
         BE    BA10                A. NO, GOBACK
*
*
*   ROUTINE TO DEAL WITH FURTHER HEADING LINES
*   ------------------------------------------
*
         ZAP   CPD001,=P'2'        NOTE 2 LINES PRINTED
         LA    R6,266(R6)          POINT R6 TO NEXT HEADINGS LINE
BB20     CLI   0(R6),C'Z'          Q-IS THERE ANOTHER HEADINGS LINE
         BE    BA10                A-NO,GOBACK
*
         AP    CPD001,=P'1'        UPDATE HEADINGS COUNTER
         CP    CPD001,=P'8'        Q-MORE THAN 8 HEADINGS
         BH    BA10                A-YES,GOBACK
*
         MVC   SCO133,0(R6)        PRINT ONE LINE
         CALL  RG0203,(SCO133)          OF HEADINGS
         LA    R6,133(R6)          POINT R6 TO NEXT HEADINGS LINE
         B     BB20                GO LOOK AT NEXT LINE
*
***********************************************************************
*   ROUTINE TO UPDATE LINE COUNT BY INTERPRETING ASA CONTROL CHAR     *
***********************************************************************
*
BC02     CLI   0(R7),C' '          Q-ASA CC = SPACE
         BNE   BC04                A-NO,CARRY ON
*
         AP    CPD002,=P'1'        A-YES,ADD 1 TO LINE-COUNT
         BR    R10                      AND GOBACK
*
BC04     CLI   0(R7),C'0'          Q-ASA CC = 0
         BNE   BC06                A-NO,CARRY ON
*
         AP    CPD002,=P'2'        A-YES,ADD 2 TO LINE COUNT
         BR    R10                      AND GOBACK
*
BC06     CLI   0(R7),C'-'          Q-ASA CC = -
         BNE   BC08                A-NO,MUST BE INVALID
         AP    CPD002,=P'3'        A-YES,ADD 3 TO LINE COUNT
         BR    R10                      AND GOBACK
*
BC08     WTO   'B3401T INVALID ASA CC'                               OS
         ABEND 92,DUMP                                               OS
*
***********************************************************************
*   CONSTANTS STORAGE AND WORK AREAS                                  *
***********************************************************************
*
SFD004   DS    F                   POINTER TO PRINT AREA
SCO133   DS    CL133               PRINT LINE
CCX001A  DC    C'0'                FIRST TIME SWITCH FOR HEADINGS
CPD002A  DC    PL2'0'              SHEET NUMBER
CCX001   DC    C'0'                FIRST TIME SWITCH FOR MAIN RTN
SCD018   DS    CL18                DATE
CXE004   DC    X'40202020'         EDIT MASK FOR SHEET NO
CPD001   DC    PL1'2'              HEADINGS COUNTER
SCD001   DS    CL1                 DUMP FOR ASA CC
         DS    0D
SPD008   DS    PL8                 DUMP FOR MAX LINES
CPD002   DC    PL2'0'              LINE COUNTER
*
         LTORG
         END
         MACRO
&NAME    LATCH &A,&B,&VL,&TYPE=
         CNOP  0,4
&NAME    DS    0H
         AIF   ('&TYPE' EQ 'LINK').BA02
         AIF   (K'&B NE 0).BA01
         ST    R1,L1&SYSNDX+4      SAVE ADDRESS OF PARAMETER LIST
         B     *+12                BRANCH AROUND CONSTANTS
L1&SYSNDX DS    A                  ENTRY POINT ADDRESS
         DS    A                   PARAMETER LIST ADDRESS
L2&SYSNDX BC   0,L3&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L1&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L2&SYSNDX+1,X'F0'   CAUSE BRANCH ROUND LOAD
L3&SYSNDX LM   R0,R1,L1&SYSNDX     LOAD ENTRY POINT & PARM LIST ADDR.
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15)
         MEXIT
.BA01    ANOP
L4&SYSNDX BC   0,L5&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L6&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L4&SYSNDX+1,X'F0'   CAUSE BRANCH AROUND LOAD
         CNOP  0,4
         B     *+8                 BRANCH AROUND ENTRY POINT ADDRESS
L6&SYSNDX DS   A                   ENTRY POINT ADDRESS
L5&SYSNDX L    R0,L6&SYSNDX        LOAD ENTRY POINT ADDRESS
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15),&B,&VL
         MEXIT
.BA02    ANOP
         LINK  EP=&A,PARAM=&B
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
*        B4701
         TITLE 'B4701 ''N''-UP HORIZONTAL FORMAT SUBROUTINE           '
B4701    CSECT
         ENTRY B470104             INSERT MODULE NUMBER CHANGING
B470104  EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE B4701     PROGRAMMER D S THOMSON        ASSIGNED 15/06/71 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  SUBROUTINE TO PRODUCE AND PRINT REPORTS IN 'N'-UP HORIZONTAL       *
*  FORMAT. PARAMETER 2 MAY BE ANY LENGTH UP TO 132 BYTES. A NORMAL    *
*  REPORT IS PRODUCED VIA B3401 WHICH IS CALLED WHENEVER A PRINT      *
*  LINE HAS BEEN FILLED FROM INPUT IN P2. AT EOF (P2 = X'FF'),        *
*  ANY STORED DETAIL IS PRINTED AND FILE CLOSED VIA B3401             *
*                                                                     *
         EJECT
*                             PARAMETERS                              *
*                             ----------                              *
*  1. HEADINGS - MAX 8 LINES. ANY ASA CC'S MAY BE USED BUT THAT FOR   *
*     FIRST LINE MUST BE 1. POS 92-100 OF 2ND LINE MUST BE LEFT       *
*     BLANK FOR INSERTION OF SHEET NUMBER. IF 111-129 ALSO BLANK      *
*     DATE WILL BE INSERTED.                                          *
*                                                                     *
*  2. ITEM TO BE ACCUMULATED IN HORIZONTAL FORMAT. TO CLOSE PRINT     *
*     FILE SET 1ST BYTE TO X'FF'.                                     *
*                                                                     *
*  3. 1-BYTE INDICATOR.                                               *
*        C'0' -  NORMAL ROUTINES APPLY                                *
*                                                                     *
*        C'1' -  SKIP TO NEW PAGE FOR THIS ITEM                       *
*                                                                     *
*        C'2' -  AS C'1' BUT  RESTART SHEET-NUMBERING FOR NEW PAGE    *
*                                                                     *
*  4. FULLWORD CONTAINING NO OF LINES PER PAGE EXCLUDING HEADINGS     *
*                                                                     *
*  5. FULLWORD CONTAINING LENGTH OF P2.                               *
*                                                                     *
*  6. SINGLE BYTE ASA CC TO BE USED FOR ALL DETAIL LINES.             *
         SPACE 3
*
**  AMENDMENT TO MODULE B4701    BY MATTHEW RIGDEN NICHOLSON
*
**  ASSIGNED 11/08/71, EFFECTIVE 12/08/71 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT  THE SUBROUTINE NOW PRINTS 'NIL REPORT' IF IT
*   --------------------  IS CLOSED ON THE FIRST CALL.
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY DAVID THOMSON
*
**  ASSIGNED 25/11/71, EFFECTIVE 26/11/71 AMENDMENT IS 0.2
*
**  DETAILS OF AMENDMENT MODULE DID NOT CHECK FOR FULL PAGE WHEN
*   -------------------- CALLED TO SKIP TO NEW PAGE.
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY MATTHEW NICHOLSON
*
**  ASSIGNED 02/12/71, EFFECTIVE 03/12/71 AMENDMENT IS 0.3
*
**  DETAILS OF AMENDMENT   THIS SUBROUTINE NOW ALLOWS FOR THE CLEARING
*   -------------------- OF THE PRINT LINE WITHOUT CLOSING THE REPORT
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY R.A.WHITELEY
*
**  ASSIGNED 16/03/72, EFFECTIVE 16/03/72 AMENDMENT IS 0.4
*
*   --------------------  THE PRINTER, MODULE SHOULD NOT PRINT A
**  DETAILS OF AMENDMENT  WHEN CLEARING THE PRINT-LINE WITHOUT CLOSING
*                         BLANK LINE WHEN NO STORED DETAIL.
*
*                         ALSO ASA CC NOW INSERTED AT START OF EACH
*                         NEW LINE.
***********************************************************************
*
**       MODULE - B4701       DATE 28/11/72  PROGRAMMER  P.A.DANIELSON
*
**                MODULE AMENDED TO CHANGE ALL SUBROUTINE CALLS TO
*                 USE THE DYNAMIC LINKAGE MACRO LATCH.
*
**                                      COLS 69-71 CONTAIN LAT
*
***********************************************************************
         EJECT
         MODIN
*
** FIRST-TIME-THRU ROUTINES
*  ------------------------
         ST    R1,SFD004A          SAVE PARAMETER LIST ADDRESS      0.4
         LM    R2,R4,SFD012        RESTORE ALL
         L     R11,SFD004               REGISTERS
BA01     BC    0,BA05              BRANCH IF NOT FIRST TIME THRU    0.3
         CLI   0(R7),X'FF'         Q. END OF FILE ON ENTRY          0.1
         BE    BA0505              A. YES, CLOSE FILE               0.1
         OI    BA01+1,X'F0'        ALTER TO BC 15,BA05
         L     R3,0(R10)           LENGTH OF P2 IN R3
         LR    R2,R3                    AND R2
         BCTR  R3,0                R3 IS EX REGISTER
         LA    R4,CCW133+133       R4 POINTS TO END OF PRINT-LINE
         LR    R11,R4              R4 POINTS TO END OF PRINT-LINE   0.4
         SR    R4,R2               R4 POINTS TO LAST POSSIBLE INPUT
*** THE FOLLOWING TWO INSTRUCTIONS HAVE BEEN REMOVED ******************
* 0.4    L     R14,20(R1)          R14 POINTS TO P6
* 0.4    MVC   CCW133(1),0(R14)    INSERT ASA CC
*
** END OF JOB ROUTINE
*  ------------------
BA05     CLI   0(R7),X'FF'         Q. END OF REPORT
         BNE   BA06A               A. NO, CARRY ON                  0.3
         BAL   R12,B5000           PRINT ANY STORED DETAIL
BA0505   MVI   CCW133,X'FF'        CLOSE PRINTER/PRINT TAPE         0.1
         BAL   R12,B5000                VIA B3401
BA06     STM   R2,R4,SFD012        SAVE ALL
         ST    R11,SFD004               REGISTERS
         MODOUT
*                                                                   0.3
** CLEARING REQUIRED                                                0.3
*-------------------                                                0.3
BA06A    CLI   0(R8),C'4'          Q. REPORT CLEARING REQUIRED      0.3
         BNE   BA07                A. NO, GO TO CHECK FOR EOF       0.3
         CR    R11,R4              Q. ANY STORED DETAIL             0.4
         BH    BA06                A. NO - EXIT                     0.4
         BAL   R12,B5000           PRINT DETAILS VIA B3501          0.3
         BAL   R12,B5100           CLEAR P2 TO SPACES               0.3
         NI    BA10+1,X'0F'        INDICATE NEW LINE                0.4
         B     BA06                SAVE REGISTERS & MODOUT          0.3
*
** TEST FOR NEW PAGE REQUIRED
*  --------------------------
BA07     CLI   0(R8),C'0'          Q. NEW PAGE REQUIRED
         BE    BA10                A. NO, CARRY ON
         CR    R11,R4              Q. ANY STORED DETAIL             0.2
         BH    BA08                A. NO, SKIP TO PRINT ROUTINE     0.2
         BAL   R12,B5000           PRINT ANY STORED DETAIL
BA08     MVC   CCD001,0(R8)        SAVE P3 (1 OR 2)                 0.2
         NI    BA10+1,X'0F'        START NEW LINE
*
** BUILD PRINT-LINE AND PRINT IF NECESSARY
*  ---------------------------------------
BA10     BC    0,BA12              BRANCH IF NOT NEW LINE
         OI    BA10+1,X'F0'        ALTER TO BC 15,BA12
         L     R1,SFD004A          RESTORE PARAMETER LIST ADDRESS   0.4
         L     R14,20(R1)          R14 POINTS TO P6                 0.4
         MVC   CCW133(1),0(R14)    INSERT ASA CC                    0.4
         LA    R11,CCW133+1        POINT TO START OF LINE
BA12     EX    R3,EX01             BUILD PRINT-LINE
         AR    R11,R2              POINT TO NEXT POS IN LINE
         CR    R11,R4              Q. ROOM FOR ANOTHER
         BH    BA15                A. NO, PRINT THE LINE
         BAL   R12,B5100           CLEAR P2 TO SPACES
         B     BA06                MODOUT
BA15     NI    BA10+1,X'0F'        INDICATE NEW LINE
         BAL   R12,B5000           PRINT THE LINE
         BAL   R12,B5100           CLEAR P2 TO SPACES
         B     BA06                MODOUT
*
         EJECT
** SUBROUTINE TO PRINT REPORT VIA B3401
*  ------------------------------------
B5000    ST    R6,CFA016           HEADINGS - PARAMETER 1
         ST    R9,CFA016+12        LINE COUNT - PARAMETER 4
         LA    R1,CFA016           LOAD PARAMETER ADDRESSES
         CALL  B3401               PRINT THE LINE
         MVI   CCD001,C'0'         ENSURE P3=0 FOR NEXT CALL
         BR    R12                 RETURN TO MAIN ROUTINE
*
** SUBROUTINE TO CLEAR P2 TO SPACES
*  --------------------------------
B5100    MVI   0(R7),C' '          CLEAR FIRST BYTE OF P2
         BCTR  R3,0                R3 MINUS 1
         EX    R3,EX02               TO CLEAR REST OF P2
         LA    R3,1(R3)                THEN RESTORE
         BR    R12                 RETURN TO MAIN ROUTINE
         SPACE 2
*        SPACE 2
** EXECUTED INSTRUCTIONS (LENGTH IN P5)
*  ------------------------------------
EX01     MVC   0(0,R11),0(R7)      BUILDS PRINT LINE
*
EX02     MVC   1(0,R7),0(R7)       CLEARS P2 TO SPACES
         SPACE 3
*
** CONSTANTS AND STORAGE AREAS
*  ---------------------------
CFA016   DC    A(*,CCW133,CCD001,*)     B3401 PARAMETERS
SFD004   DS    F                   REGISTER
SFD012   DS    3F                       SAVEAREAS
SFD004A  DS    F                   SAVE AREA FOR R1                 0.4
CCW133   DC    CL133' '            PRINT-LINE
CCD001   DC    C'0'                P3 FOR B3401 (INDICATOR)
         LTORG
         END
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
*        MX06
*
         TITLE ' LIST PROGRAMS WHICH USE REQ. RESOLVED EXTERNAL REFER.'
UT500    CSECT
         ENTRY MX06RPG             INSERT MODULE NAME CHANGING
MX06RPG  EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM060106  PROGRAMMER BAZ BARROW         ASSIGNED 14/09/72 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*    READS THROUGH A GIVEN LIBRARY AND SEARCHES ESD ENTRIES FOR THE   *
*                                                                     *
*    GIVEN SUBROUTINES. IF THE COMPARISON IS POSITIVE THE SUBRTNE IS  *
*                                                                     *
*    LISTED ON A REPORT.                                              *
*                                                                     *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE XM060106 BY PAUL ANTON DANIELSON
*
**  ASSIGNED 20/12/72, EFFECTIVE 01/01/73 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT NO OF MEMBERS CAN BE SPECIFIED AS 2ND PARAMET-
*   -------------------- ER OF PARM FIELD. IN WHICH CASE SUFFICIENT
*                        CORE FOR MODULE NAME/TTR TABLE IS OBTAINED
*                        VIA GETMAIN. IF OMITTED A DEFAULT VALUE IS
*                        USED.
*
*
*
*
***********************************************************************
         EJECT
         PROGIN
*
** INITIAL ROUTINE - OBTAIN SUBROUTINE NAME FROM PARM INFO. GET     0.1
** SUFFICIENT CORE FOR TABLE OF MODULE NAMES/TTRS.                  0.1
** ------------------------------------------------------------     0.1
*
         L     R1,0(R1)            POINT R1 TO PARM AREA
         SR    R6,R6               CLEAR R6
         IC    R6,1(R1)            INSERT LENGTH INTO R6
         LA    R2,2(R1)            POINT TO START OF PARM FIELD     0.1
BA01     EQU   *                                                    0.1
         CLI   0(R2),C','          Q. SIZE INFORMATION PRESENT      0.1
         BE    BA03                A. YES                           0.1
         LA    R2,1(R2)            POINT TO NEXT CHARACTER OF PARM INPT
         BCT   R6,BA01             LOOP TO END OF PARM FIELD        0.1
*                                                                   0.1
*                                                                   0.1
** OBTAIN MODULE NAME AND CORE FOR NAME/TTR TABLE                   0.1
*  ----------------------------------------------                   0.1
BA02     EQU   *                                                    0.1
         SR    R2,R1               GET LENGTH OF PARM FIELD (NAME) +2 1
         SH    R2,=H'3'            MINUS THREE FOR EXECUTED MOVE    0.1
         EX    R2,BC01             GET SUBROUTINE NAME              0.1
         MVC   CCHXXXA+79(8),SCW008 MOVE MODULE NAME TO HEADINGS    0.1
         RDJFCB (D01)              READ PDS JFCB
         MVC   CCHXXXA+1(25),JFCB
*                                                                   0.1
*        L     R0,CFD004B          LOAD NO OF BYTES REQ'D FOR TABLE *.D
*        GETMAIN R,LV=(0)          GET CORE REQUIRED FOR TABLE      *.D
*        LA    R6,0(R1)            POINT R6 TO START OF TABLE       *.D
         L     R6,CFD004B          POINT R6 TO START OF TABLE       *.I
         MVC   0(4,R6),=F'-1'      INDICATE 12 BYTE OPTION TO GP MODULE
         CALL  GP020112,((R6))     OBTAIN MEMBER NAMES & TTR POINTERS.1
         LA    R6,8(R6)            POINT R6 TO FIRST TTR ADDRESS    0.1
         B     BA0304              GO OPEN PDS                      0.1
*                                                                   0.1
**       ROUTINE TO CALCULATE CORE REQUIRED FROM PARM INFORMATION   0.1
*        --------------------------------------------------------   0.1
BA03     EQU   *                                                    0.1
         LA    R3,1(R2)            POINT TO FIRST CHARACTER IN VALUE0.1
         BCTR  R6,R0               SUBTRACT TWO                     0.1
         BCTR  R6,R0                             FOR   PACK INSTRUCTION
         EX    R6,EX01             EXECUTE PACK INSTRUCTION         0.1
         CVB   R3,SDD008           CONVERT NO OF MEMBERS TO BINARY  0.1
         MH    R3,=H'12'           MULTIPLY BY NO OF BYTES REQ'D/MEMBER
*        ST    R3,CFD004B          SAVE LENGTH OF TABLE REQUIRED    *.D
         B     BA02                GO OBTAIN MODULE NAME AND CORE   0.1
*                                            FOR TABLE              0.1
*                                                                   0.1
*
** OPEN THE LIBRARIES DATA SET AND POINT R6 TO START OF MEMBER NAME TBL
** --------------------------------------------------------------------
*
BA0304   EQU   *                                                    0.1
         MVI   PCHSW,X'00'         SET PUNCH SW OFF
         MVC   SRTNAME,SCW008      MOVE PARM FIELD TO SRT LIST
         MVI   SRTFLAG,X'00'       RESET PRESENCE FLAG
         MVI   SRTFLAG+1,X'FF'     SET END OF TABLE FLAG
         CLC   SRTNAME,=C'SYSIN   '     CHECK IF = 'SYSIN   '
         BNE   BA0310              BRANCH IF NOT
         OPEN  (SRT,(INPUT))       GET SRT NAMES FROM SYSIN
         LA    R2,SRTNAMES         R2 PTS TO SRT LIST
         LH    R3,MAX#SRT          R3 = MAX NBR OF SRT'S
         MVI   PCHSW,X'00'         RESET PUNCH SW
         MVC   PRGMNAME,=C'ROUTINES'
BA0306   EQU   *
         GET   SRT
         MVC   0(8,R2),0(R1)       GET SRT NAME
         MVC   CESDNAME,0(R1)      IDEM FOR PRINT
         MVI   8(R2),X'00'         RSER PRESENCE FLAG
         BAL   R10,BA20            PRINT SRT NAME
         LA    R2,9(R2)            POINT TO NEXT PLACE IN SRT LIST
         BCT   R3,BA0306           DECR MAX # OF SRT, BRANCH IF NOT 0
BA0308   EQU   *
         MVI   0(R2),X'FF'         SET END OF TABLE FLAG
         CLOSE SRT
         CH    R3,MAX#SRT          VERIFY IF AT LEAST 1 SRT
         BE    BB01
BA0310   EQU   *
         BAL   R10,BA20            PRINT TITLE
         MVI   PCHSW,X'FF'         SET PUNCH SW ON
         LR    R11,R6
         SH    R11,=H'8'
         CLI   0(R11),X'FF'        CHECK IF LIBRARY IS EMPTY
         BE    BB01                GO TO EXIT IF LIBR. IS EMPTY
         OPEN  (D01,(INPUT))       OPEN LIBRARIES DATA SET
         SR    R7,R7               CLEAR R7 FOR LATER USE WITH ESD RECS
*
** POINT TO THE NEXT MEMBER OF LIBRARY AND READ ALL THE CESD RECORDS
** LOOKING FOR AN EQUAL COMPARE WITH THE SUBRTNE NAME
** --------------------------------------------------
*
BA04     EQU   *
**********************************************************************
*
*        MODIFY FOR IDENTIFYING ALIAS
*
         MVI   CDMBNAME+8,C' '     CLEAR ALIAS SW (CARD DATA)
         TM    3(R6),X'80'         CHECK IF PROG. NAME IS AN ALIAS
         BZ    BA0410              BRANCH IF NOT
         MVI   CDMBNAME+8,C'A'     SET ALIAS SW ON (='A') IF YES
BA0410   EQU   *
         MVC   PRGMNAME+8(1),CDMBNAME+8  MOVE ALIAS SW TO PRINT LINE
         MVI   3(R6),X'00'         PUT ZERO IN Z OF TTRZ
*
*********************************************************************
         POINT D01,(R6)            POINT TO NEXT MEMBER
         MVI   SWF,X'FF'           INIT FIRST TIME SWITCH
         MVI   PPSW,X'00'          SET GENERAL PRESENCE FLAG OFF
BA05     EQU   *
         READ  DECB1,SF,D01,SCI248,248  READ NEXT RECORD
         CHECK DECB1
         CLI   SCI248,X'20'        Q. IS IT A CESD RECORD
         BE    BA07                A. YES - GO PROCESS CESD RECORD
         B     BA1A
BA06     CLI   4(R6),X'FF'         Q. IS IT END OF MEMBER TABLE
         BE    BB01                A. YES - GO END
         LA    R6,12(R6)           A. NO - POINT TO NEXT TTR ENTRY
         B     BA04                GO POINT TO NEXT MEMBER
*
** SEARCH CESD RECORD FOR THE SUBRTNE NAME
*
BA07     EQU   *
         IC    R7,SCI248+7         INSERT LENGTH OF ESD ENTRIES INTO R7
         LA    R8,SCI248+8         POINT R8 TO START OF ESD ENTRIES
         AR    R8,R7               R8 NOW POINTS TO END OF TABLE
         LA    R9,SCI248+8         POINT R9 TO FIRST ESD ENTRY NAME
BA08     EQU   *
         CLI   SWF,X'FF'           TEST IF FIRST TIME
         BNE   BA0804              BRANCH IF NO
         MVC   CESDNAME,0(R9)      SAVE 'CESDNAME' FOR PRINT
         MVI   SWF,X'00'           RESET FIRST TIME SWITCH
BA0804   EQU   *
         LA    R1,SRTNAMES         RU PTS TO SRT LIST
BA0808   EQU   *
         CLC   0(8,R1),0(R9)       COMPARE SRT NAME TO CSECT NAME
         BE    BA0810              BRANCH IF FOUND
         LA    R1,9(R1)            POINT TO NEXT SRT NAME
         CLI   0(R1),X'FF'         TEST IF END OF SRT LIST
         BNE   BA0808              LOOP IF NOT
         B     BA09                GO AND GET NEXT CSECT NAME
BA0810   EQU   *
         MVI   PPSW,X'FF'          SET GENERAL PRESENCE FLAG ON
         MVI   8(R1),X'FF'         SET SRT PRESENCE FLEG ON
BA09     EQU   *
         LA    R9,16(R9)           GET NEXT CSECT NAME
         CR    R9,R8               CHECK END OF CTL RECORD
         BL    BA08                BRANCH IF NO
         B     BA05                BRANCH IF YES
*
** GET START OF PGM
*
BA1A     EQU   *
         CLI   PPSW,X'00'          CHECK IF GEN. PRESENCE FLAG OFF
         BE    BA06                BRANCH IF OFF
         TM    SCI248,X'01'        CHECK IF CTL REC OF 1ST PGM BLOCK
         BNZ   BA1001              BRANCH IF YES
BA10     EQU   *
         BAL   R10,BA16            GET NEXT RECORD
         TM    WORKAREA,X'01'      CHECK IF REC.ID ='01'
         BZ    BA10                LOOP IF NOT
BA1001   EQU   *
         BAL   R10,BA16            GET NEXT RECORD
         UNPK  STARL,WORKAREA(5)   UNPACK FIRST PGM INSTRUCT.
         TR    START,TRTABLE-240   AND CONV HEXA IN PRINTABLE CHAR
         MVC   PRGMSTRT,START      SAVE FIRST PGM INSTR. FOR PRINT
         CLC   WORKAREA(4),=X'05F058FF' CHECK IF RPG CONVENTIONS
         BNE   BA1002              BRANCH IF NOT
         MVC   PRGMTYPE,=C'RPG   ' SET PROGRAM TYPE
         B     BA1006
BA1002   EQU   *
         CLC   WORKAREA+20(4),=C'ANSC'  CHECK IF ANS COBOL
         BNE   BA1004              BRANCH IF NOT
         MVC   PRGMTYPE,=C'ANSC  ' SET PROGRAM TYPE
         B     BA1006
BA1004   EQU   *
         MVC   PRGMTYPE,=C'    ??' SET PROGRAM TYPE
BA1006   EQU   *
         LR    R11,R6
         SH    R11,=H'8'           R11 PTS TO MODULE NAME
         MVC   PRGMNAME,0(R11)     GET MODULE NAME
         MVC   CDMBNAME,PRGMNAME   MOVE PROGRAM NAME
         MVC   CDMBCODE,PRGMSTRT   MOVE START OF PROGRAM
         MVC   CDMBLANG,PRGMTYPE   MOVE PROGRAM LANGUAGE
         LA    R8,SRTNAMES         GET SRT LISTVADDRESS
BA1008   EQU   *
         CLI   8(R8),X'00'         CHECK IF SRT IS REFERENCED
         BE    BA1010              BRANCH IF NO
         MVI   8(R8),X'00'         RESER SRT PRESENCE FLAG
         MVC   CDMBCSCT,0(R8)      GET MODULE NAME
         MVC   PRGMCSCT,0(R8)      GET MODULE NAME
         BAL   R10,BA20            PRINT/PUNCH INFO
BA1010   EQU   *
         LA    R8,9(R8)            POINT TO NEXT SRT NAME
         CLI   0(R8),X'FF'         CHECK IF END OF SRT NAME TABLE
         BNE   BA1008              BRANCH IF NOT END OF TABLE
         B     BA06                GO POINT TO THE LIBRARIES NEXT MEMBR
*
** SEGMENT TO READ NEXT RECORD FROM THE LIBRARY
*
BA16     EQU   *
         READ  DECB2,SF,D01,WORKAREA,6144
         CHECK DECB2
         BR    R10
*
** RTNE TO PRODUCE PRINT REPORT FOR PROGRAMS CONTAINING THE SUBRTNE
** ----------------------------------------------------------------
**                                 LINKAGE VIA R10
*
BA20     EQU   *
         CLI   PCHSW,X'00'         TSET PUNCH SW
         BE    BA2002              BRANCH IF OFF
         BAL   R14,BP10            GO TO PUNCH CARD
BA2002   EQU   *
         CALL  B4701,(CCHXXX,CCW020,CCX001,CFD004,CFD004A,CCD001)
         BR    R10                 RETURN
*
** SEGMENT TO PUNCH CARD
*
BP10     EQU   *
         STM   R14,R2,BPSVREGS     SAVE REG 14,15,0,1,2
*
BP12     BC    0,BP20              BRANCH IF NOT FIRST TIME
         OI    BP12+1,X'F0'        ALTER BRANCH TO ALLWAYS BRANCH
         OPEN  (PCH,(OUTPUT))      OPEN OUTPUT FILE
         MVC   CDMBLIBR,JFCB       SAVE LIBRARY NAME
*
BP20     EQU   *
         CLI   CCW020,X'FF'        CHECK IF FILE MUST BE CLOSED
         BE    BP30                BRANCH IF YES
         LA    R2,CDMBDATA         GET ADDR OF DATA TO BE PUNCHED
         PUT   PCH,(R2)            PUNCH CARD
         B     BP90                BRANCH TO RETURN
*
BP30     EQU   *
         MVI   CDMBNAME,C' '       RESET DATA AREA
         MVC   CDMBNAME+1(75),CDMBNAME
         NI    BP12+1,X'0F'        RESET INSTR. TO NO BRANCH
         CLOSE PCH
*
BP90     EQU   *
         LM    R14,R2,BPSVREGS     RESTORE REGS
         BR    R14                 RETURN
*
*
** END OF FILE FOR THE LIBRARIES DATA SET
** --------------------------------------
*
BB01     EQU   *
         MVI   CCW020,X'FF'        INDICATE PRINT FILE TO BE CLOSED
         BAL   R10,BA20            GO CLOSE PRINT FILE
         PROGOUT
*
** STORAGE AND CONSTANTS
** ---------------------
*
BPSVREGS DS    5F                  REGS SAVE AREA
*
PCH      DCB   DDNAME=PCH,DSORG=PS,MACRF=PM
PCHSW    DS    CL1            PUNCH SWITCH
*
CDMBDATA DS    CL80           CARD DATA
         ORG   CDMBDATA
CDMBCDID DC    CL4'MXM'       CARD ID.
CDMBNAME DC    CL8' '         PROGRAM NAME
         DC    CL1' '
CDMBCSCT DC    CL8' '         CSECT NAME
         DC    CL1' '
CDMBCODE DC    CL8' '         4 1ST BYTES OF PROGRAM
         DC    CL1' '
CDMBLANG DC    CL4' '         PROGRAM LANGUAGE (BLANK IF UNKNOWN)
         DC    CL1' '
CDMBLIBR DC    CL44' '        LIBRARY NAME
SCW008   DC    CL8' '              CONTAINS 8 BYTE SUBRTNE NAME
SDD008   DS    D                   DOUBLE WORD DUMP FOR CVB         0.1
EX01     PACK SDD008,0(0,R3)       PACK NO OF MEMBERS               0.1
BC01     MVC   SCW008(0),2(R1)     MOVE SUBRTNE NAME BY EX INSTRUCTION
JFCB     DS    44F                 INPUT AREA FOR READ JFCB
EXLIST   DC    X'87',AL3(JFCB)     DDNAME 'D01' EXLST
SCI248   DS    CL248               INPUT AREA FOR LIBRARIES DATA SET
CFD004   DC    F'55'               NO OF LINES PER PAGE
CCX001   DC    C'0'                NORMAL LINE COUNTING INDICATOR
CCD001   DC    C' '                ASA CONTROL CHARACTER
*FD004B  DC    F'12000'            LENGTH OF TABLE (DEFAULT)        *.D
CFD004B  DC    A(DIRTBL)           ADDR OF DIRECTORY TABLE          *.I
CFD004A  DC    F'120'              LENGTH OF P2 FOR B4701
CCW020   DC    CL120' '            PRIME INPUT AREA FOR B4701
         ORG   CCW020              REDEFINE PRINT AREA
         DS    CL1
PRGMNAME DS    CL8
         DS    CL2
CESDNAME DS    CL8
         DS    CL2
PRGMSTRT DS    CL8
         DS    CL2
PRGMTYPE DS    CL6
         DS    CL3
PRGMCSCT DS    CL8
         DS    CL72
CCHXXX   DC    CL77'1',CL56'************'
CCHXXXA  DC    CL30' ',CL103'XM06 REPORT OF PROGRAMS USING SUBROUTINE/MX
               ODULE*          *'
         DC    CL30' ',CL103'------------------------------------------X
               -----************',CL133' ',C'Z'
         LTORG
*
D01      DCB   DSORG=PO,DDNAME=D01,EODAD=BB01,MACRF=R,EXLST=EXLIST
*
TRTABLE  DC    C'0123456789ABCDEF'      TRANSLATE TABLE
STARL    DS    0CL9
START    DC    CL8' '
         DS    CL1
SWF      DS    CL1                 FIRST TIME SWITCH
PPSW     DS    XL1
SRTNAME  DS    CL8            SRT NAME
SRTFLAG  DS    XL1            SRT PRESENCE FLAG
         ORG   SRTNAME
SRTNAMES DS    100CL9         SRT NAME LIST
         DS    XL1            END OF TABLE FLAG
MAX#SRT  DC    H'100'         MAX NBR OF SRT'S
SRT      DCB   DDNAME=SYSIN,DSORG=PS,EODAD=BA0308,MACRF=GL,            *
               RECFM=FB,LRECL=80,BLKSIZE=80
WORKAREA DS    24CL256             WORK AREA TO READ LIBRARY RECORDS
DIRTBL   DS    1000CL12            DIRECTORY TABLE                  *.I
         END
