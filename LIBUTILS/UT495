U495     TITLE 'UT495 - ST.LOUIS CONCENTRATOR/DISTRIBUTOR'
UT495    CSECT
         PRINT ON,GEN
         SPACE 2
*******************************************************************
*                                                                 *
*        PROGRAM ID. :             UT495                          *
*                                                                 *
*        DATE WRITTEN :            APRIL 1976.                    *
*                                                                 *
*        AUTHOR :                  D. CARTWRIGHT                  *
*                                                                 *
*        LOCATION :                EUROPEAN COMPUTER CENTER       *
*                                                                 *
*******************************************************************
         EJECT
*******************************************************************
*                                                                 *
*        PURPOSE                                                  *
*       ---------                                                 *
*                                                                 *
* A) TO REFORMAT ANY FIXED LENGTH SEQUENTIAL DATA SET AS PSEUDO   *
*    CARD IMAGES PRECEDED BY A CONTROL RECORD IDENTIFYING ITS     *
*    ORIGINAL FORMAT.                                             *
*                                                                 *
* B) TO RECONSTITUTE A PSEUDO CARD IMAGE FILE INTO A DATA SET     *
*    WITH THE ORIGINAL ATTRIBUTES.                                *
*                                                                 *
* C) TO REFORMAT ST.LOUIS HASP PRINTED OUTPUT FROM THE DATA-100   *
*    TAPE DRIVE INTO PSEUDO CARD IMAGES TO BE RECONSTITUTED AS    *
*    OUTPUT ROUTED TO THE DESIRED EUROPEAN LOCATION.              *
*                                                                 *
* D) TO REFORMAT ST.LOUIS HASP PUNCHED OUTPUT FROM THE DATA-100   *
*    TAPE DRIVE INTO PSEUDO CARD IMAGES TO BE RECONSTITUTED AS    *
*    OUTPUT ROUTED TO THE DESIRED EUROPEAN LOCATION OR AS AN      *
*    UNREFORMATTED JOBSTREAM OR AS AN UT495 JOBSTREAM TO RECREATE *
*    A DATASET,DEPENDING ON WHETHER THE FIRST CARD OF DATA IS     *
*    A JOB CARD, AN UT495 CONTROL CARD OR NEITHER.                *
*                                                                 *
*                                                                 *
* THE FUNCTION WILL BE SPECIFIED BY THE PARM KEYWORD 'OPTYPE':    *
*    OPTYPE=RF - REFORMAT AS PSEUDO CARD IMAGES.                  *
*           RC - RECONSTITUTE AS ORIGINAL DATA.                   *
*           PO - REFORMAT A DATA 100 PRINT TAPE.                  *
*           PP - REFORMAT A DATA 100 PUNCH TAPE.                  *
*           PA - THE PROGRAM WILL DETERMINE IF THE DATA 100 TAPE  *
*                CONTAINS PRINT LINES OR PUNCHED CARDS,AND WILL   *
*                TAKE THE APPROPRIATE ACTION.                     *
*                                                                 *
*******************************************************************
         EJECT
         SPACE 5
*******************************************************************
*                                                                 *
*        INPUT.                                                   *
*        ------                                                   *
*    SYSIN (OPTYPE=RF ONLY) OPTIONAL DATA SET DEFINES THE JCL     *
*        THAT IS TO SURROUND THE REFORMATTED PSEUDO CARD IMAGES   *
*        IN THE OUTPUT DATA SET (SYSUT2).CONTROL CARD '%%%DATA%%%'*
*        SPECIFIES LOCATION OF PSEUDO CARD IMAGES.                *
*                                                                 *
*    SYSUT1(OPTYP=PO) DATA 100 MAGNETIC TAPE CONTAINING ANY       *
*        NUMBER OF JOBS -SEPARATOR PAGE,REPORTS,SEPARATOR PAGE    *
*        - SEPARATED BY TAPE MARKS.RECORDS ARE FBA,133X3990.      *
*                                                                 *
*    SYSUT1(OPTYPE=RF) SEQUENTIAL FIXED (BLOCKED) DATA SET TO BE  *
*        REFORMATTED TO PSEUDO CARD IMAGES.                       *
*                                                                 *
*    SYSUT1(OPTYPE=RC) PSEUDO CARD IMAGES PRECEDED BY A CONTROL   *
*        RECORD TO BE RECONSTITUTED TO THE ORIGINAL FORMAT.       *
*                                                                 *
*    SYSUT1(OPTYP=PP) DATA 100 MAGNETIC TAPE CONTAINING ANY       *
*        NUMBER OF JOBS -SEPARATOR CARD,OUTPUT,BLANK CARDS        *
*        - SEPARATED BY TAPE MARKS.RECORDS ARE FB,80X640.         *
*                                                                 *
*******************************************************************
         EJECT
         SPACE 5
*******************************************************************
*                                                                 *
*        OUTPUT.                                                  *
*        -------                                                  *
*    SYSPRINT  OPTIONAL MESSAGE DATA SET DESCRIBING FUNCTION,     *
*        DATA SET NAME,CHARACTERISTICS ETC.                       *
*                                                                 *
*    SYSUT2(OPTYPE=PO) CARD IMAGE JOBSTREAM DIRECTED TO THE HASP  *
*        INTERNAL READER.                                         *
*                                                                 *
*    SYSUT2(OPTPE=RF) JOB STREAM DEFINED BY SYSIN AND PSEUDO CARD *
*        IMAGES PRECEDED BY A CONTROL RECORD.                     *
*                                                                 *
*    SYSUT2(OPTYPE=RC) RECONSTITUTED DATA SET WITH ORIGINAL       *
*        ATTRIBUTES,BUT BLOCK SIZE MAY BE OVER-RIDDEN BY JCL.     *
*                                                                 *
*    SYSUT2(OPTYPE=PP) CARD IMAGE JOBSTREAM DIRECTED TO THE HASP  *
*        INTERNAL READER.                                         *
*                                                                 *
*******************************************************************
         EJECT
         SPACE 5
*******************************************************************
*                                                                 *
*        TECHNIQUE.                                               *
*        ----------                                               *
*    REFORMATTING IS PERFORMED BY TAKING ADVANTAGE OF THE FEATURES*
*    OF THE 'MOVE LONG' INSTRUCTION-SEE THE MANUAL 'PRINCIPLES OF *
*    OPERATION'.                                                  *
*    EACH PSEUDO CARD-IMAGE CREATED IS IN FACT 79 BYTES OF DATA   *
*    WITH A ONE BYTE LENGTH COUNT.BY USING THIS COUNT,WHICH WILL  *
*    BE LESS THAN 79 ON THE LAST RECORD,NO EXTRANEOUS RECORDS ARE *
*    GENERATED.                                                   *
*                                                                 *
*    IN AUTOMATIC MODE (OPTYPE=PA) THE PROGRAM ISSUES ONE EXCP    *
*    READ TO THE INPUT TAPE WITH NO DATA TRANSFER IN ORDER TO     *
*    DETERMINE THE BLOCKSIZE OF THE TAPE.WHEN THIS IS CALCULATED  *
*    THE PROGRAM CAN DETERMINE WHETHER IT IS A PRINT TAPE OR A    *
*    PUNCH TAPE AND ACT ACCORDINGLY.                              *
*                                                                 *
*        COMPETION CODES.                                         *
*        ----------------                                         *
*    0 - GOOD END OF PROGRAM.                                     *
*    4 - INVALID PARM REQUEST                                     *
*    8 - SYSUT1 OR SYSUT2 DD CARD NOT SUPPLIED                    *
*    12- INPUT NOT CORRECT FORMAT - NO CONTROL CARD               *
*    16- I/O ERROR OCCURRED                                       *
*                                                                 *
*    ABEND U0495 - PROCESSING ERROR OCCURRED                      *
*                                                                 *
*                                                                 *
*                                                                 *
*******************************************************************
         EJECT
*******************************************************************
*                                                                 *
*        LIMITATION                                               *
*       ------------                                              *
*                                                                 *
* A) USES 370 INSTRUCTIONS MVCL AND ICM.                          *
*                                                                 *
* B) THIS VERSION WILL ONLY PROCESS FIXED BLOCKED INPUT.          *
*                                                                 *
* C) ROUTINE 'MOREPO' CONTAINS AN EXTRA READ FOUND TO BE REQUIRED *
*    IF OPERATORS SUFFER DIGITAL PARALYSIS AND GET A FIRST        *
*    RECORD ON THE DATA100 TAPE WHICH IS JUST SKIP TO CHANNEL ONE *
*    THIS DROPS ONE LINE OF THE SEPARATOR UNDER NORMAL CODITIONS. *
*                                                                 *
*******************************************************************
         TITLE 'UT495 - DCB DSECT'
*******************************************************************
*        DCB DSECT                                                *
*******************************************************************
         SPACE 1
         PRINT GEN
         DCBD  DSORG=PS            GENERATE DCB DSECT
UT495    CSECT                     END OF DCB DSECT
         TITLE 'UT459 - ST.LOUIS CONCENTRATOR/DISTRIBUTOR'
*******************************************************************
*        REGISTER EQUATES AND USAGES.                             *
*******************************************************************
         SPACE 1
R0       EQU   0    SVC COMMUNICATIONS AND WORK REGISTER
R1       EQU   1    SVC COMMUNICATIONS AND WORK REGISTER
R2       EQU   2    SUB-ROUTINE CONTROL INFORMATION AND WORK REG.
R3       EQU   3    WORK REGISTER
R4       EQU   4    BAL RETURN ADDRESS
R5       EQU   5    CONTAINS REMAINING LENGTH FROM MOVE OPERATION
R6       EQU   6    SYSUT2 OUTPUT AREA POINTER
R7       EQU   7    SYSUT2 OUTPUT LENGTH
R8       EQU   8    SYSIN OR SYSUT1 INPUT AREA POINTER
R9       EQU   9    SYSIN OR SYSUT1 INPUT LENGTH - ALSO ZEROES PADDING
R10      EQU   10   SYSPRINT OUTPUT AREA POINTER
R11      EQU   11   SYSUT2 OUTPUT AREA POINTER BACKUP
R12      EQU   12   BASE REGISTER 2
R13      EQU   13   SAVE AREA POINTER / BASE REGISTER 1
R14      EQU   14   BALR RETURN ADDRESS
R15      EQU   15   BALR ROUTINE ADDRESS AND WORK REGISTER
         SPACE 3
*******************************************************************
*        HOUSEKEEPING                                             *
*******************************************************************
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13,R12)    ESTABLISH ADDRESSABILITY
         PRINT NOGEN               SUPPRESS MACRO EXPANSION
         SPACE 3
*******************************************************************
*        SAVE ADDRESS AND LENGTH OF PARM OF EXEC CARD             *
*******************************************************************
         SPACE 1
         L     R1,0(R1)            LOAD ADDRESS OF PARM INTO R1
         MVC   PARMLGTH+2(2),0(R1) STORE LENGTH OF PARM INFO'S
         LA    R1,2(R1)            GET ADDRESS OF PARM INFO'S
         ST    R1,PARMADDR         STORE ADDRESS OF PARM INFO'S
         EJECT
*******************************************************************
*        INITIALISE MESSAGE DATA SET                              *
*******************************************************************
         SPACE 1
         LA    R2,PRINTSW          POINT TO SYSPRINT DCB LIST
         OI    PRINTSW,DDINT       EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         BAL   R4,OPEN             OPEN IT IF PRESENT
         LA    R10,HEADER1         SET INITIAL POINTER IN CASE NO DD
         BAL   R4,PRINT            GET A BUFFER
         MVC   0(LINEWIDE,R10),HEADER1 PUT PAGE HEADING INTO IT
         BAL   R4,PRINT            OUTPUT HEADING,GET NEXT BUFFER
         SPACE 2
*******************************************************************
*        PROCESS PARM FIELD                                       *
*******************************************************************
         SPACE 1
         L     R1,PARMADDR         PICK UP PARM ADDRESS
         MVC   0(LINEWIDE,R10),HEADER2 SETUP SECOND PRINT LINE
         MVC   H2OFF1(MODELGTH,R10),0(R1) MOVE SOME PARM INFO. TO PRINT
         BAL   R4,PRINT            TELL USER HIS REQUEST
         MVC   0(LINEWIDE,R10),HEADER3 SET UP NEXT PRINT SKELETON
         L     R1,PARMADDR         RETRIEVE PARM ADDRESS
         L     R2,PARMLGTH         RETRIEVE PARM LENGTH
         LA    R3,MODELGTH         SET COMPARATOR
         CR    R2,R3               COMPARE FOR VALID LENGTH
         BNE   INVALIDP            EXIT IF ERROR
         SPACE 1
         CLC   MODLPARM(MODELOPL),0(R1) TEST SYNTAX
         BNE   INVALIDP            EXIT IF ERROR
         SPACE 1
*        TEST FOR OPERATION REQUIRED
         SPACE 1
         CLC   MODELPO(MODLPOL),MODELOPL(R1) TEST FOR DATA100 OPERATION
         BE    INITPO              YES,GO INITIALISE THIS OPERATION
         CLC   MODELPP(MODLPOL),MODELOPL(R1) TEST FOR PUNCH TAPE
         BE    INITPP              YES,GO INITIALIZE
         CLC   MODELRF(MODLPOL),MODELOPL(R1) TEST FOR REFORMAT
         BE    INITRF              YES,GO INITIALISE THYSELF
         CLC   MODELRC(MODLPOL),MODELOPL(R1) TEST FOR RECONSTITUTE
         BE    INITRC              YES,GO INITIALISE
         CLC   MODELPA(MODLPOL),MODELOPL(R1) TEST FOR AUTOMATIC MODE
         BE    INITPA              YES,GO FIND BLOCKSIZE OF TAPE
         SPACE 2
         B     INVALIDP            ERROR EXIT IF OPERATION NOT FOUND
         TITLE 'UT495 - AUTOMATIC MODE BLOCKSIZE DETERMINATION'
*******************************************************************
*        AUTOMATIC MODE PROCESSING.                               *
*******************************************************************
         SPACE 3
INITPA   DS    0H                  FIND TAPE BLOCKSIZE
         OPEN  (TAPETEST,INPUT)    OPEN FILE
         MVI   TAPECB,0            CLEAR ECB
         EXCP  TAPEIOB             READ ONE BLOCK
         WAIT  ECB=TAPECB          AWAIT COMPLETION
         CLI   TAPECB,OK           TEST COMPLETION
         BNE   ERROR4              EXIT IF ERROR
         SPACE 1
         L     R3,BIGBLOCK         GET LENGTH OF READ
         SH    R3,RESIDUAL         SUBTRACT RESIDUAL COUNT
         CLOSE (TAPETEST,REREAD)   CLOSE AND REPOSITION TAPE
         SPACE 1
         CH    R3,D100BLKS         IS IT A PRINT TAPE?
         BE    INITPO              YES,GO PROCESS IT
         CH    R3,CARDBLKS         OR IS IT A PUNCH TAPE?
         BE    INITPP              YES,CARRY ON WITH IT
         B     ERROR3              IF NEITHER,GIVE UP
         TITLE 'UT495 - OPERATION SET-UP PROCESSING'
*******************************************************************
*        INITIALISE DATA 100 PRINT OPERATIONS                     *
*******************************************************************
         SPACE 1
INITPO   DS    0H                  PARM='OPTYPE=PO' FOUND
         L     R1,SYSUT1SW         POINT TO INPUT DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         MVC   DCBBLKSI,D100BLKS   SET DEFAULT BLOCKSIZE
         MVC   DCBLRECL,D100RECL   SET DEFAULT RECORD LENGTH
         MVC   DCBRECFM,D100RECF   SET DEFAULT RECORD FORMAT
         SPACE 1
         L     R1,SYSUT2SW         POINT TO OUTPUT DCB
         MVC   DCBBLKSI,HASPBLKS   SET DEFAULT BLOCKSIZE
         MVC   DCBLRECL,HASPRECL   SET DEFAULT RECORD LENGTH
         MVC   DCBBUFNO,HASPBFNO   SET DEFAULT BUFFERING
         DROP  R1                  END DCB ADDRESSABILITY
         SPACE 1
         MVI   PARMFLAG,PARMPO     REMEMBER OPTION SELECTED
         MVC   H3OFF1(H3OPL,R10),H3PO COMPLETE OPTION PRINT LINE
         B     SETUPRF             GO TO REFORMAT COMMON INTERFACE
         EJECT
*******************************************************************
*        INITIALISE DATA 100 PUNCH OPERATIONS                     *
*******************************************************************
         SPACE 2
INITPP   DS    0H                  PARM='OPTYPE=PP' FOUND
         L     R1,SYSUT1SW         POINT TO INPUT DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         MVC   DCBBLKSI,CARDBLKS   SET DEFAULT BLOCKSIZE
         MVC   DCBLRECL,CARDRECL   SET DEFAULT RECORD LENGTH
         MVC   DCBRECFM,CARDRECF   SET DEFAULT RECORD FORMAT
         SPACE 2
         L     R1,SYSUT2SW         POINT TO OUTPUT DCB
         MVC   DCBBLKSI,HASPBLKS   SET DEFAULT BLOCKSIZE
         MVC   DCBLRECL,HASPRECL   SET DEFAULT RECORD LENGTH
         MVC   DCBBUFNO,HASPBFNO   SET DEFAULT BUFFERING
         DROP  R1                  END DCB ADDRESSABILITY
         SPACE 2
         MVI   PARMFLAG,PARMPP     REMEMBER OPTION SELECTED
         MVC   H3OFF1(H3OPL,R10),H3PP COMPLETE OPTION PRINT LINE
         EJECT
*******************************************************************
*        SET UP PUNCH CONTROL RECORD                              *
*******************************************************************
         SPACE 1
         LA    R2,SYSUT1SW         POINT AT INPUT DCB LIST
         OI    SYSUT1SW,DDINT      EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         BAL   R4,OPEN             OPEN IT IF SO
         SPACE 1
         L     R1,SYSUT1SW         POINT AT INPUT DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         MVC   CONPRECF,DCBRECFM   COPY RECFM TO CONTROL RECORD
         MVC   CONPBLKS,DCBBLKSI        BLKSIZE
         MVC   CONPRECL,DCBLRECL        LRECL
         DROP  R1                  END DCB ADDRESSABILITY
         SPACE 1
         LA    R2,SYSUT2SW         POINT AT OUTPUT DCB LIST
         OI    SYSUT2SW,DDINT      EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         BAL   R4,OPEN             OPEN IT IF SO
         BAL   R4,WUT2             FIND A BUFFER FOR OUTPUT
         B     INITIAL             GO TO COMMON INITIALISATION
         EJECT
*******************************************************************
*        INITIALISE RE-FORMAT OPERATIONS                          *
*******************************************************************
         SPACE 1
INITRF   DS    0H                  PARM='OPTYPE=RF' FOUND
         MVI   PARMFLAG,PARMRF     REMEMBER OPTION SELECTED
         MVC   H3OFF1(H3OPL,R10),H3RF COMPLETE OPTION PRINT LINE
         LA    R2,SYSUT1SW         POINT TO INPUT DCB LIST
         BAL   R4,RDJFCB           GO READ JFCB
         MVC   CONTDSN,JFCBDSNM    SAVE DATA SET NAME
         EJECT
*******************************************************************
*        SET UP RE-FORMAT CONTROL RECORD                          *
*******************************************************************
         SPACE 1
SETUPRF  DS    0H                  PO/RF COMMON INTERFACE
         LA    R2,SYSUT1SW         POINT AT INPUT DCB LIST
         OI    SYSUT1SW,DDINT      EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         BAL   R4,OPEN             OPEN IT IF SO
         SPACE 1
         L     R1,SYSUT1SW         POINT AT INPUT DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         MVC   CONTRECF,DCBRECFM   COPY RECFM TO CONTROL RECORD
         MVC   CONTBLKS,DCBBLKSI        BLKSIZE
         MVC   CONTRECL,DCBLRECL        LRECL
         DROP  R1                  END DCB ADDRESSABILITY
         SPACE 1
         LA    R2,SYSUT2SW         POINT AT OUTPUT DCB LIST
         OI    SYSUT2SW,DDINT      EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         BAL   R4,OPEN             OPEN IT IF SO
         BAL   R4,WUT2             FIND A BUFFER FOR OUTPUT
         B     INITIAL             GO TO COMMON INITIALISATION
         EJECT
*******************************************************************
*        INITIALISE RE-CONSTRUCT OPERATIONS                       *
*******************************************************************
         SPACE 1
INITRC   DS    0H                  PARM='OPTYPE=RC' FOUND
         MVI   PARMFLAG,PARMRC     REMEMBER OPTION SELECTED
         MVC   H3OFF1(H3OPL,R10),H3RC COMPLETE OPTION PRINT LINE
         LA    R2,SYSUT1SW         POINT TO INPUT FILE PARAMETERS
         OI    SYSUT1SW,DDINT      EXPRESS INTEREST IN IT
         BAL   R4,TESTIOT          FIND OUT IF PRESENT
         TM    SYSUT1SW,DDPRES     IS IT?
         BNO   ERROR1              NO,USER ERROR - ABANDON RUN
         BAL   R4,OPEN             GO OPEN INPUT DATASET
         BAL   R4,RUT1             GO READ FIRST (CONTROL) RECORD
         MVC   CONTROL,0(R8)       SAVE CONTROL RECORD
         CLI   CONTRLRC,CONTRLID   IS THIS A CONTROL RECORD
         BNE   ERROR3              CERTAINLY NOT,EXIT
         SPACE 1
*        WE NOW ASSUME THAT THE CHANCES ARE WE'VE READ A CONTROL RECORD
         SPACE 1
         LA    R1,SYSUT2SW         POINT TO OUTPUT DCB LIST
         LA    R2,CONTRECF         POINT TO NEW DEFAULT DCB VALUES
         LA    R3,CONTRECL
         LA    R4,CONTBLKS
         STM   R2,R4,20(R1)        SAVE IN DCB LIST
         EJECT
*******************************************************************
*        TEST WHICH ARE THE DD'S SUPPLIED, AND OPEN DATA SETS     *
*         PRESENT.                                                *
*******************************************************************
         SPACE 1
INITIAL  DS    0H                  COMPLETE INITIALISATION
         LA    R3,MAXDS            ESTABLISH LOOP
         LA    R2,DCBTABLE         POINT R2 AT DCB TABLE
         OI    0(R2),DDINT         INDICATE DD INTEREST
         BAL   R4,TESTIOT          GO TEST IF DD STATEMENT PRESENT
         BAL   R4,OPEN             GO OPEN DATA SET
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY
         BCT   R3,*-16             PROCESS NEXT DATA SET
         SPACE 1
         TM    SYSUT1SW,DDINT+DDPRES+DDOPEN IS THERE INPUT?
         BNO   ERROR1              NO,ERROR
         TM    SYSUT2SW,DDINT+DDPRES+DDOPEN IS THERE OUTPUT?
         BNO   ERROR1              NO,ERROR
         BAL   R4,PRINT            OK,TELL USER WHAT WE ARE DOING
         SPACE 3
*******************************************************************
*        NOW PERFORM FURTHER SPECIALISED CODING FOR EACH FUNCTION *
*******************************************************************
         SPACE 1
         SR    R2,R2               CLEAR A REGISTER
         IC    R2,PARMFLAG         PICK UP OPTION VALUE
         B     PARMLIST(R2)        GO DECIDE WHAT TO DO
         SPACE 2
PARMLIST DS    0H                  SWITCH LIST
         B     INVALIDP            SHOULD NEVER HAPPEN
         B     MOREPO              PARM=OPTYPE=P0
         B     MORERF                          RF
         B     MORERC                          RC
         B     MOREPP                          PP
         TITLE 'UT495 - STAGE II INITIALISATION'
*******************************************************************
*        PROCESS ST.LOUIS HASP PRINT SEPARATOR PAGE               *
*******************************************************************
         SPACE 1
MOREPO   DS    0H
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   MOREPO1             NO,FORGET HEADINGS
         MVC   0(LINEWIDE,R10),HEADER4 SET UP SUB-HEADING
         BAL   R4,PRINT            AND OUTPUT IT
         MVC   0(LINEWIDE,R10),HEADER5 SECOND LINE
         BAL   R4,RUT1             GASH FIRST RECORD
         SPACE 1
MOREPO1  DS    0H                  SECOND TIME ENTRY
         BAL   R4,RUT1             GO READ FIRST RECORD
         NI    SYSUT2SW,FF-DDRF    TURN OFF LENGTH OF DATA FLAG
         OI    SYSUT1SW,DDRF       BUT OUR FIRST READ IS SPECIAL
         MVC   STLSEPAR,0(R8)      SAVE FIRST RECORD
         CLC   STLSEPID,STLSEPCH   CHECK THAT WE HAVE A SEPARATOR
         BNE   ENDTAPE             NO,EXIT
         SPACE 1
         BAL   R4,PRINT            OUTPUT REPORT,IF ANY
         MVC   PRTJFRM,PRTJFRMD    SET DEFAULT FORMS
         MVC   PRTJNAM,STLSJNAM    COPY JOB NAME
         MVC   CONTJNAM,STLSJNAM   IN CONTROL RECORD AS WELL
         MVC   PRTPNAM,STLSPNAM    COPY PROGRAMMER NAME
         CLC   STLSFRMD,STLSPNAM   IS THIS A CODED FORM NUMBER?
         BNE   *+10                NO,LEAVE DEFAULT
         MVC   PRTJFRM,STLSFRM     YES,COPY REQUIRED FORM NUMBER
         MVC   PRTRRMT,STLSBIN     MOVE BIN NO. TO /*ROUTE CARD
         CLC   PRTRRMT,=C'30'      IS IT VALID REMOTE
         BNH   *+18                YES,CARRY ON
         CLI   PRTRRMT+1,C' '      THOUGH IT MIGHT BE SINGLE-DIGIT
         BE    *+10                YES,CARRY ON
         MVC   PRTRRMT,PRTRRMTD    NO,SET DEFAULT
         CLI   PRTRRMT,C'0'        TEST FOR INVALID REMOTE NUMBER
         BH    MOREPO2             OK - CARRY ON
         MVC   PRTRRMT(1),PRTRRMT+1 USE SECOND DIGIT ONLY
         MVI   PRTRRMT+1,C' '      FOLLOWED BY BLANK
         CLI   PRTRRMT,C'0'        IS IT VALID NOW?
         BNL   MOREPO2             YES,CONTINUE
         MVC   PRTRRMT,PRTRRMTD    NO,SET DEFAULT
         SPACE 1
MOREPO2  DS    0H                  JOB STREAM NOW SET UP
         LA    R8,PRTJOB           POINT TO START OF JOB STREAM
         LA    R9,PRTLNGTH         SET LENGTH
         B     PROCESS             OUTPUT JOB STREAM AND DATA
         EJECT
*******************************************************************
*        PROCESS ST.LOUIS HASP PUNCH SEPARATOR CARD               *
*******************************************************************
         SPACE 2
MOREPP   DS    0H
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   MOREPP1             NO,FORGET HEADINGS
         MVC   0(LINEWIDE,R10),HEADER4 SET UP SUB-HEADING
         BAL   R4,PRINT            AND OUTPUT IT
         MVC   0(LINEWIDE,R10),HEADER5 SECOND LINE
         SPACE 2
MOREPP1  DS    0H                  SECOND TIME ENTRY
         BAL   R4,RUT1             GO READ FIRST RECORD
         NI    SYSUT2SW,FF-DDRF-DDPP TURN OFF LENGTH OF DATA FLAG
         MVC   PCDSEPAR,0(R8)      SAVE FIRST RECORD
         CLC   PCDSEPCH,PCDSEPID   CHECK THAT WE HAVE A SEPARATOR
         BNE   ENDTAPE             NO,EXIT
         SPACE 1
         BAL   R4,PRINT            OUTPUT REPORT,IF ANY
         CLC   PCDSEPID,PCDBIN1    DO WE HAVE ANY ROUTING?
         BNE   *+4+6+4             YES,GO SORT IT OUT
         MVC   PUNRRMT,PUNRRMTD    NO,SET DEFAULT
         B     MOREPP3             AND SKIP OTHER TESTS
         OC    PCDBIN1,ZEROES      ENSURE NUMERIC ROUTING
         MVC   PUNRRMT(1),PCDBIN1  MOVE IN FIRST ROUTE DIGIT
         CLC   PCDSEPID,PCDBIN2    ONLY ONE?
         BNE   *+4+4+4             NO,GET NEXT ONE
         MVI   PUNRRMT+1,C' '      ENSURE ONLY ONE CHARACTER
         B     MOREPP2             GO GET JOB NAME
         OC    PCDBIN2,ZEROES      ENSURE NUMERIC ROUTING
         MVC   PUNRRMT+1(1),PCDBIN2 GET SECOND DIGIT OF BIN NUMBER
         SPACE 2
MOREPP2  DS    0H                  TEST ROUTING,SET UP JOB NAME
         CLC   PUNRRMT,=C'30'      IS IT VALID REMOTE
         BNH   *+18                YES,CARRY ON
         CLI   PUNRRMT+1,C' '      THOUGH IT MIGHT BE SINGLE-DIGIT
         BE    *+10                YES,CARRY ON
         MVC   PUNRRMT,PUNRRMTD    NO,SET DEFAULT
         CLI   PUNRRMT,C'0'        TEST FOR INVALID REMOTE NUMBER
         BH    MOREPP3             OK - CARRY ON
         MVC   PUNRRMT(1),PUNRRMT+1 USE SECOND DIGIT ONLY
         MVI   PUNRRMT+1,C' '      FOLLOWED BY BLANK
         CLI   PUNRRMT,C'0'        IS IT VALID NOW?
         BNL   MOREPP3             YES,CONTINUE
         MVC   PUNRRMT,PUNRRMTD    NO,SET DEFAULT
         EJECT
MOREPP3  DS    0H
         MVC   PUNLISTR,PUNRRMT    SEND LISTING TO SAME PLACE
         MVC   PUNJNO1,PCDJOB1     COPY 1ST DIGIT OF JOB NUMBER
         MVC   PUNJNO2,PCDJOB2          2ND
         MVC   PUNJNO3,PCDJOB3          3RD
         MVC   PUNJNO4,PCDJOB4          4TH
         CLC   PCDSEPID,PUNJNO1    IS JOB NAME INVALID?
         BNE   *+4+6               NO,CARRY ON
         MVC   PUNJNAM,ZEROES      YES,SET DEFAULT
         OC    PUNJNAM,ZEROES      ENSURE NUMERIC
         MVC   PUNJTYP,PUNJCRD     SET DEFAULT JOB TYPE
         MVC   PUNJPROC,PUNPROC1   SET DEFAULT PROCEDURE
         MVC   CONPJNAM,PUNJNAM    SAVE JOB NAME
         BAL   R4,RUT1             SKIP BLANK CARD
         SPACE 1
         BAL   R4,RUT1             GO GET FIRST DATA RECORD
         MVC   PUNDATA,0(R8)       SAVE FIRST DATA CARD
         CLC   PUNSLASH,PUNDATA    TEST FOR JCL
         BNE   MOREPP4             NO WAY
         SCAN  PUNDATA,JOBCARD,LIMIT=LASTCOLM IS IT A JOB CARD?
         B     MOREPP4             NO,SEE IF UT495 DATA
         LA    R8,PUNDATA          YES,DON'T OUTPUT MORE JCL
         LA    R9,PUNDATAL         ONLY THE DATA
         MVC   PUNJTYP,JOBCARD+1   CHANGE JOBNAME FOR REPORT
         MVC   CONPJNAM,PUNDATA+2  REPORT ASSUMES 8-CHAR JOB NAME
         NI    SYSUT1SW,FF-DDRF-DDPP ENSURE WE DON'T REFORMAT
         B     PROCESS             BUT OUTPUT JOB DIRECTLY
         SPACE 2
MOREPP4  DS    0H                  TEST FOR UT495 DATA
         CLI   PUNDATA+CONPRLRC-CONPRLLN,CONPRLID HAS IDENTIFIER?
         BNE   MOREPP5             NO,STRAIGHT PUNCHED DATA
         CLC   CONPRLLN,PUNDATA    CHECK FOR LENGTH INDICATOR
         BNE   MOREPP5             NO,SO NOT UT495 DATA
         MVC   PUNJTYP,PUNJDATA    CHANGE JOB NAME
         MVC   CONPJNAM,PUNJNAM    SAVE JOB NAME
         MVC   PUNJPROC,PUNPROC2   AND PROCEDURE
         LA    R8,PUNJOB           START WITH JOB CARD
         LA    R9,PUNSLEN          OUTPUT SHORTER JOB STREAM
         NI    SYSUT2SW,FF-DDRF-DDPP ENSURE OUTPUT IS UNFORMATTED
         OI    SYSUT1SW,DDPP       BUT INPUT IS SPECIAL
         B     PROCESS             GO OUTPUT JOB AND DATA
         SPACE 2
MOREPP5  DS    0H                  INPUT IS JUST PUNCHED CARDS
         OI    SYSUT1SW,DDPP       SET FOR SPECIAL READ
         OI    SYSUT2SW,DDRF+DDPP  SET SWITCH FOR FIRST DATA READ
         LA    R8,PUNJOB           START AT THE BEGINNING
         LA    R9,PUNLNGTH         GO ON TO THE END
         B     PROCESS             THEN STOP
         SPACE 1
         EJECT
*******************************************************************
*        PROCESS SYSIN RECORDS                                    *
*******************************************************************
         SPACE 1
MORERF   DS    0H                  SET UP RE-FORMAT DATA
         TM    SYSINSW,DDINT+DDPRES+DDOPEN IS THERE SYSIN INPUT?
         BNO   MORERF2             NO,SO OUTPUT CONTROL RECORD NOW
         SPACE 1
RFINLOOP DS    0H                  PROCESS SYSIN RECORDS
         BAL   R4,RIN              READ AN INPUT RECORD
         CLC   SYSINDLM,0(R8)      TEST FOR DATA CODE CARD
         BE    MORERF2             YES,GET SYSUT1 DATA
         MVCL  R6,R8               NO,TRANSFER SYSIN DATA
         BNE   ERROR4              SOMETHING IS VERY WRONG
         SPACE 1
         BAL   R4,WUT2             OUTPUT RECORD,GET NEXT BUFFER
         B     RFINLOOP            GO ROUND FOR MORE
         SPACE 2
MORERF2  DS    0H                  FOUND INPUT DELIMITER
         LA    R8,CONTRLLN         POINT TO CONTROL RECORD INSTEAD
         LA    R9,L'CONTROL+1      ENSURE LENGTH IS CORRECT
         B     PROCESS             GO TRANSFER ALL OF SYSUT1
         EJECT
*******************************************************************
*        START TO RECONSTITUTE                                    *
*******************************************************************
         SPACE 1
MORERC   DS    0H                  RE-CONSTRUCT PROCESSING
         BAL   R4,RUT1             GET FIRST DATA RECORD
         BAL   R4,WUT2             GET AN OUTPUT BUFFER
         B     PROCESS             TRANSFER DATA
         TITLE 'UT495 - ROUTINE TO RE-BLOCK DATA'
*******************************************************************
*        RE-BLOCKING ALGORITHM                                    *
*******************************************************************
         SPACE 1
PROCESS  DS    0H                  RE-BLOCKING ROUTINE
         LR    R5,R7               SAVE OUTPUT LENGTH
         SR    R5,R9               SUBTRACT INPUT LENGTH
         MVCL  R6,R8               MOVE SOME DATA
         SPACE 1
         BE    RECEQUAL            GO RENEW BOTH BUFFERS IF EQUAL
         BL    RECOUTLO            RENEW OUTPUT BUFFER ONLY
         BH    RECOUTHI            RENEW INPUT BUFFER ONLY
         B     ERROR4              SOMETHING'S VERY WRONG
         SPACE 3
RECEQUAL DS    0H                  BOTH BUFFERS ARE FINISHED
         BAL   R4,RUT1             GET SOME MORE INPUT
         BAL   R4,WUT2             IF MORE GET ANOTHER OUTPUT BUFFER
         B     PROCESS             AND GO FILL IT
         SPACE 2
RECOUTLO DS    0H                  OUTPUT BUFFER IS FULL
         BAL   R4,WUT2             SO GO GET ANOTHER
         B     PROCESS             AND CONTINUE TO FILL IT
         SPACE 2
RECOUTHI DS    0H                  INPUT BUFFER IS EMPTY
         LTR   R7,R5               SET REMAINING OUTPUT LENGTH
         BM    ERROR4              EXIT IF SEVERE ERROR
         SR    R6,R7               BACKSPACE OVER PADDING
         BAL   R4,RUT1             GO GET MORE DATA
         B     PROCESS             IF ANY ADD IT TO OUTPUT
         TITLE 'UT495 - TERMINATION ROUTINES'
*******************************************************************
*        SYSUT1 END OF FILE ROUTINE                               *
*******************************************************************
         SPACE 1
EODUT1   DS    0H
         TM    SYSUT2SW,DDRF+DDPP  DO OUTPUT RECORDS CONTAIN LENGTH?
         BNM   EODUT1A             NO,CARRY ON
         IC    R7,0(,R11)          PICK UP LAST BYTE COUNT
         SR    R7,R5               SUBTRACT LENGTH OF PADDING
         STC   R7,0(,R11)          RESET DATA LENGTH BYTE
         SPACE 1
EODUT1A  DS    0H                  NOW DECIDE WHAT TO DO
         SR    R2,R2               CLEAR A REGISTER
         IC    R2,PARMFLAG         PICK UP OPTION SELECTED
         B     EOFLIST(R2)         GO TO APPROPRIATE ROUTINE
         SPACE 2
EOFLIST  DS    0H                  SWITCH LIST
         B     INVALIDP            SHOULD NEVER HAPPEN
         B     EOFPO               PARM=OPTYPE=PO
         B     EOFRF                           RF
         B     EOFRC                           RC
         EJECT
*******************************************************************
*        END OF DATA 100 PUNCH FILE                               *
*******************************************************************
         SPACE 1
EOFPP    DS    0H                  END OF PUNCH JOB
         CP    CNTUT1,ZERO         DID WE READ ANY RECORDS?
         BE    ENDTAPE             NO,SO WE HAVE FINISHED
         SPACE 1
         NI    SYSUT2SW,FF-DDRF-DDPP TURN OFF DATA LENGTH FLAG
         BAL   R4,WUT2             OUTPUT LAST BUFFER WITH PADDING
         LA    R2,SYSUT1SW         POINT TO INPUT DCB LIST
         BAL   R4,CLOSE            GO CLOSE IT
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   EOFPO1              NO
         SPACE 1
*        THE NEXT BLOCK OF INSTRUCTIONS COMPLETE THE DETAIL PRINT LINE
         SPACE 1
         MVC   0(LINEWIDE,R10),POLINE SET UP PRINT SKELETON
         ED    POFILE-POLINE(L'POFILE,R10),CNTFILES FILE NUMBER
         MVC   POJNAME-POLINE(L'POJNAME,R10),CONPJNAM  JOB NAME
         MVC   POPNAME-POLINE(L'POPNAME,R10),PUNPNAM PROGRAMMER NAME
         MVC   POROUTE-POLINE(L'POROUTE,R10),PUNRRMT REMOTE NO.
         MVC   POFORMS-POLINE(L'POFORMS,R10),PUNJTYP FORMS REQUEST
         ED    UT1OFF(UT1MLNTH,R10),CNTUT1 SYSUT1 COUNT
         ED    UT2OFF(UT2MLNTH,R10),CNTUT2 SYSUT2 COUNT
         ED    SINOFF(SINMLNTH,R10),CNTSYSIN SYSIN COUNT
         B     EOFPO1              GO TRY NEXT FILE
         EJECT
*******************************************************************
*        END OF DATA 100 PRINT FILE                               *
*******************************************************************
         SPACE 1
EOFPO    DS    0H                  END OF PRINT JOB
         CP    CNTUT1,ZERO         DID WE READ ANY RECORDS?
         BE    ENDTAPE             NO,SO WE HAVE FINISHED
         SPACE 1
         NI    SYSUT2SW,FF-DDRF    TURN OFF DATA LENGTH FLAG
         BAL   R4,WUT2             OUTPUT LAST BUFFER WITH PADDING
         LA    R2,SYSUT1SW         POINT TO INPUT DCB LIST
         BAL   R4,CLOSE            GO CLOSE IT
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   EOFPO1              NO
         SPACE 1
*        THE NEXT BLOCK OF INSTRUCTIONS COMPLETE THE DETAIL PRINT LINE
         SPACE 1
         MVC   0(LINEWIDE,R10),POLINE SET UP PRINT SKELETON
         ED    POFILE-POLINE(L'POFILE,R10),CNTFILES FILE NUMBER
         MVC   POJNAME-POLINE(L'POJNAME,R10),CONTJNAM JOB NAME
         MVC   POPNAME-POLINE(L'POPNAME,R10),PRTPNAM PROGRAMMER NAME
         MVC   POROUTE-POLINE(L'POROUTE,R10),PRTRRMT REMOTE NO.
         CLC   PRTJFRM,PRTJFRMD    TEST FOR DEFAULT FORMS
         BE    *+10                YES,LEAVE STD.
         MVC   POFORMS-POLINE(L'POFORMS,R10),PRTJFRM FORMS REQUEST
         ED    UT1OFF(UT1MLNTH,R10),CNTUT1 SYSUT1 COUNT
         ED    UT2OFF(UT2MLNTH,R10),CNTUT2 SYSUT2 COUNT
         ED    SINOFF(SINMLNTH,R10),CNTSYSIN SYSIN COUNT
         SPACE 2
EOFPO1   DS    0H                  TRY NEXT FILE
         BAL   R4,RDJFCB           MORE FILES TO COME,READ SYSUT1 JFCB
         LH    R3,JFCBFLSQ         PICK UP SEQUENCE NUMBER OF FILE
         LA    R3,1(,R3)           INCREASE IT BY ONE
         STH   R3,JFCBFLSQ         RESET JFCB
         AP    CNTFILES,ONE        UPDATE FILE COUNT
         BAL   R4,OPENJ            GO OPEN NEXT FILE
         SP    CNTUT1,CNTUT1       RESET INPUT COUNT
         SP    CNTUT2,CNTUT2       RESET OUTPUT COUNT
         SPACE 1
         SR    R2,R2               CLEAR A REGISTER
         IC    R2,PARMFLAG         PICK UP OPTION VALUE
         B     PERMLIST(R2)        GO DECIDE WHAT TO DO
         SPACE 2
PERMLIST DS    0H                  SWITCH LIST
         B     INVALIDP            SHOULD NEVER HAPPEN
         B     MOREPO1             PARM=OPTYPE=P0
         B     ERROR4                          RF
         B     ERROR4                          RC
         B     MOREPP1                         PP
         EJECT
*******************************************************************
*        END OF DATA 100 TAPE - CLOSE HASP INTERNAL READER        *
*******************************************************************
         SPACE 1
ENDTAPE  DS    0H                  END OF PRINT TAPE
         MVC   0(L'EOFCARD,R6),EOFCARD MOVE /*EOF TO FINAL BUFFER
         B     JOBEND              END OF RUN
         EJECT
*******************************************************************
*        END OF REFORMAT OPERATION                                *
*******************************************************************
         SPACE 1
EOFRF    DS    0H                  END OF RE-FORMAT DATA
         TM    SYSINSW,DDINT+DDPRES+DDOPEN IS THERE SYSIN DATA ?
         BNO   EODIN               NO,GO DO PSEUDO-CLOSE
         LA    R2,SYSUT1SW         POINT TO INPUT DCB
         BAL   R4,CLOSE            GO CLOSE IT
         SPACE 1
EOFRF1   DS    0H                  PROCESS REMAINING SYSIN DATA
         NI    SYSUT2SW,FF-DDRF    TURN OFF DATA LENGTH FLAG
         BAL   R4,RIN              GO READ A SYSIN RECORD
         BAL   R4,WUT2             OUTPUT PREVIOUS RECORD
         MVCL  R6,R8               TRANSFER TO OUTPUT
         BNE   ERROR4              ERROR EXIT
         B     EOFRF1              GO ROUND AGAIN
         EJECT
*******************************************************************
*        END-OF-FILE ROUTINE FOR SYSIN                            *
*******************************************************************
         SPACE 1
EODIN    DS    0H
         LA    R2,SYSINSW          POINT TO SYSIN DCB LIST
         BAL   R4,CLOSE            GO CLOSE IT
         SPACE 2
*******************************************************************
*        REFORMAT / RECONSTITUTE DETAIL REPORT                    *
*******************************************************************
         SPACE 1
EOFRC    DS    0H                  END OF RECONSTITUTE OPERATION
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   JOBEND              NO
         SPACE 1
         MVC   0(LINEWIDE,R10),HEADER6  MOVE DETAIL HEADER 1
         BAL   R4,PRINT            PRINT IT
         MVC   0(LINEWIDE,R10),HEADER7  MOVE DETAIL HEADER 2
         BAL   R4,PRINT            PRINT IT
         MVC   0(LINEWIDE,R10),RFLINE SET UP DETAIL SKELETON
         MVC   RFDSN-RFLINE(L'RFDSN,R10),CONTDSN DATA SET NAME
         SR    R3,R3               CLEAR A WORK REGISTER
         ICM   R3,3,CONTRECL       PICK UP LRECL
         CVD   R3,DECIMAL          CONVERT IT
         ED    RFRECOFF(RFRECMLN,R10),DECIMAL+4 PUT IN PRINT LINE
         ICM   R3,3,CONTBLKS       PICK UP BLOCKSIZE
         CVD   R3,DECIMAL          CONVERT IT
         ED    RFBLKOFF(RFBLKMLN,R10),DECIMAL+4 PUT IN PRINT LINE
         ED    UT1OFF(UT1MLNTH,R10),CNTUT1 SYSUT1 COUNT
         ED    UT2OFF(UT2MLNTH,R10),CNTUT2 SYSUT2 COUNT
         ED    SINOFF(SINMLNTH,R10),CNTSYSIN SYSIN COUNT
         EJECT
*******************************************************************
*        JOB TERMINATION ROUTINE -                                *
*         CLOSE ANY OPEN DATA SETS,                               *
*         SET A COMPLETION CODE IN REGISTER 15, AND RETURN.       *
*******************************************************************
         SPACE 1
JOBEND   DS    0H
         LA    R3,MAXDS            ESTABLISH LOOP
         LA    R2,DCBTABLE         POINT AT START OF DCB TABLE
         BAL   R4,CLOSE            CLOSE DATA SET IF OPEN
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY
         BCT   R3,*-8              CLOSE NEXT DATA SET
         PGMOUT RC=COMPCODE        SET COND CODE AND RETURN
         TITLE 'UT495 - ERROR ROUTINES'
*******************************************************************
*        USER ERROR HANDLING ROUTINES                             *
*******************************************************************
         SPACE 1
INVALIDP DS    0H                  INVALID PARM SUPPLIED
         MVC   COMPCODE,COND4      SET COMPLETION CODE
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   JOBEND              NO,SO EXIT
         MVC   0(LINEWIDE,R10),ERR0LINE YES,TELL USER ERROR
         B     JOBEND              THEN EXIT
         SPACE 1
ERROR1   DS    0H                  MISSING DD CARD
         MVC   COMPCODE,COND8      SET COMPETION CODE
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   JOBEND              NO,SO EXIT
         MVC   0(LINEWIDE,R10),ERR1LINE YES,TELL USER ERROR
         B     JOBEND              THEN EXIT
         SPACE 1
ERROR2   DS    0H                  RDJFCB FAILED
         MVC   COMPCODE,COND16     SET COMPLETION CODE
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES ?
         BNO   JOBEND              NO,SO EXIT
         MVC   0(LINEWIDE,R10),ERR2LINE YES,TELL USER ERROR
         B     JOBEND              THEN EXIT
         SPACE 1
ERROR3   DS    0H                  INVALID INPUT
         MVC   COMPCODE,COND12     SET COMPLETION CODE
         TM    PRINTSW,DDINT+DDPRES+DDOPEN DO WE WANT MESSAGES?
         BNO   JOBEND              NO,SO EXIT
         MVC   0(LINEWIDE,R10),ERR3LINE YES,TELL USER ERROR
         B     JOBEND              THEN EXIT
         SPACE 1
ERROR4   DS    0H                  PROCESSING ERROR
         ABEND 495,DUMP            ABANDON RUN
         EJECT
*******************************************************************
*        I/O ERROR ROUTINE                                        *
*******************************************************************
         SPACE 1
IOERROR  SUBIN ,                   ANALYSE I/O ERROR
         MVC   COMPCODE,COND16     SET COMPLETION CODE
         SYNADAF ACSMETH=QSAM      CALL ANALYSIS ROUTINE
         MVC   WTOIOE+27(86),50(R1) ADD RESULT OF ANALYSIS TO LINE
         SYNADRLS ,                RELEASE OS BUFFER
         WTO   MF=(E,WTOIOE)       TELL OPERATOR OF ERROR
         SUBOUT RETURN=JOBEND      TERMINATE JOB
         TITLE 'UT495 - I/O SUB-ROUTINES'
*******************************************************************
*        WRITE SUBROUTINE FOR SYSPRINT                            *
*******************************************************************
         SPACE 1
PRINT    SUBIN ,
         TM    PRINTSW,DDINT+DDPRES+DDOPEN   TEST IF NEED TO WRITE
         BNO   PRINTX              BRANCH IF NO
         PUT   SYSPRINT            WRITE RECORD TO SYSPRINT D/S
         LR    R10,R1              SAVE BUFFER ADDRESS
PRINTX   SUBOUT ,                  RETURN TO CALLER
         SPACE 2
*******************************************************************
*        READ SUBROUTINE FOR SYSIN                                *
*******************************************************************
         SPACE 1
RIN      SUBIN ,
         TM    SYSINSW,DDINT+DDPRES+DDOPEN TEST IF NEED TO READ
         BNO   RINX                BRANCH IF NO
         GET   SYSIN               READ RECORD FROM SYSIN D/S
         LR    R8,R1               SAVE RECORD ADDRESS
         SR    R9,R9               CLEAR LENGTH REGISTER
         L     R1,SYSINSW          POINT TO DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         ICM   R9,3,DCBLRECL       LOAD LENGTH OF RECORD
         DROP  R1                  END DCB ADDRESSABILITY
         AP    CNTSYSIN,ONE        INCREMENT RECORD COUNTER
RINX     SUBOUT ,                  RETURN TO CALLER
         EJECT
*******************************************************************
*        READ SUBROUTINE FOR SYSUT1                               *
*******************************************************************
         SPACE 1
RUT1     SUBIN ,
         TM    SYSUT1SW,DDINT+DDPRES+DDOPEN TEST IF NEED TO READ
         BNO   RUT1X               BRANCH IF NO
         TM    SYSUT1SW,DDRF       IS THIS A SPECIAL REQUEST?
         BO    RUT1RF              YES,DO PSEUDO READ
         TM    SYSUT1SW,DDPP       IS IT SPECIAL PUNCH REQUEST?
         BO    RUT1PP              YES,GO PROCESS IT
         SPACE 1
         GET   SYSUT1              READ RECORD FROM SYSUT1 D/S
         LR    R8,R1               SAVE RECORD ADDRESS
         SR    R9,R9               CLEAR LENGTH REGISTER
         L     R1,SYSUT1SW         POINT TO DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         ICM   R9,3,DCBLRECL       LOAD LENGTH OF RECORD
         DROP  R1                  END DCB ADDRESSABILITY
         AP    CNTUT1,ONE          INCREMENT RECORD COUNTER
         CLI   PARMFLAG,PARMRC     ARE WE IN RECONSTITUTE MODE?
         BE    RUT1RC              YES,GO FIND DATA LENGTH
         CLI   PARMFLAG,PARMPP     ARE WE DOING PUNCH OPERATIONS?
         BE    RUT1PPX             YES,SEE IF END OF FILE
         OI    SYSUT2SW,DDRF       NO,SO WILL SET DATA LENGTH IN OUTPUT
         B     RUT1X               RETURN
         SPACE 1
RUT1RF   DS    0H                  PSEUDO READ FOR OPTYPE=PO
         NI    SYSUT1SW,FF-DDRF    TURN OFF FLAG SO WE ONLY DO IT ONCE
         OI    SYSUT2SW,DDRF       SET LENGTH INDICATOR FLAG
         LA    R8,STLSEPAR         POINT TO SPARATOR LINE
         LA    R9,L'STLSEPAR       SET LENGTH
         B     RUT1X               RETURN
         SPACE 1
RUT1RC   DS    0H                  NEED TO KNOW REAL LENGTH OF DATA
         IC    R9,0(R8)            PICK UP LENGTH FROM RECORD
         LA    R8,1(,R8)           SKIP LENGTH BYTE
         B     RUT1X               RETURN
         SPACE 1
RUT1PP   DS    0H                  PSEUDO READ FOR OPTYPE=PP
         NI    SYSUT1SW,FF-DDRF-DDPP TURN OFF FLAGS SO WE DON'T RETURN
         NI    SYSUT2SW,FF-DDRF    RESET SWITCH FOR FIRST DATA WRITE
         LA    R8,PUNDATA          POINT TO SPARATOR LINE
         LA    R9,L'PUNDATA        SET LENGTH
         B     RUT1X               RETURN
         EJECT
RUT1PPX  DS    0H                  SPECIAL RETURN FOR OPTYPE=PP
         CLC   PUNJTYP,PUNJDATA    IS IT UT495 DATA?
         BNE   RUT1X               NO,JUST RETURN
         CLI   0(R8),DATALEND      IS IT A FULL CARD?
         BE    RUT1X               YES,CARRY ON
         CLC   BLANKS,0(R8)        IS INPUT A BLANK CARD?
         BNE   RUT1X               NO,CARRY ON
         SP    CNTUT1,ONE          DON'T COUNT THIS RECORD
         B     EODUT1              BECAUSE WE ASSUME IT'S END OF DATA
         SPACE 1
RUT1X    SUBOUT ,                  RETURN TO CALLER
         EJECT
*******************************************************************
*        WRITE SUBROUTINE FOR SYSUT2                              *
*******************************************************************
         SPACE 1
WUT2     SUBIN ,
         TM    SYSUT2SW,DDINT+DDPRES+DDOPEN  TEST IF NEED TO WRITE
         BNO   WUT2X               BRANCH IF NO
         PUT   SYSUT2              WRITE RECORD TO SYSUT2 D/S
         LR    R6,R1               SAVE BUFFER ADDRESS
         LR    R11,R1              AND A BACKUP COPY
         SR    R7,R7               CLEAR LENGTH REGISTER
         L     R1,SYSUT2SW         POINT TO OUTPUT DCB
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         ICM   R7,3,DCBLRECL       LOAD LENGTH OF RECORD
         AP    CNTUT2,ONE          INCREMENT RECORD COUNTER
         TM    SYSUT2SW,DDRF+DDPP  ARE WE CREATING PSEUDO CARDS-IMAGES?
         BNM   WUT2X               NO,EXIT
         SPACE 1
         BCTR  R7,0                REDUCE DATA LENGTH FOR COUNT BYTE
         STC   R7,0(R6)            SET DEFAULT LENGTH IN RECORD START
         LA    R6,1(,R6)           SKIP COUNT BYTE
         SPACE 1
WUT2X    SUBOUT ,                  RETURN TO CALLER
         SPACE 2
         EJECT
*******************************************************************
*        SUPPLY DEFAULT RECORD LENGTH AND/OR BLOCK SIZE           *
*         IF NOT CODED.                                           *
*******************************************************************
         SPACE 1
BLKSZRTN SUBIN SAVE=(R1,R2,R3,R4)  SUPPLY DEFAULT DCB VALUES
         L     R3,SAVEFILE         LOAD ADDRESS OF INPUT DCB LIST
         L     R1,0(,R3)           PICK UP DCB ADDRESS
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         SPACE 1
         CLI   DCBRECFM,X'00'      RECFM SUUPLIED IN JCL?
         BNE   *+4+4+6             YES - BYPASS FORWARD CHAINING
         L     R4,20(,R3)          GET DEFAULT RECFM ADDRESS
         MVC   DCBRECFM,0(R4)      MOVE IT INTO DCB
         CLC   DCBBLKSI,=X'0000'   BLKSIZE SPECIFIED IN JCL?
         BNE   *+4+4+6             YES - BYPASS FORWARD CHAINING
         L     R4,28(,R3)          GET DEFAULT BLOCKSIZE ADDRESS
         MVC   DCBBLKSI,0(R4)      MOVE TO DCB
         CLC   DCBLRECL,=X'0000'   LRECL SPECIFIED IN JCL?
         BNE   *+4+4+6             YES - BYPASS FORWARD CHAINING
         L     R4,24(,R3)          GET DEFAULT LRECL ADDRESS
         MVC   DCBLRECL,0(R4)      MOVE INTO DCB
DCBMODX  EQU   *
         SUBOUT RESTORE=(R1,R2,R3,R4),RETURN=(R14) RETURN TO OPEN
         DROP  R1                  DROP DCB ADDRESSABILITY
         SPACE 2
*******************************************************************
*        TEST IF A DD STATEMENT IS PRESENT BEFORE OPEN            *
*******************************************************************
         SPACE 1
TESTIOT  SUBIN ,                   TEST TASK INPUT/OUTPUT TABLE
         TESTIOT DDNAME=4(R2)      TEST IF DDNAME FOUND IN TIOT
         B     *+4(R15)            TEST CONDITION CODE
         OI    0(R2),DDPRES        TELL THAT DD STATEMENT SUPPLIED
         SUBOUT ,                  RETURN TO CALLER
         SPACE 3
*******************************************************************
*        READ JOB FILE CONTROL BLOCK ROUTINE                      *
*******************************************************************
         SPACE 1
RDJFCB   SUBIN SAVE=(R3)           READ JFCB
         L     R3,0(,R2)           GET DCB ADDRESS
         RDJFCB ((R3))             READ ITS JFCB
         LTR   R15,R15             TEST COMPLETION
         BNZ   RDJFCBER            ERROR EXIT IF NON-ZERO
         SUBOUT RESTORE=(R3)       ELSE RETURN TO CALLER
         SPACE 1
RDJFCBER SUBOUT RESTORE=(R3),RETURN=ERROR2 ERROR EXIT
         EJECT
*******************************************************************
*        OPEN ROUTINE                                             *
*******************************************************************
         SPACE 1
OPEN     SUBIN SAVE=(R3)           OPEN DATA SET
         TM    0(R2),DDINT+DDPRES  TEST IF DD INTERESTING AND
         BNO   OPENX               BRANCH IF NO    / PRESENT.
         TM    0(R2),DDOPEN        TEST IF ALREADY OPEN
         BO    OPENX               BRANCH IF YES
         L     R3,0(R2)            GET DCB ADDRESS
         ST    R2,SAVEFILE         SAVE LIST FOR EXIT PROCESSING
         CLC   12(8,R2),=C'INPUT   ' TEST FOR INPUT D/S
         BE    OPENZ               BRANCH IF INPUT D/S
         OPEN  ((R3),(OUTPUT))     OPEN OUTPUT DATA SET
         B     OPENY               GO SET SWITCH
OPENZ    OPEN  ((R3),(INPUT))      OPEN INPUT DATA SET
OPENY    OI    0(R2),DDOPEN        INDICATE DATA SET OPEN
OPENX    SUBOUT RESTORE=(R3)       RETURN TO CALLER
         SPACE 3
*******************************************************************
*        OPENJ ROUTINE                                            *
*******************************************************************
         SPACE 1
OPENJ    SUBIN SAVE=(R3)           OPEN DATA SET
         TM    0(R2),DDINT+DDPRES  TEST IF DD INTERESTING AND
         BNO   OPNJX               BRANCH IF NO    / PRESENT.
         TM    0(R2),DDOPEN        TEST IF ALREADY OPEN
         BO    OPNJX               BRANCH IF YES
         L     R3,0(R2)            GET DCB ADDRESS
         CLC   12(8,R2),=C'INPUT   ' TEST FOR INPUT D/S
         BE    OPNJZ               BRANCH IF INPUT D/S
         OPEN  ((R3),(OUTPUT)),TYPE=J OPEN OUTPUT DATA SET
         B     OPNJY               GO SET SWITCH
OPNJZ    OPEN  ((R3),(INPUT)),TYPE=J  OPEN INPUT DATA SET
OPNJY    OI    0(R2),DDOPEN        INDICATE DATA SET OPEN
OPNJX    SUBOUT RESTORE=(R3)       RETURN TO CALLER
         SPACE 3
*******************************************************************
*        CLOSE ROUTINE                                            *
*******************************************************************
         SPACE 1
CLOSE    SUBIN SAVE=(R3)           CLOSE DATA SET
         TM    0(R2),DDOPEN        TEST IF DATA SET OPEN
         BZ    CLOSEX              EXIT IF NOT
         L     R3,0(R2)            GET DCB ADDRESS
         CLOSE ((R3))              CLOSE DATA SET
         NI    0(R2),FF-DDOPEN     SET OFF 'OPEN' SWITCH
CLOSEX   SUBOUT RESTORE=(R3)       RETURN TO CALLER
         TITLE 'UT495 - DCB''S AND I/O CONTROL TABLES'
*******************************************************************
*        DCB'S TABLE                                              *
*******************************************************************
         SPACE 1
DCBTABLE DS    0F
PRINTSW  DC    X'00',AL3(SYSPRINT),CL8'SYSPRINT',CL8'OUTPUT'
         DC    AL4(CARDRECF,D100RECL,D100RECL)
SYSINSW  DC    X'00',AL3(SYSIN),CL8'SYSIN',CL8'INPUT'
         DC    AL4(CARDRECF,HASPRECL,HASPBLKS)
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT'
         DC    AL4(D100RECF,D100RECL,D100BLKS)
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT'
         DC    AL4(TAPERECF,TAPERECL,TAPEBLKS)
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
DCBNTRY  EQU   SYSINSW-PRINTSW     LENGTH OF ONE TABLE ELEMENT
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUN NUMBER OF DCB'S
SAVEFILE DS    F                   SAVE AREA FOR DCB ADDRESS
         SPACE 1
DDINT    EQU   16                  DD INTEREST
DDPRES   EQU   8                   DD PRESENT
DDRF     EQU   4                   PSEUDO CARD-IMAGES BEING CREATED
DDPP     EQU   2                   RECORDS ARE NOT TO BE FORMATTED
DDOPEN   EQU   1                   DATA SET IS OPEN
         SPACE 2
EXITLIST DC    X'05',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         DC    X'87',AL3(IHAJFCB)  ENTRY FOR READ JFCB
         SPACE 2
WTOIOE   DS    0F
         DC    AL2(WTOEND-*),H'0',CL109'******** - I/O ERROR -'
WTOEND   DS    0H
         EJECT
*******************************************************************
*        DATA CONTROL BLOCKS                                      *
*******************************************************************
         SPACE 1
SYSPRINT DCB   DDNAME=SYSPRINT,                                        C
               DSORG=PS,                                               C
               SYNAD=IOERROR,                                          C
               EXLST=EXITLIST,                                         C
               RECFM=FBM,                                              C
               MACRF=PL,                                               C
               LRECL=133,                                              C
               BLKSIZE=133
         SPACE 3
SYSIN    DCB   DDNAME=SYSIN,                                           C
               DSORG=PS,                                               C
               SYNAD=IOERROR,                                          C
               EXLST=EXITLIST,                                         C
               RECFM=FB,                                               C
               MACRF=GL,                                               C
               EODAD=EODIN
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          C
               DSORG=PS,                                               C
               SYNAD=IOERROR,                                          C
               EXLST=EXITLIST,                                         C
               MACRF=GL,                                               C
               EODAD=EODUT1
         SPACE 3
SYSUT2   DCB   DDNAME=SYSUT2,                                          C
               DSORG=PS,                                               C
               SYNAD=IOERROR,                                          C
               EXLST=EXITLIST,                                         C
               MACRF=PL
         SPACE 2
TAPETEST DCB   DDNAME=SYSUT1,                                          C
               DSORG=PS,                                               C
               MACRF=(E)
         EJECT
*******************************************************************
*        AUTOMATIC MODE EXCP CONTROL BLOCKS                       *
*******************************************************************
         SPACE 3
TAPECB   DC    F'0'                EVENT CONTROL BLOCK
TAPEIOB  DC    X'02000000'         FLAG AND SENSE BYTES
         DC    A(TAPECB)           ECB ADDRESS
         DC    3H'0'               IOBCSW
RESIDUAL DC    H'0'                RESIDUAL BYTE COUNT
         DC    A(TAPECCW)          CHANNEL PROGRAM ADDRESS
         DC    A(TAPETEST)         DCB ADDRESS
         DC    2F'0'
         SPACE 2
BIGBLOCK DC    F'32000'            A LARGE BLOCKSIZE
READ     EQU   X'02'               TAPE READ COMMAND
SLI      EQU   X'20'               SUPPRESS LENGTH INDICATION
SKIP     EQU   X'10'               SUPPRESS DATA TRANSFER
OK       EQU   X'7F'               GOOD COMPLETION
         SPACE 1
TAPECCW  CCW   READ,INITPA,SLI+SKIP,32000 CHANNEL PROGRAM
         SPACE 3
         TITLE 'UT495 - MISCELLANEOUS EQUATES,CONSTANTS AND WORK AREAS'
*******************************************************************
*        EQUATES                                                  *
*******************************************************************
         SPACE 1
FF       EQU   255                 FOR 'NI' INSTRUCTION
BLANK    EQU   X'40'               BLANK
ON       EQU   X'FF'               ON
OFF      EQU   X'00'               OFF
HIGHVAL  EQU   X'FF'               HIGH VALUE
LOWVAL   EQU   X'00'               LOW VALUE
SIGN     EQU   X'F0'               FOR FORCE SIGN TO 'F'
         SPACE 1
SPCE1AFT EQU   X'09'               SPACE 1 AFTER PRINTING
SPCE2AFT EQU   X'11'               SPACE 2 AFTER PRINTING
SPCE3AFT EQU   X'19'               SPACE 3 AFTER PRINTING
PAGESKIP EQU   X'89'               SKIP TO NEW PAGE
         EJECT
*******************************************************************
*        CONSTANTS                                                *
*******************************************************************
         SPACE 1
ZEROWORD DC    F'0'                BINARY ZERO FULLWORD FOR TESTS
         SPACE 1
COND4    DC    H'4'                COMPLETION CODE OF 4
COND8    DC    H'8'                COMPLETION CODE OF 8
COND12   DC    H'12'               COMPLETION CODE OF 12
COND16   DC    H'16'               COMPLETION CODE OF 16
         SPACE 1
ZERO     DC    PL1'0'              PACKED CONSTANT OF ZERO
ONE      DC    PL2'1'              PACKED CONSTANT OF ONE
         SPACE 1
ZEROES   DC    CL8'00000000'       NUMERIC BASE
         EJECT
MODLPARM DC    C'OPTYPE='          PARM KEYWORD
MODELOPL EQU   *-MODLPARM          LENGTH OF KEYWORD
MODELPO  DC    C'PO'               PARM OPERATION FIELD FOR DATA100 PRT
MODELGTH EQU   *-MODLPARM          LENGTH OF PARM FIELD
MODELPP  DC    C'PP'               PUNCH TAPE OPTION
MODELRF  DC    C'RF'               REFORMAT PARM OPTION
MODELRC  DC    C'RC'               RECONSTRUCT PARM OPTION
MODELPA  DC    CL2'PA'             AUTOMATIC MODE PARM OPTION
MODLPOL  EQU   L'MODELPO           LENGTH OF KEYWORD VALUE FIELD
         SPACE 2
D100BLKS DC    AL2(3990)           DEFAULT DATA100 BLOCKSIZE
D100RECL DC    AL2(133)            DEFAULT DATA100 RECORD LENGTH
D100RECF DC    AL1(DCBRECF+DCBRECBR+DCBRECCA) DEFAULT DATA100 FORMAT
         SPACE 1
CARDRECF DC    AL1(DCBRECF+DCBRECBR)    DEFAULT PUNCH FORMAT - FB
CARDBLKS DC    AL2(640)            DEFAULT PUNCH BLOCKSIZE
CARDRECL DC    AL2(80)             DEFAULT PUNCH RECORD LENGTH
         SPACE 1
HASPBLKS DC    AL2(80)             DEFAULT HASP INTRDR BLOCKSIZE
HASPRECL DC    AL2(80)             DEFAULT HASP INTRDR RECORD LENGTH
TAPERECF DC    AL1(DCBRECF+DCBRECBR) DEFAULT REFORMAT RECFM
HASPBFNO DC    AL1(1)              DEFAULT HASP INTRDR BUFNO.
         SPACE 1
TAPEBLKS DC    AL2(400)            DEFAULT REFORMAT BLOCKSIZE
TAPERECL DC    AL2(80)             DEFAULT REFORMAT RECORD LENGTH
         EJECT
*******************************************************************
*        WORK AREAS                                               *
*******************************************************************
         SPACE 1
DECIMAL  DS    D                   WA FOR DECIMAL OPERATIONS
COMPCODE DC    H'0'                CONDITION CODE
         SPACE 1
PARMLGTH DC    F'0'                LENGTH OF PARM OF EXEC CARD
PARMADDR DS    F                   ADDRESS OF PARM INFO'S
         SPACE 1
PAGECOUN DC    PL2'0'              COUNT OF PAGES
LINECOUN DC    PL2'0'              COUNT OF LINES
MAXLINE  DC    PL2'55'             MAXIMUM NUMBER OF LINES PER PAGE
         SPACE 1
CNTSYSIN DC    PL4'0'
CNTUT1   DC    PL4'0'
CNTUT2   DC    PL4'0'
CNTFILES DC    PL2'1'              COUNT OF FILES PROCESSED
         EJECT
PARMFLAG DC    X'00'               PARM OPTION FLAG
PARMPO   EQU   4                   OPTYPE=PO
PARMRF   EQU   8                   OPTYPE=RF
PARMRC   EQU   12                  OPTYPE=RC
PARMPP   EQU   16                  OPTYPE=PP
         EJECT
*******************************************************************
*        DATA 100 PRINT JOB CONTROL LANGUAGE SKELETON             *
*******************************************************************
         SPACE 1
PRTJOB   DS    0CL80               JOB CARD
         DC    CL2'//'
PRTJNAM  DC    CL8'JOBNAME'        JOB NAME
         DC    CL18' JOB (1304,9,,,52,'
PRTJFRM  DC    CL4'1611'           JOB FORMS
         DC    CL3'),'''
PRTPNAM  DC    CL6'PRINT'          PROGRAMMER NAME
         DC    CL39''',CLASS=N,MSGLEVEL=(0,0)'
         SPACE 1
PRTROUTE DS    0CL80               HASP ROUTE CARD
         DC    CL21'/*ROUTE  PRINT REMOTE'
PRTRRMT  DC    CL2'14'             EUROPEAN TERMINAL NUMBER
         DC    CL57' '
         SPACE 2
*        DC    CL80'/*ROUTE  PRINT REMOTE14' FOR TESTING
         SPACE 1
PRTEXEC  DS    0CL80               EXEC CARD
         DC    CL80'//PRINT  EXEC STLRERTE'
*        DC    CL80'//STEPLIB DD DSN=SYS2.TESTPGM,DISP=SHR' FOR TESTING
         SPACE 1
PRTSYST1 DS    0CL80               INPUT DD CARD
         DC    CL80'//SYSUT1  DD *'
         EJECT
*******************************************************************
*        REFORMAT CONTROL RECORD AND DATA100 INITIAL VALUES       *
*******************************************************************
         SPACE 1
CONTRLLN DC    AL1(79)             LENGTH OF CONTROL DATA
CONTROL  DS    0CL79               CONTROL RECORD AREA
CONTDSN  DS    0CL44               DATASET NAME
CONTJNAM DC    CL8' '              JOB NAME
         DC    CL4' '              PADDING
CONTSYSP DC    XL10'A2A8A297998995A3' DATA100 CODE DSN-L/C 'SYSPRINT'
         DC    CL22' '             PADDING
CONTCRDT DC    PL3'0'              CREATION DATE
CONTXPDT DC    PL3'0'              EXPIRY DATE
CONTRECF DC    AL1(DCBRECF+DCBRECBR+DCBRECCA) RECORD FORMAT - FBA
CONTBLKS DC    AL2(3990)           BLOCKSIZE
CONTRECL DC    AL2(133)            RECORD LENGTH
CONTRLRC DC    XL1'6F'             IDENTIFIER BYTE
CONTRLID EQU   X'6F'               CONTROL RECORD IDENTIFIER - ?
         DC    CL23' '             PADDING
         SPACE 2
PRTLNGTH EQU   *-PRTJOB            LENGTH OF JOBSTREAM
         EJECT
*******************************************************************
*        FORMAT OF ST. LOUIS JES2 PAGE SEPARATOR LINE             *
*******************************************************************
         SPACE 1
STLSEPAR DS    0CL133              PAGE SEPARATOR
STLASA   DS    CL1                 ASA CONTROL CHARACTER
         DC    CL4'****'           SEPARATOR CHARACTERS
         DC    CL1' '              JOB CLASS
         DC    CL19' '             ASSORTED RUBBISH
STLSJNAM DC    CL8' '              JOB NAME
         DC    CL2' '
STLSPNAM DS    0CL6                PROGRAMMER NAME
         DC    CL2'SF'             NAME=SFXXXX FOR SPECIAL FORMS
STLSFRM  DC    CL4'1611'           FORMS NUMBER REQUIRED
         DC    CL16' '
STLSEPID DC    CL5'BIN'            FIELD TO TEST FOR SEPARATOR
STLSBIN  DC    CL2'14'             BIN NUMBER
         DC    CL69' '             MORE RUBBISH
         SPACE 3
STLSEPCH DC    CL5'BIN'            ST.LOUIS SEPARATOR UNIQUE CHARS.
         DS    CL3                 FILLER
PRTRRMTD DC    CL2'14'             DEFAULT EUROPEAN LOCATION
PRTJFRMD DC    CL4',,,,'           DEFAULT FORMS -NONE
STLSFRMD DC    CL2'SF'             FROMS IDENTIFIER CODE
CONTSYSD DC    XL10'A2A8A297998995A3' DATA100 CODE DSN-L/C 'SYSPRINT'
SYSINDLM DC    CL10'%%%DATA%%%'    SYSIN DELIMITER
EOFCARD  DC    CL80'/*EOF'         HASP INTERNAL READER DELIMITER
         EJECT
*******************************************************************
*        DATA 100 PUNCH JOB CONTROL LANGUAGE SKELETON             *
*******************************************************************
         SPACE 1
PUNJOB   DS    0CL80               JOB CARD
         DC    CL2'//'
PUNJNAM  DS    0CL8'JOBNAME'       JOB NAME
PUNJTYP  DS    CL4                 CARD OR DATA
PUNJNO1  DS    CL1                 1ST DIGIT OF JOB NUMBER
PUNJNO2  DS    CL1                 2ND
PUNJNO3  DS    CL1                 3RD
PUNJNO4  DS    CL1                 4TH
         DC    CL17' JOB (1304,9,,,52'
         DC    CL3'),'''
PUNPNAM  DC    CL6'PUNCH'          PROGRAMMER NAME
         DC    CL44''',CLASS=N,MSGLEVEL=(2,1)'
         SPACE 1
PUNROUTE DS    0CL80               HASP ROUTE CARD
         DC    CL21'/*ROUTE  PUNCH REMOTE'
PUNRRMT  DC    CL2'14'             EUROPEAN TERMINAL NUMBER
         DC    CL57' '
PUNLIST  DS    0CL80               ROUTE PRINT CARD
         DC    CL21'/*ROUTE  PRINT REMOTE'
PUNLISTR DC    CL2'14'             EUROPEAN TERMINAL NUMBER
         DC    CL57' '
         SPACE 2
*        DC    CL80'/*ROUTE  PRINT REMOTE14' FOR TESTING
         SPACE 1
PUNEXEC  DS    0CL80               EXEC CARD
         DC    CL15'//PUNCH  EXEC'
PUNJPROC DS    CL8                 PROCEDURE NAME
         DC    CL57' '
         SPACE 1
PUNSYST1 DS    0CL80               INPUT DD CARD
         DC    CL80'//DATA.SYSUT1  DD *' INPUT DATA FOLLOWS
         SPACE 2
PUNSLEN  EQU   *-PUNJOB            LENGTH OF SHORT JOBSTREAM
         EJECT
*******************************************************************
*        PUNCH CONTROL RECORD AND DATA100 INITIAL VALUES          *
*******************************************************************
         SPACE 1
CONPRLLN DC    AL1(79)             LENGTH OF CONTROL DATA
CONPROL  DS    0CL79               CONTROL RECORD AREA
CONPDSN  DS    0CL44               DATASET NAME
CONPJNAM DC    CL8' '              JOB NAME
         DC    CL4' '              PADDING
CONPSYSP DC    XL10'A2A8A297A4958388' DATA100 CODE DSN-L/C 'SYSPUNCH'
         DC    CL22' '             PADDING
CONPCRDT DC    PL3'0'              CREATION DATE
CONPXPDT DC    PL3'0'              EXPIRY DATE
CONPRECF DC    AL1(DCBRECF+DCBRECBR) RECORD FORMAT - FB
CONPBLKS DC    AL2(640)            BLOCKSIZE
CONPRECL DC    AL2(80)             RECORD LENGTH
CONPRLRC DC    XL1'6F'             IDENTIFIER BYTE
CONPRLID EQU   X'6F'               CONTROL RECORD IDENTIFIER - ?
         DC    CL23' '             PADDING
         SPACE 2
PUNLNGTH EQU   *-PUNJOB            LENGTH OF JOBSTREAM
         EJECT
*******************************************************************
*        FORMAT OF ST. LOUIS HASP PUNCH SEPARATOR CARD            *
*******************************************************************
         SPACE 1
PCDSEPAR DS    0CL80               SEPARATOR CARD
         SPACE 1
PCDSEPID DS    CL1                 IDENTIFIER (11-12 OVERPUNCH)
PCDBIN1  DS    CL8                 1ST CHARACTER OF BIN NUMBER
         DS    CL2
PCDBIN2  DS    CL8                 2ND CHARACTER OF BIN NUMBER
         DS    CL2
PCDBIN3  DS    CL8                 3RD CHARACTER OF BIN NUMBER
         DS    CL2
PCDBIN4  DS    CL8                 4TH CHARACTER OF BIN NUMBER
         DS    CL2
PCDJOB1  DS    CL8                 1ST CHARACTER OF JOB NUMBER
         DS    CL2
PCDJOB2  DS    CL8                 2ND CHARACTER OF JOB NUMBER
         DS    CL2
PCDJOB3  DS    CL8                 3RD CHARACTER OF JOB NUMBER
         DS    CL2
PCDJOB4  DS    CL8                 4TH CHARACTER OF JOB NUMBER
         DS    CL1
         EJECT
*******************************************************************
*        FIRST PUNCHED CARD DATA AREA                             *
*******************************************************************
         SPACE 2
PUNDATA  DS    CL80                DATA AREA
LASTCOLM EQU   PUNDATA+71          LAST COLUMN FOR JCL
         SPACE 1
PUNDATAL EQU   *-PUNDATA           LENGTH OF DATA CARD
         SPACE 3
PCDSEPCH DC    XL1'6A'             SEPARATOR CARD IDENTIFIER
DATALEND EQU   79                  DEFAULT LENGTH OF UT495 DATA
PUNRRMTD DC    CL2'14'             DEFAULT PUNCH ROUTING
PUNJCRD  DC    CL4'CARD'           DEFAULT JOB TYPE
PUNJDATA DC    CL4'DATA'           JOB TYPE FOR UT495 DATA
PUNSLASH DC    CL2'//'             JCL IDENTIFIER
JOBCARD  DC    CL5' JOB '          JOB CARD IDENTIFIER
PUNPROC1 DC    CL8'STLPUNCH'       DEFAULT PROCEDURE FOR PUNCHED CARD
PUNPROC2 DC    CL8'STLPINCH'       PROCEDURE FOR UT495 DATA
BLANKS   DC    CL80' '             BLANK CARD
         EJECT
*******************************************************************
*        SYSPRINT MESSAGE SKELETONS                               *
*******************************************************************
         SPACE 1
LINEWIDE EQU   133                 LENGTH OF PRINT LINE
HEADER1  DS    0CL133              PAGE HEADING
         DC    XL1'19'             SPACE 3
         DC    CL42' '
         DC    CL90' UT495 - MONSANTO DATA TRANSMISSION UTILITY'
         SPACE 1
HEADER2  DS    0CL133              PARM REQUEST LINE
         DC    XL1'09'             SPACE 1
         DC    CL10' '
         DC    CL34'FOLLOWING REQUEST WAS SPECIFIED - '
H2OFF1   EQU   *-HEADER2           MESSAGE OFFSET
         DC    CL18' '
         DC    CL70' '             PADDING
         SPACE 1
HEADER3  DS    0CL133              OPERATION TO BE PERFORMED
         DC    XL1'11'             SPACE 2
         DC    CL10' '
H3OFF1   EQU   *-HEADER3           OPERATION OFFSET
         DC    CL11' '             OPERATION
         DC    CL111' OPERATION WILL BE PERFORMED'
         SPACE 1
H3RF     DC    CL11'   REFORMAT'   OPERATION
H3RC     DC    CL11'RECONSTRUCT'    OPTIONS
H3PO     DC    CL11'   PRINTOUT'     ALLOWED
H3PP     DC    CL11'   PUNCHOUT'
H3OPL    EQU   L'H3PO              OPTION LENGTH
         SPACE 1
HEADER4  DS    0CL133              OPTYPE=PO HEADER LINE 1
         DC    X'09'               SPACE 1
         DC    CL10' '
         DC    CL80'FILE    JOB      PROGRAMMER   REMOTE   FORMS'
         DC    CL42'     RECORD COUNTS'
         SPACE 1
HEADER5  DS    0CL133              OPTYPE=PO HEADER LINE 2
         DC    X'11'               SPACE 2
         DC    CL10' '
         DC    CL80' NO     NAME        NAME      ROUTE     NO.'
         DC    CL42'SYSUT1  SYSUT2   SYSIN'
         SPACE 1
HEADER6  DS    0CL133              DATASET DETAILS 1
         DC    X'09'               SPACE 1
         DC    CL25' '
         DC    CL35'DATA SET NAME'
         DC    CL12'RECORD'
         DC    CL18' BLOCK'
         DC    CL42'     RECORD COUNTS'
         SPACE 1
HEADER7  DS    0CL133              DATASET DETAILS 2
         DC    X'11'               SPACE 2
         DC    CL10' '
         DC    44CL1'.'
         DC    CL6' '
         DC    CL12'LENGTH'
         DC    CL18' SIZE'
         DC    CL42'SYSUT1  SYSUT2   SYSIN'
         SPACE 1
POLINE   DS    0CL133              OPTYPE=PO DETAIL LINE FORMAT
         DC    X'09'               SPACE 1
         DC    CL9' '
POFILE   DC    XL4'40202120'       FILE NO. EDIT MASK
         DC    CL3' '
POJNAME  DC    CL8' '              JOB NAME
         DC    CL5' '
POPNAME  DC    CL6' '              PROGRAMMER NAME
         DC    CL7' '
POROUTE  DC    CL2' '              REMOTE NUMBER
         DC    CL5' '
POFORMS  DC    CL4'STD.'           FORMS - DEFAULT STANDARD
         DC    CL35' '
UT1OFF   EQU   *-POLINE            SYSUT1 COUNT OFFSET - COMMON
UT1MASK  DC    XL8'4020202020202120' SYSUT1 COUNT EDIT MASK
UT1MLNTH EQU   *-UT1MASK           LENGTH OF MASK
UT2OFF   EQU   *-POLINE            SYSUT2 COUNT OFFSET - COMMON
UT2MASK  DC    XL8'4020202020202120' SYSUT2 COUNT EDIT MASK
UT2MLNTH EQU   *-UT2MASK           LENGTH OF MASK
SINOFF   EQU   *-POLINE            SYSIN COUNT OFFSET - COMMON
SINMASK  DC    XL8'4020202020202120' SYSIN COUNT EDIT MASK
SINMLNTH EQU   *-SINMASK           LENGTH OF MASK
         DC    CL20' '
         SPACE 1
RFLINE   DS    0CL133              REFORMAT/RECONSTRUCT DETAIL SKELETON
         DC    X'09'               SPACE 1
         DC    CL10' '
RFDSN    DC    CL44' '             DATA SET NAME
         DC    CL4' '
RFRECOFF EQU   *-RFLINE            LRECL OFFSET
RFRECMSK DC    XL8'4020202020202120' LRECL EDIT MASK
RFRECMLN EQU   *-RFRECMSK          LENGTH OF MASK
         DC    CL4' '
RFBLKOFF EQU   *-RFLINE            BLKSIZE OFFSET
RFBLKMSK DC    XL8'4020202020202120' BLKSIZE EDIT MASK
RFBLKMLN EQU   *-RFBLKMSK          LENGTH OF MASK
         DC    CL10' '             ENSURE COUNT OFFSETS SAME AS POLINE
         DC    XL8'4020202020202120'    SYSUT1
         DC    XL8'4020202020202120'    SYSUT2
         DC    XL8'4020202020202120'    SYSIN
         DC    CL20' '
         EJECT
*******************************************************************
*        ERROR MESSAGES                                           *
*******************************************************************
         SPACE 1
ERR0LINE DS    0CL133              INVALID PARM SUPPLIED
         DC    X'09'               SPACE 1
         DC    CL132'  *** ERROR ***  -  INVALID PARM REQUEST'
         SPACE 1
ERR1LINE DS    0CL133              MISSING DD CARD MESSAGE
         DC    X'09'               SPACE 1
         DC    CL132'  *** ERROR ***  -  SYSUT1 OR SYSUT2 NOT DEFINED'
         SPACE 1
ERR2LINE DS    0CL133              RDJFCB FAILED
         DC    X'09'               SPACE 1
         DC    CL132'  *** ERROR ***  -  SYSUT1 NOT LOCATED'
         SPACE 1
ERR3LINE DS    0CL133              INVALID INPUT MESSAGE
         DC    X'09'               SPACE 1
         DC    CL132'  *** ERROR ***  -  INPUT FORMAT INCORRECT'
         EJECT
*******************************************************************
*        LITERAL POOL                                             *
*******************************************************************
         SPACE 1
         LTORG
         TITLE 'UT495 - JFCB AREA'
*******************************************************************
*        JOB FILE CONTROL BLOCK STORAGE                           *
*******************************************************************
         SPACE 1
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN
         SPACE 2
         END   UT495
