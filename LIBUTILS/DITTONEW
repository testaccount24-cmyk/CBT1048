//INS#LIB  JOB ('A=SX82'),'PAS3 BRAMMER',                               LI000100
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      LI000200
//*   THIS JOB ALLOCATES A LIBRARY ON VOL=REF=SYS1.LINKLIB. IT WILL BE  LI000300
//*        USED TO CONTAIN NCAL LOAD MODULES.                           LI000400
//*    A COPY LIBRARY (SYS1.DITTOMAC) WILL BE ALLOCATED ON VOL=REF=     LI000500
//*      SYS1.DITTOLIB BY JOB 'DITTOMAC' LATER IN THE INSTALL STREAM    LI000600
//SCRSTEP  EXEC  PGM=IEHPROGM                                           LI000700
//DD1 DD UNIT=SYSDA,DISP=SHR,                                           LI000800
//       VOL=REF=SYS1.LINKLIB                                           LI000900
//SYSPRINT  DD  SYSOUT=A                                                LI001000
//SYSIN  DD  *                                                          LI001100
  SCRATCH DSNAME=SYS1.DITTOLIB,VOL=3330=VS1RES,PURGE                    LI001200
  SCRATCH DSNAME=SYS1.DITTOLIB,VOL=3330=VSLIBS,PURGE                    LI001210
  SCRATCH DSNAME=SYS1.DITTOLIB,VOL=2314=STEVEB,PURGE                    LI001300
 UNCATLG DSNAME=SYS1.DITTOLIB                                           LI001400
/*                                                                      LI001500
// EXEC PGM=IEFBR14                                                     LI001600
//LKED.SYSLMOD DD DSN=SYS1.DITTOLIB,UNIT=SYSDA,                         LI001700
//             DISP=(NEW,CATLG),SPACE=(CYL,(2,1,10)),                   LI001800
//       VOL=REF=SYS1.LINKLIB                                           LI001900
//                                                                      LI002000
//INS#PROC JOB ('A=SX82'),'PAS3 BRAMMER',                               IN002100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      IN002200
//     EXEC PGM=IEBUPDTE,PARM=NEW                                       IN002300
//SYSUT2 DD DSN=SYS1.PROCLIB,DISP=SHR                                   IN002400
//SYSPRINT DD SYSOUT=A                                                  IN002500
//SYSIN DD DATA,DCB=BLKSIZE=80,DLM=AA                                   IN002600
./ ADD NAME=DITTODSR,LIST=ALL                                           IN002700
//EXECSTEP EXEC PGM=IEFBR14                                             IN002800
//*        THIS PROC IS REFERENCED BY THE DITTO INSTALLATION STREAM     IN002900
//*        ITS USE IS TO CONTROL (FROM ONE SOURCE) THE DATA SET NAMES   IN003000
//*        REFERRED TO AND STORED INTO BY THE INSTALLATION JOBSTREAM    IN003100
//DITTOMAC DD DSN=SYS1.DITTOMAC,DISP=SHR                                IN003200
//*           CONCATENATE TO MACLIB FOR COPY FACILITY                   IN003300
//LOADLIB  DD DSN=SYS1.DITTOLIB,DISP=SHR                                IN003400
//*           LOAD MODULE LIBRARY                                       IN003500
//*           ALSO STORE OBJECT CODE ( NCAL ) FOR LATER RE-LINKEDIT     IN003600
//LINKLIB  DD DSN=SYS1.LINKLIB,DISP=SHR                                 IN003700
//*           WILL BE USED FOR APF MODULES THAT MUST BE IN AN           IN003800
//*           AUTHORIZED LIBRARY                                        IN003900
//PROCLIB  DD DSN=SYS1.PROCLIB,DISP=SHR                                 IN004000
//*           PROCLIB: USED BY JOB 'ADDPROC'                            IN004100
./ ADD NAME=DITUPDTE,LIST=ALL                                           IN004200
//IEFPROC  PROC TUNIT=2400,ISER=ARDTAP,OSER=CDA001,                     IN004300
//         IDSN='OSDITTO.N5798ARD.V02M00',                              IN004400
//         ODSN='OSDITTO.N5798CDA.V01M00'                               IN004500
//STEP1 EXEC PGM=IEBUPDTE,PARM=MOD                                      IN004600
//SYSPRINT DD SYSOUT=A                                                  IN004700
//SYSUT1 DD DSN=&IDSN,UNIT=&TUNIT,                                      IN004800
//       DCB=(BLKSIZE=1600,RECFM=FB,LRECL=80),                          IN004900
//       DISP=(SHR,KEEP),                                               IN005000
//       VOL=SER=&ISER,                                                 IN005100
//       LABEL=(,BLP)                                                   IN005200
//SYSUT2 DD DSN=&ODSN,UNIT=&TUNIT,                                      IN005300
//       DCB=(BLKSIZE=1600,RECFM=FB,LRECL=80),                          IN005400
//       DISP=(NEW,PASS),                                               IN005500
//       VOL=SER=&OSER,                                                 IN005600
//       LABEL=(,BLP)                                                   IN005700
./ ENDUP                                                                IN005800
AA                                                                      IN005900
//                                                                      IN006000
//ADDPROC  JOB ('A=SX82'),'PAS3 BRAMMER',                               AD006100
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      AD006200
//PROCSTEP EXEC DITTODSR                                                AD006300
//STEP1 EXEC PGM=IEBUPDTE,PARM=NEW                                      AD006400
//SYSUT2 DD DSN=*.PROCSTEP.EXECSTEP.PROCLIB,DISP=SHR                    AD006500
//SYSPRINT DD SYSOUT=A                                                  AD006600
//SYSIN DD DATA,DCB=BLKSIZE=80,DLM=AA                                   AD006700
./ ADD NAME=DITTOPDS,LIST=ALL                                           AD006800
//IEFPROC  PROC IN=SYSDA,SER=,DSNM=,CLS=B,PUN=,FUN=                     AD006900
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD007000
//DITIN    DD UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&CTLCARD                 AD007100
//DITPRINT DD SYSOUT=A                                                  AD007200
//SYSUT1   DD  DISP=SHR,UNIT=&IN,VOL=SER=&SER,DSN=&DSNM                 AD007300
//SYSUT2   DD SYSOUT=A                 USE FOR PRINT                    AD007400
//SYSPUNCH DD SYSOUT=&CLS,                       USE FOR PUNCH          AD007500
//            DCB=FUNC=&FUN,                     USE FOR 3525 INTERPRET AD007600
//            UNIT=&PUN                          USE FOR ONLINE         AD007700
//*           (REMOVE DCB=FUNC IF IT CAUSES JCL ERROR)                  AD007800
//SYSPRINT DD SYSOUT=A                                                  AD007900
//SYSUDUMP DD SYSOUT=A                                                  AD008000
./ ADD NAME=DITTODUM,LIST=ALL                                           AD008100
//IEFPROC  PROC DUNIT=SYSDA,DSER=,TDISP=NEW,TUNIT=TAPE,                 AD008200
//         TLAB=BLP,TDEN=,TDSN=BACKUP,TSER=DUMTAP                       AD008300
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD008400
//DITPRINT DD SYSOUT=A                                                  AD008500
//DITIN    DD UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&CTLCARD                 AD008600
//DISK     DD DISP=OLD,UNIT=&DUNIT,VOL=SER=&DSER                        AD008700
//TAPE     DD DISP=(&TDISP,KEEP),UNIT=&TUNIT,VOL=SER=&TSER,             AD008800
//            LABEL=(1,&TLAB),DCB=DEN=&TDEN,DSN=&TDSN                   AD008900
//SYSPRINT DD SYSOUT=A                                                  AD009000
//SYSUDUMP DD SYSOUT=A                                                  AD009100
./ ADD NAME=DITTORES,LIST=ALL                                           AD009200
//IEFPROC  PROC DUNIT=SYSDA,DSER=,TDISP=SHR,TUNIT=TAPE,                 AD009300
//         TLAB=BLP,TDEN=,TDSN=BACKUP,TSER=RESTAP                       AD009400
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD009500
//DITPRINT DD SYSOUT=A                                                  AD009600
//DITIN    DD UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&CTLCARD                 AD009700
//DISK     DD DISP=OLD,UNIT=&DUNIT,VOL=SER=&DSER                        AD009800
//TAPE     DD DISP=(&TDISP,KEEP),UNIT=&TUNIT,VOL=SER=&TSER,             AD009900
//            LABEL=(1,&TLAB),DCB=DEN=&TDEN,DSN=&TDSN                   AD010000
//SYSPRINT DD SYSOUT=A                                                  AD010100
//SYSUDUMP DD SYSOUT=A                                                  AD010200
./ ADD NAME=DITTOUTL,LIST=ALL                                           AD010300
//IEFPROC  PROC IN=SYSDA,SER=                                           AD010400
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD010500
//DITTODD1 DD  DISP=OLD,UNIT=&IN,VOL=SER=&SER                           AD010600
//DITPRINT DD SYSOUT=A                                                  AD010700
//DITIN    DD UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&CTLCARD                 AD010800
//SYSPRINT DD SYSOUT=A                                                  AD010900
//SYSUDUMP DD SYSOUT=A                                                  AD011000
./ ADD NAME=DITTOCQT,LIST=ALL                                           AD011100
//IEFPROC  PROC ODSN='CQT.OUT',OUT=TAPE,ONEW=NEW,OKEEP=KEEP,OSER=,      AD011200
//         OFILENO=1,OLABEL=SL,                                         AD011300
//         ORECFM=,OLRECL=,OBLKSIZ=,                                    AD011400
//         RDR=00C                                                      AD011500
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD011600
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD011700
//            LABEL=(&OFILENO,&OLABEL),                                 AD011800
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD011900
//SYSPRINT DD SYSOUT=A                                                  AD012000
//SYSUDUMP DD SYSOUT=A                                                  AD012100
//SYSIN DD UNIT=&RDR,DCB=(BLKSIZE=80,RECFM=F)                           AD012200
./ ADD NAME=DITTOCQD,LIST=ALL                                           AD012300
//IEFPROC  PROC ODSN='CQD.OUT',OUT=SYSDA,ONEW=NEW,OKEEP=KEEP,OSER=,     AD012400
//         OSPACE=TRK,OPRI=1,OSEC=1,                                    AD012500
//         ORECFM=,OLRECL=,OBLKSIZ=,                                    AD012600
//         RDR=00C                                                      AD012700
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD012800
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD012900
//            SPACE=(&OSPACE,(&OPRI,&OSEC)),                            AD013000
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD013100
//SYSPRINT DD SYSOUT=A                                                  AD013200
//SYSUDUMP DD SYSOUT=A                                                  AD013300
//SYSIN DD UNIT=&RDR,DCB=(BLKSIZE=80,RECFM=F)                           AD013400
./ ADD NAME=DITTOQC,LIST=ALL                                            AD013500
//IEFPROC  PROC IDSN=,IN=SYSDA,ISHR=SHR,IKEEP=KEEP,ISER=,               AD013600
//         CLS=B,PUN=,                                                  AD013700
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=                 AD013800
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD013900
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD014000
//            LABEL=(&IFILENO,&ILABEL),                                 AD014100
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD014200
//SYSPUNCH DD SYSOUT=&CLS,                       USE FOR PUNCH          AD014300
//            UNIT=&PUN                          USE FOR ONLINE         AD014400
//SYSPRINT DD SYSOUT=A                                                  AD014500
//SYSUDUMP DD SYSOUT=A                                                  AD014600
./ ADD NAME=DITTOQCI,LIST=ALL                                           AD014700
//IEFPROC  PROC IDSN=,IN=SYSDA,ISHR=SHR,IKEEP=KEEP,ISER=,               AD014800
//         CLS=,FUN=I,PUN=00D,                                          AD014900
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=                 AD015000
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD015100
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD015200
//            LABEL=(&IFILENO,&ILABEL),                                 AD015300
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD015400
//SYSPUNCH DD SYSOUT=&CLS,                       USE FOR PUNCH          AD015500
//            DCB=FUNC=&FUN,                     USE FOR 3525 INTERPRET AD015600
//            UNIT=&PUN                          USE FOR ONLINE         AD015700
//*           (REMOVE DCB=FUNC IF IT CAUSES JCL ERROR)                  AD015800
//SYSPRINT DD SYSOUT=A                                                  AD015900
//SYSUDUMP DD SYSOUT=A                                                  AD016000
./ ADD NAME=DITTOQTT,LIST=ALL                                           AD016100
//IEFPROC  PROC IDSN=,IN=TAPE,ISHR=SHR,IKEEP=KEEP,ISER=,                AD016200
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=,                AD016300
//         ODSN='QTT.OUT',OUT=TAPE,ONEW=NEW,OKEEP=KEEP,OSER=,           AD016400
//         OFILENO=1,OLABEL=SL,                                         AD016500
//         ORECFM=,OLRECL=,OBLKSIZ=                                     AD016600
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD016700
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD016800
//            LABEL=(&IFILENO,&ILABEL),                                 AD016900
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD017000
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD017100
//            LABEL=(&OFILENO,&OLABEL),                                 AD017200
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD017300
//SYSPRINT DD SYSOUT=A                                                  AD017400
//SYSUDUMP DD SYSOUT=A                                                  AD017500
./ ADD NAME=DITTOQTD,LIST=ALL                                           AD017600
//IEFPROC  PROC IDSN=,IN=TAPE,ISHR=SHR,IKEEP=KEEP,ISER=,                AD017700
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=,                AD017800
//         ODSN='QTD.OUT',OUT=SYSDA,ONEW=NEW,OKEEP=KEEP,OSER=,          AD017900
//         OSPACE=TRK,OPRI=1,OSEC=1,                                    AD018000
//         ORECFM=,OLRECL=,OBLKSIZ=                                     AD018100
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD018200
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD018300
//            LABEL=(&IFILENO,&ILABEL),                                 AD018400
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD018500
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD018600
//            SPACE=(&OSPACE,(&OPRI,&OSEC)),                            AD018700
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD018800
//SYSPRINT DD SYSOUT=A                                                  AD018900
//SYSUDUMP DD SYSOUT=A                                                  AD019000
./ ADD NAME=DITTOQDD,LIST=ALL                                           AD019100
//IEFPROC  PROC IDSN=,IN=SYSDA,ISHR=SHR,IKEEP=KEEP,ISER=,               AD019200
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=,                AD019300
//         ODSN='QDD.OUT',OUT=SYSDA,ONEW=NEW,OKEEP=KEEP,OSER=,          AD019400
//         OSPACE=TRK,OPRI=1,OSEC=1,                                    AD019500
//         ORECFM=,OLRECL=,OBLKSIZ=                                     AD019600
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD019700
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD019800
//            LABEL=(&IFILENO,&ILABEL),                                 AD019900
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD020000
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD020100
//            SPACE=(&OSPACE,(&OPRI,&OSEC)),                            AD020200
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD020300
//SYSPRINT DD SYSOUT=A                                                  AD020400
//SYSUDUMP DD SYSOUT=A                                                  AD020500
./ ADD NAME=DITTOQDT,LIST=ALL                                           AD020600
//IEFPROC  PROC IDSN=,IN=SYSDA,ISHR=SHR,IKEEP=KEEP,ISER=,               AD020700
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=,                AD020800
//         ODSN='QDT.OUT',OUT=TAPE,ONEW=NEW,OKEEP=KEEP,OSER=,           AD020900
//         OFILENO=1,OLABEL=SL,                                         AD021000
//         ORECFM=,OLRECL=,OBLKSIZ=                                     AD021100
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD021200
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD021300
//            LABEL=(&IFILENO,&ILABEL),                                 AD021400
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD021500
//QSAMOUT  DD DSN=&ODSN,UNIT=&OUT,DISP=(&ONEW,&OKEEP),VOL=SER=&OSER,    AD021600
//            LABEL=(&OFILENO,&OLABEL),                                 AD021700
//            DCB=(RECFM=&ORECFM,LRECL=&OLRECL,BLKSIZE=&OBLKSIZ)        AD021800
//SYSPRINT DD SYSOUT=A                                                  AD021900
//SYSUDUMP DD SYSOUT=A                                                  AD022000
./ ADD NAME=DITTOQP,LIST=ALL                                            AD022100
//IEFPROC  PROC IDSN=,IN=SYSDA,ISHR=SHR,IKEEP=KEEP,ISER=,               AD022200
//         CLS=A,PRT=,                                                  AD022300
//         IFILENO=1,ILABEL=SL,IRECFM=,ILRECL=,IBLKSIZ=                 AD022400
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD022500
//QSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=(&ISHR,&IKEEP),VOL=SER=&ISER,     AD022600
//            LABEL=(&IFILENO,&ILABEL),                                 AD022700
//            DCB=(RECFM=&IRECFM,LRECL=&ILRECL,BLKSIZE=&IBLKSIZ)        AD022800
//SYSPUNCH DD SYSOUT=B                                                  AD022900
//SYSPRINT DD SYSOUT=&CLS,UNIT=&PRT                                     AD023000
//SYSUDUMP DD SYSOUT=A                                                  AD023100
./ ADD NAME=DITTOVP,LIST=ALL                                            AD023200
//IEFPROC  PROC IDSN=,IN=,ISHR=SHR,ISER=,IAMP=,CLS=A,PRT=               AD023300
//STEP1   EXEC  PGM=OSDITTO,REGION=100K                                 AD023400
//VSAMIN   DD DSN=&IDSN,UNIT=&IN,DISP=&ISHR,VOL=SER=&ISER,AMP=&IAMP     AD023500
//SYSPRINT DD SYSOUT=&CLS,UNIT=&PRT                                     AD023600
//SYSUDUMP DD SYSOUT=A                                                  AD023700
./ ADD NAME=DITTOLOG,LIST=ALL                                           AD023800
//IEFPROC  PROC OUT=TAPE,ODEN=3,OTRTCH=                                 AD023900
//STEP1 EXEC PGM=DITTOLOG                                               AD024000
//*       DITTOLOG RUNS KEY=0 WHEN AUTHORIZED TO DO SO BY:              AD024100
//*                1. PLACING MODULE NAME DITTOLOG IN THE IEELINKT      AD024200
//*                   LIST FOR KEY=0 MODULES                            AD024300
//*                2. IS STARTED FROM THE CONSOLE                       AD024400
//*       KEY=0 IS REQUIRED TO ALLOW WRITING A TAPEMARK ON A LOG TAPE   AD024500
//*            WITHOUT REWINDING THE TAPE. THIS IS USEFUL FOR PROVIDING AD024600
//*            AN END OF FILE ON LOGTAPE REELS THAT ARE NOT CLOSED      AD024700
//*            DUE TO A SYSTEM FAILURE.                                 AD024800
//*       THE OPERATIONAL PROCEDURE FOLLOWS:                            AD024900
//*                1. AFTER A FAILURE AND BEFORE RE-IPL, TAKE THE       AD025000
//*                   LOGTAPE DRIVE OUT OF READY STATE (DO NOT REWIND)  AD025100
//*                   THIS CAN BE DONE BY DEPRESSING RESET.             AD025200
//*                2. RE-IPL THE SYSTEM                                 AD025300
//*                3. S DITTOLOG,OUT=280 (WHERE 280 IS THE LOGTAPE)     AD025400
//*                     ODEN DEFAULTS TO 3 (1600 BPI)                   AD025500
//*                          TO OVERRIDE USE ODEN=4 (E.G. 6250 BPI)     AD025600
//*                          AN ODEN VALUE IS REQUIRED (NULL = ERROR)   AD025610
//*                     OTRTCH DEFAULTS TO NULL (NO 7 TRK)              AD025700
//*                            TO OVERRIDE USE OTRTCH=ET (EVEN & TRAN.) AD025800
//*                4. AFTER DEVICE ALLOCATION AND A MOUNT MESSAGE HAVE  AD025900
//*                   OCCURED, READY THE LOGTAPE DRIVE. THIS CAN BE     AD026000
//*                   DONE BY DEPRESSING START.                         AD026100
//*                5. A SINGLE TAPEMARK WILL BE WRITTEN ON THE LOGTAPE. AD026200
//*                6. IF A WRITE ERROR OCCURS THE OPERATOR WILL BE      AD026300
//*                   NOTIFIED AND GIVEN THE OPTION TO RETRY OR ABORT.  AD026400
//LOGTAPE DD UNIT=&OUT,VOL=SER=LOGTAP,DSN=LOGTAPE,DISP=SHR,             AD026500
//           LABEL=(,BLP),DCB=(DEN=&ODEN,TRTCH=&OTRTCH)                 AD026600
//SYSUDUMP DD SYSOUT=A                                                  AD026700
./ ENDUP                                                                AD026800
AA                                                                      AD026900
//                                                                      AD027000
//DITTOMAC JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=100K
//SCRSTEP  EXEC  PGM=IEHPROGM
//DD1    DD  UNIT=SYSDA,DISP=SHR,
//          VOL=REF=SYS1.DITTOLIB
//*            VOL=REF=SYS1.NUCLEUS
//SYSPRINT DD SYSOUT=A
//SYSIN DD *,DCB=BLKSIZE=80
 SCRATCH DSNAME=SYS1.DITTOMAC,VOL=3330=MVT216,PURGE
 SCRATCH DSNAME=SYS1.DITTOMAC,VOL=3330=VS2517,PURGE
 SCRATCH DSNAME=SYS1.DITTOMAC,VOL=3330=VS1400,PURGE
 SCRATCH DSNAME=SYS1.DITTOMAC,VOL=3330=VS1RES,PURGE
  SCRATCH DSNAME=SYS1.DITTOMAC,VOL=2314=STEVEB,PURGE
 UNCATLG DSNAME=SYS1.DITTOMAC
/*
//     EXEC PGM=IEBUPDTE,PARM=NEW
//SYSUT2 DD DSN=SYS1.DITTOMAC,UNIT=SYSDA,DISP=(NEW,CATLG),
//          SPACE=(CYL,(1,1,10)),
//          DCB=(SYS1.MACLIB),
//             VOL=REF=SYS1.DITTOLIB
//*            VOL=REF=SYS1.NUCLEUS
//SYSPRINT DD SYSOUT=A
//SYSIN DD DATA,DCB=BLKSIZE=80
./ ADD  LIST=ALL,NAME=DITTODS1
         SPACE 1                                                        DS100000
NBUFPAGS EQU   7                   USE FOR DITTODS2 ADDRESSING          DS100010
*********************************************************************** DS100030
MAIN     DSECT                     OSDITTO DSECT FOR ALL DATA AREAS     DS100040
*********************************************************************** DS100050
./ ADD  LIST=ALL,NAME=DITTODS2
         SPACE 1                                                        OS335700
*********************************************************************** OS335800
**********               CHANNEL COMMAND WORDS              *********** OS335900
*********************************************************************** OS336000
         SPACE 1                                                        OS336100
         CNOP  0,8                                                      OS336200
MSICCW   CCW   X'00',DTPIO,X'40',1     MODE SET    INPUT TAPE CCW       OS336500
INTPCCW  CCW   X'02',DTPIO,X'20',1     READ TAPE CCW                    OS336600
INTPNOP  CCW   X'03',*,X'20',1         NOP FOR BSR,FSR,BSF DEV. END ST. OS336601
ERTCCW   CCW   X'03',*,X'40',1         ERT TAPE CCW LIST  - NOP CTL CCW OS336700
         CCW   X'1F',*,X'40',1         WTM CONTROL CCW                  OS336800
         CCW   X'17',*,X'40',1         ERG CONTROL CCW                  OS336900
         CCW   X'97',*,X'40',1         ERASE LONG CONTROL CCW-3420 ONLY OS337000
         CCW   X'07',*,X'20',1         REW CONTROL CCW                  OS337100
MSOCCW   CCW   X'00',DTPIO,X'40',1     MODE SET   OUTPUT TAPE CCW       OS337200
OTTPCCW  CCW   X'01',DTPIO,X'20',1     WRITE TAPE CCW (SET SLI BIT )    OS337300
OTTPNOP  CCW   X'03',*,X'20',1         NOP FOR BSR,FSR,BSF DEV. END ST. OS337301
SHCCW    CCW   X'31',DSKCC,X'40',5     SEARCH ID EQ DISK CCW            OS337400
TIC      CCW   X'08',*-8,X'00',1       TIC CCW                          OS337500
RWCCW    CCW   X'1E',DTPIO,X'20',4001  READ/WRITE DISK CCW              OS337600
SRCHA    CCW   X'39',DSKCC,X'40',4     SEARCH HA EQ DISK CCW            OS337700
TIC2     CCW   X'08',*-8,X'00',1       TIC CCW                          OS337800
HACCW    CCW   X'1A',DTPIO,X'40',5     READ HA CCW                      OS337900
ROCCW    CCW   X'16',DTPIO+5,X'00',16  READ R0 CCW                      OS338000
         DS    0H                  FORCE HW BOUND.                      OS338010
REPLNGTH DC    X'00'               REPLY LEN FOR WTOR                   OS338011
         DC    X'00'               FILLER                               OS338012
MSGLNGTH DC    X'0000'             MSG LEN FOR WTOR AND WTO             OS338013
RCNCCW   EQU   REPLNGTH-7          ADJUST FOR DOS CCW REF               OS338014
WCNCCW   EQU   MSGLNGTH-6          ADJUST FOR DOS CCW REF               OS338015
MSLN     EQU   MSGLNGTH+1              MSG LENGTH (ABBREV.)             OS338016
RPLN     EQU   REPLNGTH                REPLY LENGTH (ABBREV.)           OS338017
         EJECT                                                          OS338100
*********************************************************************** OS338200
**********                   CONSTANTS                      *********** OS338300
*********************************************************************** OS338400
         SPACE 1                                                        OS338410
PRLTH    DC    CL1' '                                                   OS338500
HEXTB    DC    CL16'0123456789ABCDEF'                                   OS338501
SET      DC    X'0F'                   SET IS PROPOGATED                OS338502
         DS    CL99                    HERE AT INITIALIZE TIME          OS338503
SCALE    DC    CL20' '                                                  OS338504
         DC    CL50'1...5...10...15...20...25...30...35...40...45...50' OS338505
         DC    CL50'...55...60...65...70...75...80...85...90...95.....' OS338506
TRTBL    DC    CL50' '                                                  OS338507
         DC    CL30'                        ó.<(+|'                     OS338508
         DC    X'50'                                                    OS338508
         DC    CL20'         !$*);^-/   '                               OS338509
         DC    CL24'      ,%_>?          :#@'                           OS338510
         DC    X'7D'                                                    OS338511
         DC    CL25'="                       '                          OS338512
         DC    CL50'                                          ABCDEFGH' OS338513
         DC    CL50'I       JKLMNOPQR        STUVWXYZ      0123456789 ' OS338514
         DC    CL5' '                                                   OS338515
         DS    0F                      FORCE FULL WORD                  OS338599
DSL      DC    AL4(NBUFPAGS*2048)      LIMIT TO ACTUAL NO. OF PAGES     OS338600
*                                      NEEDED TO READ INSTALLATION      OS338700
*                                      BLKSIZES. THE RIGHT HW (DSL+2)   OS338800
*                                      IS PLACED IN CCW BYTE COUNT      OS338900
*                                      FIELD DURING DISK/TAPE I/O.      OS339000
EIGHTY   DC    X'0050'                                                  OS339100
LINCT    DC    X'0000'                                                  OS339200
BLCT     DC    CL2' '                                                   OS339300
HBF      DC    X'000000'                                                OS339400
ON       DC    X'FF'                                                    OS339500
DCYL     DC    CL8'CYL  XXX'                                            OS339600
DHED     DC    CL8'HEAD  XX'                                            OS339700
DREC     DC    CL10'REC  XXXXX'                                         OS339800
LBKEY    DC    C'# '               USE 'KEY' OF NEXT                    OS339900
KEYH     DC    CL10'KEY  XXXXX'                                         OS340000
LBDATA   DC    C'# '               USE 'DATA' OF NEXT                   OS340100
DATB     DC    CL10'DATA XXXXX'                                         OS340200
DATH     DC    CL10'DATA XXXXX'                                         OS340300
COMMABLK DC    C', '               USED IN MSG                          OS340400
TBLK     DC    CL10'BLOCKXXXXX'                                         OS340500
IN       DC    CL6'INPUT='                                              OS340600
OT       DC    CL7'OUTPUT='                                             OS340700
ENTCCCHH DC    C'ENTER CCCHH WITHIN '        'DATA SET ...              OS340800
DSMSG    DC    C'DATA SET EXTENT'                                       OS340900
BEGINMSG DC    C'CCCHH'            ' - BEGIN' USED FROM NEXT MSG        OS341000
DASHBEG  DC    C' - '              'BEGIN=CCCHHH,END=' USED FROM NEXT   OS341100
BG       DC    CL6'BEGIN='                                              OS341200
         DC    C'CCCHH,'           FILL AND COMMA                       OS341300
EN       DC    CL4'END='                                                OS341400
NB       DC    CL6'NBLKS='                                              OS341500
BLOCKMSG DC    C'FIRST BLOCK OR NOT MULTIPLE OF '    USE 'RECSIZE' NXT  OS341600
RS       DC    CL8'RECSIZE='                                            OS341700
BF       DC    CL10'BLKFACTOR='                                         OS341800
DT       DC    CL9'DECKTYPE='                                           OS341900
DN       DC    CL9'DECKNAME='                                           OS342000
ZEROS    DC    CL5'00000'                                               OS342100
ENTERMSG DC    C'ENTER: '              USE 'XXX - ' OF NEXT MSG         OS342200
XXXDASH  DC    C'XXX - '               USE 'TO LIST FUNCTIONS' OF NEXT  OS342300
         DC    C'TO LIST FUNCTIONS'                                     OS342400
BSRMSG   DC    C' - ON BSR OR FSR, '   FUNCMSG WILL BE USED FROM NEXTDC OS342500
FUNCMSG  DC    C'FUNCTION '        USE 'CONTINUES' OF NXT MSG           OS342600
CONTMSG  DC    C'CONTINUES'                                             OS342700
DVTYPMSG DS    0CL1                USE 'TAPEIN NOT TAPE DEVICE'         OS342800
TPINDD   DC    CL8'TAPEIN  '           DDNAMES TO BE SUPPLIED ON CTL CD OS342900
         DC    C'NOT TAPE '                                             OS343000
DEVH     DC    CL22'DEVICE  XXX  TAPEIN   '                             OS343100
         DC    CL26'MODE XX  X TRACK   800 BPI'                         OS343200
BYTMSG   DC    CL28' BYTES TO BE CHANGED, (1-35)'                       OS343300
SDPMSG   DC    CL29'STARTING DATA POSITION IN REC'                      OS343400
DSKH     DC    CL24'CYLINDER XXX  HEAD  X   '                           OS343500
BPTRK    DC    CL48'DEFECTIVE 231X PRIMARY TRACK, ALTERNATE TRACK IS'   OS343600
         DC    CL18' CYL XXX  TRACK  X'                                 OS343700
GATRK    DC    CL50'OPERATIVE 231X ALTERNATE TRACK, DEFECTIVE TRACK WA' OS343800
         DC    CL19'S CYL XXX  TRACK  X'                                OS343900
DET1     DC    CL6'CHAR  '                                              OS344000
DET2     DC    CL6'ZONE  '                                              OS344100
DET3     DC    CL6'NUMR  '                                              OS344200
CTL      DC    CL8'$$DITTO '                                            OS344300
DCKMSG   DC    CL18'DECK NAME X CHARS.'                                 OS344400
INVLDMSG DS    0CL8                USE 'INVALID ' OF NEXT MSG           OS344500
BADCUUMM DC    C'INVALID '         'CUUMM' OF NEXT MSG IS USED ALSO     OS344600
SYSOTMSG DC    C'CUUMM - OUTPUT '      'TAPE' OF NEXT                   OS344700
TAPMRK   DC    CL10'TAPE MARK '                                         OS344800
SYSITMSG DC    C'CUUMM - '            USE 'INPUT TAPE' OF NEXT MSG      OS344900
TAPERR   DC    C'INPUT TAPE I/O ERROR'                                  OS345000
SYSDSK   DC    CL10'CUU - DISK'                                         OS345100
BLKMSG   DC    C'#'                USE ' BLKS' OF NEXT MSG              OS345200
BLKTMSG  DC    C' BLKS'            USE ' AND T.M. COPIED' OF NEXT MSG   OS345300
TMCOPIED DC    C' AND T.M. COPIED'                                      OS345400
RECADDRS DC    CL23'CCC-HH-RRR  REC ADDRESS'                            OS345500
SCANMSG  DC    CL31'SCAN KEY - K, DATA - D, EOF - E'                    OS345600
DESIRED  DC    CL11'DESIRED REC'                                        OS345700
DIRECT   DC    CL24'COPY FWD OR BACK, F OR B'                           OS345800
FILNUM   DC    CL7'# FILES'                                             OS345900
TPERRMSG DC    CL50'BYPASS REC - B, IGNORE ERROR - I, USER CORRECT - C' OS346000
NOREC    DC    CL20'NO DISK RECORD FOUND'                               OS346100
NVOLMSG  DC    CL17'ENTER NEW VOL IS '                                  OS346200
TOLNGTH  DC    C' TO '             USE 'LENGTH' OF NEXT MSG             OS346300
LNGTHMSG DC    C'LENGTH EXCEEDS END OF'  USE' BLOCK'  OF NEXT MSG       OS346400
BADLTH   DC    C' BLOCK EXCEEDS BUFFER, TO INCREASE SIZE - '            OS346500
         DC    C'RE-ASSEMBLE'                                           OS346600
LGRCDMSG DC    C' LOGICAL '        USE 'RECORDS' OF NEXT MSG            OS346700
RCDMSG   DC    C'RECORDS AT'                                            OS346800
ALTERMSG DC    C'ALTERED DISK RECORD IN CORE'                           OS346900
ALTRMSG  DC    CL26'ALTER IN HEX - H, CHAR - C'                         OS347000
ALTCT    DC    CL31'ENTER XX BYTES, X CHAR PER BYTE'                    OS347100
RECSIZ   DC    C'LOGICAL REC '     USE 'LNTH' OF NEXT MSG               OS347200
LNTHMSG  DC    C'LNTH'             USE 'SCAN ARGUMENT (1-35)' OF NEXT   OS347300
SCANMSG2 DC    C' SCAN ARGUMENT (1-35)'    ' SCAN' PORTION USED         OS347400
NWTPMSG  DC    C'END OF REEL, MOUNT NEW '    USE 'TAPE' OF NEXT MSG     OS347500
TLMSG    DC    CL19'TAPE NOT CARD IMAGE'                                OS347600
CHNGMSG  DC    C'CHANGES '         USE  ' COMPLETE ' OF NEXT MSG        OS347700
COMPLDC  DC    C'COMPLETE '        USE '?, Y OR N' OF NEXT MSG          OS347800
YORNMSG  DC    C'?, Y OR N'                                             OS347900
XX       DC    CL6'XXXXXX'                                              OS348000
INTPERSW DC    X'00'                   CONTROLS OPER INTP ERROR RTN     OS348100
TPINOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348400
TPOTOPSW DC    X'00'                   OPEN SWITCHES FOR OPEN CONTROL   OS348500
DHDGSW   DC    X'00'                   USE TO CTL DHDG ONLY ONCE        OS348600
OVFLOSW  DC    X'00'                   USE TO INDIC. OVFLO              OS348700
QIEOFSW  DC    X'00'                   QSAMIN EOF SW                    OS348800
VIEOFSW  DC    X'00'                   VSAMIN EOF SW                    OS348810
VIOPENSW DC    X'00'                   VSAMIN OPEN SW                   OS348811
VITYP    DC    X'00'                    USE FOR VSAMIN E=ESDS K=KSDS    OS348812
TPOTDD   DC    CL8'TAPEOUT '           DDNAMES TO BE SUPPLIED ON CTL CD OS348900
DSKINDD  DC    CL8'DISKIN  '           DDNAMES TO BE SUPPLIED ON CTL CD OS349000
OPENFAIL DC    CL15' DD OPEN FAILED'                                    OS349010
IRPTMSG  DC    C'REPLY: '                                               OS349500
IRPTDC   DC    C'U'                REPLY U WILL IRPT FUNCTION           OS349600
         DC    C' - TO INTERRUPT A FUNCTION, EOJ - '                    OS349700
         DC    C'TO END '          USE 'DITTO' OF NEXT MSG              OS349800
DITTODC  DC    C'DITTO '                                                OS349900
CTLERROR DC    C'CONTROL CARD ERROR, '                                  OS349910
XXXMSG   DC    C'REFER TO ''XXX'' LISTING'                              OS350000
DSEMSG   DC    C', NEXT IS AVAIL. '                                     OS350010
USEDSE   DC    C'USE DSE'          BLANKED OUT IN CTL CRD MODE          OS350011
         DS    0H                                                       OS350090
UPPERC   DC    AL2(202)                INITIALLY 2311/2314              OS350100
UPPERH   DC    AL2(09)                 INITIALLY 2311                   OS350200
USERNAME DC    CL10'IBM  S/370'    USED IN INT FUNCTION                 OS350300
CNTRLSW  DC    X'FF'               SW FOR CONTOL CARD MODE-SET ON NOW   OS350400
DPSW     DC    X'00'               HEX DUMP SW                          OS350500
EXTNTCNT DC    X'0'                SAVE DEB EXTENT CNT HERE             OS350600
TMSW     DC    X'00'               TAPE MARK SW SET WHEN T.M. READ      OS350700
TRK7OR9  DC    X'00'               X'07' = 7-TRK, X'09' = 9-TRK         OS350800
GETCRDSW DC    X'00'               SET TO FF IF CTL CD MODE & NO /+,EOJ OS350820
         DS    0F                                                       OS350900
IRPT     DC    CL4' '                                                   OS351100
IRPTECB  DC    F'0'                                                     OS351200
DKDEBADR DC    F'0'                SAVE DEB PTR                         OS351300
DATESAVE DS    CL6                 MACHINE DATE FOR TITLE PAGE YY.DDD   OS351400
H16      DC    H'16'                   HALFWORD OF 16 TO INCR DEB       OS351500
H8       DC    H'8'                    HALF WORD OF 8 TO INCR CCW LNTH  OS351600
P        DC    X'00'                   P = # OF ACTIVE CNSL STRINGS     OS351610
P1       DS    CL44                    STRING # 1                       OS351611
P2       DS    CL44                    STRING # 2                       OS351612
P3       DS    CL44                    STRING # 3                       OS351613
P4       DS    CL44                    STRING # 4                       OS351614
P5       DS    CL44                    STRING # 5                       OS351615
FUNCOD   DS    CL3                     FUNCTION CODE  IS STORED HERE    OS351620
******************* DEVTYP MACRO INFOR. FOR TAPEIN,TAPEOUT, DISKIN **** OS351700
         DS    0F                                                       OS351800
TIALLOSW DC    X'00'               SWITH=X'FF' WHEN TAPEIN  ALLOCATED   OS351810
TIALLUCB DC    C'***'              TAPEIN  UCB FROM TIOT                OS351811
TOALLOSW DC    X'00'               SWITH=X'FF' WHEN TAPEOUT ALLOCATED   OS351812
TOALLUCB DC    C'***'              TAPEOUT UCB FROM TIOT                OS351813
ITMODE   DC    C' '                                                     OS351900
ITUCB    DC    CL3' '                  UCB SAVE                         OS352000
ITDEVTYP DS    0F                                                       OS352100
         DC    CL1' '                                                   OS352200
ITTRK    DC    CL1' '      00-9TRK,20-9TRK(D.D.),80-7TRK,C0-7TRK(D.C.)  OS352300
ITCLASS  DC    CL1' '                                                   OS352400
IT3420   DC    CL1' '      03-3420                                      OS352500
ITBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  OS352600
         DS    0F                                                       OS352700
OTMODE   DC    C' '                                                     OS352800
OTUCB    DC    CL3' '                  UCB SAVE                         OS352900
OTDEVTYP DS    0F                                                       OS353000
         DC    CL1' '                                                   OS353100
OTTRK    DC    CL1' '      00-9TRK,20-9TRK(D.D.),80-7TRK,C0-7TRK(D.C.)  OS353200
OTCLASS  DC    CL1' '                                                   OS353300
OT3420   DC    CL1' '      03-3420                                      OS353400
OTBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  OS353500
BEGHD    DS    CL1                     FROM EDTADR                      OS353600
ENDHD    DS    CL1                     FROM EDTADR                      OS353700
         EJECT                                                          OS354800
*********************************************************************** OS354900
**********                   QSAM DCB'S                     *********** OS355000
*********************************************************************** OS355100
         SPACE 1                                                        OS355200
PRTRDCB  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FM,LRECL=133,   XOS355300
               BLKSIZE=133                                              OS355400
         EJECT                                                          OS355410
CRDDCB   DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=SIEOF               OS355500
SIEOF    DS    F             BR VECTOR FILLED BY SUB USING SYSIN DCB    OS355501
         EJECT                                                          OS355510
PCHDCB   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPUNCH,                      XOS355600
               RECFM=FM,BLKSIZE=81                                      OS355601
         EJECT                                                          OS355610
QSAMIN   DCB   DSORG=PS,DDNAME=QSAMIN,MACRF=(GL),EODAD=QIEOF            OS355620
QIEOF    DS    F             BR VECTOR FILLED BY SUB USING QSAMIN       OS355621
         EJECT                                                          OS355630
QSAMOUT  DCB   DDNAME=QSAMOUT,DSORG=PS,MACRF=(PM),EXLST=OUTJFLST        OS355640
         DS    0F                                                       OS355641
OUTJFLST DC    X'87'               JFCB AREA - LAST IN LIST             OS355642
         DC    AL3(DTPIO)              USE DTPIO FOR JFCB WORK AREA     OS355643
         EJECT                                                          OS355650
*********************************************************************** OS355651
*******************    VSAMIN ACB, EXLST, RPL, AND INADR     ********** OS355652
*********************************************************************** OS355653
         SPACE 1                                                        OS355654
VSAMIN   ACB   MACRF=(ADR,SEQ,IN,NUB),EXLST=VIEXLST                     OS355660
VIEXLST  EXLST EODAD=VIEOF                                              OS355661
VIEOF    DS    F             BR VECTOR FILLED IN BY SUB USING VSAMIN    OS355662
VIRPL    RPL   ACB=VSAMIN,OPTCD=(KEY,SEQ,NUP,KGE,LOC),AREA=VINADR       OS355663
VINADR   DS    F                       VSAMIN REC ADR                   OS355664
         EJECT                                                          OS355700
*********************************************************************** OS355800
**********                   EXCP DCB'S                     *********** OS355900
*********************************************************************** OS356000
         SPACE 1                                                        OS356100
DSKDCB   DCB   MACRF=E,DDNAME=DISKIN,DSORG=PS,DEVD=DA                   OS356200
         EJECT                                                          OS356210
INTPDCB DCB DDNAME=TAPEIN,DSORG=PS,MACRF=E,DEVD=TA                      OS356300
         EJECT                                                          OS356310
OTTPDCB  DCB   DDNAME=TAPEOUT,MACRF=E,DSORG=PS,DEVD=TA                  OS356400
         EJECT                                                          OS356410
*********************************************************************** OS356500
ITECBIOB DS    0F                  TAPEIN  ECB & IOB                    OS356600
INTPECB  DC    F'0'                    ECB                              OS356700
INTPIOB  DS    0F                                                       OS356800
INTPIOBF DC    X'4200'             NO RELATED CCW'S AND CD              OS356900
INTPSENS DC    H'00'                                                    OS357000
         DC    X'7F'                                                    OS357100
         DC    AL3(INTPECB)                                             OS357200
INTPFLG  DC    X'00'                                                    OS357300
INTPCSW  DC    XL7'00'                                                  OS357400
INTPCCWA DC    A(INTPCCW)              CCW IS 16 BYTES FROM IOB         OS357500
INTPDCBA DC    A(INTPDCB)                                               OS357600
         DC    F'0'                                                     OS357700
INTPBCI  DC    H'0'                BCI = 0 WHEN NOT USED BY EXCP PGM    OS357800
         DC    H'0'                                                     OS357900
*********************************************************************** OS358000
OTECBIOB DS    0F                  TAPEOUT ECB & IOB                    OS358100
OTTPECB  DC    F'0'                                                     OS358200
OTTPIOB  DS    0F                                                       OS358300
OTTPIOBF DC    X'4200'             NO RELATED CCW'S AND CD              OS358400
OTTPSENS DC    H'00'                                                    OS358500
         DC    X'7F'                                                    OS358600
         DC    AL3(OTTPECB)                                             OS358700
OTTPFLG  DC    X'00'                                                    OS358800
OTTPCSW  DC    XL7'00'                                                  OS358900
OTTPCCWA DC    A(OTTPCCW)                                               OS359000
OTTPDCBA DC    A(OTTPDCB)                                               OS359100
         DC    F'0'                                                     OS359200
OTTPBCI  DC    H'0'                BCI = 0 WHEN NOT USED BY EXCP PGM    OS359300
         DC    H'0'                                                     OS359400
*********************************************************************** OS359500
DSKIOBAR DS    0F                  DISKIN ECB AND IOB                   OS359600
DSKECB   DC    F'0'                                                     OS359700
DSKIOB   DS    0F                                                       OS359800
DSKFLG1  DC    X'42'               NO RELATED CCW'S & COMM. CHAINING    OS359900
DSKFLG2  DC    X'00'                                                    OS360000
DSKS0    DC    X'00'                                                    OS360100
DSKS1    DC    X'00'                                                    OS360200
         DC    X'00'                                                    OS360300
DSKECBA  DC    AL3(DSKECB)                                              OS360400
DSKERFLG DC    X'00'                                                    OS360500
DSKCSW   DC    XL7'00'                                                  OS360600
DSKCCWA  EQU   *                                                        OS360700
DSKSIOCC DC    X'00'                                                    OS360800
         DC    AL3(SHCCW)                                               OS360900
         DC    X'00'                                                    OS361000
DSKDCBA  DC    AL3(DSKDCB)                                              OS361100
         DC    2F'0'                                                    OS361200
DSKM     DC    X'00'                                                    OS361300
DSKBB    DC    XL2'00'                                                  OS361400
DSKCC    DC    XL2'00'                                                  OS361500
DSKHH    DC    XL2'00'                                                  OS361600
DSKR     DC    X'00'                                                    OS361700
         EJECT                                                          OS361800
*********************************************************************** OS361900
**********                 STORAGE AND EQUATES              *********** OS362000
*********************************************************************** OS362100
         SPACE 1                                                        OS362200
HH1      DC    CL8'* * * * '       LEADING *'S IN HEADING               OS362300
HH2      DS    CL117               HEADING BODY                         OS362400
HH3      DC    CL7'* * * *'        TRAILING *'S IN HEADING              OS362500
BLANKS   DC    CL80' '             UTILITY BLANKS FOR CLEARING CRD AREA OS362600
MVBEGIN2 EQU   *                       BEGIN BLANK FILL                 OS362610
ADRSLO   DS    CL5                 LOWER DISK ADDRESS                   OS362700
ADRSUP   DS    CL5                 UPPER DISK ADDRESS                   OS362800
INPUT    DS    CL1                 OVERFLOW SW                          OS362900
HNB      DS    CL4                 HOLD NBLKS                           OS363000
HRS      DS    CL5                 HOLD RECSIZE                         OS363100
HSCANTYP DS    CL1                     HOLD SCANTYPE                    OS363110
HSCANPOS DS    CL5                     HOLD SCANPOS                     OS363120
HSCANALN DS    CL2                     HOLD SCAN ARG LN                 OS363130
HSTAKYLN DS    CL2                     HOLD STARTKEY LN                 OS363132
HSA      DS    CL5                     HOLD STARTAFT                    OS363140
HNR      DS    CL5                     SAVE NLRECS                      OS363150
HDG1     DS    CL26                HEADING BUFFER                       OS363200
HDG2     DS    CL26                HEADING BUFFER                       OS363300
HDG3     DS    CL26                HEADING BUFFER                       OS363400
DECKTYPE DS    CL3                 HOLD DECKTYPE                        OS363500
DECKNAME DS    CL8                 HOLD DECKNAME                        OS363600
CC       DS    CL1                 CARRIAGE CONTROL CHARACTER           OS363700
SCARG    DS    CL35                    SCAN ARGUMENT SAVE AREA          OS363800
MVEND2   EQU   *                       END BLANK FILL                   OS363810
LNOFMV2  EQU   MVEND2-MVBEGIN2         LN OF MVC BLANK FILL             OS363811
ORGCTL   DS    0H                      ALLIGN FOR INIT. OVLY            OS363801
         DC    X'00'                   FILLER                           OS363802
CP       DC    X'01'                   FM CC DEFAULT                    OS363900
CONIO    DS    CL132               COMMON BUFFER FOR CONSOLE,CARD, ETC. OS364000
CONIOI   EQU   CONIO-1                 ALLOW FOR PRINT CTL ON 3525      OS364100
HEXIO    EQU   CONIO+12            BEGIN HEX                            OS364200
         DS    CL1                     CONIO SPACER                     OS364300
LISTSW   DS    CL1                 DP,DPD,SP,SPD LIST CTL               OS364310
MVBEGIN  EQU   *                   BEGIN ZERO CLEAR                     OS364311
HOLD     DS    1D                  PACK AREA                            OS364500
HOLDSEQ  DS    1D                  PACK AREA                            OS364600
LOWLIM   DS    CL8                 BEGIN= LOWER CCCHH, ALSO BLKCNT LIM  OS364700
UPPLIM   DS    CL6                 END= UPPER CCCHH                     OS364800
LLIMSAVE DS    CL8                 LOWLIM SAVE AREA                     OS364900
DBLSW    DS    CL1                 DE-BLOCK SW                          OS365000
ALTSW    DS    CL1                 ALTERNATE TRK SW                     OS365100
CT       DS    CL1 MASK FOR CNCD PARAM. SUBMITTED BIT0 - INPUT=         OS365200
*                                                 BIT1 - OUTPUT=        OS365201
*        ALSO OPTIONAL NRECS PRINT LIMIT          BIT2 - NBLKS=         OS365202
*                                                 BIT3 - RECSIZE=       OS365203
*                                                 BIT4 - DECKTYPE=      OS365204
*                                                 BIT5 - BLKFACTOR=     OS365205
*                                                 BIT6 - BEGIN=         OS365206
*                                                 BIT7 - END=           OS365207
CT1      DS    CL1 MASK FOR CNCD PARAM. SUBMITTED BIT0 - SCANTYPE=      OS365210
*                                                 BIT1 - ARGUMENT=      OS365211
*                                                 BIT2 - SCANPOS=       OS365212
*                                                 BIT3 - STARTAFT=      OS365213
*                                                 BIT4 - STARTKEY=      OS365214
*                                                 BIT5 - NLRECS=        OS365215
*                                                 BIT6 - UNUSED         OS365216
*                                                 BIT7 - UNUSED         OS365217
FLIFLOSW DC    X'00'               FLIPFLOP SW FOR MISC. USE            OS365290
HSTARTKY DS    CL35                    HOLD STARTKEY                    OS365292
HSKEND   EQU   *                       USE TO ADDRESS END OF STARTKEY   OS365293
EOF      DS    CL1                 CARD EOF SW                          OS365300
TYP      DS    CL1                 TYPE OF DISK SCAN                    OS365400
PL       DS    CL1                 PRINT LENGTH                         OS365500
ESW      DS    CL1                 LEAD ZERO SW ( SUPPRESS )            OS365600
OTEOR    DS    CL1                 OUTPUT TAPE END OF REEL SW           OS365700
OTONINSW DS    CL1                 SW FOR O/P OPER. ON TAPEIN  DD       OS365710
INFMOTSW DS    CL1                 SW FOR I/P OPER. ON TAPEOUT DD       OS365711
DSKEOFSW DS    CL1                 SET TO X'FF' ON EOF READ (CTL.CRD.)  OS365712
MVEND    EQU   *                   END   ZERO CLEAR                     OS365713
LNOFMOVE EQU   MVEND-MVBEGIN       LENGTH OF MOVE TO ZERO SWITCHES      OS365714
OUTDDSAV DS    CL8                                                      OS365800
         DS    CL1                                                      OS365900
INDDSAV  DS    CL8                                                      OS366000
         DS    CL1                                                      OS366100
DDWK1    DS    CL9                                                      OS366200
DDWK2    DS    CL8                                                      OS366300
DTPIO    DS    0F                  DISK/TAPE IO AREA                    OS366400
         DS    CL(NBUFPAGS*2048)       LIMIT TO ACTUAL NO. OF PAGES     OS366500
*                                      NEEDED TO READ TYPICAL INSTAL-   OS366600
*                                      LATION BLKSIZES.                 OS366700
OUTJFCB  EQU   DTPIO                   JFCB INPUT AREA    ( QSAMOUT)    OS366710
L        EQU   12                  LETTER WIDTH                         OS366800
S        EQU   2                   SIZE OF BLOCKED LETTERS              OS366900
D1       EQU   CONIO+3             BEGIN 'D'                            OS367000
D2       EQU   D1+1                'D' CONT.                            OS367100
D3       EQU   D2+1                'D' CONT. NOT PRINTED IN OS/DITTO    OS367200
O1       EQU   D1+L/2+S/2-1            MOVE O OVER 1/2 'D' WIDTH - 1    OS367300
O2       EQU   O1+1                'O' CONT.                            OS367400
O3       EQU   O2+1                'O' CONT.                            OS367500
S1       EQU   O1+L+S              'S' POSITION                         OS367600
S2       EQU   S1+1                'S' CONT.                            OS367700
S3       EQU   S2+1                'S' CONT.                            OS367800
X        EQU   S1+L+S              SLASH POSITION                       OS367900
DD1      EQU   X+L+S               'D' IN DITTO                         OS368000
DD2      EQU   DD1+1               'D' CONT.                            OS368100
DD3      EQU   DD2+1               'D' CONT.                            OS368200
I1       EQU   DD1+L+S             'I' IN DITTO                         OS368300
I2       EQU   I1+1                'I' CONT.                            OS368400
T1       EQU   I1+L+S              'T' IN DITTO                         OS368500
T2       EQU   T1+1                'T' CONT.                            OS368600
TT1      EQU   T1+L+S              'T' ( 2ND ) IN DITTO                 OS368700
OO1      EQU   TT1+L+S             LAST 'O' IN DITTO                    OS368800
R0       EQU   0                   REGISTER NOTATION                    OS368900
R1       EQU   1                   REGISTER NOTATION                    OS369000
R2       EQU   2                   REGISTER NOTATION                    OS369100
R3       EQU   3                   REGISTER NOTATION                    OS369200
R4       EQU   4                   REGISTER NOTATION                    OS369300
R5       EQU   5                   REGISTER NOTATION                    OS369400
R6       EQU   6                   REGISTER NOTATION                    OS369500
R7       EQU   7                   REGISTER NOTATION                    OS369600
R8       EQU   8                   REGISTER NOTATION                    OS369700
R9       EQU   9                   REGISTER NOTATION                    OS369800
RA       EQU   10                  REGISTER NOTATION                    OS369900
RB       EQU   11                  REGISTER NOTATION                    OS370000
RC       EQU   12                  REGISTER NOTATION                    OS370100
RD       EQU   13                  REGISTER NOTATION                    OS370200
RE       EQU   14                  REGISTER NOTATION                    OS370300
RF       EQU   15                  REGISTER NOTATION                    OS370400
SAVECCWA EQU   DSKECB              USE DSK ECB FOR TEMP. STORAGE        OS370500
         ORG   ORGCTL+2                ORIGIN BACK FOR INIT. CODE       OS370600
./ ADD  LIST=ALL,NAME=DITTOXE1
         SPACE 1                                                        E1 00010
*********************************************************************** E1 00020
*******************          RETURN MECHANISM      ******************** E1 00030
*********************************************************************** E1 00040
         SPACE 1                                                        E1 00050
         DS    0F                                                       E1 00060
RETNORM  EQU   *                                                        E1 00070
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           E1 00080
         B     RETURN                                                   E1 00090
RETIRPT  EQU   *                                                        E1 00100
         LA    RF,4                     RC = 4                          E1 00110
         B     RETURN                                                   E1 00120
TELUSER2 EQU   *                                                        E1 00130
         LA    RF,8                     RC = 8                          E1 00140
RETURN   EQU   *                                                        E1 00150
         L     RD,4(RD)                PRIME RD                         E1 00160
         RETURN (14,12),RC=(15)                                         E1 00170
         EJECT                                                          E1 00180
*********************************************************************** E1 00190
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** E1 00200
*********************************************************************** E1 00210
PRNT     EQU   *                                                        E1 00220
         LA    R1,PARM                 MSICCW                           E1 00230
         CALL  PRNTSUB                                                  E1 00240
         B     PRNTRET(RF)                                              E1 00250
PRNTRET  B     PRNTEXIT                RC = 0                           E1 00260
         B     RETIRPT                 RC = 4                           E1 00270
         B     TELUSER2                RC = 8                           E1 00280
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       E1 00290
         BNE   0(R8)                   NO                               E1 00300
         MVI   OVFLOSW,X'00'           RESET                            E1 00310
         MVI   CC,X'11'                DOUBLE SPACING                   E1 00320
         BR    R8                      RETURN                           E1 00330
OVFLO    EQU   *                                                        E1 00340
         MVI   CC,X'8B'                SKIP TO CH 1                     E1 00350
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              E1 00360
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         E1 00370
         B     PRNT                                                     E1 00380
         EJECT                                                          E1 00390
*********************************************************************** E1 00400
*******************          STORAGE AND EQUATES   ******************** E1 00410
*********************************************************************** E1 00420
         SPACE 1                                                        E1 00430
         DS    0F                                                       E1 00440
SAVEAREA DS    18F                                                      E1 00450
PARM     DS    F                                                        E1 00460
         EJECT                                                          E1 00470
*********************************************************************** E1 00480
**********                     CONSTANTS                    *********** E1 00490
*********************************************************************** E1 00500
         SPACE 1                                                        E1 00510
TBL1     DC    C'       SYSTEM UTILITY FUNCTIONS                     '  E1 00520
         DC    C'                                                    '  E1 00530
         DC    C'PRTPRINT ONE OR ALL MEMBERS OF A PDS                '  E1 00540
         DC    C'PUNPUNCH ONE OR ALL MEMBERS OF A PDS                '  E1 00550
         DC    C'DUMDUMP A DASD VOLUME TO TAPE                       '  E1 00560
         DC    C'RESRESTORE A DUMP TAPE TO DASD                      '  E1 00570
         DC    C'LS LIST SPACE AVAILABLE ON A DASD VOLUME            '  E1 00580
         DC    C'LV LISTVTOC OF A DASD VOLUME                        '  E1 00590
         DC    C'LC LIST CATALOG (SYSCTLG - IPLVOL OR CVOL)          '  E1 00600
         DC    C'LP LIST PDS DIRECTORY                               '  E1 00610
         DC    C'CATCATALOG DSNAME                                   '  E1 00620
         DC    C'UNCUNCATALOG DSNAME                                 '  E1 00630
         DC    C'SCRSCRATCH VTOC, DATA SET, OR MEMBER OF A PDS       '  E1 00640
         DC    C'RENRENAME DATA SET OR MEMBER                        '  E1 00650
         DC    C'                                                    '  E1 00660
         DC    C'       QSAM (CARD, DASD, AND SL/BLP TAPE) FUNCTIONS '  E1 00670
         DC    C'                                                    '  E1 00680
         DC    C'CQ CARD TO QSAM                                     '  E1 00690
         DC    C'CQSCARD TO QSAM WITH SEQ. NUMBERS AND DECK NAME     '  E1 00700
         DC    C'QC QSAM TO CARD (USE FUNC=I FOR 3525 INTERPRET)     '  E1 00710
         DC    C'QQ QSAM TO QSAM (COMPATIBLE RECFM''S ASSUMED)        ' E1 00720
         DC    C'                                                    '  E1 00730
         DC    C'       QSAM/VSAM PRINT FUNCTIONS                    '  E1 00740
         DC    C'                                                    '  E1 00750
         DC    C'QP QSAM TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  E1 00760
         DC    C'QD QSAM TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  E1 00770
         DC    C'VP VSAM TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  E1 00780
         DC    C'VD VSAM TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  E1 00790
         DC    C'                                                    '  E1 00800
         DC    C'       MISCELLANEOUS FUNCTIONS                      '  E1 00810
         DC    C'                                                    '  E1 00820
         DC    C'TRSCONTROL CARD - TAPE RECORD SCAN                  '  E1 00830
         DC    C'DRSCONTROL CARD - DISK RECORD SCAN (KEY/DATA/EOF)   '  E1 00840
         DC    C'                                                    '  E1 00850
         DC    C'---S DITTOLOG - WRITE TAPE MARK ON DB/DC LOG TAPE   '  E1 00860
         DC    C'                WITHOUT REWIND AFTER SYSTEM FAILURE '  E1 00870
         DC    C'                (SEE COMMENT CARDS IN DITTOLOG PROC '  E1 00880
         DC    C'                FOR OPERATIONAL DETAILS)            '  E1 00890
DESCN    DC    C'MUST BE TAPEIN,DISKIN, OR TAPEOUT      '               E1 00900
         DC    C'SCAN FOR (K=KEY, D=DATA, E=EOF)        '               E1 00910
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET      '               E1 00920
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET      '               E1 00930
         DC    C'SCAN STARTING POSITION IN LREC         '               E1 00940
         DC    C'ARGVAL IS C''CHAR'' OR X''HEX''            '           E1 00950
DESCN1   EQU   *                                                        E1 00960
         DC    C'LOGICAL RECORD SIZE  1-99999 OR V (TRS)'               E1 00970
         DC    C'DECKTYPE (BAL, RPG, COB)               '               E1 00980
         DC    C'DECKNAME (0-3, 0-5, 0-8) CHAR.         '               E1 00990
         DC    C'KEYVAL IS CHAR ''CHAR'' C''CHAR'' OR X''HEX'''         E1 01000
         DC    C'START AFTER NTH LREC                   '               E1 01010
         DC    C'USE TO LIMIT NUMBER OF LRECS PROCESSED '               E1 01020
         DC    C'1-8 CHAR. OMIT TO GET ALL MEMBERS      '               E1 01030
M2       DC    C'  INPUT=DDNAME      '                                  E1 01050
M3       DC    C' ,SCANTYPE=X        '                                  E1 01060
M4       DC    C' ,BEGIN=CCCHH       '                                  E1 01070
M5       DC    C' ,END=CCCHH         '                                  E1 01080
M6       DC    C'(,SCANPOS=N...N     '                                  E1 01090
M7       DC    C' ,ARGUMENT=ARGVAL   '                                  E1 01100
M8       DC    C'(,RECSIZE=N...N     '                                  E1 01110
M9       DC    C' ,DECKTYPE=XXX      '                                  E1 01120
MA       DC    C' ,DECKNAME=X...X    '                                  E1 01130
MB       DC    C' (STARTKEY=KEYVAL   '                                  E1 01140
MC       DC    C' (STARTAFT=N...N    '                                  E1 01150
MD       DC    C'(,NLRECS=N...N      '                                  E1 01160
ME       DC    C' (MEMBER=MEMBNAME   '                                  E1 01170
MF       EQU   M8+1                    ',RECSIZE=N...N'                 E1 01180
NTBL1    EQU   38                  # OF ELEMENTS IN TBL1                E1 01200
NTBL2    EQU   17                                                       E1 01210
NTBL3    EQU   34                      FOR CONTROL CARD                 E1 01220
W1       EQU   09                                                       E1 01230
W2       EQU   17                                                       E1 01240
W3       EQU   25                                                       E1 01250
WC1      EQU   137                                                      E1 01260
W        EQU   80                                                       E1 01270
         LTORG                         FORCE LITERALS HERE              E1 01280
PGX      DSECT                                                          E1 01290
BL       DS    CL20                                                     E1 01300
PG       DS    0CL81                                                    E1 01310
         DS    CL7                                                      E1 01320
TRK      DS    CL1                                                      E1 01330
         DS    CL10                                                     E1 01340
DEN      DS    CL3                                                      E1 01350
         DS    CL9                                                      E1 01360
PAR      DS    CL4                                                      E1 01370
         DS    CL10                                                     E1 01380
TRN      DS    CL3                                                      E1 01390
         DS    CL14                                                     E1 01400
DCT      DS    CL3                                                      E1 01410
         DS    CL10                                                     E1 01420
MMS      DS    CL2                                                      E1 01430
         ORG   PG                                                       E1 01440
         DS    CL10                                                     E1 01450
OPCODE   DS    CL3                                                      E1 01460
         DS    CL7                                                      E1 01470
COMMENT  DS    CL49                                                     E1 01480
         DS    CL4                                                      E1 01490
DOLLAR   DS    CL1                                                      E1 01500
./ ENDUP
/*
//
//ARDUPDTE JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=128K
// EXEC DITUPDTE
//STEP1.SYSIN DD DATA,DCB=BLKSIZE=80
./ CHANGE SEQFLD=756
./ DELETE SEQ1=000100,SEQ2=000500
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * OS001010
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               OS008901
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA                        OS008902
         CLC   IRPT(3),=C'EOJ'         GO TO EOJ                        OS012300
         MVC   ADRSLO(LNOFMV2),BLANKS  BLANK OUT HDG BUFFERS ETC.       OS016700
./ DELETE SEQ1=017000,SEQ2=017000
./ DELETE SEQ1=017700,SEQ2=017700
         BAL   R8,WRTCONP          PARAM CNT=0, ISSUE MSG               OS018000
CONSL2   MVI   P1,X'40'                BLANK STRINGS                    OS019000
         MVC   P1+1(219),P1            PROPOGATE                        OS019001
         CLI   0(R1),X'40'             ' ' AFTER COMMA ? E.G. 'LV, '    OS019110
         BE    CONDONE                 IF SO STOP STRING                OS019111
         LA    R4,45                   MAX. LN. OF STRING + 1           OS019200
         LA    R7,45                   LN. OF P1 + 1 IN R7              OS020400
SCNMOV3  LA    R2,44(R2)               BUMP TO NEXT STRING              OS021000
./ DELETE SEQ1=022300,SEQ2=022800
CNTRLCD2 EQU   *                                                        OS023510
         MVI   CC,X'11'                DOUBLE SPACE DEFAULT             OS023520
         CLI   CONIO+71,C' '           72 BLANK ?                       OS023910
         BE    CNTRLCD3                YES - DOUBLE SPACE               OS023920
         MVI   CC,X'09'                NO  - SINGLE SPACE               OS023930
CNTRLCD3 EQU   *                                                        OS023940
         LA    R5,63               SCAN TO 71 INCLUSIVE. 73-80 = SEQ NO OS024600
HOLDID   EQU   *                                                        OS025200
         CLI   FLIFLOSW,1              72 NON-BLANK ?                   OS025300
         BE    PARMLOP                 YES                              OS025310
         MVC   FUNCOD,0(RB)            SAVE FUNCTION CODE               OS025320
         LA    RB,3(RB)                BUMP PAST FUN COD                OS025330
         BNE   CKIN                YES                                  OS025800
./ DELETE SEQ1=026200,SEQ2=027500
         BNE   CKBG                NO, BRANCH.                          OS028600
./ DELETE SEQ1=029400,SEQ2=035400
CKBG     LA    RD,SAVEAREA                                              OS029400
         CALL  CNCDSUB,(MSICCW),VL                                      OS029410
         LR    R8,RF                   SAVE RC IN R8                    OS029420
         LM    RD,RF,SV13TO15          PRIME BASE REGS                  OS029430
         B     CNCDRET(R8)             USE RC AS INDEX TO BR            OS029440
CNCDRET  B     BUMPIT                  RC=0                             OS029450
         B     BADCTL                  RC=4                             OS029460
         B     TELPGMR                 RC=8                             OS029470
         CLI   CONIO+70,C','           , IN 71 ?                        OS035810
         BNE   BUMPIT2                 NO                               OS035811
         LA    R1,CONIO+70             YES                              OS035812
         CR    R1,RB                    DOES CURRENT RB , = , IN 71 ?   OS035813
         BE    CHKID                   YES - GO LOOK FOR X IN 72        OS035814
BUMPIT2  EQU   *                                                        OS035815
         B     CKIN                AND LOOP FOR NEXT PARAMETER          OS036000
./ DELETE SEQ1=036100,SEQ2=037300
CHKID    EQU   *                                                        OS038800
         CLI   CONIO+71,C' '           72 = BLANK                       OS038810
         BE    CHKID1                  YES                              OS038820
         MVI   FLIFLOSW,1              NO - SET CONT. SW                OS038830
         B     CNTRLCD2                GO READ & PRNT                   OS038850
CHKID1   MVI   FLIFLOSW,0              RESET                            OS038860
         BAL   R8,LOOKUP               GO LOOKUP FUN COD                OS038870
./ DELETE SEQ1=041500,SEQ2=041600
./ DELETE SEQ1=049700,SEQ2=051300
./ DELETE SEQ1=062200,SEQ2=062300
       EJECT                                                            OS062400
./ DELETE SEQ1=067200,SEQ2=069400
./ DELETE SEQ1=070100,SEQ2=070500
         TM    INTPDCB+48,X'10'        OPEN SUCCESSFUL ?                OS071210
         BO    ITOPENOK                YES                              OS071211
         MVC   CONIO(8),TPINDD         MOVE IN DDNAME                   OS071212
         B     TELOPBAD                TEL USER OF BAD OPEN             OS071213
ITOPENOK EQU   *                                                        OS071214
         B     TELUSER             ISSUE MSG                            OS072400
./ DELETE SEQ1=072500,SEQ2=072600
./ DELETE SEQ1=073900,SEQ2=075900
DISKOPEN LA    RD,SAVEAREA             PRIME RD                         OS073900
         CALL  DISKOPEN,(MSICCW),VL                                     OS074000
         LR    R1,RF                   SAVE RETURN CODE                 OS074010
         LM    RD,RF,SV13TO15          PRIME BASE REGS                  OS074020
         B     DOPENRET(R1)            USE RC AS INDEX TO BR            OS074030
DOPENRET B     0(R8)                   RC = 0                           OS074040
DOPENEQU EQU   *                       RC = 4       (FALL THRU)         OS074050
TELUSER  MVI   MSLN,23                 SET LN TO 23                     OS076000
TELUSER2 CLI   CNTRLSW,X'FF'           ENTER FOR MSG N.E. 23. IN CNCD ? OS076010
TELPGMR  MVC   PL(1),MSLN              SET PRT LN                       OS076200
./ DELETE SEQ1=076700,SEQ2=076700
TELOPBAD MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 OS076910
         B     TELUSER                 ISSUE MSG                        OS076920
./ DELETE SEQ1=077000,SEQ2=077200
         TM    OTTPDCB+48,X'10'        OPEN SUCCESSFUL ?                OS077910
         BO    OTOPENOK                YES                              OS077911
         MVC   CONIO(8),TPOTDD         MOVE IN DDNAME                   OS077912
         B     TELOPBAD                TEL USER OF BAD OPEN             OS077913
OTOPENOK EQU   *                                                        OS077914
         B     TELUSER             ISSUE MSG                            OS079200
./ DELETE SEQ1=079300,SEQ2=079400
./ DELETE SEQ1=080600,SEQ2=083800
./ DELETE SEQ1=093700,SEQ2=095500
         BAL   R8,DISKOPEN             OPEN DISKIN                      OS096400
./ DELETE SEQ1=108000,SEQ2=108000
OKLNTH   MVI   CONIO,C'#'          '# BYTES TO BE CHANGED' MSG          OS126800
         MVC   CONIO+1(28),BYTMSG                                       OS126900
         MVC   CONIO+29(05),BLANKS                                      OS127000
./ DELETE SEQ1=128600,SEQ2=137500
LOOKUP   LA    R5,SAVEAREA             PRIME R5 ( RD IS BASE REG )      OS128600
         CALL  FUNCSUB,(MSICCW),VL                                      OS128610
         LR    R5,RF                   SAVE RC IN R5                    OS128620
         LM    RD,RF,SV13TO15          PRIME BASE REGS                  OS128630
         B     FUNCRET(R5)             USE R5 AS INDEX TO BR            OS128640
FUNCRET  B     CONSOLE                 RC = 0 - NORMAL RETURN           OS129680
         B     0(R8)                   RC = 4 - INVALID FUNCTION        OS129690
         B     CHKIRPT                 RC = 8 - IRPT FUNCUNCTION        OS129692
         B     CDCD                CARD - CARD                          OS129700
         B     CDPR                CARD - PRINTER                       OS129900
         B     CDTP                CARD - TAPE                          OS130100
         B     CDTPSQ              CARD - TAPE WITH RESEQUENCING        OS130300
         B     TPCD                TAPE - CARD                          OS130500
         B     TPPRU               TAPE - LIST PRINT UNBLOCKED.         OS130700
         B     TPPRR               TAPE - LIST PRINT REBLOCKED.         OS130900
         B     TPDPU               TAPE - PRINT HEX UNBLOCKED.          OS131100
         B     TPDPR               TAPE - PRINT HEX REBLOCKED.          OS131300
         B     TPPRR               TAPE - LIST VARIABLE RECORDS         OS131500
         B     TPDPR               TAPE - HEX  VARIABLE RECORDS         OS131700
         B     TPTP                TAPE - TAPE.                         OS131900
         B     WTMK                WRITE TAPE MARK.                     OS132100
         B     FSPF                FORWARD SPACE FILE.                  OS132300
         B     BSPF                BACK SPACE FILE.                     OS132500
         B     FSPR                FORWARD SPACE RECORD.                OS132700
         B     BSPR                BACK SPACE RECORD.                   OS132900
         B     REWTP               REWIND TAPE.                         OS133100
         B     DISKDSE             DISPLAY DATA SET EXTENT ON CONSOLE   OS133300
         B     DISKDP              DISK PRINT UNBLOCKED.                OS133500
         B     DISKRLD             DISK RECORD LOAD.                    OS133700
         B     DSID                CHANGE DISK VOL  LABEL               OS133900
         B     EOJ                 EOJ.                                 OS134100
         B     CDCDS               CARD - CARD WITH SEQ. #'S.           OS134300
         B     RUNTP               REWIND AND UNLOAD TAPE.              OS134500
         B     CDDP                CARD - PRINTER IN HEX.               OS134700
         B     CANC                CANCEL INPUT CARD DATA.              OS134900
         B     INITP               INITIALIZE TAPE.                     OS135100
         B     ERASETP             ERASE TAPE RECORDS                   OS135300
         B     TPRLD               TAPE RECORD LOAD.                    OS135500
         B     TRSCAN              TAPE RECORD SCAN.                    OS135700
         B     DRSCAN              DISK RECORD SCAN.                    OS135900
         B     DISKDR              DISK - PRINT REBLOCKED.              OS136100
         B     WRTEOF              WRITE DISK EOF RECORD.               OS136300
         B     SPLITDD             DISK PRINT - SPLIT CYLINDER.         OS136500
         B     SPLITDR             DISK PRINT REBLOCKED - SPLIT CYL.    OS136700
         B     DISKPRT             DP                                   OS136711
         B     DISKPRTD            DPD                                  OS136713
         B     SPLITPRT            SP                                   OS136715
         B     SPLITPRD            SPD                                  OS136717
         B     SPLITRS             DISK RECORD SCAN - SPLIT CYL.        OS136900
         B     LSTFUNCT            LIST DITTO FUNCTIONS                 OS137100
         B     TPTPR               TAPE - TAPE REBLOCKED                OS137300
         MVI   INPUT,X'FF'                                              OS138980
         LA    R5,SAVEAREA             PRIME R5 ( RD IS BASE REG )      OS138994
         LINK  EPLOC=LOADMODL,PARAM=(MSICCW),VL=1                       OS139000
         LR    R1,RF                   SAVE RC                          OS139010
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS139020
         B     XXXRET2(R1)                                              OS139030
XXXRET2  B     ABENDSW                  RC = 0                          OS139040
         B     CHKIRPT                 RC = 4                           OS139050
         B     TELUSER2                 RC = 8                          OS139060
./ DELETE SEQ1=139100,SEQ2=139100
./ DELETE SEQ1=139300,SEQ2=139900
         MVI   DTPIO,X'F0'             PROPOGATE ZEROS                  OS193600
         MVC   DTPIO+1(79),DTPIO       PROPOGATE ZEROS                  OS193601
         BNE   TRSHDG                                                   OS218700
         TM    CT1,X'40'               ARGUMENT REQ'D                   OS218710
         BNO   BADCTL                                                   OS218712
         TM    CT1,X'20'               SCANPOS SUBMITTED ?              OS218714
         BO    TRSCAN0                 YES                              OS218716
         MVC   HSCANPOS(5),ZEROS       NO - DEFAULT = 1                 OS218718
         MVI   HSCANPOS+4,C'1'                                          OS218720
TRSCAN0  EQU   *                       SKIP DEF.                        OS218722
         TM    CT,X'90'                INPUT & RECSIZE REQ'D            OS218730
         BNO   BADCTL                                                   OS218740
TRSHDG   BAL   R8,DHDG                                                  OS218800
TRSDRS   EQU   *                                                        OS219100
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS219110
         BNE   TRSDRS2                                                  OS219120
         MVC   CONIO(5),HRS                                             OS219130
         B     TRSDRS3                                                  OS219140
TRSDRS2  MVC   CONIO(16),RECSIZ                                         OS219150
TRSDRS3  EQU   *                                                        OS219410
SCANLTH  EQU   *                                                        OS220700
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS220710
         BNE   SCANLTH2                NO                               OS220720
         MVC   CONIO(2),HSCANALN       PROVIDE ARG LN                   OS220730
         B     SCANLTH3                                                 OS220740
SCANLTH2 MVC   CONIO(25),LNTHMSG   'LNTH SCAN ARGUMENT (1-35)'          OS220750
./ DELETE SEQ1=220900,SEQ2=220900
SCANLTH3 EQU   *                                                        OS221200
         LA    RB,CONIO                PRIME FOR TSTNUMV                OS221210
SCANST   EQU   *                                                        OS222900
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS222910
         BNE   SCANST2                 NO                               OS222920
         MVC   CONIO(05),HSCANPOS                                       OS222930
         B     SCANST3                                                  OS222940
SCANST2  MVC   CONIO(29),SDPMSG                                         OS222950
SCANST3  EQU   *                                                        OS223210
         LA    R9,SCARG                 PTR TO ARG                      OS224300
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS225210
         BE    TELPGMR                                                  OS225220
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS225710
         BE    SCANOK2                 SKIP LNTHOK                      OS225720
SCANOK2  STC   R5,PRLTH                ST SCANALN FOR HEXDP             OS225900
         ST    R2,SAVRCSZ              SAVE LRECL BEFORE PRNT ARG       OS226000
         ST    R5,SAVREGS+8        SCAN ARG LN                          OS226100
         ST    RA,SAVREGS+12       SCAN START POS                       OS226200
./ DELETE SEQ1=226300,SEQ2=226300
         LA    RA,SCARG                PTR SCAN ARG                     OS226700
         MVI   FLIFLOSW,1              SET FOR DRS PRINT OF ARGUMENT    OS226790
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS226791
         BE    NOOVFLO                 YES, NO OVFLO, PR ARG NR CN CD   OS226792
         BAL   R8,OVFLO                NO, OVFLO TO SEPARATE FUN O/P    OS226793
NOOVFLO  EQU   *                       SKIP IN CNCD                     OS226794
         MVI   FLIFLOSW,0              RESET                            OS226802
         CLI   TYP,X'00'           IS DISK SCAN USING CODING ?          OS226810
         BNE   DRS1                YES, THEY EXIT HERE                  OS226820
./ DELETE SEQ1=227000,SEQ2=227000
         MVI   MSLN,14                                                  OS227600
         B     TELUSER2                                                 OS227700
./ DELETE SEQ1=227800,SEQ2=227800
SCANCHK  CLC   0(1,R3),SCARG           MATCH ?                          OS230200
./ DELETE SEQ1=235600,SEQ2=244500
DHDG     LA    RD,SAVEAREA             PRIME RD                         OS235600
         CALL  HEADING,(MSICCW),VL                                      OS235610
         LR    R1,RF                   SAVE R.C.                        OS235620
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS235630
         B     HEADRET(R1)                                              OS235640
HEADRET  B     0(R8)                   RC = 0                           OS235650
         B     CHKIRPT                 RC = 4                           OS235660
         B     TELUSER2                RC = 8                           OS235670
         BAL   R8,DISKOPEN             OPEN DISKIN                      OS258300
./ DELETE SEQ1=258400,SEQ2=258600
         MVI   P,0                 BREAK STRING - ALT K,D ONLY IF K RD  OS259100
DRSPRNT  LA    RB,CONIO+7              PTR TO CCC                       OS259200
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS260510
         BNE   DRSPRNT2                NO                               OS260520
         CLI   FLIFLOSW,1              CNCD AND DRS HIT ?               OS260530
         BNE   DRSPRNT2                NO                               OS260540
         MVI   RELTRKSW+1,X'F0'        SET FOR ABSOL IF CNCD & DRS HIT  OS260550
         MVI   DRSPRNT3+1,X'00'        SET TO FALL THRU                 OS260560
DRSPRNT2 EQU   *                                                        OS260570
DRSPRNT3 BC    15,DRSPRNT4             BR SW                            OS260710
         MVI   DRSPRNT3+1,X'F0'        SET TO FALL THRU                 OS260720
         MVI   RELTRKSW+1,X'00'        RESET TO REL TRK                 OS260730
DRSPRNT4 EQU   *                                                        OS260740
./ DELETE SEQ1=261900,SEQ2=262000
         CLI   FLIFLOSW,1          DO WE RETURN TO DRS ?                OS263010
         BE    DRSRET1             YES                                  OS263011
KEYONLY  MVC   CONIO(5),LBKEY          MSG '# KEY BYTES TO BE CHANGED ? OS264500
         MVC   CONIO+5(28),BYTMSG                                       OS264600
         MVI   CONIO+33,X'40'          ONE BLANK                        OS264700
         MVC   CONIO(6),LBDATA                                          OS265700
         MVC   CONIO+6(28),BYTMSG                                       OS265800
DISKDP1  EQU   *                       ENTRY FOR DRS                    OS269800
         BAL   R8,DISKOPEN             OPEN DISKIN                      OS269810
./ DELETE SEQ1=269900,SEQ2=269900
./ DELETE SEQ1=270100,SEQ2=270100
./ DELETE SEQ1=270600,SEQ2=270600
DSKCON   EQU   *                                                        OS270900
./ DELETE SEQ1=271500,SEQ2=271500
./ DELETE SEQ1=277700,SEQ2=277700
         MVC   HH2+43(74),BLANKS       BLANK OUT OPER. DASD TRACK (DRL) OS278000
DSKDRLSW BC    0,DRLRET            NOP TILL SET BY DRL                  OS278010
         BNE   DRSCAN0                                                  OS286400
         TM    CT1,X'80'               SCANTYPE REQ'D                   OS286410
         BNO   BADCTL                                                   OS286420
DRSCAN0  EQU   *                                                        OS286430
DRSCAN1  EQU   *                       RET HERE FROM DD                 OS286700
         CLI   CNTRLSW,X'FF'                                            OS286710
         BNE   DRSCAN2                                                  OS286720
         MVC   CONIO(1),HSCANTYP                                        OS286730
         B     DRSCAN3                                                  OS286740
DRSCAN2  MVI   MSLN,31                                                  OS286750
DRSCAN3  EQU   *                                                        OS287010
         BE    DRS1                    YES, NO MORE PARAM'S NEEDED      OS287300
         CLI   CNTRLSW,X'00'           CONSOLE ?                        OS287302
         BE    DRSCAN3A                YES, SKIP CT CHK                 OS287303
         TM    CT1,X'40'               ARGUMENT REQ'D                   OS287310
         BNO   BADCTL                                                   OS287320
         TM    CT1,X'20'               SCANPOS SUBMITTED ?              OS287330
         BO    DRSCAN3A                YES                              OS287340
         MVC   HSCANPOS(5),ZEROS       NO - DEFAULT = 1                 OS287350
         MVI   HSCANPOS+4,C'1'                                          OS287360
DRSCAN3A EQU   *                       SKIP DEF.                        OS287370
         CLI   CNTRLSW,X'00'           CONSOLE ?                        OS287702
         BE    DRSCAN3B                YES, SKIP CT CHK                 OS287703
         TM    CT,X'10'                RECSIZE REQ'D IF DATA SCAN       OS287710
         BNO   BADCTL                                                   OS287720
DRSCAN3B EQU   *                                                        OS287730
DRS1     CLI   CNTRLSW,X'FF'           CNCD ?                           OS288300
         BE    DRS2A                   YES                              OS288400
./ DELETE SEQ1=288500,SEQ2=288500
DRS2A    EQU   *                       SKIP MSGS                        OS289010
         L     R4,SAVREGS+8        GET SCAN ARG LN                      OS289200
         L     R0,SAVREGS+12       GET SCAN START POS                   OS290500
         L     R1,SAVREGS+8        GET SCAN ARG LN                      OS290600
KEYLNTH  CLC   SCARG,0(R1)         SCAN MATCH ?                         OS291200
         MVI   DBLSW,X'FF'         DEBLOCK DRS PRNT FOR EASE OF READING OS291510
         L     R2,SAVREGS+12       ADD SCAN START POS                   OS291700
         L     R4,SAVRCSZ          GET LRECL                            OS291900
DATLNTH  CLC   SCARG,0(R1)         SCAN MATCH ?                         OS292300
         CLI   CNTRLSW,X'FF'           CNCD ?                           OS294010
         BE    HITIT2                  YES, SKIP CONSOLE MSG            OS294020
         MVC   DDWK1(10),CONIO     SAVE C-H-R                           OS294110
         MVC   DDWK1(10),CONIO     SAVE C-H-R                           OS294209
HITIT2   EQU   *                       SKIP CONSOLE MSG                 OS294210
         MVI   FLIFLOSW,1          SET SW ON                            OS294211
         B     DRSPRNT             GO PRINT HIT                         OS294212
DRSRET1  EQU   *                   RETURN HERE                          OS294213
         MVI   FLIFLOSW,0          SET SW OFF                           OS294214
CLOSDKIN TM    DSKDCB+48,X'10'         OPEN ?                           OS298100
         BNO   CLOSCDIN                OPEN NOT NEEDED                  OS298200
./ DELETE SEQ1=298500,SEQ2=298700
CLOSCDIN TM    CRDDCB+48,X'10'         OPEN ?                           OS298800
         BNO   CLOSCDOT                CLOSE NOT NEEDED                 OS298900
./ DELETE SEQ1=299200,SEQ2=299500
CLOSCDOT TM    PCHDCB+48,X'10'         OPEN ?                           OS299600
         BNO   CLOSPRTR                CLOSE NOT NEEDED                 OS299700
CLOSPRTR TM    PRTRDCB+48,X'10'        OPEN                             OS300000
         BNO   CLOSQI                  CLOSE NOT NEEDED                 OS300001
         CLOSE PRTRDCB                                                  OS300002
         LM    RD,RF,SV13TO15          RESTORE BASE REGS AFTER MACRO    OS300003
CLOSQI   TM    QSAMIN+48,X'10'         OPEN ?                           OS300010
         BNO   CLOSQO                  CLOSE NOT NEEDED                 OS300011
         CLOSE QSAMIN                                                   OS300012
         LM    RD,RF,SV13TO15          RESTORE BASE REGS AFTER MACRO    OS300013
CLOSQO   TM    QSAMOUT+48,X'10'        OPEN ?                           OS300020
         BNO   CLOSVI                  CLOSE NOT NEEDED                 OS300021
         CLOSE QSAMOUT                                                  OS300022
         LM    RD,RF,SV13TO15          RESTORE BASE REGS AFTER MACRO    OS300023
CLOSVI   CLI   VIOPENSW,X'FF'          OPEN ?                           OS300030
         BNE   CLOSVIDN                NO                               OS300031
         CLOSE VSAMIN                                                   OS300032
         LM    RD,RF,SV13TO15          RESTORE BASE REGS AFTER MACRO    OS300033
CLOSVIDN EQU   *                                                        OS300034
./ DELETE SEQ1=301600,SEQ2=305400
WRTCON   LA    RD,SAVEAREA             PRIME RD                         OS301600
         CALL  WTORSUB,(MSICCW),VL                                      OS301700
         LR    R1,RF                   SAVE RC                          OS301710
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS301800
         B     WTORRET(R1)                                              OS301900
WTORRET  B     0(R8)                   RC = 0                           OS302000
         B     CHKIRPT                 RC = 4                           OS302100
./ DELETE SEQ1=306000,SEQ2=307900
         LA    RD,SAVEAREA                                              OS306000
         CALL  WTOSUB,(MSICCW),VL                                       OS306100
         LR    R1,RF                   SAVE RC                          OS306110
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS306200
         B     WTORRET(R1)             USE WTOR RET MECH                OS306300
./ DELETE SEQ1=308500,SEQ2=310600
         LA    RD,SAVEAREA                                              OS308410
         CALL  CDRDSUB,(MSICCW),VL                                      OS308420
         LR    R1,RF                   SAVE RC                          OS308430
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS308440
         B     CDRDRET(R1)                                              OS308450
CDRDRET  B     0(R8)                   RC = 0                           OS308460
         B     CHKIRPT                 RC = 4                           OS308470
         B     TELUSER2                RC = 8                           OS308480
./ DELETE SEQ1=311200,SEQ2=312300
         LA    RD,SAVEAREA                                              OS311110
         CALL  CDPNSUB,(MSICCW),VL                                      OS311120
         LR    R1,RF                   SAVE RC                          OS311130
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS311140
         B     CDPNRET(R1)                                              OS311150
CDPNRET  B     0(R8)                   RC = 0                           OS311160
         B     CHKIRPT                 RC = 4                           OS311170
         B     TELUSER2                RC = 8                           OS311180
./ DELETE SEQ1=312900,SEQ2=315800
PRNT     LA    RD,SAVEAREA             PRIME RD                         OS312900
         CALL  PRNTSUB,(MSICCW),VL                                      OS312910
         LR    R1,RF                   SAVE RC                          OS312920
         LM    RD,RF,SV13TO15      RESTORE BASE REGS AFTER EACH  MACRO  OS312930
         B     PRNTRET(R1)                                              OS312940
PRNTRET  B     PRNTEXIT                RC = 0                           OS312950
         B     CHKIRPT                 RC = 4                           OS312960
         B     TELUSER2                RC = 8                           OS312970
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       OS315900
         BNE   0(R8)                   NO                               OS316000
         MVI   OVFLOSW,X'00'           RESET                            OS316010
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              OS316500
         CLC   FUNCOD+1(2),=C'SR'      XXX = XSR ?                      OS320800
CKBSRBSF CLC   FUNCOD(2),=C'BSF '      XXX = BSX ?                      OS322010
         MVC   CONIO+23(3),=C'BSF '    MOVE IS BSF                      OS322700
         EJECT                                                          OS335640
*********************************************************************** OS335650
         LTORG                     FORCE LITERALS TO ORIGIN HERE        OS335660
*********************************************************************** OS335670
         EJECT                                                          OS335680
         COPY  DITTODS2            COPY IN DITTO DATA AREAS             OS335690
./ DELETE SEQ1=335700,SEQ2=370600
./ DELETE SEQ1=373200,SEQ2=373300
         CLC   0(2,R8),ZEROWORD        ZERO LENGTH PARM                 OS373520
         BE    BYPASCRD                YES                              OS373530
./ DELETE SEQ1=373800,SEQ2=373800
./ DELETE SEQ1=378100,SEQ2=515600
./ ENDUP
/*
//PROCSTEP EXEC DITTODSR                                                OS000290
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               OS000300
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      OS000310
//             DD DSN=SYS1.MACLIB,DISP=SHR                              OS000311
//ASM.SYSPUNCH DD DUMMY                                                 OS000400
//ASM.SYSIN DD DSN=OSDITTO.N5798CDA.V01M00,DISP=(SHR,KEEP),
//       DCB=(BLKSIZE=1600,RECFM=FB,LRECL=80)
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB                       OS378200
//LKED.SYSIN DD *                                                       OS378300
 NAME OSDITTOO(R)                      OBJECT CODE (NCAL)               OS378310
/*
//
//WTORSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               WR000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      WR000110
//PROCSTEP EXEC DITTODSR                                                WR000200
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               WR000300
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      WR000400
//             DD DSN=SYS1.MACLIB,DISP=SHR                              WR000500
//ASM.SYSPUNCH DD DUMMY                                                 WR000600
//ASM.SYSIN DD *                                                        WR000700
         TITLE '* * * * * *   WTOR SUB ROUTINE FOR OSDITTO * * * * *'   WR000800
         SPACE 20                                                       WR000900
*********************************************************************** WR001000
*                                                                     * WR001100
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * WR001200
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * WR001300
*                                                                     * WR001400
*********************************************************************** WR001500
         EJECT                                                          WR001600
*********************************************************************** WR001700
**********               WTORSUB IS CALLED FORM OSDITTO     *********** WR001800
*********************************************************************** WR001900
         SPACE 2                                                        WR002000
         ISEQ  75,80                                                    WR002100
WTORSUB  START                                                          WR002200
         SAVE  (14,12)                                                  WR002300
         LR    R2,RD                                                    WR002400
         BALR  R6,R0                                                    WR002500
         USING *,R6                                                     WR002600
         LA    RD,SAVEAREA                                              WR002700
         ST    RD,8(R2)            PTR TO MY S.A.                       WR002800
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 WR002900
         B     AROUND              BR BY COPYRIGHT                      WR003000
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               WR003100
         DC    C'08-15-75 VERS.1 MOD.0'                                 WR003200
AROUND   EQU   *                                                        WR003300
         L     R2,0(R1)                GET MSICCW ADDRESS               WR003400
         USING MAIN,R2                 ADDRESS MSICCW . . .             WR003500
         EJECT                                                          WR003600
*********************************************************************** WR003700
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** WR003800
*********************************************************************** WR003900
         SPACE 1                                                        WR004000
WRTCON   CLI   P,0                 USING STRING PARAMS                  WR004100
         BE    WRTCON1             NO,                                  WR004200
         MVC   CONIO(44),P1        YES, MOVE PARAM INTO READ AREA       WR004300
         MVC   P1(176),P2               PARAMS UP ONE                   WR004400
         IC    R0,P                DECREMENT                            WR004500
         BCTR  R0,R0                PARAMETER COUNTER                   WR004600
         STC   R0,P                                                     WR004700
         OC    CONIO(44),BLANKS                                         WR004800
         B     NORMRET             RETURN                               WR004900
WRTCON1  EQU   *                                                        WR005000
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       WR005100
         BO    RETIRPT                 B   CHKIRT                       WR005200
         MVC   CONIOMSG(72),CONIO      PRIME MSG AREA                   WR005300
         MVC   CONIO(80),BLANKS        CLEAR REPLY AREA                 WR005400
         MVI   SUBIOECB,X'00'          CLEAR ECB                        WR005500
         LA    R1,CONIOMSG         PRIME R1 AS BASE REG                 WR005600
         AH    R1,MSGLNGTH         INDEX R1 BY CURRENT MSG LENGTH       WR005700
         MVC   0(4,R1),WTORDESC    MOVE DESC INTO VAR POSITION          WR005800
         LH    R1,MSGLNGTH             ADD 4 TO MSGLNGTH                WR005900
         LA    R1,4(R1)                TO ALLOW FOR MSGLNGTH ADCON,FLAG WR006000
         STH   R1,WTORMSGL             STORE RESULT BACK                WR006100
         LA    R1,CONIO                GET CONIO ADR                    WR006200
         ST    R1,R1SAVE                                                WR006300
         MVC   CONIOADR(3),R1SAVE+1    FILL IN CONIO ADR                WR006400
         MVC   WTORREPL(1),REPLNGTH    PRIME REPLY LENGTH               WR006500
***************  COMMON WTOR ROUTINE  ********************************* WR006600
WTOR     WTOR  '60 CHAR.S-012345678901234567890123456789012345678901234XWR006700
               56789012345678901',CONIOADR,80,SUBIOECB,                XWR006800
               DESC=6,ROUTCDE=2                                         WR006900
WTORDESC EQU   *-6                 USE TO ADDRESS DESC & ROUTCDE        WR007000
WTORREPL EQU   WTOR+4              REPLY LENGTH                         WR007100
CONIOADR EQU   WTOR+5              CONIO ADDRESS                        WR007200
WTORMSGL EQU   WTOR+12             MSG   LENGTH                         WR007300
CONIOMSG EQU   WTOR+16             MSG AREA                             WR007400
*********************************************************************** WR007500
         WAIT  ECB=SUBIOECB            WAIT FOR REPLY                   WR007600
         OC    CONIO(80),BLANKS        FORCES  UPPER CASE IN REPLY AREA WR007700
         MVI   P,X'00'             SET PARAM STRING COUNTER = 0         WR007800
         EJECT                                                          WR007900
*********************************************************************** WR008000
*******************          RETURN MECHANISM      ******************** WR008100
*********************************************************************** WR008200
         SPACE 1                                                        WR008300
NORMRET  EQU   *                                                        WR008400
         LA    RF,0(0,0)               RC=0                             WR008500
         B     RETURN                                                   WR008600
RETIRPT  EQU   *                       B   CHKIRPT                      WR008700
         LA    RF,4(0,0)               RC = 4                           WR008800
RETURN   EQU   *                                                        WR008900
         L     RD,4(RD)                PRIME RD                         WR009000
         RETURN (14,12),RC=(15)                                         WR009100
         EJECT                                                          WR009200
*********************************************************************** WR009300
**********                 STORAGE AND EQUATES              *********** WR009400
*********************************************************************** WR009500
         SPACE 1                                                        WR009600
         DS    0F                                                       WR009700
SUBIOECB DC    F'0'                                                     WR009800
R1SAVE   DS    F                                                        WR009900
SAVEAREA DS    18F                                                      WR010000
         EJECT                                                          WR010100
         COPY  DITTODS1                                                 WR010200
         SPACE 1                                                        WR010300
         COPY  DITTODS2                                                 WR010400
         CSECT                                                          WR010500
         END   WTORSUB                                                  WR010600
/*                                                                      WR010700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              WR010800
//LKED.SYSIN DD *                                                       WR010900
 NAME WTORSUB(R)                                                        WR011000
/*                                                                      WR011100
//                                                                      WR011200
//WTOSUB   JOB ('A=SX82'),'PAS3 BRAMMER',                               WO011300
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      WO011400
//PROCSTEP EXEC DITTODSR                                                WO011500
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               WO011600
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      WO011700
//             DD DSN=SYS1.MACLIB,DISP=SHR                              WO011800
//ASM.SYSPUNCH DD DUMMY                                                 WO011900
//ASM.SYSIN DD *                                                        WO012000
         TITLE '* * * * * *   WTO  SUB ROUTINE FOR OSDITTO * * * * *'   WO012100
         SPACE 20                                                       WO012200
*********************************************************************** WO012300
*                                                                     * WO012400
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * WO012500
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * WO012600
*                                                                     * WO012700
*********************************************************************** WO012800
         EJECT                                                          WO012900
*********************************************************************** WO013000
**********               WTOSUB  IS CALLED FORM OSDITTO     *********** WO013100
*********************************************************************** WO013200
         SPACE 1                                                        WO013300
         ISEQ  75,80                                                    WO013400
WTOSUB   START                                                          WO013500
         SAVE  (14,12)                                                  WO013600
         LR    R2,RD                                                    WO013700
         BALR  R6,R0                                                    WO013800
         USING *,R6                                                     WO013900
         LA    RD,SAVEAREA                                              WO014000
         ST    RD,8(R2)            PTR TO MY S.A.                       WO014100
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 WO014200
         B     AROUND              BR BY COPYRIGHT                      WO014300
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               WO014400
         DC    C'08-15-75 VERS.1 MOD.0'                                 WO014500
AROUND   EQU   *                                                        WO014600
         L     R2,0(R1)                GET MSICCW ADDRESS               WO014700
         USING MAIN,R2                 ADDRESS MSICCW . . .             WO014800
         EJECT                                                          WO014900
*********************************************************************** WO015000
**********               CONSOLE - WRITE ONLY  (WTO)        *********** WO015100
*********************************************************************** WO015200
         SPACE 1                                                        WO015300
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       WO015400
         BO    RETIRPT                 B   CHKIRT                       WO015500
         MVC   WTOCONIO(72),CONIO      PRIME MSG AREA                   WO015600
         LA    R1,WTOCONIO         PRIME R1 AS BASE REG                 WO015700
         AH    R1,MSGLNGTH         INDEX R1 BY CURRENT MSG LENGTH       WO015800
         MVC   0(4,R1),WTODESCR    MOVE DESC INTO VAR POSITION          WO015900
         LH    R1,MSGLNGTH             ADD 4 TO MSGLNGTH                WO016000
         LA    R1,4(R1)                TO ALLOW FOR MSGLNGTH ADCON,FLAG WO016100
         STH   R1,WTOLNGTH             ST RESULT IN WTO LVE MSG INTACT  WO016200
***************  COMMON WTO  ROUTINE  ********************************* WO016300
WTO      WTO   '60 CHAR.S 012345678901234567890123456789012345678901234XWO016400
               56789012345678901',                                     XWO016500
               DESC=6,ROUTCDE=2                                         WO016600
WTODESCR EQU   *-6                 USE TO ADDRESS DESC & ROUTCDE        WO016700
WTOLNGTH EQU   WTO+4               MSGLNGTH                             WO016800
WTOCONIO EQU   WTO+8               MSG AREA                             WO016900
*********************************************************************** WO017000
         EJECT                                                          WO017100
*********************************************************************** WO017200
*******************          RETURN MECHANISM      ******************** WO017300
*********************************************************************** WO017400
         SPACE 1                                                        WO017500
RETNORM  EQU   *                       RC = 0                           WO017600
         LA    RF,0(0,0)               RC=0                             WO017700
         B     RETURN                                                   WO017800
RETIRPT  EQU   *                       B   CHKIRPT                      WO017900
         LA    RF,4(0,0)               RC = 4                           WO018000
RETURN   EQU   *                                                        WO018100
         L     RD,4(RD)                PRIME RD                         WO018200
         RETURN (14,12),RC=(15)                                         WO018300
         EJECT                                                          WO018400
*********************************************************************** WO018500
**********                 STORAGE AND EQUATES              *********** WO018600
*********************************************************************** WO018700
         SPACE 1                                                        WO018800
         DS    0F                                                       WO018900
SAVEAREA DS    18F                                                      WO019000
         EJECT                                                          WO019100
         COPY  DITTODS1                                                 WO019200
         SPACE 1                                                        WO019300
         COPY  DITTODS2                                                 WO019400
         CSECT                                                          WO019500
         END   WTOSUB                                                   WO019600
/*                                                                      WO019700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              WO019800
//LKED.SYSIN DD *                                                       WO019900
 NAME WTOSUB(R)                                                         WO020000
/*                                                                      WO020100
//                                                                      WO020200
//CNCDSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               CN020300
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      CN020400
//PROCSTEP EXEC DITTODSR                                                CN020500
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               CN020600
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      CN020700
//             DD DSN=SYS1.MACLIB,DISP=SHR                              CN020800
//ASM.SYSPUNCH DD DUMMY                                                 CN020900
//ASM.SYSIN DD *                                                        CN021000
         TITLE '* * * * * *  CNCD  SUB ROUTINE FOR OSDITTO * * * * *'   CN021100
         SPACE 20                                                       CN021200
*********************************************************************** CN021300
*                                                                     * CN021400
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * CN021500
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * CN021600
*                                                                     * CN021700
*********************************************************************** CN021800
         EJECT                                                          CN021900
*********************************************************************** CN022000
**********              CNCDSUB  IS CALLED FORM OSDITTO     *********** CN022100
*********************************************************************** CN022200
         SPACE 1                                                        CN022300
         ISEQ  75,80                                                    CN022400
CNCDSUB  START                                                          CN022500
         SAVE  (14,12)                                                  CN022600
         LR    R2,RD                                                    CN022700
         BALR  R6,R0                                                    CN022800
         USING *,R6                                                     CN022900
         LA    RD,SAVEAREA                                              CN023000
         ST    RD,8(R2)            PTR TO MY S.A.                       CN023100
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 CN023200
         B     AROUND              BR BY COPYRIGHT                      CN023300
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               CN023400
         DC    C'08-15-75 VERS.1 MOD.0'                                 CN023500
AROUND   EQU   *                                                        CN023600
         L     R2,0(R1)                GET  MSICCW ADR                  CN023700
         USING MAIN,R2                 ADDRESS MSICCW . . .             CN023800
         EJECT                                                          CN023900
*********************************************************************** CN024000
**********               CKBG CONTINUES CNTRLCD SCAN        *********** CN024100
*********************************************************************** CN024200
         SPACE 1                                                        CN024300
CKBGENT  CLC   BG,0(RB)            PARAM = BEGIN ?                      CN024400
         BNE   CKEN                NO, BRANCH.                          CN024500
         LA    RB,6(RB)                                                 CN024600
         MVC   ADRSLO,0(RB)        YES, SAVE IT.                        CN024700
         LA    RB,5(RB)                                                 CN024800
         OI    CT,X'02'            SET BEGIN SW ON.                     CN024900
         B     BUMPIT                                                   CN025000
CKEN     CLC   EN,0(RB)            PARAM = END ?                        CN025100
         BNE   CKNB                NO, BRANCH                           CN025200
         LA    RB,4(RB)                                                 CN025300
         MVC   ADRSUP,0(RB)        YES, SAVE IT.                        CN025400
         LA    RB,5(RB)                                                 CN025500
         OI    CT,X'01'            SET END SW ON.                       CN025600
         B     BUMPIT                                                   CN025700
CKNB     CLC   NB,0(RB)            PARAM = NBLKS ?                      CN025800
         BNE   CKRS                NO, BRANCH.                          CN025900
         LA    RB,6(RB)                                                 CN026000
         LA    R1,4                MAX. LNGTH OF NBLKS VALUE            CN026100
         BAL   R8,RJUST            GO RT ADJUST                         CN026200
         MVC   HNB,0(RC)           VALUE IN HNB                         CN026300
         LA    R1,HNB              PRIME R1 FOR TSTNUM1                 CN026400
         LA    RC,4(R0)            SET RC TO MAX SIZE OF 4              CN026500
         BAL   R8,TSTNUM1          TEST FOR NUMERIC.                    CN026600
         B     BADNB                                                    CN026700
         MVC   HOLD+4(4),HNB       CHANGED TO HNB FOR NBLKS             CN026800
         BAL   R8,BINCVT           CONVERT TO BINARY                    CN026900
         STH   R1,BLCT             AND STORE.                           CN027000
         LTR   R1,R1               IS IT ZERO ?                         CN027100
         BZ    BADCTL              YES, INVALID                         CN027200
         OI    CT,X'20'            SET NBLKS SW ON.                     CN027300
         B     BUMPIT                                                   CN027400
CKRS     CLC   RS,0(RB)            PARAM = RECSIZE ?                    CN027500
         BNE   CKDT                NO, BRANCH.                          CN027600
         LA    RB,8(RB)                                                 CN027700
         CLI   0(RB),C'V'              VAR ?                            CN027800
         BE    CKRSV                   YES                              CN027900
         LA    R1,5                MAX. LNGTH OF RECSIZE VALUE          CN028000
         BAL   R8,RJUST            GO RT ADJUST                         CN028100
         MVC   HRS,0(RC)           VALUE IN HRS                         CN028200
         CLC   HRS,ZEROS               ZERO ?                           CN028300
         BNE   CKRSNM                  CHK NUMERIC                      CN028400
         MVI   HRS,C'X'                FAIL NUM IF ZERO                 CN028500
CKRSNM   LA    R1,HRS                                                   CN028600
         LA    RC,5                                                     CN028700
         BAL   R8,TSTNUM1                                               CN028800
         B     BADRS                   NOT NUM                          CN028900
         B     CKRSDN                                                   CN029000
CKRSV    EQU   *                                                        CN029100
         LA    R0,4                                                     CN029200
         STH   R0,HBF                                                   CN029300
         MVI   HRS,C'V'                                                 CN029400
         LA    RB,1(RB)                 BUMP BY V                       CN029500
CKRSDN   EQU   *                                                        CN029600
         OI    CT,X'10'            SET RECSIZE SW ON.                   CN029700
         B     BUMPIT                                                   CN029800
CKDT     CLC   DT,0(RB)            PARAM = DECKTYPE ?                   CN029900
         BNE   CKBF                NO, BRANCH.                          CN030000
         LA    RB,9(RB)                                                 CN030100
         MVC   DECKTYPE,0(RB)      YES, SAVE IT.                        CN030200
         LA    RB,3(RB)                                                 CN030300
         OI    CT,X'08'            SET DECKTYPE SW ON.                  CN030400
         B     BUMPIT                                                   CN030500
CKBF     CLC   BF,0(RB)            PARAM = BLKFACTOR ?                  CN030600
         BNE   CKSTAFT                 NO, BRANCH                       CN030700
         LA    RB,10(RB)                                                CN030800
         LA    R1,3                MAX. LNGTH OF BLKFACTOR              CN030900
         BAL   R8,RJUST            GO RT ADJUST                         CN031000
         MVC   HBF,0(RC)           VALUE IN HBF                         CN031100
         OI    CT,X'04'            SET BLKFACTOR SW ON.                 CN031200
         B     BUMPIT                                                   CN031300
CKSTAFT  CLC   STARTAFT,0(RB)      PARAM = STARTAFT ?                   CN031400
         BNE   CKSTKEY                 NO, BRANCH                       CN031500
         LA    RB,9(RB)                BUMP                             CN031600
         LA    R1,5                MAX. LNGTH OF RECSIZE VALUE          CN031700
         BAL   R8,RJUST            GO RT ADJUST                         CN031800
         MVC   HSA,0(RC)           VALUE IN HRS                         CN031900
         CLC   HSA,ZEROS               ZERO ?                           CN032000
         BNE   CKSANM                  CHK NUMERIC                      CN032100
         MVI   HSA,C'X'                FAIL NUM IF ZERO                 CN032200
CKSANM   LA    R1,HSA                                                   CN032300
         LA    RC,5                                                     CN032400
         BAL   R8,TSTNUM1                                               CN032500
         B     BADSA                   NOT NUM                          CN032600
         OI    CT1,X'10'               SET STARTAFT SW ON               CN032700
         B     BUMPIT                                                   CN032800
CKSTKEY  CLC   STARTKEY,0(RB)      PARAM = STARTKEY ?                   CN032900
         BNE   CKNLREC                 NO, BRANCH                       CN033000
         LA    RB,9(RB)                BUMP                             CN033100
         CLC   CAP,0(RB)               C' ?                             CN033200
         BE    KHARIN                                                   CN033300
         CLC   XAP,0(RB)               X' ?                             CN033400
         BE    KEXIN                                                    CN033500
         CLI   0(RB),C''''             ' ?                              CN033600
         BE    KHARIN0                                                  CN033700
         B     KHARIN2                 ASSUME STARTKEY=XXXX . . . ,     CN033800
KEXIN    LA    RB,2(RB)                                                 CN033900
         LR    RC,RB                   PTR TO INPUT                     CN034000
         LA    R7,50                   MAX OF 50 HEX CHAR               CN034100
         LA    R1,XEXIO                PTR TO PACK AREA                 CN034200
         SR    R4,R4                   CLEAR HEX DIGIT CTR              CN034300
KLOP     CLC   QUOTES(1),0(RC)             STOP AT 1ST QUOTE            CN034400
         BE    KEXPACK                 END OF STARTKEY                  CN034500
         TM    0(RC),C'0'          HEX CHAR = 0-9 ?                     CN034600
         BO    KEND                YES, BRANCH.                         CN034700
         TM    0(RC),X'C0'         HEX CHAR = A-F ?                     CN034800
         BNO   BDKEX               NO, BAD HEX CHAR.                    CN034900
         NI    0(RC),X'0F'                                              CN035000
         CLI   0(RC),X'06'                                              CN035100
         BH    BDKEX                                                    CN035200
         TR    0(1,RC),ADTBL-1     SHIFT ZONE TO FORM 0X.               CN035300
KEND     EQU   *                                                        CN035400
         MVC   0(1,R1),0(RC)           MOVE TR DATA TO XEXIO            CN035500
         LA    RC,1(RC)                BUMP INPUT PTR                   CN035600
         LA    R1,1(R1)                BUMP XEXIO PTR                   CN035700
         LA    R4,1(R4)                BUMP HEX DIGIT CTR               CN035800
         BCT   R7,KLOP                                                  CN035900
KEXPACK  EQU   *                                                        CN036000
         ST    R4,SAVRN                ST HEX DIGIT CTR                 CN036100
         TM    SAVRN+3,X'01'           ODD # OF HEX DIGITS GIVEN ?      CN036200
         BNO   KEVEN                   NO                               CN036300
         BCTR  R4,0                    YES - DECR. BY 1 TO IGNORE ODD   CN036400
KEVEN    EQU   *                                                        CN036500
         SRL   R4,1                    DIV BY 2  STARTKEY LN BYTE CNT   CN036600
         LR    R7,R4                   PRIME R7 FOR DECCVT              CN036700
         BCTR  R4,0                    DECR. BY 1 FOR MVC CNT           CN036800
         STC   R4,KEYHEX+1             PLUG MVC                         CN036900
         MVI   ESW,X'FF'               ALLOW LEADING ZEROS              CN037000
         BAL   R8,DECCVT               CONVERT TO DEC                   CN037100
         MVC   HSTAKYLN(2),HOLDSEQ+6   GET DEC VALUE & SAVE             CN037200
         PACK  XEXIO+80(8),XEXIO(15)   PACK DATA                        CN037300
         PACK  XEXIO+87(8),XEXIO+14(15)    2 HEX POS. PER BYTE.         CN037400
         PACK  XEXIO+94(8),XEXIO+28(15)                                 CN037500
         PACK  XEXIO+101(8),XEXIO+42(15)                                CN037600
         PACK  XEXIO+108(8),XEXIO+56(15)                                CN037700
KEYHEXS  LA    R8,HSTARTKY             PTR TO OUTPUT OF MOVE            CN037800
         LA    R1,XEXIO+80             PTR TO MOVE INPUT                CN037900
KEYHEX   MVC   0(1,R8),0(R1)           PACKED TO HSTARTKY               CN038000
         LA    RC,1(RC)                BUMP BY TRAILING '               CN038100
         B     KEYHEXDN                                                 CN038200
KHARIN0  EQU   *                                                        CN038300
         LA    RB,1(RB)                BUMP BY '                        CN038400
         B     KHARIN2                                                  CN038500
KHARIN   EQU   *                                                        CN038600
         LA    RB,2(RB)                BUMP BY                          CN038700
KHARIN2  EQU   *                                                        CN038800
         LA    R3,35                   MAX. LNTH                        CN038900
         LR    RC,RB                   PTR TO INPUT                     CN039000
KEYLOPS  LA    R8,HSTARTKY             PTR TO OUTPUT                    CN039100
KEYLOP   CLC   QUOTES(2),0(RC)         '' ?                             CN039200
         BE    KEYLOP1                 YES                              CN039300
         CLC   QUOTES(1),0(RC)         ' ?                              CN039400
         BE    KEYLOP2A                YES                              CN039500
         CLI   0(RC),C','              , ?                              CN039600
         BE    KEYLOP3                                                  CN039700
         CLI   0(RC),X'40'             BLANK ?                          CN039800
         BE    KEYLOP3                                                  CN039900
         B     KEYLOP2                 NO QUOTES (IMBEDDED OR END)      CN040000
KEYLOP1  LA    RC,1(RC)                BUMP BY 1ST OF 2 ''              CN040100
KEYLOP2  MVC   0(1,R8),0(RC)           MOVE 1 BYTE                      CN040200
         LA    RC,1(RC)                BUMP INPUT                       CN040300
         LA    R8,1(R8)                BUMP OUTPUT                      CN040400
         BCT   R3,KEYLOP               GO NEXT CHAR                     CN040500
KEYLOP2A EQU   *                                                        CN040600
         LA    RC,1(RC)                BUMP BY TRAILING '               CN040700
KEYLOP3  LA    R7,35                                                    CN040800
         SR    R7,R3                   STARTKEY LNTH                    CN040900
         MVI   ESW,X'FF'               ALLOW LEADING ZEROS              CN041000
         BAL   R8,DECCVT               CONVERT TO DEC                   CN041100
         MVC   HSTAKYLN(2),HOLDSEQ+6   GET DEC VALUE & SAVE             CN041200
KEYHEXDN OI    CT1,X'08'               STARTKEY SUBMITTED               CN041300
         LR    RB,RC                   UPDATE PTR                       CN041400
         B     BUMPIT                                                   CN041500
CKNLREC  CLC   NLRECS,0(RB)        PARAM = NLRECS ?                     CN041600
         BNE   CKSCAPOS                NO, BRANCH                       CN041700
         LA    RB,7(RB)                BUMP BY                          CN041800
         LA    R1,5                MAX. LNGTH OF NLRECS  VALUE          CN041900
         BAL   R8,RJUST            GO RT ADJUST                         CN042000
         MVC   HNR,0(RC)           VALUE IN HNR                         CN042100
         CLC   HNR,ZEROS               ZERO ?                           CN042200
         BNE   CKNRNM                  CHK NUMERIC                      CN042300
         MVI   HNR,C'X'                FAIL NUM IF ZERO                 CN042400
CKNRNM   LA    R1,HNR                                                   CN042500
         LA    RC,5                    MAX LN.                          CN042600
         BAL   R8,TSTNUM1                                               CN042700
         B     BADNR                   NOT NUM                          CN042800
         OI    CT1,X'04'               NLRECS SUBMITTED                 CN042900
         B     BUMPIT                                                   CN043000
CKSCAPOS CLC   SCANPOS,0(RB)           PARAM= SCANPOS ?                 CN043100
         BNE   CKARG                   NO                               CN043200
         LA    RB,8(RB)                BUMP BY                          CN043300
         LA    R1,5                    MAX. LNTH                        CN043400
         BAL   R8,RJUST                                                 CN043500
         MVC   HSCANPOS,0(RC)                                           CN043600
         LA    R1,HSCANPOS                                              CN043700
         LA    RC,5                                                     CN043800
         BAL   R8,TSTNUM1              CHK FOR NUMERIC                  CN043900
         B     BADSCAPO                NOT NUM                          CN044000
         OI    CT1,X'20'                                                CN044100
         B     BUMPIT                                                   CN044200
CKARG    CLC   ARGUMENT,0(RB)          PARAM = ARGUMENT                 CN044300
         BNE   CKSCNTY                                                  CN044400
         LA    RB,9(RB)                                                 CN044500
         CLC   CAP,0(RB)               C' ?                             CN044600
         BE    CHARIN                                                   CN044700
         CLC   XAP,0(RB)               X' ?                             CN044800
         BNE   BADCORX                                                  CN044900
HEXIN    LA    RB,2(RB)                                                 CN045000
         LR    RC,RB                   PTR TO INPUT                     CN045100
         LA    R7,50                   MAX OF 50 HEX CHAR               CN045200
         LA    R1,XEXIO                PTR TO PACK AREA                 CN045300
         SR    R4,R4                   CLEAR HEX DIGIT CTR              CN045400
HLOP     CLC   QUOTES(1),0(RC)             STOP AT 1ST QUOTE            CN045500
         BE    HEXPACK                 END OF ARG                       CN045600
         TM    0(RC),C'0'          HEX CHAR = 0-9 ?                     CN045700
         BO    HEND                YES, BRANCH.                         CN045800
         TM    0(RC),X'C0'         HEX CHAR = A-F ?                     CN045900
         BNO   BDHEX               NO, BAD HEX CHAR.                    CN046000
         NI    0(RC),X'0F'                                              CN046100
         CLI   0(RC),X'06'                                              CN046200
         BH    BDHEX                                                    CN046300
         TR    0(1,RC),ADTBL-1     SHIFT ZONE TO FORM 0X.               CN046400
HEND     EQU   *                                                        CN046500
         MVC   0(1,R1),0(RC)           MOVE TR DATA TO XEXIO            CN046600
         LA    RC,1(RC)                BUMP INPUT PTR                   CN046700
         LA    R1,1(R1)                BUMP XEXIO PTR                   CN046800
         LA    R4,1(R4)                BUMP HEX DIGIT CTR               CN046900
         BCT   R7,HLOP                                                  CN047000
HEXPACK  EQU   *                                                        CN047100
         ST    R4,SAVRN                ST HEX DIGIT CTR                 CN047200
         TM    SAVRN+3,X'01'           ODD # OF HEX DIGITS GIVEN ?      CN047300
         BNO   HEVEN                   NO                               CN047400
         BCTR  R4,0                    YES - DECR. BY 1 TO IGNORE ODD   CN047500
HEVEN    EQU   *                                                        CN047600
         SRL   R4,1                    DIV BY 2  SCAN ARG LN BYTE CNT   CN047700
         LR    R7,R4                   PRIME R7 FOR DECCVT              CN047800
         BCTR  R4,0                    DECR. BY 1 FOR MVC CNT           CN047900
         STC   R4,MOVHEX+1             PLUG MVC                         CN048000
         MVI   ESW,X'FF'               ALLOW LEADING ZEROS              CN048100
         BAL   R8,DECCVT               GO CONVERT SCAN ARG LN TO DEC    CN048200
         MVC   HSCANALN(2),HOLDSEQ+6   GET DEC VALUE & SAVE             CN048300
         PACK  XEXIO+80(8),XEXIO(15)   PACK DATA                        CN048400
         PACK  XEXIO+87(8),XEXIO+14(15)    2 HEX POS. PER BYTE.         CN048500
         PACK  XEXIO+94(8),XEXIO+28(15)                                 CN048600
         PACK  XEXIO+101(8),XEXIO+42(15)                                CN048700
         PACK  XEXIO+108(8),XEXIO+56(15)                                CN048800
MOVHEXS  LA    R8,SCARG                PTR TO OUTPUT OF MOVE            CN048900
         LA    R1,XEXIO+80             PTR TO MOVE INPUT                CN049000
MOVHEX   MVC   0(1,R8),0(R1)           PACKED TO SCARG                  CN049100
         B     MOVHEXDN                                                 CN049200
CHARIN   EQU   *                                                        CN049300
         LA    R3,35                   MAX. LNTH                        CN049400
         LA    RB,2(RB)                BUMP BY                          CN049500
         LR    RC,RB                   PTR TO INPUT                     CN049600
MOVLOPS  LA    R8,SCARG                PTR TO OUTPUT                    CN049700
MOVLOP   CLC   QUOTES(2),0(RC)         '' ?                             CN049800
         BE    MOVLOP1                 YES                              CN049900
         CLC   QUOTES(1),0(RC)         ' ?                              CN050000
         BE    MOVLOP3                 YES                              CN050100
         B     MOVLOP2                 NO QUOTES (IMBEDDED OR END)      CN050200
MOVLOP1  LA    RC,1(RC)                BUMP BY 1ST OF 2 ''              CN050300
MOVLOP2  MVC   0(1,R8),0(RC)           MOVE 1 BYTE                      CN050400
         LA    RC,1(RC)                BUMP INPUT                       CN050500
         LA    R8,1(R8)                BUMP OUTPUT                      CN050600
         BCT   R3,MOVLOP               GO NEXT CHAR                     CN050700
MOVLOP3  LA    R7,35                                                    CN050800
         SR    R7,R3                   SCAN ARG LNTH                    CN050900
         MVI   ESW,X'FF'               ALLOW LEADING ZEROS              CN051000
         BAL   R8,DECCVT               GO CONVERT SCAN ARG LN TO DEC    CN051100
         MVC   HSCANALN(2),HOLDSEQ+6   GET DEC VALUE & SAVE             CN051200
MOVHEXDN OI    CT1,X'40'               ARGUMENT SUBMITTED               CN051300
         LA    RC,1(RC)                BUMP BY TRAILING '               CN051400
         LR    RB,RC                   UPDATE PTR                       CN051500
         B     BUMPIT                                                   CN051600
CKSCNTY  CLC   SCANTYPE,0(RB)          PARAM = SCANTYPE                 CN051700
         BNE   CKMEM               NO, BRANCH.                          CN051800
         LA    RB,9(RB)                BUMP                             CN051900
         CLI   0(RB),C'D'                                               CN052000
         BE    CKSCNTY1                                                 CN052100
         CLI   0(RB),C'K'                                               CN052200
         BE    CKSCNTY1                                                 CN052300
         CLI   0(RB),C'E'                                               CN052400
         BE    CKSCNTY1                                                 CN052500
         B     BADSCNTY                                                 CN052600
CKSCNTY1 OI    CT1,X'80'               SCANTYPE SUBMITTED               CN052700
         MVC   HSCANTYP(1),0(RB)       SAVE SCANTYPE                    CN052800
         LA    RB,1(RB)                BUMP TO COMMA                    CN052900
         B     BUMPIT                                                   CN053000
CKMEM    CLC   MEMBER,0(RB)            PARAM = MEMBER ?                 CN053100
         BNE   CKDN                NO, BRANCH.                          CN053200
         LA    RB,7(RB)                BUMP PTR                         CN053300
         MVC   LOWLIM,BLANKS           CLEAR FOR MEMBNAME               CN053400
         LR    R3,RB               YES, SET UP TO SAVE VARIABLE         CN053500
         SR    RC,RC               LENGTH PARAMETER                     CN053600
         CLI   0(RB),C','          COMMA = END OF VALUE ?               CN053700
         BE    BUMPIT              YES, GO MOVE IT                      CN053800
         CLI   0(RB),C' '          BLANK = END OF VALUE ?               CN053900
         BE    BUMPIT              YES, GO MOVE IT                      CN054000
MBLOOP   LA    RB,1(RB)            BUMP PAST DATA ELEMENT               CN054100
         CLI   0(RB),C' '          IS NEXT POS. BLANK ?                 CN054200
         BE    FILLITMB            YES, GO MOVE DATA                    CN054300
         CLI   0(RB),C','          IS NEXT POS. A COMMA ?               CN054400
         BE    FILLITMB            YES, GO MOVE DATA                    CN054500
         LA    RC,1(RC)            NO, ADD 1 TO COUNTER                 CN054600
         B     MBLOOP              AND CHECK AGAIN                      CN054700
FILLITMB LA    R1,7(R0)            MAX FIELD LNGTH MINUS 1              CN054800
         CR    RC,R1               USER GIVE MORE THAN 8 POS. ?         CN054900
         BH    BADCTL              YES, BAD FORMAT                      CN055000
         STC   RC,MEMBMVC+1        NO, STORE LNGTH MINUS 1              CN055100
MEMBMVC  MVC   LOWLIM,0(R3)        IN MOVE INSTRUCTION                  CN055200
         B     BUMPIT                                                   CN055300
CKDN     CLC   DN,0(RB)            PARAM = DECKNAME ?                   CN055400
         BNE   BUMPIT              NO, BRANCH.                          CN055500
         LA    RB,9(RB)                                                 CN055600
         LR    R3,RB               YES, SET UP TO SAVE VARIABLE         CN055700
         SR    RC,RC               LENGTH PARAMETER                     CN055800
         CLI   0(RB),C','          COMMA = END OF VALUE ?               CN055900
         BE    BUMPIT              YES, GO MOVE IT                      CN056000
         CLI   0(RB),C' '          BLANK = END OF VALUE ?               CN056100
         BE    BUMPIT              YES, GO MOVE IT                      CN056200
DNLOOP   LA    RB,1(RB)            BUMP PAST DATA ELEMENT               CN056300
         CLI   0(RB),C' '          IS NEXT POS. BLANK ?                 CN056400
         BE    FILLIT              YES, GO MOVE DATA                    CN056500
         CLI   0(RB),C','          IS NEXT POS. A COMMA ?               CN056600
         BE    FILLIT              YES, GO MOVE DATA                    CN056700
         LA    RC,1(RC)            NO, ADD 1 TO COUNTER                 CN056800
         B     DNLOOP              AND CHECK AGAIN                      CN056900
FILLIT   LA    R1,7(R0)            MAX FIELD LNGTH MINUS 1              CN057000
         CR    RC,R1               USER GIVE MORE THAN 8 POS. ?         CN057100
         BH    BADCTL              YES, BAD FORMAT                      CN057200
         STC   RC,FILLMVC+1        NO, STORE LNGTH MINUS 1              CN057300
FILLMVC  MVC   DECKNAME,0(R3)      IN MOVE INSTRUCTION                  CN057400
         B     BUMPIT                                                   CN057500
RJUST    MVC   WK2,0(RB)           VARIABLE LENGTH VALUE IN WK2         CN057600
         LR    R0,R1               SAVE MAX. LNGTH OF VALUE             CN057700
         LA    RC,WK2+1            WORK REGISTER                        CN057800
RJUST1   CLI   0(RC),C' '          END OF PARAMETER ?                   CN057900
         BE    RTMOVE              YES                                  CN058000
         CLI   0(RC),C','          COMMA ?                              CN058100
         BE    RTMOVE              YES                                  CN058200
         LA    RB,1(RB)            BUMP CONTROL CARD SCAN POINTER       CN058300
         LA    RC,1(RC)            BUMP WORK POINTER                    CN058400
         BCT   R1,RJUST1           LOOP AND LOOK AGAIN                  CN058500
RTMOVE   SR    RC,R0               12 NOW POINTS TO BEGIN OF RT ADJ VAL CN058600
         LA    RB,1(RB)            BUMP CONTROL CARD SCAN TO DELIMITER  CN058700
         BR    R8                  RETURN                               CN058800
DDNMSCN  MVC   DDWK1,BLANKS        CLEAR WORK AREA                      CN058900
         MVC   DDWK1,0(RB)         MOVE IN VAR LEN DDNAME               CN059000
         LR    R0,R1               SAVE MAX VALUE OF 8                  CN059100
         LA    RC,DDWK1+1          PRIME SCAN PTR TO 2ND CHAR           CN059200
DDNMSCN1 CLI   0(RC),C' '          BLANK ?                              CN059300
         BE    DDSCNDON                                                 CN059400
         CLI   0(RC),C','          COMMA ?                              CN059500
         BE    DDSCNDON                                                 CN059600
         LA    RB,1(RB)            BUMP CTL CRD SCAN PTR                CN059700
         LA    RC,1(RC)            BUMP DDNAME  SCAN PTR                CN059800
         BCT   R1,DDNMSCN1         LOOP CTL                             CN059900
DDSCNDON LA    RB,1(RB)            BUMP CTL CRD SCAN TO DELIMITER       CN060000
         MVC   0(7,RC),BLANKS      SET RT PORTION OF DDNM TO BLANKS     CN060100
         BR    R8                                                       CN060200
         EJECT                                                          CN060300
*********************************************************************** CN060400
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** CN060500
*********************************************************************** CN060600
         SPACE 1                                                        CN060700
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                CN060800
         BCTR  R0,R0                   CONSOLE REPLY.                   CN060900
         MVC   CONIO+50(5),ZEROS                                        CN061000
         MVC   CONIO+55(10),CONIO                                       CN061100
         LA    R1,CONIO+54                                              CN061200
         AR    R1,RC                                                    CN061300
RTJUST   CLI   0(R1),C' '                                               CN061400
         BNE   MOVBAC                                                   CN061500
         BCTR  R1,R0                                                    CN061600
         BCT   R0,RTJUST                                                CN061700
MOVBAC   SR    R1,RC                                                    CN061800
         MVC   CONIO(10),1(R1)                                          CN061900
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    CN062000
TSTNUM1  TM    0(R1),X'F0'                                              CN062100
         BNO   0(R8)                   NOT NUMERIC                      CN062200
         LA    R1,1(R1)                                                 CN062300
         BCT   RC,TSTNUM1                                               CN062400
         B     4(R8)                                                    CN062500
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               CN062600
         CVB   R1,HOLD             RESULTS IN REG 1.                    CN062700
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  CN062800
         MVC   HOLD+1(7),HOLD                                           CN062900
         BR    R8                                                       CN063000
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                CN063100
         UNPK  HOLDSEQ,HOLD        IN REG 7                             CN063200
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          CN063300
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  CN063400
         MVC   HOLD+1(7),HOLD                                           CN063500
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       CN063600
         MVI   ESW,X'00'                                                CN063700
         BNE   0(R8)               NO, RETURN.                          CN063800
         LA    R1,HOLDSEQ                                               CN063900
         LA    R0,7                REPLACE WITH                         CN064000
DECLOP   CLI   0(R1),C'0'          BLANKS.                              CN064100
         BNE   0(R8)                                                    CN064200
         MVI   0(R1),C' '                                               CN064300
         LA    R1,1(R1)                                                 CN064400
         BCT   R0,DECLOP                                                CN064500
         BR    R8                                                       CN064600
         EJECT                                                          CN064700
*********************************************************************** CN064800
**********               PROGRAMMER ERROR MESSAGES          *********** CN064900
*********************************************************************** CN065000
         SPACE 1                                                        CN065100
BADSA    EQU   *                                                        CN065200
         MVC   CONIO(8),STARTAFT                                        CN065300
         B     NOTNUM                                                   CN065400
BADNR    EQU   *                                                        CN065500
         MVC   CONIO(08),BLANKS                                         CN065600
         MVC   CONIO(07),NLRECS                                         CN065700
         B     NOTNUM                                                   CN065800
BADNB    EQU   *                                                        CN065900
         MVC   CONIO(08),BLANKS                                         CN066000
         MVC   CONIO(06),NB                                             CN066100
         B     NOTNUM                                                   CN066200
BADRS    EQU   *                                                        CN066300
         MVC   CONIO(08),RS                                             CN066400
         B     NOTNUM                                                   CN066500
BADSCAPO EQU   *                                                        CN066600
         MVC   CONIO(08),SCANPOS                                        CN066700
NOTNUM   EQU   *                                                        CN066800
         MVC   CONIO+8(19),=C' ZERO OR NOT NUMERIC'                     CN066900
         MVI   MSLN,27                                                  CN067000
         B     TELPGMR                                                  CN067100
BADCORX  EQU   *                                                        CN067200
         MVC   CONIO(09),ARGUMENT                                       CN067300
         MVC   CONIO+9(20),=C' LACKING C'' OR X'' ID'                   CN067400
         MVI   MSLN,29                                                  CN067500
         B     TELPGMR                                                  CN067600
BDKEX    EQU   *                                                        CN067700
         MVC   CONIO(9),STARTKEY                                        CN067800
         B     BDHEX2                                                   CN067900
BDHEX    MVC   CONIO(09),ARGUMENT                                       CN068000
BDHEX2   EQU   *                                                        CN068100
         MVC   CONIO+9(21),=C' CONTAINS INVALID HEX'                    CN068200
         MVI   MSLN,30                                                  CN068300
         B     TELPGMR                                                  CN068400
BADSCNTY MVC   CONIO(09),SCANTYPE                                       CN068500
BADSCNT1 EQU   *                                                        CN068600
         MVC   CONIO+9(10),=C' NOT VALID'                               CN068700
         MVI   MSLN,19                                                  CN068800
         B     TELPGMR                                                  CN068900
         EJECT                                                          CN069000
*********************************************************************** CN069100
*******************          RETURN MECHANISM      ******************** CN069200
*********************************************************************** CN069300
         SPACE 1                                                        CN069400
BUMPIT   EQU   *                                                        CN069500
         LA    RF,0(0,0)               RC=0                             CN069600
         B     RETURN                                                   CN069700
BADCTL   EQU   *                                                        CN069800
         LA    RF,4(0,0)               RC=4                             CN069900
         B     RETURN                                                   CN070000
TELPGMR  EQU   *                                                        CN070100
         MVI   FLIFLOSW,1              SET FOR DRS PRNT                 CN070200
         LA    RF,8(0,0)               RC=8                             CN070300
RETURN   EQU   *                                                        CN070400
         L     RD,4(RD)                PRIME RD                         CN070500
RETMAC   RETURN (14,10),RC=(15)        SAVE R11                         CN070600
         EJECT                                                          CN070700
*********************************************************************** CN070800
**********                 STORAGE AND EQUATES              *********** CN070900
*********************************************************************** CN071000
         SPACE 1                                                        CN071100
         DS    0F                                                       CN071200
SAVRN    DS    F                       ST A REG HERE                    CN071300
SAVEAREA DS    18F                                                      CN071400
WK1      DC    CL6'000000'             HI ORDER 0'S FOR RT. JUSTIFY     CN071500
WK2      DS    CL6                     LOW ORDER WORK AREA              CN071600
MEMBER   DC    CL7'MEMBER='            KEYWORD                          CN071700
SCANPOS  DC    CL8'SCANPOS='                                            CN071800
ARGUMENT DC    CL9'ARGUMENT='                                           CN071900
SCANTYPE DC    CL9'SCANTYPE='                                           CN072000
STARTAFT DC    CL9'STARTAFT='                                           CN072100
STARTKEY DC    CL9'STARTKEY='                                           CN072200
NLRECS   DC    CL7'NLRECS='                                             CN072300
CAP      DC    CL2'C'''                C'                               CN072400
XAP      DC    CL2'X'''                X'                               CN072500
QUOTES   DC    CL2''''''               ''                               CN072600
XEXIO    DS    CL132                                                    CN072700
         B     HEXIN                                                    CN072800
ADTBL    DC    X'0A0B0C0D0E0F'                                          CN072900
         EJECT                                                          CN073000
         COPY  DITTODS1                                                 CN073100
         SPACE 1                                                        CN073200
         COPY  DITTODS2                                                 CN073300
         CSECT                                                          CN073400
         END   CNCDSUB                                                  CN073500
/*                                                                      CN073600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              CN073700
//LKED.SYSIN DD *                                                       CN073800
 NAME CNCDSUB(R)                                                        CN073900
/*                                                                      CN074000
//                                                                      CN074100
//FUNCSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               FU074200
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      FU074300
//PROCSTEP EXEC DITTODSR                                                FU074400
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               FU074500
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      FU074600
//             DD DSN=SYS1.MACLIB,DISP=SHR                              FU074700
//ASM.SYSPUNCH DD DUMMY                                                 FU074800
//ASM.SYSIN DD *                                                        FU074900
         TITLE '* * * * * *   FUNC SUB ROUTINE FOR OSDITTO * * * * *'   FU075000
         SPACE 20                                                       FU075100
*********************************************************************** FU075200
*                                                                     * FU075300
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * FU075400
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * FU075500
*                                                                     * FU075600
*********************************************************************** FU075700
         EJECT                                                          FU075800
*********************************************************************** FU075900
**********               FUNCSUB IS CALLED FORM OSDITTO     *********** FU076000
*********************************************************************** FU076100
         SPACE 2                                                        FU076200
         ISEQ  75,80                                                    FU076300
FUNCSUB  START                                                          FU076400
         LR    RD,R5                   PRIME RD                         FU076500
         SAVE  (14,12)                                                  FU076600
         LR    R2,RD                                                    FU076700
         BALR  R6,R0                                                    FU076800
         USING *,R6                                                     FU076900
         LA    RD,SAVEAREA                                              FU077000
         ST    RD,8(R2)            PTR TO MY S.A.                       FU077100
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 FU077200
         B     AROUND              BR BY COPYRIGHT                      FU077300
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               FU077400
         DC    C'08-15-75 VERS.1 MOD.0'                                 FU077500
AROUND   EQU   *                                                        FU077600
         L     R2,0(R1)                GET  MSICCW ADR                  FU077700
         USING MAIN,R2                 ADDRESS MSICCW . . .             FU077800
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           FU077900
         EJECT                                                          FU078000
*********************************************************************** FU078100
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** FU078200
*********************************************************************** FU078300
         SPACE 1                                                        FU078400
LOOKUP   LA    R5,FUNCT            FUNCTION TABLE POINTER IN R5.        FU078500
         LA    RF,12                   FIRST VALID FUNC IS RC = 12      FU078600
         CLI   FUNCOD+2,C' '           BLANK - ONLY 2 CHAR IN FUNCTION  FU078700
         BNE   LKLOOP                  NO, SKIP NEXT INSTR.             FU078800
         MVI   FUNCOD+2,C'U'       OVERLAY POS 3 OP CODE IF BLANK       FU078900
LKLOOP   EQU   *                                                        FU079000
         CLC   FUNCOD,0(R5)        OP CODE MATCH FUNCTION TABLE ?       FU079100
         BE    LKBR                    YES, LOOK FOR BR OR RET          FU079200
         LA    RF,4(RF)                BUMP RC FOR B TAB IN OSDITTO     FU079300
         LA    R5,8(R5)            BUMP INDEX                           FU079400
         CLI   0(R5),X'FF'         END OF TABLE ?                       FU079500
         BE    RETR8                   RETURN WITH R8 AS BRANCH         FU079600
         B     LKLOOP              NO, LOOP FOR NEXT LOOK.              FU079700
LKBR     EQU   *                                                        FU079800
         CLC   4(4,R5),ZERO            DO WE RETURN                     FU079900
         BE    RETURN                  YES, VALID FUNCTION IN OSDITTO   FU080000
         B     4(R5)                   NO, VALID FUNCTION LINK HERE     FU080100
         EJECT                                                          FU080200
*********************************************************************** FU080300
**********         LINKAGE TO NEW FUNCTIONS FROM FUNCSUB    *********** FU080400
*********************************************************************** FU080500
         SPACE 1                                                        FU080600
LST      EQU   *                                                        FU080700
         MVC   LNKNAME,=C'DITTOLST'   IEHLIST MODULE                    FU080800
         B     LINKALL                                                  FU080900
PGM      EQU   *                                                        FU081000
         MVC   LNKNAME,=C'DITTOPGM'    IEHPROGM MODULE                  FU081100
         B     LINKALL                                                  FU081200
PDS      EQU   *                                                        FU081300
         MVC   LNKNAME,=C'DITTOPDS'    IEBPTPCH MODULE                  FU081400
         B     LINKALL                                                  FU081500
QV       EQU   *                                                        FU081600
         MVC   LNKNAME,=C'DITTOQV '    QSAM VSAM MODULE                 FU081700
         B     LINKALL                                                  FU081800
DAS      EQU   *                                                        FU081900
         MVC   LNKNAME,=C'DITTODAS'    IEHDASDR MODULE                  FU082000
         B     LINKALL                                                  FU082100
         EJECT                                                          FU082200
*********************************************************************** FU082300
**************     PREPARE LINK EPLOC FIELD            **************** FU082400
*********************************************************************** FU082500
         SPACE 1                                                        FU082600
LINKALL  EQU   *                                                        FU082700
         LA    R1,PARM                 MSICCW                           FU082800
         LINK  EPLOC=LNKNAME                                            FU082900
         B     LINKRET(RF)             B INTO B TABLE                   FU083000
LINKRET  B     RETNORM                                                  FU083100
         B     RETR8                   FILLER - WILL NOT BE USED        FU083200
         B     RETIRPT                                                  FU083300
PARM     DC    A(0)                    STORE MSICCW ADR HERE            FU083400
         EJECT                                                          FU083500
*********************************************************************** FU083600
*******************          RETURN MECHANISM      ******************** FU083700
*********************************************************************** FU083800
         SPACE 1                                                        FU083900
RETNORM  EQU   *                       RC = 0    B     CONSOLE          FU084000
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           FU084100
         B     RETURN                                                   FU084200
RETR8    EQU   *                       RC = 4    B     0(R8)            FU084300
         LA    RF,4(0,0)               RC = 4 - INVALID FUNCTION        FU084400
         B     RETURN                                                   FU084500
RETIRPT  EQU   *                       RC = 8    B      CHKIRPT         FU084600
         LA    RF,8                    RC = 8 - INTERRUPTED FUNCTION    FU084700
RETURN   EQU   *                                                        FU084800
         L     RD,4(RD)                PRIME RD                         FU084900
         RETURN (14,12),RC=(15)                                         FU085000
         EJECT                                                          FU085100
*********************************************************************** FU085200
**********         FUNCTION CODE TABLE FOR FUNCSUB          *********** FU085300
*********************************************************************** FU085400
         SPACE 1                                                        FU085500
FUNCT    DC    C'CCU '                                                  FU085600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU085700
         DC    C'CPU '                                                  FU085800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU085900
         DC    C'CTU '                                                  FU086000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU086100
         DC    C'CTS '                                                  FU086200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU086300
         DC    C'TCU '                                                  FU086400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU086500
         DC    C'TPU '                                                  FU086600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU086700
         DC    C'TPD '                                                  FU086800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU086900
         DC    C'TDU '                                                  FU087000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU087100
         DC    C'TDD '                                                  FU087200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU087300
         DC    C'TPV '                                                  FU087400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU087500
         DC    C'TDV '                                                  FU087600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU087700
         DC    C'TTU '                                                  FU087800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU087900
         DC    C'WTM '                                                  FU088000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU088100
         DC    C'FSF '                                                  FU088200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU088300
         DC    C'BSF '                                                  FU088400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU088500
         DC    C'FSR '                                                  FU088600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU088700
         DC    C'BSR '                                                  FU088800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU088900
         DC    C'REW '                                                  FU089000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU089100
         DC    C'DSE '                                                  FU089200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU089300
         DC    C'DDU '                                                  FU089400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU089500
         DC    C'DRL '                                                  FU089600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU089700
         DC    C'DID '                                                  FU089800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU089900
         DC    C'EOJ '                                                  FU090000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU090100
         DC    C'CCS '                                                  FU090200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU090300
         DC    C'RUN '                                                  FU090400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU090500
         DC    C'CDU '                                                  FU090600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU090700
         DC    C'CCL '                                                  FU090800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU090900
         DC    C'INT '                                                  FU091000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU091100
         DC    C'ERT '                                                  FU091200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU091300
         DC    C'TRL '                                                  FU091400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU091500
         DC    C'TRS '                                                  FU091600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU091700
         DC    C'DRS '                                                  FU091800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU091900
         DC    C'DDD '                                                  FU092000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU092100
         DC    C'EOF '                                                  FU092200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU092300
         DC    C'SDU '                                                  FU092400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU092500
         DC    C'SDD '                                                  FU092600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU092700
         DC    C'DPU '                                                  FU092800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU092900
         DC    C'DPD '                                                  FU093000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU093100
         DC    C'SPU '                                                  FU093200
         DC    AL4(0)                  NO BR IN THIS MODULE             FU093300
         DC    C'SPD '                                                  FU093400
         DC    AL4(0)                  NO BR IN THIS MODULE             FU093500
         DC    C'SRS '                                                  FU093600
         DC    AL4(0)                  NO BR IN THIS MODULE             FU093700
         DC    C'XXX '                                                  FU093800
         DC    AL4(0)                  NO BR IN THIS MODULE             FU093900
         DC    C'TTR '                                                  FU094000
         DC    AL4(0)                  NO BR IN THIS MODULE             FU094100
         DC    C'LCU '                 LISTCTLG                         FU094200
         B     LST                                                      FU094300
         DC    C'LPU '                 LISTPDS                          FU094400
         B     LST                                                      FU094500
         DC    C'LVU '                 LISTVTOC                         FU094600
         B     LST                                                      FU094700
         DC    C'LSU '                 LIST SPACE ON VOLUME             FU094800
         B     LST                                                      FU094900
         DC    C'CAT '                 CATLG                            FU095000
         B     PGM                                                      FU095100
         DC    C'UNC '                 UNCATLG                          FU095200
         B     PGM                                                      FU095300
         DC    C'SCR '                 SCRATCH                          FU095400
         B     PGM                                                      FU095500
         DC    C'REN '                 RENAME                           FU095600
         B     PGM                                                      FU095700
         DC    C'PRT '                 PRINT                            FU095800
         B     PDS                                                      FU095900
         DC    C'PUN '                 PUNCH                            FU096000
         B     PDS                                                      FU096100
         DC    C'DUM '                 DUMP                             FU096200
         B     DAS                     DASDR                            FU096300
         DC    C'RES '                 RESTORE                          FU096400
         B     DAS                     DASDR                            FU096500
         DC    C'CQU '                 CARD TO QSAM                     FU096600
         B     QV                      QSAM VSAM MODULE                 FU096700
         DC    C'CQS '                 CARD TO QSAM WITH RESEQ          FU096800
         B     QV                      QSAM VSAM MODULE                 FU096900
         DC    C'QCU '                 QSAM TO CARD                     FU097000
         B     QV                      QSAM VSAM MODULE                 FU097100
         DC    C'QPU '                 QSAM TO PRINT                    FU097200
         B     QV                      QSAM VSAM MODULE                 FU097300
         DC    C'QDU '                 QSAM TO PRINT                    FU097400
         B     QV                      QSAM VSAM MODULE                 FU097500
         DC    C'VDU '                 VSAM TO PRINT                    FU097600
         B     QV                      QSAM VSAM MODULE                 FU097700
         DC    C'VPU '                 VSAM TO PRINT                    FU097800
         B     QV                      QSAM VSAM MODULE                 FU097900
         DC    C'QQU '                 QSAM TO QSAM                     FU098000
         B     QV                      QSAM VSAM MODULE                 FU098100
         DC    X'FF'                                                    FU098200
         EJECT                                                          FU098300
*********************************************************************** FU098400
*******************          STORAGE AND EQUATES   ******************** FU098500
*********************************************************************** FU098600
         SPACE 1                                                        FU098700
         DS    0F                                                       FU098800
ZERO     DC    AL4(0)                                                   FU098900
SAVEAREA DS    18F                                                      FU099000
LNKNAME  DC    CL8'LNKNAME'           MOVE NAME HERE                    FU099100
         EJECT                                                          FU099200
         COPY  DITTODS1                                                 FU099300
         SPACE 1                                                        FU099400
         COPY  DITTODS2                                                 FU099500
         CSECT                                                          FU099600
         END   FUNCSUB                                                  FU099700
/*                                                                      FU099800
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              FU099900
//LKED.SYSIN DD *                                                       FU100000
 NAME FUNCSUB(R)                                                        FU100100
/*                                                                      FU100200
//                                                                      FU100300
//DISKOPEN JOB ('A=SX82'),'PAS3 BRAMMER',                               DK100400
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      DK100500
//PROCSTEP EXEC DITTODSR                                                DK100600
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               DK100700
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      DK100800
//             DD DSN=SYS1.MACLIB,DISP=SHR                              DK100900
//ASM.SYSPUNCH DD DUMMY                                                 DK101000
//ASM.SYSIN DD *                                                        DK101100
         TITLE '* * * * * *  DISK OPEN ROUTINE FOR OSDITTO * * * * *'   DK101200
         SPACE 20                                                       DK101300
*********************************************************************** DK101400
*                                                                     * DK101500
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * DK101600
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * DK101700
*                                                                     * DK101800
*********************************************************************** DK101900
         EJECT                                                          DK102000
*********************************************************************** DK102100
**********              DISKOPEN IS CALLED FORM OSDITTO     *********** DK102200
*********************************************************************** DK102300
         SPACE 1                                                        DK102400
         ISEQ  75,80                                                    DK102500
DISKOPEN START                                                          DK102600
         SAVE  (14,12)                                                  DK102700
         LR    R2,RD                                                    DK102800
         BALR  R6,R0                                                    DK102900
         USING *,R6                                                     DK103000
         LA    RD,SAVEAREA                                              DK103100
         ST    RD,8(R2)            PTR TO MY S.A.                       DK103200
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 DK103300
         B     AROUND              BR BY COPYRIGHT                      DK103400
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               DK103500
         DC    C'08-15-75 VERS.1 MOD.0'                                 DK103600
AROUND   EQU   *                                                        DK103700
         L     R2,0(R1)                GET MSICCW ADDRESS               DK103800
         USING MAIN,R2                 ADDRESS MSICCW . . .             DK103900
         EJECT                                                          DK104000
*********************************************************************** DK104100
**********               CHECK FOR OPEN AND OPEN IF NEEDED  *********** DK104200
*********************************************************************** DK104300
         SPACE 1                                                        DK104400
         TM    DSKDCB+48,X'10'         OPEN OK ?                        DK104500
         BO    DKINDONE            YES                                  DK104600
         LA    R3,DSKDCB               USE R3 IN OPEN (DCB IN DSECT)    DK104700
         OPEN  ((3),(INOUT))                                            DK104800
         TM    DSKDCB+48,X'10'         OPEN OK ?                        DK104900
         BNO   DKOPFAIL                NO                               DK105000
CKDSKDEV L     R1,DSKDCB+44            PTR TO DEB AFTER OPEN            DK105100
         L     R3,32(R1)               PTR TO UCB AFTER OPEN            DK105200
         MVC   EXTNTCNT(1),16(R1)  SAVE EXTENT CNT FIELD OF DEB         DK105300
         LA    R1,32(R1)           BUMP R1 TO DASD SECTION OF DEB       DK105400
         ST    R1,DKDEBADR             SAVE DEB XTNT PTR                DK105500
         MVC   DKUCB(3),13(R3)         GET UCB UNITNAME                 DK105600
         MVC   DEVH+8(3),DKUCB         MOVE UCB TO HDG                  DK105700
         MVC   DEVH+13(8),DSKINDD      'DISKIN  '                       DK105800
         DEVTYPE DSKINDD,DKDEVTYP,DEVTAB                                DK105900
         B     DEVTRET(RF)             USE RET CODE                     DK106000
DEVTRET  B     DEVTOK                  RC=0                             DK106100
         B     DDMISS                  RC=4                             DK106200
         B     PGMERR                  RC=8                             DK106300
DEVTOK   EQU   *                                                        DK106400
         LH    R1,DSKCYL               GET DEVT CYL                     DK106500
         BCTR  R1,0                    DECR. BY 1                       DK106600
         STH   R1,HWORK                SAVE IN HW                       DK106700
         MVC   DSKMAXC(2),HWORK        PLUG TABLE                       DK106800
         LH    R1,DSKTRK               GET DEVT TRK                     DK106900
         BCTR  R1,0                    DECR. BY 1                       DK107000
         STC   R1,DSKMAXH              PLUG TABLE                       DK107100
         MVC   DSKUCBT(1),DSKTYPE      PLUG TABLE                       DK107200
         CLI   DSKCLASS,X'20'      IS DISKIN DASD DEVICE ?              DK107300
         BE    DASD                YES                                  DK107400
         MVC   CONIO(23),DVTYPMSG  NO, MOVE IN MSG                      DK107500
         MVC   CONIO(8),DSKINDD    MOVE IN DDNAME                       DK107600
         MVC   CONIO+12(4),=C'DASD'                                     DK107700
         LA    R3,DSKDCB               USE R3 IN OPEN (DCB IN DSECT)    DK107800
         CLOSE ((3))                                                    DK107900
         B     TELUSER                 ISSUE MSG IN OSDITTO             DK108000
DKOPFAIL EQU   *                                                        DK108100
         MVC   CONIO(8),DSKINDD        MOVE IN DDNAME                   DK108200
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 DK108300
         MVI   MSLN,23                                                  DK108400
         B     TELUSER                 ISSUE MSG IN OSDITTO             DK108500
BADUCBDK EQU   *                                                        DK108600
         MVC   CONIO(23),=C'DEVICE NOT VALID DASD  '                    DK108700
         B     TELUSER                 ISSUE MSG IN OSDITTO             DK108800
DDMISS   EQU   *                                                        DK108900
         MVC   CONIO(23),=C'DDNAME DISKIN MISSING  '                    DK109000
         B     TELUSER                 ISSUE MSG IN OSDITTO             DK109100
PGMERR   EQU   *                                                        DK109200
         MVC   CONIO(23),=C'DEVTYPE MACRO FAILED   '                    DK109300
TELUSER  EQU   *                                                        DK109400
         LA    RF,4                    RC=4                             DK109500
         B     RETURN                                                   DK109600
DASD     EQU   *                                                        DK109700
*        FALL THROUGH                                                   DK109800
         EJECT                                                          DK109900
*********************************************************************** DK110000
**********          DISK CARACTERISTICS ARE DETER-          *********** DK110100
**********          MINED BY THIS ROUTINE AND               *********** DK110200
**********          PLACED IN THE HEADING FOR SYPRINT       *********** DK110300
*********************************************************************** DK110400
         SPACE 1                                                        DK110500
DISKCHAR EQU   *                                                        DK110600
         LA    RB,DISKTABL         LOAD DISK SUPPORT TABLE              DK110700
DSKCHK   CLI   0(RB),X'FF'         END OF TABLE ?                       DK110800
         BE    BADUCBDK            YES, BR INTO BADUCB CODE             DK110900
         CLC   DSKTYPE(1),4(RB)    UCB    DEVICE TYPE CODE MATCH TABLE? DK111000
         BE    DSKHIT              YES,                                 DK111100
         LA    RB,8(RB)            NO, BUMP TO NEXT ENTRY               DK111200
         B     DSKCHK                ENTRY & CHECK AGAIN                DK111300
DSKHIT   EQU   *                                                        DK111400
         MVC   GATRK+10(4),0(RB)   SET DEVICE NAME IN                   DK111500
         MVC   BPTRK+10(4),0(RB)     HEADINGS                           DK111600
         MVC   ENDHD,7(RB)         HEX VALUE - UPPER HEAD               DK111700
         MVC   UPPERC(2),5(RB)         END CYL. ADDRESS - HEX           DK111800
         MVC   UPPERH+1(1),7(RB)       END HD . ADDRESS - HEX           DK111900
DKINDONE EQU   *                                                        DK112000
         MVC   HH2(22),DEVH            DEVICE HDG                       DK112100
         MVC   HH2+22(24),DSKH     CYL AND TRK HEADING                  DK112200
*        FALL THROUGH                                                   DK112300
         EJECT                                                          DK112400
*********************************************************************** DK112500
*******************          RETURN MECHANISM      ******************** DK112600
*********************************************************************** DK112700
         SPACE 1                                                        DK112800
RETNORM  EQU   *                       RC = 0                           DK112900
         LA    RF,0(0,0)               RC=0                             DK113000
RETURN   EQU   *                                                        DK113100
         L     RD,4(RD)                PRIME RD                         DK113200
         RETURN (14,12),RC=(15)                                         DK113300
         EJECT                                                          DK113400
*********************************************************************** DK113500
**********            DISK CHARACTERISTICS TABLE            *********** DK113600
**********     THE FOLLOWING TABLE PROVIDES THE CAPABILITY  *********** DK113700
**********     TO SUPPORT EXISTING & NEW DASD DEVICES.      *********** DK113800
**********     TABLE ELEMENTS ARE USED TO ESTABLISH         *********** DK113900
**********     UPPER SEEK LIMIT EDITING, AND FOR PRNT HDGS. *********** DK114000
*********************************************************************** DK114100
         SPACE 1                                                        DK114200
DISKTABL DS    0CL1                                                     DK114300
DSKDEV1  DS    0CL8                2311 ELEMENTS                        DK114400
         DC    CL4'2311'                 DEVICE NAME                    DK114500
         DC    XL1'01'                   UCB DEVICE TYPE                DK114600
         DC    AL2(202)                  MAXIMUM CYLINDER NUMBER        DK114700
         DC    AL1(09)                   MAXIMUM HEAD NUMBER            DK114800
DSKDEV2  DS    0CL8                2314 ELEMENTS                        DK114900
         DC    CL4'2314'                 DEVICE NAME                    DK115000
         DC    XL1'08'                   UCB DEVICE TYPE                DK115100
         DC    AL2(202)                  MAXIMUM CYLINDER NUMBER        DK115200
         DC    AL1(19)                   MAXIMUM HEAD NUMBER            DK115300
DSKDEV3  DS    0CL8                3330 ELEMENTS                        DK115400
         DC    CL4'3330'                 DEVICE NAME                    DK115500
         DC    XL1'09'                   UCB DEVICE TYPE                DK115600
         DC    AL2(410)                  MAXIMUM CYLINDER NUMBER        DK115700
         DC    AL1(18)                   MAXIMUM HEAD NUMBER            DK115800
DSKDEV4  DS    0CL8                3330 - MODEL 11 ELEMENTS             DK115900
         DC    CL4'3330'                 DEVICE NAME                    DK116000
         DC    XL1'0D'                   UCB DEVICE TYPE                DK116100
         DC    AL2(814)                  MAXIMUM CYLINDER NUMBER        DK116200
         DC    AL1(18)                   MAXIMUM HEAD NUMBER            DK116300
DSKDEV5  DS    0CL8                3340 - MODEL 35 & 70 ELEMENTS        DK116400
         DC    CL4'3340'                 DEVICE NAME                    DK116500
         DC    XL1'0A'                   UCB DEVICE TYPE                DK116600
         DC    AL2(697)                  MAXIMUM CYLINDER NUMBER        DK116700
         DC    AL1(11)                   MAXIMUM HEAD NUMBER            DK116800
DSKDEV7  DS    0CL8                2305 - MODEL 1  ELEMENTS             DK116900
         DC    CL4'2305'                 DEVICE NAME                    DK117000
         DC    XL1'06'                   UCB DEVICE TYPE                DK117100
         DC    AL2(048)                  MAXIMUM CYLINDER NUMBER        DK117200
         DC    AL1(07)                   MAXIMUM HEAD NUMBER            DK117300
DSKDEV8  DS    0CL8                2305 - MODEL 2  ELEMENTS             DK117400
         DC    CL4'2305'                 DEVICE NAME                    DK117500
         DC    XL1'07'                   UCB DEVICE TYPE                DK117600
         DC    AL2(96)                   MAXIMUM CYLINDER NUMBER        DK117700
         DC    AL1(07)                   MAXIMUM HEAD NUMBER            DK117800
DSKDEVT  DS    0CL8                DASD - FUTURE SCP SUPPORTED DASD     DK117900
DSKGENM  DC    CL4'DASD'                 DEVICE NAME FOR FUTURE DASD    DK118000
DSKUCBT  DC    XL1'00'                   UCB DEVICE TYPE FROM DEVTYPE   DK118100
DSKMAXC  DC    AL2(0)                    FROM DEVTYPE TOTAL CYL - 1     DK118200
DSKMAXH  DC    AL1(0)                    FROM DEVTYPE TOTAL TRK - 1     DK118300
         DC    X'FF'               END OF TABLE                         DK118400
         EJECT                                                          DK118500
*********************************************************************** DK118600
**********                 STORAGE AND EQUATES              *********** DK118700
*********************************************************************** DK118800
         SPACE 1                                                        DK118900
         DS    0H                                                       DK119000
HWORK    DS    H                       USE FOR HW BOUND.                DK119100
         DS    0F                                                       DK119200
         DC    C' '                                                     DK119300
DKUCB    DC    CL3' '                  UCB SAVE                         DK119400
DKDEVTYP DS    0F                                                       DK119500
DSKSTAT  DC    CL1' '                                                   DK119600
         DC    CL1' '                                                   DK119700
DSKCLASS DC    CL1' '                                                   DK119800
DSKTYPE  DC    CL1' '                                                   DK119900
DKBLKSIZ DC    F'0'                    MAX BLKSIZE FOR DEV PLACED HERE  DK120000
DSKCYL   DC    H'0'                    NO. OF CYL                       DK120100
DSKTRK   DC    H'0'                    NO. OF TRK                       DK120200
DEVTWD3  DC    F'0'                    MAX. TRK LEN.                    DK120300
DEVTWD4  DC    F'0'                    BLOCK OVERHEAD                   DK120400
         DS    0F                                                       DK120500
SAVEAREA DS    18F                                                      DK120600
         EJECT                                                          DK120700
         COPY  DITTODS1                                                 DK120800
         SPACE 1                                                        DK120900
         COPY  DITTODS2                                                 DK121000
         CSECT                                                          DK121100
         END   DISKOPEN                                                 DK121200
/*                                                                      DK121300
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              DK121400
//LKED.SYSIN DD *                                                       DK121500
 NAME DISKOPEN(R)                                                       DK121600
/*                                                                      DK121700
//                                                                      DK121800
//CDRDSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               RD121900
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      RD122000
//PROCSTEP EXEC DITTODSR                                                RD122100
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               RD122200
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      RD122300
//             DD DSN=SYS1.MACLIB,DISP=SHR                              RD122400
//ASM.SYSPUNCH DD DUMMY                                                 RD122500
//ASM.SYSIN DD *                                                        RD122600
         TITLE '* * * * * *   CDRD SUB ROUTINE FOR OSDITTO * * * * *'   RD122700
         SPACE 20                                                       RD122800
*********************************************************************** RD122900
*                                                                     * RD123000
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * RD123100
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * RD123200
*                                                                     * RD123300
*********************************************************************** RD123400
         EJECT                                                          RD123500
*********************************************************************** RD123600
**********              CDRDSUB  IS CALLED FORM OSDITTO     *********** RD123700
*********************************************************************** RD123800
         SPACE 1                                                        RD123900
         ISEQ  75,80                                                    RD124000
CDRDSUB  START                                                          RD124100
         SAVE  (14,12)                                                  RD124200
         LR    R2,RD                                                    RD124300
         BALR  R6,R0                                                    RD124400
         USING *,R6                                                     RD124500
         LA    RD,SAVEAREA                                              RD124600
         ST    RD,8(R2)            PTR TO MY S.A.                       RD124700
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 RD124800
         B     AROUND              BR BY COPYRIGHT                      RD124900
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               RD125000
         DC    C'08-15-75 VERS.1 MOD.0'                                 RD125100
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  RD125200
         USING MAIN,R2                 ADDRESS MSICCW . . .             RD125300
*********************************************************************** RD125400
**********                   CARD READING    (QSAM)         *********** RD125500
*********************************************************************** RD125600
CDRD     EQU   *                                                        RD125700
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       RD125800
         BO    RETIRPT                 B   CHKIRT                       RD125900
         TM    CRDDCB+48,X'10'         OPEN SUCCESSFUL ?                RD126000
         BO    CDOPENOK                YES                              RD126100
         LA    R3,CRDDCB               PTR FOR OPEN                     RD126200
         OPEN  ((3),INPUT)                                              RD126300
         TM    CRDDCB+48,X'10'         OPEN SUCCESSFUL ?                RD126400
         BO    CDOPENOK                YES                              RD126500
         MVC   CONIO(8),CRDDCB+40      MOVE IN DDNAME                   RD126600
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 RD126700
         MVI   MSLN,23                                                  RD126800
         B     TELUSER2                                                 RD126900
CDOPENOK EQU   *                                                        RD127000
         CLI   GETCRDSW,X'FF'          BRANCH IF CN CD MODE & NO /+,EOJ RD127100
         BE    CDEOFSW1                YES                              RD127200
         MVC   SIEOF(4),SIEOFVEC       PLUG VEC BR TO THIS SUB AT EODAD RD127300
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      RD127400
         GET   CRDDCB,CONIO                                             RD127500
CDEOFSW  CLI   CNTRLSW,X'00'           CONSOLE ?                        RD127600
         BE    CDRET                   BR IF CONSOLE (NO /+ CHECK)      RD127700
         CLC   CONIO(2),=C'/+'         END OF DATA CARDS IN CTL MODE ?  RD127800
         BNE   CDRET                   NO                               RD127900
CDEOFSW1 MVI   EOF,X'FF'               SET EOF SW ON                    RD128000
CDRET    EQU   *                       RETURN                           RD128100
         B     NORMRET                                                  RD128200
SIEOFSUB EQU   *                       BR HERE ON EODAD                 RD128300
         CLI   CNTRLSW,X'FF'       ARE WE IN CTL CRD MODE & EOD HIT ?   RD128400
         BNE   EODADCK1            NO, SKIP SW SET TO AVOID LOOP, WHEN  RD128500
         MVI   GETCRDSW,X'FF'      YES.    NO /+ OR $$DITTO EOJ SUBMT'D RD128600
EODADCK1 MVI   EOF,X'FF'           BR HERE TO SKIP SW SET IN OPR MODE   RD128700
         LA    R3,CRDDCB               PTR FOR CLOSE                    RD128800
         CLOSE ((3))                                                    RD128900
*        FALL THRU AND RETURN TO FUNCTION THAT CALLED CDRD              RD129000
         EJECT                                                          RD129100
*********************************************************************** RD129200
*******************          RETURN MECHANISM      ******************** RD129300
*********************************************************************** RD129400
         SPACE 1                                                        RD129500
NORMRET  EQU   *                                                        RD129600
         LA    RF,0(0,0)               RC=0                             RD129700
         B     RETURN                                                   RD129800
RETIRPT  EQU   *                       B   CHKIRPT                      RD129900
         LA    RF,4(0,0)               RC=4                             RD130000
         B     RETURN                                                   RD130100
TELUSER2 EQU   *                                                        RD130200
         LA    RF,8                    RC = 8                           RD130300
RETURN   EQU   *                                                        RD130400
         L     RD,4(RD)                PRIME RD                         RD130500
         RETURN (14,12),RC=(15)                                         RD130600
         EJECT                                                          RD130700
*********************************************************************** RD130800
**********                 STORAGE AND EQUATES              *********** RD130900
*********************************************************************** RD131000
         SPACE 1                                                        RD131100
         DS    0F                                                       RD131200
SIEOFVEC B     SIEOFSUB                VECTOR FOR EODAD                 RD131300
SAVEAREA DS    18F                                                      RD131400
         EJECT                                                          RD131500
         COPY  DITTODS1                                                 RD131600
         SPACE 1                                                        RD131700
         COPY  DITTODS2                                                 RD131800
         CSECT                                                          RD131900
         END   CDRDSUB                                                  RD132000
/*                                                                      RD132100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              RD132200
//LKED.SYSIN DD *                                                       RD132300
 NAME CDRDSUB(R)                                                        RD132400
/*                                                                      RD132500
//                                                                      RD132600
//CDPNSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               PN132700
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      PN132800
//PROCSTEP EXEC DITTODSR                                                PN132900
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               PN133000
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      PN133100
//             DD DSN=SYS1.MACLIB,DISP=SHR                              PN133200
//ASM.SYSPUNCH DD DUMMY                                                 PN133300
//ASM.SYSIN DD *                                                        PN133400
         TITLE '* * * * * *   CDPN SUB ROUTINE FOR OSDITTO * * * * *'   PN133500
         SPACE 20                                                       PN133600
*********************************************************************** PN133700
*                                                                     * PN133800
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * PN133900
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * PN134000
*                                                                     * PN134100
*********************************************************************** PN134200
         EJECT                                                          PN134300
*********************************************************************** PN134400
**********              CDPNSUB  IS CALLED FORM OSDITTO     *********** PN134500
*********************************************************************** PN134600
         SPACE 2                                                        PN134700
         ISEQ  75,80                                                    PN134800
CDPNSUB  START                                                          PN134900
         SAVE  (14,12)                                                  PN135000
         LR    R2,RD                                                    PN135100
         BALR  R6,R0                                                    PN135200
         USING *,R6                                                     PN135300
         LA    RD,SAVEAREA                                              PN135400
         ST    RD,8(R2)            PTR TO MY S.A.                       PN135500
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 PN135600
         B     AROUND              BR BY COPYRIGHT                      PN135700
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               PN135800
         DC    C'08-15-75 VERS.1 MOD.0'                                 PN135900
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  PN136000
         USING MAIN,R2                 ADDRESS MSICCW . . .             PN136100
         EJECT                                                          PN136200
*********************************************************************** PN136300
**********                   CARD PUNCHING   (QSAM)         *********** PN136400
*********************************************************************** PN136500
CDPN     EQU   *                                                        PN136600
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       PN136700
         BO    RETIRPT                 B   CHKIRT                       PN136800
         TM    PCHDCB+48,X'10'         OPEN SUCCESSFUL ?                PN136900
         BO    PNOPENOK                YES                              PN137000
         LA    R3,PCHDCB                                                PN137100
         OPEN  ((3),OUTPUT)                                             PN137200
         TM    PCHDCB+48,X'10'         OPEN SUCCESSFUL ?                PN137300
         BO    PNOPENOK                YES                              PN137400
         MVC   CONIO(8),PCHDCB+40      MOVE IN DDNAME                   PN137500
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 PN137600
         MVI   MSLN,23                                                  PN137700
         B     TELUSER2                                                 PN137800
PNOPENOK EQU   *                                                        PN137900
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      PN138000
         PUT   PCHDCB,CONIOI                                            PN138100
         EJECT                                                          PN138200
*********************************************************************** PN138300
*******************          RETURN MECHANISM      ******************** PN138400
*********************************************************************** PN138500
         SPACE 1                                                        PN138600
NORMRET  EQU   *                                                        PN138700
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           PN138800
         B     RETURN                                                   PN138900
RETIRPT  EQU   *                       B   CHKIRPT                      PN139000
         LA    RF,4(0,0)               RC = 4                           PN139100
         B     RETURN                                                   PN139200
TELUSER2 EQU   *                                                        PN139300
         LA    RF,8                    RC = 8                           PN139400
RETURN   EQU   *                                                        PN139500
         L     RD,4(RD)                PRIME RD                         PN139600
         RETURN (14,12),RC=(15)                                         PN139700
         EJECT                                                          PN139800
*********************************************************************** PN139900
*******************          STORAGE AND EQUATES   ******************** PN140000
*********************************************************************** PN140100
         SPACE 1                                                        PN140200
         DS    0F                                                       PN140300
SAVEAREA DS    18F                                                      PN140400
         EJECT                                                          PN140500
         COPY  DITTODS1                                                 PN140600
         SPACE 1                                                        PN140700
         COPY  DITTODS2                                                 PN140800
         CSECT                                                          PN140900
         END   CDPNSUB                                                  PN141000
/*                                                                      PN141100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PN141200
//LKED.SYSIN DD *                                                       PN141300
 NAME CDPNSUB(R)                                                        PN141400
/*                                                                      PN141500
//                                                                      PN141600
//PRNTSUB  JOB ('A=SX82'),'PAS3 BRAMMER',                               PR141700
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      PR141800
//PROCSTEP EXEC DITTODSR                                                PR141900
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               PR142000
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      PR142100
//             DD DSN=SYS1.MACLIB,DISP=SHR                              PR142200
//ASM.SYSPUNCH DD DUMMY                                                 PR142300
//ASM.SYSIN DD *                                                        PR142400
         TITLE '* * * * * *   PRNT SUB ROUTINE FOR OSDITTO * * * * *'   PR142500
         SPACE 20                                                       PR142600
*********************************************************************** PR142700
*                                                                     * PR142800
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * PR142900
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * PR143000
*                                                                     * PR143100
*********************************************************************** PR143200
         EJECT                                                          PR143300
*********************************************************************** PR143400
**********               PRNTSUB IS CALLED FORM OSDITTO     *********** PR143500
*********************************************************************** PR143600
         SPACE 2                                                        PR143700
         ISEQ  75,80                                                    PR143800
PRNTSUB  START                                                          PR143900
         SAVE  (14,12)                                                  PR144000
         LR    R2,RD                                                    PR144100
         BALR  R6,R0                                                    PR144200
         USING *,R6                                                     PR144300
         LA    RD,SAVEAREA                                              PR144400
         ST    RD,8(R2)            PTR TO MY S.A.                       PR144500
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 PR144600
         B     AROUND              BR BY COPYRIGHT                      PR144700
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               PR144800
         DC    C'08-15-75 VERS.1 MOD.0'                                 PR144900
AROUND   L     R2,0(R1)                GET MSICCW ADDRESS               PR145000
         USING MAIN,R2                 ADDRESS MSICCW . . .             PR145100
         EJECT                                                          PR145200
*********************************************************************** PR145300
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** PR145400
*********************************************************************** PR145500
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       PR145600
         BO    RETIRPT                 B   CHKIRT                       PR145700
         TM    PRTRDCB+48,X'10'    OPEN SUCCESSFUL ?                    PR145800
         BO    PROPENOK            YES                                  PR145900
         LA    R3,PRTRDCB          PTR FOR OPEN                         PR146000
         OPEN  ((3),(OUTPUT))                                           PR146100
         TM    PRTRDCB+48,X'10'    OPEN SUCCESSFUL ?                    PR146200
         BO    PROPENOK            YES                                  PR146300
         CLI   CNTRLSW,X'00'           OPER AND OPEN FAIL?              PR146310
         BE    NOU101                  YES, SKIP ABEND                  PR146320
         ABEND 101                     NO, ABEND U101 SYSPRINT CAN'T OP PR146330
NOU101   EQU   *                                                        PR146340
         MVC   CONIO(8),PRTRDCB+40                                      PR146400
         MVC   CONIO+8(15),OPENFAIL        ' DD OPEN FAILED'            PR146500
         MVI   MSLN,23                                                  PR146600
         B     TELUSER2                ISSUE MSG                        PR146700
PROPENOK EQU   *                                                        PR146800
         CLI   FLIFLOSW,1          IS DRS PRNT TO BE DONE               PR146900
         BE    PRNTDRS             YES                                  PR147000
         CLI   TYP,X'00'               PRINT SUPPRESSED FOR DRS ?       PR147100
         BNE   NORMRET                 YES, EXIT                        PR147200
PRNTDRS  EQU   *                   SKIP SUPPRESS TEST                   PR147300
         SR    R1,R1                                                    PR147400
         IC    R1,CC                   CCW OP CODE                      PR147500
         SRL   R1,3(R0)                TRANSLATE TO # OF PRINTLINES     PR147600
         AH    R1,LINCT                ADD   TO COUNTER                 PR147700
         STH   R1,LINCT                                                 PR147800
         IC    R1,PL                   GET PRINT LENGTH                 PR147900
         BCTR  R1,R0               DECREMENT R1 BY 1                    PR148000
         STC   R1,PR1+1                STORE COUNT LENGTH IN MOVE       PR148100
         MVI   PRTIO,C' '                                               PR148200
         MVC   PRTIO+1(131),PRTIO      CLEAR PRINTLINE                  PR148300
         CLI   INPUT,X'FF'             SUPPRESS SKIP TO CHAN 1          PR148400
         BE    PR1                                                      PR148500
         CLI   LINCT+1,X'3A'           AT END OF PAGE ? (58 LINES/PAGE) PR148600
         BNH   PR1                     NO                               PR148700
         MVI   LINCT+1,X'01'           YES, RESET LINCT                 PR148800
         CLI   CC,X'8B'                IS THIS SKIP TO CHAN 1 ?         PR148900
         BE    PR1BYPAS                                                 PR149000
         CLI   CC,X'13'                IF SPACE IMMED. BYPASS DATA MOVE PR149100
         MVI   CC,X'89'                SET TO WRITE & SKIP TO CHAN 1    PR149200
         BE    PR1BYPAS                                                 PR149300
PR1      MVC   PRTIO,CONIO         MOVE DATA TO BUFFER                  PR149400
PR1BYPAS EQU   *                                                        PR149500
         MVC   CCSUB(1),CC             PLUG CCSUB                       PR149600
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      PR149700
         PUT   PRTRDCB,CCSUB                                            PR149800
         EJECT                                                          PR149900
*********************************************************************** PR150000
*******************          RETURN MECHANISM      ******************** PR150100
*********************************************************************** PR150200
         SPACE 1                                                        PR150300
NORMRET  EQU   *                                                        PR150400
         LA    RF,0(0,0)               RC=0                             PR150500
         B     RETURN                                                   PR150600
RETIRPT  EQU   *                       B   CHKIRPT                      PR150700
         LA    RF,4(0,0)               RC = 4                           PR150800
         B     RETURN                                                   PR150900
TELUSER2 EQU   *                                                        PR151000
         LA    RF,8                RC = 8                               PR151100
RETURN   EQU   *                                                        PR151200
         L     RD,4(RD)                PRIME RD                         PR151300
         RETURN (14,12),RC=(15)                                         PR151400
         EJECT                                                          PR151500
*********************************************************************** PR151600
**********                 STORAGE AND EQUATES              *********** PR151700
*********************************************************************** PR151800
         SPACE 1                                                        PR151900
         DS    0F                                                       PR152000
SAVEAREA DS    18F                                                      PR152100
CCSUB    DS    CL1                     CC FOR PRNTSUB                   PR152200
PRTIO    DS    CL132               PRINT BUFFER                         PR152300
         EJECT                                                          PR152400
         COPY  DITTODS1                                                 PR152500
         SPACE 1                                                        PR152600
         COPY  DITTODS2                                                 PR152700
         CSECT                                                          PR152800
         END   PRNTSUB                                                  PR152900
/*                                                                      PR153000
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PR153100
//LKED.SYSIN DD *                                                       PR153200
 NAME PRNTSUB(R)                                                        PR153300
/*                                                                      PR153400
//                                                                      PR153500
//HEADING  JOB ('A=SX82'),'PAS3 BRAMMER',                               HD153600
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      HD153700
//PROCSTEP EXEC DITTODSR                                                HD153800
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               HD153900
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      HD154000
//             DD DSN=SYS1.MACLIB,DISP=SHR                              HD154100
//ASM.SYSPUNCH DD DUMMY                                                 HD154200
//ASM.SYSIN DD *                                                        HD154300
         TITLE '* * * * * *   HEADING  ROUTINE FOR OSDITTO * * * * *'   HD154400
         SPACE 20                                                       HD154500
*********************************************************************** HD154600
*                                                                     * HD154700
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * HD154800
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * HD154900
*                                                                     * HD155000
*********************************************************************** HD155100
         EJECT                                                          HD155200
*********************************************************************** HD155300
**********              HEADING  IS CALLED FORM OSDITTO     *********** HD155400
*********************************************************************** HD155500
         SPACE 2                                                        HD155600
         ISEQ  75,80                                                    HD155700
HEADING  START                                                          HD155800
         SAVE  (14,12)                                                  HD155900
         LR    R2,RD                                                    HD156000
         BALR  R6,R0                                                    HD156100
         USING *,R6                                                     HD156200
         LA    RD,SAVEAREA                                              HD156300
         ST    RD,8(R2)            PTR TO MY S.A.                       HD156400
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 HD156500
         B     AROUND              BR BY COPYRIGHT                      HD156600
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               HD156700
         DC    C'06-30-74 VERS.2 MOD.0'                                 HD156800
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               HD156900
         DC    C'08-15-75 VERS.1 MOD.0'                                 HD157000
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  HD157100
         ST    R2,PARM                 SAVE PTR                         HD157200
         USING MAIN,R2                 ADDRESS MSICCW . . .             HD157300
         EJECT                                                          HD157400
*********************************************************************** HD157500
*************                DISPLAY OS/DITTO HEADING       *********** HD157600
*********************************************************************** HD157700
DHDG     EQU   *                                                        HD157800
         CLI   DHDGSW,X'FF'            HAS HEADING BEEN DISPLAYED ?     HD157900
         BE    RETNORM                 YES                              HD158000
         MVI   DHDGSW,X'FF'            NO                               HD158100
DHDG1    EQU   *                                                        HD158200
         BAL   R8,OVFLO                                                 HD158300
         MVI   CC,X'1B'                                                 HD158400
         MVI   CONIO,C' '                                               HD158500
         MVC   CONIO+1(131),CONIO                                       HD158600
         MVI   PL,X'84'            TRIPLE SPACE                         HD158700
         BAL   R8,PRNT             4                                    HD158800
         BAL   R8,PRNT             TIMES                                HD158900
         BAL   R8,PRNT                                                  HD159000
         BAL   R8,PRNT                                                  HD159100
         MVI   CC,X'09'                                                 HD159200
LL1      MVC   D1((6*L+6*S)-7),D1-1    PRINT LINE 1, -7 ADJUSTS FOR OS  HD159300
         MVC   OO1(L),OO1-1                                             HD159400
         MVI   DD1,C'D'                                                 HD159500
         MVC   DD2(L-2),DD1                                             HD159600
         MVI   O2,C'O'                                                  HD159700
         MVC   O3(L-3),O2                                               HD159800
         MVI   S2,C'S'                                                  HD159900
         MVC   S3(L-3),S2                                               HD160000
         MVC   OO1(L),O1                                                HD160100
         MVI   I1,C'I'                                                  HD160200
         MVC   I2(L-1),I1                                               HD160300
         BCR   0,R1                                                     HD160400
         OI    *-1,X'F0'                                                HD160500
         MVI   T1,C'T'                                                  HD160600
         MVC   T2(L-1),T1                                               HD160700
         MVC   TT1(L),T1                                                HD160800
         MVC   X+L-01(2),=C'* '                                         HD160900
         BAL   R8,PRNT                                                  HD161000
LL2      MVC   DD2(L-1),DD1         PRINT LINE 2                        HD161100
         MVI   O1,C'O'                                                  HD161200
         MVC   O2(L-1),O1                                               HD161300
         MVI   S1,C'S'                                                  HD161400
         MVC   S2(L-1),S1                                               HD161500
         MVI   I1,C'I'                                                  HD161600
         MVC   I2(L-1),I1                                               HD161700
         MVC   OO1(L),O1                                                HD161800
         BCR   0,R1                                                     HD161900
         OI    *-1,X'F0'                                                HD162000
         MVC   X+L-02(2),=C'* '                                         HD162100
         BAL   R8,PRNT                                                  HD162200
         MVC   DD3(L-4),BLANKS                                          HD162300
         MVC   O3(L-4),BLANKS                                           HD162400
         MVC   S3(L-4),BLANKS                                           HD162500
         MVC   OO1(L),O1                                                HD162600
         MVC   I1(L/2-1),BLANKS                                         HD162700
         MVC   I1+L/2+1(L),BLANKS                                       HD162800
         MVC   T1+L/2+1(L),BLANKS                                       HD162900
         MVC   TT1(L),T1                                                HD163000
         MVC   X+L-03(2),=C'* '                                         HD163100
         BAL   R8,PRNT             PRINT LINE 3                         HD163200
         MVC   S3+1(L),S3                                               HD163300
         MVC   X+L-04(2),=C'* '                                         HD163400
         BAL   R8,PRNT             PRINT LINE 4                         HD163500
         MVC   X+L-05(2),=C'* '                                         HD163600
         BAL   R8,PRNT             PRINT LINE 5                         HD163700
         MVC   S2(L-2),S1                                               HD163800
         MVC   X+L-06(2),=C'* '                                         HD163900
         BAL   R8,PRNT             PRINT LINE 6                         HD164000
         MVI   S1,C' '                                                  HD164100
         MVI   S1+L-1,C'S'                                              HD164200
         MVC   X+L-07(2),=C'* '                                         HD164300
         BAL   R8,PRNT             PRINT LINE 7                         HD164400
         MVC   S2(L-3),S1                                               HD164500
         MVC   X+L-08(2),=C'* '                                         HD164600
         BAL   R8,PRNT             PRINT LINE 8                         HD164700
         MVC   X+L-09(2),=C'* '                                         HD164800
         BAL   R8,PRNT             PRINT LINE 9                         HD164900
         MVI   S1,C'S'                                                  HD165000
         MVI   S2,C'S'                                                  HD165100
         MVC   X+L-10(2),=C'* '                                         HD165200
         BAL   R8,PRNT             PRINT LINE 10                        HD165300
         BAL   R1,LL2                                                   HD165400
         MVC   X+L-11(2),=C'* '                                         HD165500
         BAL   R8,PRNT             PRINT LINE 11                        HD165600
         BAL   R1,LL1                                                   HD165700
         MVC   X+L-12(2),=C'* '                                         HD165800
         MVI   CC,X'19'                                                 HD165900
         BAL   R8,PRNT             PRINT LINE 12                        HD166000
         MVC   D1(124),D1-1                                             HD166100
         MVC   D1+41(39),COPYRT                                         HD166200
         BAL   R8,PRNT                                                  HD166300
         MVC   D1(124),D1-1                                             HD166400
         MVC   D1+48(5),=C'DATE='                                       HD166500
         MVC   D1+53(6),DATESAVE   GET DATE FROM TIME MACRO SAVE AREA   HD166600
         MVC   D1+60(12),COPYRT+48     'VERS.N MOD.N' (MAINT.LEVEL)     HD166700
         BAL   R8,PRNT             PRINT IT                             HD166800
         MVC   D1(124),D1-1            CLEAR                            HD166900
         MVC   D1+41(39),COPYRT2       1975                             HD167000
         BAL   R8,PRNT                 PRINT                            HD167100
         MVC   D1(124),D1-1            CLEAR                            HD167200
         MVC   D1+48(11),=C'EXTENSIONS '                                HD167300
         MVC   D1+60(12),COPYRT2+48    'VERS.N MOD.N' (MAINT.LEVEL)     HD167400
         BAL   R8,PRNT                 PRINT                            HD167500
         EJECT                                                          HD167600
*********************************************************************** HD167700
*******************          RETURN MECHANISM      ******************** HD167800
*********************************************************************** HD167900
         SPACE 1                                                        HD168000
RETNORM  EQU   *                                                        HD168100
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           HD168200
         B     RETURN                                                   HD168300
RETIRPT  EQU   *                       B   CHKIRPT                      HD168400
         LA    RF,4(0,0)               RC = 4                           HD168500
         B     RETURN                                                   HD168600
TELUSER2 EQU   *                                                        HD168700
         LA    RF,8                    RC = 8                           HD168800
RETURN   EQU   *                                                        HD168900
         L     RD,4(RD)                PRIME RD                         HD169000
         RETURN (14,12),RC=(15)                                         HD169100
         EJECT                                                          HD169200
*********************************************************************** HD169300
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** HD169400
*********************************************************************** HD169500
         SPACE 1                                                        HD169600
PRNT     LA    RD,SAVEAREA             PRIME RD                         HD169700
         LA    R1,PARM                 MSICCW                           HD169800
         CALL  PRNTSUB                                                  HD169900
         B     PRNTRET(RF)                                              HD170000
PRNTRET  B     PRNTEXIT                RC = 0                           HD170100
         B     RETIRPT                 RC = 4                           HD170200
         B     TELUSER2                RC = 8                           HD170300
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       HD170400
         BNE   0(R8)                   NO                               HD170500
         MVI   OVFLOSW,X'00'           RESET                            HD170600
         MVI   CC,X'11'                DOUBLE SPACING                   HD170700
         BR    R8                      RETURN                           HD170800
OVFLO    EQU   *                                                        HD170900
         MVI   CC,X'8B'                SKIP TO CH 1                     HD171000
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              HD171100
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         HD171200
         B     PRNT                                                     HD171300
         EJECT                                                          HD171400
*********************************************************************** HD171500
*******************          STORAGE AND EQUATES   ******************** HD171600
*********************************************************************** HD171700
         SPACE 1                                                        HD171800
         DS    0F                                                       HD171900
PARM     DS    F                                                        HD172000
SAVEAREA DS    18F                                                      HD172100
         EJECT                                                          HD172200
         COPY  DITTODS1                                                 HD172300
         SPACE 1                                                        HD172400
         COPY  DITTODS2                                                 HD172500
         CSECT                                                          HD172600
         END   HEADING                                                  HD172700
/*                                                                      HD172800
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              HD172900
//LKED.SYSIN DD *                                                       HD173000
 NAME HEADING(R)                                                        HD173100
/*                                                                      HD173200
//                                                                      HD173300
//DITTOPGM JOB ('A=SX82'),'PAS3 BRAMMER',                               PG000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      PG000200
//PROCSTEP EXEC DITTODSR                                                PG000300
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               PG000400
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      PG000500
//             DD DSN=SYS1.MACLIB,DISP=SHR                              PG000600
//ASM.SYSPUNCH DD DUMMY                                                 PG000700
//ASM.SYSIN DD *                                                        PG000800
         TITLE '* * * * * *   IEHPROGM ROUTINE FOR OSDITTO * * * * *'   PG000900
         SPACE 20                                                       PG001000
*********************************************************************** PG001100
*                                                                     * PG001200
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * PG001300
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * PG001400
*                                                                     * PG001500
*********************************************************************** PG001600
         EJECT                                                          PG001700
*********************************************************************** PG001800
**********              DITTOPGM IS LINKED FROM OSDITTO     *********** PG001900
*********************************************************************** PG002000
         SPACE 2                                                        PG002100
         ISEQ  75,80                                                    PG002200
DITTOPGM START                                                          PG002300
         SAVE  (14,12)                                                  PG002400
         LR    R2,RD                                                    PG002500
         BALR  R6,R0                                                    PG002600
         USING *,R6                                                     PG002700
         LA    RD,SAVEAREA                                              PG002800
         ST    RD,8(R2)            PTR TO MY S.A.                       PG002900
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 PG003000
         B     AROUND              BR BY COPYRIGHT                      PG003100
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               PG003200
         DC    C'08-15-75 VERS.1 MOD.0'                                 PG003300
AROUND   EQU   *                                                        PG003400
         L     R2,0(R1)                GET  MSICCW ADR                  PG003500
         USING MAIN,R2                 ADDRESS MSICCW . . .             PG003600
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           PG003700
         EJECT                                                          PG003800
*********************************************************************** PG003900
*********          OBTAIN UCBNAME AND VOLSER              ************* PG004000
*********************************************************************** PG004100
         SPACE 1                                                        PG004200
TIOTLOOK EQU   *                                                        PG004300
         EXTRACT TIOTADDR,FIELDS=(TIOT)    GET TIOT POINTER FROM TCB    PG004400
LOOKINIT EQU   *                   INITIALIZE FOR TIOT SCAN             PG004500
         L     R1,TIOTADDR         PRIME R8 WITH TIOT PTR               PG004600
         LA    R1,24(R1)           BUMP TO 1ST DD ENTRY                 PG004700
LOOK     CLC   4(8,R1),DITTODD1        DDNAME TIOT ENTRY = DITTODD1 ?   PG004800
         BNE   LOOKBUMP            NO, BUMP TO NEXT ENTRY               PG004900
         LH    R9,18(R1)           GET UCB ADDRESS                      PG005000
         MVC   UCBNAME1(3),13(R9)  SAVE UCB CUU                         PG005100
         MVC   VOLSER(6),28(R9)        GET VOLSER                       PG005200
         B     LOOKDONE                                                 PG005300
LOOKBUMP SR    R9,R9               CLEAR R9                             PG005400
         IC    R9,0(R1)            PICK UP TIOT ENTRY LENGTH            PG005500
         AR    R1,R9               BUMP TO NEXT ENTRY ADDRESS           PG005600
         CLI   0(R1),X'00'         END OF TIOT ?                        PG005700
         BNE   LOOK                NO, CONTINUE LOOKING. YES, FALL THRU PG005800
         MVI   MSLN,24                                                  PG005900
         MVC   CONIO(24),DITTODD1      'DITTODD1 DD CARD MISSING'       PG006000
         BAL   R8,WCON2                ISSUE MSG                        PG006100
         B     RETR8                   INVALID FUNCTION                 PG006200
LOOKDONE EQU   *                                                        PG006300
         EJECT                                                          PG006400
*********************************************************************** PG006500
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** PG006600
*********************************************************************** PG006700
         SPACE 1                                                        PG006800
         CLI   CNTRLSW,X'FF'           CONTROL CARD MODE ?              PG006900
         BE    RETR8                   YES, INVALID FUNCTIONIN JOBSTRM  PG007000
         LA    R3,CTLCRD               PTR                              PG007100
         LA    R3,9(R3)                BUMP PTR                         PG007200
         MVC   CTLCRD,BLANKS           CLEAR                            PG007300
         SR    RB,RB                   CLEAR                            PG007400
         ST    RB,CRDCNT               CRDCNT                           PG007500
         CLC   FUNCOD,=C'SCR'          SCRATCH                          PG007600
         BE    SCR                     YES                              PG007700
         CLC   FUNCOD,=C'REN'          RENAME                           PG007800
         BE    REN                     YES                              PG007900
         CLC   FUNCOD,=C'CAT'          CATLG                            PG008000
         BE    CAT                     YES                              PG008100
         CLC   FUNCOD,=C'UNC'          UNCATLG                          PG008200
         BE    UNC                     YES                              PG008300
         B     RETR8                   INVALID FUNCTION                 PG008400
         EJECT                                                          PG008500
*********************************************************************** PG008600
**********         SCRATCH  SYSIN BUILD ROUTINE             *********** PG008700
*********************************************************************** PG008800
         SPACE 1                                                        PG008900
SCR      EQU   *                                                        PG009000
         MVC   CTLCRD(9),SCRATCH       OP CODE                          PG009100
         MVC   CTLCRD+09(14),VOLEQ     'VOL=UCB=VOLSER'                 PG009200
         LA    R3,14(R3)               BUMP PTR                         PG009300
         MVC   CONIO(26),SCRMSG1       'REPLY - 'DSNAME' OR 'VTOC'      PG009400
         MVI   MSLN,26                                                  PG009500
         MVI   RPLN,44                                                  PG009600
         BAL   R8,WRTCON               GET DSNAME                       PG009700
         CLC   CONIO(4),VTOC           VTOC ?                           PG009800
         BE    SCRVTOC                 YES                              PG009900
         MVC   DSNSAV,CONIO            SAVE                             PG010000
         MVI   DSNSW,X'FF'             SET                              PG010100
         B     PURGE                                                    PG010200
SCRVTOC  EQU   *                                                        PG010300
         MVC   0(5,R3),COMVTOC         ',VTOC'                          PG010400
         LA    R3,5(R3)                BUMP PTR                         PG010500
PURGE    EQU   *                                                        PG010600
         MVI   RPLN,1                                                   PG010700
         MVI   MSLN,44                                                  PG010800
         MVC   CONIO(44),SCRMSG4       'REPLY - 'P' (PURGE . . .        PG010900
         BAL   R8,WRTCON               GET PURGE                        PG011000
         CLI   CONIO,C'P'              PURGE ?                          PG011100
         BNE   CHKDSN                                                   PG011200
         MVC   0(6,R3),COMPURGE        ',PURGE'                         PG011300
         LA    R3,6(R3)                BUMP PTR                         PG011400
CHKDSN   EQU   *                                                        PG011500
         CLI   DSNSW,X'FF'             DSN ?                            PG011600
         BNE   SYS                     NO                               PG011700
         MVI   RPLN,8                                                   PG011800
         MVI   MSLN,33                                                  PG011900
         MVC   CONIO(33),SCRMSG3       'REPLY - 'MEMBNAME' . . .        PG012000
         BAL   R8,WRTCON               GET MEMBER                       PG012100
         CLC   CONIO(2),=C'U '         'U' + ' ' IN CASE REPLY = 'UDSN' PG012200
         BE    MEMBDONE                NO MEMBNAME                      PG012300
         MVC   0(8,R3),COMEMBER        ',MEMBER='                       PG012400
         LA    R3,8(R3)                BUMP PTR                         PG012500
         LA    R1,8                    MAX. MEMBNAME                    PG012600
         BAL   R8,MOVESCAN             GO MOVE IN MEMBNAME              PG012700
MEMBDONE EQU   *                                                        PG012800
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG012900
         MVI   COL72,C'X'                                               PG013000
         MVI   DSNSW,X'00'             RESET                            PG013100
         BAL   R8,STOCARD1             STORE CONTIN. CARD               PG013200
         MVC   COL16(7),DSNAME         'DSNAME='                        PG013300
         LA    R3,22(R3)               BUMP PTR                         PG013400
         MVC   0(44,R3),DSNSAV         PLUG DSNAME                      PG013500
         B     SCRPUT                                                   PG013600
SYS      EQU   *                                                        PG013700
         MVI   RPLN,1                                                   PG013800
         MVI   MSLN,40                                                  PG013900
         MVC   CONIO(40),SCRMSG5       'REPLY - 'S' (SYS . .            PG014000
         BAL   R8,WRTCON               GET SYS                          PG014100
         CLI   CONIO,C'S'              SYS ?                            PG014200
         BNE   NOSYS                                                    PG014300
         MVC   0(4,R3),COMSYS          ',SYS'                           PG014400
         LA    R3,4(R3)                BUMP PTR                         PG014500
NOSYS    EQU   *                                                        PG014600
         BAL   R8,STOCARD1                                              PG014700
         B     DISPEXEC                                                 PG014800
SCRPUT   EQU   *                                                        PG014900
         BAL   R8,STOCARD2             STORE CONTROL CARD               PG015000
         B     DISPEXEC                                                 PG015100
         EJECT                                                          PG015200
*********************************************************************** PG015300
*********          RENAME   SYSIN BUILD ROUTINE             *********** PG015400
*********************************************************************** PG015500
         SPACE 1                                                        PG015600
REN      EQU   *                                                        PG015700
         MVC   CTLCRD(9),RENAME        OP CODE                          PG015800
         MVC   CTLCRD+09(14),VOLEQ     'VOL=UCB=VOLSER'                 PG015900
         LA    R3,14(R3)               BUMP PTR                         PG016000
         MVC   CONIO(16),SCRMSG1       'REPLY - 'DSNAME'                PG016100
         MVI   MSLN,16                                                  PG016200
         MVI   RPLN,44                                                  PG016300
         BAL   R8,WRTCON               GET DS NAME                      PG016400
         MVC   DSNSAV,CONIO            SAVE DSN                         PG016500
         MVC   CONIO(34),RENMSG1       'REPLY - 'NEWNAME . . .          PG016600
         MVI   MSLN,34                                                  PG016700
         MVI   RPLN,44                 DSN MAX LENGTH                   PG016800
         BAL   R8,WRTCON               GET NEWNAME                      PG016900
         MVC   NEWSAV,CONIO            SAVE NEWMNAME                    PG017000
         MVC   CONIO(47),RENMSG2       'REPLY - 'MEMBNAME' TO BE . . .  PG017100
         MVI   MSLN,47                                                  PG017200
         MVI   RPLN,8                  MAX MEMBER                       PG017300
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PG017400
         CLC   CONIO(2),=C'U '         REPLY 'U' + ONE ' ' ?            PG017500
         BE    REN1                    NO MEMBNAME                      PG017600
         MVC   0(8,R3),COMEMBER        ',MEMBER='                       PG017700
         LA    R3,8(R3)                BUMP PTR                         PG017800
         LA    R1,8                    MAX. MEMBNAME                    PG017900
         BAL   R8,MOVESCAN             GO MOVE IN MEMBNAME              PG018000
REN1     EQU   *                                                        PG018100
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG018200
         MVI   COL72,C'X'                                               PG018300
         BAL   R8,STOCARD1             STORE CONTIN. CARD               PG018400
         MVC   COL16(7),DSNAME         'DSNAME='                        PG018500
         LA    R3,22(R3)               BUMP PTR                         PG018600
         LA    R1,44                   MAX DSN                          PG018700
         MVC   CONIO(44),DSNSAV        PRIME CONIO                      PG018800
         BAL   R8,MOVESCAN             GO MOVE IN DSNAME                PG018900
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG019000
         MVI   COL72,C'X'                                               PG019100
         BAL   R8,STOCARD2             STORE CONTIN. CARD               PG019200
         MVC   COL16(8),NEWNAME        'NEWNAME='                       PG019300
         LA    R3,23(R3)               BUMP PTR                         PG019400
         MVC   0(44,R3),NEWSAV         PLUG NEWNAME                     PG019500
         BAL   R8,STOCARD3             STORE CONTROL CARD               PG019600
         B     DISPEXEC                GO DISPLAY CARDS                 PG019700
         EJECT                                                          PG019800
*********************************************************************** PG019900
*********          CATLG    SYSIN BUILD ROUTINE             *********** PG020000
*********************************************************************** PG020100
         SPACE 1                                                        PG020200
CAT      EQU   *                                                        PG020300
         MVC   CTLCRD(9),CATLG         OP CODE                          PG020400
         MVI   MSLN,16                                                  PG020500
         MVC   CONIO(16),SCRMSG1       'REPLY - 'DSNAME'                PG020600
         MVI   RPLN,44                                                  PG020700
         BAL   R8,WRTCON               GET DS NAME                      PG020800
         MVC   0(7,R3),DSNAME          'DSNAME='                        PG020900
         LA    R3,7(R3)               BUMP PTR                          PG021000
         LA    R1,44                   MAX DSN LENGTH                   PG021100
         BAL   R8,MOVESCAN             GO MOVE IN DSNAME                PG021200
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG021300
         MVI   COL72,C'X'                                               PG021400
         BAL   R8,STOCARD1                                              PG021500
         MVI   RPLN,1                                                   PG021600
         MVI   MSLN,42                                                  PG021700
         MVC   CONIO(42),CATMSG1       'REPLY - 'C' (CVOL . . .         PG021800
         BAL   R8,WRTCON               ISSUE MSG                        PG021900
         CLI   CONIO,C'C'              CVOL ?                           PG022000
         BNE   CAT1                    NO                               PG022100
         MVC   COL16(15),CVOLEQ        'CVOL=UCB=VOLSER'                PG022200
         BAL   R8,STOCARD3                                              PG022300
         MVI   CATCVLSW+1,X'00'        SET                              PG022400
CAT1     EQU   *                                                        PG022500
         MVC   COL16(4),VOLEQ          'VOL='                           PG022600
         LA    R3,19(R3)               BUMP PTR                         PG022700
         MVI   MSLN,53                                                  PG022800
         MVI   RPLN,8                  MAX DEVICE                       PG022900
         MVC   CONIO(53),CATMSG2       'REPLY - 'DEVICE' . . .          PG023000
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PG023100
         LA    R1,8                    MAX DEVICE                       PG023200
         BAL   R8,MOVESCAN             GO MOVE IN DEVICE                PG023300
         MVC   0(2,R3),=C'=('          OPEN SER LIST                    PG023400
         LA    R3,2(R3)                BUMP PTR                         PG023500
         MVI   MSLN,69                                                  PG023600
         MVI   RPLN,34                 5 X 7 - 1                        PG023700
         MVC   CONIO(69),CATMSG3       'REPLY - 'VOLSER LIST' . . .     PG023800
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PG023900
         LA    R1,34                   MAX SER LIST                     PG024000
         BAL   R8,MOVESCAN             FILL IN SER LIST                 PG024100
         MVI   0(R3),C')'              CLOSE SER LIST                   PG024200
         LA    R3,1(R3)                BUMP PTR                         PG024300
CATCVLSW BC    15,CAT2                 FALL THRU IF CVOL                PG024400
         MVI   CATCVLSW+1,X'F0'        RESET                            PG024500
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG024600
         MVI   COL72,C'X'                                               PG024700
CAT2     EQU   *                                                        PG024800
         BAL   R8,STOCARD2                                              PG024900
         B     DISPEXEC                                                 PG025000
         EJECT                                                          PG025100
*********************************************************************** PG025200
*********          UNCATLG  SYSIN BUILD ROUTINE             *********** PG025300
*********************************************************************** PG025400
         SPACE 1                                                        PG025500
UNC      EQU   *                                                        PG025600
         MVC   CTLCRD(9),UNCATLG       OP CODE                          PG025700
         MVI   MSLN,16                                                  PG025800
         MVC   CONIO(16),SCRMSG1       'REPLY - 'DSNAME'                PG025900
         MVI   RPLN,44                                                  PG026000
         BAL   R8,WRTCON               GET DS NAME                      PG026100
         MVC   0(7,R3),DSNAME          'DSNAME='                        PG026200
         LA    R3,7(R3)               BUMP PTR                          PG026300
         LA    R1,44                   MAX DSN LENGTH                   PG026400
         BAL   R8,MOVESCAN             GO MOVE IN DSNAME                PG026500
         MVI   RPLN,1                                                   PG026600
         MVI   MSLN,42                                                  PG026700
         MVC   CONIO(42),CATMSG1       'REPLY - 'C' (CVOL . . .         PG026800
         BAL   R8,WRTCON               ISSUE MSG                        PG026900
         CLI   CONIO,C'C'              CVOL ?                           PG027000
         BE    UNC1                    YES                              PG027100
         BAL   R8,STOCARD1                                              PG027200
         B     DISPEXEC                                                 PG027300
UNC1     EQU   *                                                        PG027400
         MVI   0(R3),C','              PLUG CONTIN. COMMA               PG027500
         MVI   COL72,C'X'                                               PG027600
         BAL   R8,STOCARD1                                              PG027700
         MVC   COL16(15),CVOLEQ        'CVOL=UCB=VOLSER'                PG027800
         BAL   R8,STOCARD2                                              PG027900
*        FALL THROUGH TO DISPEXEC                                       PG028000
         EJECT                                                          PG028100
*********************************************************************** PG028200
*********     DISPLAY CONTROL CARDS - THEN EXECUTE OR CANCEL     ****** PG028300
*********************************************************************** PG028400
         SPACE 1                                                        PG028500
DISPEXEC EQU   *                                                        PG028600
         MVC   CONIO(42),EXECMSG1      'THE FOLLOWING . . .             PG028700
         MVI   MSLN,42                                                  PG028800
         BAL   R8,WCON2                ISSUE MSG                        PG028900
         LA    RA,CARD1                PTR TO 1ST CARD                  PG029000
         L     RB,CRDCNT               GET TOTAL # OF CARDS             PG029100
DISP1    EQU   *                                                        PG029200
         MVC   CONIO(72),0(RA)         MOVE IN CARD                     PG029300
         MVI   MSLN,72                                                  PG029400
         BAL   R8,WCON2                DISPLAY CARD                     PG029500
         LA    RA,80(RA)               BUMP TO NEXT CARD                PG029600
         BCT   RB,DISP1                LOOP                             PG029700
DISP2    EQU   *                       B HERE TO BYPASS DISPLAY         PG029800
         MVC   CONIO(39),EXECMSG2      'REPLY - 'U' TO EXEC . . .       PG029900
         MVI   MSLN,39                                                  PG030000
         MVI   RPLN,1                                                   PG030100
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PG030200
         CLI   CONIO,C'E'              EXECUTE ?                        PG030300
         BE    EXEC1                   EXEC IF 'E'                      PG030400
         CLI   CONIO,C'U'              CANCEL ?                         PG030500
         BE    RETNORM                 YES                              PG030600
         MVI   P,0                     ELSE, BREAK STRING               PG030700
         B     DISP2                   ASK AGAIN                        PG030800
EXEC1    EQU   *                                                        PG030900
         LA    RA,CARD1                POINT TO 1ST CARD                PG031000
         L     RB,CRDCNT               GET COUNT                        PG031100
EXEC2    EQU   *                                                        PG031200
         MVC   CTLCRD,0(RA)            MOVE TO I/O AREA                 PG031300
PUT      EQU   *                                                        PG031400
DITNOPSW BC    0,DITNOPDN              OPEN SW                          PG031500
         MVI   DITNOPSW+1,X'F0'        OPEN ONCE                        PG031600
         OPEN  (DITIN,(OUTPUT))                                         PG031700
DITNOPDN EQU   *                       OPEN DONE                        PG031800
         PUT   DITIN,CTLCRD                                             PG031900
         LA    RA,80(RA)               BUMP TO NEXT CARD                PG032000
         BCT   RB,EXEC2                LOOP                             PG032100
*              FALL THROUGH TO LINK                                     PG032200
         EJECT                                                          PG032300
*********************************************************************** PG032400
*******************          LINK TO IEHPROGM      ******************** PG032500
*********************************************************************** PG032600
         SPACE 1                                                        PG032700
LINK     EQU   *                                                        PG032800
         CLOSE DITIN                                                    PG032900
         MVI   DITNOPSW+1,X'00'        SET FOR NEXT OPEN                PG033000
         LINK  EP=IEHPROGM,PARAM=(EXECPARM,DDNAMES,HEADING),VL=1        PG033100
         B     LINKRET(RF)                                              PG033200
LINKRET  B     RC0                                                      PG033300
         B     RC4                                                      PG033400
         B     RC8                                                      PG033500
         B     RC12                                                     PG033600
         B     RC16                                                     PG033700
RC0      EQU   *                                                        PG033800
         MVC   MSGRC(2),=C' 0'                                          PG033900
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PG034000
RC4      EQU   *                                                        PG034100
         MVC   MSGRC(2),=C' 4'                                          PG034200
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PG034300
RC8      EQU   *                                                        PG034400
         MVC   MSGRC(2),=C' 8'                                          PG034500
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PG034600
RC12     EQU   *                                                        PG034700
         MVC   MSGRC(2),=C'12'                                          PG034800
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PG034900
RC16     EQU   *                                                        PG035000
         MVC   MSGRC(2),=C'16'                                          PG035100
ISSUERC  EQU   *                                                        PG035200
         MVC   CONIO(51),MSGUTL                                         PG035300
         MVI   MSLN,51                                                  PG035400
         BAL   R8,WCON2                ISSUE MSG                        PG035500
*        FALL THROUGH TO RETNORM                                        PG035600
         EJECT                                                          PG035700
*********************************************************************** PG035800
*******************          RETURN MECHANISM      ******************** PG035900
*********************************************************************** PG036000
         SPACE 1                                                        PG036100
RETNORM  EQU   *                                                        PG036200
         LA    RF,0                    RC = 0                           PG036300
         B     RETURN                                                   PG036400
RETR8    EQU   *                                                        PG036500
         LA    RF,4                    RC = 4                           PG036600
         B     RETURN                                                   PG036700
RETIRPT  EQU   *                                                        PG036800
         LA    RF,8                    RC = 8                           PG036900
RETURN   EQU   *                                                        PG037000
         L     RD,4(RD)                PRIME RD                         PG037100
         RETURN (14,12),RC=(15)                                         PG037200
         EJECT                                                          PG037300
*********************************************************************** PG037400
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** PG037500
*********************************************************************** PG037600
         SPACE 1                                                        PG037700
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    PG037800
WRTCON   LA    RD,SAVEAREA             PRIME RD                         PG037900
         LA    R1,PARM                 MSICCW                           PG038000
         CALL  WTORSUB                                                  PG038100
         B     WTORRET(RF)                                              PG038200
WTORRET  B     0(R8)                   RC = 0                           PG038300
         B     RETIRPT                 RC = 4                           PG038400
         EJECT                                                          PG038500
*********************************************************************** PG038600
**********               CONSOLE - WRITE ONLY  (WTO)        *********** PG038700
*********************************************************************** PG038800
         SPACE 1                                                        PG038900
WCON2    EQU   *                                                        PG039000
         LA    RD,SAVEAREA                                              PG039100
         LA    R1,PARM                 MSICCW                           PG039200
         CALL  WTOSUB                                                   PG039300
         B     WTORRET(RF)             USE WTOR RET MECH                PG039400
         EJECT                                                          PG039500
*********************************************************************** PG039600
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** PG039700
*********************************************************************** PG039800
         SPACE 1                                                        PG039900
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                PG040000
         BCTR  R0,R0                   CONSOLE REPLY.                   PG040100
         MVC   CONIO+50(5),ZEROS                                        PG040200
         MVC   CONIO+55(10),CONIO                                       PG040300
         LA    R1,CONIO+54                                              PG040400
         AR    R1,RC                                                    PG040500
RTJUST   CLI   0(R1),C' '                                               PG040600
         BNE   MOVBAC                                                   PG040700
         BCTR  R1,R0                                                    PG040800
         BCT   R0,RTJUST                                                PG040900
MOVBAC   SR    R1,RC                                                    PG041000
         MVC   CONIO(10),1(R1)                                          PG041100
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    PG041200
TSTNUM1  TM    0(R1),X'F0'                                              PG041300
         BNO   NUMBAD                                                   PG041400
         LA    R1,1(R1)                                                 PG041500
         BCT   RC,TSTNUM1                                               PG041600
         B     4(R8)                                                    PG041700
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      PG041800
         BE    BADCTL                                                   PG041900
         MVI   P,0                                                      PG042000
BADCTL   EQU   *                                                        PG042100
         B     0(R8)                                                    PG042200
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               PG042300
         CVB   R1,HOLD             RESULTS IN REG 1.                    PG042400
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  PG042500
         MVC   HOLD+1(7),HOLD                                           PG042600
         BR    R8                                                       PG042700
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                PG042800
         UNPK  HOLDSEQ,HOLD        IN REG 7                             PG042900
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          PG043000
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  PG043100
         MVC   HOLD+1(7),HOLD                                           PG043200
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       PG043300
         MVI   ESW,X'00'                                                PG043400
         BNE   0(R8)               NO, RETURN.                          PG043500
         LA    R1,HOLDSEQ                                               PG043600
         LA    R0,7                REPLACE WITH                         PG043700
DECLOP   CLI   0(R1),C'0'          BLANKS.                              PG043800
         BNE   0(R8)                                                    PG043900
         MVI   0(R1),C' '                                               PG044000
         LA    R1,1(R1)                                                 PG044100
         BCT   R0,DECLOP                                                PG044200
         BR    R8                                                       PG044300
         EJECT                                                          PG044400
*********************************************************************** PG044500
**********        COMMON STORE ROUTINE FOR CONTROL CARDS    *********** PG044600
*********************************************************************** PG044700
         SPACE 1                                                        PG044800
STOCARD1 EQU   *                                                        PG044900
         MVC   CARD1,CTLCRD            STORE                            PG045000
         B     STOCNT                                                   PG045100
STOCARD2 EQU   *                                                        PG045200
         MVC   CARD2,CTLCRD            STORE                            PG045300
         B     STOCNT                                                   PG045400
STOCARD3 EQU   *                                                        PG045500
         MVC   CARD3,CTLCRD            STORE                            PG045600
STOCNT   EQU   *                                                        PG045700
         MVC   CTLCRD,BLANKS           CLEAR                            PG045800
         LA    R3,CTLCRD                                                PG045900
         L     RB,CRDCNT               BUMP                             PG046000
         LA    RB,1(RB)                THE                              PG046100
         ST    RB,CRDCNT               COUNTER                          PG046200
         BR    R8                      RETURN                           PG046300
         EJECT                                                          PG046400
*********************************************************************** PG046500
*******************            MOVE SCAN ROUTINE           ************ PG046600
*********************************************************************** PG046700
         SPACE 1                                                        PG046800
MOVESCAN EQU   *                                                        PG046900
         LA    R9,CONIO                INPUT PTR                        PG047000
MOVELOOP MVC   0(1,R3),0(R9)           MOVE IN CHAR.                    PG047100
         LA    R3,1(R3)                BUMP PTR                         PG047200
         LA    R9,1(R9)                BUMP PTR                         PG047300
         CLI   0(R9),X'40'             BLANK ?                          PG047400
         BE    MOVEDONE                YES                              PG047500
         BCT   R1,MOVELOOP             LOOP                             PG047600
MOVEDONE EQU   *                                                        PG047700
         BR    R8                      RETURN                           PG047800
         EJECT                                                          PG047900
*********************************************************************** PG048000
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** PG048100
*********************************************************************** PG048200
         SPACE 1                                                        PG048300
DITIN    DCB   DSORG=PS,MACRF=PM,DDNAME=DITIN,RECFM=FB,                XPG048400
               BLKSIZE=80,LRECL=80,BUFNO=1,BFTEK=S                      PG048500
         EJECT                                                          PG048600
         DS    0F                      FORCE FW BOUNDARY                PG048700
         DS    H                       FORCE HW BOUNDARY                PG048800
EXECPARM EQU   *                                                        PG048900
         DC    H'0'                    ZERO PARM FIELD INFO             PG049000
         SPACE 1                                                        PG049100
         DS    0F                      FORCE FW BOUNDARY                PG049200
         DS    H                       FORCE HW BOUNDARY                PG049300
DDNAMES  EQU   *                                                        PG049400
         DC    H'48'         ONLY 6 DD ENTRIES ARE ACCEPTABLE WHEN      PG049500
*        LINKING TO IEHPROGM. ELSE MSG IEH211I RESULTS.                 PG049600
         DC    XL8'00'                 USE DEFAULT DDNAME               PG049700
         DC    XL8'00'                 USE DEFAULT DDNAME               PG049800
         DC    XL8'00'                 USE DEFAULT DDNAME               PG049900
         DC    XL8'00'                 USE DEFAULT DDNAME               PG050000
         DC    C'DITIN   '             ALT. SYSIN                       PG050100
         DC    C'DITPRINT'             ALT. SYSPRINT                    PG050200
*        DC    XL8'00'                 USE DEFAULT DDNAME               PG050300
SYSUT1   EQU   *                                                        PG050400
*        DC    C'SYSUT1  '             NO CHANGE                        PG050500
SYSUT2   EQU   *                                                        PG050600
*        DC    C'SYSUT2  '             NO CHANGE                        PG050700
         SPACE 1                                                        PG050800
         DS    0F                      FORCE FW BOUNDARY                PG050900
HEADING  EQU   *                                                        PG051000
         DC    H'4'                                                     PG051100
         DC    C'0001'                 NO CHANGE                        PG051200
         DS    0F                                                       PG051300
TIOTADDR DC    F'0'                PTR TO TIOT, USE TO GET TAPE UCB'S   PG051400
PARM     DC    A(0)                    STORE MSICCW ADR HERE            PG051500
         EJECT                                                          PG051600
SCRATCH  DC    C' SCRATCH '                                             PG051700
RENAME   DC    C' RENAME  '                                             PG051800
CATLG    DC    C' CATLG   '                                             PG051900
UNCATLG  DC    C' UNCATLG '                                             PG052000
DSNAME   DC    C'DSNAME='                                               PG052100
NEWNAME  DC    C'NEWNAME='                                              PG052200
CVOLEQ   DC    C'C'                                                     PG052300
VOLEQ    DC    C'VOL='                                                  PG052400
UCBNAME1 DC    C'UCB'                  MOVE UCB NAME FIELD HERE         PG052500
         DC    C'='                                                     PG052600
VOLSER   DC    C'XXXXXX'                                                PG052700
MSGUTL   DC    C'IEHPROGM RETURN CODE IS '                              PG052800
MSGRC    DC    C'  '                                                    PG052900
MSGSYS   DC    C' CHECK SYSOUT FOR DETAILS'                             PG053000
SCRMSG1  DC    C'REPLY - ''DSNAME'''                                    PG053100
         DC    C' OR '''                                                PG053200
VTOC     DC    C'VTOC'''                                                PG053300
SCRMSG3  DC    C'REPLY - ''MEMBNAME'' OR ''U'' IF NONE'                 PG053400
SCRMSG4  DC    C'REPLY - ''P'' (PURGE OPTION) OR ''U'' (NO PURGE)'      PG053500
SCRMSG5  DC    C'REPLY - ''S'' (SYS OPTION) OR ''U'' (NO SYS)'          PG053600
EXECMSG1 DC    C'THE FOLLOWING CONTROL CARD HAS BEEN BUILT:'            PG053700
EXECMSG2 DC    C'REPLY - ''E'' TO EXECUTE OR ''U'' TO CANCEL'           PG053800
RENMSG1  DC    C'REPLY - ''NEWNAME'' OF DSN OR MEMBER'                  PG053900
RENMSG2  DC    C'REPLY - ''MEMBNAME'' TO BE RENAMED OR ''U'' IF NONE'   PG054000
CATMSG1  DC    C'REPLY - ''C'' (CVOL OPTION) OR ''U'' (NO CVOL)'        PG054100
CATMSG2  DC    C'REPLY - ''DEVICE'' TYPE FOR CATALOG ENTRY '            PG054200
         DC    C'(E.G. ''3330'')'                                       PG054300
CATMSG3  DC    C'REPLY - ''VOLSER LIST'' (E.G. ''SERNO1'' OR '          PG054400
         DC    C'''SERNO1,SERNO2'' - LIMIT IS 5)'                       PG054500
DITTODD1 DC    C'DITTODD1 DD CARD MISSING'                              PG054600
COMVTOC  DC    C',VTOC'                                                 PG054700
COMPURGE DC    C',PURGE'                                                PG054800
COMSYS   DC    C',SYS'                                                  PG054900
COMEMBER DC    C',MEMBER='                                              PG055000
DSNSW    DC    X'00'                                                    PG055100
         DS    0F                                                       PG055200
SAVEAREA DS    18F                                                      PG055300
CTLCRD   DS    0CL80                                                    PG055400
COL1     DS    CL10                                                     PG055500
COL11    DS    CL5                                                      PG055600
COL16    DS    CL56                                                     PG055700
COL72    DS    CL9                                                      PG055800
DSNSAV   DS    CL44                                                     PG055900
NEWSAV   DS    CL44                                                     PG056000
CRDCNT   DS    F                       COUNT # OF CARDS                 PG056100
CARD1    DS    CL80                    CONTROL CARD                     PG056200
CARD2    DS    CL80                    CONTROL CARD                     PG056300
CARD3    DS    CL80                    CONTROL CARD                     PG056400
         LTORG                         FORCE LITERALS HERE              PG056500
         EJECT                                                          PG056600
         COPY  DITTODS1                                                 PG056700
         SPACE 1                                                        PG056800
         COPY  DITTODS2                                                 PG056900
         CSECT                                                          PG057000
         END   DITTOPGM                                                 PG057100
/*                                                                      PG057200
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PG057300
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PG057400
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PG057500
//LKED.SYSIN DD *                                                       PG057600
 NAME OITTOPGM(R)                      OBJECT                           PG057700
/*                                                                      PG057800
//                                                                      PG057900
//DITTOLST JOB ('A=SX82'),'PAS3 BRAMMER',                               LS058000
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LS058100
//PROCSTEP EXEC DITTODSR                                                LS058200
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               LS058300
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      LS058400
//             DD DSN=SYS1.MACLIB,DISP=SHR                              LS058500
//ASM.SYSPUNCH DD DUMMY                                                 LS058600
//ASM.SYSIN DD *                                                        LS058700
         TITLE '* * * * * *    IEHLIST ROUTINE FOR OSDITTO * * * * *'   LS058800
         SPACE 20                                                       LS058900
*********************************************************************** LS059000
*                                                                     * LS059100
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * LS059200
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * LS059300
*                                                                     * LS059400
*********************************************************************** LS059500
         EJECT                                                          LS059600
*********************************************************************** LS059700
**********              DITTOLST IS LINKED FROM OSDITTO     *********** LS059800
*********************************************************************** LS059900
         SPACE 2                                                        LS060000
         ISEQ  75,80                                                    LS060100
DITTOLST START                                                          LS060200
         SAVE  (14,12)                                                  LS060300
         LR    R2,RD                                                    LS060400
         BALR  R6,R0                                                    LS060500
         USING *,R6                                                     LS060600
         LA    RD,SAVEAREA                                              LS060700
         ST    RD,8(R2)            PTR TO MY S.A.                       LS060800
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 LS060900
         B     AROUND              BR BY COPYRIGHT                      LS061000
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               LS061100
         DC    C'08-15-75 VERS.1 MOD.0'                                 LS061200
AROUND   EQU   *                                                        LS061300
         L     R2,0(R1)                GET  MSICCW ADR                  LS061400
         USING MAIN,R2                 ADDRESS MSICCW . . .             LS061500
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           LS061600
         EJECT                                                          LS061700
*********************************************************************** LS061800
*********          OBTAIN UCBNAME AND VOLSER              ************* LS061900
*********************************************************************** LS062000
         SPACE 1                                                        LS062100
TIOTLOOK EQU   *                                                        LS062200
         EXTRACT TIOTADDR,FIELDS=(TIOT)    GET TIOT POINTER FROM TCB    LS062300
LOOKINIT EQU   *                   INITIALIZE FOR TIOT SCAN             LS062400
         L     R1,TIOTADDR         PRIME R8 WITH TIOT PTR               LS062500
         LA    R1,24(R1)           BUMP TO 1ST DD ENTRY                 LS062600
LOOK     CLC   4(8,R1),DITTODD1        DDNAME TIOT ENTRY = DITTODD1 ?   LS062700
         BNE   LOOKBUMP            NO, BUMP TO NEXT ENTRY               LS062800
         LH    R9,18(R1)           GET UCB ADDRESS                      LS062900
         MVC   UCBNAME1(3),13(R9)  SAVE UCB CUU                         LS063000
         MVC   VOLSER(6),28(R9)        GET VOLSER                       LS063100
         B     LOOKDONE                                                 LS063200
LOOKBUMP SR    R9,R9               CLEAR R9                             LS063300
         IC    R9,0(R1)            PICK UP TIOT ENTRY LENGTH            LS063400
         AR    R1,R9               BUMP TO NEXT ENTRY ADDRESS           LS063500
         CLI   0(R1),X'00'         END OF TIOT ?                        LS063600
         BNE   LOOK                NO, CONTINUE LOOKING. YES, FALL THRU LS063700
         MVI   MSLN,24                                                  LS063800
         MVC   CONIO(24),DITTODD1      'DITTODD1 DD CARD MISSING'       LS063900
         BAL   R8,WCON2                ISSUE MSG                        LS064000
         B     RETR8                   INVALID FUNCTION                 LS064100
LOOKDONE EQU   *                                                        LS064200
         EJECT                                                          LS064300
*********************************************************************** LS064400
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** LS064500
*********************************************************************** LS064600
         SPACE 1                                                        LS064700
         CLI   CNTRLSW,X'FF'           CONTROL CARD MODE ?              LS064800
         BE    RETR8                   YES, INVALID FUNCTION N JOBSTRM  LS064900
         LA    R3,CTLCRD               PTR                              LS065000
         LA    R3,24(R3)               BUMP PTR                         LS065100
         MVC   CTLCRD,BLANKS           CLEAR                            LS065200
         SR    RB,RB                   CLEAR                            LS065300
         ST    RB,CRDCNT               CRDCNT                           LS065400
         CLC   FUNCOD,=C'LCU'           LISTCTLG                        LS065500
         BE    LC                      YES                              LS065600
         CLC   FUNCOD,=C'LPU'          LISTPDS                          LS065700
         BE    LP                      YES                              LS065800
         CLC   FUNCOD,=C'LVU'           LISTVTOC                        LS065900
         BE    LV                      YES                              LS066000
         CLC   FUNCOD,=C'LSU'          LIST SPACE                       LS066100
         BE    LS                      YES                              LS066200
         B     RETR8                   INVALID FUNCTION                 LS066300
         EJECT                                                          LS066400
*********************************************************************** LS066500
**********         LISTCTLG SYSIN BUILD ROUTINE             *********** LS066600
*********************************************************************** LS066700
         SPACE 1                                                        LS066800
LC       EQU   *                                                        LS066900
         MVC   COL1(10),LISTCTLG       OP CODE                          LS067000
         MVC   CTLCRD+10(14),VOLEQ     'VOL=UCB=VOLSER'                 LS067100
         MVC   CONIO(45),LCMSG1        'REPLY -  NODE . . .             LS067200
         MVI   MSLN,45                                                  LS067300
         MVI   RPLN,44                                                  LS067400
         BAL   R8,WRTCON               GET NODE                         LS067500
         CLC   CONIO(2),=C'U '         'U' + ' ' IN CASE REPLY = 'UDSN' LS067600
         BE    NODEDONE                                                 LS067700
         MVC   0(6,R3),NODE            ',NODE='                         LS067800
         LA    R3,6(R3)                BUMP PTR                         LS067900
         MVC   0(44,R3),CONIO          GET NODE VALUE                   LS068000
NODEDONE EQU   *                                                        LS068100
         BAL   R8,STOCARD1                                              LS068200
         B     DISPEXEC                DISPLAY AND EXECUTE              LS068300
         EJECT                                                          LS068400
*********************************************************************** LS068500
**********         LISTPDS  SYSIN BUILD ROUTINE             *********** LS068600
*********************************************************************** LS068700
         SPACE 1                                                        LS068800
LP       EQU   *                                                        LS068900
         MVC   COL1(10),LISTPDS        OP CODE                          LS069000
         MVC   CTLCRD+10(14),VOLEQ     'VOL=UCB=VOLSER'                 LS069100
         MVC   CONIO(16),LPMSG1        'REPLY - 'DSNAME''               LS069200
         MVI   MSLN,16                                                  LS069300
         MVI   RPLN,44                                                  LS069400
         BAL   R8,WRTCON               GET DSNAME                       LS069500
         MVC   DSNSAV,CONIO            SAVE DSN                         LS069600
         MVI   MSLN,50                                                  LS069700
         MVI   RPLN,1                                                   LS069800
         MVC   CONIO(50),LPMSG2        'REPLY - 'F' (FORMAT) . . .      LS069900
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             LS070000
         CLI   CONIO,C'D'              DUMP ?                           LS070100
         BE    LPDUMP                  YES                              LS070200
         CLI   CONIO,C'F'              FORMAT ?                         LS070300
         BE    LPFORMAT                YES                              LS070400
         B     LP4                     ASSUME 'U' - NEITHER             LS070500
LPDUMP   EQU   *                                                        LS070600
         MVC   0(5,R3),COMDUMP         ',DUMP'                          LS070700
         LA    R3,5(R3)                BUMP PTR                         LS070800
         B     LP4                                                      LS070900
LPFORMAT EQU   *                                                        LS071000
         MVC   0(7,R3),COMFORMA        ',FORMAT'                        LS071100
         LA    R3,7(R3)                BUMP PTR                         LS071200
LP4      EQU   *                                                        LS071300
         MVI   0(R3),C','              PLUG CONTIN. COMMA               LS071400
         MVI   COL72,C'X'              X IN 72                          LS071500
         BAL   R8,STOCARD1                                              LS071600
         MVC   COL16(7),DSNAME         'DSNAME='                        LS071700
         LA    R3,CTLCRD                                                LS071800
         LA    R3,22(R3)               BUMP PTR                         LS071900
         MVC   0(44,R3),DSNSAV         PLUG DSNAME                      LS072000
         BAL   R8,STOCARD2                                              LS072100
         B     DISPEXEC                DISPLAY AND EXECUTE              LS072200
         EJECT                                                          LS072300
*********************************************************************** LS072400
**********         LISTVTOC SYSIN BUILD ROUTINE             *********** LS072500
*********************************************************************** LS072600
         SPACE 1                                                        LS072700
LV       EQU   *                                                        LS072800
         MVC   COL1(10),LISTVTOC       OP CODE                          LS072900
         MVC   CTLCRD+10(14),VOLEQ     'VOL=UCB=VOLSER'                 LS073000
         MVI   RPLN,1                                                   LS073100
         MVI   MSLN,50                                                  LS073200
         MVC   CONIO(50),LPMSG2        'REPLY - 'F' (FORMAT) . . .      LS073300
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             LS073400
         CLI   CONIO,C'D'              DUMP ?                           LS073500
         BE    LVDUMP                  YES                              LS073600
         CLI   CONIO,C'F'              FORMAT ?                         LS073700
         BE    LVFORMAT                YES                              LS073800
         B     LVDATE                  ASSUME 'U' - NEITHER             LS073900
LVDUMP   EQU   *                                                        LS074000
         MVC   0(5,R3),COMDUMP         ',DUMP'                          LS074100
         LA    R3,5(R3)                BUMP PTR                         LS074200
         B     LVDSN                                                    LS074300
LVFORMAT EQU   *                                                        LS074400
         MVC   0(7,R3),COMFORMA        ',FORMAT'                        LS074500
         LA    R3,7(R3)                BUMP PTR                         LS074600
         B     LVDSN                                                    LS074700
LVDATE0  EQU   *                                                        LS074800
         MVI   P,0                     BREAK STRING PARAM               LS074900
LVDATE   EQU   *                                                        LS075000
         MVC   CONIO(46),LVMSG1        'REPLY - 'DDDYY . .              LS075100
         MVI   MSLN,46                                                  LS075200
         MVI   RPLN,5                                                   LS075300
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             LS075400
         CLI   CONIO,C'U'              NO DATE                          LS075500
         BE    LVNODSN                 DO NOT ASK FOR DSN               LS075600
         LA    RC,5                    SET FOR DDDYY NUMERIC CHECK      LS075700
         LA    R1,CONIO                POINT TO REPLY                   LS075800
         BAL   R8,TSTNUM1              TEST                             LS075900
         B     LVDATE0                 IF NOT NUM. BREAK STRING & ASK   LS076000
         MVC   0(6,R3),DATE            ',DATE='                         LS076100
         LA    R3,6(R3)                BUMP PTR                         LS076200
         MVC   0(5,R3),CONIO           PLUG DDDYY                       LS076300
         LA    R3,5(R3)                BUMP PTR                         LS076400
         B     LVNODSN                 DO NOT ASK FOR DSN               LS076500
LVDSN    EQU   *                                                        LS076600
         MVI   MSLN,51                                                  LS076700
         MVI   RPLN,44                                                  LS076800
         MVC   CONIO(51),LVMSG2        'REPLY - 'DSNAME' (DSN . . .     LS076900
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             LS077000
         CLC   CONIO(2),=C'U '         'U' + ' ' IN CASE REPLY = 'UDSN' LS077100
         BNE   LVDSN2                  PROCESS DSN                      LS077200
LVNODSN  EQU   *                                                        LS077300
         BAL   R8,STOCARD1                                              LS077400
         B     LVDONE                                                   LS077500
LVDSN2   EQU   *                                                        LS077600
         MVI   0(R3),C','              PLUG CONTIN. COMMA               LS077700
         MVI   COL72,C'X'                                               LS077800
         BAL   R8,STOCARD1                                              LS077900
         MVC   COL16(7),DSNAME         'DSNAME='                        LS078000
         LA    R3,CTLCRD                                                LS078100
         LA    R3,22(R3)               BUMP PTR                         LS078200
         MVC   0(44,R3),CONIO          PLUG DSNAME                      LS078300
         BAL   R8,STOCARD2                                              LS078400
LVDONE   EQU   *                                                        LS078500
         B     DISPEXEC                DISPLAY AND EXECUTE              LS078600
         EJECT                                                          LS078700
*********************************************************************** LS078800
**********               LIST SPACE SVC ROUTINE             *********** LS078900
*********************************************************************** LS079000
         SPACE 1                                                        LS079100
LS       EQU   *                                                        LS079200
         LA    R1,LSMSG                MSG AREA IN R1 FOR SVC           LS079300
         LR    R0,R9                   UCB ADR IN R0                    LS079400
         SVC   78                                                       LS079500
         B     LSRET(RF)                                                LS079600
LSRET    B     LSOK                    RC =  0                          LS079700
         B     LSERMSG1                RC =  4                          LS079800
         B     LSERMSG1                RC =  8                          LS079900
         B     LSERMSG1                RC = 12                          LS080000
         B     LSERMSG2                RC = 16                          LS080100
LSOK     EQU   *                                                        LS080200
         MVC   LSVOL,VOLSER            BUILD MSG                        LS080300
         MVC   LSFCTE,FCYL             BUILD MSG                        LS080400
         MVC   LSCTE,LSCYL             BUILD MSG                        LS080500
         BAL   R9,LSCTEMSG             ISSUE MSG                        LS080600
         MVC   LSFCTE,FTRK             BUILD MSG                        LS080700
         MVC   LSCTE,LSTRK             BUILD MSG                        LS080800
         BAL   R9,LSCTEMSG             ISSUE MSG                        LS080900
         MVC   LSFCTE,FEXT             BUILD MSG                        LS081000
         MVC   LSCTE,LSEXT             BUILD MSG                        LS081100
         BAL   R9,LSCTEMSG             ISSUE MSG                        LS081200
         MVC   CONIO(7),LSVOL          BUILD MSG                        LS081300
         MVC   CONIO+7(28),=C'LARGEST FREE CONTIG. AREA - '             LS081400
         MVC   CONIO+35(4),CYLCTIG                                      LS081500
         MVC   CONIO+39(6),=C' CYL, '                                   LS081600
         MVC   CONIO+45(4),TRKCTIG     BUILD MSG                        LS081700
         MVC   CONIO+49(4),=C' TRK'    BUILD MSG                        LS081800
         MVI   MSLN,53                                                  LS081900
         BAL   R8,WCON2                ISSUE MSG                        LS082000
         B     RETNORM                                                  LS082100
LSCTEMSG EQU   *                                                        LS082200
         MVI   MSLN,30                                                  LS082300
         MVC   CONIO(30),LSMSG1        'VOLSER HAS . . .                LS082400
         BAL   R8,WCON2                                                 LS082500
         BR    R9                                                       LS082600
LSERMSG1 EQU   *                                                        LS082700
         MVC   CONIO(30),LSMSG         RC = 4,8,12                      LS082800
         MVI   MSLN,30                                                  LS082900
         BAL   R8,WCON2                ISSUE MSG                        LS083000
         B     RETNORM                                                  LS083100
LSERMSG2 EQU   *                                                        LS083200
         MVC   CONIO(24),=C'SHOULD NOT OCCUR - RC=16'                   LS083300
         MVI   MSLN,24                                                  LS083400
         BAL   R8,WCON2                                                 LS083500
         B     RETNORM                                                  LS083600
         EJECT                                                          LS083700
*********************************************************************** LS083800
*********     DISPLAY CONTROL CARDS - THEN EXECUTE OR CANCEL     ****** LS083900
*********************************************************************** LS084000
         SPACE 1                                                        LS084100
DISPEXEC EQU   *                                                        LS084200
         MVC   CONIO(42),EXECMSG1      'THE FOLLOWING . . .             LS084300
         MVI   MSLN,42                                                  LS084400
         BAL   R8,WCON2                ISSUE MSG                        LS084500
         LA    RA,CARD1                PTR TO 1ST CARD                  LS084600
         L     RB,CRDCNT               GET TOTAL # OF CARDS             LS084700
DISP1    EQU   *                                                        LS084800
         MVC   CONIO(72),0(RA)         MOVE IN CARD                     LS084900
         MVI   MSLN,72                                                  LS085000
         BAL   R8,WCON2                DISPLAY CARD                     LS085100
         LA    RA,80(RA)               BUMP TO NEXT CARD                LS085200
         BCT   RB,DISP1                LOOP                             LS085300
DISP2    EQU   *                       B HERE TO BYPASS DISPLAY         LS085400
         MVC   CONIO(39),EXECMSG2      'REPLY - 'U' TO EXEC . . .       LS085500
         MVI   MSLN,39                                                  LS085600
         MVI   RPLN,1                                                   LS085700
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             LS085800
         CLI   CONIO,C'E'              EXECUTE ?                        LS085900
         BE    EXEC1                   EXEC IF 'E'                      LS086000
         CLI   CONIO,C'U'              CANCEL ?                         LS086100
         BE    RETNORM                 YES                              LS086200
         MVI   P,0                     ELSE, BREAK STRING               LS086300
         B     DISP2                   ASK AGAIN                        LS086400
EXEC1    EQU   *                                                        LS086500
         LA    RA,CARD1                POINT TO 1ST CARD                LS086600
         L     RB,CRDCNT               GET COUNT                        LS086700
EXEC2    EQU   *                                                        LS086800
         MVC   CTLCRD,0(RA)            MOVE TO I/O AREA                 LS086900
PUT      EQU   *                                                        LS087000
DITNOPSW BC    0,DITNOPDN              OPEN SW                          LS087100
         MVI   DITNOPSW+1,X'F0'        OPEN ONCE                        LS087200
         OPEN  (DITIN,(OUTPUT))                                         LS087300
DITNOPDN EQU   *                       OPEN DONE                        LS087400
         PUT   DITIN,CTLCRD                                             LS087500
         LA    RA,80(RA)               BUMP TO NEXT CARD                LS087600
         BCT   RB,EXEC2                LOOP                             LS087700
*              FALL THROUGH TO LINK                                     LS087800
         EJECT                                                          LS087900
*********************************************************************** LS088000
*******************          LINK TO IEHLIST       ******************** LS088100
*********************************************************************** LS088200
         SPACE 1                                                        LS088300
LINK     EQU   *                                                        LS088400
         CLOSE DITIN                                                    LS088500
         MVI   DITNOPSW+1,X'00'        SET FOR NEXT OPEN                LS088600
         LINK  EP=IEHLIST,PARAM=(EXECPARM,DDNAMES,HEADING),VL=1         LS088700
         B     LINKRET(RF)                                              LS088800
LINKRET  B     RC0                                                      LS088900
         B     RC4                                                      LS089000
         B     RC8                                                      LS089100
         B     RC12                                                     LS089200
         B     RC16                                                     LS089300
RC0      EQU   *                                                        LS089400
         MVC   MSGRC(2),=C' 0'                                          LS089500
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      LS089600
RC4      EQU   *                                                        LS089700
         MVC   MSGRC(2),=C' 4'                                          LS089800
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      LS089900
RC8      EQU   *                                                        LS090000
         MVC   MSGRC(2),=C' 8'                                          LS090100
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      LS090200
RC12     EQU   *                                                        LS090300
         MVC   MSGRC(2),=C'12'                                          LS090400
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      LS090500
RC16     EQU   *                                                        LS090600
         MVC   MSGRC(2),=C'16'                                          LS090700
ISSUERC  EQU   *                                                        LS090800
         MVC   CONIO(51),MSGUTL                                         LS090900
         MVI   MSLN,51                                                  LS091000
         BAL   R8,WCON2                ISSUE MSG                        LS091100
*        FALL THROUGH TO RETNORM                                        LS091200
         EJECT                                                          LS091300
*********************************************************************** LS091400
*******************          RETURN MECHANISM      ******************** LS091500
*********************************************************************** LS091600
         SPACE 1                                                        LS091700
RETNORM  EQU   *                                                        LS091800
         LA    RF,0                    RC = 0                           LS091900
         B     RETURN                                                   LS092000
RETR8    EQU   *                                                        LS092100
         LA    RF,4                    RC = 4                           LS092200
         B     RETURN                                                   LS092300
RETIRPT  EQU   *                                                        LS092400
         LA    RF,8                    RC = 8                           LS092500
RETURN   EQU   *                                                        LS092600
         L     RD,4(RD)                PRIME RD                         LS092700
         RETURN (14,12),RC=(15)                                         LS092800
         EJECT                                                          LS092900
*********************************************************************** LS093000
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** LS093100
*********************************************************************** LS093200
         SPACE 1                                                        LS093300
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    LS093400
WRTCON   LA    RD,SAVEAREA             PRIME RD                         LS093500
         LA    R1,PARM                 MSICCW                           LS093600
         CALL  WTORSUB                                                  LS093700
         B     WTORRET(RF)                                              LS093800
WTORRET  B     0(R8)                   RC = 0                           LS093900
         B     RETIRPT                 RC = 4                           LS094000
         EJECT                                                          LS094100
*********************************************************************** LS094200
**********               CONSOLE - WRITE ONLY  (WTO)        *********** LS094300
*********************************************************************** LS094400
         SPACE 1                                                        LS094500
WCON2    EQU   *                                                        LS094600
         LA    RD,SAVEAREA                                              LS094700
         LA    R1,PARM                 MSICCW                           LS094800
         CALL  WTOSUB                                                   LS094900
         B     WTORRET(RF)             USE WTOR RET MECH                LS095000
         EJECT                                                          LS095100
*********************************************************************** LS095200
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** LS095300
*********************************************************************** LS095400
         SPACE 1                                                        LS095500
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                LS095600
         BCTR  R0,R0                   CONSOLE REPLY.                   LS095700
         MVC   CONIO+50(5),ZEROS                                        LS095800
         MVC   CONIO+55(10),CONIO                                       LS095900
         LA    R1,CONIO+54                                              LS096000
         AR    R1,RC                                                    LS096100
RTJUST   CLI   0(R1),C' '                                               LS096200
         BNE   MOVBAC                                                   LS096300
         BCTR  R1,R0                                                    LS096400
         BCT   R0,RTJUST                                                LS096500
MOVBAC   SR    R1,RC                                                    LS096600
         MVC   CONIO(10),1(R1)                                          LS096700
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    LS096800
TSTNUM1  TM    0(R1),X'F0'                                              LS096900
         BNO   NUMBAD                                                   LS097000
         LA    R1,1(R1)                                                 LS097100
         BCT   RC,TSTNUM1                                               LS097200
         B     4(R8)                                                    LS097300
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      LS097400
         BE    BADCTL                                                   LS097500
         MVI   P,0                                                      LS097600
BADCTL   EQU   *                                                        LS097700
         B     0(R8)                                                    LS097800
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               LS097900
         CVB   R1,HOLD             RESULTS IN REG 1.                    LS098000
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  LS098100
         MVC   HOLD+1(7),HOLD                                           LS098200
         BR    R8                                                       LS098300
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                LS098400
         UNPK  HOLDSEQ,HOLD        IN REG 7                             LS098500
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          LS098600
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  LS098700
         MVC   HOLD+1(7),HOLD                                           LS098800
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       LS098900
         MVI   ESW,X'00'                                                LS099000
         BNE   0(R8)               NO, RETURN.                          LS099100
         LA    R1,HOLDSEQ                                               LS099200
         LA    R0,7                REPLACE WITH                         LS099300
DECLOP   CLI   0(R1),C'0'          BLANKS.                              LS099400
         BNE   0(R8)                                                    LS099500
         MVI   0(R1),C' '                                               LS099600
         LA    R1,1(R1)                                                 LS099700
         BCT   R0,DECLOP                                                LS099800
         BR    R8                                                       LS099900
         EJECT                                                          LS100000
*********************************************************************** LS100100
**********        COMMON STORE ROUTINE FOR CONTROL CARDS    *********** LS100200
*********************************************************************** LS100300
         SPACE 1                                                        LS100400
STOCARD1 EQU   *                                                        LS100500
         MVC   CARD1,CTLCRD            STORE                            LS100600
         B     STOCNT                                                   LS100700
STOCARD2 EQU   *                                                        LS100800
         MVC   CARD2,CTLCRD            STORE                            LS100900
         B     STOCNT                                                   LS101000
STOCARD3 EQU   *                                                        LS101100
         MVC   CARD3,CTLCRD            STORE                            LS101200
STOCNT   EQU   *                                                        LS101300
         MVC   CTLCRD,BLANKS           CLEAR                            LS101400
         LA    R3,CTLCRD                                                LS101500
         L     RB,CRDCNT               BUMP                             LS101600
         LA    RB,1(RB)                THE                              LS101700
         ST    RB,CRDCNT               COUNTER                          LS101800
         BR    R8                      RETURN                           LS101900
         EJECT                                                          LS102000
*********************************************************************** LS102100
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** LS102200
*********************************************************************** LS102300
         SPACE 1                                                        LS102400
DITIN    DCB   DSORG=PS,MACRF=PM,DDNAME=DITIN,RECFM=FB,                XLS102500
               BLKSIZE=80,LRECL=80,BUFNO=1,BFTEK=S                      LS102600
         EJECT                                                          LS102700
         DS    0F                      FORCE FW BOUNDARY                LS102800
         DS    H                       FORCE HW BOUNDARY                LS102900
EXECPARM EQU   *                                                        LS103000
         DC    H'0'                    ZERO PARM FIELD INFO             LS103100
         SPACE 1                                                        LS103200
         DS    0F                      FORCE FW BOUNDARY                LS103300
         DS    H                       FORCE HW BOUNDARY                LS103400
DDNAMES  EQU   *                                                        LS103500
         DC    H'48'         ONLY 6 DD ENTRIES NECESSARY                LS103600
         DC    XL32'00'                                                 LS103700
         DC    C'DITIN   '             ALT. SYSIN                       LS103800
         DC    C'DITPRINT'             ALT. SYSPRINT                    LS103900
*        DC    XL8'00'                                                  LS104000
SYSUT1   EQU   *                                                        LS104100
*        DC    C'SYSUT1  '             NO CHANGE                        LS104200
SYSUT2   EQU   *                                                        LS104300
*        DC    C'SYSUT2  '             NO CHANGE                        LS104400
         SPACE 1                                                        LS104500
         DS    0F                      FORCE FW BOUNDARY                LS104600
HEADING  EQU   *                                                        LS104700
         DC    H'4'                                                     LS104800
         DC    C'0001'                 NO CHANGE                        LS104900
         DS    0F                                                       LS105000
TIOTADDR DC    F'0'                PTR TO TIOT, USE TO GET TAPE UCB'S   LS105100
PARM     DC    A(0)                    STORE MSICCW ADR HERE            LS105200
         EJECT                                                          LS105300
LISTCTLG DC    C' LISTCTLG '                                            LS105400
LISTPDS  DC    C' LISTPDS  '                                            LS105500
LISTVTOC DC    C' LISTVTOC '                                            LS105600
VOLEQ    DC    C'VOL='                                                  LS105700
UCBNAME1 DC    C'UCB'                  MOVE UCB NAME FIELD HERE         LS105800
         DC    C'='                                                     LS105900
VOLSER   DC    C'XXXXXX'                                                LS106000
MSGUTL   DC    C'IEHLIST  RETURN CODE IS '                              LS106100
MSGRC    DC    C'  '                                                    LS106200
MSGSYS   DC    C' CHECK SYSOUT FOR DETAILS'                             LS106300
LCMSG1   DC    C'REPLY - ''NODE'' (E.G.''SYS1'') OR ''U'' IF NO NODE'   LS106400
NODE     DC    C',NODE='                                                LS106500
LPMSG1   DC    C'REPLY - ''DSNAME'''                                    LS106600
LPMSG2   DC    C'REPLY - ''F'' (FORMAT), ''D'' (DUMP), OR ''U'''        LS106700
         DC    C' (NEITHER)'                                            LS106800
COMFORMA DC    C',FORMAT'                                               LS106900
COMDUMP  DC    C',DUMP'                                                 LS107000
DSNAME   DC    C'DSNAME='                                               LS107100
LVMSG1   DC    C'REPLY - ''DDDYY'' (DATE OPTION) OR ''U'' (NO DATE)'    LS107200
LVMSG2   DC    C'REPLY - ''DSNAME'' (DSNAME OPTION) OR '                LS107300
         DC    C'''U'' (NO DSNAME)'                                     LS107400
DATE     DC    C',DATE='                                                LS107500
EXECMSG1 DC    C'THE FOLLOWING CONTROL CARD HAS BEEN BUILT:'            LS107600
EXECMSG2 DC    C'REPLY - ''E'' TO EXECUTE OR ''U'' TO CANCEL'           LS107700
DITTODD1 DC    C'DITTODD1 DD CARD MISSING'                              LS107800
LSMSG    DS    0CL30                   SVC 78 MSG AREA                  LS107900
SPACE    DC    C'SPACE='                                                LS108000
FCYL     DC    C'CCCC'                                                  LS108100
         DC    C','                                                     LS108200
FTRK     DC    C'TTTT'                                                  LS108300
         DC    C','                                                     LS108400
FEXT     DC    C'AAAA'                                                  LS108500
         DC    C'/'                                                     LS108600
CYLCTIG  DC    C'CCCC'                                                  LS108700
         DC    C','                                                     LS108800
TRKCTIG  DC    C'TTTT'                                                  LS108900
LSMSG1   EQU   *                                                        LS109000
LSVOL    DC    CL6'123456'                                              LS109100
         DC    C' HAS '                                                 LS109200
LSFCTE   DC    CL4'****'                                                LS109300
LSFREE   DC    C' FREE '                                                LS109400
LSCTE    DC    CL9'CYLINDERS'                                           LS109500
LSCYL    DC    CL9'CYLINDERS'                                           LS109600
LSTRK    DC    CL9'TRACKS   '                                           LS109700
LSEXT    DC    CL9'EXTENTS  '                                           LS109800
         DS    0F                                                       LS109900
SAVEAREA DS    18F                                                      LS110000
CTLCRD   DS    0CL80                                                    LS110100
COL1     DS    CL10                                                     LS110200
COL11    DS    CL5                                                      LS110300
COL16    DS    CL56                                                     LS110400
COL72    DS    CL9                                                      LS110500
CRDCNT   DS    F                       COUNT # OF CARDS                 LS110600
CARD1    DS    CL80                                                     LS110700
CARD2    DS    CL80                                                     LS110800
CARD3    DS    CL80                                                     LS110900
DSNSAV   DS    CL44                    SAVE DSNAME                      LS111000
         LTORG                         FORCE LITERALS HERE              LS111100
         EJECT                                                          LS111200
         COPY  DITTODS1                                                 LS111300
         SPACE 1                                                        LS111400
         COPY  DITTODS2                                                 LS111500
         CSECT                                                          LS111600
         END   DITTOLST                                                 LS111700
/*                                                                      LS111800
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LS111900
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LS112000
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LS112100
//LKED.SYSIN DD *                                                       LS112200
 NAME OITTOLST(R)                                                       LS112300
/*                                                                      LS112400
//                                                                      LS112500
//DITTOPDS JOB ('A=SX82'),'PAS3 BRAMMER',                               PD112600
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      PD112700
//PROCSTEP EXEC DITTODSR                                                PD112800
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               PD112900
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      PD113000
//             DD DSN=SYS1.MACLIB,DISP=SHR                              PD113100
//ASM.SYSPUNCH DD DUMMY                                                 PD113200
//ASM.SYSIN DD *                                                        PD113300
         TITLE '* * * * * *    IEBPTPCH ROUTINE FOR OSDITTO * * * * *'  PD113400
         SPACE 20                                                       PD113500
*********************************************************************** PD113600
*                                                                     * PD113700
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * PD113800
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * PD113900
*                                                                     * PD114000
*********************************************************************** PD114100
         EJECT                                                          PD114200
*********************************************************************** PD114300
**********              DITTOPDS IS LINKED FROM OSDITTO     *********** PD114400
*********************************************************************** PD114500
         SPACE 2                                                        PD114600
         ISEQ  75,80                                                    PD114700
DITTOPDS START                                                          PD114800
         SAVE  (14,12)                                                  PD114900
         LR    R2,RD                                                    PD115000
         BALR  R6,R0                                                    PD115100
         USING *,R6                                                     PD115200
         LA    RD,SAVEAREA                                              PD115300
         ST    RD,8(R2)            PTR TO MY S.A.                       PD115400
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 PD115500
         B     AROUND              BR BY COPYRIGHT                      PD115600
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               PD115700
         DC    C'08-15-75 VERS.1 MOD.0'                                 PD115800
AROUND   EQU   *                                                        PD115900
         L     R2,0(R1)                GET  MSICCW ADR                  PD116000
         USING MAIN,R2                 ADDRESS MSICCW . . .             PD116100
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           PD116200
         EJECT                                                          PD116300
*********************************************************************** PD116400
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** PD116500
*********************************************************************** PD116600
         SPACE 1                                                        PD116700
         LA    R3,CTLCRD               PTR                              PD116800
         MVC   CTLCRD,BLANKS           CLEAR                            PD116900
         MVC   MEMNAM,BLANKS           CLEAR                            PD117000
         SR    RB,RB                   CLEAR                            PD117100
         ST    RB,CRDCNT               CRDCNT                           PD117200
         CLC   FUNCOD,=C'PRT'          PRINT PDS MEMBER(S)              PD117300
         BE    PRT                                                      PD117400
         CLC   FUNCOD,=C'PUN'          PUNCH PDS MEMBER(S)              PD117500
         BE    PUN                                                      PD117600
         B     RETR8                   INVALID FUNCTION                 PD117700
         EJECT                                                          PD117800
*********************************************************************** PD117900
**********         PRT/PUN  SYSIN BUILD ROUTINE             *********** PD118000
*********************************************************************** PD118100
         SPACE 1                                                        PD118200
PRT      EQU   *                                                        PD118300
         MVC   PRTPUN,=C'PRINT'                                         PD118400
         B     PDS1                                                     PD118500
PUN      EQU   *                                                        PD118600
         MVC   PRTPUN,=C'PUNCH'                                         PD118700
         MVC   SYSUT2(8),=C'SYSPUNCH'  PLUG SYSUT2                      PD118800
PDS1     EQU   *                                                        PD118900
         CLI   CNTRLSW,X'FF'           CONTROL CARD MODE ?              PD119000
         BNE   PDSCON                  NO, CONTINUE IN CONSOLE MODE     PD119100
         CLC   LOWLIM,=XL8'00'         MEMBER SUBMITTED ?               PD119200
         BNE   MEMB                    NOT = XL8'00' = MEMB             PD119300
         MVC   CTLCRD(27),OPCARD       NO MAXNAME                       PD119400
         MVI   CARD3SW+1,X'00'         SET SW FOR 3RD CARD              PD119500
         B     PDSCNCD1                                                 PD119600
MEMB     EQU   *                                                        PD119700
         MVC   MEMNAM,LOWLIM           PLUG MEMBNAME                    PD119800
         MVC   CTLCRD(21),MEMBER       MEMBER CARD                      PD119900
         BAL   R8,STOCARD2                                              PD120000
         MVC   CTLCRD(38),OPCARD       INCLUDE MAXNAME                  PD120100
PDSCNCD1 EQU   *                                                        PD120200
         BAL   R8,STOCARD1                                              PD120300
         TM    CT,X'10'                RECSIZE SUBMITTED ?              PD120400
         BNO   PDSLREC3                NO, PLUG DEFAULT                 PD120500
         MVC   LRECL(3),HRS+2          YES, PLUG RECSIZE                PD120600
         B     PDSLREC4                                                 PD120700
PDSCON   EQU   *                                                        PD120800
         MVI   MSLN,39                                                  PD120900
         MVI   RPLN,8                                                   PD121000
         MVC   CONIO(39),PDSMSG1       'REPLY - 'MEMBNAME' . . .        PD121100
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PD121200
         CLC   CONIO(2),=C'U '         REPLY 'U' + ONE ' ' IN CASE 'UM' PD121300
         BNE   PDSMEM                                                   PD121400
         MVC   CTLCRD(27),OPCARD       NO MAXNAME                       PD121500
         BAL   R8,STOCARD1                                              PD121600
         MVI   CARD3SW+1,X'00'         SET TO FALL THRU                 PD121700
         B     PDSLREC2                                                 PD121800
PDSMEM   EQU   *                                                        PD121900
         MVC   CTLCRD(38),OPCARD       INCLUDE MAXNAME                  PD122000
         BAL   R8,STOCARD1                                              PD122100
         LA    R1,8                    MAX MEMBNAME                     PD122200
         LA    R3,MEMNAM               PRIME R3                         PD122300
         BAL   R8,MOVESCAN             MOVE IN MEMBNAME                 PD122400
         MVC   CTLCRD(21),MEMBER       MEMBER CARD                      PD122500
         BAL   R8,STOCARD2                                              PD122600
         B     PDSLREC2                                                 PD122700
PDSLREC1 EQU   *                                                        PD122800
         MVI   P,0                     BREAK STRING                     PD122900
PDSLREC2 EQU   *                                                        PD123000
         MVI   RPLN,3                                                   PD123100
         MVI   MSLN,57                                                  PD123200
         MVC   CONIO(57),PDSMSG2       'REPLY - 'NNN'  . .              PD123300
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PD123400
         CLI   CONIO,C'U'              U ?                              PD123500
         BE    PDSLREC3                YES                              PD123600
         LA    RC,3                    MAX LRECL                        PD123700
         LA    RB,CONIO                POINT TO DATA                    PD123800
         BAL   R8,TSTNUMV              TEST NUMERIC                     PD123900
         B     PDSLREC1                NOT NUMERIC                      PD124000
         MVC   LRECL(3),CONIO          PLUG VALUE                       PD124100
         B     PDSLREC4                                                 PD124200
PDSLREC3 EQU   *                                                        PD124300
         MVC   LRECL(3),=C'080'        PLUG DEFAULT                     PD124400
PDSLREC4 EQU   *                                                        PD124500
         MVC   CTLCRD(19),RECORD       RECORD CARD                      PD124600
CARD3SW  BC    15,PDS3                 SW TO CTL CARD3                  PD124700
         MVI   CARD3SW+1,X'F0'         SET                              PD124800
         BAL   R8,STOCARD2                                              PD124900
         B     PDS4                                                     PD125000
PDS3     EQU   *                                                        PD125100
         BAL   R8,STOCARD3                                              PD125200
PDS4     EQU   *                                                        PD125300
         CLI   CNTRLSW,X'FF'           CONTROL CARD MODE ?              PD125400
         BE    EXEC1                   CONTOL CARD MODE                 PD125500
*        FALL THROUGH TO DISPEXEC                                       PD125600
         EJECT                                                          PD125700
*********************************************************************** PD125800
*********     DISPLAY CONTROL CARDS - THEN EXECUTE OR CANCEL     ****** PD125900
*********************************************************************** PD126000
         SPACE 1                                                        PD126100
DISPEXEC EQU   *                                                        PD126200
         MVC   CONIO(42),EXECMSG1      'THE FOLLOWING . . .             PD126300
         MVI   MSLN,42                                                  PD126400
         BAL   R8,WCON2                ISSUE MSG                        PD126500
         LA    RA,CARD1                PTR TO 1ST CARD                  PD126600
         L     RB,CRDCNT               GET TOTAL # OF CARDS             PD126700
DISP1    EQU   *                                                        PD126800
         MVC   CONIO(72),0(RA)         MOVE IN CARD                     PD126900
         MVI   MSLN,72                                                  PD127000
         BAL   R8,WCON2                DISPLAY CARD                     PD127100
         LA    RA,80(RA)               BUMP TO NEXT CARD                PD127200
         BCT   RB,DISP1                LOOP                             PD127300
DISP2    EQU   *                       B HERE TO BYPASS DISPLAY         PD127400
         MVC   CONIO(39),EXECMSG2      'REPLY - 'U' TO EXEC . . .       PD127500
         MVI   MSLN,39                                                  PD127600
         MVI   RPLN,1                                                   PD127700
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             PD127800
         CLI   CONIO,C'E'              EXECUTE ?                        PD127900
         BE    EXEC1                   EXEC IF 'E'                      PD128000
         CLI   CONIO,C'U'              CANCEL ?                         PD128100
         BE    RETNORM                 YES                              PD128200
         MVI   P,0                     ELSE, BREAK STRING               PD128300
         B     DISP2                   ASK AGAIN                        PD128400
EXEC1    EQU   *                                                        PD128500
         LA    RA,CARD1                POINT TO 1ST CARD                PD128600
         L     RB,CRDCNT               GET COUNT                        PD128700
EXEC2    EQU   *                                                        PD128800
         MVC   CTLCRD,0(RA)            MOVE TO I/O AREA                 PD128900
PUT      EQU   *                                                        PD129000
DITNOPSW BC    0,DITNOPDN              OPEN SW                          PD129100
         MVI   DITNOPSW+1,X'F0'        OPEN ONCE                        PD129200
         OPEN  (DITIN,(OUTPUT))                                         PD129300
DITNOPDN EQU   *                       OPEN DONE                        PD129400
         PUT   DITIN,CTLCRD                                             PD129500
         LA    RA,80(RA)               BUMP TO NEXT CARD                PD129600
         BCT   RB,EXEC2                LOOP                             PD129700
*              FALL THROUGH TO LINK                                     PD129800
         EJECT                                                          PD129900
*********************************************************************** PD130000
*******************          LINK TO IEBPTPCH      ******************** PD130100
*********************************************************************** PD130200
         SPACE 1                                                        PD130300
LINK     EQU   *                                                        PD130400
         CLOSE DITIN                                                    PD130500
         MVI   DITNOPSW+1,X'00'        SET FOR NEXT OPEN                PD130600
         LINK  EP=IEBPTPCH,PARAM=(EXECPARM,DDNAMES,HEADING),VL=1        PD130700
         B     LINKRET(RF)                                              PD130800
LINKRET  B     RC0                                                      PD130900
         B     RC4                                                      PD131000
         B     RC8                                                      PD131100
         B     RC12                                                     PD131200
         B     RC16                                                     PD131300
RC0      EQU   *                                                        PD131400
         MVC   MSGRC(2),=C' 0'                                          PD131500
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PD131600
RC4      EQU   *                                                        PD131700
         MVC   MSGRC(2),=C' 4'                                          PD131800
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PD131900
RC8      EQU   *                                                        PD132000
         MVC   MSGRC(2),=C' 8'                                          PD132100
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PD132200
RC12     EQU   *                                                        PD132300
         MVC   MSGRC(2),=C'12'                                          PD132400
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      PD132500
RC16     EQU   *                                                        PD132600
         MVC   MSGRC(2),=C'16'                                          PD132700
ISSUERC  EQU   *                                                        PD132800
         MVC   CONIO(51),MSGUTL                                         PD132900
         MVI   MSLN,51                                                  PD133000
*              FALL THROUGH TO TELUSER2                                 PD133100
         EJECT                                                          PD133200
*********************************************************************** PD133300
**********         TELL USER OF ERROR CONDITION ROUTINE     *********** PD133400
*********************************************************************** PD133500
         SPACE 1                                                        PD133600
TELUSER2 CLI   CNTRLSW,X'FF'           ENTER FOR MSG N.E. 23. IN CNCD ? PD133700
         BNE   TELOPER             NO                                   PD133800
TELPGMR  MVC   PL(1),MSLN              SET PRT LN                       PD133900
         MVI   CC,X'19'            SET CTL CAR                          PD134000
         BAL   R8,PRNT             PRINT MSG TO PGMR                    PD134100
         B     RETNORM                                                  PD134200
TELOPER  EQU   *                                                        PD134300
         BAL   R8,WCON2            TELL OPERATOR                        PD134400
*        FALL THROUGH TO RETNORM                                        PD134500
         EJECT                                                          PD134600
*********************************************************************** PD134700
*******************          RETURN MECHANISM      ******************** PD134800
*********************************************************************** PD134900
         SPACE 1                                                        PD135000
RETNORM  EQU   *                                                        PD135100
         LA    RF,0                    RC = 0                           PD135200
         B     RETURN                                                   PD135300
RETR8    EQU   *                                                        PD135400
         LA    RF,4                    RC = 4                           PD135500
         B     RETURN                                                   PD135600
RETIRPT  EQU   *                                                        PD135700
         LA    RF,8                    RC = 8                           PD135800
RETURN   EQU   *                                                        PD135900
         L     RD,4(RD)                PRIME RD                         PD136000
         RETURN (14,12),RC=(15)                                         PD136100
         EJECT                                                          PD136200
*********************************************************************** PD136300
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** PD136400
*********************************************************************** PD136500
         SPACE 1                                                        PD136600
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    PD136700
WRTCON   LA    RD,SAVEAREA             PRIME RD                         PD136800
         LA    R1,PARM                 MSICCW                           PD136900
         CALL  WTORSUB                                                  PD137000
         B     WTORRET(RF)                                              PD137100
WTORRET  B     0(R8)                   RC = 0                           PD137200
         B     RETIRPT                 RC = 4                           PD137300
         EJECT                                                          PD137400
*********************************************************************** PD137500
**********               CONSOLE - WRITE ONLY  (WTO)        *********** PD137600
*********************************************************************** PD137700
         SPACE 1                                                        PD137800
WCON2    EQU   *                                                        PD137900
         LA    RD,SAVEAREA                                              PD138000
         LA    R1,PARM                 MSICCW                           PD138100
         CALL  WTOSUB                                                   PD138200
         B     WTORRET(RF)             USE WTOR RET MECH                PD138300
         EJECT                                                          PD138400
*********************************************************************** PD138500
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** PD138600
*********************************************************************** PD138700
         SPACE 1                                                        PD138800
PRNT     LA    RD,SAVEAREA             PRIME RD                         PD138900
         LA    R1,PARM                 MSICCW                           PD139000
         CALL  PRNTSUB                                                  PD139100
         B     PRNTRET(RF)                                              PD139200
PRNTRET  B     PRNTEXIT                RC = 0                           PD139300
         B     RETIRPT                 RC = 4                           PD139400
         B     TELUSER2                RC = 8                           PD139500
PRNTEXIT BR    R8                      RETURN                           PD139600
*                                      OVFLO NOT NEEDED                 PD139700
         EJECT                                                          PD139800
*********************************************************************** PD139900
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** PD140000
*********************************************************************** PD140100
         SPACE 1                                                        PD140200
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                PD140300
         BCTR  R0,R0                   CONSOLE REPLY.                   PD140400
         MVC   CONIO+50(5),ZEROS                                        PD140500
         MVC   CONIO+55(10),CONIO                                       PD140600
         LA    R1,CONIO+54                                              PD140700
         AR    R1,RC                                                    PD140800
RTJUST   CLI   0(R1),C' '                                               PD140900
         BNE   MOVBAC                                                   PD141000
         BCTR  R1,R0                                                    PD141100
         BCT   R0,RTJUST                                                PD141200
MOVBAC   SR    R1,RC                                                    PD141300
         MVC   CONIO(10),1(R1)                                          PD141400
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    PD141500
TSTNUM1  TM    0(R1),X'F0'                                              PD141600
         BNO   NUMBAD                                                   PD141700
         LA    R1,1(R1)                                                 PD141800
         BCT   RC,TSTNUM1                                               PD141900
         B     4(R8)                                                    PD142000
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      PD142100
         BE    BADCTL                                                   PD142200
         MVI   P,0                                                      PD142300
BADCTL   EQU   *                                                        PD142400
         B     0(R8)                                                    PD142500
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               PD142600
         CVB   R1,HOLD             RESULTS IN REG 1.                    PD142700
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  PD142800
         MVC   HOLD+1(7),HOLD                                           PD142900
         BR    R8                                                       PD143000
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                PD143100
         UNPK  HOLDSEQ,HOLD        IN REG 7                             PD143200
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          PD143300
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  PD143400
         MVC   HOLD+1(7),HOLD                                           PD143500
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       PD143600
         MVI   ESW,X'00'                                                PD143700
         BNE   0(R8)               NO, RETURN.                          PD143800
         LA    R1,HOLDSEQ                                               PD143900
         LA    R0,7                REPLACE WITH                         PD144000
DECLOP   CLI   0(R1),C'0'          BLANKS.                              PD144100
         BNE   0(R8)                                                    PD144200
         MVI   0(R1),C' '                                               PD144300
         LA    R1,1(R1)                                                 PD144400
         BCT   R0,DECLOP                                                PD144500
         BR    R8                                                       PD144600
         EJECT                                                          PD144700
*********************************************************************** PD144800
**********        COMMON STORE ROUTINE FOR CONTROL CARDS    *********** PD144900
*********************************************************************** PD145000
         SPACE 1                                                        PD145100
STOCARD1 EQU   *                                                        PD145200
         MVC   CARD1,CTLCRD            STORE                            PD145300
         B     STOCNT                                                   PD145400
STOCARD2 EQU   *                                                        PD145500
         MVC   CARD2,CTLCRD            STORE                            PD145600
         B     STOCNT                                                   PD145700
STOCARD3 EQU   *                                                        PD145800
         MVC   CARD3,CTLCRD            STORE                            PD145900
STOCNT   EQU   *                                                        PD146000
         MVC   CTLCRD,BLANKS           CLEAR                            PD146100
         LA    R3,CTLCRD                                                PD146200
         L     RB,CRDCNT               BUMP                             PD146300
         LA    RB,1(RB)                THE                              PD146400
         ST    RB,CRDCNT               COUNTER                          PD146500
         BR    R8                      RETURN                           PD146600
         EJECT                                                          PD146700
*********************************************************************** PD146800
*******************            MOVE SCAN ROUTINE           ************ PD146900
*********************************************************************** PD147000
         SPACE 1                                                        PD147100
MOVESCAN EQU   *                                                        PD147200
         LA    R9,CONIO                INPUT PTR                        PD147300
MOVELOOP MVC   0(1,R3),0(R9)           MOVE IN CHAR.                    PD147400
         LA    R3,1(R3)                BUMP PTR                         PD147500
         LA    R9,1(R9)                BUMP PTR                         PD147600
         CLI   0(R9),X'40'             BLANK ?                          PD147700
         BE    MOVEDONE                YES                              PD147800
         BCT   R1,MOVELOOP             LOOP                             PD147900
MOVEDONE EQU   *                                                        PD148000
         BR    R8                      RETURN                           PD148100
         EJECT                                                          PD148200
*********************************************************************** PD148300
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** PD148400
*********************************************************************** PD148500
         SPACE 1                                                        PD148600
DITIN    DCB   DSORG=PS,MACRF=PM,DDNAME=DITIN,RECFM=FB,                XPD148700
               BLKSIZE=80,LRECL=80,BUFNO=1,BFTEK=S                      PD148800
         EJECT                                                          PD148900
         DS    0F                      FORCE FW BOUNDARY                PD149000
         DS    H                       FORCE HW BOUNDARY                PD149100
EXECPARM EQU   *                                                        PD149200
         DC    H'0'                    ZERO PARM FIELD INFO             PD149300
         SPACE 1                                                        PD149400
         DS    0F                      FORCE FW BOUNDARY                PD149500
         DS    H                       FORCE HW BOUNDARY                PD149600
DDNAMES  EQU   *                                                        PD149700
         DC    H'72'                                                    PD149800
         DC    XL32'00'                                                 PD149900
         DC    C'DITIN   '             ALT. SYSIN                       PD150000
         DC    C'DITPRINT'             ALT. SYSPRINT                    PD150100
         DC    XL8'00'                                                  PD150200
SYSUT1   EQU   *                                                        PD150300
         DC    C'SYSUT1  '             NO CHANGE                        PD150400
SYSUT2   EQU   *                                                        PD150500
         DC    C'SYSUT2  '             MODIFY FOR PUNCH ONLY            PD150600
         SPACE 1                                                        PD150700
         DS    0F                      FORCE FW BOUNDARY                PD150800
HEADING  EQU   *                                                        PD150900
         DC    H'4'                                                     PD151000
         DC    C'0001'                 NO CHANGE                        PD151100
         DS    0F                                                       PD151200
PARM     DC    A(0)                    STORE MSICCW ADR HERE            PD151300
         EJECT                                                          PD151400
OPCARD   EQU   *                                                        PD151500
         DC    C' '                                                     PD151600
PRTPUN   DC    C'PRINT'                PRINT OR PUNCH ( PRINT DEF. )    PD151700
         DC    C' '                                                     PD151800
         DC    C'TYPORG='                                               PD151900
TYPORG   DC    C'PO'                   PS OR PO ( PO DEF. )             PD152000
         DC    C','                                                     PD152100
         DC    C'MAXFLDS='                                              PD152200
MAXFLDS  DC    C'01'                   01 TO 99                         PD152300
         DC    C','                                                     PD152400
         DC    C'MAXNAME='                                              PD152500
MAXNAME  DC    C'01'                   ONE                              PD152600
         SPACE 1                                                        PD152700
MEMBER   EQU   *                                                        PD152800
         DC    C' MEMBER NAME='                                         PD152900
MEMNAM   DC    CL8' '                                                   PD153000
         SPACE 1                                                        PD153100
RECORD   EQU   *                                                        PD153200
         DC    C' RECORD FIELD=('                                       PD153300
LRECL    DC    C'080)'                 DEF. = 80                        PD153400
MSGUTL   DC    C'IEBPTPCH RETURN CODE IS '                              PD153500
MSGRC    DC    C'  '                                                    PD153600
MSGSYS   DC    C' CHECK SYSOUT FOR DETAILS'                             PD153700
PDSMSG1  DC    C'REPLY - ''MEMBNAME'' OR ''U'' (ALL MEMBERS)'           PD153800
PDSMSG2  DC    C'REPLY - ''NNN'' (LRECL OF MEMBER) OR ''U'' '           PD153900
         DC    C'(LRECL=80 DEFAULT)'                                    PD154000
EXECMSG1 DC    C'THE FOLLOWING CONTROL CARD HAS BEEN BUILT:'            PD154100
EXECMSG2 DC    C'REPLY - ''E'' TO EXECUTE OR ''U'' TO CANCEL'           PD154200
         DS    0F                                                       PD154300
SAVEAREA DS    18F                                                      PD154400
CTLCRD   DS    0CL80                                                    PD154500
COL1     DS    CL10                                                     PD154600
COL11    DS    CL5                                                      PD154700
COL16    DS    CL56                                                     PD154800
COL72    DS    CL9                                                      PD154900
CRDCNT   DS    F                                                        PD155000
CARD1    DS    CL80                                                     PD155100
CARD2    DS    CL80                                                     PD155200
CARD3    DS    CL80                                                     PD155300
         LTORG                         FORCE LITERALS HERE              PD155400
         EJECT                                                          PD155500
         COPY  DITTODS1                                                 PD155600
         SPACE 1                                                        PD155700
         COPY  DITTODS2                                                 PD155800
         CSECT                                                          PD155900
         END   DITTOPDS                                                 PD156000
/*                                                                      PD156100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PD156200
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PD156300
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              PD156400
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        PD156500
 NAME OITTOPDS(R)                                                       PD156600
/*                                                                      PD156700
//                                                                      PD156800
//DITTODAS JOB ('A=SX82'),'PAS3 BRAMMER',                               DA156900
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      DA157000
//PROCSTEP EXEC DITTODSR                                                DA157100
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               DA157200
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      DA157300
//             DD DSN=SYS1.MACLIB,DISP=SHR                              DA157400
//ASM.SYSPUNCH DD DUMMY                                                 DA157500
//ASM.SYSIN DD *                                                        DA157600
         TITLE '* * * * * *   IEHDASDR ROUTINE FOR OSDITTO * * * * *'   DA157700
         SPACE 20                                                       DA157800
*********************************************************************** DA157900
*                                                                     * DA158000
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * DA158100
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * DA158200
*                                                                     * DA158300
*********************************************************************** DA158400
         EJECT                                                          DA158500
*********************************************************************** DA158600
**********              DITTODAS IS LINKED FROM OSDITTO     *********** DA158700
*********************************************************************** DA158800
         SPACE 2                                                        DA158900
         ISEQ  75,80                                                    DA159000
DITTODAS START                                                          DA159100
         SAVE  (14,12)                                                  DA159200
         LR    R2,RD                                                    DA159300
         BALR  R6,R0                                                    DA159400
         USING *,R6                                                     DA159500
         LA    RD,SAVEAREA                                              DA159600
         ST    RD,8(R2)            PTR TO MY S.A.                       DA159700
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 DA159800
         B     AROUND              BR BY COPYRIGHT                      DA159900
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               DA160000
         DC    C'08-15-75 VERS.1 MOD.0'                                 DA160100
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  DA160200
         USING MAIN,R2                 ADDRESS MSICCW . . .             DA160300
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           DA160400
         EJECT                                                          DA160500
*********************************************************************** DA160600
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** DA160700
*********************************************************************** DA160800
         SPACE 1                                                        DA160900
         CLI   CNTRLSW,X'FF'           CONTROL CARD MODE ?              DA161000
         BE    RETR8                   YES, INVALID FUNCTIONIN JOBSTRM  DA161100
         LA    R3,CTLCRD               PTR                              DA161200
         LA    R3,30(R3)               BUMP PTR                         DA161300
         MVC   CTLCRD,BLANKS           CLEAR                            DA161400
         SR    RB,RB                   CLEAR                            DA161500
         ST    RB,CRDCNT               CRDCNT                           DA161600
         CLC   FUNCOD,=C'DUM'          DUMP                             DA161700
         BE    DUM                     YES                              DA161800
         CLC   FUNCOD,=C'RES'          RESTORE                          DA161900
         BE    RES                     YES                              DA162000
         B     RETR8                   INVALID FUNCTION                 DA162100
         EJECT                                                          DA162200
*********************************************************************** DA162300
**********         DUMP     SYSIN BUILD ROUTINE             *********** DA162400
*********************************************************************** DA162500
         SPACE 1                                                        DA162600
DUM      EQU   *                                                        DA162700
         MVC   CTLCRD(30),DUMP         OPCODE, FROMDD, AND TODD         DA162800
         BAL   R8,STOCARD1                                              DA162900
         B     DISPEXEC                                                 DA163000
         EJECT                                                          DA163100
*********************************************************************** DA163200
**********         RESTORE  SYSIN BUILD ROUTINE             *********** DA163300
*********************************************************************** DA163400
         SPACE 1                                                        DA163500
RES      EQU   *                                                        DA163600
         MVC   CTLCRD(30),RESTORE      OPCODE, FROMDD, AND TODD         DA163700
         MVI   RPLN,1                                                   DA163800
         MVI   MSLN,47                                                  DA163900
         MVC   CONIO(47),DASMSG1       'REPLY - 'C' (CPYVOLID=YES) . .  DA164000
         BAL   R8,WRTCON               GET CPYVOLID                     DA164100
         CLI   CONIO,C'C'              YES                              DA164200
         BNE   PURGE                                                    DA164300
         MVC   0(13,R3),COMCPYVL       MOVE IN OPERAND                  DA164400
         LA    R3,13(R3)               BUMP PTR                         DA164500
PURGE    EQU   *                                                        DA164600
         MVI   RPLN,1                                                   DA164700
         MVI   MSLN,41                                                  DA164800
         MVC   CONIO(41),DASMSG2       'REPLY - 'P' (PURGE=YES) . . .   DA164900
         BAL   R8,WRTCON               GET PURGE                        DA165000
         CLI   CONIO,C'P'              PURGE ?                          DA165100
         BNE   RES1                                                     DA165200
         MVC   0(10,R3),COMPURGE       MOVE IN OPERAND                  DA165300
RES1     EQU   *                                                        DA165400
         BAL   R8,STOCARD1                                              DA165500
*        FALL THROUGH TO DISPEXEC                                       DA165600
         EJECT                                                          DA165700
*********************************************************************** DA165800
*********     DISPLAY CONTROL CARDS - THEN EXECUTE OR CANCEL     ****** DA165900
*********************************************************************** DA166000
         SPACE 1                                                        DA166100
DISPEXEC EQU   *                                                        DA166200
         MVC   CONIO(42),EXECMSG1      'THE FOLLOWING . . .             DA166300
         MVI   MSLN,42                                                  DA166400
         BAL   R8,WCON2                ISSUE MSG                        DA166500
         LA    RA,CARD1                PTR TO 1ST CARD                  DA166600
         L     RB,CRDCNT               GET TOTAL # OF CARDS             DA166700
DISP1    EQU   *                                                        DA166800
         MVC   CONIO(72),0(RA)         MOVE IN CARD                     DA166900
         MVI   MSLN,72                                                  DA167000
         BAL   R8,WCON2                DISPLAY CARD                     DA167100
         LA    RA,80(RA)               BUMP TO NEXT CARD                DA167200
         BCT   RB,DISP1                LOOP                             DA167300
DISP2    EQU   *                       B HERE TO BYPASS DISPLAY         DA167400
         MVC   CONIO(39),EXECMSG2      'REPLY - 'U' TO EXEC . . .       DA167500
         MVI   MSLN,39                                                  DA167600
         MVI   RPLN,1                                                   DA167700
         BAL   R8,WRTCON               ISSUE MSG, GET REPLY             DA167800
         CLI   CONIO,C'E'              EXECUTE ?                        DA167900
         BE    EXEC1                   EXEC IF 'E'                      DA168000
         CLI   CONIO,C'U'              CANCEL ?                         DA168100
         BE    RETNORM                 YES                              DA168200
         MVI   P,0                     ELSE, BREAK STRING               DA168300
         B     DISP2                   ASK AGAIN                        DA168400
EXEC1    EQU   *                                                        DA168500
         LA    RA,CARD1                POINT TO 1ST CARD                DA168600
         L     RB,CRDCNT               GET COUNT                        DA168700
EXEC2    EQU   *                                                        DA168800
         MVC   CTLCRD,0(RA)            MOVE TO I/O AREA                 DA168900
PUT      EQU   *                                                        DA169000
DITNOPSW BC    0,DITNOPDN              OPEN SW                          DA169100
         MVI   DITNOPSW+1,X'F0'        OPEN ONCE                        DA169200
         OPEN  (DITIN,(OUTPUT))                                         DA169300
DITNOPDN EQU   *                       OPEN DONE                        DA169400
         PUT   DITIN,CTLCRD                                             DA169500
         LA    RA,80(RA)               BUMP TO NEXT CARD                DA169600
         BCT   RB,EXEC2                LOOP                             DA169700
*              FALL THROUGH TO LINK                                     DA169800
         EJECT                                                          DA169900
*********************************************************************** DA170000
*******************          LINK TO IEHDASDR      ******************** DA170100
*********************************************************************** DA170200
         SPACE 1                                                        DA170300
LINK     EQU   *                                                        DA170400
         CLOSE DITIN                                                    DA170500
         MVI   DITNOPSW+1,X'00'        SET FOR NEXT OPEN                DA170600
         LINK  EP=IEHDASDR,PARAM=(EXECPARM,DDNAMES,HEADING),VL=1        DA170700
         B     LINKRET(RF)                                              DA170800
LINKRET  B     RC0                                                      DA170900
         B     RC4                                                      DA171000
         B     RC8                                                      DA171100
         B     RC12                                                     DA171200
         B     RC16                                                     DA171300
RC0      EQU   *                                                        DA171400
         MVC   MSGRC(2),=C' 0'                                          DA171500
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      DA171600
RC4      EQU   *                                                        DA171700
         MVC   MSGRC(2),=C' 4'                                          DA171800
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      DA171900
RC8      EQU   *                                                        DA172000
         MVC   MSGRC(2),=C' 8'                                          DA172100
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      DA172200
RC12     EQU   *                                                        DA172300
         MVC   MSGRC(2),=C'12'                                          DA172400
         B     ISSUERC                 ADVISE OPER. OF RETURN CODE      DA172500
RC16     EQU   *                                                        DA172600
         MVC   MSGRC(2),=C'16'                                          DA172700
ISSUERC  EQU   *                                                        DA172800
         MVC   CONIO(51),MSGUTL                                         DA172900
         MVI   MSLN,51                                                  DA173000
         BAL   R8,WCON2                ISSUE MSG                        DA173100
*        FALL THROUGH TO RETNORM                                        DA173200
         EJECT                                                          DA173300
*********************************************************************** DA173400
*******************          RETURN MECHANISM      ******************** DA173500
*********************************************************************** DA173600
         SPACE 1                                                        DA173700
RETNORM  EQU   *                                                        DA173800
         LA    RF,0                    RC = 0                           DA173900
         B     RETURN                                                   DA174000
RETR8    EQU   *                                                        DA174100
         LA    RF,4                    RC = 4                           DA174200
         B     RETURN                                                   DA174300
RETIRPT  EQU   *                                                        DA174400
         LA    RF,8                    RC = 8                           DA174500
RETURN   EQU   *                                                        DA174600
         L     RD,4(RD)                PRIME RD                         DA174700
         RETURN (14,12),RC=(15)                                         DA174800
         EJECT                                                          DA174900
*********************************************************************** DA175000
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** DA175100
*********************************************************************** DA175200
         SPACE 1                                                        DA175300
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    DA175400
WRTCON   LA    RD,SAVEAREA             PRIME RD                         DA175500
         LA    R1,PARM                 MSICCW                           DA175600
         CALL  WTORSUB                                                  DA175700
         B     WTORRET(RF)                                              DA175800
WTORRET  B     0(R8)                   RC = 0                           DA175900
         B     RETIRPT                 RC = 4                           DA176000
         EJECT                                                          DA176100
*********************************************************************** DA176200
**********               CONSOLE - WRITE ONLY  (WTO)        *********** DA176300
*********************************************************************** DA176400
         SPACE 1                                                        DA176500
WCON2    EQU   *                                                        DA176600
         LA    RD,SAVEAREA                                              DA176700
         LA    R1,PARM                 MSICCW                           DA176800
         CALL  WTOSUB                                                   DA176900
         B     WTORRET(RF)             USE WTOR RET MECH                DA177000
         EJECT                                                          DA177100
*********************************************************************** DA177200
**********        COMMON STORE ROUTINE FOR CONTROL CARDS    *********** DA177300
*********************************************************************** DA177400
         SPACE 1                                                        DA177500
STOCARD1 EQU   *                                                        DA177600
         MVC   CARD1,CTLCRD            STORE                            DA177700
         B     STOCNT                                                   DA177800
STOCARD2 EQU   *                                                        DA177900
         MVC   CARD2,CTLCRD            STORE                            DA178000
         B     STOCNT                                                   DA178100
STOCARD3 EQU   *                                                        DA178200
         MVC   CARD3,CTLCRD            STORE                            DA178300
STOCNT   EQU   *                                                        DA178400
         MVC   CTLCRD,BLANKS           CLEAR                            DA178500
         LA    R3,CTLCRD                                                DA178600
         L     RB,CRDCNT               BUMP                             DA178700
         LA    RB,1(RB)                THE                              DA178800
         ST    RB,CRDCNT               COUNTER                          DA178900
         BR    R8                      RETURN                           DA179000
         EJECT                                                          DA179100
*********************************************************************** DA179200
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** DA179300
*********************************************************************** DA179400
         SPACE 1                                                        DA179500
DITIN    DCB   DSORG=PS,MACRF=PM,DDNAME=DITIN,RECFM=FB,                XDA179600
               BLKSIZE=80,LRECL=80,BUFNO=1,BFTEK=S                      DA179700
         EJECT                                                          DA179800
         DS    0F                      FORCE FW BOUNDARY                DA179900
         DS    H                       FORCE HW BOUNDARY                DA180000
EXECPARM EQU   *                                                        DA180100
         DC    H'0'                    ZERO PARM FIELD INFO             DA180200
         SPACE 1                                                        DA180300
         DS    0F                      FORCE FW BOUNDARY                DA180400
         DS    H                       FORCE HW BOUNDARY                DA180500
DDNAMES  EQU   *                                                        DA180600
         DC    H'48'         ONLY 6 DD ENTRIES ARE ACCEPTABLE WHEN      DA180700
*        LINKING TO IEHPROGM. ELSE MSG IEH211I RESULTS.                 DA180800
         DC    XL8'00'                 USE DEFAULT DDNAME               DA180900
         DC    XL8'00'                 USE DEFAULT DDNAME               DA181000
         DC    XL8'00'                 USE DEFAULT DDNAME               DA181100
         DC    XL8'00'                 USE DEFAULT DDNAME               DA181200
         DC    C'DITIN   '             ALT. SYSIN                       DA181300
         DC    C'DITPRINT'             ALT. SYSPRINT                    DA181400
*        DC    XL8'00'                 USE DEFAULT DDNAME               DA181500
SYSUT1   EQU   *                                                        DA181600
*        DC    C'SYSUT1  '             NO CHANGE                        DA181700
SYSUT2   EQU   *                                                        DA181800
*        DC    C'SYSUT2  '             NO CHANGE                        DA181900
         SPACE 1                                                        DA182000
         DS    0F                      FORCE FW BOUNDARY                DA182100
HEADING  EQU   *                                                        DA182200
         DC    H'4'                                                     DA182300
         DC    C'0001'                 NO CHANGE                        DA182400
         DS    0F                                                       DA182500
PARM     DC    A(0)                    STORE MSICCW ADR HERE            DA182600
         EJECT                                                          DA182700
DUMP     DC    C' DUMP    FROMDD=DISK,TODD=TAPE'                        DA182800
RESTORE  DC    C' RESTORE FROMDD=TAPE,TODD=DISK'                        DA182900
COMCPYVL DC    C',CPYVOLID=YES'                                         DA183000
COMPURGE DC    C',PURGE=YES'                                            DA183100
DASMSG1  DC    C'REPLY - ''C'' (CPYVOLID=YES) OR ''U'' (CPYVOLID=NO)'   DA183200
DASMSG2  DC    C'REPLY - ''P'' (PURGE=YES) OR ''U'' (PURGE=NO)'         DA183300
MSGUTL   DC    C'IEHDASDR RETURN CODE IS '                              DA183400
MSGRC    DC    C'  '                                                    DA183500
MSGSYS   DC    C' CHECK SYSOUT FOR DETAILS'                             DA183600
EXECMSG1 DC    C'THE FOLLOWING CONTROL CARD HAS BEEN BUILT:'            DA183700
EXECMSG2 DC    C'REPLY - ''E'' TO EXECUTE OR ''U'' TO CANCEL'           DA183800
         DS    0F                                                       DA183900
SAVEAREA DS    18F                                                      DA184000
CTLCRD   DS    0CL80                                                    DA184100
COL1     DS    CL10                                                     DA184200
COL11    DS    CL5                                                      DA184300
COL16    DS    CL56                                                     DA184400
COL72    DS    CL9                                                      DA184500
CRDCNT   DS    F                       COUNT # OF CARDS                 DA184600
CARD1    DS    CL80                    CONTROL CARD                     DA184700
CARD2    DS    CL80                    CONTROL CARD                     DA184800
CARD3    DS    CL80                    CONTROL CARD                     DA184900
         LTORG                         FORCE LITERALS HERE              DA185000
         EJECT                                                          DA185100
         COPY  DITTODS1                                                 DA185200
         SPACE 1                                                        DA185300
         COPY  DITTODS2                                                 DA185400
         CSECT                                                          DA185500
         END   DITTODAS                                                 DA185600
/*                                                                      DA185700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              DA185800
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              DA185900
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              DA186000
//LKED.SYSIN DD *                                                       DA186100
 NAME OITTODAS(R)                                                       DA186200
/*                                                                      DA186300
//                                                                      DA186400
//DITTOQV  JOB ('A=SX82'),'PAS3 BRAMMER',                               QV186500
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      QV186600
//PROCSTEP EXEC DITTODSR                                                QV186700
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               QV186800
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      QV186900
//             DD DSN=SYS1.MACLIB,DISP=SHR                              QV187000
//ASM.SYSPUNCH DD DUMMY                                                 QV187100
//ASM.SYSIN DD *                                                        QV187200
         TITLE '* * * * * *    QSAMVSAM ROUTINE FOR OSDITTO * * * * *'  QV187300
         SPACE 20                                                       QV187400
*********************************************************************** QV187500
*                                                                     * QV187600
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * QV187700
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * QV187800
*                                                                     * QV187900
*********************************************************************** QV188000
         EJECT                                                          QV188100
*********************************************************************** QV188200
**********              DITTOQV  IS LINKED FROM OSDITTO     *********** QV188300
*********************************************************************** QV188400
         SPACE 2                                                        QV188500
         ISEQ  75,80                                                    QV188600
DITTOQV  START                                                          QV188700
         SAVE  (14,12)                                                  QV188800
         LR    R2,RD                                                    QV188900
         BALR  R6,R0                                                    QV189000
         USING *,R6,R5                                                  QV189100
         LR    R5,R6                                                    QV189200
         AH    R5,BUMP                                                  QV189300
         LA    RD,SAVEAREA                                              QV189400
         ST    RD,8(R2)            PTR TO MY S.A.                       QV189500
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 QV189600
         B     AROUND              BR BY COPYRIGHT                      QV189700
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               QV189800
         DC    C'08-15-75 VERS.1 MOD.0'                                 QV189900
BUMP     DC    H'4096'                                                  QV190000
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  QV190100
         USING MAIN,R2                 ADDRESS MSICCW . . .             QV190200
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           QV190300
         EJECT                                                          QV190400
*********************************************************************** QV190500
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** QV190600
*********************************************************************** QV190700
         SPACE 1                                                        QV190800
         CLC   FUNCOD,=C'CQU'                                           QV190900
         BE    CQ                                                       QV191000
         CLC   FUNCOD,=C'CQS'                                           QV191100
         BE    CQS                                                      QV191200
         CLC   FUNCOD,=C'QCU'                                           QV191300
         BE    QC                                                       QV191400
         CLC   FUNCOD,=C'QPU'                                           QV191500
         BE    QP                                                       QV191600
         CLC   FUNCOD,=C'QDU'                                           QV191700
         BE    QD                                                       QV191800
         CLC   FUNCOD,=C'VPU'                                           QV191900
         BE    VP                                                       QV192000
         CLC   FUNCOD,=C'VDU'                                           QV192100
         BE    VD                                                       QV192200
         CLC   FUNCOD,=C'QQU'                                           QV192300
         BE    QQ                                                       QV192400
         B     RETR8                   INVALID FUNCTION                 QV192500
         EJECT                                                          QV192600
*********************************************************************** QV192700
**********          CARD TO QSAM - BLOCKED VIA JCL OR PROC  *********** QV192800
**********      WITH OR WITHOUT SEQ. NUMBERS & DECKNAME     *********** QV192900
*********************************************************************** QV193000
         SPACE 1                                                        QV193100
CQ       EQU   *                                                        QV193200
         MVI   SEQSW+1,X'F0'       SW TO BYPASS RE-SEQUENCING           QV193300
         B     CDCD1                                                    QV193400
CQS      EQU   *                                                        QV193500
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  QV193600
         BE    CTCOM1              YES,                                 QV193700
         TM    CT,X'08'                DECKTYPE GIVEN ?                 QV193800
         BO    CTCOM1                  OK                               QV193900
         MVC   CONIO(17),=C'DECKTYPE= MISSING'                          QV194000
         MVI   MSLN,17                                                  QV194100
         B     TELUSER2                                                 QV194200
CTCOM1   EQU   *                                                        QV194300
TAPSQ    MVI   SEQSW+1,X'00'       SW TO CAUSE RE-SEQUENCING            QV194400
         LA    R7,1010             PAGE & LINE # FOR RPG & COBOL DECKS  QV194500
         LA    RA,HOLDSEQ                                               QV194600
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV194700
         BNE   GETDT               NO, GO GET FROM CONSOLE              QV194800
         LA    R9,CDCD1                                                 QV194900
         MVC   CONIO(3),DECKTYPE                                        QV195000
         B     CHK1                                                     QV195100
GETDT    MVC   CONIO(6),XXXDASH        'XXX - '                         QV195200
         MVC   CONIO+6(8),DT           'DECKTYPE'                       QV195300
         MVI   WCNCCW+7,X'0E'                                           QV195400
         MVI   RCNCCW+7,X'03'                                           QV195500
         LA    R9,GETDK                                                 QV195600
         BAL   R8,WRTCON                                                QV195700
CHK1     CLC   CONIO(3),=C'BAL'    DECKTYPE = BAL ?                     QV195800
         BNE   CHK2                NO,                                  QV195900
         LA    R7,10               YES, SET 1ST CARD # = 0001           QV196000
         LA    R3,CONIO+75         SEQ. IN CC 76                        QV196100
         MVI   ALT2+1,X'04'        SEQ. LNGTH = 5                       QV196200
         LA    R8,CONIO+72         NAME IN CC 73                        QV196300
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         QV196400
         MVI   ALT1+1,X'02'        NAME LNGTH = 3                       QV196500
         MVI   DCKMSG+10,C'3'                                           QV196600
         MVI   GETDK+11,X'03'                                           QV196700
         LA    RA,3(RA)                                                 QV196800
         B     0(R9)                                                    QV196900
CHK2     CLC   CONIO(3),=C'RPG'    DECKTYPE = RPG ?                     QV197000
         BNE   CHK3                NO,                                  QV197100
         LA    R3,CONIO            YES, SEQ IN CC 01                    QV197200
         MVI   ALT2+1,X'04'        SEQ LNGTH = 5                        QV197300
         LA    R8,CONIO+74         NAME IN CC 75                        QV197400
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         QV197500
         MVI   ALT1+1,X'05'        NAME LNGTH =6                        QV197600
         MVI   DCKMSG+10,C'6'                                           QV197700
         MVI   GETDK+11,X'06'                                           QV197800
         LA    RA,3(RA)                                                 QV197900
         B     0(R9)                                                    QV198000
CHK3     CLC   CONIO(3),=C'COB'    DECKTYPE = COBOL ?                   QV198100
         BNE   BADDT               NO, BAD FORMAT                       QV198200
         LA    R3,CONIO            YES, SEQ IN CC 01                    QV198300
         MVI   ALT2+1,X'05'        SEQ LNGTH = 6                        QV198400
         LA    R8,CONIO+72         NAME IN CC 73                        QV198500
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         QV198600
         MVI   ALT1+1,X'07'        NAME LNGTH = 8                       QV198700
         LA    RA,2(RA)                                                 QV198800
         MVI   DCKMSG+10,C'8'                                           QV198900
         MVI   GETDK+11,X'08'                                           QV199000
         B     0(R9)                                                    QV199100
GETDK    MVC   CONIO(18),DCKMSG    CONSOLE MSG                          QV199200
         MVI   WCNCCW+7,X'12'      'DECK NAME X CHARS.'                 QV199300
         MVI   RCNCCW+7,X'08'                                           QV199400
         BAL   R8,WRTCON                                                QV199500
         MVC   DECKNAME,CONIO      SAVE OPERATOR REPLY                  QV199600
CDCD1    SR    R4,R4               ZERO CARD COUNTER FOR LOGOUT MSG     QV199700
         ST    R7,TPSQNUM          SAVE SEQ. NUMBER                     QV199800
         ST    R3,SEQADR           SAVE POINTER TO SEQUENCE CC.         QV199900
CDCD2    BAL   R8,CDRD             READ CARD                            QV200000
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        QV200100
         BE    CCEND7                                                   QV200200
SEQSW    BC    15,PUTIT                B IF NO RESEQ                    QV200300
         L     R8,DECKADR          SAVE POINTER TO DECKNAME CC.         QV200400
ALT1     MVC   0(8,R8),DECKNAME    MOVE IN DECKNAME                     QV200500
         MVI   ESW,X'FF'           DO NOT SUPPRESS LEAD ZEROS           QV200600
         L     R7,TPSQNUM              LOAD FOR USE                     QV200700
         BAL   R8,DECCVT           CONVERT REG 7 TO EBCDIC              QV200800
ALT2     MVC   0(4,R3),0(RA)       MOVE SEQ NUMBER                      QV200900
         LA    R7,10(R7)           BUMP SEQ COUNTER                     QV201000
         ST    R7,TPSQNUM              SAVE                             QV201100
PUTIT    EQU   *                       PREPARE TO PUT                   QV201200
         TM    QSAMOUT+48,X'10'        OPEN                             QV201300
         BO    CQLOOP                  YES, SKIP RDJFCB ETC.            QV201400
         LA    RC,QSAMOUT              PRIME FOR RDJFCB                 QV201500
         RDJFCB ((12))                                                  QV201600
         LTR   RF,RF                   SUCCESSFUL ?                     QV201700
         BZ    CKRF2                                                    QV201800
         B     QORJERR                 ERROR, USE QO CODE               QV201900
CKRF2    CLI   OUTJFCB+100,0           RECFM ?                          QV202000
         BNE   CKBS2                   NO                               QV202100
         OI    QORBL,X'80'             YES                              QV202200
CKBS2    CLC   OUTJFCB+102(2),=X'0000' BLKSIZE ?                        QV202300
         BNE   CKLR2                   NO                               QV202400
         OI    QORBL,X'40'             YES                              QV202500
CKLR2    CLC   OUTJFCB+104(2),=X'0000'  LRECL ?                         QV202600
         BNE   TMRBL2                  NO                               QV202700
         OI    QORBL,X'20'             YES                              QV202800
TMRBL2   TM    QORBL,X'E0'             RBL ALL 3 NOT SUBMITTED ?        QV202900
         BNO   CQOPEN                  NO,  DO NOT USE FBS 3120 80      QV203000
         MVC   DTPIO+200(80),CONIO     SAVE CARD READ                   QV203100
         MVC   CONIO(61),DCBMSG        'QSAMOUT RECFM . . .             QV203200
         MVC   CONIO+50(16),=C'FBS 3120 80 USED'                        QV203300
         MVI   MSLN,66                                                  QV203400
         BAL   R9,USERMSG                                               QV203500
         MVC   CONIO(80),DTPIO+200     RESTORE CARD                     QV203600
         MVC   OUTJFCB+104(2),=H'80'            80 LRECL                QV203700
         MVC   OUTJFCB+102(2),=H'3120'     3120 BLKSIZE                 QV203800
         MVI   OUTJFCB+100,X'98'           FBS RECFM                    QV203900
         OI    OUTJFCB+76,X'80'        WRITE MODIFIED JFCB TO JOBQUE    QV204000
CQOPEN   EQU   *                                                        QV204100
         LA    RC,QSAMOUT              PRIME FOR OPEN                   QV204200
         OPEN  ((12),(OUTPUT)),TYPE=J                                   QV204300
         TM    QSAMOUT+48,X'10'        OK ?                             QV204400
         BO    CQLOOP                  OPEN OK                          QV204500
QOPENERR EQU   *                                                        QV204600
         MVC   CONIO(8),QSAMOUT+40                                      QV204700
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 QV204800
         MVI   MSLN,23                                                  QV204900
         B     TELUSER2                                                 QV205000
CQLOOP   EQU   *                                                        QV205100
CQLOOP1  BC    0,CQLOOPF               B WHEN QO IS FIXED               QV205200
CQLOOP2  BC    0,CQLOOPV               B WHEN QO IS VAR LEN             QV205300
CQVARLN1 EQU   *                       CHK DCB FOR V, VB, OR VBS        QV205400
         TM    QSAMOUT+36,X'80'         F OR U ?                        QV205500
         BO    CQVARLN2                YES, EXIT                        QV205600
         TM    QSAMOUT+36,X'40'         V ?                             QV205700
         BNO   CQVARLN2                NO,  EXIT                        QV205800
         MVI CQLOOP2+1,X'F0'           SET B                            QV205900
         LA    R1,0                                                     QV206000
         ST    R1,DTPIO                ZERO RDW FOR VAR LEN             QV206100
         LH    R1,=H'84'                                                QV206200
         STH   R1,DTPIO                SET RDW TO 84                    QV206300
         B     CQLOOPV                                                  QV206400
CQVARLN2 EQU   *                                                        QV206500
         MVI CQLOOP1+1,X'F0'           SET B                            QV206600
CQLOOPF  EQU   *                                                        QV206700
         LA    RB,CONIO                PTR TO LREC                      QV206800
         B     CQLOOP3                                                  QV206900
CQLOOPV  EQU   *                                                        QV207000
         MVC   DTPIO+4(80),CONIO       MOVE CARD                        QV207100
         LA    RB,DTPIO                PRIME FOR PUT                    QV207200
CQLOOP3  EQU   *                                                        QV207300
         BAL   R8,QPUT                 PUT LRECL                        QV207400
         LA    R4,1(R4)            BUMP CARD COUNTER                    QV207500
         B     CDCD2               LOOP AND DO IT AGAIN                 QV207600
BADDT    CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV207700
         BNE   BADDT1                                                   QV207800
         MVC   CONIO(23),=C'DECKTYPE= VALUE INVALID'                    QV207900
         MVI   MSLN,23                                                  QV208000
         B     TELUSER2                                                 QV208100
BADDT1   EQU   *                                                        QV208200
         MVI   P,X'00'                                                  QV208300
         B     CQS                     RESTART                          QV208400
CCEND7   LR    R7,R4                                                    QV208500
IOCNT    MVI   ESW,X'00'           BEGIN 'LOG CARD COUNT MSG' ROUTINE   QV208600
         BAL   R8,DECCVT           REG 7 CONTAINS COUNT                 QV208700
         MVC   CONIO(8),HOLDSEQ                                         QV208800
         MVC   CONIO+8(10),=C' I/O CARDS'                               QV208900
         LA    R4,18                                                    QV209000
IOCNT1   CLI   CONIO,C' '                                               QV209100
         BNE   IOCNT2                                                   QV209200
         MVC   CONIO(50),CONIO+1       LEFT JUSTIFY MSG                 QV209300
         BCT   R4,IOCNT1                                                QV209400
IOCNT2   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV209500
         BE    IOCNTLST            YES, LOG ON SYSPRINT                 QV209600
         STC   R4,WCNCCW+7         NO, LOG ON CONSOLE                   QV209700
         BAL   R8,WCON2                                                 QV209800
         B     RETNORM                 END FUNCTION                     QV209900
IOCNTLST EQU   *                                                        QV210000
         STC   R4,PL                                                    QV210100
         BAL   R8,PRNT                                                  QV210200
         B     RETNORM                 END FUNCTION                     QV210300
TPSQNUM  DS    1F                                                       QV210400
DECKADR  DS    1F                                                       QV210500
SEQADR   DS    1F                                                       QV210600
         EJECT                                                          QV210700
*********************************************************************** QV210800
**********         QSAM TO CARD - ALL QSAM SUPPORTED RECFMS  ********** QV210900
*********************************************************************** QV211000
         SPACE 1                                                        QV211100
QC       EQU   *                                                        QV211200
         BAL   R9,AFTNLR               GO GET STARTAFT & NLRECS         QV211300
         BAL   R8,QIOPEN               ISSUE OPEN                       QV211400
QCLOOP   EQU   *                                                        QV211500
         BAL   R8,QGET             READ                                 QV211600
         CLI   QIEOFSW,X'FF'           EOF ?                            QV211700
         BE    CCEND               YES, WE ARE DONE                     QV211800
QCLOOP1  BC    0,QCLOOP2               FALL THRU TILL BYPASS DONE       QV211900
         C     R7,AFTLR                BYPASS DONR ?                    QV212000
         BNH   QCLOOP                  NO                               QV212100
         MVI   QCLOOP1+1,X'F0'         YES                              QV212200
QCLOOP2  EQU   *                                                        QV212300
         BAL   R8,QIVARLN              CHECK FOR VAR LEN                QV212400
MOVPNCH  MVC   CONIO(80),0(R1)     MOVE TO PUNCH AREA                   QV212500
         BAL   R8,CDPN             GO PUNCH IT                          QV212600
         L     R7,QOPUTCNT             USE TO COUNT CARDS               QV212700
         LA    R7,1(R7)            ADD 1 TO CARD COUNTER                QV212800
         ST    R7,QOPUTCNT             USE TO COUNT CARDS               QV212900
         L     R7,QIGETCNT             DONE PER NLRECS ?                QV213000
         C     R7,NLR                                                   QV213100
         BNE   QCLOOP                  NO                               QV213200
CCEND    EQU   *                                                        QV213300
         MVC   CONIO(80),BLANKS    FORCE OUT LAST CARD                  QV213400
         BAL   R8,CDPN                                                  QV213500
         B     QPQDONE                 GO USE QP END RTN                QV213600
         EJECT                                                          QV213700
*********************************************************************** QV213800
**********         QSAM TO PRINTER   LIST OR HEX            *********** QV213900
*********************************************************************** QV214000
         SPACE 1                                                        QV214100
QP       EQU   *                                                        QV214200
         MVI   DPSW,X'00'                                               QV214300
         B     QP0                                                      QV214400
QD       EQU   *                                                        QV214500
         MVI   DPSW,X'FF'                                               QV214600
QP0      EQU   *                                                        QV214700
         MVC   HH2(06),QSAMINDC        HEADING                          QV214800
         BAL   R9,AFTNLR               GO GET STARTAFT & NLRECS         QV214900
         BAL   R9,BEGINFUN             PRINT OS/DITTO HDG AND OVFLO     QV215000
         BAL   R8,QIOPEN               ISSUE OPEN                       QV215100
QPLOOP   EQU   *                                                        QV215200
         BAL   R8,QGET                 GET LREC                         QV215300
         CLI   QIEOFSW,X'FF'           EOF ?                            QV215400
         BE    QPQDONE                 FUNCTION DONE                    QV215500
QPLOOP1  BC    0,QPLOOP2               FALL THRU TILL BYPASS DONE       QV215600
         C     R7,AFTLR                BYPASS DONR ?                    QV215700
         BNH   QPLOOP                  NO                               QV215800
         MVI   QPLOOP1+1,X'F0'         YES                              QV215900
QPLOOP2  EQU   *                                                        QV216000
         BAL   R8,QIVARLN              CHECK FOR VAR LEN                QV216100
         LR    RA,R1                   PRIME RA BEFORE DECCVT           QV216200
         MVC   HDG1(10),DREC                                            QV216300
         MVC   HDG1+13(10),DATH                                         QV216400
         BAL   R8,DECCVT                                                QV216500
         MVC   HDG1+5(5),HOLDSEQ+3 RECORD NUMBER IN HEADING             QV216600
         LR    R7,R3                   LRECL IN R7                      QV216700
         BAL   R8,DECCVT           CONVERT TO EBDIC                     QV216800
         MVC   HDG1+18(5),HOLDSEQ+3  AND PLACE IN DATA LNGTH HEADING    QV216900
FULBLK   BAL   RB,DEBLOK           GO PRINT IT                          QV217000
         L     R7,QOPUTCNT                                              QV217100
         LA    R7,1(R7)                                                 QV217200
         ST    R7,QOPUTCNT                                              QV217300
         L     R7,QIGETCNT             DONE PER NLRECS ?                QV217400
         C     R7,NLR                                                   QV217500
         BNE   QPLOOP                  NO                               QV217600
QPQDONE  EQU   *                                                        QV217700
         L     R7,QIGETCNT                                              QV217800
VPDONE   EQU   *                                                        QV217900
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              QV218000
         BAL   R8,PRNT                                                  QV218100
         MVI   CC,X'11'                DOUBLE SPACE AFT PR              QV218200
         MVI   ESW,X'00'                                                QV218300
         BAL   R8,DECCVT                                                QV218400
         MVC   CONIO(8),HOLDSEQ                                         QV218500
         MVC   CONIO+8(11),=C' LRECS READ'                              QV218600
         L     R7,QOPUTCNT             GET OUTPUT LRECL CNT             QV218700
         MVI   ESW,0                   SUPPRESS LEADING ZEROS           QV218800
         BAL   R8,DECCVT                                                QV218900
         MVC   CONIO+19(8),HOLDSEQ                                      QV219000
         MVC   CONIO+27(14),=C' LRECS WRITTEN'                          QV219100
         LA    R4,41                                                    QV219200
         B     IOCNT1                                                   QV219300
         EJECT                                                          QV219400
*********************************************************************** QV219500
**********         VSAM TO PRINTER   LIST OR HEX            *********** QV219600
*********************************************************************** QV219700
         SPACE 1                                                        QV219800
VP       EQU   *                                                        QV219900
         MVI   DPSW,X'00'                                               QV220000
         B     VP0                                                      QV220100
VD       EQU   *                                                        QV220200
         MVI   DPSW,X'FF'                                               QV220300
VP0      EQU   *                                                        QV220400
         MVI   QIGETCNT,0              CLEAR TO                         QV220500
         MVC   QIGETCNT+1(19),QIGETCNT ZEROS                            QV220600
         MVC   HH2(06),VSAMINDC        HEADING                          QV220700
VPK1     EQU   *                                                        QV220800
         LA    R9,VPBEG                PRIME R9 RETURN                  QV220900
         CLI   CNTRLSW,X'00'           CONSOLE ?                        QV221000
         BE    VPK2                    YES                              QV221100
         TM    CT1,X'08'               STARTKEY SUBMITTED               QV221200
         BO    QP5                     YES, NLR                         QV221300
         B     AFTNLR                  NO, AFT, NLR                     QV221400
VPK2     EQU   *                                                        QV221500
         MVC   CONIO(68),KEYMSG        'REPLY - 'K' START AT KEY . . .  QV221600
         MVI   MSLN,68                                                  QV221700
         MVI   RPLN,1                                                   QV221800
         BAL   R8,WRTCON                                                QV221900
         CLI   CONIO,C'K'              STARTKEY ?                       QV222000
         BE    VPK3                    YES                              QV222100
         CLI   CONIO,C'C'              STARTAFT ?                       QV222200
         BE    AFTNLR                  YES                              QV222300
         B     QP5                     NO ASK FOR NLRECS                QV222400
VPK3     EQU   *                                                        QV222500
         MVC   CONIO(32),KEYMSG2       'REPLY - 'STARTKEY' (35 CHAR     QV222600
         MVI   MSLN,32                                                  QV222700
         MVI   RPLN,35                                                  QV222800
         BAL   R8,WRTCON                                                QV222900
         MVC   HSTARTKY,CONIO                                           QV223000
         LA    R8,HSKEND-1             PTR TO RIGHT MOST KEY CHAR       QV223100
         LA    R7,34                   35 MAX                           QV223200
         SR    RC,RC                                                    QV223300
         OI    CT1,X'08'               SET STARTKEY SW                  QV223400
VPKOPIN  CLI   0(R8),X'40'             TRAILING BLANK ?                 QV223500
         BNE   QP5                     NLRECS                           QV223600
         MVI   0(R8),X'00'             PAD                              QV223700
         BCTR  R8,R0                   DECR. BY 1                       QV223800
         BCT   R7,VPKOPIN              LOOP                             QV223900
         B     QP5                     ASK FOR NLRECS ( NO STARTAFT)    QV224000
VPBEG    EQU   *                                                        QV224100
         CLI   VIOPENSW,X'FF'          OPEN ?                           QV224200
         BE    VPHDG                   YES                              QV224300
         BAL   R8,VIOPEN               OPEN BEFORE HEADING              QV224400
VPHDG    EQU   *                                                        QV224500
         CLI   VITYP,C'E'               ESDS ?                          QV224600
         BE    VPHDGE                   YES                             QV224700
         CLI   VITYP,C'K'               KSDS ?                          QV224800
         BE    VPHDGK                   YES                             QV224900
         B     VPHDG1                                                   QV225000
VPHDGE   EQU   *                                                        QV225100
         MVC   HH2+28(7),=C' - ESDS'   PLUG HDG                         QV225200
         B     VPHDG1                                                   QV225300
VPHDGK   EQU   *                                                        QV225400
         MVC   HH2+28(7),=C' - KSDS'   PLUG HDG                         QV225500
VPHDG1   EQU   *                                                        QV225600
         BAL   R9,BEGINFUN             PRINT OS/DITTO HDG AND OVFLO     QV225700
VPOINT   EQU   *                                                        QV225800
         TM    CT1,X'08'     STARTKEY ?                                 QV225900
         BNO   VPLOOP                  NO                               QV226000
         BAL   R8,VIPOINT              YES                              QV226100
VPLOOP   EQU   *                                                        QV226200
         BAL   R8,VIGET                GET LREC                         QV226300
         CLI   VIEOFSW,X'FF'           EOF ?                            QV226400
         BE    VPLOOPDN                                                 QV226500
VPLOOP1  BC    0,VPLOOP2               FALL THRU TILL BYPASS DONE       QV226600
         C     R7,AFTLR                BYPASS DONR ?                    QV226700
         BNH   VPLOOP                  NO                               QV226800
         MVI   VPLOOP1+1,X'F0'         YES                              QV226900
VPLOOP2  EQU   *                                                        QV227000
         L     RA,VINADR               PIME RA                          QV227100
         MVC   HDG1(10),DREC                                            QV227200
         MVC   HDG1+13(10),DATH                                         QV227300
         BAL   R8,DECCVT                                                QV227400
         MVC   HDG1+5(5),HOLDSEQ+3 RECORD NUMBER IN HEADING             QV227500
         LR    R7,R3                   LRECL IN R7                      QV227600
         BAL   R8,DECCVT           CONVERT TO EBDIC                     QV227700
         MVC   HDG1+18(5),HOLDSEQ+3  AND PLACE IN DATA LNGTH HEADING    QV227800
         BAL   RB,DEBLOK           GO PRINT IT                          QV227900
         L     R7,QOPUTCNT                                              QV228000
         LA    R7,1(R7)                                                 QV228100
         ST    R7,QOPUTCNT                                              QV228200
         L     R7,VIGETCNT             DONE PER NLRECS ?                QV228300
         C     R7,NLR                                                   QV228400
         BNE   VPLOOP                  NO                               QV228500
VPLOOPDN EQU   *                                                        QV228600
         L     R7,VIGETCNT                                              QV228700
         B     VPDONE                                                   QV228800
         EJECT                                                          QV228900
*********************************************************************** QV229000
**********         QSAM TO QSAM - TAPE OR DISK              *********** QV229100
*********************************************************************** QV229200
         SPACE 1                                                        QV229300
QQ       EQU   *                                                        QV229400
         BAL   R9,AFTNLR               GET STARTAFT AND NLRECS          QV229500
         BAL   R8,QIOPEN               ISSUE OPEN                       QV229600
QQLOOP   EQU   *                                                        QV229700
         BAL   R8,QGET                                                  QV229800
         CLI   QIEOFSW,X'FF'                                            QV229900
         BE    QPQDONE                 LOG COUNTS                       QV230000
QQLOOP1  BC    0,QQLOOP2               FALL THRU TILL BYPASS DONE       QV230100
         C     R7,AFTLR                BYPASS DONR ?                    QV230200
         BNH   QQLOOP                  NO                               QV230300
         MVI   QQLOOP1+1,X'F0'         YES                              QV230400
         TM    QSAMOUT+48,X'10'        OPEN                             QV230500
         BO    QQLOOP2                 YES, SKIP RDJFCB ETC.            QV230600
         ST    R1,SAVER1               SAVE FROM GET                    QV230700
         LA    RC,QSAMOUT              PRIME FOR RDJFCB                 QV230800
         RDJFCB ((12))                                                  QV230900
         LTR   RF,RF                   SUCCESSFUL ?                     QV231000
         BZ    CKRF                    OK                               QV231100
QORJERR  EQU   *                                                        QV231200
         MVC   CONIO(23),=C'RDJFCB ERROR ON QSAMOUT'                    QV231300
         MVI   MSLN,23                                                  QV231400
         B     TELUSER2                                                 QV231500
CKRF     CLI   OUTJFCB+100,0           RECFM ?                          QV231600
         BNE   CKBS                    NO                               QV231700
         OI    QORBL,X'80'             YES                              QV231800
CKBS     CLC   OUTJFCB+102(2),=X'0000' BLKSIZE ?                        QV231900
         BNE   CKLR                    NO                               QV232000
         OI    QORBL,X'40'             YES                              QV232100
CKLR     CLC   OUTJFCB+104(2),=X'0000'  LRECL ?                         QV232200
         BNE   TMRBL                   NO                               QV232300
         OI    QORBL,X'20'             YES                              QV232400
TMRBL    TM    QORBL,X'E0'             RBL ALL 3 SUBMITTED              QV232500
         BNO   QQOPEN                  NO,  DO NOT USE QSAMIN DCB       QV232600
         MVC   CONIO(61),DCBMSG        'QSAMOUT RECFM . . .             QV232700
         MVI   MSLN,61                                                  QV232800
         BAL   R9,USERMSG                                               QV232900
MVLR     MVC   OUTJFCB+104(2),QSAMIN+82     USE QSAMIN LRECL            QV233000
MVBS     MVC   OUTJFCB+102(2),QSAMIN+62    USE QSAMIN BLKSIZE           QV233100
MVRF     MVC   OUTJFCB+100(1),QSAMIN+36    USE QSAMIN RECFM             QV233200
         OI    OUTJFCB+76,X'80'        WRITE MODIFIED JFCB TO JOBQUE    QV233300
QQOPEN   EQU   *                                                        QV233400
         LA    RC,QSAMOUT              PRIME FOR OPEN                   QV233500
         OPEN  ((12),(OUTPUT)),TYPE=J                                   QV233600
         TM    QSAMOUT+48,X'10'        OK ?                             QV233700
         BNO   QOPENERR                ERROR MSG                        QV233800
         L     R1,SAVER1               RESTORE                          QV233900
QQLOOP2  EQU   *                                                        QV234000
         LR    RB,R1                   PRIME FOR PUT                    QV234100
         BAL   R8,QPUT                                                  QV234200
         L     R7,QIGETCNT             DONE PER NLRECS ?                QV234300
         C     R7,NLR                                                   QV234400
         BNE   QQLOOP                  NO                               QV234500
         B     QPQDONE                 DONE                             QV234600
         EJECT                                                          QV234700
*********************************************************************** QV234800
*******************          RETURN MECHANISM      ******************** QV234900
*********************************************************************** QV235000
         SPACE 1                                                        QV235100
RETNORM  EQU   *                                                        QV235200
         LA    RF,0                    RC = 0                           QV235300
         B     RETURN                                                   QV235400
RETR8    EQU   *                                                        QV235500
         LA    RF,4                    RC = 4                           QV235600
         B     RETURN                                                   QV235700
RETIRPT  EQU   *                                                        QV235800
         LA    RF,8                    RC = 8                           QV235900
RETURN   EQU   *                                                        QV236000
         L     RD,4(RD)                PRIME RD                         QV236100
         RETURN (14,12),RC=(15)                                         QV236200
         EJECT                                                          QV236300
*********************************************************************** QV236400
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** QV236500
*********************************************************************** QV236600
         SPACE 1                                                        QV236700
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    QV236800
WRTCON   EQU   *                                                        QV236900
         LA    R1,PARM                 MSICCW                           QV237000
         CALL  WTORSUB                                                  QV237100
         B     WTORRET(RF)                                              QV237200
WTORRET  B     0(R8)                   RC = 0                           QV237300
         B     RETIRPT                 RC = 4                           QV237400
         EJECT                                                          QV237500
*********************************************************************** QV237600
**********               CONSOLE - WRITE ONLY  (WTO)        *********** QV237700
*********************************************************************** QV237800
         SPACE 1                                                        QV237900
WCON2    EQU   *                                                        QV238000
         LA    R1,PARM                 MSICCW                           QV238100
         CALL  WTOSUB                                                   QV238200
         B     WTORRET(RF)             USE WTOR RET MECH                QV238300
         EJECT                                                          QV238400
*********************************************************************** QV238500
**********                   CARD READING    (QSAM)         *********** QV238600
*********************************************************************** QV238700
CDRD     EQU   *                                                        QV238800
         LA    R1,PARM                 MSICCW                           QV238900
         CALL  CDRDSUB                                                  QV239000
         B     CDRDRET(RF)                                              QV239100
CDRDRET  B     0(R8)                   RC = 0                           QV239200
         B     RETIRPT                 RC = 4                           QV239300
         B     TELUSER2                RC = 8                           QV239400
         EJECT                                                          QV239500
*********************************************************************** QV239600
**********                   CARD PUNCHING   (QSAM)         *********** QV239700
*********************************************************************** QV239800
CDPN     EQU   *                                                        QV239900
         LA    R1,PARM                 MSICCW                           QV240000
         CALL  CDPNSUB                                                  QV240100
         B     CDPNRET(RF)                                              QV240200
CDPNRET  B     0(R8)                   RC = 0                           QV240300
         B     RETIRPT                                                  QV240400
         B     TELUSER2                RC = 8                           QV240500
         EJECT                                                          QV240600
*********************************************************************** QV240700
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** QV240800
*********************************************************************** QV240900
EDIT     TR    CONIO(132),TRTBL    TRANSLATE UNPRINTABLE CHAR FOR MAX   QV241000
PRNT     EQU   *                                                        QV241100
         LA    R1,PARM                 MSICCW                           QV241200
         CALL  PRNTSUB                                                  QV241300
         B     PRNTRET(RF)                                              QV241400
PRNTRET  B     PRNTEXIT                RC = 0                           QV241500
         B     RETIRPT                 RC = 4                           QV241600
         B     TELUSER2                RC = 8                           QV241700
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       QV241800
         BNE   0(R8)                   NO                               QV241900
         MVI   OVFLOSW,X'00'           RESET                            QV242000
         MVI   CC,X'11'                DOUBLE SPACING                   QV242100
         BR    R8                      RETURN                           QV242200
OVFLO    EQU   *                                                        QV242300
         MVI   CC,X'8B'                SKIP TO CH 1                     QV242400
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              QV242500
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         QV242600
         B     PRNT                                                     QV242700
         EJECT                                                          QV242800
*********************************************************************** QV242900
********************   QSAM  GET ROUTINE        *********************** QV243000
*********************************************************************** QV243100
         SPACE 1                                                        QV243200
QGET     EQU   *                                                        QV243300
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       QV243400
         BO    RETIRPT                 B   CHKIRT                       QV243500
         MVC   QIEOF(4),QIEOFVEC       PLUG VEC BR TO THIS SUB AT EODAD QV243600
         GET   QSAMIN                                                   QV243700
         L     R7,QIGETCNT                                              QV243800
         LA    R7,1(R7)                BUMP LRECL CTR                   QV243900
         ST    R7,QIGETCNT             SAVE                             QV244000
         BR    R8                                                       QV244100
         EJECT                                                          QV244200
*********************************************************************** QV244300
***************        QSAMIN VAR LEN CHECK ROUTINE     *************** QV244400
*********************************************************************** QV244500
         SPACE 1                                                        QV244600
QIVARLN  EQU   *                       CHK DCB FOR V, VB, OR VBS        QV244700
         LH    R3,QSAMIN+82            GET LRECL                        QV244800
         TM    QSAMIN+36,X'80'         F OR U ?                         QV244900
         BO    QIVARLN2                YES, EXIT                        QV245000
         TM    QSAMIN+36,X'40'         V ?                              QV245100
         BNO   QIVARLN2                NO,  EXIT                        QV245200
         LH    R3,0(R1)                GET RECORD DESCR.                QV245300
         SH    R3,=H'4'                DECR LRECL IF VAR LEN            QV245400
         LA    R1,4(R1)                BUMP PAST RECORD DESCR.          QV245500
QIVARLN2 EQU   *                                                        QV245600
         BR    R8                      RETURN                           QV245700
         EJECT                                                          QV245800
*********************************************************************** QV245900
*******************          QSAMIN EOF ROUTINE       ***************** QV246000
*********************************************************************** QV246100
         SPACE 1                                                        QV246200
QIEOFSUB EQU   *                       BR HERE ON EODAD                 QV246300
         ST    R8,SAVER                SAVE BEFORE PRINT                QV246400
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              QV246500
         BAL   R8,PRNT                 SPACE                            QV246600
         L     R8,SAVER                RESTORE R8                       QV246700
         MVC   CONIO(13),EOFQIMSG                                       QV246800
         MVI   MSLN,13                                                  QV246900
         BAL   R9,USERMSG              ISSUE MSG                        QV247000
         MVI   QIEOFSW,X'FF'           SET EOF SW                       QV247100
         LA    R9,QSAMIN               PRIME FOR CLOSE                  QV247200
         CLOSE ((9))                                                    QV247300
         BR    R8                                                       QV247400
         EJECT                                                          QV247500
*********************************************************************** QV247600
***************         QSAMIN OPEN ROUTINE     *********************** QV247700
*********************************************************************** QV247800
         SPACE 1                                                        QV247900
QIOPEN   EQU   *                                                        QV248000
         TM    QSAMIN+48,X'10'         OPEN ?                           QV248100
         BO    QIOPENOK                YES                              QV248200
         LA    RC,QSAMIN               PRIME FOR REG OPEN               QV248300
         OPEN  ((12),INPUT)                                             QV248400
         TM    QSAMIN+48,X'10'         OPEN OK ?                        QV248500
         BO    QIOPENDN                YES                              QV248600
         MVC   CONIO(8),QSAMIN+40      MOVE IN DDNAME                   QV248700
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 QV248800
         MVI   MSLN,23                                                  QV248900
         B     TELUSER2                                                 QV249000
QIOPENDN EQU   *                                                        QV249100
         MVI   QIEOFSW,X'00'           RESET IF RE-OPEN BY SUBSEQ. FUN  QV249200
QIOPENOK EQU   *                                                        QV249300
         BR    R8                      RETURN                           QV249400
         EJECT                                                          QV249500
*********************************************************************** QV249600
********************         PUT ROUTINE        *********************** QV249700
*********************************************************************** QV249800
         SPACE 1                                                        QV249900
QPUT     EQU   *                                                        QV250000
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       QV250100
         BO    RETIRPT                 B   CHKIRT                       QV250200
         PUT   QSAMOUT,(11)                                             QV250300
         L     R7,QOPUTCNT                                              QV250400
         LA    R7,1(R7)                BUMP                             QV250500
         ST    R7,QOPUTCNT                                              QV250600
         BR    R8                                                       QV250700
         EJECT                                                          QV250800
*********************************************************************** QV250900
********************   VSAM  GET ROUTINE        *********************** QV251000
*********************************************************************** QV251100
         SPACE 1                                                        QV251200
VIGET    EQU   *                                                        QV251300
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       QV251400
         BO    RETIRPT                 B   CHKIRT                       QV251500
         MVC   VIEOF(4),VIEOFVEC       PLUG VEC BR TO THIS SUB AT EODAD QV251600
         LA    RC,VIRPL                                                 QV251700
         GET   RPL=((12))                                               QV251800
         LTR   RF,RF                   ERRORS ?                         QV251900
         BNZ   VIGETER                                                  QV252000
         SHOWCB RPL=((12)),AREA=RECLEN,LENGTH=4,FIELDS=RECLEN           QV252100
         LTR   RF,RF                   ERRORS ?                         QV252200
         BNZ   VISHOER                 YES                              QV252300
         L     R3,RECLEN               GET LRECL                        QV252400
         L     R7,VIGETCNT             UPDATE                           QV252500
         LA    R7,1(R7)                BUMP LRECL CTR                   QV252600
         ST    R7,VIGETCNT             SAVE                             QV252700
         BR    R8                      RETURN                           QV252800
         EJECT                                                          QV252900
*********************************************************************** QV253000
*******************          VSAMIN EOF ROUTINE       ***************** QV253100
*********************************************************************** QV253200
         SPACE 1                                                        QV253300
VIEOFSUB EQU   *                                                        QV253400
         ST    R8,SAVER                SAVE BEFORE PRINT                QV253500
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              QV253600
         BAL   R8,PRNT                 SPACE                            QV253700
         L     R8,SAVER                RESTORE R8                       QV253800
         MVC   CONIO(13),EOFQIMSG                                       QV253900
         MVI   CONIO+7,C'V'            VSAMIN                           QV254000
         MVI   MSLN,13                                                  QV254100
         BAL   R9,USERMSG              ISSUE MSG                        QV254200
         MVI   VIEOFSW,X'FF'                                            QV254300
         LA    R9,VSAMIN               PRIME FOR CLOSE                  QV254400
         CLOSE ((9))                                                    QV254500
         LTR   RF,RF                   ERRORS ?                         QV254600
         BNZ   VICLOER                                                  QV254700
         MVI   VIOPENSW,0              SET SW TO CLOSED                 QV254800
         BR    R8                                                       QV254900
         EJECT                                                          QV255000
*********************************************************************** QV255100
********************   VSAM OPEN ROUTINE        *********************** QV255200
*********************************************************************** QV255300
         SPACE 1                                                        QV255400
VIOPEN   EQU   *                                                        QV255500
         LA    RC,VSAMIN                                                QV255600
         OPEN  ((12))                                                   QV255700
         LTR   RF,RF                   ERRORS ?                         QV255800
         BNZ   VIOPER                  YES                              QV255900
         TESTCB ACB=((12)),ERET=VITSTER,ATRB=KSDS                       QV256000
         BE    VIKSDS        KSDS CONFIRMED                             QV256100
         MVI   VITYP,C'E'    ASSUME ESDS                                QV256200
         LA    RC,VIRPL                                                 QV256300
         MODCB RPL=((12)),OPTCD=(ADR)                                   QV256400
         LTR   RF,RF                   ERRORS ?                         QV256500
         BNZ   VIMODER                 YES                              QV256600
         B     VIOPENDN                OPEN DONE                        QV256700
VIKSDS   EQU   *                                                        QV256800
         MVI   VITYP,C'K'    KSDS                                       QV256900
         LA    RC,VSAMIN                                                QV257000
         CLOSE ((12))                                                   QV257100
         LTR   RF,RF                   ERRORS ?                         QV257200
         BNZ   VICLOER                 YES                              QV257300
         MODCB ACB=((12)),MACRF=(KEY)                                   QV257400
         LTR   RF,RF                   ERRORS ?                         QV257500
         BNZ   VIMODER                 YES                              QV257600
         OPEN  ((12))                                                   QV257700
         LTR   RF,RF                   ERRORS ?                         QV257800
         BNZ   VIOPER                                                   QV257900
         SHOWCB ACB=((12)),AREA=VIFLDS,LENGTH=8,FIELDS=(KEYLEN,RKP)     QV258000
         LTR   RF,RF                   ERRORS ?                         QV258100
         BNZ   VIOPER                  YES                              QV258200
         LA    R4,HSTARTKY   PTR TO STARTKEY                            QV258300
         LA    RC,VIRPL                                                 QV258400
         L     R7,VIKL       KEY LEN                                    QV258500
         CH    R7,=H'35'     COMPARE TO STARTKEY      MAX.              QV258600
         BNH   VIKSFKS                 FULL KEY SIZE                    QV258700
         LH    R7,=H'35'               SET  LENGTH FOR GENERIC KEY      QV258800
VIKSGEN  EQU   *                                                        QV258900
         MODCB RPL=((12)),OPTCD=(KEY,GEN),KEYLEN=((7)),ARG=((4))        QV259000
         LTR   RF,RF                   ERRORS ?                         QV259100
         BNZ   VIMODER                                                  QV259200
         B     VIOPENDN                OPEN DONE                        QV259300
VIKSFKS  EQU   *                                                        QV259400
         MODCB RPL=((12)),OPTCD=KEY,KEYLEN=((7)),ARG=((4))              QV259500
         LTR   RF,RF                   ERRORS ?                         QV259600
         BNZ   VIMODER                                                  QV259700
VIOPENDN EQU   *                                                        QV259800
         MVI   VIOPENSW,X'FF'          SET OPEN                         QV259900
         MVI   VIEOFSW,0               RESET EOF SW                     QV260000
         BR    R8                      RETURN                           QV260100
         EJECT                                                          QV260200
*********************************************************************** QV260300
*******************          VSAMIN POINT ROUTINE        ************** QV260400
*********************************************************************** QV260500
         SPACE 1                                                        QV260600
VIPOINT  EQU   *                                                        QV260700
         LA    RC,VIRPL                                                 QV260800
         POINT RPL=((12))                                               QV260900
         LTR   RF,RF                   ERRORS ?                         QV261000
         BNZ   VIPTER                  YES                              QV261100
         BR    R8                      RETURN                           QV261200
         EJECT                                                          QV261300
*********************************************************************** QV261400
**********         VSAM ERROR ROUTINS FOR NON ZERO R. C.    *********** QV261500
*********************************************************************** QV261600
         SPACE 1                                                        QV261700
VIOPER   EQU   *                                                        QV261800
         MVC   VIERMAC,OPEN                                             QV261900
         B     VPERR                   ISSUE MSG                        QV262000
VITSTER  EQU   *                                                        QV262100
         MVC   VIERMAC,TESTCB                                           QV262200
         B     VPERR                   ISSUE MSG                        QV262300
VIMODER  EQU   *                                                        QV262400
         MVC   VIERMAC,MODCB                                            QV262500
         B     VPERR                   ISSUE MSG                        QV262600
VICLOER  EQU   *                                                        QV262700
         MVC   VIERMAC,CLOSE                                            QV262800
         B     VPERR                   ISSUE MSG                        QV262900
VISHOER  EQU   *                                                        QV263000
         MVC   VIERMAC,SHOWCB                                           QV263100
         B     VPERR                   ISSUE MSG                        QV263200
VIPTER   EQU   *                                                        QV263300
         MVC   VIERMAC,POINT                                            QV263400
         B     VPERR                   ISSUE MSG                        QV263500
VIGETER  EQU   *                                                        QV263600
         MVC   VIERMAC,GET                                              QV263700
VPERR    EQU   *                                                        QV263800
         DC    A(0)                                                     QV263900
         MVC CONIO(28),VIERMSG                                          QV264000
         MVI   MSLN,28                                                  QV264100
         B     TELUSER2                                                 QV264200
         EJECT                                                          QV264300
*********************************************************************** QV264400
**********         TELL USER OF ERROR CONDITION ROUTINE     *********** QV264500
*********************************************************************** QV264600
         SPACE 1                                                        QV264700
TELUSER2 CLI   CNTRLSW,X'FF'           ENTER FOR MSG N.E. 23. IN CNCD ? QV264800
         BNE   TELOPER             NO                                   QV264900
TELPGMR  MVC   PL(1),MSLN              SET PRT LN                       QV265000
         MVI   CC,X'11'                DOUBLE SPACE AFTER PRINT         QV265100
         BAL   R8,PRNT             PRINT MSG TO PGMR                    QV265200
         B     RETNORM                                                  QV265300
TELOPER  EQU   *                                                        QV265400
         BAL   R8,WCON2            TELL OPERATOR                        QV265500
         B     RETNORM                                                  QV265600
USERMSG  EQU   *                                                        QV265700
         ST    R8,SAVER                SAVE BEFORE USE                  QV265800
         CLI   CNTRLSW,X'FF'           IN CNCD ?                        QV265900
         BNE   USROPER             NO                                   QV266000
USRPGMR  MVC   PL(1),MSLN              SET PRT LN                       QV266100
         MVI   CC,X'11'                DOUBLE SPACE AFTER PRINT         QV266200
         BAL   R8,PRNT             PRINT MSG TO PGMR                    QV266300
         B     USERTOLD                                                 QV266400
USROPER  EQU   *                                                        QV266500
         BAL   R8,WCON2            TELL OPERATOR                        QV266600
USERTOLD EQU   *                                                        QV266700
         L     R8,SAVER                RESTORE R8                       QV266800
         BR    R9                      RETURN                           QV266900
         EJECT                                                          QV267000
*********************************************************************** QV267100
**********         DEBLOCK  RECORDS FOR PRINTING OR DUMP    *********** QV267200
*********************************************************************** QV267300
         SPACE 1                                                        QV267400
DEBLOK   LA    R4,100(R0)          REC LNTH TO BE PRINTED IS 100        QV267500
         SR    R7,R7                                                    QV267600
DB1      MVI   CC,X'09'                                                 QV267700
         CR    R3,R4               IS RECORD LNTH GREATER THAN 100 ?    QV267800
         BNH   LSBLK               NO, SET UP FOR LAST BLOCK.           QV267900
         SR    R3,R4                                                    QV268000
DB2      CLI   DPSW,X'FF'          DUMP IN HEX ?                        QV268100
         BNE   LST                 NO, GO TO LIST                       QV268200
         CLI   LISTSW,X'FF'        DP,DPD,SP,SPD ?                      QV268300
         BE    DISKLST             YES                                  QV268400
         STC   R4,PRLTH            YES, SET                             QV268500
         BAL   R8,DECCVT           UP TO                                QV268600
         MVC   SCALE+12(8),HOLDSEQ                                      QV268700
         BAL   R9,HEXDP            HEX PRINT 100 POS.                   QV268800
         MVC   HDG1(78),BLANKS                                          QV268900
         AR    RA,R4               BUMP I/O POINTER BY 100.             QV269000
         LA    R7,10(R7)                                                QV269100
         B     DB1                                                      QV269200
DISKLST  MVC   HDG1(8),HDG3        REC NUMBER                           QV269300
         MVC   HDG2,BLANKS         OMIT 'HEAD' TITLE                    QV269400
LST      LR    R1,R4                                                    QV269500
         STC   R1,LSTMVC+1             STORE MVC LNTH                   QV269600
         LA    R1,32(R1)           BUMP PRINT LENGTH                    QV269700
         STC   R1,PL               BY 32 POS ( FOR HDGS)                QV269800
         MVC   CONIO(32),HDG1      MOVE HDG1 TO PRINT AREA              QV269900
LSTMVC   MVC   CONIO+32(100),0(RA)     MOVE FROM DTPIO TO PRINT AREA    QV270000
         AR    RA,R4               BUMP I/O AREA POINTER BY 100.        QV270100
         BAL   R8,EDIT             EDIT AND PRINT.                      QV270200
         MVC   HDG1(78),BLANKS                                          QV270300
         B     DB1                                                      QV270400
LSBLK    LTR   R3,R3               ARE WE DONE ?                        QV270500
         BZ    0(RB)               YES, RETURN.                         QV270600
         LR    R4,R3               NO, SET PRINT LNGTH TO REMAINING     QV270700
         SR    R3,R3               RECORD LENGTH.                       QV270800
         B     DB2                                                      QV270900
         EJECT                                                          QV271000
*********************************************************************** QV271100
**********               VERTICAL HEX ROUTINE               *********** QV271200
*********************************************************************** QV271300
         SPACE 1                                                        QV271400
HEXDP    MVC   HEXIO+20(100),0(RA)     MOVE DATA TO HEX AREA.           QV271500
         SR    R8,R8               BUMP PRINT LENGTH                    QV271600
         IC    R8,PRLTH            BY                                   QV271700
         LA    R8,32(R8)           32 POSITIONS                         QV271800
         STC   R8,PL               FOR HEX HEADINGS.                    QV271900
         MVC   CONIO(7),BLANKS                                          QV272000
         MVI   INPUT,X'FF'         SET IGNORE OVERFLOW SW ON.           QV272100
         MVC   CONIO(26),HDG1      SET UP FIRST                         QV272200
         MVC   HEXIO+14(6),DET1    HEADING.                             QV272300
         MVI   CC,X'09'            SINGLE SPACE.                        QV272400
         BAL   R8,EDIT             EDIT AND PRINT.                      QV272500
         MVC   HEXIO+20(1),0(RA)       MOVE                             QV272600
         PACK  HEXIO+20(0),HEXIO+20(0) ZONES AND                        QV272700
         MVO   HEXIO+21(16),0(16,RA)   WITH OFFSET TO                   QV272800
         MVO   HEXIO+36(16),15(16,RA)  NUMERIC POSITIONS.               QV272900
         MVO   HEXIO+51(16),30(16,RA)                                   QV273000
         MVO   HEXIO+66(16),45(16,RA)                                   QV273100
         MVO   HEXIO+81(16),60(16,RA)                                   QV273200
         MVO   HEXIO+96(16),75(16,RA)                                   QV273300
         MVO   HEXIO+111(10),90(10,RA)                                  QV273400
         NC    HEXIO+20(100),SET   AND OFF ZONE S.                      QV273500
         TR    HEXIO+20(100),HEXTB TRANSLATE TO HEX CHAR.               QV273600
         MVC   CONIO(26),HDG2      SET UP ZONE                          QV273700
         MVC   HEXIO+14(6),DET2    HEADINGS.                            QV273800
         BAL   R8,PRNT             PRINT ZONES.                         QV273900
         MVC   HEXIO+20(100),0(RA) REFILL HEX AREA.                     QV274000
         NC    HEXIO+20(100),SET   AND OFF ZONES.                       QV274100
         TR    HEXIO+20(100),HEXTB TRANSLATE TO HEX CHAR.               QV274200
         MVC   CONIO(26),HDG3      SET UP NUMERIC                       QV274300
         MVC   HEXIO+14(6),DET3    HEADINGS.                            QV274400
         BAL   R8,PRNT             PRINT NUMERIC LINE.                  QV274500
         MVC   CONIO(33),BLANKS                                         QV274600
         MVC   HEXIO(120),SCALE    MOVE SCALE TO PRINT AREA.            QV274700
         MVI   CC,X'11'            SET TO DOUBLE SPACE.                 QV274800
         MVI   INPUT,X'00'         TURN OFF IGNORE OVERFLOW SW.         QV274900
         BAL   R8,PRNT             PRINT SCALE.                         QV275000
         BR    R9                  RETURN.                              QV275100
         EJECT                                                          QV275200
*********************************************************************** QV275300
*************                DISPLAY OS/DITTO HEADING       *********** QV275400
*********************************************************************** QV275500
         SPACE 1                                                        QV275600
DHDG     EQU   *                                                        QV275700
         LA    R1,PARM                 MSICCW                           QV275800
         CALL  HEADING                                                  QV275900
         B     HEADRET(RF)                                              QV276000
HEADRET  B     0(R8)                   RC = 0                           QV276100
         B     RETIRPT                 RC = 4                           QV276200
         B     TELUSER2                RC = 8                           QV276300
         EJECT                                                          QV276400
*********************************************************************** QV276500
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** QV276600
*********************************************************************** QV276700
         SPACE 1                                                        QV276800
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                QV276900
         BCTR  R0,R0                   CONSOLE REPLY.                   QV277000
         MVC   CONIO+50(5),ZEROS                                        QV277100
         MVC   CONIO+55(10),CONIO                                       QV277200
         LA    R1,CONIO+54                                              QV277300
         AR    R1,RC                                                    QV277400
RTJUST   CLI   0(R1),C' '                                               QV277500
         BNE   MOVBAC                                                   QV277600
         BCTR  R1,R0                                                    QV277700
         BCT   R0,RTJUST                                                QV277800
MOVBAC   SR    R1,RC                                                    QV277900
         MVC   CONIO(10),1(R1)                                          QV278000
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    QV278100
TSTNUM1  TM    0(R1),X'F0'                                              QV278200
         BNO   NUMBAD                                                   QV278300
         LA    R1,1(R1)                                                 QV278400
         BCT   RC,TSTNUM1                                               QV278500
         B     4(R8)                                                    QV278600
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV278700
         BE    NUMBAD2                 IF CNCD SKIP MVI (SHOULD NOT OC) QV278800
         MVI   P,0                                                      QV278900
NUMBAD2  EQU   *                                                        QV279000
         B     0(R8)                                                    QV279100
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               QV279200
         CVB   R1,HOLD             RESULTS IN REG 1.                    QV279300
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  QV279400
         MVC   HOLD+1(7),HOLD                                           QV279500
         BR    R8                                                       QV279600
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                QV279700
         UNPK  HOLDSEQ,HOLD        IN REG 7                             QV279800
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          QV279900
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  QV280000
         MVC   HOLD+1(7),HOLD                                           QV280100
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       QV280200
         MVI   ESW,X'00'                                                QV280300
         BNE   0(R8)               NO, RETURN.                          QV280400
         LA    R1,HOLDSEQ                                               QV280500
         LA    R0,7                REPLACE WITH                         QV280600
DECLOP   CLI   0(R1),C'0'          BLANKS.                              QV280700
         BNE   0(R8)                                                    QV280800
         MVI   0(R1),C' '                                               QV280900
         LA    R1,1(R1)                                                 QV281000
         BCT   R0,DECLOP                                                QV281100
         BR    R8                                                       QV281200
         EJECT                                                          QV281300
*********************************************************************** QV281400
*******************            GET STARTAFT AND NLRECS     ************ QV281500
*********************************************************************** QV281600
         SPACE 1                                                        QV281700
AFTNLR   EQU   *                                                        QV281800
         MVI   QIGETCNT,0              CLEAR TO                         QV281900
         MVC   QIGETCNT+1(19),QIGETCNT ZEROS                            QV282000
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV282100
         BE    TP3                                                      QV282200
TP2      EQU   *                                                        QV282300
         MVC   CONIO(63),AFTERMSG      'REPLY - 'NNNNN' START AFTER     QV282400
         MVI   MSLN,63                                                  QV282500
         MVI   RPLN,5                                                   QV282600
         BAL   R8,WRTCON                                                QV282700
         CLI   CONIO,C'U'              DEFAULT ?                        QV282800
         BE    QP5                     YES                              QV282900
         LA    RC,5(R0)                                                 QV283000
         LA    RB,CONIO                                                 QV283100
         BAL   R8,TSTNUMV          RECSIZE NUMERIC ?                    QV283200
         B     TP2                 NO,                                  QV283300
         B     TP4                 YES                                  QV283400
TP3      EQU   *                                                        QV283500
         TM    CT1,X'10'               STARTAFT SUBMITTED               QV283600
         BNO   QP5                     NO                               QV283700
         MVC   CONIO(5),HSA            YES                              QV283800
TP4      LA    RC,5(R0)                                                 QV283900
         CLC   CONIO(5),ZEROS      GREATER THAN ZERO ?                  QV284000
         BNE   GRTRZERO            YES,                                 QV284100
         MVI   CONIO,C'X'                                               QV284200
GRTRZERO LA    RB,CONIO                                                 QV284300
         BAL   R8,TSTNUM                                                QV284400
         B     TP2                                                      QV284500
         MVC   HOLD+3(5),CONIO                                          QV284600
         BAL   R8,BINCVT                                                QV284700
         ST    R1,AFTLR                SAVE VALUE                       QV284800
QP5      EQU   *                                                        QV284900
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      QV285000
         BE    QP7                                                      QV285100
QP6      EQU   *                                                        QV285200
         MVC   CONIO(61),NLRMSG                                         QV285300
         MVI   MSLN,61                                                  QV285400
         MVI   RPLN,5                                                   QV285500
         BAL   R8,WRTCON                                                QV285600
         CLI   CONIO,C'U'              DEFAULT ?                        QV285700
         BE    QP9                     YES                              QV285800
         LA    RC,5                                                     QV285900
         LA    RB,CONIO                                                 QV286000
         BAL   R8,TSTNUMV              NUMERIC ?                        QV286100
         B     QP6                                                      QV286200
         B     QP8                                                      QV286300
QP7      EQU   *                                                        QV286400
         TM    CT1,X'04'               NLRECS SUBMITTED                 QV286500
         BNO   QP9                                                      QV286600
         MVC   CONIO(5),HNR            RETRVE HOLD NLRECS               QV286700
QP8      EQU   *                                                        QV286800
         LA    RC,5                                                     QV286900
         CLC   CONIO(5),ZEROS                                           QV287000
         BNE   GRTZER2                                                  QV287100
         MVI   CONIO,C'X'                                               QV287200
GRTZER2  LA    RB,CONIO                                                 QV287300
         BAL   R8,TSTNUM                                                QV287400
         B     QP6                                                      QV287500
         MVC   HOLD+3(5),CONIO                                          QV287600
         BAL   R8,BINCVT                                                QV287700
         ST    R1,NLR                  SAVE VALUE                       QV287800
QP9      EQU   *                                                        QV287900
         L     R1,NLR                  GET NLRECS                       QV288000
         A     R1,AFTLR                BUMP BY POS. AFTER VALUE         QV288100
         ST    R1,NLR                  SAVE FOR LIMIT CHECKING          QV288200
         BR    R9                      RETURN                           QV288300
         SPACE 1                                                        QV288400
*******************            BEGIN FUNCTION THAT PRINTS  ************ QV288500
         SPACE 1                                                        QV288600
BEGINFUN EQU   *                                                        QV288700
         BAL   R8,DHDG                                                  QV288800
         BAL   R8,OVFLO                                                 QV288900
         BAL   R8,OVFLO                                                 QV289000
         MVC   HH2+8(20),=C'LOGICAL RECORD PRINT'                       QV289100
         MVC   CONIO,HH1                                                QV289200
         MVI   PL,X'84'                                                 QV289300
         MVI   CC,X'19'                                                 QV289400
         BAL   R8,PRNT             NO, PRINT NOW                        QV289500
         BR    R9                      RETURN                           QV289600
         EJECT                                                          QV289700
*********************************************************************** QV289800
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** QV289900
*********************************************************************** QV290000
         SPACE 1                                                        QV290100
QIEOFVEC B     QIEOFSUB                VECTOR FOR EODAD                 QV290200
VIEOFVEC B     VIEOFSUB                VECTOR FOR EODAD                 QV290300
SAVEAREA DS    18F                                                      QV290400
PARM     DS    F                                                        QV290500
SAVER    DS    F                       SAVE A REG                       QV290600
SAVER1   DS    F                       SAVE R1 HERE                     QV290700
QIGETCNT DS    F                       CTR FOR GETS TO QSAMIN           QV290800
QOPUTCNT DS    F                       CNT OUTPUT LRECLS                QV290900
VIGETCNT DS    F             LRECLS READ                                QV291000
NLR      DS    F                       # LRECS TO PROCESS               QV291100
AFTLR    DS    F                       # OF LREC TO POSIT. PAST BOF     QV291200
VIFLDS   DS    0F                      SHOWCB OUTPUT                    QV291300
VIKL     DS    F                                                        QV291400
VIRKP    DS    F                                                        QV291500
RECLEN   DS    F                                                        QV291600
QORBL    DC    X'00'                   RECFM, BLKSIZE, LRECL ON QSAMOUT QV291700
EOFQIMSG DC    C'EOF ON '                                               QV291800
QSAMINDC DC    C'QSAMIN'                                                QV291900
AFTERMSG DC    C'REPLY - ''NNNNN'' START AFTER NTH LREC OR ''U'''       QV292000
         DC    C' START WITH 1ST LREC'                                  QV292100
NLRMSG   DC    C'REPLY - ''NNNNN'' LIMIT # LRECS PROCESSED OR ''U'''    QV292200
         DC    C' PROCESS TO EOF'                                       QV292300
KEYMSG   DC    C'REPLY - ''K'' START AT KEY, ''C'' AFTER LRECL COUNT,'  QV292400
         DC    C' OR ''U'' AT 1ST LRECL'                                QV292500
KEYMSG2  DC    C'REPLY - ''STARTKEY'' (35 CHAR MAX)'                    QV292600
VSAMINDC EQU   *                                                        QV292700
VIERMSG  DC    C'VSAMIN ERROR ON '                                      QV292800
VIERMAC  DC    CL6'123456'                                              QV292900
         DC    C' MACRO '                                               QV293000
OPEN     DC    C'OPEN  '                                                QV293100
TESTCB   DC    C'TESTCB'                                                QV293200
MODCB    DC    C'MODCB '                                                QV293300
CLOSE    DC    C'CLOSE '                                                QV293400
SHOWCB   DC    C'SHOWCB'                                                QV293500
POINT    DC    C'POINT '                                                QV293600
GET      DC    C'GET   '                                                QV293700
DCBMSG   DC    C'QSAMOUT RECFM, BLKSIZE, AND LRECL NOT SUBMITTED'       QV293800
         DC    C' - QSAMIN USED'                                        QV293900
         LTORG                         FORCE LITERALS HERE              QV294000
         EJECT                                                          QV294100
         COPY  DITTODS1                                                 QV294200
         SPACE 1                                                        QV294300
         COPY  DITTODS2                                                 QV294400
         CSECT                                                          QV294500
         END   DITTOQV                                                  QV294600
/*                                                                      QV294700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              QV294800
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              QV294900
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              QV295000
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        QV295100
 NAME OITTOQV(R)                                                        QV295200
/*                                                                      QV295300
//                                                                      QV295400
//DITTOLOG JOB ('A=SX82'),'PAS3 BRAMMER',                               LO295500
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LO295600
//PROCSTEP EXEC DITTODSR                                                LO295700
// EXEC ASMFCL,PARM.LKED='LIST,XREF,AC=1'                               LO295800
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      LO295900
//             DD DSN=SYS1.MACLIB,DISP=SHR                              LO296000
//ASM.SYSPUNCH DD DUMMY                                                 LO296100
//ASM.SYSIN DD *                                                        LO296200
         TITLE '* * * * * LOG TAPE TAPEMARK FUNCTION     * * * * * *'   LO296300
         SPACE 20                                                       LO296400
*********************************************************************** LO296500
*                                                                     * LO296600
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * LO296700
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * LO296800
*                                                                     * LO296900
*********************************************************************** LO297000
         EJECT                                                          LO297100
*********************************************************************** LO297200
**********    DITTOLOG RUNS KEY=0 AND IS PGM= IN DITTOLOG PROC  ******* LO297300
*********************************************************************** LO297400
         SPACE 2                                                        LO297500
         ISEQ  75,80                                                    LO297600
DITTOLOG START                                                          LO297700
         SAVE  (14,12)                                                  LO297800
         LR    R2,RD                                                    LO297900
         BALR  R6,R0                                                    LO298000
         USING *,R6                                                     LO298100
         LA    RD,SAVEAREA                                              LO298200
         ST    RD,8(R2)            PTR TO MY S.A.                       LO298300
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 LO298400
         B     AROUND              BR BY COPYRIGHT                      LO298500
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               LO298600
         DC    C'08-15-75 VERS.1 MOD.0'                                 LO298700
AROUND   EQU   *                                                        LO298800
         EJECT                                                          LO298900
*********************************************************************** LO299000
**********         EXTRACT PROTECT KEY AND TIOT FROM TCB    *********** LO299100
*********************************************************************** LO299200
         SPACE 1                                                        LO299300
*********************************************************************** LO299400
*  GET CVT POINTER                                                      LO299500
*********************************************************************** LO299600
         L     R3,16                                                    LO299700
*********************************************************************** LO299800
*  GET POINTER TO THE TCB POINTERS                                      LO299900
*********************************************************************** LO300000
         L     R2,0(R3)                                                 LO300100
*********************************************************************** LO300200
*  GET TCB POINTER                                                      LO300300
*********************************************************************** LO300400
         L     R3,4(R2)                                                 LO300500
*********************************************************************** LO300600
*  GET PROTECT KEY FROM TCB FOR THE DEB'S                               LO300700
*********************************************************************** LO300800
         OC    OUTDEB+24(1),28(R3)                                      LO300900
*********************************************************************** LO301000
*  GET TCB ADDRESS FOR THE DEB'S                                        LO301100
*********************************************************************** LO301200
         ST    R3,OUTDEB                                                LO301300
         L     R2,12(R3)               GET TIOT ADDRESS                 LO301400
         ST    R2,TIOTADR                                               LO301500
         LR    R3,R2                                                    LO301600
         LA    R3,24(,R3)              SKIP TO 1ST DD                   LO301700
         SR    R2,R2                                                    LO301800
*********************************************************************** LO301900
* SCAN FOR DDNAME 'LOGTAPE '                                            LO302000
*********************************************************************** LO302100
TIOTLOOP EQU   *                                                        LO302200
         CLC   4(8,R3),LOGTAPDD                                         LO302300
         BE    TIOTUCB                                                  LO302400
         IC    R2,0(R3)                GET ENTRY LN                     LO302500
         AR    R3,R2                   BUMP TO NEXT ENTRY               LO302600
         CLI   0(R3),X'00'             END OF TIOT ?                    LO302700
         BNE   TIOTLOOP                CONTINUE                         LO302800
TIOTERR  EQU   *                                                        LO302900
         WTO   'LOGTAPE DD MISSING'                                     LO303000
         B     ERROR1                                                   LO303100
         EJECT                                                          LO303200
*********************************************************************** LO303300
* GET UCB                                                               LO303400
*********************************************************************** LO303500
TIOTUCB  LH    R2,18(R3)               L UCB ADDR                       LO303600
         ST    R2,OTDEBUCB             ST IN DEB                        LO303700
*********************************************************************** LO303800
* GET DENSITY AND TRTCH FROM JFCB THEN BUILD DEB MODE                   LO303900
*********************************************************************** LO304000
         RDJFCB (LOGTAPE)                                               LO304100
         B     JFCBRET(RF)             USE RET CODE                     LO304200
JFCBRET  B     JFCBOK                  RC=0                             LO304300
         B     TIOTERR                 RC=4 DD MISSING                  LO304400
JFCBOK   EQU   *                                                        LO304500
         MVC   OUTDENS(1),LOGJFCB+94   PLUG DENS BYTE                   LO304600
         MVC   OUTTRTCH(1),LOGJFCB+93  PLUG TRTCH BYTE                  LO304700
         MVC   OUTDEBMD(1),LOGJFCB+94  PLUG DENS BYTE INTO DEB MODE     LO304800
         CLI   LOGJFCB+93,X'00'        WAS TRTCH SUBMITTED ?            LO304900
         BE    CCWMODE                 NO, SKIP OR                      LO305100
         OC    OUTDEBMD(1),LOGJFCB+93  SIMUL. OPEN BY OR TRTTCH BITS    LO305200
CCWMODE  EQU   *                                                        LO305300
         MVC   MSOCCW(1),OUTDEBMD      SET MODE IN CCW                  LO305400
GETDEVT  EQU   *                                                        LO305500
         DEVTYPE LOGTAPDD,OTDEVTYP                                      LO305600
         B     DEVTRET(RF)             USE RET CODE                     LO305700
DEVTRET  B     DEVTOK                  RC=0                             LO305800
         B     TIOTERR                 RC=4                             LO305900
         B     PGMERR                  RC=8                             LO306000
PGMERR   EQU   *                                                        LO306100
         WTO   'PROGRAM ERROR'                                          LO306200
         B     ERROR1                                                   LO306300
DEVTOK   EQU   *                                                        LO306400
         MVC   OUTDEVT(1),OTDEVTYP+2   PLUG DEVICE CLASS                LO306500
         OC    OUTDEVT(1),OTDEVTYP+3   AND IN UNIT TYPE                 LO306600
         TM    OTDEVTYP+2,X'80'        IT IT TAPE ?                     LO306700
         BO    DEVTOK2                 YES                              LO306800
         WTO   'LOGTAPE DD NOT TAPE UNIT'                               LO306900
         B     ERROR1                                                   LO307000
DEVTOK2  EQU   *                                                        LO307100
         EJECT                                                          LO307200
*********************************************************************** LO307300
*********              WRITE TAPEMARK ROUTINE               *********** LO307400
*********************************************************************** LO307500
         SPACE 1                                                        LO307600
WTM      EQU   *                                                        LO307700
         MVI   OTTPECB,X'00'           CLEAR ECB                        LO307800
         LA    R1,OTTPIOB                                               LO307900
         EXCP  (R1)                                                     LO308000
         WAIT  ECB=OTTPECB             WAIT ON ECB                      LO308100
         CLI   OTTPECB,X'7F'           CHK FOR NORMAL COMPL             LO308200
         BE    RETURNOK                YES, RETURN                      LO308300
WRITERR  EQU   *                                                        LO308400
         WTO   'TAPE WRITE ERROR'                                       LO308500
         EJECT                                                          LO308600
*********************************************************************** LO308700
**********         ERROR MESSAGES AND RETURN ROUTINE.       *********** LO308800
*********************************************************************** LO308900
         SPACE 1                                                        LO309000
ERROR1   EQU   *                                                        LO309100
         MVI   REPLECB,X'00'           RESET WTOR ECB                   LO309200
         WTOR  'REPLY - ''R'' (TO RETRY) OR ''U'' (TO END)',REPL,1,    XLO309300
               REPLECB                                                  LO309400
         WAIT  ECB=REPLECB                                              LO309500
         CLI   REPL,C'R'               RETRY ?                          LO309600
         BE    WTM                     YES                              LO309700
ERROR2   EQU   *                                                        LO309800
         WTO   'BEFORE EOJ TAKE LOGTAPE OUT OF READY AND VARY OFFLINE'  LO309900
         MVI   REPLECB,X'00'           RESET WTOR ECB                   LO310000
         WTOR  'REPLY - ''U'' WHEN READY TO END',REPL,1,REPLECB         LO310100
         WAIT  ECB=REPLECB                                              LO310200
         B     RETURN                                                   LO310300
RETURNOK EQU   *                                                        LO310400
         WTO   'ONE TAPEMARK WRITTEN ON LOGTAPE DD'                     LO310500
RETURN   EQU   *                                                        LO310600
         LA    RD,SAVEAREA         PRIME RD BEFORE RETURN               LO310700
         L     RD,4(RD)                                                 LO310800
         RETURN (14,12),RC=0                                            LO310900
         EJECT                                                          LO311000
*********************************************************************** LO311100
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** LO311200
*********************************************************************** LO311300
         SPACE 1                                                        LO311400
LOGTAPE  DCB   DDNAME=LOGTAPE,MACRF=E,DSORG=PS,DEVD=TA,EXLST=JFCBLST    LO311500
         EJECT                                                          LO311600
*********************************************************************** LO311700
**********               CHANNEL COMMAND WORDS              *********** LO311800
*********************************************************************** LO311900
         SPACE 1                                                        LO312000
         CNOP  0,8                                                      LO312100
MSOCCW   CCW   X'C3',DTPIO,X'40',1     MODE SET   OUTPUT TAPE CCW       LO312200
OTTPCCW  CCW   X'1F',DTPIO,X'20',1     WRITE T.M. CCW (SET SLI BIT )    LO312300
*********************************************************************** LO312400
* STORAGE AND CONTROL BLOCKS                                            LO312500
*********************************************************************** LO312600
         SPACE 1                                                        LO312700
         DS    0F                                                       LO312800
SAVEAREA DS    18F                                                      LO312900
TIOTADR  DC    F'0'                                                     LO313000
REPLECB  DC    F'0'                                                     LO313100
LOGTAPDD DC    CL8'LOGTAPE '                                            LO313200
OTDEVTYP DS    2F                      DEVICE TYPE AND BLOCKSIZE        LO313300
         DS    0F                                                       LO313400
JFCBLST  DC    X'87'                   X'07' AND LAST IN LIST           LO313500
         DC    AL3(LOGJFCB)            ADDRESS                          LO313600
         DS    0F                                                       LO313700
LOGJFCB  DS    CL176                                                    LO313800
DTPIO    DS    CL80                                                     LO313900
REPL     DC    C' '                                                     LO314000
         SPACE 1                                                        LO314100
         DS    0F                                                       LO314200
APPEND   BR    14                                                       LO314300
         SPACE 1                                                        LO314400
*********************************************************************** LO314500
*  DCB FOR OUTPUT DATA SET                                              LO314600
*********************************************************************** LO314700
         SPACE 1                                                        LO314800
         DS    0F                                                       LO314900
OUTDCB   DS    0F                                                       LO315000
         DC    4F'0'                                                    LO315100
OUTTRTCH DC    X'00'                                                    LO315200
OUTDEVT  DC    X'81'                                                    LO315300
OUTDENS  DC    X'00'                                                    LO315400
         DC    X'00'                                                    LO315500
         DC    5F'0'                                                    LO315600
         DC    H'0'                                                     LO315700
         DC    BL2'1101000000001000'                                    LO315800
         DC    A(OUTDEB)                                                LO315900
         DC    X'10000000'                                              LO316000
         DC    5F'0'                                                    LO316100
         SPACE 1                                                        LO316200
*********************************************************************** LO316300
*  DEB FOR OUTPUT DATA SET                                              LO316400
*********************************************************************** LO316500
         SPACE 1                                                        LO316600
OUTIOVEC EQU   *                                                        LO316700
         DC    A(APPEND)                                                LO316800
         DC    A(APPEND)                                                LO316900
         DC    A(APPEND)                                                LO317000
         DC    A(APPEND)                                                LO317100
         DC    A(APPEND)                                                LO317200
         DC    3F'0'                                                    LO317300
         DC    X'06000000'                                              LO317400
OUTDEB   DS    0F                                                       LO317500
         DC    F'0'                                                     LO317600
         DC    X'17000000'                                              LO317700
         DC    X'C0000000'                                              LO317800
         DC    X'30000000'                                              LO317900
         DC    2F'0'                                                    LO318000
         DC    X'0F'                                                    LO318100
         DC    AL3(OUTDCB)                                              LO318200
         DC    X'02'                                                    LO318300
         DC    AL3(OUTIOVEC)                                            LO318400
OTDEBUCB EQU   *                                                        LO318500
OUTDEBMD DC    X'00'                                                    LO318600
OUTDBUCB DC    X'000000'                                                LO318700
         DC    F'0'                                                     LO318800
         SPACE 1                                                        LO318900
*********************************************************************** LO319000
*  ECB FOR OUTPUT DATA SET                                              LO319100
*********************************************************************** LO319200
         SPACE 1                                                        LO319300
OTTPECB  DC    F'0'                                                     LO319400
         SPACE 1                                                        LO319500
*********************************************************************** LO319600
*  IOB FOR OUTPUT DATA SET                                              LO319700
*********************************************************************** LO319800
         SPACE 1                                                        LO319900
OTTPIOB  DS    0F                                                       LO320000
         DC    XL2'4200'                                                LO320100
OUTSENS  DC    H'0'                                                     LO320200
         DC    X'7F'                                                    LO320300
         DC    AL3(OTTPECB)                                             LO320400
OUTSTAT  DC    2F'0'                                                    LO320500
         DC    A(MSOCCW)                                                LO320600
         DC    A(OUTDCB)                                                LO320700
         DC    F'0'                                                     LO320800
         DC    H'1'                                                     LO320900
         DC    H'0'                                                     LO321000
OUTDASD  DC    X'00'                                                    LO321100
OUTSEEK  DC    XL7'00'                                                  LO321200
         SPACE 1                                                        LO321300
CVTPTR   EQU   16                                                       LO321400
R0       EQU   0                                                        LO321500
R1       EQU   1                                                        LO321600
R2       EQU   2                                                        LO321700
R3       EQU   3                                                        LO321800
R4       EQU   4                                                        LO321900
R5       EQU   5                                                        LO322000
R6       EQU   6                                                        LO322100
R7       EQU   7                                                        LO322200
R8       EQU   8                                                        LO322300
R9       EQU   9                                                        LO322400
RA       EQU   10                                                       LO322500
RB       EQU   11                                                       LO322600
RC       EQU   12                                                       LO322700
RD       EQU   13                                                       LO322800
RE       EQU   14                                                       LO322900
RF       EQU   15                                                       LO323000
         END   DITTOLOG                                                 LO323100
/*                                                                      LO323200
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LO323300
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LO323400
//LKED.SYSIN DD *                                                       LO323500
 NAME DITTOLOG(R)                                                       LO323600
/*                                                                      LO323700
//                                                                      LO323800
//DITTOXXX JOB ('A=SX82'),'PAS3 BRAMMER',                               XX000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      XX000200
//PROCSTEP EXEC DITTODSR                                                XX000300
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               XX000400
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      XX000500
//             DD DSN=SYS1.MACLIB,DISP=SHR                              XX000600
//ASM.SYSPUNCH DD DUMMY                                                 XX000700
//ASM.SYSIN DD *                                                        XX000800
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'   XX000900
*********************************************************************** XX001000
**********               XXX LOAD MODULE LOADED             *********** XX001100
**********          INTO PARTITION FOR XXX FUNCTION         *********** XX001200
*********************************************************************** XX001300
         SPACE 2                                                        XX001400
         ISEQ  75,80                                                    XX001500
DITTOXXX START                                                          XX001600
         LR    RD,R5                   PRIME RD                         XX001700
         SAVE  (14,12)                                                  XX001800
         LR    R2,RD                                                    XX001900
         BALR  RC,R0                                                    XX002000
         USING *,RC,R5,RA                                               XX002100
         LR    R5,RC                                                    XX002200
         AH    R5,BUMP                                                  XX002300
         LR    RA,R5                                                    XX002400
         AH    RA,BUMP                                                  XX002500
         LA    RD,SAVEAREA                                              XX002600
         ST    RD,8(R2)            PTR TO MY S.A.                       XX002700
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 XX002800
         L     R7,0(R1)                GET  MSICCW ADR                  XX002900
         USING MAIN,R7                 ADDRESS MSICCW . . .             XX003000
         ST    R7,PARM                 PASS MSICCW ADR TO SUB           XX003100
         LA    R9,PRNT                 BALR REG TO PRNT                 XX003200
         LA    RB,CONIO                DSECT PTR                        XX003300
         USING PGX,RB                                                   XX003400
         B     AROUND              BR BY COPYRIGHT                      XX003500
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'               XX003600
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED  XX003700
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               XX003800
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA                        XX003900
         EJECT                                                          XX004000
*********************************************************************** XX004100
**********          PAGE 1 -  LIST OF FUNCTIONS WITH        *********** XX004200
**********            DESCRIPTIONS WITH * FRAMING           *********** XX004300
*********************************************************************** XX004400
         SPACE 1                                                        XX004500
AROUND   MVI   BL,C' '                                                  XX004600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX004700
         MVI   CC,W1               CARRIAGE CTL = WRITE & SPACE         XX004800
         MVI   PG,C'*'                                                  XX004900
         MVC   PG+1(W),PG          *'S ACROSS PAGE                      XX005000
         MVC   PG+30(17),=C' O S / D I T T O '                          XX005100
         BALR  R8,R9               PRINT HEADING                        XX005200
         MVI   PG+1,C' '                                                XX005300
         MVC   PG+2(W-2),PG+1      BLANK HEADING                        XX005400
         BALR  R8,R9               PRINT LINE 4                         XX005500
         LA    R2,TBL1             POINTER TO PRINT LITERALS            XX005600
         LA    R3,NTBL1            # OF TABLE ENTRIES                   XX005700
         MVI   CC,W1               SET UP PRINT & SINGLE SPACE          XX005800
MOVTBL1  MVC   OPCODE,0(R2)        FUNCTION CODE TO PRNT AREA           XX005900
         MVC   COMMENT,3(R2)       DESCN. TO PRNT AREA                  XX006000
         BALR  R8,R9               PRINT LINE                           XX006100
         LA    R2,52(R2)           BUMP TO NEXT LITERAL                 XX006200
         BCT   R3,MOVTBL1          LOOP & PRNT AGAIN TO COMMENTS        XX006300
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S                     XX006400
         BALR  R8,R9               PRINT SPACE AFTER XXX                XX006500
         MVC   OPCODE(66),COMNT1                                        XX006600
         BALR  R8,R9               PRINT COMNT1                         XX006700
         MVC   OPCODE(66),COMNT1AA                                      XX006800
         BALR  R8,R9               PRINT COMNT1AA                       XX006900
         MVC   OPCODE(66),COMNT1A                                       XX007000
         BALR  R8,R9               PRINT COMNT1A                        XX007100
         MVC   OPCODE(66),COMNT2                                        XX007200
         BALR  R8,R9               PRINT COMNT2                         XX007300
         MVC   OPCODE(66),COMNT2A                                       XX007400
         BALR  R8,R9                   'FOR SPLIT CYL . . .             XX007500
         MVC   OPCODE(66),COMNT3                                        XX007600
         BALR  R8,R9               PRINT 'PUNCHED OUTPUT MAY BE ETC.    XX007700
         MVC   OPCODE(66),COMNT4                                        XX007800
         BALR  R8,R9               PRINT 'DCB=( . . .                   XX007900
         MVC   PG+2(W-2),PG+1                                           XX008000
         BALR  R8,R9               PRINT SPACE LINE                     XX008100
         MVC   COMMENT(41),WHO     MOVE L.S.B... LINE                   XX008200
         BALR  R8,R9               PRINT IT                             XX008300
         MVC   PG+1(W),PG          PROPAGATE *'S                        XX008400
         MVI   CC,WC1              SET TO PRNT & SKIP TO NEW PG.        XX008500
         BALR  R8,R9               PRINT LAST LINE PG1                  XX008600
         EJECT                                                          XX008700
*********************************************************************** XX008800
**********          PAGE 1A LIST OF EXTENSION#1 FUNCTIONS   *********** XX008900
*********************************************************************** XX009000
         SPACE 1                                                        XX009100
         LA    R1,PARM                  MSICCW                          XX009200
         CALL  DITTOE11                                                 XX009300
         B     E11RET(RF)                                               XX009400
E11RET   B     E11DON                  RC = 0                           XX009500
         B     RETIRPT                 RC = 4                           XX009600
         B     TELUSER2                RC = 8                           XX009700
E11DON   EQU   *                       FALL THROUGH                     XX009800
         EJECT                                                          XX009900
*********************************************************************** XX010000
**********          PAGE 2A LIST OF EXTENSION#1             *********** XX010100
**********          CONTROL CARD FORMATS                    *********** XX010200
*********************************************************************** XX010300
         SPACE 1                                                        XX010400
         LA    R1,PARM                  MSICCW                          XX010500
         CALL  DITTOE12                                                 XX010600
         B     E12RET(RF)                                               XX010700
E12RET   B     E12DON                  RC = 0                           XX010800
         B     RETIRPT                 RC = 4                           XX010900
         B     TELUSER2                RC = 8                           XX011000
E12DON   EQU   *                       FALL THROUGH                     XX011100
         EJECT                                                          XX011200
*********************************************************************** XX011300
**********          PAGE 3A LIST OF EXTENSION#1             *********** XX011400
*********           CONSOLE PROCEDURES                      *********** XX011500
*********************************************************************** XX011600
         SPACE 1                                                        XX011700
         LA    R1,PARM                 MSICCW                           XX011800
         CALL  DITTOE13                                                 XX011900
         B     E13RET(RF)                                               XX012000
E13RET   B     E13DON                  RC = 0                           XX012100
         B     RETIRPT                 RC = 4                           XX012200
         B     TELUSER2                RC = 8                           XX012300
E13DON   EQU   *                       FALL THROUGH                     XX012400
         EJECT                                                          XX012500
*********************************************************************** XX012600
**********          PAGE 4A LIST OF EXTENSION#1             *********** XX012700
*********           CONSOLE OPERATION                       *********** XX012800
*********************************************************************** XX012900
         SPACE 1                                                        XX013000
         LA    R1,PARM                 MSICCW                           XX013100
         CALL  DITTOE14                                                 XX013200
         B     E14RET(RF)                                               XX013300
E14RET   B     E14DON                  RC = 0                           XX013400
         B     RETIRPT                 RC = 4                           XX013500
         B     TELUSER2                RC = 8                           XX013600
E14DON   EQU   *                       FALL THROUGH                     XX013700
         EJECT                                                          XX013800
*********************************************************************** XX013900
**********        PAGE 2 - 'FUNCTION CONTROL CARD FORMAT '  *********** XX014000
*********************************************************************** XX014100
         SPACE 1                                                        XX014200
         MVC   PG,PG-1             CLEAR PRINT AREA                     XX014300
         MVC   PG+0(19),=C'* * * * * * * * * *'                         XX014400
         MVC   PG+62(19),PG        BUILD HEADING                        XX014500
         MVC   PG+27(28),CNTRLHD                                        XX014600
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX014700
         BALR  R8,R9               PRINT 'FUNCTION CARD...' HDG.        XX014800
         MVC   PG,PG-1             CLEAR PRINT AREA                     XX014900
         MVC   PG+2(6),=C'CC 1-7'     COLUMN HEADING                    XX015000
         MVC   PG+13(8),=C'FUNCTION'  COLUMN HEADING                    XX015100
         MVC   PAR(10),=C'PARAMETERS'   'PARAMETERS' TO HEADING         XX015200
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX015300
         BALR  R8,R9               PRINT COLUMN HEADINGS                XX015400
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX015500
         MVC   PG+2(7),=C'$$DITTO'                                      XX015600
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX015700
         LA    R2,TBL1             POINTER TO FUNCTION CODE LITERALS    XX015800
         LA    R3,NTBL3            NUMBER OF TBL4 ENTRIES               XX015900
         LA    R4,TBL4             POINTER TO PARAMETER SWITCHES        XX016000
LOOP     LA    R8,PARAM-4          POINTER TO VECTOR TABLE              XX016100
         SR    R0,R0               CLEAR REG 0                          XX016200
         LA    R1,PG+25            ADDRESS OF PARAMETER PRINT AREA      XX016300
         MVC   PG+15(70),PG+14     CLEAR PRINT AREA EXCEPT $$DITTO      XX016400
         MVC   PG+15(3),0(R2)      FUNCTION CODE TO PRINT AREA          XX016500
         IC    R0,0(R4)            INDEX VALUE FROM TBL4                XX016600
         LTR   R0,R0               IS IT ZERO?                          XX016700
         BZ    END                 YES, GO PRINT FUNCTION CODE ONLY     XX016800
GO       SLL   R0,2                NO, DOUBLE INDEX VALUE               XX016900
         AR    R8,R0               ADD TO VECTOR TABLE FOR ENTRY        XX017000
         BALR  R0,R8               BRANCH TO VECTOR TABLE (PARAM+)      XX017100
         SR    R0,R0               CLEAR REG 0                          XX017200
         LA    R8,PARAM-4          RESET POINTER TO VECTOR TABLE        XX017300
         LA    R4,1(R4)            BUMP TO NEXT INDEX VALUE             XX017400
         IC    R0,0(R4)            INDEX INTO REG 0                     XX017500
         LTR   R0,R0               IS IT ZERO?                          XX017600
         BNZ   GO                  NO, LOOP & ADD NEXT PARAMETER        XX017700
         BALR  R8,R9               YES, GO PRINT LINE                   XX017800
END      LA    R4,1(R4)            BUMP TO INDEX FOR NEXT FUNCTION      XX017900
         LA    R2,52(R2)           BUMP TO NEXT FUNCTION CODE           XX018000
         MVC   PG+11(70),PG+10     CLEAR PRINT AREA                     XX018100
         BCT   R3,LOOP             LOOP UNTIL ALL FUNCTIONS LISTED      XX018200
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX018300
         MVC   PG+1(20),PG         CLEAR $$DITTO                        XX018400
         BALR  R8,R9               DOUBLE SPACE                         XX018500
         MVC   TRK+1(9),=C'PARAMETERS'                                  XX018600
         MVC   PAR+8(11),=C'DESCRIPTION'                                XX018700
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX018800
         BALR  R8,R9               PRINT LOWER HALF PAGE HDGS.          XX018900
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX019000
         LA    R2,M2               POINTER TO PARAMETER TABLE           XX019100
         LA    R3,DESCN            POINTER TO DESCRIPTION TABLE         XX019200
         LA    R4,9                NUMBER OF PARAMETERS                 XX019300
PARMLP   MVC   TRK(14),0(R2)       PARAMETER TO PRINT AREA              XX019400
         LA    R2,15(R2)           BUMP TO NEXT PARAMETER               XX019500
         MVC   PAR(33),0(R3)       DESCN. TO PRINT AREA                 XX019600
         LA    R3,33(R3)           BUMP TO NEXT DESCN.                  XX019700
         BALR  R8,R9               PRINT PARAM & DESCN.                 XX019800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX019900
         BCT   R4,PARMLP           LOOP UNTIL DONE                      XX020000
         MVI   CC,W2                                                    XX020100
         BALR  R8,R9               DOUBLE SPACE                         XX020200
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX020300
         MVC   TRK(78),PARM1       'PARM NOTE' TO PRINT AREA            XX020400
         BALR  R8,R9               PRINT 1ST LINE PARM NOTE             XX020500
         MVC   TRK(78),DDNOTE      SUBMIT DD NOTE                       XX020600
         BALR  R8,R9               PRINT DD NOTE                        XX020700
         MVC   TRK(78),NOTE3       FILE PROTECT NOTE                    XX020800
         BALR  R8,R9               PRINT FILE PROTECT NOTE              XX020900
         MVC   TRK(78),NOTE4       TAPE MARK NOTE                       XX021000
         BALR  R8,R9               PRINT TAPEMARK NOTE                  XX021100
         MVC   TRK(78),NOTE4A      SET UP DCB NOTE                      XX021200
         BALR  R8,R9               PRINT IT                             XX021300
         MVC   TRK(78),CCCHH1      'CCCHH IS ...                        XX021400
         BALR  R8,R9               PRINT IT                             XX021500
         MVC   TRK(78),CCCHH2      'E.G. BEGIN= . . .                   XX021600
         BALR  R8,R9               PRINT IT                             XX021700
         MVC   TRK(78),CCCHH3      ABSOL. NOTE                          XX021800
         BALR  R8,R9               PRINT IT HERE AS NO ROOM ON CONSOL.  XX021900
         MVC   TRK(78),NBLKSNOT    'NBLKS NOTE' TO PRINT AREA-LINE 2    XX022000
         MVI   CC,WC1              SET TO PRINT & SKIP TO NEW PAGE      XX022100
         BALR  R8,R9               PRINT & SKIP TO NEW PAGE             XX022200
         EJECT                                                          XX022300
*********************************************************************** XX022400
**********        PAGE 3 - 'CONSOLE PROCEDURES'             *********** XX022500
*********************************************************************** XX022600
         SPACE 1                                                        XX022700
         MVI   PG,C' '                                                  XX022800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX022900
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX023000
         MVC   BL+7(19),=C'* * * * * * * * * *'                         XX023100
         MVC   BL+104(19),BL+7                                          XX023200
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '                          XX023300
         MVC   BL+68(10),PROCED                                         XX023400
         BALR  R8,R9               PRINT IT                             XX023500
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX023600
         MVC   BL+7(116),PROC1                                          XX023700
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX023800
         BALR  R8,R9               PRINT IT                             XX023900
         MVC   BL+7(116),PROC2                                          XX024000
         BALR  R8,R9               PRINT IT                             XX024100
         MVC   BL+7(116),PROC3                                          XX024200
         BALR  R8,R9               PRINT IT                             XX024300
         MVC   BL+7(116),PROC4                                          XX024400
         BALR  R8,R9               PRINT IT                             XX024500
         MVC   BL+7(116),PROC5                                          XX024600
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX024700
         BALR  R8,R9               PRINT IT                             XX024800
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX024900
         MVC   BL+7(9),PROCED                                           XX025000
         MVC   PG+5(18),SYMBOLPA                                        XX025100
         MVC   PG+58(12),FUNCMSG1                                       XX025200
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX025300
         BALR  R8,R9               PRINT IT                             XX025400
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX025500
         MVC   BL+7(4),NAME                                             XX025600
         MVC   PG+5(14),DEFVALU                                         XX025700
         MVC   PG+58(10),GDELINE                                        XX025800
         MVI   CC,W2               SPACE 2 AFTER PRINT                  XX025900
         BALR  R8,R9               PRINT IT                             XX026000
         LA    R2,DITPROC                                               XX026100
         LA    R3,DEFVAL                                                XX026200
         LA    R4,GDELIN                                                XX026300
         LA    R6,12               LOOP 12 TIMES                        XX026400
         MVC   BL+1(131),BL                                             XX026500
         MVI   CC,W1                                                    XX026600
         MVC   BL+8(5),=C'DITTO'                                        XX026700
MOVLOP1  EQU   *                                                        XX026800
         MVC   BL+13(3),0(R2)                                           XX026900
         MVC   PG+6(30),0(R3)                                           XX027000
         MVC   PG+59(33),0(R4)                                          XX027100
         LA    R2,3(R2)                                                 XX027200
         LA    R3,30(R3)                                                XX027300
         LA    R4,33(R4)                                                XX027400
         BALR  R8,R9               PRINT IT                             XX027500
         BCT   R6,MOVLOP1                                               XX027600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX027700
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX027800
         BALR  R8,R9               PRINT IT                             XX027900
         MVC   PG+5(11),=C'UNIT RECORD'                                 XX028000
         MVC   PG+17(19),SYMBOLPA                                       XX028100
         MVC   PG+58(13),=C'TAPE AND DISK'                              XX028200
         MVC   PG+72(19),SYMBOLPA                                       XX028300
         MVI   CC,W2               SPACE 2 AFTER PRINT                  XX028400
         BALR  R8,R9               PRINT IT                             XX028500
         LA    R2,UNTRCD                                                XX028600
         LA    R3,TPNDSK                                                XX028700
         LA    R4,6                                                     XX028800
         MVC   BL+1(131),BL                                             XX028900
         MVI   CC,W1                                                    XX029000
MOVLOP2  MVC   PG+6(30),0(R2)                                           XX029100
         MVC   PG+59(31),0(R3)                                          XX029200
         LA    R2,30(R2)                                                XX029300
         LA    R3,31(R3)                                                XX029400
         BALR  R8,R9               PRINT IT                             XX029500
         BCT   R4,MOVLOP2                                               XX029600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX029700
         MVI   CC,W3               SPACE 3 AFTER PRINT                  XX029800
         BALR  R8,R9               PRINT IT                             XX029900
         MVC   PG+5(84),SAMPSTRT                                        XX030000
         MVI   CC,W2                                                    XX030100
         BALR  R8,R9               PRINT                                XX030200
         MVC   BL+1(131),BL                                             XX030300
         MVC   PG+5(7),=C'COMMAND'                                      XX030400
         MVC   PG+58(11),=C'EXPLANATION'                                XX030500
         BALR  R8,R9               PRINT                                XX030600
         LA    R4,12                                                    XX030700
         LA    R2,SAMPCOMM                                              XX030800
         LA    R3,COMEXPL                                               XX030900
         MVC   BL+1(131),BL                                             XX031000
         MVI   CC,W1                                                    XX031100
MOVLOP3  MVC   PG+6(44),0(R2)                                           XX031200
         MVC   PG+59(41),0(R3)                                          XX031300
         LA    R2,44(R2)                                                XX031400
         LA    R3,41(R3)                                                XX031500
         BALR  R8,R9               PRINT                                XX031600
         BCT   R4,MOVLOP3                                               XX031700
         MVC   BL+1(131),BL                                             XX031800
         BALR  R8,R9               PRINT                                XX031900
         MVC   BL+8(121),CCINOTE                                        XX032000
         BALR  R8,R9               PRINT                                XX032100
         MVC   BL+8(121),TCTLNOTE                                       XX032200
         BALR  R8,R9               PRINT                                XX032300
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX032400
         MVC   BL+8(68),DSKNOTE                                         XX032500
         BALR  R8,R9               PRINT                                XX032600
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX032700
         MVC   BL+8(50),XXXNOTE                                         XX032800
         BALR  R8,R9               PRINT                                XX032900
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX033000
         MVI   CC,WC1              PRINT & SKIP TO 1                    XX033100
         BALR  R8,R9               PRINT IT                             XX033200
         EJECT                                                          XX033300
*********************************************************************** XX033400
**********        PAGE 4 - 'CONSOLE OPERATION'              *********** XX033500
*********************************************************************** XX033600
         SPACE 1                                                        XX033700
         MVI   PG,C' '                                                  XX033800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX033900
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE          XX034000
         MVC   BL+7(19),=C'* * * * * * * * * *'                         XX034100
         MVC   BL+104(19),BL+7                                          XX034200
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '                          XX034300
         MVC   BL+68(9),=C'OPERATION'                                   XX034400
         BALR  R8,R9               PRINT PAGE 2 HDG. - CONSOLE OPER..   XX034500
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX034600
         MVC   BL+7(115),OPERATOR  OPER. PRINT COMMENT LINE 1           XX034700
         MVI   CC,W1               SPACE 1 AFTER PRINT                  XX034800
         BALR  R8,R9               PRINT IT                             XX034900
         MVC   BL+7(116),OPERATOR+116   2ND LINE OF OPER. COMMENT       XX035000
         BALR  R8,R9               PRINT IT                             XX035100
         MVC   BL+7(116),TE7       SET UP WTOR NOTE                     XX035200
         MVI   CC,W2                                                    XX035300
         BALR  R8,R9               PRINT IT                             XX035400
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX035500
         LA    R2,TBL1+3           POINTER TO FUNCTION DESCNS.          XX035600
         LA    R3,NTBL1            # OF PRINT LINES                     XX035700
         LA    R4,STRING                                                XX035800
         MVI   CC,W1                                                    XX035900
         MVC   PG+62(22),REQUR                                          XX036000
         B     OPLOOP1                                                  XX036100
OPERLOOP MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX036200
         MVC   PG+54(52),PG+53         CLEAR PRINT AREA                 XX036300
         LA    R1,PG+54                                                 XX036400
SAVCORE  CLI   0(R4),C' '          END OF LITERAL ?                     XX036500
         BE    BUMPBL              YES                                  XX036600
         MVC   0(1,R1),0(R4)       MOVE DATA                            XX036700
         LA    R1,1(R1)            BUMP PRINT AREA                      XX036800
         LA    R4,1(R4)            BUMP PRINT LITERAL POINTER           XX036900
         B     SAVCORE                                                  XX037000
BUMPBL   LA    R4,1(R4)            BUMP PAST BLANK                      XX037100
OPLOOP1  MVC   PG+1(49),0(R2)      DESCNS. TO PRINT AREA                XX037200
         LA    R2,52(R2)           BUMP TO NEXT DESCN.                  XX037300
         BALR  R8,R9               PRINT LINE                           XX037400
         BCT   R3,OPERLOOP                                              XX037500
         MVC   PG+1(95),PG         CLEAR PRINT AREA                     XX037600
         BALR  R8,R9               SINGLE SPACE                         XX037700
         LA    R2,M6+1             ADDRESS OF NBLKS=N..N                XX037800
         LA    R3,DESCN1           ADDRESS OF NBLKS DESCN               XX037900
         LA    R4,7                    # OF PRINT LINES                 XX038000
         MVI   BL+66,C'*'                                               XX038100
OPLOOP   MVI   CC,W1               SET TO SINGLE SPACE                  XX038200
         MVC   BL+07(14),00(R2)    LEFT PARAMETER TO PRINT AREA         XX038300
         MVC   BL+27(33),00(R3)    LEFT DESCRIPTION TO PRINT AREA       XX038400
         MVC   BL+74(14),15(R2)    RIGHT PARAMETER TO PRINT AREA        XX038500
         MVC   BL+94(33),33(R3)    RIGHT DESCRIPTION TO PRINT AREA      XX038600
         LA    R2,30(R2)           BUMP PARAMETER POINTER               XX038700
         LA    R3,66(R3)           BUMP DESCRIPTION POINTER             XX038800
         BALR  R8,R9               PRINT IT                             XX038900
         BCT   R4,OPLOOP                                                XX039000
         MVC   BL+01(130),BL       CLEAR PRINT AREA                     XX039100
         MVI   CC,WC1              PRINT & SKIP TO 1                    XX039200
         BALR  R8,R9                                                    XX039300
         EJECT                                                          XX039400
*********************************************************************** XX039500
**********        PAGE 5 - 'TAPE DENSITY & MODE VALUES'     *********** XX039600
*********************************************************************** XX039700
         SPACE 1                                                        XX039800
         MVI   CC,W3               SET TO PRNT & TRIPLE SPACE           XX039900
         MVC   PG+22(38),TAPHDG    'TAPE DENSITY...' HDG.               XX040000
         MVC   PG+0(19),=C'* * * * * * * * * *'                         XX040100
         MVC   PG+62(19),PG                                             XX040200
         BALR  R8,R9               PRINT IT - LINE 1                    XX040300
         MVC   PG,HDG              COL. HDGS. - 'TRACK DENSITY...'      XX040400
         BALR  R8,R9               PRINT THE COLUMN HDGS.               XX040500
         MVI   CC,W1               SET TO PRNT & SINGLE SPACE           XX040600
         MVC   PG+1,PG             CLEAR PRNT AREA                      XX040700
         LA    R2,TBL2             POINTER TO PRINT LITERALS            XX040800
         LA    R3,NTBL2            NUMBER OF LITERALS                   XX040900
MOVTBL2  MVC   DEN,0(R2)           DENSITY VALUE TO PRINT AREA          XX041000
         MVC   PAR,3(R2)           PARITY VALUE TO PRINT AREA           XX041100
         MVC   TRN,7(R2)           TRANSLATE VALUE TO PRINT AREA        XX041200
         MVC   DCT,10(R2)          DATA CONVERT VALUE TO PRINT AREA     XX041300
         MVC   MMS,13(R2)          MODE VALUE TO PRINT AREA             XX041400
         MVC   TRK,15(R2)          TRACK VALUE TO PRINT AREA            XX041500
         BALR  R8,R9               PRINT THE VALUES                     XX041600
         LA    R2,16(R2)           BUMP TO NEXT LITERAL                 XX041700
         BCT   R3,MOVTBL2          LOOP & PRINT ALL 7 TRACK             XX041800
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX041900
         BALR  R8,R9               PRINT BLANK LINE                     XX042000
         MVI   TRK,C'9'            9 TO TRACK                           XX042100
         MVC   DEN-1(4),=C' 800'   800 TO DENSITY                       XX042200
         MVC   PAR(14),=C'SINGLE DENSITY'                               XX042300
         MVC   MMS,=C'C0'          MODE VALUE TO PRINT AREA             XX042400
         BALR  R8,R9               PRINT 9-800-SINGLE DENSITY           XX042500
         MVC   DEN-1(2),=C'16'     1600 TO DENSITY                      XX042600
         BALR  R8,R9               PRINT 9-1600-SINGLE DENSITY          XX042700
         MVC   DEN-1(3),=C'625'    6250 BPI                             XX042800
         MVI   MMS,C'D'            D0 MODE SET                          XX042900
         MVI   CC,W2               PRT & DOUBLE SPACE                   XX043000
         BALR  R8,R9               PRINT                                XX043100
         MVC   DEN-1(4),=C' 800'   800 TO DENSITY                       XX043200
         MVC   PAR(6),=C'DUAL  '   OVERLAY SINGLE WITH DUAL             XX043300
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE          XX043400
         MVC   MMS,=C'C8'              C8                               XX043500
         BALR  R8,R9               PRINT 9-800-DUAL DENSITY             XX043600
         MVC   DEN-1(2),=C'16'     1600 TO DENSITY                      XX043700
         MVI   MMS+1,C'0'          MODE TO C0                           XX043800
         BALR  R8,R9               PRINT 9-1600-DUAL DENSITY            XX043900
         MVC   DEN-1(3),=C'625'    6250 BPI                             XX044000
         MVI   MMS,C'D'            D0                                   XX044100
         MVI   CC,W3               PRT & TRIPLE SPACE                   XX044200
         BALR  R8,R9               PRINT                                XX044300
         MVC   PG+1,PG             CLEAR PRINT AREA                     XX044400
         MVC   TRK(63),DEFAULT     'NOTE. MM...' TO PRINT AREA          XX044500
         BALR  R8,R9               PRINT NOTE & TRIPLE SPACE            XX044600
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE          XX044700
         MVC   PG(80),TE1          TAPE ERROR COMMENT LINE 1            XX044800
         BALR  R8,R9               PRINT IT                             XX044900
         MVC   PG(80),TE2          TAPE ERROR COMMENT LINE 2            XX045000
         BALR  R8,R9               PRINT IT                             XX045100
         MVC   PG(80),TE3          TAPE ERROR COMMENT LINE 3            XX045200
         BALR  R8,R9               PRINT IT                             XX045300
         MVC   PG(80),TE4          TAPE ERROR COMMENT LINE 4            XX045400
         BALR  R8,R9               PRINT IT                             XX045500
         MVC   PG(80),TE5          TAPE ERROR COMMENT LINE 5            XX045600
         BALR  R8,R9               PRINT IT                             XX045700
         MVC   BL+1(131),BL        CLEAR PRINT AREA                     XX045800
         MVC   PG(28),TE6          TAPE ERROR COMMENT - LINE 6          XX045900
         BALR  R8,R9               PRINT IT                             XX046000
*        FALL  THROUGH                                                  XX046100
         EJECT                                                          XX046200
*********************************************************************** XX046300
*******************          RETURN MECHANISM      ******************** XX046400
*********************************************************************** XX046500
         SPACE 1                                                        XX046600
RETNORM  EQU   *                                                        XX046700
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           XX046800
         B     RETURN                                                   XX046900
RETIRPT  EQU   *                                                        XX047000
         LA    RF,4                     RC = 4                          XX047100
         B     RETURN                                                   XX047200
TELUSER2 EQU   *                                                        XX047300
         LA    RF,8                     RC = 8                          XX047400
RETURN   EQU   *                                                        XX047500
         L     RD,4(RD)                PRIME RD                         XX047600
         RETURN (14,12),RC=(15)                                         XX047700
         EJECT                                                          XX047800
*********************************************************************** XX047900
*******************          VECTOR TABLE        ********************** XX048000
*********************************************************************** XX048100
         SPACE 1                                                        XX048200
         DS    0F                                                       XX048300
PARAM    B     X1                  VECTOR TABLE                         XX048400
         B     X2                  ENTRY INTO THIS TABLE                XX048500
         B     X3                  IS BASED ON AN INDEX                 XX048600
         B     X4                  VALUE OBTAINED FROM                  XX048700
         B     X5                  TBL4.                                XX048800
         B     X6                  EXIT IS TO A SPECIFIC                XX048900
         B     X7                  MOVE STATEMENT FOR                   XX049000
         B     X8                  THE REQUIRED PARAMETER               XX049100
         B     X9                                                       XX049200
         B     XA                                                       XX049300
         B     XB                                                       XX049400
         B     XC                                                       XX049500
X1       LR    R8,R0               NO PARAMETER REQUIRED                XX049600
         BR    R8                  RETURN                               XX049700
X2       MVC   0(12,R1),M2         'INPUT = SYSNNN' TO PRINT AREA       XX049800
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX049900
         B     X1                  RETURN                               XX050000
X3       MVC   0(14,R1),M3         'OUTPUT = ...' TO PRINT AREA         XX050100
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX050200
         B     X1                  RETURN                               XX050300
X4       MVC   0(12,R1),M4         'BEGIN...' TO PRINT AREA             XX050400
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX050500
         B     X1                  RETURN                               XX050600
X5       MVC   0(10,R1),M5         'END=...' TO PRINT AREA              XX050700
         LA    R1,10(R1)           BUMP PRINT AREA POINTER              XX050800
         B     X1                  RETURN                               XX050900
X6       MVC   0(11,R1),M6         'NBLKS=...' TO PRINT AREA            XX051000
         LA    R1,11(R1)           BUMP PRINT AREA POINTER              XX051100
         B     X1                  RETURN                               XX051200
X7       MVC   0(14,R1),M7         'RECSIZE=..#' TO PRINT AREA          XX051300
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX051400
         B     X1                  RETURN                               XX051500
X8       MVC   0(14,R1),M8         'BLKFACTOR...' TO PRINT AREA         XX051600
         LA    R1,14(R1)           BUMP PRINT AREA POINTER              XX051700
         B     X1                  RETURN                               XX051800
X9       MVC   0(12,R1),M9+1       'DECKTYPE=...' TO PRINT AREA         XX051900
         LA    R1,12(R1)           BUMP PRINT AREA POINTER              XX052000
         B     X1                  RETURN                               XX052100
XA       MVC   0(15,R1),MA         'DECKNAME=...' TO PRINT AREA         XX052200
         LA    R1,15(R1)           BUMP PRINT AREA POINTER              XX052300
         B     X1                  RETURN                               XX052400
XB       MVC   0(13,R1),MB         'OUTPUT...' TO PRINT AREA            XX052500
         LA    R1,13(R1)           BUMP PRINT AREA POINTER              XX052600
         B     X1                  RETURN                               XX052700
XC       MVC   0(13,R1),M9         ',DECKTYPE=...' TO PRINT AREA        XX052800
         LA    R1,13(R1)           BUMP PRINT AREA POINTER              XX052900
         B     X1                  RETURN                               XX053000
         EJECT                                                          XX053100
*********************************************************************** XX053200
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** XX053300
*********************************************************************** XX053400
PRNT     EQU   *                                                        XX053500
         LA    R1,PARM                 MSICCW                           XX053600
         CALL  PRNTSUB                                                  XX053700
         B     PRNTRET(RF)                                              XX053800
PRNTRET  B     PRNTEXIT                RC = 0                           XX053900
         B     RETIRPT                 RC = 4                           XX054000
         B     TELUSER2                RC = 8                           XX054100
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       XX054200
         BNE   0(R8)                   NO                               XX054300
         MVI   OVFLOSW,X'00'           RESET                            XX054400
         MVI   CC,X'11'                DOUBLE SPACING                   XX054500
         BR    R8                      RETURN                           XX054600
OVFLO    EQU   *                                                        XX054700
         MVI   CC,X'8B'                SKIP TO CH 1                     XX054800
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              XX054900
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         XX055000
         B     PRNT                                                     XX055100
         EJECT                                                          XX055200
*********************************************************************** XX055300
*******************          STORAGE AND EQUATES   ******************** XX055400
*********************************************************************** XX055500
         SPACE 1                                                        XX055600
         DS    0F                                                       XX055700
SAVEAREA DS    18F                                                      XX055800
PARM     DS    F                                                        XX055900
BUMP     DC    H'4096'             BASE REGISTER BUMP                   XX056000
         EJECT                                                          XX056100
*********************************************************************** XX056200
**********             THIS TABLE DETERMINES THE LINE       *********** XX056300
**********          SEQUENCE AND PARAMETERS FOR THE         *********** XX056400
**********          FUNCTION CONTROL CARD PAGE.             *********** XX056500
**********             PARAMETERS ARE ASSEMBLED IN A        *********** XX056600
**********          STRING FORMAT IN THE PRINT AREA. THE    *********** XX056700
**********          HEX VALUES 02 THRU 0B CORRESPOND TO     *********** XX056800
**********          PARAMETERS LABELED M2 THRU MB.          *********** XX056900
*********************************************************************** XX057000
         SPACE 1                                                        XX057100
TBL4     DC    X'00'     BYPASS FIRST ELEMENT IN TBL1                   XX057200
         DC    X'0100'     CC                                           XX057300
         DC    X'090A00'   CCS                                          XX057400
         DC    X'0100'     CP                                           XX057500
         DC    X'0100'     CH                                           XX057600
         DC    X'0B0800'   CT                                           XX057700
         DC    X'0B080C0A00' CTS                                        XX057800
         DC    X'00'               BYPASS CCL                           XX057900
         DC    X'00'       BYPASS PAGE 1 SPACE                          XX058000
         DC    X'00'       BYPASS *** TAPE FUNCTION COMMENT             XX058100
         DC    X'0200'     TC                                           XX058200
         DC    X'020600'   TP                                           XX058300
         DC    X'02070600' TPR                                          XX058400
         DC    X'020600'   TH                                           XX058500
         DC    X'02070600' THR                                          XX058600
         DC    X'020600'   TPV                                          XX058700
         DC    X'020600'   TDV                                          XX058800
         DC    X'00'       BYPASS TRS                                   XX058900
         DC    X'00'       BYPASS TRL                                   XX059000
         DC    X'00'       BYPASS INT                                   XX059100
         DC    X'02030600' TT (WITH OPTIONAL NBLKS)                     XX059200
         DC    X'0203070800' TTR                                        XX059300
         DC    X'0B00'     WTM                                          XX059400
         DC    X'0B00'     REW                                          XX059500
         DC    X'0B00'     RUN                                          XX059600
         DC    X'0B0600'   FSR                                          XX059700
         DC    X'0B0600'   BSR                                          XX059800
         DC    X'0B00'     FSF                                          XX059900
         DC    X'0B00'     BSF                                          XX060000
         DC    X'00'       BYPASS ERT                                   XX060100
         DC    X'00'       BYPASS SPACE LINE                            XX060200
         DC    X'00'       BYPASS *** DISK FUNCTION COMMENT             XX060300
         DC    X'00'               BYPASS DSE                           XX060400
         DC    X'02040500'         DP                                   XX060500
         DC    X'02040500'         DD                                   XX060600
         DC    X'0204050700'       DPD                                  XX060700
         DC    X'0204050700'       DDD                                  XX060800
         DC    X'00'       BYPASS DRL                                   XX060900
         DC    X'00'       BYPASS DRS                                   XX061000
         DC    X'00'       BYPASS EOF                                   XX061100
         DC    X'00'       BYPASS DID                                   XX061200
         DC    X'00'       BYPASS SPACE LINE                            XX061300
         DC    X'0100'     XXX                                          XX061400
         DC    X'0100'     EOJ                                          XX061500
         EJECT                                                          XX061600
*********************************************************************** XX061700
**********                     CONSTANTS                    *********** XX061800
*********************************************************************** XX061900
         SPACE 1                                                        XX062000
TBL1     DC    C'               CARD FUNCTIONS                       '  XX062100
         DC    C'CC CARD TO CARD                                     '  XX062200
         DC    C'CCSCARD TO CARD WITH SEQ. NUMBERS AND DECK NAME     '  XX062300
         DC    C'CP CARD TO PRINTER IN CHARACTER FORMAT              '  XX062400
         DC    C'CD CARD TO PRINTER IN CHARACTER AND HEX DUMP FORMAT '  XX062500
         DC    C'CT CARD TO TAPE BLOCKED 1 TO 400                    '  XX062600
         DC    C'CTSCARD TO TAPE RESEQUENCED                         '  XX062700
         DC    C'CCLCANCEL CARD INPUT (FLUSH TO EOF)                 '  XX062800
         DC    C'                                                    '  XX062900
         DC    C'               TAPE FUNCTIONS                       '  XX063000
         DC    C'TC TAPE TO CARD BLOCKED OR UNBLOCKED                '  XX063100
         DC    C'TP TAPE TO PRINTER UNBLOCKED IN CHAR. FORMAT        '  XX063200
         DC    C'TPDTAPE TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  XX063300
         DC    C'TD TAPE TO PRINTER UNBLOCKED IN CHAR. AND HEX DUMP  '  XX063400
         DC    C'TDDTAPE TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  XX063500
         DC    C'TPVTAPE TO PRINTER VARIABLE RECDS CHAR. FORMAT      '  XX063600
         DC    C'TDVTAPE TO PRINTER VARIABLE RECDS CHAR. AND HEX DUMP'  XX063700
         DC    C'TRSTAPE RECORD SCAN                                 '  XX063800
         DC    C'TRLTAPE RECORD LOAD                                 '  XX063900
         DC    C'INTINITIALIZE TAPE                                  '  XX064000
         DC    C'TT TAPE TO TAPE  (01 TO 99) FILES                   '  XX064100
         DC    C'TTRTAPE TO TAPE REBLOCKED                           '  XX064200
         DC    C'WTMWRITE TAPE MARK                                  '  XX064300
         DC    C'REWREWIND TAPE                                      '  XX064400
         DC    C'RUNREWIND AND UNLOAD TAPE                           '  XX064500
         DC    C'FSRFORWARD SPACE RECORD                             '  XX064600
         DC    C'BSRBACK SPACE RECORD                                '  XX064700
         DC    C'FSFFORWARD SPACE FILE                               '  XX064800
         DC    C'BSFBACK SPACE FILE                                  '  XX064900
         DC    C'ERTERASE TAPE  (DATA SECURITY ERASE - 3420 ONLY)    '  XX065000
         DC    C'                                                    '  XX065100
         DC    C'               DISK FUNCTIONS                       '  XX065200
         DC    C'DSEDISPLAY DATA SET EXTENT ON CONSOLE, USE FOR CCCHH'  XX065300
         DC    C'DP DISK TO PRINTER UNBLOCKED IN CHAR. FORMAT        '  XX065400
         DC    C'DD DISK TO PRINTER UNBLOCKED IN CHAR. AND HEX DUMP  '  XX065500
         DC    C'DPDDISK TO PRINTER DEBLOCKED IN CHAR. FORMAT        '  XX065600
         DC    C'DDDDISK TO PRINTER DEBLOCKED IN CHAR. AND HEX DUMP  '  XX065700
         DC    C'DRLDISK RECORD LOAD - KEY AND/OR DATA               '  XX065800
         DC    C'DRSDISK RECORD SCAN - PARTIAL KEY OR DATA OR EOF    '  XX065900
         DC    C'EOFWRITE DISK EOF RECORD                            '  XX066000
         DC    C'DIDALTER DISK IDENTIFICATION VOLUME LABEL (OFFLINE) '  XX066100
         DC    C'                                                    '  XX066200
         DC    C'XXXLIST FUNCTIONS ON SYSPRINT                       '  XX066300
         DC    C'EOJEND OF JOB                                       '  XX066400
COMNT1   DC    C'CONTROL CARD OPERATION - /*'                           XX066500
         DC    C' IS SYSIN EOF FOR CONTROL '                            XX066600
         DC    C'CARDS '                                                XX066700
         DC    X'50'                   &                                XX066800
         DC    C' DATA.'                                                XX066900
COMNT1AA DC    C'                           '                           XX067000
         DC    C' IF /* IN DATA, //SYSIN DD DATA,DLM=AA.'               XX067100
COMNT1A  DC    C'                         /+'                           XX067200
         DC    C' IS OS/DITTO EOF FOR DATA CARD INPUT.  '               XX067300
COMNT2   DC    C'CONSOLE OPERATION - READER EOF KEY'                    XX067400
         DC    C' IS END OF FILE FOR CARD INPUT.  '                     XX067500
COMNT2A  DC    C'FOR SPLIT CYLINDER DISK FUNCTIONS:'                    XX067600
         DC    C' USE SP, SD, SPD, SDD, AND SRS.  '                     XX067700
COMNT3   DC    C'PUNCHED OUTPUT MAY BE INTERPRETE'                      XX067800
         DC    C'D BY USING //SYSPUNCH DD UNIT=00D,'                    XX067900
COMNT4   DC    C'DCB=(BLKSIZE=81,RECFM=FM,FUNC=I) -'                    XX068000
         DC    C' 3525 PRINT FEATURE REQUIRED.   '                      XX068100
TBL2     DC    C'200ODD OFFON 107'                                      XX068200
         DC    C'200EVENOFFOFF207'                                      XX068300
         DC    C'200EVENON OFF287'                                      XX068400
         DC    C'200ODD OFFOFF307'                                      XX068500
         DC    C'200ODD ON OFF387'                                      XX068600
         DC    C'                '                                      XX068700
         DC    C'556ODD OFFON 507'                                      XX068800
         DC    C'556EVENOFFOFF607'                                      XX068900
         DC    C'556EVENON OFF687'                                      XX069000
         DC    C'556ODD OFFOFF707'                                      XX069100
         DC    C'556ODD ON OFF787'                                      XX069200
         DC    C'                '                                      XX069300
         DC    C'800ODD OFFON 907'                                      XX069400
         DC    C'800EVENOFFOFFA07'                                      XX069500
         DC    C'800EVENON OFFA87'                                      XX069600
         DC    C'800ODD OFFOFFB07'                                      XX069700
         DC    C'800ODD ON OFFB87'                                      XX069800
DESCN    DC    C'MUST BE TAPEIN,DISKIN, OR TAPEOUT'                     XX069900
         DC    C'MUST BE TAPEOUT OR TAPEIN        '                     XX070000
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET'                     XX070100
         DC    C'CCCHH REL. TO 1ST TRK OF DATA SET'                     XX070200
DESCN1   DC    C'NUMBER OF TAPE BLOCKS     1-9999 '                     XX070300
         DC    C'LOGICAL RECORD SIZE      1-99999 '                     XX070400
         DC    C'DECKTYPE (BAL, RPG, COB)         '                     XX070500
         DC    C'DECKNAME (0-3, 0-5, 0-8) CHAR.   '                     XX070600
         DC    C'OUTPUT BLOCKING FACTOR     1-999 '                     XX070700
         DC    C'LENGTH OF SCAN ARGUMENT (1-35)   '                     XX070800
         DC    C'COPY FORWARD OR BACK    (F OR B) '                     XX070900
         DC    C'NEW VOLUME SERIAL NUMBER  LNTH=6 '                     XX071000
         DC    C'NUMBER OF FILES         (1-99)   '                     XX071100
         DC    C'SCAN FOR (K=KEY, D=DATA, E=EOF)  '                     XX071200
         DC    C'OPTIONAL - (LIMITS PRINTING)     '                     XX071300
         DC    C'TRS VARIABLE LENGTH RECORDS ONLY '                     XX071400
         DC    C'SCAN STARTING POSITION IN RECORD '                     XX071500
         DC    C'                                 '     UNUSED          XX071600
M2       DC    C'INPUT=DDNAME  '                                        XX071700
M3       DC    C',OUTPUT=DDNAME '                                       XX071800
M4       DC    C',BEGIN=CCCHH   '                                       XX071900
M5       DC    C',END=CCCHH     '                                       XX072000
M6       DC    C',NBLKS=N..N    '                                       XX072100
M7       DC    C',RECSIZE=N...N '                                       XX072200
M9       DC    C',DECKTYPE=XXX  '                                       XX072300
MA       DC    C',DECKNAME=X...X'                                       XX072400
M8       DC    C',BLKFACTOR=N.N '                                       XX072500
         DC    C',SCANLNTH=NN   '                                       XX072600
         DC    C',COPYD=X       '                                       XX072700
         DC    C',VOLSER=NNNNNN '                                       XX072800
         DC    C',NFILES=NN     '                                       XX072900
         DC    C',SCANTYPE=X    '                                       XX073000
         DC    C',NRECS=N..N    '                                       XX073100
         DC    C',RECSIZE=V     '                                       XX073200
         DC    C',SCANPOS=N...N '                                       XX073300
         DC    C'               '      UNUSED                           XX073400
MB       EQU   M3+1                                                     XX073500
NTBL1    EQU   44                  # OF ELEMENTS IN TBL1                XX073600
NTBL2    EQU   17                                                       XX073700
NTBL3    EQU   NTBL1                                                    XX073800
W1       EQU   09                                                       XX073900
W2       EQU   17                                                       XX074000
W3       EQU   25                                                       XX074100
WC1      EQU   137                                                      XX074200
W        EQU   80                                                       XX074300
DEFAULT  DC    C'NOTE.  MM PORTION OF CUUMM IS OPTIONAL - '             XX074400
         DC    C'VALUE IS C0 IF OMITTED'                                XX074500
CNTRLHD  DC    C'FUNCTION CONTROL CARD FORMAT'                          XX074600
PARM1    DC    C'NOTE. SUBMIT (PARM=''JOBSTREAM'') ON EXEC CARD '       XX074700
         DC    C'TO DENOTE CONTROL CARD OPERATION.'                     XX074800
DDNOTE   DC    C'      SUBMIT TAPEIN, TAPEOUT, '                        XX074900
         DC    X'50'                   &                                XX075000
         DC    C' DISKIN DD CARDS IF USED IN INPUT= OR OUTPUT=. '       XX075100
NOTE3    DC    C'      TAPEOUT IS OPENED AS OUTPUT; THEREFORE, A FILE ' XX075200
         DC    C'PROTECT RING IS REQUIRED.'                             XX075300
NOTE4    DC    C'      TWO TAPE MARKS ARE WRITTEN ON TAPEOUT BY A CLOS' XX075400
         DC    C'E IN FUNCTIONS RUN '                                   XX075500
         DC    X'50'                   &                                XX075600
         DC    C' EOJ.'                                                 XX075700
NOTE4A   DC    C'      DCB=(DEN=X,TRTCH=XX) MAY BE SPECIFIED ON TAPEIN' XX075800
         DC    C' AND TAPEOUT DD CARDS.   '                             XX075900
CCCHH1   DC    C'      CCCHH IS RELATIVE TO FIRST CCCHH OF DATA SET EX' XX076000
         DC    C'TENT; E.G. BEGIN=00000,  '                             XX076100
CCCHH2   DC    C'            END=00418 WILL ACCESS ENTIRE 3330 FIVE CY' XX076200
         DC    C'LINDER 3330 DATA SET.    '                             XX076300
NBLKSNOT DC    C'      NBLKS=N..N PARAMETER IS OPTIONAL. LAST PARAMETE' XX076400
         DC    C'R MUST BE EOJ.           '                             XX076500
CCCHH3   DC    C'      FROM CONSOLE CCCHH IS ABSOLUTE. OPERATOR MUST U' XX076600
         DC    C'SE DSE FOR VALID CCCHH.  '                             XX076700
TAPHDG   DC    C'CONSOLE TAPE DENSITY '                                 XX076800
         DC    X'50'                                                    XX076900
         DC    C' MODE VALUES  MM'                                      XX077000
HDG      DC    C'     '                                                 XX077100
         DC    C'TRACK'                                                 XX077200
         DC    C'      '                                                XX077300
         DC    C'DENSITY'                                               XX077400
         DC    C'      '                                                XX077500
         DC    C'PARITY'                                                XX077600
         DC    C'      '                                                XX077700
         DC    C'TRANSLATE'                                             XX077800
         DC    C'      '                                                XX077900
         DC    C'DATA CONVERT'                                          XX078000
         DC    C'      '                                                XX078100
         DC    C'MM'                                                    XX078200
         DC    C'      '                                                XX078300
TE1      DC    C'A USER INPUT TAPE ERROR CORRECTION ROUTI'              XX078400
         DC    C'NE IS AVAILABLE UNDER CONSOLE OPERATION.'              XX078500
TE2      DC    C'CONTROL WILL BE PASSED TO THE ROUTINE FO'              XX078600
         DC    C'R ALL INPUT TAPE DITTO FUNCTIONS IF  OS '              XX078700
TE3      DC    C'ERROR RECOVERY IS UNSUCCESSFUL.  THE CON'              XX078800
         DC    C'SOLE OPERATOR MAY EITHER IGNORE THE     '              XX078900
TE4      DC    C'ERROR (ACCEPTING THE RECORD AS READ), BY'              XX079000
         DC    C'PASS (DROP) THE ERROR RECORD, OR PERFORM'              XX079100
TE5      DC    C'CONSOLE ALTERATION TO THE RECORD LENGTH '              XX079200
         DC    C'AND/OR DATA, BEFORE RETURNING CONTROL TO'              XX079300
TE6      DC    C'THE ORIGINAL DITTO FUNCTION.'                          XX079400
TE7      DC    C'A FUNCTION MAY BE ENDED BY REPLYING ''U'' TO THE FIRS' XX079500
         DC    C'T WTOR MESSAGE. A REPLY OF ''EOJ'' WILL END THE FUNCT' XX079600
         DC    C'ION AND DITTO.'                                        XX079700
WHO      DC    C'L. S. BRAMMER       IBM CORPORATION  1973'             XX079800
OPERATOR DC    C'TO MINIMIZE CONSOLE MESSAGES, YOU MAY ENTER'  LINE 1A  XX079900
         DC    C' WITH THE FUNCTION ALL OR PART OF THE  '               XX080000
         DC    C'REQUIRED PARAMETERS.  A PARAMETER ERROR '  LINE 2A     XX080100
         DC    C'WILL CAUSE DITTO TO REVERT TO THE '                    XX080200
         DC    C'TUTORIAL ROUTINES AND REQUEST REMAINING '  LINE 3A     XX080300
         DC    C'PARAMETERS IN A SINGLE REQUEST MODE.    '  LINE 3B     XX080400
REQUR    DC    C'PARAMETER REQUIREMENTS'                                XX080500
STRING   DC    C'CC '                                                   XX080600
         DC    C'CCS,DECKTYPE,DECKNAME '                                XX080700
         DC    C'CP '                                                   XX080800
         DC    C'CD '                                                   XX080900
         DC    C'CT,CUUMM,BLKFACTOR '                                   XX081000
         DC    C'CTS,CUUMM,BLKFACTOR,DECKTYPE,DECKNAME '                XX081100
         DC    C'CCL '                                                  XX081200
         DC    C' '                                                     XX081300
         DC    C' '                                                     XX081400
         DC    C'TC,CUUMM '                                             XX081500
         DC    C'TP,CUUMM,NRECS '                                       XX081600
         DC    C'TPD,CUUMM,RECSIZE,NRECS '                              XX081700
         DC    C'TD,CUUMM,NRECS '                                       XX081800
         DC    C'TDD,CUUMM,RECSIZE,NRECS '                              XX081900
         DC    C'TPV,CUUMM,NRECS '                                      XX082000
         DC    C'TDV,CUUMM,NRECS '                                      XX082100
         DC    C'TRS,CUUMM,RECSIZE,SCANLNTH,SCANPOS '                   XX082200
         DC    C'TRL,CUUMM,CUUMM,NBLKS,COPYD '                          XX082300
         DC    C'INT,CUUMM,VOLSER '                                     XX082400
         DC    C'TT,CUUMM,CUUMM,NFILES '                                XX082500
         DC    C'TTR,CUUMM,CUUMM,RECSIZE,BLKFACTOR '                    XX082600
         DC    C'WTM,CUUMM '                                            XX082700
         DC    C'REW,CUUMM '                                            XX082800
         DC    C'RUN,CUUMM '                                            XX082900
         DC    C'FSR,CUUMM,NBLKS '                                      XX083000
         DC    C'BSR,CUUMM,NBLKS '                                      XX083100
         DC    C'FSF,CUUMM,NFILES '                                     XX083200
         DC    C'BSF,CUUMM,NFILES '                                     XX083300
         DC    C'ERT,CUUMM '                                            XX083400
         DC    C' '                                                     XX083500
         DC    C' '                                                     XX083600
         DC    C'DSE '                                                  XX083700
         DC    C'DP,CCCHH,CCCHH '                                       XX083800
         DC    C'DD,CCCHH,CCCHH '                                       XX083900
         DC    C'DPD,CCCHH,CCCHH,RECSIZE '                              XX084000
         DC    C'DDD,CCCHH,CCCHH,RECSIZE '                              XX084100
         DC    C'DRL,CCC-HH-RRR '                                       XX084200
         DC    C'DRS,CCCHH,CCCHH,SCANTYPE,RECSIZE,SCANLNTH '            XX084300
         DC    C'EOF,CCC-HH-RRR '                                       XX084400
         DC    C'DID '                                                  XX084500
         DC    C' '                                                     XX084600
         DC    C'XXX '                                                  XX084700
         DC    C'EOJ '                                                  XX084800
DITPROC  DC    C'CC '                                                   XX084900
         DC    C'CCI'                                                   XX085000
         DC    C'CP '                                                   XX085100
         DC    C'CT '                                                   XX085200
         DC    C'TC '                                                   XX085300
         DC    C'TCI'                                                   XX085400
         DC    C'TP '                                                   XX085500
         DC    C'TT '                                                   XX085600
         DC    C'TRL'                                                   XX085700
         DC    C'TRS'                                                   XX085800
         DC    C'DP '                                                   XX085900
         DC    C'DID'                                                   XX086000
DEFVAL   DC    C'RDR=00C,PUN=00D,CLS=          '                        XX086100
         DC    C'RDR=00C,PUN=00D               '                        XX086200
         DC    C'RDR=00C,PRT=,CLS=A            '                        XX086300
         DC    C'RDR=00C,OUT=TAPE              '                        XX086400
         DC    C'IN=TAPE,PUN=00D,CLS=          '                        XX086500
         DC    C'IN=TAPE,PUN=00D               '                        XX086600
         DC    C'IN=TAPE,PRT=,CLS=A            '                        XX086700
         DC    C'IN=TAPE,OUT=TAPE              '                        XX086800
         DC    C'IN=TAPE,OUT=TAPE,PRT=00E,CLS= '                        XX086900
         DC    C'IN=TAPE,PRT=00E,CLS=          '                        XX087000
         DC    C'IN=SYSDA,DSNM=,SER=,PRT=,CLS=A'                        XX087100
         DC    C'NONE                          '                        XX087200
GDELIN   DC    C'CC,CCS,CP,CD,CCL                 '                     XX087300
         DC    C'CC,CCS,CP,CD,CCL                 '                     XX087400
         DC    C'CP,CD,CCL                        '                     XX087500
         DC    C'CT,CTS,CCL                       '                     XX087600
         DC    C'TC,TP,TPD,TD,TDD                 '                     XX087700
         DC    C'TC,TP,TPD,TD,TDD                 '                     XX087800
         DC    C'TP,TPD,TD,TDD,TPV,TDV,TRS,INT,ERT'                     XX087900
         DC    C'TT,TTR                           '                     XX088000
         DC    C'TRL                              '                     XX088100
         DC    C'TRS                              '                     XX088200
         DC    C'DSE,DP,DD,DPD,DDD,DRL,DRS,SRS,EOF'                     XX088300
         DC    C'DID,XXX                          '                     XX088400
UNTRCD   DC    C'RDR=CUU   SELECT SYSIN UNIT   '                        XX088500
         DC    C'PUN=CUU   SELECT SYSPUNCH UNIT'                        XX088600
         DC    C'CLS=      SYSOUT CLASS=NULL   '                        XX088700
         DC    C'CLS=A     SYSOUT CLASS=A OR B '                        XX088800
         DC    C'PRT=      SYSPRINT UNIT=NULL  '                        XX088900
         DC    C'PRT=CUU   SELECT SYSPRINT UNIT'                        XX089000
TPNDSK   DC    C'IN=CUU    SELECT TAPEIN UNIT   '                       XX089100
         DC    C'IN=CUU    SELECT DISKIN UNIT   '                       XX089200
         DC    C'OUT=CUU   SELECT TAPEOUT UNIT  '                       XX089300
         DC    C'DSNM=     SPECIFY DISKIN DSN   '                       XX089400
         DC    C'SER=      PROVIDE DISKIN VOLUME'                       XX089500
         DC    C'          SERIAL NUMBER        '                       XX089600
PROC1    DC    C'TO INITIATE OS/DITTO FROM THE CONSOLE ENTER A START C' XX089700
         DC    C'OMMAND OF THE FORM; ''S DITTO---.PN''. REPLACE --- WI' XX089800
         DC    C'TH OS/DITTO '                                          XX089900
PROC2    DC    C'PROCEDURE NAME SUFFIX; E.G. S DITTOTP.P2 WILL ALLOCAT' XX090000
         DC    C'E ONE TAPE DRIVE AND SYSPRINT. THIS ALLOCATION WILL '  XX090100
         DC    C'SUPPORT    '                                           XX090200
PROC3    DC    C'DITTO FUNCTION TP AND ALL OTHER FUNCTIONS THAT REQUIR' XX090300
         DC    C'E NO MORE THAN ONE TAPE DRIVE AND SYSPRINT. TO SELECT' XX090400
         DC    C' INPUT     '                                           XX090500
PROC4    DC    C'TAPE DRIVE AND PRINT ONLINE, ENTER OPTIONAL SYMBOLIC ' XX090600
         DC    C'PARAMETERS; E.G. S DITTOTP.P2,IN=281,PRT=00E,CLS= . U' XX090700
         DC    C'SE THE     '                                           XX090800
PROC5    DC    C'FOLLOWING PROCEDURE NAME, SYMBOLIC PARAMETER, AND FUN' XX090900
         DC    C'CTION USE GUIDELINES TO CHOOSE CORRECT PROCEDURE AND ' XX091000
         DC    C'FUNCTION. '                                            XX091100
PROCED   DC    C'PROCEDURES'                                            XX091200
SYMBOLPA DC    C'SYMBOLIC PARAMETERS'                                   XX091300
FUNCMSG1 DC    C'FUNCTION USE'                                          XX091400
NAME     DC    C'NAME'                                                  XX091500
DEFVALU  DC    C'DEFAULT VALUES'                                        XX091600
GDELINE  DC    C'GUIDELINES'                                            XX091700
SAMPSTRT DC    C'SAMPLE START COMMANDS USING OPTIONAL SYMBOLIC PARAMET' XX091800
         DC    C'ERS TO OVERRIDE DEFAULT VALUES.'                       XX091900
SAMPCOMM DC    C'S DITTOCC.P0,RDR=00A,PUN=,CLS=B             '          XX092000
         DC    C'S DITTOCCI.P1,RDR=00A                       '          XX092100
         DC    C'S DITTOCP.P2,PRT=00F,CLS=                   '          XX092200
         DC    C'S DITTOCT.P3,OUT=TAPE7                      '          XX092300
         DC    C'S DITTOTC.P4,IN=285,PUN=,CLS=B              '          XX092400
         DC    C'S DITTOTCI.P5,PUN=00B                       '          XX092500
         DC    C'S DITTOTP.P6,IN=287,PRT=00F,CLS=            '          XX092600
         DC    C'S DITTOTT.P7,IN=284,OUT=281                 '          XX092700
         DC    C'S DITTOTRL.P8,PRT=,CLS=A                    '          XX092800
         DC    C'S DITTOTRS.P9,IN=270,PRT=,CLS=A             '          XX092900
         DC    C'S DITTODP.P10,IN=151,DSNM=DATASET,SER=333001'          XX093000
         DC    C'S DITTODSN.P11,QUAL=SYS1,DSNM=DUMP          '          XX093100
COMEXPL  DC    C'SYSIN ON 00A, SYSPUNCH TO SYSOUT=B       '             XX093200
         DC    C'SYSIN ON 00A                             '             XX093300
         DC    C'SYSPRINT ON 00F                          '             XX093400
         DC    C'TAPEOUT ON 7-TRACK  (NEED UNITNAME=TAPE7)'             XX093500
         DC    C'TAPEIN ON 285, SYSPUNCH TO SYSOUT=B      '             XX093600
         DC    C'SYSPUNCH ON 00B                          '             XX093700
         DC    C'TAPEIN ON 287, SYSPRINT ON 00F           '             XX093800
         DC    C'TAPEIN ON 284, TAPEOUT ON 281            '             XX093900
         DC    C'SYSPRINT TO SYSOUT=A                     '             XX094000
         DC    C'TAPEIN ON 270, SYSPRINT TO SYSOUT=A      '             XX094100
         DC    C'DISKIN ON 151, DSN=DATASET,VOL=SER=333001'             XX094200
         DC    C'ALLOCATE QUALIFIED DSN=SYS1.DUMP         '             XX094300
CCINOTE  DC    C'DITTOCCI AND DITTOTCI INTERPRET CARD OUTPUT. 3525 FEA' XX094400
         DC    C'TURE AND OS JCL FUNC=I SUPPORT REQUIRED. SYSPUNCH MUS' XX094500
         DC    C'T BE ONLINE.   '                                       XX094600
TCTLNOTE DC    C'TAPE CONTROL FUNCTIONS (INT,WTM,REW,RUN,FSR,BSR,FSF,B' XX094700
         DC    C'SF,ERT) ARE VALID WHEN TAPEIN OR TAPEOUT ALLOCATED BY' XX094800
         DC    C' PROCEDURE.    '                                       XX094900
DSKNOTE  DC    C'DISKIN IS OPENED AS INOUT TO ALLOW DISK WRITE FUNCTIO' XX095000
         DC    C'NS DRL AND EOF.'                                       XX095100
XXXNOTE  DC    C'XXX AND DID FUNCTIONS ARE VALID IN ALL PROCEDURES.'    XX095200
         LTORG                         FORCE LITERALS HERE              XX095300
         EJECT                                                          XX095400
         COPY  DITTODS1                                                 XX095500
         SPACE 1                                                        XX095600
         COPY  DITTODS2                                                 XX095700
         CSECT                                                          XX095800
PGX      DSECT                                                          XX095900
BL       DS    CL20                                                     XX096000
PG       DS    0CL81                                                    XX096100
         DS    CL7                                                      XX096200
TRK      DS    CL1                                                      XX096300
         DS    CL10                                                     XX096400
DEN      DS    CL3                                                      XX096500
         DS    CL9                                                      XX096600
PAR      DS    CL4                                                      XX096700
         DS    CL10                                                     XX096800
TRN      DS    CL3                                                      XX096900
         DS    CL14                                                     XX097000
DCT      DS    CL3                                                      XX097100
         DS    CL10                                                     XX097200
MMS      DS    CL2                                                      XX097300
         ORG   PG                                                       XX097400
         DS    CL10                                                     XX097500
OPCODE   DS    CL3                                                      XX097600
         DS    CL7                                                      XX097700
COMMENT  DS    CL49                                                     XX097800
         DS    CL4                                                      XX097900
DOLLAR   DS    CL1                                                      XX098000
         CSECT                                                          XX098100
         END   DITTOXXX                                                 XX098200
/*                                                                      XX098300
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              XX098400
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              XX098500
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              XX098600
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        XX098700
 NAME OITTOXXX(R)                                                       XX098800
/*                                                                      XX098900
//                                                                      XX099000
//DITTOE11 JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=128K
//PROCSTEP EXEC DITTODSR
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC
//             DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN DD *
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'
***********************************************************************
**********          PAGE 1A LIST OF EXTENSION#1 FUNCTIONS   ***********
***********************************************************************
         SPACE 2
         ISEQ  75,80
DITTOE11 START
         SAVE  (14,12)
         LR    R2,RD
         BALR  RC,R0
         USING *,RC,R5,RA
         LR    R5,RC
         AH    R5,BUMP
         LR    RA,R5
         AH    RA,BUMP
         LA    RD,SAVEAREA
         ST    RD,8(R2)            PTR TO MY S.A.
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.
         L     R7,0(R1)                GET  MSICCW ADR
         USING MAIN,R7                 ADDRESS MSICCW . . .
         ST    R7,PARM                 PASS MSICCW ADR TO SUB
         LA    R9,PRNT                 BALR REG TO PRNT
         LA    RB,CONIO                DSECT PTR
         USING PGX,RB
         B     AROUND              BR BY COPYRIGHT
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA
BUMP     DC    H'4096'             BASE REGISTER BUMP
         EJECT
***********************************************************************
**********                    LIST OF FUNCTIONS WITH        ***********
**********            DESCRIPTIONS WITH * FRAMING           ***********
***********************************************************************
         SPACE 1
AROUND   MVI   BL,C' '
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVI   CC,W1               CARRIAGE CTL = WRITE & SPACE
         MVI   PG,C'*'
         MVC   PG+1(W),PG          *'S ACROSS PAGE
         MVC   PG+30(13),=C' EXTENSIONS  '
         BALR  R8,R9               PRINT HEADING
         MVI   PG+1,C' '
         MVC   PG+2(W-2),PG+1      BLANK HEADING
         BALR  R8,R9               PRINT LINE 4
         LA    R2,TBL1             POINTER TO PRINT LITERALS
         LA    R3,NTBL1            # OF TABLE ENTRIES
         MVI   CC,W1               SET UP PRINT & SINGLE SPACE
MOVTBL1  MVC   OPCODE,0(R2)        FUNCTION CODE TO PRNT AREA
         MVC   COMMENT,3(R2)       DESCN. TO PRNT AREA
         BALR  R8,R9               PRINT LINE
         LA    R2,52(R2)           BUMP TO NEXT LITERAL
         BCT   R3,MOVTBL1          LOOP & PRNT AGAIN TO COMMENTS
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S
         BALR  R8,R9               PRINT SPACE AFTER XXX
         MVC   OPCODE(66),E11C1
         BALR  R8,R9                   PRINT COMMENTT
         MVC   OPCODE(66),E11C2
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C3
         BALR  R8,R9                   PRINT COMMENT
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S
         BALR  R8,R9               PRINT SPACE
         MVC   OPCODE(66),E11C6
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C7
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C8
         BALR  R8,R9                   PRINT COMMENT
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S
         BALR  R8,R9               PRINT SPACE
         MVC   OPCODE(66),E11C4
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C5
         BALR  R8,R9                   PRINT COMMENT
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S
         BALR  R8,R9               PRINT SPACE
         MVC   OPCODE(66),E11C9
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C10
         BALR  R8,R9                   PRINT COMMENT
         MVC   OPCODE(66),E11C11
         BALR  R8,R9                   PRINT COMMENT
         MVC   PG+2(W-2),PG+1      CLEAR EXCEPT *'S
         BALR  R8,R9               PRINT SPACE
         MVC   OPCODE(66),E11C12
         BALR  R8,R9                   PRINT COMMENT
         MVC   PG+2(W-2),PG+1
         BALR  R8,R9               PRINT SPACE LINE
         MVC   COMMENT(41),WHO     MOVE L.S.B... LINE
         BALR  R8,R9               PRINT IT
         MVC   PG+1(W),PG          PROPAGATE *'S
         MVI   CC,WC1              SET TO PRNT & SKIP TO NEW PG.
         BALR  R8,R9               PRINT LAST LINE PG1
         B     RETNORM
         SPACE 1
E11C1    DC    C'SYSTEM UTILITY FUNCTIONS PROMPT FOR KEYW'
         DC    C'ORD VALUES, DISPLAY SYSIN '
E11C2    DC    C' CARDS, ASK IF EXECUTION DESIRED, AND LI'
         DC    C'NK TO IEBPTPCH, IEHDASDR, '
E11C3    DC    C' IEHLIST, AND IEHPROGM. THE UTILITY RETU'
         DC    C'RN CODE IS DISPLAYED.     '
E11C4    DC    C'QC, QP, AND QP RECOGNIZE RECFM=V AND VB '
         DC    C'ON QSAMIN. THE 4 BYTE RDW '
E11C5    DC    C' FIELD IS USED FOR LRECL. A PDS MEMBER I'
         DC    C'S PROCESSED BY DSN(MEMBER)'
E11C6    DC    C'CQ AND CQS RECOGNIZE RECFM=V AND VB ON Q'
         DC    C'SAMOUT AND THE 4 BYTE RDW '
E11C7    DC    C' (RECORD DESCRIPTOR WORD) IS BUILT. IF Q'
         DC    C'SAMOUT RECFM, BLKSIZE, AND'
E11C8    DC    C' LRECL NOT SUBMITTED: RECFM=FBS,BLKSIZE='
         DC    C'3120,LRECL=80 IS USED.    '
E11C9    DC    C'QQ ASSUMES COMPATIBLE RECFM''S (V TO VB, '
         DC    C'F TO FBS) ON QSAMIN AND   '
E11C10   DC    C' QSAMOUT. NO ADJUSTMENT FOR VAR LEN RDW '
         DC    C' FIELDS IS MADE. IF       '
E11C11   DC    C' QSAMOUT RECFM, BLKSIZE, AND LRECL NOT S'
         DC    C'UBMITTED: QSAMIN IS USED. '
E11C12   DC    C'ALL QSAM TAPE PROCS DEFAULT TO STANDARD '
         DC    C'LABELS.                   '
WHO      DC    C'L. S. BRAMMER       IBM CORPORATION  1975'
         EJECT
         COPY  DITTOXE1
         EJECT
         COPY  DITTODS1
         SPACE 1
         COPY  DITTODS2
         CSECT
         END   DITTOE11
/*
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSIN DD *,DCB=BLKSIZE=80
 NAME DITTOE11(R)
/*
//
//DITTOE12 JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=128K
//PROCSTEP EXEC DITTODSR
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC
//             DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN DD *
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'
***********************************************************************
**********               XXX LOAD MODULE LOADED             ***********
**********          PAGE 2A LIST OF EXTENSION#1             ***********
**********          CONTROL CARD FORMATS                    ***********
***********************************************************************
         SPACE 2
         ISEQ  75,80
DITTOE12 START
         SAVE  (14,12)
         LR    R2,RD
         BALR  RC,R0
         USING *,RC,R5,RA
         LR    R5,RC
         AH    R5,BUMP
         LR    RA,R5
         AH    RA,BUMP
         LA    RD,SAVEAREA
         ST    RD,8(R2)            PTR TO MY S.A.
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.
         L     R7,0(R1)                GET  MSICCW ADR
         USING MAIN,R7                 ADDRESS MSICCW . . .
         ST    R7,PARM                 PASS MSICCW ADR TO SUB
         LA    R9,PRNT                 BALR REG TO PRNT
         LA    RB,CONIO                DSECT PTR
         USING PGX,RB
         B     AROUND              BR BY COPYRIGHT
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA
BUMP     DC    H'4096'             BASE REGISTER BUMP
         EJECT
***********************************************************************
**********        PAGE 2 - 'FUNCTION CONTROL CARD FORMAT '  ***********
***********************************************************************
         SPACE 1
AROUND   MVC   PG,PG-1             CLEAR PRINT AREA
         MVC   PG+0(19),=C'* * * * * * * * * *'
         MVC   PG+62(19),PG        BUILD HEADING
         MVC   PG+27(34),CNTRLHD
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE
         BALR  R8,R9               PRINT 'FUNCTION CARD...' HDG.
         MVC   PG,PG-1             CLEAR PRINT AREA
         MVC   PG+2(6),=C'CC 1-7'     COLUMN HEADING
         MVC   PG+13(8),=C'FUNCTION'  COLUMN HEADING
         MVC   PAR(10),=C'PARAMETERS'   'PARAMETERS' TO HEADING
         MVC   PG+80(5),=C'CC 72'      CONT. HERE
         BALR  R8,R9               PRINT COLUMN HEADINGS
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   PG+2(7),=C'$$DITTO'
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE
         LA    R2,TBL1             POINTER TO FUNCTION CODE LITERALS
         LA    R3,NTBL3            NUMBER OF TBL4 ENTRIES
         LA    R4,TBL4             POINTER TO PARAMETER SWITCHES
LOOP     LA    R8,PARAM-4          POINTER TO VECTOR TABLE
         SR    R0,R0               CLEAR REG 0
         LA    R1,PG+25            ADDRESS OF PARAMETER PRINT AREA
         MVC   PG+15(70),PG+14     CLEAR PRINT AREA EXCEPT $$DITTO
         MVC   PG+15(3),0(R2)      FUNCTION CODE TO PRINT AREA
         IC    R0,0(R4)            INDEX VALUE FROM TBL4
         LTR   R0,R0               IS IT ZERO?
         BZ    END                 YES, GO PRINT FUNCTION CODE ONLY
GO       SLL   R0,2                NO, DOUBLE INDEX VALUE
         AR    R8,R0               ADD TO VECTOR TABLE FOR ENTRY
         BALR  R0,R8               BRANCH TO VECTOR TABLE (PARAM+)
         SR    R0,R0               CLEAR REG 0
         LA    R8,PARAM-4          RESET POINTER TO VECTOR TABLE
         LA    R4,1(R4)            BUMP TO NEXT INDEX VALUE
         IC    R0,0(R4)            INDEX INTO REG 0
         LTR   R0,R0               IS IT ZERO?
         BNZ   GO                  NO, LOOP & ADD NEXT PARAMETER
         BALR  R8,R9               YES, GO PRINT LINE
END      LA    R4,1(R4)            BUMP TO INDEX FOR NEXT FUNCTION
         LA    R2,52(R2)           BUMP TO NEXT FUNCTION CODE
         MVC   PG+11(70),PG+10     CLEAR PRINT AREA
         BCT   R3,LOOP             LOOP UNTIL ALL FUNCTIONS LISTED
         MVC   PG+1(20),PG         CLEAR $$DITTO
         BALR  R8,R9                   SINGLE SPACE
         MVC   TRK+1(9),=C'PARAMETERS'
         MVC   PAR+8(11),=C'DESCRIPTION'
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE
         BALR  R8,R9               PRINT LOWER HALF PAGE HDGS.
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE
         LA    R2,M2+2             POINTER TO PARAMETER TABLE
         LA    R3,DESCN            POINTER TO DESCRIPTION TABLE
         LA    R4,13               NUMBER OF PARAMETERS
PARMLP   MVC   TRK(18),0(R2)       PARAMETER TO PRINT AREA
         LA    R2,20(R2)           BUMP TO NEXT PARAMETER
         MVC   PAR(39),0(R3)       DESCN. TO PRINT AREA
         LA    R3,39(R3)           BUMP TO NEXT DESCN.
         BALR  R8,R9               PRINT PARAM & DESCN.
         MVC   PG+1,PG             CLEAR PRINT AREA
         BCT   R4,PARMLP           LOOP UNTIL DONE
         BALR  R8,R9                   SINGLE SPACE
         MVC   PG+1(5),=C'NOTE:'
         MVC   TRK(79),E12C1           COMMENT
         BALR  R8,R9                   PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(79),E12C2           COMMENT
         BALR  R8,R9                   PRINT IT
         MVC   TRK(79),E12C9           COMMENT
         BALR  R8,R9               PRINT IT
         MVC   TRK(79),E12C3           COMMENT
         BALR  R8,R9                   PRINT IT
         MVC   TRK(79),E12C4           COMMENT
         BALR  R8,R9                   PRINT IT
         MVC   TRK(79),E12C5           COMMENT
         BALR  R8,R9               PRINT IT
         MVC   TRK(79),E12C6           COMMENT
         BALR  R8,R9               PRINT IT
         MVC   TRK(79),E12C7           COMMENT
         BALR  R8,R9               PRINT IT
         MVC   TRK(79),E12C8           COMMENT
         BALR  R8,R9               PRINT IT
         MVC   TRK(79),E12C8A          COMMENT
         MVI   CC,W2               SET TO PRINT & DOUBLE SPACE
         BALR  R8,R9               DOUBLE SPACE
         MVC   PG+1(90),PG             CLEAR PRINT AREA
         MVC   PG+1(18),=C'JOBSTREAM EXAMPLES'  HDG
         BALR  R8,R9               DOUBLE SPACE
         MVI   CC,W1               SET TO PRINT & SINGLE SPACE
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(25),DRSJOB
         MVC   TRK+2(6),=C'PRTPUN'
         BALR  R8,R9               PRINT IT
         MVC   TRK(40),DRSEXEC
         MVC   TRK+8(8),=C'DITTOPDS'
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(27),PDSDSNM
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(18),PDSYSIN
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(11),PDS1
         BALR  R8,R9               PRINT IT
         MVC   TRK(27),PDS2
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         BALR  R8,R9                   SINGLE SPACE
         MVC   TRK(25),DRSJOB
         BALR  R8,R9               PRINT IT
         MVC   TRK(40),DRSEXEC
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(27),PDSDSNM
         MVC   TRK+19(9),=C'DITTOMAC'''
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(18),PDSYSIN
         BALR  R8,R9               PRINT IT
         MVC   TRK(53),DRS1
         BALR  R8,R9               PRINT IT
         MVC   TRK(53),DRS2
         BALR  R8,R9               PRINT IT
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVC   TRK(29),DRS3
         MVI   CC,WC1              SET TO PRINT & SKIP TO NEW PAGE
         BALR  R8,R9               PRINT & SKIP TO NEW PAGE
         B     RETNORM
         EJECT
***********************************************************************
**********         COMMENTS AND EXAMPLE CONSTANTS           ***********
***********************************************************************
         SPACE 1
E12C1    DC    C'CONSOLE PROCEDURES (NEXT PAGE) MAY ALSO B'
         DC    C'E USED IN CONTROL CARD MODE. SUBMIT   '
E12C2    DC    C'PARM.STEP1=''JOBSTREAM'' ON PROC EXEC AND /'
         DC    C'/STEP1.SYSIN DD * PLUS CONTROL CARDS. '
E12C3    DC    C'DDNAMES USED BY PRT TO VD ARE FIXED AND C'
         DC    C'ONTAINED IN PROCS. NO INPUT= NEEDED.  '
E12C4    DC    C'( ) DENOTES OPTIONAL PARAMETER. TRAILING '
         DC    C', AND XIN72 ALLOWS PARMS ON NEXT CARD.'
E12C5    DC    C'KEYVAL AND ARGVAL CHAR LIMIT IS 35. HEX L'
         DC    C'IMIT IS 50. CODE '''' FOR '' IN VALUE.   '
E12C6    DC    C'SYSPRINT, SYSPUNCH, AND QSAMOUT ARE NOT C'
         DC    C'LOSED TILL EOJ. FUNCTION CONTROL CARDS'
E12C7    DC    C'CAN SELECTIVELY PROCESS QSAMIN/VSAMIN DAT'
         DC    C'A SETS. EOF CLOSES QSAMIN/VSAMIN AND  '
E12C8    DC    C'ENDS THE FUNCTION. QSAMIN/VSAMIN ARE RE-O'
         DC    C'PENED WHEN A FUNCTION REQUESTS THEM.  '
E12C8A   DC    C'VSAMIN SUPPORTS BOTH KSDS AND ESDS VSAM D'
         DC    C'ATASET FORMATS.                       '
E12C9    DC    C'PRT AND PUN RECSIZE= IS OPTIONAL(DEFAULT='
         DC    C'80). SCANPOS= IS OPTIONAL(DEFAULT=1). '
CNTRLHD  DC    C'EXTENSIONS  CONTROL CARD FORMAT   '
PDSDSNM  DC    C'//      DSNM=''SYS1.PARMLIB'''
PDSYSIN  DC    C'//STEP1.SYSIN DD *'
PDS1     DC    C'$$DITTO PRT'
PDS2     DC    C'$$DITTO PUN MEMBER=IEASYS00'
DRSJOB   DC    C'//DRS      JOB MSGLEVEL=1'
DRSEXEC  DC    C'// EXEC  DITTODP,PARM.STEP1=''JOBSTREAM'','
DRS1     DC    C'$$DITTO DRS INPUT=DISKIN,BEGIN=00000,END=00000,     X'
DRS2     DC    C'$$DITTO     SCANTYPE=D,RECSIZE=80,SCANPOS=10,       X'
DRS3     DC    C'$$DITTO     ARGUMENT=C''EJECT'''
         EJECT
***********************************************************************
*******************          VECTOR TABLE        **********************
***********************************************************************
         SPACE 1
         DS    0F
PARAM    B     X1                  VECTOR TABLE
         B     X2                  ENTRY INTO THIS TABLE
         B     X3                  IS BASED ON AN INDEX
         B     X4                  VALUE OBTAINED FROM
         B     X5                  TBL4.
         B     X6                  EXIT IS TO A SPECIFIC
         B     X7                  MOVE STATEMENT FOR
         B     X8                  THE REQUIRED PARAMETER
         B     X9
         B     XA
         B     XB
         B     XC
         B     XD
         B     XE
         B     XF
         B     X10
         B     X11
X1       LR    R8,R0               NO PARAMETER REQUIRED
         BR    R8                  RETURN
X2       MVC   0(12,R1),M2+2       'INPUT = SYSNNN' TO PRINT AREA
         LA    R1,12(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X3       MVC   0(10,R1),M3+2       'SCANTYPE=X'
         LA    R1,10(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X4       MVC   0(12,R1),M4+1       'BEGIN...' TO PRINT AREA
         LA    R1,12(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X5       MVC   0(10,R1),M5+1       'END=...' TO PRINT AREA
         LA    R1,10(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X6       MVC   0(15,R1),M6         '(SCANPOS=N...N'
         LA    R1,15(R1)           BUMP PRINT AREA POINTER
         MVI   0(R1),C')'              TRAILING PAREN
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
X7       MVC   0(16,R1),M7+1       ',ARGUMENT=ARGVAL'
         LA    R1,16(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X8       MVC   0(15,R1),M8         (,RECSIZE=N...N'
         LA    R1,15(R1)           BUMP PRINT AREA POINTER
         MVI   0(R1),C')'              TRAILING PAREN
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
X9       MVC   0(12,R1),M9+2       'DECKTYPE=...' TO PRINT AREA
         LA    R1,12(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
XA       MVC   0(15,R1),MA+1       'DECKNAME=...' TO PRINT AREA
         LA    R1,15(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
XB       MVC   0(16,R1),MB+1       '(STARTKEY=KEYVAL'
         LA    R1,16(R1)           BUMP PRINT AREA POINTER
         MVC   0(3,R1),=C')OR'
         LA    R1,3(R1)                BUMP PTR
         B     X1                  RETURN
XC       MVC   0(15,R1),MC+1       '(STARTAFT=N...N'
         LA    R1,15(R1)           BUMP PRINT AREA POINTER
         MVI   0(R1),C')'              TRAILING PAREN
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
XD       MVC   0(14,R1),MD         '(,NLRECS=N...N'
         LA    R1,14(R1)           BUMP PRINT AREA POINTER
         MVI   0(R1),C')'              TRAILING PAREN
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
XE       MVC   0(16,R1),ME+1       '(MEMBER=MEMBNAME'
         LA    R1,16(R1)           BUMP PRINT AREA POINTER
         MVI   0(R1),C')'              TRAILING PAREN
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
XF       MVC   0(14,R1),MF         ',RECSIZE=N...N'
         LA    R1,14(R1)           BUMP PRINT AREA POINTER
         B     X1                  RETURN
X10      MVI   0(R1),C','              TRAILING COMMA
         LA    R1,1(R1)                BUMP PTR
         B     X1                  RETURN
X11      MVI   PG+84,C'X'              X IN 72
         B     X1                  RETURN
         EJECT
***********************************************************************
**********             THIS TABLE DETERMINES THE LINE       ***********
**********          SEQUENCE AND PARAMETERS FOR THE         ***********
**********          FUNCTION CONTROL CARD PAGE.             ***********
**********             PARAMETERS ARE ASSEMBLED IN A        ***********
**********          STRING FORMAT IN THE PRINT AREA. THE    ***********
**********          HEX VALUES 02 THRU 0B CORRESPOND TO     ***********
**********          PARAMETERS LABELED M2 THRU MB.          ***********
***********************************************************************
         SPACE 1
TBL4     DC    X'00'     BYPASS FIRST ELEMENT IN TBL1
         DC    X'00'                   BYPASS 2ND ELEMENT
         DC    X'0E0800'               PRT
         DC    X'0E0800'               PUN
         DC    X'00'                   DUM CONSOLE ONLY
         DC    X'00'                   RES CONSOLE ONLY
         DC    X'00'                   LS  CONSOLE ONLY
         DC    X'00'                   LV  CONSOLE ONLY
         DC    X'00'                   LC  CONSOLE ONLY
         DC    X'00'                   LP  CONSOLE ONLY
         DC    X'00'                   CAT CONSOLE ONLY
         DC    X'00'                   UNC CONSOLE ONLY
         DC    X'00'                   SCR CONSOLE ONLY
         DC    X'00'                   REN CONSOLE ONLY
         DC    X'00'                   BLANK
         DC    X'00'                   TITLE
         DC    X'00'                   BLANK
         DC    X'0100'                 CQ
         DC    X'090A00'               CQS
         DC    X'0C0D00'               QC
         DC    X'0C0D00'               QQ
         DC    X'00'                   BLANK
         DC    X'00'                   TITLE
         DC    X'00'                   BLANK
         DC    X'0C0D00'               QP
         DC    X'0C0D00'               QD
         DC    X'0B0C0D00'             VP
         DC    X'0B0C0D00'             VD
         DC    X'00'                   BLANK
         DC    X'00'                   TITLE
         DC    X'00'                   BLANK
         DC    X'020F070600'           TRS
         DC    X'0204050F101100'       DRS WITH TRAILING COMMA & XIN72
         DC    X'03070600'             DRS CONT. USE BLANK LINE FUNCOD
         EJECT
         COPY  DITTOXE1
         EJECT
         COPY  DITTODS1
         SPACE 1
         COPY  DITTODS2
         CSECT
         END   DITTOE12
/*
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSIN DD *,DCB=BLKSIZE=80
 NAME DITTOE12(R)
/*
//
//DITTOE13 JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=128K
//PROCSTEP EXEC DITTODSR
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC
//             DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN DD *
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'
***********************************************************************
**********          PAGE 3A LIST OF EXTENSION#1             ***********
*********           CONSOLE PROCEDURES                      ***********
***********************************************************************
         SPACE 2
         ISEQ  75,80
DITTOE13 START
         SAVE  (14,12)
         LR    R2,RD
         BALR  RC,R0
         USING *,RC,R5,RA
         LR    R5,RC
         AH    R5,BUMP
         LR    RA,R5
         AH    RA,BUMP
         LA    RD,SAVEAREA
         ST    RD,8(R2)            PTR TO MY S.A.
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.
         L     R7,0(R1)                GET  MSICCW ADR
         USING MAIN,R7                 ADDRESS MSICCW . . .
         ST    R7,PARM                 PASS MSICCW ADR TO SUB
         LA    R9,PRNT                 BALR REG TO PRNT
         LA    RB,CONIO                DSECT PTR
         USING PGX,RB
         B     AROUND              BR BY COPYRIGHT
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA
BUMP     DC    H'4096'             BASE REGISTER BUMP
         EJECT
***********************************************************************
**********        PAGE 3 - 'CONSOLE PROCEDURES'             ***********
***********************************************************************
         SPACE 1
AROUND   MVI   PG,C' '
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE
         MVC   BL+7(19),=C'* * * * * * * * * *'
         MVC   BL+104(19),BL+7
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '
         MVC   BL+68(10),PROCED
         MVC   BL+79(13),=C'- EXTENSIONS '
         BALR  R8,R9               PRINT IT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVC   BL+7(116),PROC1
         MVI   CC,W1               SPACE 1 AFTER PRINT
         BALR  R8,R9               PRINT IT
         MVC   BL+7(116),PROC2
         BALR  R8,R9               PRINT IT
         MVC   BL+7(116),PROC3
         BALR  R8,R9               PRINT IT
         MVC   BL+7(116),PROC4
         MVI   CC,W2               SPACE 2 AFTER PRINT
         BALR  R8,R9               PRINT IT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVC   BL+7(9),PROCED
         MVC   PG+5(18),SYMBOLPA
         MVC   PG+58(12),FUNCMSG1
         MVI   CC,W1               SPACE 1 AFTER PRINT
         BALR  R8,R9               PRINT IT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVC   BL+7(4),NAME
         MVC   PG+5(14),DEFVALU
         MVC   PG+58(10),GDELINE
         MVI   CC,W2               SPACE 2 AFTER PRINT
         BALR  R8,R9               PRINT IT
         LA    R2,DITPROC
         LA    R3,DEFVAL
         LA    R4,GDELIN
         LA    R6,15                   LOOP
         MVC   BL+1(131),BL
         MVI   CC,W1
         MVC   BL+8(5),=C'DITTO'
MOVLOP1  EQU   *
         MVC   BL+13(3),0(R2)
         MVC   PG+6(49),0(R3)
         MVC   PG+59(27),0(R4)
         LA    R2,3(R2)
         LA    R3,49(R3)
         LA    R4,27(R4)
         BALR  R8,R9               PRINT IT
         BCT   R6,MOVLOP1
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         BALR  R8,R9               PRINT IT
         MVC   BL+7(6),=C'QSAMIN'
         MVC   BL+14(18),SYMBOLPA
         MVC   BL+47(7),=C'QSAMOUT'
         MVC   BL+55(18),SYMBOLPA
         MVC   BL+87(11),=C'UNIT RECORD'
         MVC   BL+99(19),SYMBOLPA
         BALR  R8,R9               PRINT IT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVC   BL+7(14),DEFVALU
         MVC   BL+47(14),DEFVALU
         MVI   CC,W2
         BALR  R8,R9               PRINT IT
         LA    R2,UNTRCD
         LA    R3,QIDEF
         LA    R6,QODEF
         LA    R4,6
         MVC   BL+1(131),BL
         MVI   CC,W1
MOVLOP2  MVC   BL+8(25),0(R3)
         MVC   BL+48(25),0(R6)
         MVC   BL+88(30),0(R2)
         LA    R2,30(R2)
         LA    R3,25(R3)
         LA    R6,25(R6)
         BALR  R8,R9               PRINT IT
         BCT   R4,MOVLOP2
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         BALR  R8,R9               PRINT IT
         MVC   PG+5(84),SAMPSTRT
         MVI   CC,W2               SPACE 2 AFTER PRINT
         BALR  R8,R9               PRINT
         MVC   BL+1(131),BL
         MVC   PG+5(7),=C'COMMAND'
         MVC   PG+58(11),=C'EXPLANATION'
         BALR  R8,R9               PRINT
         LA    R4,16
         LA    R2,SAMPCOMM
         LA    R3,COMEXPL
         MVC   BL+1(131),BL
         MVI   CC,W1
MOVLOP3  MVC   PG+6(44),0(R2)
         MVC   PG+59(41),0(R3)
         LA    R2,44(R2)
         LA    R3,41(R3)
         BALR  R8,R9               PRINT
         BCT   R4,MOVLOP3
         MVC   BL+1(131),BL            CLEAR
         BALR  R8,R9                   PRINT
         MVC   BL+7(116),NOTE1
         BALR  R8,R9                   PRINT
         MVC   BL+7(116),NOTE2
         BALR  R8,R9                   PRINT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVI   CC,WC1              PRINT & SKIP TO 1
         BALR  R8,R9               PRINT IT
         B     RETNORM
         EJECT
***********************************************************************
*******************          CONSTANTS           **********************
***********************************************************************
         SPACE 1
PROC1    DC    C'TO INITIATE OS/DITTO FROM THE CONSOLE ENTER A START C'
         DC    C'OMMAND OF THE FORM; ''S DITTO---.PN''. REPLACE --- WI'
         DC    C'TH OS/DITTO '
PROC2    DC    C'PROCEDURE NAME SUFFIX; E.G. S DITTOUTL.P2,SER=ILPVOL '
         DC    C'WILL ALLOCATE DASD VOLUME ''IPLVOL''. THIS ALLOCATION'
         DC    C' SUPPORTS    '
PROC3    DC    C'FUNCTIONS LS THROUGH REN FOR THAT VOLUME. USE THE FOL'
         DC    C'LOWING PROCEDURE NAME, SYMBOLIC PAREMETER, AND FUNCTI'
         DC    C'ON USE     '
PROC4    DC    C'GUIDELINES TO CHOOSE THE CORRECT PROCEDURE AND FUNCTI'
         DC    C'ON.                                                  '
         DC    C'           '
NOTE1    DC    C'NOTE: IF DSNAME (IDSN, ODSN, OR DSNM) CONTAINS SPECIA'
         DC    C'L CHARACTERS, ENCLOSE IN QUOTES AND CAPITALIZE ALPHA '
         DC    C'CHARACTERS '
NOTE2    DC    C'      WHEN KEYING THE START COMMAND. E.G. S DITTOPDS.'
         DC    C'P0,DSNM=''SYS1.MACLIB''                              '
         DC    C'             '
DITPROC  DC    C'PDS'
         DC    C'DUM'
         DC    C'RES'
         DC    C'UTL'
         DC    C'CQT'
         DC    C'CQD'
         DC    C'QC '
         DC    C'QCI'
         DC    C'QTT'
         DC    C'QTD'
         DC    C'QDD'
         DC    C'QDT'
         DC    C'QP '
         DC    C'VP '
         DC    C'LOG'
DEFVAL   DC    C'IN=SYSDA,SER=,DSNM=,CLS=B,PUN=,FUN=              '
         DC    C'DUNIT=SYSDA,DSER=,TUNIT=TAPE,TLAB=BLP,TSER=DUMTAP'
         DC    C'DUNIT=SYSDA,DSER=,TUNIT=TAPE,TLAB=BLP,TSER=RESTAP'
         DC    C'IN=SYSDA,SER=,                                   '
         DC    C'OUT=TAPE,ODSN=CQT.OUT,RDR=00C                    '
         DC    C'OUT=SYSDA,ODSN=CQD.OUT,RDR=00C                   '
         DC    C'IN=SYSDA,CLS=B                                   '
         DC    C'IN=SYSDA,CLS=,PUN=00D,FUN=I                      '
         DC    C'IN=TAPE,OUT=TAPE,ODSN=QTT.OUT                    '
         DC    C'IN=TAPE,OUT=SYSDA,ODSN=QTD.OUT                   '
         DC    C'IN=SYSDA,OUT=SYSDA,ODSN=QDD.OUT                  '
         DC    C'IN=SYSDA,OUT=TAPE,ODSN=QDT.OUT                   '
         DC    C'IN=SYSDA,CLS=A,PRT=                              '
         DC    C'IN=,IDSN=,ISHR=SHR,ISER=,IAMP=,CLS=A,PRT=        '
         DC    C'OUT=TAPE,ODEN=,OTRTCH=                           '
GDELIN   DC    C'PRT,PUN                    '
         DC    C'DUM                        '
         DC    C'RES                        '
         DC    C'LS,LV,LC,LP,CAT,UNC,SCR,REN'
         DC    C'CQ,CQS                     '
         DC    C'CQ,CQS                     '
         DC    C'QC                         '
         DC    C'QC                         '
         DC    C'QQ                         '
         DC    C'QQ                         '
         DC    C'QQ                         '
         DC    C'QQ                         '
         DC    C'QP,QD                      '
         DC    C'VP,VD                      '
         DC    C'NOT A FUNCTION CODE        '
UNTRCD   DC    C'RDR=CUU   SELECT SYSIN UNIT   '
         DC    C'PUN=CUU   SELECT SYSPUNCH UNIT'
         DC    C'CLS=      SYSOUT CLASS=NULL   '
         DC    C'CLS=A     SYSOUT CLASS=A OR B '
         DC    C'PRT=      SYSPRINT UNIT=NULL  '
         DC    C'PRT=CUU   SELECT SYSPRINT UNIT'
QIDEF    DC    C'IDSN=,ISHR=SHR,IKEEP=KEEP'
         DC    C'ISER=,IFILENO=1,ILABEL=SL'
         DC    C'IBLKSIZ=,IRECFM=,ILRECL= '
         DC    C'                         '
         DC    C'                         '
         DC    C'                         '
QODEF    DC    C'ONEW=NEW,OKEEP=KEEP,     '
         DC    C'OSER=,OFILENO=1,OLABEL=SL'
         DC    C'OBLKSIZ=,ORECFM=,OLRECL=,'
         DC    C'(DASD ONLY)              '
         DC    C'OSPACE=TRK,OPRI=1,OSEC=1 '
         DC    C'                         '
PROCED   DC    C'PROCEDURES'
SYMBOLPA DC    C'SYMBOLIC PARAMETERS'
FUNCMSG1 DC    C'FUNCTION USE'
NAME     DC    C'NAME'
DEFVALU  DC    C'DEFAULT VALUES'
GDELINE  DC    C'GUIDELINES'
SAMPSTRT DC    C'SAMPLE START COMMANDS USING OPTIONAL SYMBOLIC PARAMET'
         DC    C'ERS TO OVERRIDE DEFAULT VALUES.'
SAMPCOMM DC    C'S DITTOPDS.P0,DSNM=PDSLIB,CLS=,PUN=00D,FUN=I'
         DC    C'S DITTODUM.P1,DSER=SYSRES                   '
         DC    C'S DITTORES.P2,DSER=NEWRES                   '
         DC    C'S DITTOUTL.P3,SER=WORK01                    '
         DC    C'S DITTOCQT.P4,OSER=000000                   '
         DC    C'S DITTOCQD.P5,OSPACE=CYL                    '
         DC    C'S DITTOQC.P6,IDSN=CARDS,ISER=111111         '
         DC    C'S DITTOQCI.P7,IDSN=SORCTAPE                 '
         DC    C'S DITTOQTT.P8,IDSN=CATLGDSN,ODSN=DATAPESL   '
         DC    C'S DITTOQTD.P9,IDSN=CATLGDSN,OKEEP=CATLG     '
         DC    C'S DITTOQDD.P10,IDSN=CATLGDSN,OBLKSIZ=12000, '
         DC    C'               ORECFM=FBS,OLRECL=80         '
         DC    C'S DITTOQDT.P11,IDSN=CATLGDSN,ODSN=TAPEDATA  '
         DC    C'S DITTOQP.P12.IDSN=PDS(MEMBNAME)            '
         DC    C'S DITTOVP.P13,IDSN=KSDS                     '
         DC    C'S DITTOLOG.P14,OUT=280                      '
COMEXPL  DC    C'SYSPUNCH ON 00D WITH INTERPRET           '
         DC    C'DUMP SYSRES VOLUME TO TAPE (BLP)         '
         DC    C'RESTORE TAPE (BLP) TO NEWRES             '
         DC    C'SELECT WORK01 VOLUME FOR LS THROUGH REN  '
         DC    C'CARD TO STANDARD LABEL TAPE NUMBER 000000'
         DC    C'CARD TO DISK WITH CYL ALLOCATION         '
         DC    C'DASD TO CARD DSN=CARDS,VOL=SER=111111    '
         DC    C'TAPE TO CARD WITH INTERPRET(SL CATALOGED)'
         DC    C'TAPE TO TAPE (OSER=SCRTCH BY DEFAULT)    '
         DC    C'TAPE TO DASD (DISPOSITION=CATLG)         '
         DC    C'DASD TO DASD (RE-BLOCK TO 12000)         '
         DC    C'                                         '
         DC    C'DASD TO TAPE (SUPPLY OUTPUT DSNAME)      '
         DC    C'DASD TO PRINTER (USE QSAM PDS SUPPORT)   '
         DC    C'VSAM TO PRINTER (SELECT KSDS)            '
         DC    C'TAPEMARK LOGTAPE REEL ON 280 (NO REWIND) '
         EJECT
         COPY  DITTOXE1
         EJECT
         COPY  DITTODS1
         SPACE 1
         COPY  DITTODS2
         CSECT
         END   DITTOE13
/*
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSIN DD *,DCB=BLKSIZE=80
 NAME DITTOE13(R)
/*
//
//DITTOE14 JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=128K
//PROCSTEP EXEC DITTODSR
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC
//             DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN DD *
         TITLE '* * * * * *    XXX FUNCTION FOR OS AND VS  * * * * *'
***********************************************************************
**********          PAGE 4A LIST OF EXTENSION#1             ***********
*********           CONSOLE OPERATION                       ***********
***********************************************************************
         SPACE 2
         ISEQ  75,80
DITTOE14 START
         SAVE  (14,12)
         LR    R2,RD
         BALR  RC,R0
         USING *,RC,R5,RA
         LR    R5,RC
         AH    R5,BUMP
         LR    RA,R5
         AH    RA,BUMP
         LA    RD,SAVEAREA
         ST    RD,8(R2)            PTR TO MY S.A.
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.
         L     R7,0(R1)                GET  MSICCW ADR
         USING MAIN,R7                 ADDRESS MSICCW . . .
         ST    R7,PARM                 PASS MSICCW ADR TO SUB
         LA    R9,PRNT                 BALR REG TO PRNT
         LA    RB,CONIO                DSECT PTR
         USING PGX,RB
         B     AROUND              BR BY COPYRIGHT
COPYRT2  DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'
         DC    C'08-15-75 VERS.1 MOD.0' 5798-CDA
BUMP     DC    H'4096'             BASE REGISTER BUMP
         EJECT
***********************************************************************
**********        PAGE 4A  'CONSOLE OPERATION'              ***********
***********************************************************************
         SPACE 1
AROUND   MVI   PG,C' '
         MVC   PG+1,PG             CLEAR PRINT AREA
         MVI   CC,W3               SET TO PRINT & TRIPLE SPACE
         MVC   BL+7(19),=C'* * * * * * * * * *'
         MVC   BL+104(19),BL+7
         MVC   BL+51(17),=C'OS/DITTO CONSOLE '
         MVC   BL+68(9),=C'OPERATION'
         MVC   BL+79(13),=C'- EXTENSIONS '
         BALR  R8,R9               PRINT PAGE 2 HDG. - CONSOLE OPER..
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         MVC   BL+7(115),OPERATOR  OPER. PRINT COMMENT LINE 1
         MVI   CC,W1               SPACE 1 AFTER PRINT
         BALR  R8,R9               PRINT IT
         MVC   BL+7(116),OPERATOR+116   2ND LINE OF OPER. COMMENT
         BALR  R8,R9               PRINT IT
         MVC   BL+7(116),TE7       SET UP WTOR NOTE
         MVI   CC,W2
         BALR  R8,R9               PRINT IT
         MVC   BL+1(131),BL        CLEAR PRINT AREA
         LA    R2,TBL1+3           POINTER TO FUNCTION DESCNS.
         LA    R3,28                    PRINT LINES
         LA    R4,STRING
         MVI   CC,W1
         MVC   PG+62(22),REQUR
         B     OPLOOP1
OPERLOOP MVI   CC,W1               SET TO PRINT & SINGLE SPACE
         MVC   PG+54(52),PG+53         CLEAR PRINT AREA
         LA    R1,PG+54
SAVCORE  CLI   0(R4),C' '          END OF LITERAL ?
         BE    BUMPBL              YES
         MVC   0(1,R1),0(R4)       MOVE DATA
         LA    R1,1(R1)            BUMP PRINT AREA
         LA    R4,1(R4)            BUMP PRINT LITERAL POINTER
         B     SAVCORE
BUMPBL   LA    R4,1(R4)            BUMP PAST BLANK
OPLOOP1  MVC   PG+1(49),0(R2)      DESCNS. TO PRINT AREA
         LA    R2,52(R2)           BUMP TO NEXT DESCN.
         BALR  R8,R9               PRINT LINE
         BCT   R3,OPERLOOP
         MVC   PG+1(95),PG         CLEAR PRINT AREA
         MVI   CC,W3               SPACE 3 AFTER PRINT
         BALR  R8,R9               SINGLE SPACE
         LA    R2,KWCON+2              KEY WORDS FOR CONSOLE STRING
         LA    R3,DESCON               DESCRIPTIONS
         LA    R4,13                   # OF PRINT LINES
         MVI   BL+70,C'*'
OPLOOP   MVI   CC,W1               SET TO SINGLE SPACE
         MVC   BL+07(18),00(R2)    LEFT PARAMETER TO PRINT AREA
         MVC   BL+27(39),00(R3)    LEFT DESCRIPTION TO PRINT AREA
         MVC   BL+74(18),20(R2)    RIGHT PARAMETER TO PRINT AREA
         MVC   BL+93(39),39(R3)    RIGHT DESCRIPTION TO PRINT AREA
         LA    R2,40(R2)           BUMP PARAMETER POINTER
         LA    R3,78(R3)           BUMP DESCRIPTION POINTER
         BALR  R8,R9               PRINT IT
         BCT   R4,OPLOOP
         MVC   BL+01(130),BL       CLEAR PRINT AREA
         MVI   CC,WC1              PRINT & SKIP TO 1
         BALR  R8,R9
         B     RETNORM
         EJECT
***********************************************************************
*******************          CONSTANTS           **********************
***********************************************************************
         SPACE 1
STRING   EQU   *
         DC    C' '                    BLANK LINE
         DC    C'PRT,MEMBER/U,MEMBLRECL/U,EXECUTE '
         DC    C'PUN,MEMBER/U,MEMBLRECL/U,EXECUTE '
         DC    C'DUM,EXECUTE '
         DC    C'RES,CPYVOLID/U,PURGE/U,EXECUTE '
         DC    C'LS '
         DC    C'LV,FORMATORDUMP/U,DSNAME/DDYYY/U,EXECUTE '
         DC    C'LC,NODE/U,EXECUTE '
         DC    C'LP,DSNAME,FORMATORDUMP/U,EXECUTE '
         DC    C'CAT,DSNAME,CVOL/U,DEVICE,VOLSER,EXECUTE '
         DC    C'UNC,DSNAME,CVOL/U,EXECUTE '
         DC    C'SCR,DSNAMEORVTOC,PURGE/U,MEMBERORSYS/U,EXECUTE '
         DC      C'REN,DSNAME,NEWNAME,MEMBNAME/U,EXECUTE '
         DC    C' '                    BLANK LINE
         DC    C' '                    BLANK LINE
         DC    C' '                    BLANK LINE
         DC    C'CQ '
         DC    C'CQS,DECKTYPE,DECKNAME '
         DC    C'QC,STARTAFT/U,NLRECS/U '
         DC    C'QQ,STARTAFT/U,NLRECS/U '
         DC    C' '                    BLANK LINE
         DC    C' '                    BLANK LINE
         DC    C' '                    BLANK LINE
         DC    C'QP,STARTAFT/U,NLRECS/U '
         DC    C'QD,STARTAFT/U,NLRECS/U '
         DC    C'VP,STARTYPE/U(,STARTKEY/STARTAFT),NLRECS/U '
         DC    C'VD,STARTYPE/U(,STARTKEY/STARTAFT),NLRECS/U '
TE7      DC    C'A FUNCTION MAY BE ENDED BY REPLYING ''U'' TO THE FIRS'
         DC    C'T WTOR MESSAGE. A REPLY OF ''EOJ'' WILL END THE FUNCT'
         DC    C'ION AND DITTO.'
OPERATOR DC    C'TO MINIMIZE CONSOLE MESSAGES, YOU MAY ENTER'  LINE 1A
         DC    C' WITH THE FUNCTION ALL OR PART OF THE  '
         DC    C'REQUIRED PARAMETERS.  A PARAMETER ERROR '  LINE 2A
         DC    C'WILL CAUSE DITTO TO REVERT TO THE '
         DC    C'TUTORIAL ROUTINES AND REQUEST REMAINING '  LINE 3A
         DC    C'PARAMETERS IN A SINGLE REQUEST MODE.    '  LINE 3B
REQUR    DC    C'PARAMETER REQUIREMENTS'
KWCON    EQU   *                       CONSOLE STRING KEYWORDS
         DC    C'  /                 '
         DC    C'  U                 '
         DC    C' (MEMBER=MEMBNAME   '
         DC    C'  MEMBLRECL         '
         DC    C'  EXECUTE           '
         DC    C'  CPYVOLID          '
         DC    C'  PURGE             '
         DC    C'  FORMATORDUMP      '
         DC    C'  DSNAME            '
         DC    C'  DDDYYY            '
         DC    C'  NODE              '
         DC    C'  CVOL              '
         DC    C'  DEVICE            '
         DC    C'  VOLSER            '
         DC    C'  DSNAMEORVTOC      '
         DC    C'  MEMBERORSYS       '
         DC    C'  NEWNAME           '
         DC    C'  MEMBNAME          '
         DC    C' ,DECKTYPE=XXX      '
         DC    C' ,DECKNAME=X...X    '
         DC    C' (STARTAFT=N...N    '
         DC    C'(,NLRECS=N...N      '
         DC    C'  STARTYPE          '
         DC    C' (STARTKEY          '
         DC    C'  (  )              '
         DC    C'                    '                     UNUSED
DESCON   EQU   *                       CONSOLE KEYWORD DESCRIPTIONS
         DC    C'SLASH SHOWS OR CONDITION. CHOOSE ONE   '
         DC    C'USE THE DEFAULT OPTION, VALUE,OR FORMAT'
         DC    C'1-8 CHAR. OMIT TO GET ALL MEMBERS      '
         DC    C'NNN - MEMBER LRECL (DEFAULT IS 80)     '
         DC    C'E - EXECUTE FUNCTION, U - TO CANCEL    '
         DC    C'C - CPYVOLID=YES, U - CPYVOLID=NO      '
         DC    C'P - PURGE UNEXPIRED DSN''S, U - NO PURGE'
         DC    C'F - FORMAT, D - DUMP, U - NEITHER(LIST)'
         DC    C'44 CHAR MAX DATA SET NAME              '
         DC    C'DATE OPTION, * BY DSN''S LESS THAN DDDYY'
         DC    C'LISTCTLG NODE OPTION (E.G. SYS1)       '
         DC    C'C - CATLG CVOL OPTION, U - NOT A CVOL  '
         DC    C'DEVICE TYPE FOR CATALOG ENTRY(E.G.3330)'
         DC    C'VOLSER LIST (1 - 5 MAX, DO NOT STRING) '
         DC    C'''VTOC'' - SCRATCH VTOC, DSNAME - SCR DSN'
         DC    C'MEMBNAME - SCR MEMBER, S - SCRATCH SYS '
         DC    C'NEWNAME OF DSN OR MEMBER               '
         DC    C'MEMBER TO BE RENAMED                   '
         DC    C'DECKTYPE (BAL, RPG, COB)               '
         DC    C'DECKNAME (0-3, 0-5, 0-8) CHAR.         '
         DC    C'START AFTER NTH LREC COUNT             '
         DC    C'USE TO LIMIT NUMBER OF LRECS PROCESSED '
         DC    C'K-STARTKEY, C-STARTAFT, U-FIRST LREC   '
         DC    C'X...X - KEY VALUE IS 1-35 CHAR MAX     '
         DC    C'DENOTES OPTIONAL PARAMETER             '
         DC    C'                                       '  UNUSED
         EJECT
         COPY  DITTOXE1
         EJECT
         COPY  DITTODS1
         SPACE 1
         COPY  DITTODS2
         CSECT
         END   DITTOE14
/*
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSIN DD *,DCB=BLKSIZE=80
 NAME DITTOE14(R)
/*
//
//DITTOLE  JOB ('A=SX82'),'PAS3 BRAMMER',                               LE000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE000200
//PROCSTEP EXEC DITTODSR                                                LE000300
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE000400
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE000500
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE000600
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE000700
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE000800
 INCLUDE OBJLIB(WTOSUB)                                                 LE000900
 INCLUDE OBJLIB(WTORSUB)                                                LE001000
 INCLUDE OBJLIB(CNCDSUB)                                                LE001100
 INCLUDE OBJLIB(FUNCSUB)                                                LE001200
 INCLUDE OBJLIB(DISKOPEN)                                               LE001300
 INCLUDE OBJLIB(CDRDSUB)                                                LE001400
 INCLUDE OBJLIB(CDPNSUB)                                                LE001500
 INCLUDE OBJLIB(PRNTSUB)                                                LE001600
 INCLUDE OBJLIB(HEADING)                                                LE001700
 INCLUDE OBJLIB(OSDITTOO)              OBJECT CODE ONLY                 LE001800
 ENTRY OSDITTO                                                          LE001900
 NAME OSDITTO(R)                                                        LE002000
/*                                                                      LE002100
//                                                                      LE002200
//PGMLE    JOB ('A=SX82'),'PAS3 BRAMMER',                               LE002300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE002400
//PROCSTEP EXEC DITTODSR                                                LE002500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE002600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE002700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE002800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE002900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE003000
 INCLUDE OBJLIB(WTOSUB)                                                 LE003100
 INCLUDE OBJLIB(WTORSUB)                                                LE003200
 INCLUDE OBJLIB(OITTOPGM)              OBJECT CODE ONLY                 LE003300
 ENTRY DITTOPGM                                                         LE003400
 NAME DITTOPGM(R)                                                       LE003500
/*                                                                      LE003600
//                                                                      LE003700
//LSTLE    JOB ('A=SX82'),'PAS3 BRAMMER',                               LE003800
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE003900
//PROCSTEP EXEC DITTODSR                                                LE004000
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE004100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE004200
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE004300
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE004400
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE004500
 INCLUDE OBJLIB(WTOSUB)                                                 LE004600
 INCLUDE OBJLIB(WTORSUB)                                                LE004700
 INCLUDE OBJLIB(OITTOLST)              OBJECT CODE ONLY                 LE004800
 ENTRY DITTOLST                                                         LE004900
 NAME DITTOLST(R)                                                       LE005000
/*                                                                      LE005100
//                                                                      LE005200
//PDSLE    JOB ('A=SX82'),'PAS3 BRAMMER',                               LE005300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE005400
//PROCSTEP EXEC DITTODSR                                                LE005500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE005600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE005700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE005800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE005900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE006000
 INCLUDE OBJLIB(WTOSUB)                                                 LE006100
 INCLUDE OBJLIB(WTORSUB)                                                LE006200
 INCLUDE OBJLIB(PRNTSUB)                                                LE006300
 INCLUDE OBJLIB(OITTOPDS)              OBJECT CODE ONLY                 LE006400
 ENTRY DITTOPDS                                                         LE006500
 NAME DITTOPDS(R)                                                       LE006600
/*                                                                      LE006700
//                                                                      LE006800
//DASLE    JOB ('A=SX82'),'PAS3 BRAMMER',                               LE006900
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE007000
//PROCSTEP EXEC DITTODSR                                                LE007100
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE007200
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE007300
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE007400
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE007500
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE007600
 INCLUDE OBJLIB(WTOSUB)                                                 LE007700
 INCLUDE OBJLIB(WTORSUB)                                                LE007800
 INCLUDE OBJLIB(OITTODAS)              OBJECT CODE ONLY                 LE007900
 ENTRY DITTODAS                                                         LE008000
 NAME DITTODAS(R)                                                       LE008100
/*                                                                      LE008200
//                                                                      LE008300
//QVLE     JOB ('A=SX82'),'PAS3 BRAMMER',                               LE008400
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE008500
//PROCSTEP EXEC DITTODSR                                                LE008600
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE008700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE008800
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE008900
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE009000
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE009100
 INCLUDE OBJLIB(WTOSUB)                                                 LE009200
 INCLUDE OBJLIB(WTORSUB)                                                LE009300
 INCLUDE OBJLIB(CDRDSUB)                                                LE009400
 INCLUDE OBJLIB(CDPNSUB)                                                LE009500
 INCLUDE OBJLIB(PRNTSUB)                                                LE009600
 INCLUDE OBJLIB(HEADING)                                                LE009700
 INCLUDE OBJLIB(OITTOQV)               OBJECT CODE ONLY                 LE009800
 ENTRY DITTOQV                                                          LE009900
 NAME DITTOQV(R)                                                        LE010000
/*                                                                      LE010100
//                                                                      LE010200
//XXXLE    JOB ('A=SX82'),'PAS3 BRAMMER',                               LE010300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      LE010400
//PROCSTEP EXEC DITTODSR                                                LE010500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         LE010600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              LE010700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE010800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              LE010900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        LE011000
 INCLUDE OBJLIB(PRNTSUB)                                                LE011100
 INCLUDE OBJLIB(DITTOE11)                                               LE011200
 INCLUDE OBJLIB(DITTOE12)                                               LE011300
 INCLUDE OBJLIB(DITTOE13)                                               LE011400
 INCLUDE OBJLIB(DITTOE14)                                               LE011500
 INCLUDE OBJLIB(OITTOXXX)              OBJECT CODE ONLY                 LE011600
 ENTRY DITTOXXX                                                         LE011700
 NAME DITTOXXX(R)                                                       LE011800
/*                                                                      LE011900
//                                                                      LE012000
//SAMPXXX  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 00010
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 00020
// EXEC DITTOCP,                                                        SA 00030
//      PARM.STEP1='JOBSTREAM',                                         SA 00040
//      PRT=,CLS=A,RDR=                                                 SA 00050
//STEP1.SYSIN DD *                                                      SA 00060
$$DITTO XXX                                                             SA 00070
/*                                                                      SA 00080
//                                                                      SA 00090
//PRTPUN   JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 00100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 00110
// EXEC DITTOPDS,                                                       SA 00120
//      PARM.STEP1='JOBSTREAM',                                         SA 00130
//   PUN=,CLS=B,FUN=I,                                                  SA 00140
// DSNM='SYS1.DITTOMAC'                                                 SA 00150
//SYSIN DD *                                                            SA 00160
$$DITTO PRT                                                             SA 00170
$$DITTO PRT MEMBER=DITTODS1                                             SA 00180
$$DITTO PRT RECSIZE=40                                                  SA 00190
$$DITTO PRT MEMBER=DITTODS1,RECSIZE=40                                  SA 00200
$$DITTO PUN MEMBER=DITTODS1                                             SA 00210
$$DITTO PUN MEMBER=DITTODS1,RECSIZE=40                                  SA 00220
$$DITTO PUN MEMBER=DITTODS1,RECSIZE=80                                  SA 00230
$$DITTO PUN                                                             SA 00240
$$DITTO PUN                 RECSIZE=40                                  SA 00250
/*                                                                      SA 00260
//                                                                      SA 00270
//SAMPCQ   JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 00280
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 00290
// EXEC DITTOCQT,                                                       SA 00300
//      PARM.STEP1='JOBSTREAM',                                         SA 00310
//      OBLKSIZ=400,ORECFM=FB,OLRECL=80,                                SA 00320
//      OUT=2400,OKEEP=PASS                                             SA 00330
//STEP1.SYSIN DD *                                                      SA 00340
$$DITTO  CQ                                                             SA 00350
1234567890                             DATA CARD                      12SA 00360
1234567890                             DATA CARD                      12SA 00370
1234567890                             DATA CARD                      12SA 00380
1234567890                             DATA CARD                      12SA 00390
1234567890                             DATA CARD                      12SA 00400
1234567890                             DATA CARD                      12SA 00410
1234567890                             DATA CARD                      12SA 00420
1234567890                             DATA CARD                      12SA 00430
1234567890                             DATA CARD                      12SA 00440
1234567890                             DATA CARD                      12SA 00450
1234567890                             DATA CARD                      12SA 00460
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 00470
//SYSPRINT DD SYSOUT=A                                                  SA 00480
//SYSUDUMP DD SYSOUT=A                                                  SA 00490
//TAPEIN DD DSN=CQT.OUT,DISP=(SHR,KEEP)                                 SA 00500
//SYSIN DD DATA                                                         SA 00510
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 00520
$$DITTO REW OUTPUT=TAPEIN                                               SA 00530
$$DITTO TP INPUT=TAPEIN                                                 SA 00540
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 00550
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 00560
$$DITTO TPD INPUT=TAPEIN,NBLKS=2,RECSIZE=80                             SA 00570
/*                                                                      SA 00580
//                                                                      SA 00590
//SAMPCQS  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 00600
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 00610
// EXEC DITTOCQD,                                                       SA 00620
//      PARM.STEP1='JOBSTREAM',                                         SA 00630
//      OBLKSIZ=400,ORECFM=FB,OLRECL=80,                                SA 00640
//      OKEEP=PASS                                                      SA 00650
//STEP1.SYSIN DD *                                                      SA 00660
$$DITTO  CQS DECKTYPE=BAL,DECKNAME=TES                                  SA 00670
1234567890                             DATA CARD                      12SA 00680
1234567890                             DATA CARD                      12SA 00690
1234567890                             DATA CARD                      12SA 00700
1234567890                             DATA CARD                      12SA 00710
1234567890                             DATA CARD                      12SA 00720
1234567890                             DATA CARD                      12SA 00730
1234567890                             DATA CARD                      12SA 00740
1234567890                             DATA CARD                      12SA 00750
1234567890                             DATA CARD                      12SA 00760
1234567890                             DATA CARD                      12SA 00770
1234567890                             DATA CARD                      12SA 00780
1234567890                             DATA CARD                      12SA 00790
1234567890                             DATA CARD                      12SA 00800
1234567890                             DATA CARD                      12SA 00810
1234567890                             DATA CARD                      12SA 00820
1234567890                             DATA CARD                      12SA 00830
1234567890                             DATA CARD                      12SA 00840
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 00850
//SYSPRINT DD SYSOUT=A                                                  SA 00860
//SYSUDUMP DD SYSOUT=A                                                  SA 00870
//DISKIN DD DSN=CQD.OUT,DISP=(OLD,DELETE)                               SA 00880
//SYSIN DD DATA                                                         SA 00890
$$DITTO DPD INPUT=DISKIN,BEGIN=00000,END=00000,RECSIZE=80               SA 00900
/*                                                                      SA 00910
//                                                                      SA 00920
//SAMPCQV  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 00930
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 00940
// EXEC DITTOCQD,                                                       SA 00950
//      PARM.STEP1='JOBSTREAM',                                         SA 00960
//      OBLKSIZ=300,OKEEP=PASS,ORECFM=V,OLRECL=80                       SA 00970
//STEP1.SYSIN DD *                                                      SA 00980
$$DITTO  CQS DECKTYPE=BAL,DECKNAME=TES                                  SA 00990
1234567890                             DATA CARD                      12SA 01000
1234567890                             DATA CARD                      12SA 01010
1234567890                             DATA CARD                      12SA 01020
1234567890                             DATA CARD                      12SA 01030
1234567890                             DATA CARD                      12SA 01040
1234567890                             DATA CARD                      12SA 01050
1234567890                             DATA CARD                      12SA 01060
1234567890                             DATA CARD                      12SA 01070
1234567890                             DATA CARD                      12SA 01080
1234567890                             DATA CARD                      12SA 01090
1234567890                             DATA CARD                      12SA 01100
1234567890                             DATA CARD                      12SA 01110
1234567890                             DATA CARD                      12SA 01120
1234567890                             DATA CARD                      12SA 01130
1234567890                             DATA CARD                      12SA 01140
1234567890                             DATA CARD                      12SA 01150
1234567890                             DATA CARD                      12SA 01160
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 01170
//SYSPRINT DD SYSOUT=A                                                  SA 01180
//SYSUDUMP DD SYSOUT=A                                                  SA 01190
//DISKIN DD DSN=CQD.OUT,DISP=(OLD,DELETE)                               SA 01200
//SYSIN DD *                                                            SA 01210
$$DITTO DD  INPUT=DISKIN,BEGIN=00000,END=00000                          SA 01220
/*                                                                      SA 01230
//NODCBCQ  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 01240
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 01250
// EXEC DITTOCQT,                                                       SA 01260
//      PARM.STEP1='JOBSTREAM',                                         SA 01270
//      OUT=2400,OKEEP=PASS                                             SA 01280
//STEP1.SYSIN DD *                                                      SA 01290
$$DITTO  CQ                                                             SA 01300
1234567890                             DATA CARD                      12SA 01310
1234567890                             DATA CARD                      12SA 01320
1234567890                             DATA CARD                      12SA 01330
1234567890                             DATA CARD                      12SA 01340
1234567890                             DATA CARD                      12SA 01350
1234567890                             DATA CARD                      12SA 01360
1234567890                             DATA CARD                      12SA 01370
1234567890                             DATA CARD                      12SA 01380
1234567890                             DATA CARD                      12SA 01390
1234567890                             DATA CARD                      12SA 01400
1234567890                             DATA CARD                      12SA 01410
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 01420
//SYSPRINT DD SYSOUT=A                                                  SA 01430
//SYSUDUMP DD SYSOUT=A                                                  SA 01440
//TAPEIN DD DSN=CQT.OUT,DISP=(SHR,KEEP)                                 SA 01450
//SYSIN DD *                                                            SA 01460
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 01470
$$DITTO REW OUTPUT=TAPEIN                                               SA 01480
$$DITTO TP INPUT=TAPEIN                                                 SA 01490
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 01500
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 01510
$$DITTO TPD INPUT=TAPEIN,NBLKS=2,RECSIZE=80                             SA 01520
/*                                                                      SA 01530
//                                                                      SA 01540
//SAMPQC   JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 01550
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 01560
// EXEC PGM=IEBGENER                                                    SA 01570
//SYSPRINT DD SYSOUT=A                                                  SA 01580
//SYSUT1 DD *                                                           SA 01590
1234567890                             DATA CARD                      12SA 01600
1234567890                             DATA CARD                      12SA 01610
1234567890                             DATA CARD                      12SA 01620
1234567890                             DATA CARD                      12SA 01630
1234567890                             DATA CARD                      12SA 01640
1234567890                             DATA CARD                      12SA 01650
1234567890                             DATA CARD                      12SA 01660
1234567890                             DATA CARD                      12SA 01670
1234567890                             DATA CARD                      12SA 01680
1234567890                             DATA CARD                      12SA 01690
1234567890                             DATA CARD                      12SA 01700
1234567890                             DATA CARD                      12SA 01710
1234567890                             DATA CARD                      12SA 01720
1234567890                             DATA CARD                      12SA 01730
1234567890                             DATA CARD                      12SA 01740
1234567890                             DATA CARD                      12SA 01750
1234567890                             DATA CARD                      12SA 01760
1234567890                             DATA CARD                      12SA 01770
1234567890                             DATA CARD                      12SA 01780
1234567890                             DATA CARD                      12SA 01790
1234567890                             DATA CARD                      12SA 01800
1234567890                             DATA CARD                      12SA 01810
1234567890                             DATA CARD                      12SA 01820
1234567890                             DATA CARD                      12SA 01830
1234567890                             DATA CARD                      12SA 01840
1234567890                             DATA CARD                      12SA 01850
1234567890                             DATA CARD                      12SA 01860
1234567890                             DATA CARD                      12SA 01870
1234567890                             DATA CARD                      12SA 01880
1234567890                             DATA CARD                      12SA 01890
1234567890                             DATA CARD                      12SA 01900
1234567890                             DATA CARD                      12SA 01910
//SYSUT2 DD DSN=CARDS,UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1)),     SA 01920
//          DCB=(RECFM=V,LRECL=80,BLKSIZE=300)                          SA 01930
//SYSIN DD DUMMY                                                        SA 01940
// EXEC DITTOQC,                                                        SA 01950
//      PARM.STEP1='JOBSTREAM',                                         SA 01960
//      IDSN=CARDS,IKEEP=DELETE                                         SA 01970
//STEP1.SYSIN DD *                                                      SA 01980
$$DITTO QC                                                              SA 01990
$$DITTO QC NLRECS=5                                                     SA 02000
$$DITTO QC STARTAFT=5,NLRECS=5                                          SA 02010
$$DITTO QC                                                              SA 02020
$$DITTO QC STARTAFT=5                                                   SA 02030
//KEEPHERE DD DATA                                                      SA 02040
//          DCB=(RECFM=FBS,LRECL=80,BLKSIZE=400)                        SA 02050
//          DCB=(RECFM=VBS,LRECL=80,BLKSIZE=300)                        SA 02060
//          DCB=(RECFM=VB,LRECL=80,BLKSIZE=300)                         SA 02070
/*                                                                      SA 02080
//                                                                      SA 02090
//SAMPQCI  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 02100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 02110
// EXEC PGM=IEBGENER                                                    SA 02120
//SYSPRINT DD SYSOUT=A                                                  SA 02130
//SYSUT1 DD *                                                           SA 02140
1234567890                             DATA CARD                      12SA 02150
1234567890                             DATA CARD                      12SA 02160
1234567890                             DATA CARD                      12SA 02170
1234567890                             DATA CARD                      12SA 02180
1234567890                             DATA CARD                      12SA 02190
1234567890                             DATA CARD                      12SA 02200
1234567890                             DATA CARD                      12SA 02210
1234567890                             DATA CARD                      12SA 02220
1234567890                             DATA CARD                      12SA 02230
1234567890                             DATA CARD                      12SA 02240
1234567890                             DATA CARD                      12SA 02250
1234567890                             DATA CARD                      12SA 02260
1234567890                             DATA CARD                      12SA 02270
1234567890                             DATA CARD                      12SA 02280
1234567890                             DATA CARD                      12SA 02290
1234567890                             DATA CARD                      12SA 02300
1234567890                             DATA CARD                      12SA 02310
1234567890                             DATA CARD                      12SA 02320
1234567890                             DATA CARD                      12SA 02330
1234567890                             DATA CARD                      12SA 02340
1234567890                             DATA CARD                      12SA 02350
1234567890                             DATA CARD                      12SA 02360
1234567890                             DATA CARD                      12SA 02370
1234567890                             DATA CARD                      12SA 02380
1234567890                             DATA CARD                      12SA 02390
1234567890                             DATA CARD                      12SA 02400
1234567890                             DATA CARD                      12SA 02410
1234567890                             DATA CARD                      12SA 02420
1234567890                             DATA CARD                      12SA 02430
1234567890                             DATA CARD                      12SA 02440
1234567890                             DATA CARD                      12SA 02450
1234567890                             DATA CARD                      12SA 02460
//SYSUT2 DD DSN=CARDS,UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1)),     SA 02470
//          DCB=(RECFM=FBS,LRECL=80,BLKSIZE=400)                        SA 02480
//SYSIN DD DUMMY                                                        SA 02490
// EXEC DITTOQCI,                                                       SA 02500
//      PARM.STEP1='JOBSTREAM',                                         SA 02510
//     CLS=,PUN=007,                                                    SA 02520
//      IDSN=CARDS,IKEEP=DELETE                                         SA 02530
//STEP1.SYSIN DD *                                                      SA 02540
$$DITTO QC                                                              SA 02550
/*                                                                      SA 02560
//                                                                      SA 02570
//SAMPQTT  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 02580
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 02590
// EXEC DITTOCQT,                                                       SA 02600
//      PARM.STEP1='JOBSTREAM',                                         SA 02610
//      OUT=2400,OKEEP=PASS                                             SA 02620
//STEP1.SYSIN DD *                                                      SA 02630
$$DITTO  CQ                                                             SA 02640
1234567890                             DATA CARD                      12SA 02650
1234567890                             DATA CARD                      12SA 02660
1234567890                             DATA CARD                      12SA 02670
1234567890                             DATA CARD                      12SA 02680
1234567890                             DATA CARD                      12SA 02690
1234567890                             DATA CARD                      12SA 02700
1234567890                             DATA CARD                      12SA 02710
1234567890                             DATA CARD                      12SA 02720
1234567890                             DATA CARD                      12SA 02730
1234567890                             DATA CARD                      12SA 02740
1234567890                             DATA CARD                      12SA 02750
// EXEC DITTOQTT,                                                       SA 02760
//      PARM.STEP1='JOBSTREAM',                                         SA 02770
//      IN=,                                                            SA 02780
//      OUT=2400,                                                       SA 02790
//      IDSN='CQT.OUT',OKEEP=PASS                                       SA 02800
//STEP1.SYSIN DD *                                                      SA 02810
$$DITTO QQ NLRECS=2                                                     SA 02820
$$DITTO QQ NLRECS=2,STARTAFT=3                                          SA 02830
$$DITTO QQ                                                              SA 02840
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 02850
//SYSPRINT DD SYSOUT=A                                                  SA 02860
//SYSUDUMP DD SYSOUT=A                                                  SA 02870
//TAPEIN DD DSN=QTT.OUT,DISP=(SHR,KEEP)                                 SA 02880
//SYSIN DD *                                                            SA 02890
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 02900
$$DITTO REW OUTPUT=TAPEIN                                               SA 02910
$$DITTO TP INPUT=TAPEIN                                                 SA 02920
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 02930
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 02940
$$DITTO TPD INPUT=TAPEIN,NBLKS=2,RECSIZE=80                             SA 02950
/*                                                                      SA 02960
//                                                                      SA 02970
//SAMPQTD  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 02980
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 02990
// EXEC DITTOCQT,                                                       SA 03000
//      PARM.STEP1='JOBSTREAM',                                         SA 03010
//      OBLKSIZ=400,ORECFM=FB,OLRECL=80,                                SA 03020
//      OUT=2400,OKEEP=PASS                                             SA 03030
//STEP1.SYSIN DD *                                                      SA 03040
$$DITTO  CQ                                                             SA 03050
1234567890                             DATA CARD                      12SA 03060
1234567890                             DATA CARD                      12SA 03070
1234567890                             DATA CARD                      12SA 03080
1234567890                             DATA CARD                      12SA 03090
1234567890                             DATA CARD                      12SA 03100
1234567890                             DATA CARD                      12SA 03110
1234567890                             DATA CARD                      12SA 03120
1234567890                             DATA CARD                      12SA 03130
1234567890                             DATA CARD                      12SA 03140
1234567890                             DATA CARD                      12SA 03150
1234567890                             DATA CARD                      12SA 03160
// EXEC DITTOQTD,                                                       SA 03170
//      PARM.STEP1='JOBSTREAM',                                         SA 03180
//      IN=,                                                            SA 03190
//      IDSN='CQT.OUT',OKEEP=PASS                                       SA 03200
//STEP1.SYSIN DD *                                                      SA 03210
$$DITTO QQ NLRECS=2                                                     SA 03220
$$DITTO QQ NLRECS=2,STARTAFT=3                                          SA 03230
$$DITTO QQ                                                              SA 03240
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 03250
//SYSPRINT DD SYSOUT=A                                                  SA 03260
//SYSUDUMP DD SYSOUT=A                                                  SA 03270
//DISKIN DD DSN=QTD.OUT,DISP=(OLD,DELETE)                               SA 03280
//SYSIN DD *                                                            SA 03290
$$DITTO DPD INPUT=DISKIN,BEGIN=00000,END=00000,RECSIZE=80               SA 03300
/*                                                                      SA 03310
//                                                                      SA 03320
//SAMPQDD  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 03330
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 03340
// EXEC PGM=IEBGENER                                                    SA 03350
//SYSPRINT DD SYSOUT=A                                                  SA 03360
//SYSUT1 DD *                                                           SA 03370
1234567890                             DATA CARD                      12SA 03380
1234567890                             DATA CARD                      12SA 03390
1234567890                             DATA CARD                      12SA 03400
1234567890                             DATA CARD                      12SA 03410
1234567890                             DATA CARD                      12SA 03420
1234567890                             DATA CARD                      12SA 03430
1234567890                             DATA CARD                      12SA 03440
1234567890                             DATA CARD                      12SA 03450
1234567890                             DATA CARD                      12SA 03460
1234567890                             DATA CARD                      12SA 03470
1234567890                             DATA CARD                      12SA 03480
1234567890                             DATA CARD                      12SA 03490
1234567890                             DATA CARD                      12SA 03500
1234567890                             DATA CARD                      12SA 03510
1234567890                             DATA CARD                      12SA 03520
1234567890                             DATA CARD                      12SA 03530
1234567890                             DATA CARD                      12SA 03540
1234567890                             DATA CARD                      12SA 03550
1234567890                             DATA CARD                      12SA 03560
1234567890                             DATA CARD                      12SA 03570
1234567890                             DATA CARD                      12SA 03580
1234567890                             DATA CARD                      12SA 03590
1234567890                             DATA CARD                      12SA 03600
1234567890                             DATA CARD                      12SA 03610
1234567890                             DATA CARD                      12SA 03620
1234567890                             DATA CARD                      12SA 03630
1234567890                             DATA CARD                      12SA 03640
1234567890                             DATA CARD                      12SA 03650
1234567890                             DATA CARD                      12SA 03660
1234567890                             DATA CARD                      12SA 03670
1234567890                             DATA CARD                      12SA 03680
1234567890                             DATA CARD                      12SA 03690
//SYSUT2 DD DSN=CARDS,UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1)),     SA 03700
//          DCB=(RECFM=V,LRECL=80,BLKSIZE=300)                          SA 03710
//SYSIN DD DUMMY                                                        SA 03720
// EXEC DITTOQDD,                                                       SA 03730
//      PARM.STEP1='JOBSTREAM',                                         SA 03740
//      IDSN=CARDS,IKEEP=DELETE,OKEEP=PASS                              SA 03750
//STEP1.SYSIN DD *                                                      SA 03760
$$DITTO QQ NLRECS=2                                                     SA 03770
$$DITTO QQ NLRECS=2,STARTAFT=3                                          SA 03780
$$DITTO QQ                                                              SA 03790
/*                                                                      SA 03800
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 03810
//SYSPRINT DD SYSOUT=A                                                  SA 03820
//SYSUDUMP DD SYSOUT=A                                                  SA 03830
//DISKIN DD DSN=QDD.OUT,DISP=(OLD,DELETE)                               SA 03840
//SYSIN DD *                                                            SA 03850
$$DITTO DPD INPUT=DISKIN,BEGIN=00000,END=00000,RECSIZE=80               SA 03860
/*                                                                      SA 03870
//SAMPQDT  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 03880
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 03890
// EXEC PGM=IEHPROGM                                                    SA 03900
//SYSPRINT DD SYSOUT=A                                                  SA 03910
//DD1 DD UNIT=SYSDA,DISP=SHR,VOL=SER=STEVEB                             SA 03920
//SYSIN DD *                                                            SA 03930
 SCRATCH DSNAME=CQD.OUT,VOL=2314=STEVEB,PURGE                           SA 03940
/*                                                                      SA 03950
// EXEC DITTOCQD,                                                       SA 03960
//      PARM.STEP1='JOBSTREAM',                                         SA 03970
//      OSER=STEVEB,                                                    SA 03980
//      OBLKSIZ=400,ORECFM=FB,OLRECL=80,                                SA 03990
//      OKEEP=PASS                                                      SA 04000
//STEP1.SYSIN DD *                                                      SA 04010
$$DITTO  CQS DECKTYPE=BAL,DECKNAME=TES                                  SA 04020
1234567890                             DATA CARD                      12SA 04030
1234567890                             DATA CARD                      12SA 04040
1234567890                             DATA CARD                      12SA 04050
1234567890                             DATA CARD                      12SA 04060
1234567890                             DATA CARD                      12SA 04070
1234567890                             DATA CARD                      12SA 04080
1234567890                             DATA CARD                      12SA 04090
1234567890                             DATA CARD                      12SA 04100
1234567890                             DATA CARD                      12SA 04110
1234567890                             DATA CARD                      12SA 04120
1234567890                             DATA CARD                      12SA 04130
1234567890                             DATA CARD                      12SA 04140
1234567890                             DATA CARD                      12SA 04150
1234567890                             DATA CARD                      12SA 04160
1234567890                             DATA CARD                      12SA 04170
1234567890                             DATA CARD                      12SA 04180
1234567890                             DATA CARD                      12SA 04190
// EXEC DITTOQDT,                                                       SA 04200
//      PARM.STEP1='JOBSTREAM',                                         SA 04210
//      IKEEP=DELETE,                                                   SA 04220
//      IDSN='CQD.OUT',OKEEP=PASS,OUT=2400                              SA 04230
//STEP1.SYSIN DD *                                                      SA 04240
$$DITTO QQ NLRECS=2                                                     SA 04250
$$DITTO QQ NLRECS=2,STARTAFT=3                                          SA 04260
$$DITTO QQ                                                              SA 04270
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 04280
//SYSPRINT DD SYSOUT=A                                                  SA 04290
//SYSUDUMP DD SYSOUT=A                                                  SA 04300
//TAPEIN DD DSN=QDT.OUT,DISP=(SHR,KEEP)                                 SA 04310
//SYSIN DD *                                                            SA 04320
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 04330
$$DITTO REW OUTPUT=TAPEIN                                               SA 04340
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 04350
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 04360
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 04370
$$DITTO TPD INPUT=TAPEIN,RECSIZE=80                                     SA 04380
/*                                                                      SA 04390
//                                                                      SA 04400
//NODCBQQ  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 04410
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 04420
// EXEC PGM=IEBGENER                                                    SA 04430
//SYSPRINT DD SYSOUT=A                                                  SA 04440
//SYSUT1 DD *                                                           SA 04450
1234567890                             DATA CARD                      12SA 04460
1234567890                             DATA CARD                      12SA 04470
1234567890                             DATA CARD                      12SA 04480
1234567890                             DATA CARD                      12SA 04490
1234567890                             DATA CARD                      12SA 04500
1234567890                             DATA CARD                      12SA 04510
1234567890                             DATA CARD                      12SA 04520
1234567890                             DATA CARD                      12SA 04530
1234567890                             DATA CARD                      12SA 04540
1234567890                             DATA CARD                      12SA 04550
1234567890                             DATA CARD                      12SA 04560
1234567890                             DATA CARD                      12SA 04570
1234567890                             DATA CARD                      12SA 04580
1234567890                             DATA CARD                      12SA 04590
1234567890                             DATA CARD                      12SA 04600
1234567890                             DATA CARD                      12SA 04610
1234567890                             DATA CARD                      12SA 04620
1234567890                             DATA CARD                      12SA 04630
1234567890                             DATA CARD                      12SA 04640
1234567890                             DATA CARD                      12SA 04650
1234567890                             DATA CARD                      12SA 04660
1234567890                             DATA CARD                      12SA 04670
1234567890                             DATA CARD                      12SA 04680
1234567890                             DATA CARD                      12SA 04690
1234567890                             DATA CARD                      12SA 04700
1234567890                             DATA CARD                      12SA 04710
1234567890                             DATA CARD                      12SA 04720
1234567890                             DATA CARD                      12SA 04730
1234567890                             DATA CARD                      12SA 04740
1234567890                             DATA CARD                      12SA 04750
1234567890                             DATA CARD                      12SA 04760
1234567890                             DATA CARD                      12SA 04770
//SYSUT2 DD DSN=CARDS,UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1)),     SA 04780
//          DCB=(RECFM=VB,LRECL=80,BLKSIZE=300)                         SA 04790
//SYSIN DD DUMMY                                                        SA 04800
// EXEC DITTOQDD,                                                       SA 04810
//      PARM.STEP1='JOBSTREAM',                                         SA 04820
//      OBLKSIZ=,OLRECL=,ORECFM=,                                       SA 04830
//      IDSN=CARDS,IKEEP=DELETE,OKEEP=PASS                              SA 04840
//STEP1.SYSIN DD *                                                      SA 04850
$$DITTO QQ NLRECS=2                                                     SA 04860
$$DITTO QQ NLRECS=2,STARTAFT=3                                          SA 04870
$$DITTO QQ                                                              SA 04880
/*                                                                      SA 04890
//  EXEC PGM=OSDITTO,PARM='JOBSTREAM'                                   SA 04900
//SYSPRINT DD SYSOUT=A                                                  SA 04910
//SYSUDUMP DD SYSOUT=A                                                  SA 04920
//DISKIN DD DSN=QDD.OUT,DISP=(OLD,DELETE)                               SA 04930
//SYSIN DD *                                                            SA 04940
$$DITTO DDD INPUT=DISKIN,BEGIN=00000,END=00000,RECSIZE=80               SA 04950
//KEEPHERE DD DATA                                                      SA 04960
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)                         SA 04970
//             DCB=(RECFM=FBS,BLKSIZE=3120,LRECL=80)                    SA 04980
//          DCB=(RECFM=F,LRECL=80,BLKSIZE=400)                          SA 04990
/*                                                                      SA 05000
//                                                                      SA 05010
//SAMPQPV  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 05020
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 05030
// EXEC PGM=IEBGENER                                                    SA 05040
//SYSPRINT DD SYSOUT=A                                                  SA 05050
//SYSUT1 DD *                                                           SA 05060
1234567890                             DATA CARD                      12SA 05070
1234567890                             DATA CARD                      12SA 05080
1234567890                             DATA CARD                      12SA 05090
1234567890                             DATA CARD                      12SA 05100
1234567890                             DATA CARD                      12SA 05110
1234567890                             DATA CARD                      12SA 05120
1234567890                             DATA CARD                      12SA 05130
1234567890                             DATA CARD                      12SA 05140
1234567890                             DATA CARD                      12SA 05150
1234567890                             DATA CARD                      12SA 05160
1234567890                             DATA CARD                      12SA 05170
1234567890                             DATA CARD                      12SA 05180
1234567890                             DATA CARD                      12SA 05190
1234567890                             DATA CARD                      12SA 05200
1234567890                             DATA CARD                      12SA 05210
1234567890                             DATA CARD                      12SA 05220
1234567890                             DATA CARD                      12SA 05230
1234567890                             DATA CARD                      12SA 05240
1234567890                             DATA CARD                      12SA 05250
1234567890                             DATA CARD                      12SA 05260
1234567890                             DATA CARD                      12SA 05270
1234567890                             DATA CARD                      12SA 05280
1234567890                             DATA CARD                      12SA 05290
1234567890                             DATA CARD                      12SA 05300
1234567890                             DATA CARD                      12SA 05310
1234567890                             DATA CARD                      12SA 05320
1234567890                             DATA CARD                      12SA 05330
1234567890                             DATA CARD                      12SA 05340
1234567890                             DATA CARD                      12SA 05350
1234567890                             DATA CARD                      12SA 05360
1234567890                             DATA CARD                      12SA 05370
1234567890                             DATA CARD                      12SA 05380
//SYSUT2 DD DSN=CARDS,UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1)),     SA 05390
//          DCB=(RECFM=VB,LRECL=160,BLKSIZE=400)                        SA 05400
//SYSIN DD DUMMY                                                        SA 05410
// EXEC DITTOQP,                                                        SA 05420
//      PARM.STEP1='JOBSTREAM',                                         SA 05430
//      IDSN=CARDS,IKEEP=DELETE                                         SA 05440
//STEP1.SYSIN DD *                                                      SA 05450
$$DITTO QP NLRECS=15                                                    SA 05460
$$DITTO QP STARTAFT=10                                                  SA 05470
$$DITTO QP STARTAFT=10,NLRECS=20                                        SA 05480
$$DITTO QP                                                              SA 05490
$$DITTO QD NLRECS=2                                                     SA 05500
$$DITTO QD STARTAFT=10,NLRECS=3                                         SA 05510
$$DITTO QD STARTAFT=400                                                 SA 05520
//SAMPQP   JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 05530
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 05540
// EXEC DITTOQP,                                                        SA 05550
//      PARM.STEP1='JOBSTREAM',                                         SA 05560
// IDSN='SYS1.DITTOMAC(DITTODS2)'                                       SA 05570
//STEP1.SYSIN DD *                                                      SA 05580
$$DITTO QP NLRECS=15                                                    SA 05590
$$DITTO QP STARTAFT=15,NLRECS=20                                        SA 05600
$$DITTO QP STARTAFT=100                                                 SA 05610
$$DITTO QP                                                              SA 05620
$$DITTO QD NLRECS=2                                                     SA 05630
$$DITTO QD STARTAFT=10,NLRECS=3                                         SA 05640
$$DITTO QD STARTAFT=400                                                 SA 05650
//SAMQP160 JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 05660
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 05670
// EXEC DITTOQP,                                                        SA 05680
//      PARM.STEP1='JOBSTREAM',                                         SA 05690
// IDSN='PIDTAP',IBLKSIZ=1600,ILRECL=160,IRECFM=FB,                     SA 05700
// IN=2400,                                                             SA 05710
// ILABEL=BLP,                                                          SA 05720
// ISER=PIDTAP                                                          SA 05730
//STEP1.SYSIN DD *                                                      SA 05740
$$DITTO QP NLRECS=10                                                    SA 05750
$$DITTO QP NLRECS=10,STARTAFT=10                                        SA 05760
$$DITTO QD NLRECS=10,STARTAFT=10                                        SA 05770
//                                                                      SA 05780
//SAMPVPEK JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 05790
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 05800
// EXEC PGM=IDCAMS                                                      SA 05810
//SAMES DD *                                                            SA 05820
1234567890                             DATA CARD                      12SA 05830
1234567890                             DATA CARD                      12SA 05840
1234567890                             DATA CARD                      12SA 05850
1234567890                             DATA CARD                      12SA 05860
1234567890                             DATA CARD                      12SA 05870
1234567890                             DATA CARD                      12SA 05880
1234567890                             DATA CARD                      12SA 05890
1234567890                             DATA CARD                      12SA 05900
1234567890                             DATA CARD                      12SA 05910
1234567890                             DATA CARD                      12SA 05920
1234567890                             DATA CARD                      12SA 05930
1234567890                             DATA CARD                      12SA 05940
1234567890                             DATA CARD                      12SA 05950
1234567890                             DATA CARD                      12SA 05960
1234567890                             DATA CARD                      12SA 05970
1234567890                             DATA CARD                      12SA 05980
1234567890                             DATA CARD                      12SA 05990
1234567890                             DATA CARD                      12SA 06000
1234567890                             DATA CARD                      12SA 06010
1234567890                             DATA CARD                      12SA 06020
1234567890                             DATA CARD                      12SA 06030
1234567890                             DATA CARD                      12SA 06040
1234567890                             DATA CARD                      12SA 06050
1234567890                             DATA CARD                      12SA 06060
1234567890                             DATA CARD                      12SA 06070
1234567890                             DATA CARD                      12SA 06080
1234567890                             DATA CARD                      12SA 06090
1234567890                             DATA CARD                      12SA 06100
1234567890                             DATA CARD                      12SA 06110
1234567890                             DATA CARD                      12SA 06120
1234567890                             DATA CARD                      12SA 06130
1234567890                             DATA CARD                      12SA 06140
//SAMKS DD *                                                            SA 06150
001                                    DATA CARD                      12SA 06160
002                                    DATA CARD                      12SA 06170
003                                    DATA CARD                      12SA 06180
004                                    DATA CARD                      12SA 06190
005                                    DATA CARD                      12SA 06200
006                                    DATA CARD                      12SA 06210
007                                    DATA CARD                      12SA 06220
008                                    DATA CARD                      12SA 06230
009                                    DATA CARD                      12SA 06240
010                                    DATA CARD                      12SA 06250
011                                    DATA CARD                      12SA 06260
012                                    DATA CARD                      12SA 06270
013                                    DATA CARD                      12SA 06280
014                                    DATA CARD                      12SA 06290
015                                    DATA CARD                      12SA 06300
016                                    DATA CARD                      12SA 06310
017                                    DATA CARD                      12SA 06320
018                                    DATA CARD                      12SA 06330
019                                    DATA CARD                      12SA 06340
020                                    DATA CARD                      12SA 06350
//DD1 DD DISP=OLD,UNIT=SYSDA,VOL=SER=STEVEB                             SA 06360
//KSDS06 DD DSN=KSDS06,DISP=OLD,VOL=SER=STEVEB,UNIT=SYSDA,AMP=AMORG     SA 06370
//ESDS06 DD DSN=ESDS06,DISP=OLD,VOL=SER=STEVEB,UNIT=SYSDA,AMP=AMORG     SA 06380
//SYSPRINT DD SYSOUT=A                                                  SA 06390
//SYSIN DD *                                                            SA 06400
 LISTCAT ENTRIES(KSDS06 ESDS06) ALL                                     SA 06410
   DELETE STEVEB FILE(DD1) SPACE                                        SA 06420
 DELETE (ESDS06) CLUSTER                                                SA 06430
 DELETE (KSDS06) CLUSTER                                                SA 06440
 DEFINE SPACE( -                                                        SA 06450
         VOLUMES(STEVEB) -                                              SA 06460
         FILE(DD1) -                                                    SA 06470
         CYL(10 10))                                                    SA 06480
 DEFINE CLUSTER -                                                       SA 06490
         (NAME(KSDS06)-                                                 SA 06500
         FILE(DD1) -                                                    SA 06510
         VOLUMES(STEVEB) -                                              SA 06520
         CYLINDERS( 1 1 ) -                                             SA 06530
         FREESPACE(2 2)-                                                SA 06540
         RECSZ(80 80 )-                                                 SA 06550
         KEYS(3 0) )-                                                   SA 06560
         DATA -                                                         SA 06570
         (NAME(KS06DATA) -                                              SA 06580
           CISZ(2048) ) -                                               SA 06590
         INDEX -                                                        SA 06600
            (NAME(KS06INDX) -                                           SA 06610
         CISZ(512))                                                     SA 06620
 DEFINE CLUSTER -                                                       SA 06630
         (NAME(ESDS06)-                                                 SA 06640
         FILE(DD1) -                                                    SA 06650
         VOLUMES(STEVEB) -                                              SA 06660
        CYLINDERS(2 2) -                                                SA 06670
         RECSZ(80 80) -                                                 SA 06680
         NONINDEXED)                                                    SA 06690
 LISTCAT ENTRIES(KSDS06 ESDS06) ALL                                     SA 06700
  REPRO INFILE(SAMES) OUTFILE(ESDS06)                                   SA 06710
  REPRO INFILE(SAMKS) OUTFILE(KSDS06)                                   SA 06720
 PRINT INFILE(ESDS06)                                                   SA 06730
 PRINT INFILE(KSDS06)                                                   SA 06740
 PRINT INFILE(KSDS06) FROMKEY(005)                                      SA 06750
 PRINT INFILE(KSDS06) FROMKEY(01)                                       SA 06760
 LISTCAT ENTRIES(KSDS06 ESDS06) ALL                                     SA 06770
/*                                                                      SA 06780
// EXEC DITTOVP,                                                        SA 06790
//      PARM.STEP1='JOBSTREAM',                                         SA 06800
// IDSN='ESDS06'                                                        SA 06810
//STEP1.SYSIN DD *                                                      SA 06820
$$DITTO VP                                                              SA 06830
$$DITTO VP NLRECS=15                                                    SA 06840
$$DITTO VP STARTAFT=10                                                  SA 06850
$$DITTO VP STARTAFT=10,NLRECS=20                                        SA 06860
$$DITTO VD NLRECS=2                                                     SA 06870
$$DITTO VD NLRECS=2                                                     SA 06880
/*                                                                      SA 06890
// EXEC DITTOVP,                                                        SA 06900
//      PARM.STEP1='JOBSTREAM',                                         SA 06910
// IDSN='KSDS06'                                                        SA 06920
//STEP1.SYSIN DD *                                                      SA 06930
$$DITTO VP NLRECS=5                                                     SA 06940
$$DITTO VP STARTAFT=10                                                  SA 06950
$$DITTO VP STARTAFT=01,NLRECS=20                                        SA 06960
$$DITTO VD NLRECS=2                                                     SA 06970
$$DITTO VD NLRECS=2                                                     SA 06980
$$DITTO VP                                                              SA 06990
$$DITTO VP STARTKEY=005                                                 SA 07000
$$DITTO VP STARTKEY=009,NLRECS=1                                        SA 07010
$$DITTO VP STARTKEY=01,NLRECS=1                                         SA 07020
$$DITTO VP STARTKEY=X'F0F1F6',NLRECS=1                                  SA 07030
$$DITTO VP STARTKEY='019'                                               SA 07040
$$DITTO VP STARTKEY='0''0'                                              SA 07050
/*                                                                      SA 07060
//S1 EXEC PGM=IDCAMS                                                    SA 07070
//DD1 DD DISP=OLD,UNIT=SYSDA,VOL=SER=STEVEB                             SA 07080
//SYSPRINT DD SYSOUT=A                                                  SA 07090
//SYSIN DD *                                                            SA 07100
 LISTCAT ENTRIES(KSDS06 ESDS06) ALL                                     SA 07110
 DELETE (KSDS06) CLUSTER                                                SA 07120
 DELETE (ESDS06) CLUSTER                                                SA 07130
 DELETE (STEVEB) SPACE FILE(DD1)                                        SA 07140
 LISTCAT ENTRIES(KSDS06 ESDS06) ALL                                     SA 07150
/*                                                                      SA 07160
//                                                                      SA 07170
//SAMPTRSV JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 07180
//  MSGLEVEL=1,CLASS=G,REGION=100K                                      SA 07190
// EXEC DITTOTP,PARM.STEP1='JOBSTREAM',IN=2400                          SA 07200
//STEP1.SYSIN DD *                                                      SA 07210
$$DITTO TRS INPUT=TAPEIN,RECSIZE=V,ARGUMENT=C'DE37999',SCANPOS=10       SA 07220
/*                                                                      SA 07230
//                                                                      SA 07240
//SAMPTRS  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 07250
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 07260
// EXEC DITTOTP,PARM.STEP1='JOBSTREAM',IN=2400                          SA 07270
//STEP1.SYSIN DD *                                                      SA 07280
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=C'CONSOLE',SCANPOS=1       SA 07290
$$DITTO REW OUTPUT=TAPEIN                                               SA 07300
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=C'CONSOLE'                 SA 07310
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=C'PL,X''50''',SCANPOS=16   SA 07320
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=C'**********************',XSA 07330
$$DITTO    SCANPOS=1                                                    SA 07340
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,                                   XSA 07350
$$DITTO ARGUMENT=X'C3',SCANPOS=1                                        SA 07360
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,                                   XSA 07370
$$DITTO                SCANPOS=1,                                      XSA 07380
$$DITTO ARGUMENT=X'404040404040404040'                                  SA 07390
$$DITTO   TRS   INPUT=TAPEIN,RECSIZE=80,ARGUMENT=C'END',SCANPOS=10      SA 07400
$$DITTO REW OUTPUT=TAPEIN                                               SA 07410
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=X'C3'                      SA 07420
$$DITTO TRS INPUT=TAPEIN,RECSIZE=80,ARGUMENT=X'C3C'                     SA 07430
$$DITTO TRS ARGUMENT='NOC'                                              SA 07440
/*                                                                      SA 07450
//SAMPDRS  JOB ('A=SX82'),'PAS3 BRAMMER',                               SA 07460
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      SA 07470
// EXEC DITTODP,PARM.STEP1='JOBSTREAM',DSNM='SYS1.DITTOMAC'             SA 07480
//STEP1.SYSIN DD *                                                      SA 07490
$$DITTO DRS BEGIN=00000,END=00000,RECSIZE=80,SCANPOS=1,SCANTYPE=D,     XSA 07500
$$DITTO     INPUT=DISKIN,                                              XSA 07510
$$DITTO ARGUMENT=C'MAIN'                                                SA 07520
$$DITTO DRS BEGIN=00000,END=00000,RECSIZE=80,SCANTYPE=D,INPUT=DISKIN,  XSA 07530
$$DITTO ARGUMENT=C'MAIN'                                                SA 07540
$$DITTO DRS BEGIN=00000,END=00003,SCANTYPE=E,INPUT=DISKIN               SA 07550
$$DITTO DRS BEGIN=00000,END=00003,SCANTYPE=E,INPUT=DISKIN,              SA 07560
$$DITTO DRS BEGIN=00000,END=00003,RECSIZE=80,SCANPOS=1,SCANTYPE=E,     XSA 07570
$$DITTO   INPUT=DISKIN                                                  SA 07580
$$DITTO DRS BEGIN=00000,END=00000,RECSIZE=80,SCANPOS=1,SCANTYPE=K,     XSA 07590
$$DITTO     INPUT=DISKIN,                                              XSA 07600
$$DITTO ARGUMENT=X'FFFFFFFFFFFFFFFF'                                    SA 07610
$$DITTO DRS BEGIN=00000,END=00000,                                     XSA 07620
$$DITTO     INPUT=DISKIN,                                              XSA 07630
$$DITTO  SCANPOS=1,                                                    XSA 07640
$$DITTO  SCANTYPE=K,                                                   XSA 07650
$$DITTO ARGUMENT=X'FFFFFFFFFFFFFFF'                                     SA 07660
/*                                                                      SA 07670
//TSOUPDTE JOB ('A=SX82'),'PAS3 BRAMMER',
//  MSGLEVEL=1,CLASS=G,REGION=256K
// EXEC DITUPDTE,ISER=CDA001,IDSN='OSDITTO.N5798CDA.V01M00',
//      OSER=TSO001,ODSN='TSODITTO.N5798CDA.V01M00'
//STEP1.SYSUT2 DD LABEL=(,NL)
//STEP1.SYSIN DD DATA,DCB=BLKSIZE=80
./ CHANGE SEQFLD=756
./ DELETE SEQ1=011900,SEQ2=013000
**********     INITIAL TERMINAL  MESSAGE AND INPUT          *********** OS013200
./ DELETE SEQ1=013600,SEQ2=013900
./ DELETE SEQ1=014000,SEQ2=014500
         MVI   DHDGSW,X'FF'            NO HEADING IN TSODITTO           OS014610
         MVC   HH3(7),BLANKS           TRAILING BLANKS IN TSODITTO      OS014611
         MVI   HH2,C' '                BLANK                            OS016600
         MVC   HH2+1(116),HH2          PROPOGATION                      OS016601
HEXDP    DS    0H                                                       OS046000
         CLC   HDG1(78),BLANKS         BLANKS ?                         OS046002
         BE    HEXNOSP                                                  OS046003
         MVI   CC,X'0B'                SPACE IMMED. ONE LINE            OS046005
         BAL   R8,PRNT                 PRINT                            OS046006
         MVI   CC,X'09'                SINGLE SPACE                     OS046007
         MVC   CONIO(78),HDG1          MOVE IN ALL HEADINGS             OS046009
         LA    R8,78                                                    OS046012
         STC   R8,PL                                                    OS046013
         BAL   R8,PRNT                 PRINT                            OS046020
HEXNOSP  EQU   *                                                        OS046022
         MVI   CC,X'0B'                SPACE IMMED. ONE LINE            OS046024
         BAL   R8,PRNT                 PRINT                            OS046025
         MVC   CONIO+6(50),0(RA)       50 CHAR FOR TSO HEX              OS046030
         LA    R8,6(R8)                                                 OS046300
./ DELETE SEQ1=046500,SEQ2=046500
./ DELETE SEQ1=046700,SEQ2=046700
         MVC   CONIO(6),DET1           'CHAR  '                         OS046800
         MVC   CONIO+06(01),00(RA)     MOVE                             OS047100
         PACK  CONIO+06(00),CONIO+06(00)   ZONES AND                    OS047200
         MVO   CONIO+07(16),00(16,RA)  WITH OFFSET TO                   OS047300
         MVO   CONIO+22(16),15(16,RA)  NUMERIC POSITIONS                OS047400
         MVO   CONIO+37(16),30(16,RA)                                   OS047500
         MVO   CONIO+52(05),45(05,RA)  50 BYTES MAX FOR TSO HEX         OS047600
./ DELETE SEQ1=047700,SEQ2=047900
         NC    CONIO+6(50),SET         AND OFF ZONES                    OS048000
         TR    CONIO+6(50),HEXTB       TRANSLATE TO HEX CHAR            OS048100
./ DELETE SEQ1=048200,SEQ2=048200
         MVC   CONIO(06),DET2          'ZONE  '                         OS048300
         MVC   CONIO+6(50),0(RA)       REFILL HEX AREA                  OS048500
         NC    CONIO+6(50),SET         AND OFF ZONES                    OS048600
         TR    CONIO+6(50),HEXTB       TRANSLATE TO HEX CHAR            OS048700
./ DELETE SEQ1=048800,SEQ2=048800
         MVC   CONIO(6),DET3           'NUMR  '                         OS048900
./ DELETE SEQ1=049100,SEQ2=049100
HEX0     BC    0,HEX51                 FALL THROUGH 1ST TIME            OS049200
         MVI   HEX0+1,X'F0'            FLIP - BRANCH NEXT TIME          OS049210
         MVC   CONIO+0(56),SCALE+14    'NNNNNN1...5...10 ETC.'          OS049220
         B     HEXDP2                  PRINT                            OS049230
HEX51    MVC   CONIO+6(50),SCALE+70    '...55...60 ETC. '               OS049240
         MVI   CONIO+6,C'1'            '1..55...60 ETC. '               OS049250
         MVC   CONIO(6),SCALE+14       'NNNNNN'                         OS049251
         MVI   HEX0+1,X'00'            FLOP - RESET TO FALL THROUGH     OS049260
HEXDP2   EQU   *                       DONE                             OS049270
DEBLOK   LA    R4,80                   ASSUME CHAR. ONLY                OS056700
         CLI   DPSW,X'FF'              HEX AND CHAR ?                   OS056710
         BNE   DBNOHEX                 NO                               OS056720
         CLI   LISTSW,X'FF'            DP,SP,DPD,SPD ?                  OS056724
         BE    DBNOHEX                 YES, NO HEX-SO USE 80 CHAR       OS056725
         LA    R4,50                   YES                              OS056730
DBNOHEX  EQU   *                                                        OS056740
         CR    R3,R4                   IS REC G.T. LREC ?               OS057000
         MVC   SCALE+14(6),HOLDSEQ+2   6 SIGNIF. DIGITS                 OS057700
         AR    RA,R4                   BUMP TO NEXT LREC                OS058000
         LA    R7,5(R7)                BUMP SCALE LEFT MARGIN COUNT     OS058100
LST      EQU   *                       B HERE FOR TSO                   OS058215
         CLC   HDG1(32),BLANKS                                          OS058216
         BE    LST2                    SKIP PRNT                        OS058217
         LA    R1,32                                                    OS058218
         STC   R1,PL                   PRNT LN                          OS058219
         MVC   CONIO(32),HDG1          HEADING BEFORE DATA IN TSO       OS058220
         BAL   R8,PRNT                 PRINT                            OS058221
         MVC   CONIO(80),BLANKS                                         OS058222
         CLC   FUNCOD(3),=C'TPD'                                        OS058225
         BE    LST2                    SKIP SPACE  IMMED.               OS058226
         CLC   FUNCOD(3),=C'TPV'                                        OS058227
         BE    LST2                    SKIP SPACE  IMMED.               OS058228
         MVI   CC,X'0B'                SPACE IMMED. ONE LINE-DP,DPD,TP  OS058229
         BAL   R8,PRNT                 PRINT                            OS058230
         MVI   CC,X'09'                RESTORE SINGLE SPACE             OS058231
LST2     EQU   *                                                        OS058240
         LR    R1,R4                                                    OS058300
./ DELETE SEQ1=058301,SEQ2=058301
         STC   R1,PL                   PRINT LN                         OS058310
         BCTR  R1,R0               DECR. BY 1 FOR MVC                   OS058320
         STC   R1,LSTMVC+1         STORE MVC LNTH                       OS058330
./ DELETE SEQ1=058400,SEQ2=058600
LSTMVC   MVC   CONIO(80),0(RA)         DTPIO TO PRINT AREA              OS058700
         AR    RA,R4                   BUMP TO NEXT LREC                OS058800
         BZ    LSBLKRET                YES, BRANCH TO RETURN            OS059300
LSBLKRET MVI   HEX0+1,X'00'            RESET HEX FLIP-FLOP SWITCH       OS059610
         B     0(RB)                   RETURN                           OS059620
LOADMODL DC    CL8'DITSOXXX'           TSO DITTO XXX                    OS140300
         MVC   CONIO(132),HH2          TSO HEADING                      OS175700
         MVC   CONIO+10(2),=C' *'      PROPOGATE BLANK*                 OS177200
         MVC   CONIO(132),HH2          TSO HEADING                      OS180000
         MVC   CONIO+53(23),HDG1       ADJUST LEFT FOR TSO              OS180100
         LA    R1,80                                                    OS184600
         MVC   CONIO(132),HH2          TSO HEADING                      OS231900
         MVC   CONIO+53(23),HDG1       ADJUST LEFT FOR TSO              OS231910
         MVC   CONIO(132),HH2          TSO HEADING                      OS262100
         MVC   CONIO(132),HH2          TSO HEADING                      OS282800
./ ENDUP
/*
//PROCSTEP EXEC DITTODSR
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC
//             DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN DD DSN='TSODITTO.N5798CDA.V01M00',DISP=(SHR,KEEP),
//       DCB=(BLKSIZE=1600,RECFM=FB,LRECL=80)
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR
//LKED.SYSIN DD *
 NAME TSODITOO(R)                      OBJECT CODE ONLY (NCAL)
/*
//
//TSOFUNC  JOB ('A=SX82'),'PAS3 BRAMMER',                               FT000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      FT000200
//PROCSTEP EXEC DITTODSR                                                FT000300
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               FT000400
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      FT000500
//             DD DSN=SYS1.MACLIB,DISP=SHR                              FT000600
//ASM.SYSPUNCH DD DUMMY                                                 FT000700
//ASM.SYSIN DD *                                                        FT000800
         TITLE '* * * * * *   FUNC SUB ROUTINE FOR OSDITTO * * * * *'   FT000900
         SPACE 20                                                       FT001000
*********************************************************************** FT001100
*                                                                     * FT001200
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * FT001300
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * FT001400
*                                                                     * FT001500
*********************************************************************** FT001600
         EJECT                                                          FT001700
*********************************************************************** FT001800
**********               FUNCSUB IS CALLED FORM OSDITTO     *********** FT001900
*********************************************************************** FT002000
         SPACE 2                                                        FT002100
         ISEQ  75,80                                                    FT002200
FUNCSUB  START                                                          FT002300
         LR    RD,R5                   PRIME RD                         FT002400
         SAVE  (14,12)                                                  FT002500
         LR    R2,RD                                                    FT002600
         BALR  R6,R0                                                    FT002700
         USING *,R6                                                     FT002800
         LA    RD,SAVEAREA                                              FT002900
         ST    RD,8(R2)            PTR TO MY S.A.                       FT003000
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 FT003100
         B     AROUND              BR BY COPYRIGHT                      FT003200
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               FT003300
         DC    C'08-15-75 VERS.1 MOD.0'                                 FT003400
AROUND   EQU   *                                                        FT003500
         L     R2,0(R1)                GET  MSICCW ADR                  FT003600
         USING MAIN,R2                 ADDRESS MSICCW . . .             FT003700
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           FT003800
         EJECT                                                          FT003900
*********************************************************************** FT004000
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** FT004100
*********************************************************************** FT004200
         SPACE 1                                                        FT004300
LOOKUP   LA    R5,FUNCT            FUNCTION TABLE POINTER IN R5.        FT004400
         LA    RF,12                   FIRST VALID FUNC IS RC = 12      FT004500
         CLI   FUNCOD+2,C' '           BLANK - ONLY 2 CHAR IN FUNCTION  FT004600
         BNE   LKLOOP                  NO, SKIP NEXT INSTR.             FT004700
         MVI   FUNCOD+2,C'U'       OVERLAY POS 3 OP CODE IF BLANK       FT004800
LKLOOP   EQU   *                                                        FT004900
         CLC   FUNCOD,0(R5)        OP CODE MATCH FUNCTION TABLE ?       FT005000
         BE    LKBR                    YES, LOOK FOR BR OR RET          FT005100
         LA    RF,4(RF)                BUMP RC FOR B TAB IN OSDITTO     FT005200
         LA    R5,8(R5)            BUMP INDEX                           FT005300
         CLI   0(R5),X'FF'         END OF TABLE ?                       FT005400
         BE    RETR8                   RETURN WITH R8 AS BRANCH         FT005500
         B     LKLOOP              NO, LOOP FOR NEXT LOOK.              FT005600
LKBR     EQU   *                                                        FT005700
         CLC   4(4,R5),ZERO            DO WE RETURN                     FT005800
         BE    RETURN                  YES, VALID FUNCTION IN OSDITTO   FT005900
         B     4(R5)                   NO, VALID FUNCTION LINK HERE     FT006000
         EJECT                                                          FT006100
*********************************************************************** FT006200
**********         LINKAGE TO NEW FUNCTIONS FROM FUNCSUB    *********** FT006300
*********************************************************************** FT006400
         SPACE 1                                                        FT006500
LST      EQU   *                                                        FT006600
         MVC   LNKNAME,=C'DITSOLST'   IEHLIST MODULE                    FT006700
         B     LINKALL                                                  FT006800
PGM      EQU   *                                                        FT006900
         MVC   LNKNAME,=C'DITSOPGM'    IEHPROGM MODULE                  FT007000
         B     LINKALL                                                  FT007100
PDS      EQU   *                                                        FT007200
         MVC   LNKNAME,=C'DITSOPDS'    IEBPTPCH MODULE                  FT007300
         B     LINKALL                                                  FT007400
QV       EQU   *                                                        FT007500
         MVC   LNKNAME,=C'DITSOQV '    QSAM VSAM MODULE                 FT007600
         B     LINKALL                                                  FT007700
DAS      EQU   *                                                        FT007800
         MVC   LNKNAME,=C'DITSODAS'    IEHDASDR MODULE                  FT007900
         B     LINKALL                                                  FT008000
         EJECT                                                          FT008100
*********************************************************************** FT008200
**************     PREPARE LINK EPLOC FIELD            **************** FT008300
*********************************************************************** FT008400
         SPACE 1                                                        FT008500
LINKALL  EQU   *                                                        FT008600
         LA    R1,PARM                 MSICCW                           FT008700
         LINK  EPLOC=LNKNAME                                            FT008800
         B     LINKRET(RF)             B INTO B TABLE                   FT008900
LINKRET  B     RETNORM                                                  FT009000
         B     RETR8                   FILLER - WILL NOT BE USED        FT009100
         B     RETIRPT                                                  FT009200
PARM     DC    A(0)                    STORE MSICCW ADR HERE            FT009300
         EJECT                                                          FT009400
*********************************************************************** FT009500
*******************          RETURN MECHANISM      ******************** FT009600
*********************************************************************** FT009700
         SPACE 1                                                        FT009800
RETNORM  EQU   *                       RC = 0    B     CONSOLE          FT009900
         LA    RF,0(0,0)               RC = 0 - NORMAL RETURN           FT010000
         B     RETURN                                                   FT010100
RETR8    EQU   *                       RC = 4    B     0(R8)            FT010200
         LA    RF,4(0,0)               RC = 4 - INVALID FUNCTION        FT010300
         B     RETURN                                                   FT010400
RETIRPT  EQU   *                       RC = 8    B      CHKIRPT         FT010500
         LA    RF,8                    RC = 8 - INTERRUPTED FUNCTION    FT010600
RETURN   EQU   *                                                        FT010700
         L     RD,4(RD)                PRIME RD                         FT010800
         RETURN (14,12),RC=(15)                                         FT010900
         EJECT                                                          FT011000
*********************************************************************** FT011100
**********         FUNCTION CODE TABLE FOR FUNCSUB          *********** FT011200
*********************************************************************** FT011300
         SPACE 1                                                        FT011400
FUNCT    DC    C'CCU '                                                  FT011500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT011600
         DC    C'CPU '                                                  FT011700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT011800
         DC    C'CTU '                                                  FT011900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT012000
         DC    C'CTS '                                                  FT012100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT012200
         DC    C'TCU '                                                  FT012300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT012400
         DC    C'TPU '                                                  FT012500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT012600
         DC    C'TPD '                                                  FT012700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT012800
         DC    C'TDU '                                                  FT012900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT013000
         DC    C'TDD '                                                  FT013100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT013200
         DC    C'TPV '                                                  FT013300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT013400
         DC    C'TDV '                                                  FT013500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT013600
         DC    C'TTU '                                                  FT013700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT013800
         DC    C'WTM '                                                  FT013900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT014000
         DC    C'FSF '                                                  FT014100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT014200
         DC    C'BSF '                                                  FT014300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT014400
         DC    C'FSR '                                                  FT014500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT014600
         DC    C'BSR '                                                  FT014700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT014800
         DC    C'REW '                                                  FT014900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT015000
         DC    C'DSE '                                                  FT015100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT015200
         DC    C'DDU '                                                  FT015300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT015400
         DC    C'DRL '                                                  FT015500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT015600
         DC    C'DID '                                                  FT015700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT015800
         DC    C'EOJ '                                                  FT015900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT016000
         DC    C'CCS '                                                  FT016100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT016200
         DC    C'RUN '                                                  FT016300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT016400
         DC    C'CDU '                                                  FT016500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT016600
         DC    C'CCL '                                                  FT016700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT016800
         DC    C'INT '                                                  FT016900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT017000
         DC    C'ERT '                                                  FT017100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT017200
         DC    C'TRL '                                                  FT017300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT017400
         DC    C'TRS '                                                  FT017500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT017600
         DC    C'DRS '                                                  FT017700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT017800
         DC    C'DDD '                                                  FT017900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT018000
         DC    C'EOF '                                                  FT018100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT018200
         DC    C'SDU '                                                  FT018300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT018400
         DC    C'SDD '                                                  FT018500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT018600
         DC    C'DPU '                                                  FT018700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT018800
         DC    C'DPD '                                                  FT018900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT019000
         DC    C'SPU '                                                  FT019100
         DC    AL4(0)                  NO BR IN THIS MODULE             FT019200
         DC    C'SPD '                                                  FT019300
         DC    AL4(0)                  NO BR IN THIS MODULE             FT019400
         DC    C'SRS '                                                  FT019500
         DC    AL4(0)                  NO BR IN THIS MODULE             FT019600
         DC    C'XXX '                                                  FT019700
         DC    AL4(0)                  NO BR IN THIS MODULE             FT019800
         DC    C'TTR '                                                  FT019900
         DC    AL4(0)                  NO BR IN THIS MODULE             FT020000
         DC    C'LCU '                 LISTCTLG                         FT020100
         B     LST                                                      FT020200
         DC    C'LPU '                 LISTPDS                          FT020300
         B     LST                                                      FT020400
         DC    C'LVU '                 LISTVTOC                         FT020500
         B     LST                                                      FT020600
         DC    C'LSU '                 LIST SPACE ON VOLUME             FT020700
         B     LST                                                      FT020800
         DC    C'CAT '                 CATLG                            FT020900
         B     PGM                                                      FT021000
         DC    C'UNC '                 UNCATLG                          FT021100
         B     PGM                                                      FT021200
         DC    C'SCR '                 SCRATCH                          FT021300
         B     PGM                                                      FT021400
         DC    C'REN '                 RENAME                           FT021500
         B     PGM                                                      FT021600
         DC    C'PRT '                 PRINT                            FT021700
         B     PDS                                                      FT021800
         DC    C'PUN '                 PUNCH                            FT021900
         B     PDS                                                      FT022000
         DC    C'DUM '                 DUMP                             FT022100
         B     DAS                     DASDR                            FT022200
         DC    C'RES '                 RESTORE                          FT022300
         B     DAS                     DASDR                            FT022400
         DC    C'CQU '                 CARD TO QSAM                     FT022500
         B     QV                      QSAM VSAM MODULE                 FT022600
         DC    C'CQS '                 CARD TO QSAM WITH RESEQ          FT022700
         B     QV                      QSAM VSAM MODULE                 FT022800
         DC    C'QCU '                 QSAM TO CARD                     FT022900
         B     QV                      QSAM VSAM MODULE                 FT023000
         DC    C'QPU '                 QSAM TO PRINT                    FT023100
         B     QV                      QSAM VSAM MODULE                 FT023200
         DC    C'QDU '                 QSAM TO PRINT                    FT023300
         B     QV                      QSAM VSAM MODULE                 FT023400
         DC    C'VDU '                 VSAM TO PRINT                    FT023500
         B     QV                      QSAM VSAM MODULE                 FT023600
         DC    C'VPU '                 VSAM TO PRINT                    FT023700
         B     QV                      QSAM VSAM MODULE                 FT023800
         DC    C'QQU '                 QSAM TO QSAM                     FT023900
         B     QV                      QSAM VSAM MODULE                 FT024000
         DC    X'FF'                                                    FT024100
         EJECT                                                          FT024200
*********************************************************************** FT024300
*******************          STORAGE AND EQUATES   ******************** FT024400
*********************************************************************** FT024500
         SPACE 1                                                        FT024600
         DS    0F                                                       FT024700
ZERO     DC    AL4(0)                                                   FT024800
SAVEAREA DS    18F                                                      FT024900
LNKNAME  DC    CL8'LNKNAME'           MOVE NAME HERE                    FT025000
         EJECT                                                          FT025100
         COPY  DITTODS1                                                 FT025200
         SPACE 1                                                        FT025300
         COPY  DITTODS2                                                 FT025400
         CSECT                                                          FT025500
         END   FUNCSUB                                                  FT025600
/*                                                                      FT025700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              FT025800
//LKED.SYSIN DD *                                                       FT025900
 NAME TSOFUNC(R)                                                        FT026000
/*                                                                      FT026100
//                                                                      FT026200
//TSOPRNT  JOB ('A=SX82'),'PAS3 BRAMMER',                               TR026300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TR026400
//PROCSTEP EXEC DITTODSR                                                TR026500
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               TR026600
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      TR026700
//             DD DSN=SYS1.MACLIB,DISP=SHR                              TR026800
//ASM.SYSPUNCH DD DUMMY                                                 TR026900
//ASM.SYSIN DD *                                                        TR027000
         TITLE '* * * * * *   PRNT TSO ROUTINE FOR OSDITTO * * * * *'   TR027100
         SPACE 20                                                       TR027200
*********************************************************************** TR027300
*                                                                     * TR027400
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * TR027500
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * TR027600
*                                                                     * TR027700
*********************************************************************** TR027800
         EJECT                                                          TR027900
*********************************************************************** TR028000
**********               PRNTSUB IS CALLED FORM OSDITTO     *********** TR028100
*********************************************************************** TR028200
         SPACE 2                                                        TR028300
         ISEQ  75,80                                                    TR028400
PRNTSUB  START                                                          TR028500
         SAVE  (14,12)                                                  TR028600
         LR    R2,RD                                                    TR028700
         BALR  R6,R0                                                    TR028800
         USING *,R6                                                     TR028900
         LA    RD,SAVEAREA                                              TR029000
         ST    RD,8(R2)            PTR TO MY S.A.                       TR029100
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 TR029200
         B     AROUND              BR BY COPYRIGHT                      TR029300
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               TR029400
         DC    C'08-15-75 VERS.1 MOD.0'                                 TR029500
AROUND   L     R2,0(R1)                GET MSICCW ADDRESS               TR029600
         USING MAIN,R2                 ADDRESS MSICCW . . .             TR029700
         EJECT                                                          TR029800
*********************************************************************** TR029900
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** TR030000
*********************************************************************** TR030100
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       TR030200
         BO    RETIRPT                 B   CHKIRT                       TR030300
         TM    PRTRDCB+48,X'10'    OPEN SUCCESSFUL ?                    TR030400
         BO    PROPENOK            YES                                  TR030500
         LA    R3,PRTRDCB          PTR FOR OPEN                         TR030600
         OPEN  ((3),(OUTPUT))                                           TR030700
         TM    PRTRDCB+48,X'10'    OPEN SUCCESSFUL ?                    TR030800
         BO    PROPENOK            YES                                  TR030900
         CLI   CNTRLSW,X'00'           OPER AND OPEN FAIL?              TR030910
         BE    NOU101                  YES, SKIP ABEND                  TR030920
         ABEND 101                     NO, ABEND U101 SYSPRINT CAN'T OP TR030930
NOU101   EQU   *                                                        TR030940
         MVC   CONIO(8),PRTRDCB+40                                      TR031000
         MVC   CONIO+8(15),OPENFAIL        ' DD OPEN FAILED'            TR031100
         MVI   MSLN,23                                                  TR031200
         B     TELUSER2                ISSUE MSG                        TR031300
PROPENOK EQU   *                                                        TR031400
         CLI   FLIFLOSW,1          IS DRS PRNT TO BE DONE               TR031500
         BE    PRNTDRS             YES                                  TR031600
         CLI   TYP,X'00'               PRINT SUPPRESSED FOR DRS ?       TR031700
         BNE   NORMRET                 YES, EXIT                        TR031800
PRNTDRS  EQU   *                   SKIP SUPPRESS TEST                   TR031900
         SR    R1,R1                                                    TR032000
         IC    R1,CC                   CCW OP CODE                      TR032100
         SRL   R1,3(R0)                TRANSLATE TO # OF PRINTLINES     TR032200
         AH    R1,LINCT                ADD   TO COUNTER                 TR032300
         STH   R1,LINCT                                                 TR032400
         IC    R1,PL                   GET PRINT LENGTH                 TR032500
         BCTR  R1,R0               DECREMENT R1 BY 1                    TR032600
         STC   R1,PRMVC+1              STORE COUNT LNTH IN MOVE         TR032700
         MVI   PRTIO,C' '                                               TR032800
         MVC   PRTIO+1(131),PRTIO      CLEAR PRINTLINE                  TR032900
         CLI   INPUT,X'FF'             SUPPRESS SKIP TO CHAN 1          TR033000
         BE    PR1                                                      TR033100
         CLI   LINCT+1,X'3A'           AT END OF PAGE ? (58 LINES/PAGE) TR033200
         BNH   PR1                     NO                               TR033300
         MVI   LINCT+1,X'01'           YES, RESET LINCT                 TR033400
         CLI   CC,X'8B'                IS THIS SKIP TO CHAN 1 ?         TR033500
         BE    PR1BYPAS                                                 TR033600
         CLI   CC,X'13'                IF SPACE IMMED. BYPASS DATA MOVE TR033700
         MVI   CC,X'89'                SET TO WRITE & SKIP TO CHAN 1    TR033800
         BE    PR1BYPAS                                                 TR033900
PR1      EQU   *                                                        TR034000
         CLI   CC,X'13'            SPACE IMMED. ?                       TR034100
         BE    PR1BYPAS            YES, SKIP MVC (PRINT BLANK LINE)     TR034200
         CLI   CC,X'0B'                SPACE IMMED ?                    TR034210
         BE    PR1BYPAS                PRINT BLANK LINE FOR TSO         TR034220
PRMVC    MVC   PRTIO,CONIO         MOVE PRTLINE TO QSAM BUFFER          TR034300
PR1BYPAS EQU   *                                                        TR034400
         MVC   CCSUB(1),CC             PLUG CCSUB                       TR034500
         LA    RD,SAVEAREA             PRIME R13 BEFORE BALR MACRO      TR034600
         PUT   PRTRDCB,CCSUB                                            TR034700
         EJECT                                                          TR034800
*********************************************************************** TR034900
*******************          RETURN MECHANISM      ******************** TR035000
*********************************************************************** TR035100
         SPACE 1                                                        TR035200
NORMRET  EQU   *                                                        TR035300
         LA    RF,0(0,0)               RC=0                             TR035400
         B     RETURN                                                   TR035500
RETIRPT  EQU   *                       B   CHKIRPT                      TR035600
         LA    RF,4(0,0)               RC = 4                           TR035700
         B     RETURN                                                   TR035800
TELUSER2 EQU   *                                                        TR035900
         LA    RF,8                RC = 8                               TR036000
RETURN   EQU   *                                                        TR036100
         L     RD,4(RD)                PRIME RD                         TR036200
         RETURN (14,12),RC=(15)                                         TR036300
         EJECT                                                          TR036400
*********************************************************************** TR036500
**********                 STORAGE AND EQUATES              *********** TR036600
*********************************************************************** TR036700
         SPACE 1                                                        TR036800
         DS    0F                                                       TR036900
SAVEAREA DS    18F                                                      TR037000
CCSUB    DS    CL1                     CC FOR PRNTSUB                   TR037100
PRTIO    DS    CL132               PRINT BUFFER                         TR037200
         EJECT                                                          TR037300
         COPY  DITTODS1                                                 TR037400
         SPACE 1                                                        TR037500
         COPY  DITTODS2                                                 TR037600
         CSECT                                                          TR037700
         END   PRNTSUB                                                  TR037800
/*                                                                      TR037900
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TR038000
//LKED.SYSIN DD *                                                       TR038100
 NAME TSOPRNT(R)                                                        TR038200
/*                                                                      TR038300
//                                                                      TR038400
//TSOWTOR  JOB ('A=SX82'),'PAS3 BRAMMER',                               TG038500
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TG038600
//PROCSTEP EXEC DITTODSR                                                TG038700
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               TG038800
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      TG038900
//             DD DSN=SYS1.MACLIB,DISP=SHR                              TG039000
//ASM.SYSPUNCH DD DUMMY                                                 TG039100
//ASM.SYSIN DD *                                                        TG039200
         TITLE '* * * * * *   TPUTTGET ROUTINE FOR OSDITTO * * * * *'   TG039300
         SPACE 20                                                       TG039400
*********************************************************************** TG039500
*                                                                     * TG039600
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * TG039700
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * TG039800
*                                                                     * TG039900
*********************************************************************** TG040000
         EJECT                                                          TG040100
*********************************************************************** TG040200
**********               WTORSUB IS CALLED FORM OSDITTO     *********** TG040300
*********************************************************************** TG040400
         SPACE 2                                                        TG040500
         ISEQ  75,80                                                    TG040600
WTORSUB  START                                                          TG040700
         SAVE  (14,12)                                                  TG040800
         LR    R2,RD                                                    TG040900
         BALR  R6,R0                                                    TG041000
         USING *,R6                                                     TG041100
         LA    RD,SAVEAREA                                              TG041200
         ST    RD,8(R2)            PTR TO MY S.A.                       TG041300
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 TG041400
         B     AROUND              BR BY COPYRIGHT                      TG041500
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               TG041600
         DC    C'08-15-75 VERS.1 MOD.0'                                 TG041700
AROUND   L     R2,0(R1)                GET MSICCW ADDRESS               TG041800
         USING MAIN,R2                 ADDRESS MSICCW . . .             TG041900
         EJECT                                                          TG042000
*********************************************************************** TG042100
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** TG042200
*********************************************************************** TG042300
         SPACE 1                                                        TG042400
WRTCON   CLI   P,0                 USING STRING PARAMS                  TG042500
         BE    WRTCON1             NO,                                  TG042600
         MVC   CONIO(44),P1        YES, MOVE PARAM INTO READ AREA       TG042700
         MVC   P1(176),P2               PARAMS UP ONE                   TG042800
         IC    R0,P                DECREMENT                            TG042900
         BCTR  R0,R0                PARAMETER COUNTER                   TG043000
         STC   R0,P                                                     TG043100
         OC    CONIO(44),BLANKS                                         TG043200
         B     NORMRET             RETURN                               TG043300
WRTCON1  EQU   *                                                        TG043400
         MVC   TPUTMSG(72),CONIO   PRIME MSG AREA                       TG043500
         MVC   CONIO(80),BLANKS        CLEAR REPLY AREA                 TG043600
         SPACE 1                                                        TG043700
*********************************************************************** TG043800
**********     TERMINAL  TPUT FOLLOWED BY A TGET     ****************** TG043900
*********************************************************************** TG044000
         SPACE 1                                                        TG044100
TPUT     EQU   *                                                        TG044200
         LA    R1,TPUTMSG              BUF ADR IN R1. OPTNS=B'00000000' TG044300
         SR    R0,R0                   CLEAR                            TG044310
         IC    R0,MSLN                 MSG LEN IN R0. TJID=X'0000'      TG044400
         TPUT  (1),(0),R                                                TG044500
         B     TPUTRET(RF)             USE RETURN CODE                  TG044600
TPUTRET  B     TPUTOK                  RC=0                             TG044610
         B     TPERR4                  RC=4                             TG044620
         B     TPERR8                  RC=8                             TG044630
         B     TPERR12                 RC=12                            TG044640
         B     TPERR16                 RC=16                            TG044650
         B     TPERR20                 RC=20                            TG044660
TPERR4   ABEND 604                     RC=4                             TG044670
TPERR8   ABEND 608                     RC=8                             TG044680
TPERR12  ABEND 612                     RC=12                            TG044690
TPERR16  ABEND 616                     RC=16                            TG044700
TPERR20  ABEND 620                     RC=20                            TG044710
TPUTMSG  DC    CL72'*'             BUFFER                               TG044900
TPUTOK   EQU   *                                                        TG045000
TGET     EQU   *                                                        TG045100
         LA    R1,CONIO                BUF ADR IN R1. OPTNS=B'00000000' TG045200
ERR12A   DS    0H                      RECOVER E.P.                     TG045210
         LA    RC,TGETOPTN                                              TG045300
         SLL   RC,24                   MOVE X'80' TO LEFT MOST BYTE     TG045400
         OR    R1,RC                   SET OPTIONS=B'10000000'          TG045500
         SR    R0,R0                   CLEAR                            TG045510
         IC    R0,RPLN                 MSG LEN IN R0. TJID=X'0000'      TG045600
         TGET  (1),(0),R                                                TG045700
         B     TGETRET(RF)             USE RETURN CODE                  TG045800
TGETRET  B     TGETOK                  RC=0                             TG045810
         B     TGERR4                  RC=4                             TG045820
         B     TGERR8                  RC=8                             TG045830
         B     TGERR12                 RC=12                            TG045840
         B     TGERR16                 RC=16                            TG045850
         B     TGERR20                 RC=20                            TG045860
TGERR4   ABEND 704                     RC=4                             TG045870
TGERR8   ABEND 708                     RC=8                             TG045880
TGERR12  DS    0H                      RC=12                            TG045890
         LA    R1,DROPIT               THROW EXCESS AWAY                TG045892
         MVI   RPLN,72                 PLUG FOR MAX                     TG045893
         B     ERR12A                  GO GET EXCESS                    TG045894
DROPIT   DS    CL72                    BIT BUCKET                       TG045896
TGERR16  ABEND 716                     RC=16                            TG045900
TGERR20  ABEND 720                     RC=20                            TG045910
TGETOPTN EQU   B'10000000'             TGET OPTION SRTING               TG046100
TGETOK   EQU   *                                                        TG046200
         OC    CONIO(80),BLANKS        FORCES  UPPER CASE IN REPLY AREA TG046300
         MVI   P,X'00'             SET PARAM STRING COUNTER = 0         TG046400
         EJECT                                                          TG046500
*********************************************************************** TG046600
*******************          RETURN MECHANISM      ******************** TG046700
*********************************************************************** TG046800
         SPACE 1                                                        TG046900
NORMRET  EQU   *                                                        TG047000
         LA    RF,0(0,0)               RC=0                             TG047100
         B     RETURN                                                   TG047200
RETIRPT  EQU   *                       B   CHKIRPT                      TG047300
         LA    RF,4(0,0)               RC = 4                           TG047400
RETURN   EQU   *                                                        TG047500
         L     RD,4(RD)                PRIME RD                         TG047600
         RETURN (14,12),RC=(15)                                         TG047700
         EJECT                                                          TG047800
*********************************************************************** TG047900
**********                 STORAGE AND EQUATES              *********** TG048000
*********************************************************************** TG048100
         SPACE 1                                                        TG048200
         DS    0F                                                       TG048300
SAVEAREA DS    18F                                                      TG048400
         EJECT                                                          TG048500
         COPY  DITTODS1                                                 TG048600
         SPACE 1                                                        TG048700
         COPY  DITTODS2                                                 TG048800
         CSECT                                                          TG048900
         END   WTORSUB                                                  TG049000
/*                                                                      TG049100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TG049200
//LKED.SYSIN DD *                                                       TG049300
 NAME TSOWTOR(R)                                                        TG049400
/*                                                                      TG049500
//                                                                      TG049600
//TSOWTO   JOB ('A=SX82'),'PAS3 BRAMMER',                               TP049700
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TP049800
//PROCSTEP EXEC DITTODSR                                                TP049900
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               TP050000
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      TP050100
//             DD DSN=SYS1.MACLIB,DISP=SHR                              TP050200
//ASM.SYSPUNCH DD DUMMY                                                 TP050300
//ASM.SYSIN DD *                                                        TP050400
         TITLE '* * * * * *   TPUT SUB ROUTINE FOR OSDITTO * * * * *'   TP050500
         SPACE 20                                                       TP050600
*********************************************************************** TP050700
*                                                                     * TP050800
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * TP050900
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * TP051000
*                                                                     * TP051100
*********************************************************************** TP051200
         EJECT                                                          TP051300
*********************************************************************** TP051400
**********               WTOSUB  IS CALLED FORM OSDITTO     *********** TP051500
*********************************************************************** TP051600
         SPACE 1                                                        TP051700
         ISEQ  75,80                                                    TP051800
WTOSUB   START                                                          TP051900
         SAVE  (14,12)                                                  TP052000
         LR    R2,RD                                                    TP052100
         BALR  R6,R0                                                    TP052200
         USING *,R6                                                     TP052300
         LA    RD,SAVEAREA                                              TP052400
         ST    RD,8(R2)            PTR TO MY S.A.                       TP052500
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 TP052600
         B     AROUND              BR BY COPYRIGHT                      TP052700
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               TP052800
         DC    C'08-15-75 VERS.1 MOD.0'                                 TP052900
AROUND   L     R2,0(R1)                GET MSICCW ADDRESS               TP053000
         USING MAIN,R2                 ADDRESS MSICCW . . .             TP053100
         EJECT                                                          TP053200
*********************************************************************** TP053300
**********               CONSOLE - WRITE ONLY  (WTO)        *********** TP053400
*********************************************************************** TP053500
         SPACE 1                                                        TP053600
*********************************************************************** TP053700
**********          TERMINAL OUTPUT - TPUT ONLY          *************  TP053800
*********************************************************************** TP053900
WCON2    EQU   *                                                        TP054000
         SR    R0,R0                   CLEAR                            TP054010
         IC    R0,MSLN                 MSG LEN IN R0. TJID=X'0000'      TP054100
         LA    R1,CONIO                BUF ADR IN R1. OPTNS=B'00000000' TP054200
         TPUT  (1),(0),R                                                TP054300
         B     TPUTRET(RF)             USE RETURN CODE                  TP054400
TPUTRET  B     TPUTOK                  RC=0                             TP054410
         B     TPERR4                  RC=4                             TP054420
         B     TPERR8                  RC=8                             TP054430
         B     TPERR12                 RC=12                            TP054440
         B     TPERR16                 RC=16                            TP054450
         B     TPERR20                 RC=20                            TP054460
TPERR4   ABEND 604                     RC=4                             TP054470
TPERR8   ABEND 608                     RC=8                             TP054480
TPERR12  ABEND 612                     RC=12                            TP054490
TPERR16  ABEND 616                     RC=16                            TP054500
TPERR20  ABEND 620                     RC=20                            TP054510
TPUTOK   EQU   *                                                        TP054700
         EJECT                                                          TP054800
*********************************************************************** TP054900
*******************          RETURN MECHANISM      ******************** TP055000
*********************************************************************** TP055100
         SPACE 1                                                        TP055200
RETNORM  EQU   *                       RC = 0                           TP055300
         LA    RF,0(0,0)               RC=0                             TP055400
         B     RETURN                                                   TP055500
RETIRPT  EQU   *                       B   CHKIRPT                      TP055600
         LA    RF,4(0,0)               RC = 4                           TP055700
RETURN   EQU   *                                                        TP055800
         L     RD,4(RD)                PRIME RD                         TP055900
         RETURN (14,12),RC=(15)                                         TP056000
         EJECT                                                          TP056100
*********************************************************************** TP056200
**********                 STORAGE AND EQUATES              *********** TP056300
*********************************************************************** TP056400
         SPACE 1                                                        TP056500
         DS    0F                                                       TP056600
SAVEAREA DS    18F                                                      TP056700
         EJECT                                                          TP056800
         COPY  DITTODS1                                                 TP056900
         SPACE 1                                                        TP057000
         COPY  DITTODS2                                                 TP057100
         CSECT                                                          TP057200
         END   WTOSUB                                                   TP057300
/*                                                                      TP057400
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TP057500
//LKED.SYSIN DD *                                                       TP057600
 NAME TSOWTO(R)                                                         TP057700
/*                                                                      TP057800
//                                                                      TP057900
//TSOQV    JOB ('A=SX82'),'PAS3 BRAMMER',                               TQ058000
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TQ058100
//PROCSTEP EXEC DITTODSR                                                TQ058200
// EXEC ASMFCL,PARM.LKED='LIST,XREF,NCAL'                               TQ058300
//ASM.SYSLIB   DD DSN=*.PROCSTEP.EXECSTEP.DITTOMAC                      TQ058400
//             DD DSN=SYS1.MACLIB,DISP=SHR                              TQ058500
//ASM.SYSPUNCH DD DUMMY                                                 TQ058600
//ASM.SYSIN DD *                                                        TQ058700
         TITLE '* * * * * *    QSAMVSAM ROUTINE FOR TSODITTO  * * * *'  TQ058800
         SPACE 20                                                       TQ058900
*********************************************************************** TQ059000
*                                                                     * TQ059100
*             5798-CDA  COPYRIGHT IBM CORPORATION  1975               * TQ059200
*     REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO. 120-2083     * TQ059300
*                                                                     * TQ059400
*********************************************************************** TQ059500
         EJECT                                                          TQ059600
*********************************************************************** TQ059700
**********              DITTOQV  IS LINKED FROM OSDITTO     *********** TQ059800
*********************************************************************** TQ059900
         SPACE 2                                                        TQ060000
         ISEQ  75,80                                                    TQ060100
DITTOQV  START                                                          TQ060200
         SAVE  (14,12)                                                  TQ060300
         LR    R2,RD                                                    TQ060400
         BALR  R6,R0                                                    TQ060500
         USING *,R6,R5                                                  TQ060600
         LR    R5,R6                                                    TQ060700
         AH    R5,BUMP                                                  TQ060800
         LA    RD,SAVEAREA                                              TQ060900
         ST    RD,8(R2)            PTR TO MY S.A.                       TQ061000
         ST    R2,4(RD)            PTR TO PREVIOUS S.A.                 TQ061100
         B     AROUND              BR BY COPYRIGHT                      TQ061200
COPYRT   DC    C'5798-CDA COPYRIGHT IBM CORPORATION 1975'               TQ061300
         DC    C'08-15-75 VERS.1 MOD.0'                                 TQ061400
BUMP     DC    H'4096'                                                  TQ061500
AROUND   L     R2,0(R1)                GET  MSICCW ADR                  TQ061600
         USING MAIN,R2                 ADDRESS MSICCW . . .             TQ061700
         ST    R2,PARM                 PASS MSICCW ADR TO SUB           TQ061800
         EJECT                                                          TQ061900
*********************************************************************** TQ062000
**********         VALIDATE FUNCTION CODE AND BRANCH ACCORDINGLY ****** TQ062100
*********************************************************************** TQ062200
         SPACE 1                                                        TQ062300
         CLC   FUNCOD,=C'CQU'                                           TQ062400
         BE    CQ                                                       TQ062500
         CLC   FUNCOD,=C'CQS'                                           TQ062600
         BE    CQS                                                      TQ062700
         CLC   FUNCOD,=C'QCU'                                           TQ062800
         BE    QC                                                       TQ062900
         CLC   FUNCOD,=C'QPU'                                           TQ063000
         BE    QP                                                       TQ063100
         CLC   FUNCOD,=C'QDU'                                           TQ063200
         BE    QD                                                       TQ063300
         CLC   FUNCOD,=C'VPU'                                           TQ063400
         BE    VP                                                       TQ063500
         CLC   FUNCOD,=C'VDU'                                           TQ063600
         BE    VD                                                       TQ063700
         CLC   FUNCOD,=C'QQU'                                           TQ063800
         BE    QQ                                                       TQ063900
         B     RETR8                   INVALID FUNCTION                 TQ064000
         EJECT                                                          TQ064100
*********************************************************************** TQ064200
**********          CARD TO QSAM - BLOCKED VIA JCL OR PROC  *********** TQ064300
**********      WITH OR WITHOUT SEQ. NUMBERS & DECKNAME     *********** TQ064400
*********************************************************************** TQ064500
         SPACE 1                                                        TQ064600
CQ       EQU   *                                                        TQ064700
         MVI   SEQSW+1,X'F0'       SW TO BYPASS RE-SEQUENCING           TQ064800
         B     CDCD1                                                    TQ064900
CQS      EQU   *                                                        TQ065000
         CLI   CNTRLSW,X'00'       CONSOLE OPERATION ?                  TQ065100
         BE    CTCOM1              YES,                                 TQ065200
         TM    CT,X'08'                DECKTYPE GIVEN ?                 TQ065300
         BO    CTCOM1                  OK                               TQ065400
         MVC   CONIO(17),=C'DECKTYPE= MISSING'                          TQ065500
         MVI   MSLN,17                                                  TQ065600
         B     TELUSER2                                                 TQ065700
CTCOM1   EQU   *                                                        TQ065800
TAPSQ    MVI   SEQSW+1,X'00'       SW TO CAUSE RE-SEQUENCING            TQ065900
         LA    R7,1010             PAGE & LINE # FOR RPG & COBOL DECKS  TQ066000
         LA    RA,HOLDSEQ                                               TQ066100
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ066200
         BNE   GETDT               NO, GO GET FROM CONSOLE              TQ066300
         LA    R9,CDCD1                                                 TQ066400
         MVC   CONIO(3),DECKTYPE                                        TQ066500
         B     CHK1                                                     TQ066600
GETDT    MVC   CONIO(6),XXXDASH        'XXX - '                         TQ066700
         MVC   CONIO+6(8),DT           'DECKTYPE'                       TQ066800
         MVI   WCNCCW+7,X'0E'                                           TQ066900
         MVI   RCNCCW+7,X'03'                                           TQ067000
         LA    R9,GETDK                                                 TQ067100
         BAL   R8,WRTCON                                                TQ067200
CHK1     CLC   CONIO(3),=C'BAL'    DECKTYPE = BAL ?                     TQ067300
         BNE   CHK2                NO,                                  TQ067400
         LA    R7,10               YES, SET 1ST CARD # = 0001           TQ067500
         LA    R3,CONIO+75         SEQ. IN CC 76                        TQ067600
         MVI   ALT2+1,X'04'        SEQ. LNGTH = 5                       TQ067700
         LA    R8,CONIO+72         NAME IN CC 73                        TQ067800
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         TQ067900
         MVI   ALT1+1,X'02'        NAME LNGTH = 3                       TQ068000
         MVI   DCKMSG+10,C'3'                                           TQ068100
         MVI   GETDK+11,X'03'                                           TQ068200
         LA    RA,3(RA)                                                 TQ068300
         B     0(R9)                                                    TQ068400
CHK2     CLC   CONIO(3),=C'RPG'    DECKTYPE = RPG ?                     TQ068500
         BNE   CHK3                NO,                                  TQ068600
         LA    R3,CONIO            YES, SEQ IN CC 01                    TQ068700
         MVI   ALT2+1,X'04'        SEQ LNGTH = 5                        TQ068800
         LA    R8,CONIO+74         NAME IN CC 75                        TQ068900
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         TQ069000
         MVI   ALT1+1,X'05'        NAME LNGTH =6                        TQ069100
         MVI   DCKMSG+10,C'6'                                           TQ069200
         MVI   GETDK+11,X'06'                                           TQ069300
         LA    RA,3(RA)                                                 TQ069400
         B     0(R9)                                                    TQ069500
CHK3     CLC   CONIO(3),=C'COB'    DECKTYPE = COBOL ?                   TQ069600
         BNE   BADDT               NO, BAD FORMAT                       TQ069700
         LA    R3,CONIO            YES, SEQ IN CC 01                    TQ069800
         MVI   ALT2+1,X'05'        SEQ LNGTH = 6                        TQ069900
         LA    R8,CONIO+72         NAME IN CC 73                        TQ070000
         ST    R8,DECKADR          SAVE POINTER TO DECKNAME CC.         TQ070100
         MVI   ALT1+1,X'07'        NAME LNGTH = 8                       TQ070200
         LA    RA,2(RA)                                                 TQ070300
         MVI   DCKMSG+10,C'8'                                           TQ070400
         MVI   GETDK+11,X'08'                                           TQ070500
         B     0(R9)                                                    TQ070600
GETDK    MVC   CONIO(18),DCKMSG    CONSOLE MSG                          TQ070700
         MVI   WCNCCW+7,X'12'      'DECK NAME X CHARS.'                 TQ070800
         MVI   RCNCCW+7,X'08'                                           TQ070900
         BAL   R8,WRTCON                                                TQ071000
         MVC   DECKNAME,CONIO      SAVE OPERATOR REPLY                  TQ071100
CDCD1    SR    R4,R4               ZERO CARD COUNTER FOR LOGOUT MSG     TQ071200
         ST    R7,TPSQNUM          SAVE SEQ. NUMBER                     TQ071300
         ST    R3,SEQADR           SAVE POINTER TO SEQUENCE CC.         TQ071400
CDCD2    BAL   R8,CDRD             READ CARD                            TQ071500
         CLI   EOF,X'FF'           /*, /+, OR HDWR END OF FILE ?        TQ071600
         BE    CCEND7                                                   TQ071700
SEQSW    BC    15,PUTIT                B IF NO RESEQ                    TQ071800
         L     R8,DECKADR          SAVE POINTER TO DECKNAME CC.         TQ071900
ALT1     MVC   0(8,R8),DECKNAME    MOVE IN DECKNAME                     TQ072000
         MVI   ESW,X'FF'           DO NOT SUPPRESS LEAD ZEROS           TQ072100
         L     R7,TPSQNUM              LOAD FOR USE                     TQ072200
         BAL   R8,DECCVT           CONVERT REG 7 TO EBCDIC              TQ072300
ALT2     MVC   0(4,R3),0(RA)       MOVE SEQ NUMBER                      TQ072400
         LA    R7,10(R7)           BUMP SEQ COUNTER                     TQ072500
         ST    R7,TPSQNUM              SAVE                             TQ072600
PUTIT    EQU   *                       PREPARE TO PUT                   TQ072700
         TM    QSAMOUT+48,X'10'        OPEN                             TQ072800
         BO    CQLOOP                  YES, SKIP RDJFCB ETC.            TQ072900
         LA    RC,QSAMOUT              PRIME FOR RDJFCB                 TQ073000
         RDJFCB ((12))                                                  TQ073100
         LTR   RF,RF                   SUCCESSFUL ?                     TQ073200
         BZ    CKRF2                                                    TQ073300
         B     QORJERR                 ERROR, USE QO CODE               TQ073400
CKRF2    CLI   OUTJFCB+100,0           RECFM ?                          TQ073500
         BNE   CKBS2                   NO                               TQ073600
         OI    QORBL,X'80'             YES                              TQ073700
CKBS2    CLC   OUTJFCB+102(2),=X'0000' BLKSIZE ?                        TQ073800
         BNE   CKLR2                   NO                               TQ073900
         OI    QORBL,X'40'             YES                              TQ074000
CKLR2    CLC   OUTJFCB+104(2),=X'0000'  LRECL ?                         TQ074100
         BNE   TMRBL2                  NO                               TQ074200
         OI    QORBL,X'20'             YES                              TQ074300
TMRBL2   TM    QORBL,X'E0'             RBL ALL 3 NOT SUBMITTED ?        TQ074400
         BNO   CQOPEN                  NO,  DO NOT USE FBS 3120 80      TQ074500
         MVC   DTPIO+200(80),CONIO     SAVE CARD READ                   TQ074600
         MVC   CONIO(61),DCBMSG        'QSAMOUT RECFM . . .             TQ074700
         MVC   CONIO+50(16),=C'FBS 3120 80 USED'                        TQ074800
         MVI   MSLN,66                                                  TQ074900
         BAL   R9,USERMSG                                               TQ075000
         MVC   CONIO(80),DTPIO+200     RESTORE CARD                     TQ075100
         MVC   OUTJFCB+104(2),=H'80'            80 LRECL                TQ075200
         MVC   OUTJFCB+102(2),=H'3120'     3120 BLKSIZE                 TQ075300
         MVI   OUTJFCB+100,X'98'           FBS RECFM                    TQ075400
         OI    OUTJFCB+76,X'80'        WRITE MODIFIED JFCB TO JOBQUE    TQ075500
CQOPEN   EQU   *                                                        TQ075600
         LA    RC,QSAMOUT              PRIME FOR OPEN                   TQ075700
         OPEN  ((12),(OUTPUT)),TYPE=J                                   TQ075800
         TM    QSAMOUT+48,X'10'        OK ?                             TQ075900
         BO    CQLOOP                  OPEN OK                          TQ076000
QOPENERR EQU   *                                                        TQ076100
         MVC   CONIO(8),QSAMOUT+40                                      TQ076200
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 TQ076300
         MVI   MSLN,23                                                  TQ076400
         B     TELUSER2                                                 TQ076500
CQLOOP   EQU   *                                                        TQ076600
CQLOOP1  BC    0,CQLOOPF               B WHEN QO IS FIXED               TQ076700
CQLOOP2  BC    0,CQLOOPV               B WHEN QO IS VAR LEN             TQ076800
CQVARLN1 EQU   *                       CHK DCB FOR V, VB, OR VBS        TQ076900
         TM    QSAMOUT+36,X'80'         F OR U ?                        TQ077000
         BO    CQVARLN2                YES, EXIT                        TQ077100
         TM    QSAMOUT+36,X'40'         V ?                             TQ077200
         BNO   CQVARLN2                NO,  EXIT                        TQ077300
         MVI CQLOOP2+1,X'F0'           SET B                            TQ077400
         LA    R1,0                                                     TQ077500
         ST    R1,DTPIO                ZERO RDW FOR VAR LEN             TQ077600
         LH    R1,=H'84'                                                TQ077700
         STH   R1,DTPIO                SET RDW TO 84                    TQ077800
         B     CQLOOPV                                                  TQ077900
CQVARLN2 EQU   *                                                        TQ078000
         MVI CQLOOP1+1,X'F0'           SET B                            TQ078100
CQLOOPF  EQU   *                                                        TQ078200
         LA    RB,CONIO                PTR TO LREC                      TQ078300
         B     CQLOOP3                                                  TQ078400
CQLOOPV  EQU   *                                                        TQ078500
         MVC   DTPIO+4(80),CONIO       MOVE CARD                        TQ078600
         LA    RB,DTPIO                PRIME FOR PUT                    TQ078700
CQLOOP3  EQU   *                                                        TQ078800
         BAL   R8,QPUT                 PUT LRECL                        TQ078900
         LA    R4,1(R4)            BUMP CARD COUNTER                    TQ079000
         B     CDCD2               LOOP AND DO IT AGAIN                 TQ079100
BADDT    CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ079200
         BNE   BADDT1                                                   TQ079300
         MVC   CONIO(23),=C'DECKTYPE= VALUE INVALID'                    TQ079400
         MVI   MSLN,23                                                  TQ079500
         B     TELUSER2                                                 TQ079600
BADDT1   EQU   *                                                        TQ079700
         MVI   P,X'00'                                                  TQ079800
         B     CQS                     RESTART                          TQ079900
CCEND7   LR    R7,R4                                                    TQ080000
IOCNT    MVI   ESW,X'00'           BEGIN 'LOG CARD COUNT MSG' ROUTINE   TQ080100
         BAL   R8,DECCVT           REG 7 CONTAINS COUNT                 TQ080200
         MVC   CONIO(8),HOLDSEQ                                         TQ080300
         MVC   CONIO+8(10),=C' I/O CARDS'                               TQ080400
         LA    R4,18                                                    TQ080500
IOCNT1   CLI   CONIO,C' '                                               TQ080600
         BNE   IOCNT2                                                   TQ080700
         MVC   CONIO(50),CONIO+1       LEFT JUSTIFY MSG                 TQ080800
         BCT   R4,IOCNT1                                                TQ080900
IOCNT2   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ081000
         BE    IOCNTLST            YES, LOG ON SYSPRINT                 TQ081100
         STC   R4,WCNCCW+7         NO, LOG ON CONSOLE                   TQ081200
         BAL   R8,WCON2                                                 TQ081300
         B     RETNORM                 END FUNCTION                     TQ081400
IOCNTLST EQU   *                                                        TQ081500
         STC   R4,PL                                                    TQ081600
         BAL   R8,PRNT                                                  TQ081700
         B     RETNORM                 END FUNCTION                     TQ081800
TPSQNUM  DS    1F                                                       TQ081900
DECKADR  DS    1F                                                       TQ082000
SEQADR   DS    1F                                                       TQ082100
         EJECT                                                          TQ082200
*********************************************************************** TQ082300
**********         QSAM TO CARD - ALL QSAM SUPPORTED RECFMS  ********** TQ082400
*********************************************************************** TQ082500
         SPACE 1                                                        TQ082600
QC       EQU   *                                                        TQ082700
         BAL   R9,AFTNLR               GO GET STARTAFT & NLRECS         TQ082800
         BAL   R8,QIOPEN               ISSUE OPEN                       TQ082900
QCLOOP   EQU   *                                                        TQ083000
         BAL   R8,QGET             READ                                 TQ083100
         CLI   QIEOFSW,X'FF'           EOF ?                            TQ083200
         BE    CCEND               YES, WE ARE DONE                     TQ083300
QCLOOP1  BC    0,QCLOOP2               FALL THRU TILL BYPASS DONE       TQ083400
         C     R7,AFTLR                BYPASS DONR ?                    TQ083500
         BNH   QCLOOP                  NO                               TQ083600
         MVI   QCLOOP1+1,X'F0'         YES                              TQ083700
QCLOOP2  EQU   *                                                        TQ083800
         BAL   R8,QIVARLN              CHECK FOR VAR LEN                TQ083900
MOVPNCH  MVC   CONIO(80),0(R1)     MOVE TO PUNCH AREA                   TQ084000
         BAL   R8,CDPN             GO PUNCH IT                          TQ084100
         L     R7,QOPUTCNT             USE TO COUNT CARDS               TQ084200
         LA    R7,1(R7)            ADD 1 TO CARD COUNTER                TQ084300
         ST    R7,QOPUTCNT             USE TO COUNT CARDS               TQ084400
         L     R7,QIGETCNT             DONE PER NLRECS ?                TQ084500
         C     R7,NLR                                                   TQ084600
         BNE   QCLOOP                  NO                               TQ084700
CCEND    EQU   *                                                        TQ084800
         MVC   CONIO(80),BLANKS    FORCE OUT LAST CARD                  TQ084900
         BAL   R8,CDPN                                                  TQ085000
         B     QPQDONE                 GO USE QP END RTN                TQ085100
         EJECT                                                          TQ085200
*********************************************************************** TQ085300
**********         QSAM TO PRINTER   LIST OR HEX            *********** TQ085400
*********************************************************************** TQ085500
         SPACE 1                                                        TQ085600
QP       EQU   *                                                        TQ085700
         MVI   DPSW,X'00'                                               TQ085800
         B     QP0                                                      TQ085900
QD       EQU   *                                                        TQ086000
         MVI   DPSW,X'FF'                                               TQ086100
QP0      EQU   *                                                        TQ086200
         MVC   HH2(06),QSAMINDC        HEADING                          TQ086300
         BAL   R9,AFTNLR               GO GET STARTAFT & NLRECS         TQ086400
         BAL   R9,BEGINFUN             PRINT OS/DITTO HDG AND OVFLO     TQ086500
         BAL   R8,QIOPEN               ISSUE OPEN                       TQ086600
QPLOOP   EQU   *                                                        TQ086700
         BAL   R8,QGET                 GET LREC                         TQ086800
         CLI   QIEOFSW,X'FF'           EOF ?                            TQ086900
         BE    QPQDONE                 FUNCTION DONE                    TQ087000
QPLOOP1  BC    0,QPLOOP2               FALL THRU TILL BYPASS DONE       TQ087100
         C     R7,AFTLR                BYPASS DONR ?                    TQ087200
         BNH   QPLOOP                  NO                               TQ087300
         MVI   QPLOOP1+1,X'F0'         YES                              TQ087400
QPLOOP2  EQU   *                                                        TQ087500
         BAL   R8,QIVARLN              CHECK FOR VAR LEN                TQ087600
         LR    RA,R1                   PRIME RA BEFORE DECCVT           TQ087700
         MVC   HDG1(10),DREC                                            TQ087800
         MVC   HDG1+13(10),DATH                                         TQ087900
         BAL   R8,DECCVT                                                TQ088000
         MVC   HDG1+5(5),HOLDSEQ+3 RECORD NUMBER IN HEADING             TQ088100
         LR    R7,R3                   LRECL IN R7                      TQ088200
         BAL   R8,DECCVT           CONVERT TO EBDIC                     TQ088300
         MVC   HDG1+18(5),HOLDSEQ+3  AND PLACE IN DATA LNGTH HEADING    TQ088400
FULBLK   BAL   RB,DEBLOK           GO PRINT IT                          TQ088500
         L     R7,QOPUTCNT                                              TQ088600
         LA    R7,1(R7)                                                 TQ088700
         ST    R7,QOPUTCNT                                              TQ088800
         L     R7,QIGETCNT             DONE PER NLRECS ?                TQ088900
         C     R7,NLR                                                   TQ089000
         BNE   QPLOOP                  NO                               TQ089100
QPQDONE  EQU   *                                                        TQ089200
         L     R7,QIGETCNT                                              TQ089300
VPDONE   EQU   *                                                        TQ089400
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              TQ089500
         BAL   R8,PRNT                                                  TQ089600
         MVI   CC,X'11'                DOUBLE SPACE AFT PR              TQ089700
         MVI   ESW,X'00'                                                TQ089800
         BAL   R8,DECCVT                                                TQ089900
         MVC   CONIO(8),HOLDSEQ                                         TQ090000
         MVC   CONIO+8(11),=C' LRECS READ'                              TQ090100
         L     R7,QOPUTCNT             GET OUTPUT LRECL CNT             TQ090200
         MVI   ESW,0                   SUPPRESS LEADING ZEROS           TQ090300
         BAL   R8,DECCVT                                                TQ090400
         MVC   CONIO+19(8),HOLDSEQ                                      TQ090500
         MVC   CONIO+27(14),=C' LRECS WRITTEN'                          TQ090600
         LA    R4,41                                                    TQ090700
         B     IOCNT1                                                   TQ090800
         EJECT                                                          TQ090900
*********************************************************************** TQ091000
**********         VSAM TO PRINTER   LIST OR HEX            *********** TQ091100
*********************************************************************** TQ091200
         SPACE 1                                                        TQ091300
VP       EQU   *                                                        TQ091400
         MVI   DPSW,X'00'                                               TQ091500
         B     VP0                                                      TQ091600
VD       EQU   *                                                        TQ091700
         MVI   DPSW,X'FF'                                               TQ091800
VP0      EQU   *                                                        TQ091900
         MVI   QIGETCNT,0              CLEAR TO                         TQ092000
         MVC   QIGETCNT+1(19),QIGETCNT ZEROS                            TQ092100
         MVC   HH2(06),VSAMINDC        HEADING                          TQ092200
VPK1     EQU   *                                                        TQ092300
         LA    R9,VPBEG                PRIME R9 RETURN                  TQ092400
         CLI   CNTRLSW,X'00'           CONSOLE ?                        TQ092500
         BE    VPK2                    YES                              TQ092600
         TM    CT1,X'08'               STARTKEY SUBMITTED               TQ092700
         BO    QP5                     YES, NLR                         TQ092800
         B     AFTNLR                  NO, AFT, NLR                     TQ092900
VPK2     EQU   *                                                        TQ093000
         MVC   CONIO(68),KEYMSG        'REPLY - 'K' START AT KEY . . .  TQ093100
         MVI   MSLN,68                                                  TQ093200
         MVI   RPLN,1                                                   TQ093300
         BAL   R8,WRTCON                                                TQ093400
         CLI   CONIO,C'K'              STARTKEY ?                       TQ093500
         BE    VPK3                    YES                              TQ093600
         CLI   CONIO,C'C'              STARTAFT ?                       TQ093700
         BE    AFTNLR                  YES                              TQ093800
         B     QP5                     NO ASK FOR NLRECS                TQ093900
VPK3     EQU   *                                                        TQ094000
         MVC   CONIO(32),KEYMSG2       'REPLY - 'STARTKEY' (35 CHAR     TQ094100
         MVI   MSLN,32                                                  TQ094200
         MVI   RPLN,35                                                  TQ094300
         BAL   R8,WRTCON                                                TQ094400
         MVC   HSTARTKY,CONIO                                           TQ094500
         LA    R8,HSKEND-1             PTR TO RIGHT MOST KEY CHAR       TQ094600
         LA    R7,34                   35 MAX                           TQ094700
         SR    RC,RC                                                    TQ094800
         OI    CT1,X'08'               SET STARTKEY SW                  TQ094900
VPKOPIN  CLI   0(R8),X'40'             TRAILING BLANK ?                 TQ095000
         BNE   QP5                     NLRECS                           TQ095100
         MVI   0(R8),X'00'             PAD                              TQ095200
         BCTR  R8,R0                   DECR. BY 1                       TQ095300
         BCT   R7,VPKOPIN              LOOP                             TQ095400
         B     QP5                     ASK FOR NLRECS ( NO STARTAFT)    TQ095500
VPBEG    EQU   *                                                        TQ095600
         CLI   VIOPENSW,X'FF'          OPEN ?                           TQ095700
         BE    VPHDG                   YES                              TQ095800
         BAL   R8,VIOPEN               OPEN BEFORE HEADING              TQ095900
VPHDG    EQU   *                                                        TQ096000
         CLI   VITYP,C'E'               ESDS ?                          TQ096100
         BE    VPHDGE                   YES                             TQ096200
         CLI   VITYP,C'K'               KSDS ?                          TQ096300
         BE    VPHDGK                   YES                             TQ096400
         B     VPHDG1                                                   TQ096500
VPHDGE   EQU   *                                                        TQ096600
         MVC   HH2+28(7),=C' - ESDS'   PLUG HDG                         TQ096700
         B     VPHDG1                                                   TQ096800
VPHDGK   EQU   *                                                        TQ096900
         MVC   HH2+28(7),=C' - KSDS'   PLUG HDG                         TQ097000
VPHDG1   EQU   *                                                        TQ097100
         BAL   R9,BEGINFUN             PRINT OS/DITTO HDG AND OVFLO     TQ097200
VPOINT   EQU   *                                                        TQ097300
         TM    CT1,X'08'     STARTKEY ?                                 TQ097400
         BNO   VPLOOP                  NO                               TQ097500
         BAL   R8,VIPOINT              YES                              TQ097600
VPLOOP   EQU   *                                                        TQ097700
         BAL   R8,VIGET                GET LREC                         TQ097800
         CLI   VIEOFSW,X'FF'           EOF ?                            TQ097900
         BE    VPLOOPDN                                                 TQ098000
VPLOOP1  BC    0,VPLOOP2               FALL THRU TILL BYPASS DONE       TQ098100
         C     R7,AFTLR                BYPASS DONR ?                    TQ098200
         BNH   VPLOOP                  NO                               TQ098300
         MVI   VPLOOP1+1,X'F0'         YES                              TQ098400
VPLOOP2  EQU   *                                                        TQ098500
         L     RA,VINADR               PIME RA                          TQ098600
         MVC   HDG1(10),DREC                                            TQ098700
         MVC   HDG1+13(10),DATH                                         TQ098800
         BAL   R8,DECCVT                                                TQ098900
         MVC   HDG1+5(5),HOLDSEQ+3 RECORD NUMBER IN HEADING             TQ099000
         LR    R7,R3                   LRECL IN R7                      TQ099100
         BAL   R8,DECCVT           CONVERT TO EBDIC                     TQ099200
         MVC   HDG1+18(5),HOLDSEQ+3  AND PLACE IN DATA LNGTH HEADING    TQ099300
         BAL   RB,DEBLOK           GO PRINT IT                          TQ099400
         L     R7,QOPUTCNT                                              TQ099500
         LA    R7,1(R7)                                                 TQ099600
         ST    R7,QOPUTCNT                                              TQ099700
         L     R7,VIGETCNT             DONE PER NLRECS ?                TQ099800
         C     R7,NLR                                                   TQ099900
         BNE   VPLOOP                  NO                               TQ100000
VPLOOPDN EQU   *                                                        TQ100100
         L     R7,VIGETCNT                                              TQ100200
         B     VPDONE                                                   TQ100300
         EJECT                                                          TQ100400
*********************************************************************** TQ100500
**********         QSAM TO QSAM - TAPE OR DISK              *********** TQ100600
*********************************************************************** TQ100700
         SPACE 1                                                        TQ100800
QQ       EQU   *                                                        TQ100900
         BAL   R9,AFTNLR               GET STARTAFT AND NLRECS          TQ101000
         BAL   R8,QIOPEN               ISSUE OPEN                       TQ101100
QQLOOP   EQU   *                                                        TQ101200
         BAL   R8,QGET                                                  TQ101300
         CLI   QIEOFSW,X'FF'                                            TQ101400
         BE    QPQDONE                 LOG COUNTS                       TQ101500
QQLOOP1  BC    0,QQLOOP2               FALL THRU TILL BYPASS DONE       TQ101600
         C     R7,AFTLR                BYPASS DONR ?                    TQ101700
         BNH   QQLOOP                  NO                               TQ101800
         MVI   QQLOOP1+1,X'F0'         YES                              TQ101900
         TM    QSAMOUT+48,X'10'        OPEN                             TQ102000
         BO    QQLOOP2                 YES, SKIP RDJFCB ETC.            TQ102100
         ST    R1,SAVER1               SAVE FROM GET                    TQ102200
         LA    RC,QSAMOUT              PRIME FOR RDJFCB                 TQ102300
         RDJFCB ((12))                                                  TQ102400
         LTR   RF,RF                   SUCCESSFUL ?                     TQ102500
         BZ    CKRF                    OK                               TQ102600
QORJERR  EQU   *                                                        TQ102700
         MVC   CONIO(23),=C'RDJFCB ERROR ON QSAMOUT'                    TQ102800
         MVI   MSLN,23                                                  TQ102900
         B     TELUSER2                                                 TQ103000
CKRF     CLI   OUTJFCB+100,0           RECFM ?                          TQ103100
         BNE   CKBS                    NO                               TQ103200
         OI    QORBL,X'80'             YES                              TQ103300
CKBS     CLC   OUTJFCB+102(2),=X'0000' BLKSIZE ?                        TQ103400
         BNE   CKLR                    NO                               TQ103500
         OI    QORBL,X'40'             YES                              TQ103600
CKLR     CLC   OUTJFCB+104(2),=X'0000'  LRECL ?                         TQ103700
         BNE   TMRBL                   NO                               TQ103800
         OI    QORBL,X'20'             YES                              TQ103900
TMRBL    TM    QORBL,X'E0'             RBL ALL 3 SUBMITTED              TQ104000
         BNO   QQOPEN                  NO,  DO NOT USE QSAMIN DCB       TQ104100
         MVC   CONIO(61),DCBMSG        'QSAMOUT RECFM . . .             TQ104200
         MVI   MSLN,61                                                  TQ104300
         BAL   R9,USERMSG                                               TQ104400
MVLR     MVC   OUTJFCB+104(2),QSAMIN+82     USE QSAMIN LRECL            TQ104500
MVBS     MVC   OUTJFCB+102(2),QSAMIN+62    USE QSAMIN BLKSIZE           TQ104600
MVRF     MVC   OUTJFCB+100(1),QSAMIN+36    USE QSAMIN RECFM             TQ104700
         OI    OUTJFCB+76,X'80'        WRITE MODIFIED JFCB TO JOBQUE    TQ104800
QQOPEN   EQU   *                                                        TQ104900
         LA    RC,QSAMOUT              PRIME FOR OPEN                   TQ105000
         OPEN  ((12),(OUTPUT)),TYPE=J                                   TQ105100
         TM    QSAMOUT+48,X'10'        OK ?                             TQ105200
         BNO   QOPENERR                ERROR MSG                        TQ105300
         L     R1,SAVER1               RESTORE                          TQ105400
QQLOOP2  EQU   *                                                        TQ105500
         LR    RB,R1                   PRIME FOR PUT                    TQ105600
         BAL   R8,QPUT                                                  TQ105700
         L     R7,QIGETCNT             DONE PER NLRECS ?                TQ105800
         C     R7,NLR                                                   TQ105900
         BNE   QQLOOP                  NO                               TQ106000
         B     QPQDONE                 DONE                             TQ106100
         EJECT                                                          TQ106200
*********************************************************************** TQ106300
*******************          RETURN MECHANISM      ******************** TQ106400
*********************************************************************** TQ106500
         SPACE 1                                                        TQ106600
RETNORM  EQU   *                                                        TQ106700
         LA    RF,0                    RC = 0                           TQ106800
         B     RETURN                                                   TQ106900
RETR8    EQU   *                                                        TQ107000
         LA    RF,4                    RC = 4                           TQ107100
         B     RETURN                                                   TQ107200
RETIRPT  EQU   *                                                        TQ107300
         LA    RF,8                    RC = 8                           TQ107400
RETURN   EQU   *                                                        TQ107500
         L     RD,4(RD)                PRIME RD                         TQ107600
         RETURN (14,12),RC=(15)                                         TQ107700
         EJECT                                                          TQ107800
*********************************************************************** TQ107900
**********           CONSOLE - WRITE & READ REPLY  (WTOR)   *********** TQ108000
*********************************************************************** TQ108100
         SPACE 1                                                        TQ108200
WRTCONP  MVI   P,0                     TURN OFF SW - DONT USE STRING    TQ108300
WRTCON   EQU   *                                                        TQ108400
         LA    R1,PARM                 MSICCW                           TQ108500
         CALL  WTORSUB                                                  TQ108600
         B     WTORRET(RF)                                              TQ108700
WTORRET  B     0(R8)                   RC = 0                           TQ108800
         B     RETIRPT                 RC = 4                           TQ108900
         EJECT                                                          TQ109000
*********************************************************************** TQ109100
**********               CONSOLE - WRITE ONLY  (WTO)        *********** TQ109200
*********************************************************************** TQ109300
         SPACE 1                                                        TQ109400
WCON2    EQU   *                                                        TQ109500
         LA    R1,PARM                 MSICCW                           TQ109600
         CALL  WTOSUB                                                   TQ109700
         B     WTORRET(RF)             USE WTOR RET MECH                TQ109800
         EJECT                                                          TQ109900
*********************************************************************** TQ110000
**********                   CARD READING    (QSAM)         *********** TQ110100
*********************************************************************** TQ110200
CDRD     EQU   *                                                        TQ110300
         LA    R1,PARM                 MSICCW                           TQ110400
         CALL  CDRDSUB                                                  TQ110500
         B     CDRDRET(RF)                                              TQ110600
CDRDRET  B     0(R8)                   RC = 0                           TQ110700
         B     RETIRPT                 RC = 4                           TQ110800
         B     TELUSER2                RC = 8                           TQ110900
         EJECT                                                          TQ111000
*********************************************************************** TQ111100
**********                   CARD PUNCHING   (QSAM)         *********** TQ111200
*********************************************************************** TQ111300
CDPN     EQU   *                                                        TQ111400
         LA    R1,PARM                 MSICCW                           TQ111500
         CALL  CDPNSUB                                                  TQ111600
         B     CDPNRET(RF)                                              TQ111700
CDPNRET  B     0(R8)                   RC = 0                           TQ111800
         B     RETIRPT                                                  TQ111900
         B     TELUSER2                RC = 8                           TQ112000
         EJECT                                                          TQ112100
*********************************************************************** TQ112200
**********           PRINTING & CARRIAGE CONTROL  (QSAM)    *********** TQ112300
*********************************************************************** TQ112400
EDIT     TR    CONIO(132),TRTBL    TRANSLATE UNPRINTABLE CHAR FOR MAX   TQ112500
PRNT     EQU   *                                                        TQ112600
         LA    R1,PARM                 MSICCW                           TQ112700
         CALL  PRNTSUB                                                  TQ112800
         B     PRNTRET(RF)                                              TQ112900
PRNTRET  B     PRNTEXIT                RC = 0                           TQ113000
         B     RETIRPT                 RC = 4                           TQ113100
         B     TELUSER2                RC = 8                           TQ113200
PRNTEXIT CLI   OVFLOSW,X'FF'           OVFLO ON ?                       TQ113300
         BNE   0(R8)                   NO                               TQ113400
         MVI   OVFLOSW,X'00'           RESET                            TQ113500
         MVI   CC,X'11'                DOUBLE SPACING                   TQ113600
         BR    R8                      RETURN                           TQ113700
OVFLO    EQU   *                                                        TQ113800
         MVI   CC,X'8B'                SKIP TO CH 1                     TQ113900
         MVI   OVFLOSW,X'FF'           SET TO INDIC. OVFLO              TQ114000
         MVI   LINCT+1,X'AA'       FORCE LINE COUNT TO BE RESET         TQ114100
         B     PRNT                                                     TQ114200
         EJECT                                                          TQ114300
*********************************************************************** TQ114400
********************   QSAM  GET ROUTINE        *********************** TQ114500
*********************************************************************** TQ114600
         SPACE 1                                                        TQ114700
QGET     EQU   *                                                        TQ114800
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       TQ114900
         BO    RETIRPT                 B   CHKIRT                       TQ115000
         MVC   QIEOF(4),QIEOFVEC       PLUG VEC BR TO THIS SUB AT EODAD TQ115100
         GET   QSAMIN                                                   TQ115200
         L     R7,QIGETCNT                                              TQ115300
         LA    R7,1(R7)                BUMP LRECL CTR                   TQ115400
         ST    R7,QIGETCNT             SAVE                             TQ115500
         BR    R8                                                       TQ115600
         EJECT                                                          TQ115700
*********************************************************************** TQ115800
***************        QSAMIN VAR LEN CHECK ROUTINE     *************** TQ115900
*********************************************************************** TQ116000
         SPACE 1                                                        TQ116100
QIVARLN  EQU   *                       CHK DCB FOR V, VB, OR VBS        TQ116200
         LH    R3,QSAMIN+82            GET LRECL                        TQ116300
         TM    QSAMIN+36,X'80'         F OR U ?                         TQ116400
         BO    QIVARLN2                YES, EXIT                        TQ116500
         TM    QSAMIN+36,X'40'         V ?                              TQ116600
         BNO   QIVARLN2                NO,  EXIT                        TQ116700
         LH    R3,0(R1)                GET RECORD DESCR.                TQ116800
         SH    R3,=H'4'                DECR LRECL IF VAR LEN            TQ116900
         LA    R1,4(R1)                BUMP PAST RECORD DESCR.          TQ117000
QIVARLN2 EQU   *                                                        TQ117100
         BR    R8                      RETURN                           TQ117200
         EJECT                                                          TQ117300
*********************************************************************** TQ117400
*******************          QSAMIN EOF ROUTINE       ***************** TQ117500
*********************************************************************** TQ117600
         SPACE 1                                                        TQ117700
QIEOFSUB EQU   *                       BR HERE ON EODAD                 TQ117800
         ST    R8,SAVER                SAVE BEFORE PRINT                TQ117900
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              TQ118000
         BAL   R8,PRNT                 SPACE                            TQ118100
         L     R8,SAVER                RESTORE R8                       TQ118200
         MVC   CONIO(13),EOFQIMSG                                       TQ118300
         MVI   MSLN,13                                                  TQ118400
         BAL   R9,USERMSG              ISSUE MSG                        TQ118500
         MVI   QIEOFSW,X'FF'           SET EOF SW                       TQ118600
         LA    R9,QSAMIN               PRIME FOR CLOSE                  TQ118700
         CLOSE ((9))                                                    TQ118800
         BR    R8                                                       TQ118900
         EJECT                                                          TQ119000
*********************************************************************** TQ119100
***************         QSAMIN OPEN ROUTINE     *********************** TQ119200
*********************************************************************** TQ119300
         SPACE 1                                                        TQ119400
QIOPEN   EQU   *                                                        TQ119500
         TM    QSAMIN+48,X'10'         OPEN ?                           TQ119600
         BO    QIOPENOK                YES                              TQ119700
         LA    RC,QSAMIN               PRIME FOR REG OPEN               TQ119800
         OPEN  ((12),INPUT)                                             TQ119900
         TM    QSAMIN+48,X'10'         OPEN OK ?                        TQ120000
         BO    QIOPENDN                YES                              TQ120100
         MVC   CONIO(8),QSAMIN+40      MOVE IN DDNAME                   TQ120200
         MVC   CONIO+8(15),OPENFAIL    'DD OPEN FAILED'                 TQ120300
         MVI   MSLN,23                                                  TQ120400
         B     TELUSER2                                                 TQ120500
QIOPENDN EQU   *                                                        TQ120600
         MVI   QIEOFSW,X'00'           RESET IF RE-OPEN BY SUBSEQ. FUN  TQ120700
QIOPENOK EQU   *                                                        TQ120800
         BR    R8                      RETURN                           TQ120900
         EJECT                                                          TQ121000
*********************************************************************** TQ121100
********************         PUT ROUTINE        *********************** TQ121200
*********************************************************************** TQ121300
         SPACE 1                                                        TQ121400
QPUT     EQU   *                                                        TQ121500
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       TQ121600
         BO    RETIRPT                 B   CHKIRT                       TQ121700
         PUT   QSAMOUT,(11)                                             TQ121800
         L     R7,QOPUTCNT                                              TQ121900
         LA    R7,1(R7)                BUMP                             TQ122000
         ST    R7,QOPUTCNT                                              TQ122100
         BR    R8                                                       TQ122200
         EJECT                                                          TQ122300
*********************************************************************** TQ122400
********************   VSAM  GET ROUTINE        *********************** TQ122500
*********************************************************************** TQ122600
         SPACE 1                                                        TQ122700
VIGET    EQU   *                                                        TQ122800
         TM    IRPTECB,X'40'           HAS WTOR REPLY BEEN MADE ?       TQ122900
         BO    RETIRPT                 B   CHKIRT                       TQ123000
         MVC   VIEOF(4),VIEOFVEC       PLUG VEC BR TO THIS SUB AT EODAD TQ123100
         LA    RC,VIRPL                                                 TQ123200
         GET   RPL=((12))                                               TQ123300
         LTR   RF,RF                   ERRORS ?                         TQ123400
         BNZ   VIGETER                                                  TQ123500
         SHOWCB RPL=((12)),AREA=RECLEN,LENGTH=4,FIELDS=RECLEN           TQ123600
         LTR   RF,RF                   ERRORS ?                         TQ123700
         BNZ   VISHOER                 YES                              TQ123800
         L     R3,RECLEN               GET LRECL                        TQ123900
         L     R7,VIGETCNT             UPDATE                           TQ124000
         LA    R7,1(R7)                BUMP LRECL CTR                   TQ124100
         ST    R7,VIGETCNT             SAVE                             TQ124200
         BR    R8                      RETURN                           TQ124300
         EJECT                                                          TQ124400
*********************************************************************** TQ124500
*******************          VSAMIN EOF ROUTINE       ***************** TQ124600
*********************************************************************** TQ124700
         SPACE 1                                                        TQ124800
VIEOFSUB EQU   *                                                        TQ124900
         ST    R8,SAVER                SAVE BEFORE PRINT                TQ125000
         MVI   CC,X'0B'                SPACE IMMED. 1 LINE              TQ125100
         BAL   R8,PRNT                 SPACE                            TQ125200
         L     R8,SAVER                RESTORE R8                       TQ125300
         MVC   CONIO(13),EOFQIMSG                                       TQ125400
         MVI   CONIO+7,C'V'            VSAMIN                           TQ125500
         MVI   MSLN,13                                                  TQ125600
         BAL   R9,USERMSG              ISSUE MSG                        TQ125700
         MVI   VIEOFSW,X'FF'                                            TQ125800
         LA    R9,VSAMIN               PRIME FOR CLOSE                  TQ125900
         CLOSE ((9))                                                    TQ126000
         LTR   RF,RF                   ERRORS ?                         TQ126100
         BNZ   VICLOER                                                  TQ126200
         MVI   VIOPENSW,0              SET SW TO CLOSED                 TQ126300
         BR    R8                                                       TQ126400
         EJECT                                                          TQ126500
*********************************************************************** TQ126600
********************   VSAM OPEN ROUTINE        *********************** TQ126700
*********************************************************************** TQ126800
         SPACE 1                                                        TQ126900
VIOPEN   EQU   *                                                        TQ127000
         LA    RC,VSAMIN                                                TQ127100
         OPEN  ((12))                                                   TQ127200
         LTR   RF,RF                   ERRORS ?                         TQ127300
         BNZ   VIOPER                  YES                              TQ127400
         TESTCB ACB=((12)),ERET=VITSTER,ATRB=KSDS                       TQ127500
         BE    VIKSDS        KSDS CONFIRMED                             TQ127600
         MVI   VITYP,C'E'    ASSUME ESDS                                TQ127700
         LA    RC,VIRPL                                                 TQ127800
         MODCB RPL=((12)),OPTCD=(ADR)                                   TQ127900
         LTR   RF,RF                   ERRORS ?                         TQ128000
         BNZ   VIMODER                 YES                              TQ128100
         B     VIOPENDN                OPEN DONE                        TQ128200
VIKSDS   EQU   *                                                        TQ128300
         MVI   VITYP,C'K'    KSDS                                       TQ128400
         LA    RC,VSAMIN                                                TQ128500
         CLOSE ((12))                                                   TQ128600
         LTR   RF,RF                   ERRORS ?                         TQ128700
         BNZ   VICLOER                 YES                              TQ128800
         MODCB ACB=((12)),MACRF=(KEY)                                   TQ128900
         LTR   RF,RF                   ERRORS ?                         TQ129000
         BNZ   VIMODER                 YES                              TQ129100
         OPEN  ((12))                                                   TQ129200
         LTR   RF,RF                   ERRORS ?                         TQ129300
         BNZ   VIOPER                                                   TQ129400
         SHOWCB ACB=((12)),AREA=VIFLDS,LENGTH=8,FIELDS=(KEYLEN,RKP)     TQ129500
         LTR   RF,RF                   ERRORS ?                         TQ129600
         BNZ   VIOPER                  YES                              TQ129700
         LA    R4,HSTARTKY   PTR TO STARTKEY                            TQ129800
         LA    RC,VIRPL                                                 TQ129900
         L     R7,VIKL       KEY LEN                                    TQ130000
         CH    R7,=H'35'     COMPARE TO STARTKEY      MAX.              TQ130100
         BNH   VIKSFKS                 FULL KEY SIZE                    TQ130200
         LH    R7,=H'35'               SET  LENGTH FOR GENERIC KEY      TQ130300
VIKSGEN  EQU   *                                                        TQ130400
         MODCB RPL=((12)),OPTCD=(KEY,GEN),KEYLEN=((7)),ARG=((4))        TQ130500
         LTR   RF,RF                   ERRORS ?                         TQ130600
         BNZ   VIMODER                                                  TQ130700
         B     VIOPENDN                OPEN DONE                        TQ130800
VIKSFKS  EQU   *                                                        TQ130900
         MODCB RPL=((12)),OPTCD=KEY,KEYLEN=((7)),ARG=((4))              TQ131000
         LTR   RF,RF                   ERRORS ?                         TQ131100
         BNZ   VIMODER                                                  TQ131200
VIOPENDN EQU   *                                                        TQ131300
         MVI   VIOPENSW,X'FF'          SET OPEN                         TQ131400
         MVI   VIEOFSW,0               RESET EOF SW                     TQ131500
         BR    R8                      RETURN                           TQ131600
         EJECT                                                          TQ131700
*********************************************************************** TQ131800
*******************          VSAMIN POINT ROUTINE        ************** TQ131900
*********************************************************************** TQ132000
         SPACE 1                                                        TQ132100
VIPOINT  EQU   *                                                        TQ132200
         LA    RC,VIRPL                                                 TQ132300
         POINT RPL=((12))                                               TQ132400
         LTR   RF,RF                   ERRORS ?                         TQ132500
         BNZ   VIPTER                  YES                              TQ132600
         BR    R8                      RETURN                           TQ132700
         EJECT                                                          TQ132800
*********************************************************************** TQ132900
**********         VSAM ERROR ROUTINS FOR NON ZERO R. C.    *********** TQ133000
*********************************************************************** TQ133100
         SPACE 1                                                        TQ133200
VIOPER   EQU   *                                                        TQ133300
         MVC   VIERMAC,OPEN                                             TQ133400
         B     VPERR                   ISSUE MSG                        TQ133500
VITSTER  EQU   *                                                        TQ133600
         MVC   VIERMAC,TESTCB                                           TQ133700
         B     VPERR                   ISSUE MSG                        TQ133800
VIMODER  EQU   *                                                        TQ133900
         MVC   VIERMAC,MODCB                                            TQ134000
         B     VPERR                   ISSUE MSG                        TQ134100
VICLOER  EQU   *                                                        TQ134200
         MVC   VIERMAC,CLOSE                                            TQ134300
         B     VPERR                   ISSUE MSG                        TQ134400
VISHOER  EQU   *                                                        TQ134500
         MVC   VIERMAC,SHOWCB                                           TQ134600
         B     VPERR                   ISSUE MSG                        TQ134700
VIPTER   EQU   *                                                        TQ134800
         MVC   VIERMAC,POINT                                            TQ134900
         B     VPERR                   ISSUE MSG                        TQ135000
VIGETER  EQU   *                                                        TQ135100
         MVC   VIERMAC,GET                                              TQ135200
VPERR    EQU   *                                                        TQ135300
         DC    A(0)                                                     TQ135400
         MVC CONIO(28),VIERMSG                                          TQ135500
         MVI   MSLN,28                                                  TQ135600
         B     TELUSER2                                                 TQ135700
         EJECT                                                          TQ135800
*********************************************************************** TQ135900
**********         TELL USER OF ERROR CONDITION ROUTINE     *********** TQ136000
*********************************************************************** TQ136100
         SPACE 1                                                        TQ136200
TELUSER2 CLI   CNTRLSW,X'FF'           ENTER FOR MSG N.E. 23. IN CNCD ? TQ136300
         BNE   TELOPER             NO                                   TQ136400
TELPGMR  MVC   PL(1),MSLN              SET PRT LN                       TQ136500
         MVI   CC,X'11'                DOUBLE SPACE AFTER PRINT         TQ136600
         BAL   R8,PRNT             PRINT MSG TO PGMR                    TQ136700
         B     RETNORM                                                  TQ136800
TELOPER  EQU   *                                                        TQ136900
         BAL   R8,WCON2            TELL OPERATOR                        TQ137000
         B     RETNORM                                                  TQ137100
USERMSG  EQU   *                                                        TQ137200
         ST    R8,SAVER                SAVE BEFORE USE                  TQ137300
         CLI   CNTRLSW,X'FF'           IN CNCD ?                        TQ137400
         BNE   USROPER             NO                                   TQ137500
USRPGMR  MVC   PL(1),MSLN              SET PRT LN                       TQ137600
         MVI   CC,X'11'                DOUBLE SPACE AFTER PRINT         TQ137700
         BAL   R8,PRNT             PRINT MSG TO PGMR                    TQ137800
         B     USERTOLD                                                 TQ137900
USROPER  EQU   *                                                        TQ138000
         BAL   R8,WCON2            TELL OPERATOR                        TQ138100
USERTOLD EQU   *                                                        TQ138200
         L     R8,SAVER                RESTORE R8                       TQ138300
         BR    R9                      RETURN                           TQ138400
         EJECT                                                          TQ138500
*********************************************************************** TQ138600
**********         DEBLOCK  RECORDS FOR PRINTING OR DUMP    *********** TQ138700
*********************************************************************** TQ138800
         SPACE 1                                                        TQ138900
DEBLOK   LA    R4,80                   ASSUME CHAR. ONLY                TQ139000
         CLI   DPSW,X'FF'              HEX AND CHAR ?                   TQ139050
         BNE   DBNOHEX                 NO                               TQ139100
         CLI   LISTSW,X'FF'            DP,SP,DPD,SPD ?                  TQ139150
         BE    DBNOHEX                 YES, NO HEX-SO USE 80 CHAR       TQ139200
         LA    R4,50                   YES                              TQ139250
DBNOHEX  EQU   *                                                        TQ139300
         SR    R7,R7                                                    TQ139350
DB1      MVI   CC,X'09'                                                 TQ139400
         CR    R3,R4                   IS REC G.T. LREC ?               TQ139450
         BNH   LSBLK               NO, SET UP FOR LAST BLOCK.           TQ139500
         SR    R3,R4                                                    TQ139550
DB2      CLI   DPSW,X'FF'          DUMP IN HEX ?                        TQ139600
         BNE   LST                 NO, GO TO LIST                       TQ139650
         CLI   LISTSW,X'FF'        DP,DPD,SP,SPD ?                      TQ139700
         BE    DISKLST             YES                                  TQ139750
         STC   R4,PRLTH            YES, SET                             TQ139800
         BAL   R8,DECCVT           UP TO                                TQ139850
         MVC   SCALE+14(6),HOLDSEQ+2   6 SIGNIF. DIGITS                 TQ139900
         BAL   R9,HEXDP            HEX PRINT 50 POSIT. MAX.             TQ139950
         MVC   HDG1(78),BLANKS                                          TQ140000
*                                      NO COMMENT                       TQ140050
         AR    RA,R4                   BUMP TO NEXT LREC                TQ140100
         LA    R7,5(R7)                BUMP SCALE LEFT MARGIN COUNT     TQ140150
         B     DB1                                                      TQ140200
DISKLST  MVC   HDG1(8),HDG3        REC NUMBER                           TQ140250
         MVC   HDG2,BLANKS         OMIT 'HEAD' TITLE                    TQ140300
LST      EQU   *                       B HERE FOR TSO                   TQ140350
         CLC   HDG1(32),BLANKS                                          TQ140400
         BE    LST2                    SKIP PRNT                        TQ140450
         LA    R1,32                                                    TQ140500
         STC   R1,PL                   PRNT LN                          TQ140550
         MVC   CONIO(32),HDG1          HEADING BEFORE DATA IN TSO       TQ140600
         BAL   R8,PRNT                 PRINT                            TQ140650
         MVC   CONIO(80),BLANKS                                         TQ140700
LST2     EQU   *                                                        TQ140750
         LR    R1,R4                                                    TQ140800
         STC   R1,PL                   PRINT LN                         TQ140850
         BCTR  R1,R0               DECR. BY 1 FOR MVC                   TQ140900
         STC   R1,LSTMVC+1         STORE MVC LNTH                       TQ140950
LSTMVC   MVC   CONIO(80),0(RA)         DTPIO TO PRINT AREA              TQ141000
         AR    RA,R4                   BUMP TO NEXT LREC                TQ141050
         BAL   R8,EDIT             EDIT AND PRINT.                      TQ141100
         MVC   HDG1(78),BLANKS                                          TQ141200
         B     DB1                                                      TQ141250
LSBLK    LTR   R3,R3               ARE WE DONE ?                        TQ141300
         BZ    LSBLKRET                YES, BRANCH TO RETURN            TQ141350
         LR    R4,R3               NO, SET PRINT LNGTH TO REMAINING     TQ141400
         SR    R3,R3               RECORD LENGTH.                       TQ141450
         B     DB2                                                      TQ141500
LSBLKRET MVI   HEX0+1,X'00'            RESET HEX FLIP-FLOP SWITCH       TQ141550
         B     0(RB)                   RETURN                           TQ141600
         EJECT                                                          TQ142600
*********************************************************************** TQ142700
**********               VERTICAL HEX ROUTINE               *********** TQ142800
*********************************************************************** TQ142900
         SPACE 1                                                        TQ143000
HEXDP    DS    0H                                                       TQ143100
         CLC   HDG1(78),BLANKS         BLANKS ?                         TQ143110
         BE    HEXNOSP                                                  TQ143111
         MVI   CC,X'0B'                SPACE IMMED. ONE LINE            TQ143120
         BAL   R8,PRNT                 PRINT                            TQ143130
         MVI   CC,X'09'                SINGLE SPACE                     TQ143140
         MVC   CONIO(78),HDG1          HDG1,HDG2,HDG3                   TQ143150
         LA    R8,78                                                    TQ143200
         STC   R8,PL                                                    TQ143250
         BAL   R8,PRNT                 PRINT                            TQ143300
HEXNOSP  EQU   *                                                        TQ143310
         MVI   CC,X'0B'                SPACE IMMED. ONE LINE            TQ143400
         BAL   R8,PRNT                 PRINT                            TQ143450
         MVC   CONIO+6(50),0(RA)       50 CHAR FOR TSO HEX              TQ143500
         SR    R8,R8               BUMP PRINT LENGTH                    TQ143550
         IC    R8,PRLTH            BY                                   TQ143600
         LA    R8,6(R8)                                                 TQ143650
         STC   R8,PL               FOR HEX HEADINGS.                    TQ143700
         MVI   INPUT,X'FF'         SET IGNORE OVERFLOW SW ON.           TQ143750
         MVC   CONIO(6),DET1           'CHAR  '                         TQ143800
         MVI   CC,X'09'            SINGLE SPACE.                        TQ143850
         BAL   R8,EDIT             EDIT AND PRINT.                      TQ143900
         MVC   CONIO+06(01),00(RA)     MOVE                             TQ143950
         PACK  CONIO+06(00),CONIO+06(00)   ZONES AND                    TQ144000
         MVO   CONIO+07(16),00(16,RA)  WITH OFFSET TO                   TQ144050
         MVO   CONIO+22(16),15(16,RA)  NUMERIC POSITIONS                TQ144100
         MVO   CONIO+37(16),30(16,RA)                                   TQ144150
         MVO   CONIO+52(05),45(05,RA)  50 BYTES MAX FOR TSO HEX         TQ144200
         NC    CONIO+6(50),SET         AND OFF ZONES                    TQ144250
         TR    CONIO+6(50),HEXTB       TRANSLATE TO HEX CHAR            TQ144300
         MVC   CONIO(06),DET2          'ZONE  '                         TQ144350
         BAL   R8,PRNT             PRINT ZONES.                         TQ144400
         MVC   CONIO+6(50),0(RA)       REFILL HEX AREA                  TQ144450
         NC    CONIO+6(50),SET         AND OFF ZONES                    TQ144500
         TR    CONIO+6(50),HEXTB       TRANSLATE TO HEX CHAR            TQ144550
         MVC   CONIO(6),DET3           'NUMR  '                         TQ144600
         BAL   R8,PRNT             PRINT NUMERIC LINE.                  TQ144650
HEX0     BC    0,HEX51                 FALL THROUGH 1ST TIME            TQ144700
         MVI   HEX0+1,X'F0'            FLIP - BRANCH NEXT TIME          TQ144750
         MVC   CONIO+0(56),SCALE+14    'NNNNNN1...5...10 ETC.'          TQ144800
         B     HEXDP2                  PRINT                            TQ144850
HEX51    MVC   CONIO+6(50),SCALE+70    '...55...60 ETC. '               TQ144900
         MVI   CONIO+6,C'1'            '1..55...60 ETC. '               TQ144950
         MVC   CONIO(6),SCALE+14       'NNNNNN'                         TQ145000
         MVI   HEX0+1,X'00'            FLOP - RESET TO FALL THROUGH     TQ145050
HEXDP2   EQU   *                       DONE                             TQ145100
         MVI   CC,X'11'            SET TO DOUBLE SPACE.                 TQ145150
         MVI   INPUT,X'00'         TURN OFF IGNORE OVERFLOW SW.         TQ145200
         BAL   R8,PRNT             PRINT SCALE.                         TQ145250
         BR    R9                  RETURN.                              TQ145300
         EJECT                                                          TQ146800
*********************************************************************** TQ146900
*************                DISPLAY OS/DITTO HEADING       *********** TQ147000
*********************************************************************** TQ147100
         SPACE 1                                                        TQ147200
DHDG     EQU   *                                                        TQ147300
         LA    R1,PARM                 MSICCW                           TQ147400
         CALL  HEADING                                                  TQ147500
         B     HEADRET(RF)                                              TQ147600
HEADRET  B     0(R8)                   RC = 0                           TQ147700
         B     RETIRPT                 RC = 4                           TQ147800
         B     TELUSER2                RC = 8                           TQ147900
         EJECT                                                          TQ148000
*********************************************************************** TQ148100
**********         NUMERIC FUNCTIONS FOR CONTROL DATA       *********** TQ148200
*********************************************************************** TQ148300
         SPACE 1                                                        TQ148400
TSTNUMV  LR    R0,RC               RIGHT JUSTIFY NUMERIC                TQ148500
         BCTR  R0,R0                   CONSOLE REPLY.                   TQ148600
         MVC   CONIO+50(5),ZEROS                                        TQ148700
         MVC   CONIO+55(10),CONIO                                       TQ148800
         LA    R1,CONIO+54                                              TQ148900
         AR    R1,RC                                                    TQ149000
RTJUST   CLI   0(R1),C' '                                               TQ149100
         BNE   MOVBAC                                                   TQ149200
         BCTR  R1,R0                                                    TQ149300
         BCT   R0,RTJUST                                                TQ149400
MOVBAC   SR    R1,RC                                                    TQ149500
         MVC   CONIO(10),1(R1)                                          TQ149600
TSTNUM   LR    R1,RB               TEST FOR NUMERIC.                    TQ149700
TSTNUM1  TM    0(R1),X'F0'                                              TQ149800
         BNO   NUMBAD                                                   TQ149900
         LA    R1,1(R1)                                                 TQ150000
         BCT   RC,TSTNUM1                                               TQ150100
         B     4(R8)                                                    TQ150200
NUMBAD   CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ150300
         BE    NUMBAD2                 IF CNCD SKIP MVI (SHOULD NOT OC) TQ150400
         MVI   P,0                                                      TQ150500
NUMBAD2  EQU   *                                                        TQ150600
         B     0(R8)                                                    TQ150700
BINCVT   PACK  HOLD,HOLD           CONVERT HOLD TO BINARY               TQ150800
         CVB   R1,HOLD             RESULTS IN REG 1.                    TQ150900
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  TQ151000
         MVC   HOLD+1(7),HOLD                                           TQ151100
         BR    R8                                                       TQ151200
DECCVT   CVD   R7,HOLD             CONVERT BINARY NUMBER                TQ151300
         UNPK  HOLDSEQ,HOLD        IN REG 7                             TQ151400
         MVZ   HOLDSEQ+7(1),ON     TO DECIMAL.                          TQ151500
         MVI   HOLD,0              CLEAR HOLD TO X'00'                  TQ151600
         MVC   HOLD+1(7),HOLD                                           TQ151700
         CLI   ESW,X'00'           DO WE SUPPRESS LEADING ZEROS ?       TQ151800
         MVI   ESW,X'00'                                                TQ151900
         BNE   0(R8)               NO, RETURN.                          TQ152000
         LA    R1,HOLDSEQ                                               TQ152100
         LA    R0,7                REPLACE WITH                         TQ152200
DECLOP   CLI   0(R1),C'0'          BLANKS.                              TQ152300
         BNE   0(R8)                                                    TQ152400
         MVI   0(R1),C' '                                               TQ152500
         LA    R1,1(R1)                                                 TQ152600
         BCT   R0,DECLOP                                                TQ152700
         BR    R8                                                       TQ152800
         EJECT                                                          TQ152900
*********************************************************************** TQ153000
*******************            GET STARTAFT AND NLRECS     ************ TQ153100
*********************************************************************** TQ153200
         SPACE 1                                                        TQ153300
AFTNLR   EQU   *                                                        TQ153400
         MVI   QIGETCNT,0              CLEAR TO                         TQ153500
         MVC   QIGETCNT+1(19),QIGETCNT ZEROS                            TQ153600
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ153700
         BE    TP3                                                      TQ153800
TP2      EQU   *                                                        TQ153900
         MVC   CONIO(63),AFTERMSG      'REPLY - 'NNNNN' START AFTER     TQ154000
         MVI   MSLN,63                                                  TQ154100
         MVI   RPLN,5                                                   TQ154200
         BAL   R8,WRTCON                                                TQ154300
         CLI   CONIO,C'U'              DEFAULT ?                        TQ154400
         BE    QP5                     YES                              TQ154500
         LA    RC,5(R0)                                                 TQ154600
         LA    RB,CONIO                                                 TQ154700
         BAL   R8,TSTNUMV          RECSIZE NUMERIC ?                    TQ154800
         B     TP2                 NO,                                  TQ154900
         B     TP4                 YES                                  TQ155000
TP3      EQU   *                                                        TQ155100
         TM    CT1,X'10'               STARTAFT SUBMITTED               TQ155200
         BNO   QP5                     NO                               TQ155300
         MVC   CONIO(5),HSA            YES                              TQ155400
TP4      LA    RC,5(R0)                                                 TQ155500
         CLC   CONIO(5),ZEROS      GREATER THAN ZERO ?                  TQ155600
         BNE   GRTRZERO            YES,                                 TQ155700
         MVI   CONIO,C'X'                                               TQ155800
GRTRZERO LA    RB,CONIO                                                 TQ155900
         BAL   R8,TSTNUM                                                TQ156000
         B     TP2                                                      TQ156100
         MVC   HOLD+3(5),CONIO                                          TQ156200
         BAL   R8,BINCVT                                                TQ156300
         ST    R1,AFTLR                SAVE VALUE                       TQ156400
QP5      EQU   *                                                        TQ156500
         CLI   CNTRLSW,X'FF'       CONTROL CARDS ?                      TQ156600
         BE    QP7                                                      TQ156700
QP6      EQU   *                                                        TQ156800
         MVC   CONIO(61),NLRMSG                                         TQ156900
         MVI   MSLN,61                                                  TQ157000
         MVI   RPLN,5                                                   TQ157100
         BAL   R8,WRTCON                                                TQ157200
         CLI   CONIO,C'U'              DEFAULT ?                        TQ157300
         BE    QP9                     YES                              TQ157400
         LA    RC,5                                                     TQ157500
         LA    RB,CONIO                                                 TQ157600
         BAL   R8,TSTNUMV              NUMERIC ?                        TQ157700
         B     QP6                                                      TQ157800
         B     QP8                                                      TQ157900
QP7      EQU   *                                                        TQ158000
         TM    CT1,X'04'               NLRECS SUBMITTED                 TQ158100
         BNO   QP9                                                      TQ158200
         MVC   CONIO(5),HNR            RETRVE HOLD NLRECS               TQ158300
QP8      EQU   *                                                        TQ158400
         LA    RC,5                                                     TQ158500
         CLC   CONIO(5),ZEROS                                           TQ158600
         BNE   GRTZER2                                                  TQ158700
         MVI   CONIO,C'X'                                               TQ158800
GRTZER2  LA    RB,CONIO                                                 TQ158900
         BAL   R8,TSTNUM                                                TQ159000
         B     QP6                                                      TQ159100
         MVC   HOLD+3(5),CONIO                                          TQ159200
         BAL   R8,BINCVT                                                TQ159300
         ST    R1,NLR                  SAVE VALUE                       TQ159400
QP9      EQU   *                                                        TQ159500
         L     R1,NLR                  GET NLRECS                       TQ159600
         A     R1,AFTLR                BUMP BY POS. AFTER VALUE         TQ159700
         ST    R1,NLR                  SAVE FOR LIMIT CHECKING          TQ159800
         BR    R9                      RETURN                           TQ159900
         SPACE 1                                                        TQ160000
*******************            BEGIN FUNCTION THAT PRINTS  ************ TQ160100
         SPACE 1                                                        TQ160200
BEGINFUN EQU   *                                                        TQ160300
         BAL   R8,DHDG                                                  TQ160400
         BAL   R8,OVFLO                                                 TQ160500
         BAL   R8,OVFLO                                                 TQ160600
         MVC   HH2+8(20),=C'LOGICAL RECORD PRINT'                       TQ160700
         MVC   CONIO(132),HH2          TSO HEADING                      TQ160800
         MVI   PL,X'84'                                                 TQ160900
         MVI   CC,X'19'                                                 TQ161000
         BAL   R8,PRNT             NO, PRINT NOW                        TQ161100
         BR    R9                      RETURN                           TQ161200
         EJECT                                                          TQ161300
*********************************************************************** TQ161400
********* DCB, CCW'S, STORAGE, ECB'S, IOB, CONSTANTS, EQU'S *********** TQ161500
*********************************************************************** TQ161600
         SPACE 1                                                        TQ161700
QIEOFVEC B     QIEOFSUB                VECTOR FOR EODAD                 TQ161800
VIEOFVEC B     VIEOFSUB                VECTOR FOR EODAD                 TQ161900
SAVEAREA DS    18F                                                      TQ162000
PARM     DS    F                                                        TQ162100
SAVER    DS    F                       SAVE A REG                       TQ162200
SAVER1   DS    F                       SAVE R1 HERE                     TQ162300
QIGETCNT DS    F                       CTR FOR GETS TO QSAMIN           TQ162400
QOPUTCNT DS    F                       CNT OUTPUT LRECLS                TQ162500
VIGETCNT DS    F             LRECLS READ                                TQ162600
NLR      DS    F                       # LRECS TO PROCESS               TQ162700
AFTLR    DS    F                       # OF LREC TO POSIT. PAST BOF     TQ162800
VIFLDS   DS    0F                      SHOWCB OUTPUT                    TQ162900
VIKL     DS    F                                                        TQ163000
VIRKP    DS    F                                                        TQ163100
RECLEN   DS    F                                                        TQ163200
QORBL    DC    X'00'                   RECFM, BLKSIZE, LRECL ON QSAMOUT TQ163300
EOFQIMSG DC    C'EOF ON '                                               TQ163400
QSAMINDC DC    C'QSAMIN'                                                TQ163500
AFTERMSG DC    C'REPLY - ''NNNNN'' START AFTER NTH LREC OR ''U'''       TQ163600
         DC    C' START WITH 1ST LREC'                                  TQ163700
NLRMSG   DC    C'REPLY - ''NNNNN'' LIMIT # LRECS PROCESSED OR ''U'''    TQ163800
         DC    C' PROCESS TO EOF'                                       TQ163900
KEYMSG   DC    C'REPLY - ''K'' START AT KEY, ''C'' AFTER LRECL COUNT,'  TQ164000
         DC    C' OR ''U'' AT 1ST LRECL'                                TQ164100
KEYMSG2  DC    C'REPLY - ''STARTKEY'' (35 CHAR MAX)'                    TQ164200
VSAMINDC EQU   *                                                        TQ164300
VIERMSG  DC    C'VSAMIN ERROR ON '                                      TQ164400
VIERMAC  DC    CL6'123456'                                              TQ164500
         DC    C' MACRO '                                               TQ164600
OPEN     DC    C'OPEN  '                                                TQ164700
TESTCB   DC    C'TESTCB'                                                TQ164800
MODCB    DC    C'MODCB '                                                TQ164900
CLOSE    DC    C'CLOSE '                                                TQ165000
SHOWCB   DC    C'SHOWCB'                                                TQ165100
POINT    DC    C'POINT '                                                TQ165200
GET      DC    C'GET   '                                                TQ165300
DCBMSG   DC    C'QSAMOUT RECFM, BLKSIZE, AND LRECL NOT SUBMITTED'       TQ165400
         DC    C' - QSAMIN USED'                                        TQ165500
         LTORG                         FORCE LITERALS HERE              TQ165600
         EJECT                                                          TQ165700
         COPY  DITTODS1                                                 TQ165800
         SPACE 1                                                        TQ165900
         COPY  DITTODS2                                                 TQ166000
         CSECT                                                          TQ166100
         END   DITTOQV                                                  TQ166200
/*                                                                      TQ166300
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TQ166400
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TQ166700
 NAME TSOQVO(R)                        OBJECT ONLY                      TQ166800
/*                                                                      TQ166900
//                                                                      TQ167000
//TSODITLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL000100
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL000200
//PROCSTEP EXEC DITTODSR                                                TL000300
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL000400
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL000500
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL000600
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL000700
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL000800
 INCLUDE OBJLIB(TSOWTO)                                                 TL000900
 INCLUDE OBJLIB(TSOWTOR)                                                TL001000
 INCLUDE OBJLIB(CNCDSUB)                                                TL001100
 INCLUDE OBJLIB(TSOFUNC)                                                TL001200
 INCLUDE OBJLIB(DISKOPEN)                                               TL001300
 INCLUDE OBJLIB(CDRDSUB)                                                TL001400
 INCLUDE OBJLIB(CDPNSUB)                                                TL001500
 INCLUDE OBJLIB(TSOPRNT)                                                TL001600
 INCLUDE OBJLIB(HEADING)                                                TL001700
 INCLUDE OBJLIB(TSODITOO)              OBJECT ONLY                      TL001800
 ENTRY OSDITTO                                                          TL001900
 NAME TSODITTO(R)                                                       TL002000
/*                                                                      TL002100
//                                                                      TL002200
//TSOPGMLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL002300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL002400
//PROCSTEP EXEC DITTODSR                                                TL002500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL002600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL002700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL002800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL002900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL003000
 INCLUDE OBJLIB(TSOWTO)                                                 TL003100
 INCLUDE OBJLIB(TSOWTOR)                                                TL003200
 INCLUDE OBJLIB(OITTOPGM)              OBJECT CODE ONLY                 TL003300
 ENTRY DITTOPGM                                                         TL003400
 NAME DITSOPGM(R)                                                       TL003500
/*                                                                      TL003600
//                                                                      TL003700
//TSOLSTLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL003800
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL003900
//PROCSTEP EXEC DITTODSR                                                TL004000
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL004100
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL004200
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL004300
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL004400
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL004500
 INCLUDE OBJLIB(TSOWTO)                                                 TL004600
 INCLUDE OBJLIB(TSOWTOR)                                                TL004700
 INCLUDE OBJLIB(OITTOLST)              OBJECT CODE ONLY                 TL004800
 ENTRY DITTOLST                                                         TL004900
 NAME DITSOLST(R)                                                       TL005000
/*                                                                      TL005100
//                                                                      TL005200
//TSOPDSLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL005300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL005400
//PROCSTEP EXEC DITTODSR                                                TL005500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL005600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL005700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL005800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL005900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL006000
 INCLUDE OBJLIB(TSOWTO)                                                 TL006100
 INCLUDE OBJLIB(TSOWTOR)                                                TL006200
 INCLUDE OBJLIB(TSOPRNT)                                                TL006300
 INCLUDE OBJLIB(OITTOPDS)              OBJECT CODE ONLY                 TL006400
 ENTRY DITTOPDS                                                         TL006500
 NAME DITSOPDS(R)                                                       TL006600
/*                                                                      TL006700
//                                                                      TL006800
//TSODASLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL006900
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL007000
//PROCSTEP EXEC DITTODSR                                                TL007100
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL007200
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL007300
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL007400
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL007500
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL007600
 INCLUDE OBJLIB(TSOWTO)                                                 TL007700
 INCLUDE OBJLIB(TSOWTOR)                                                TL007800
 INCLUDE OBJLIB(OITTODAS)              OBJECT CODE ONLY                 TL007900
 ENTRY DITTODAS                                                         TL008000
 NAME DITSODAS(R)                                                       TL008100
/*                                                                      TL008200
//                                                                      TL008300
//TSOQVLE  JOB ('A=SX82'),'PAS3 BRAMMER',                               TL008400
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL008500
//PROCSTEP EXEC DITTODSR                                                TL008600
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL008700
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL008800
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL008900
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL009000
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL009100
 INCLUDE OBJLIB(TSOWTO)                                                 TL009200
 INCLUDE OBJLIB(TSOWTOR)                                                TL009300
 INCLUDE OBJLIB(CDRDSUB)                                                TL009400
 INCLUDE OBJLIB(CDPNSUB)                                                TL009500
 INCLUDE OBJLIB(TSOPRNT)                                                TL009600
 INCLUDE OBJLIB(HEADING)                                                TL009700
 INCLUDE OBJLIB(TSOQVO)                OBJECT CODE ONLY                 TL009800
 ENTRY DITTOQV                                                          TL009900
 NAME DITSOQV(R)                                                        TL010000
/*                                                                      TL010100
//                                                                      TL010200
//TSOXXXLE JOB ('A=SX82'),'PAS3 BRAMMER',                               TL010300
//  MSGLEVEL=1,CLASS=G,REGION=128K                                      TL010400
//PROCSTEP EXEC DITTODSR                                                TL010500
//LKEDSTEP EXEC LKED,PARM.LKED='LIST,XREF,AC=1'                         TL010600
//LKED.SYSLMOD DD DSN=*.PROCSTEP.EXECSTEP.LINKLIB,DISP=SHR              TL010700
//LKED.SYSLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL010800
//LKED.OBJLIB  DD DSN=*.PROCSTEP.EXECSTEP.LOADLIB,DISP=SHR              TL010900
//LKED.SYSIN DD *,DCB=BLKSIZE=80                                        TL011000
 INCLUDE OBJLIB(TSOPRNT)                                                TL011100
 INCLUDE OBJLIB(DITTOE11)                                               TL011200
 INCLUDE OBJLIB(DITTOE12)                                               TL011300
 INCLUDE OBJLIB(DITTOE13)                                               TL011400
 INCLUDE OBJLIB(DITTOE14)                                               TL011500
 INCLUDE OBJLIB(OITTOXXX)              OBJECT CODE ONLY                 TL011600
 ENTRY DITTOXXX                                                         TL011700
 NAME DITSOXXX(R)                                                       TL011800
/*                                                                      TL011900
//                                                                      TL012000
