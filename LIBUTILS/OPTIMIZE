*PROCESS MACRO;
 /******* PL/1 (F) TO PL/1 OPTIMISER CONVERSION *******/
0%/*******************************************************************/
  /*                                                                 */
  /* USES COMPILE-TIME PREPROCESSOR TO MODIFY PL/I (F) SOURCE FOR    */
  /* USE WITH THIS COMPILER.   THE PREPROCESSOR STATEMENTS FOLLOWING */
  /* COULD BE PLACED ON A LIBRARY AND USED TO MODIFY SEVERAL SOURCE  */
  /* PROGRAMS BY MEANS OF THE PREPROCESSOR %INCLUDE STATEMENT. THEY  */
  /* PERFORM THE FOLLOWING FUNCTIONS:                                */
  /*                                                                 */
  /*  1. CONVERT CALLS TO FOLLOWING PL/I (F) IHE... ROUTINES TO THE  */
  /*     EQUIVALENT NEW PL/I... ROUTINES-                            */
  /*           IHEDUMP/J/C/T  TO  PLIDUMP,                           */
  /*           IHESRTA/B/C/D  TO PLISRTA/B/C/D,                      */
  /*           IHECKPS/T  TO  PLICKPT,                               */
  /*           IHERESN/T  TO  PLIREST/PLICANC,                       */
  /*           IHESARC/IHETSAC  TO  PLIRETC.                         */
  /*                                                                 */
  /*  2. CHANGE FIRST DECLARE/DCL STATEMENT FOUND TO INCLUDE         */
  /*     BUILTIN ATTRIBUTE FOR FOLLOWING BUILT-IN FUNCTIONS(WHICH    */
  /*     DO NOT TAKE ARGUMENTS, AND SO ARE NOT IMPLICITLY DECLARED   */
  /*     BUILTIN FOR THIS COMPILER - AS THEY WOULD BE FOR PL/I (F))- */
  /*           DATE, TIME, ONCODE, ONCHAR, ONSOURCE, ONLOC,          */
  /*           ONFILE, ONKEY, EMPTY, NULL.                           */
  /*     NOTE: THE ONCOUNT BIF IS OMITTED FROM THIS LIST, & IS USED  */
  /*           LATER TO SHOW THE EFFECT OF NOT DECLARING IT BUILTIN. */
  /*           ANY REFERENCES TO IHE--- ROUTINES MUST BE REMOVED     */
  /*           FROM DECLARE STATEMENTS BEFORE THE SOURCE PROGRAM IS  */
  /*           PREPROCESSED, OTHERWISE FAILURES MAY OCCUR WHEN THE   */
  /*           CONVERTED PROGRAM IS LINK-EDITED.                     */
  /*                                                                 */
  /*  3. CHANGE 'NULLO' TO 'NULL' - THERE IS NO NULLO BUILTIN        */
  /*     FUNCTION FOR THIS COMPILER; NULL MUST BE USED BOTH WITH     */
  /*     POINTER AND OFFSET VARIABLES.                               */
  /*                                                                 */
  /*******************************************************************/;
1%       DCL   (IHEDUMP, IHEDUMJ, IHEDUMC, IHEDUMT, DECLARE, DCL,
                IHECKPT, IHECKPS) ENTRY;
0%       DCL   (IHESRTA, IHESRTB, IHESRTC, IHESRTD, IHEREST,
                IHERESN, IHESARC, IHETSAC, NULLO) CHAR;
0%       DCL   COUNT FIXED;
-%       COUNT = 0                     /* FIRST-TIME-IN SWITCH.      */;
0%       DEACTIVATE DECLARE, DCL       /* ENSURE MODIFIED STATEMENTS */;
 %       ACTIVATE DECLARE,             /* ARE NOT RESCANNED DURING   */
                  DCL NORESCAN         /* PREPROCESSOR REPLACEMENT.  */;
1% DECLARE: DCL:                       /* GENERATE BUILTIN DECLARES. */
         PROC RETURNS(CHAR);
         COUNT = COUNT + 1             /* COUNT = 1 IF 1ST TIME IN.  */;
         IF COUNT = 1
           THEN RETURN('DCL (DATE,TIME,ONCHAR,ONSOURCE,ONCODE,' ||
                       'ONLOC,ONFILE,ONKEY,EMPTY,NULL) BUILTIN, ' ||
                       'CKPT_RETC FIXED BIN(31),');
           ELSE RETURN('DCL');
 %       END;
-% IHEDUMP: IHEDUMJ: IHEDUMC: IHEDUMT: /* REPLACED BY CALL TO        */
         PROC(ID#) RETURNS(CHAR)       /* PLIDUMP ROUTINE, INCLUDING */;
         DCL ID# CHAR                  /* ORIGINAL ID(IF PRESENT).   */;
         IF ID# = '' THEN RETURN('PLIDUMP');
                     ELSE RETURN('PLIDUMP(''TFCA'',''' || ID# || ''')');
 %       END;
-% IHECKPS: IHECKPT:                   /* CHANGE TO PLICKPT. PL/I(F) */
         PROC(ARG1, ARG2, ARG3, ARG4)  /* DEFAULTS GENERATED WHERE   */
             RETURNS(CHAR)             /* NO ARGUMENTS ORIGINALLY.   */;
         DCL (ARG1, ARG2, ARG3, ARG4) CHAR;
         IF ARG1 = '' THEN ARG1 = '''SYSCHK''';
         IF ARG2 = '' THEN ARG2 = ' ''''';
         IF ARG3 = '' THEN ARG3 = ' ''PS''';
         IF ARG4 = '' THEN ARG4 = ' CKPT_RETC';
         RETURN('PLICKPT(' || ARG1 || ',' || ARG2 || ','
                           || ARG3 || ',' || ARG4 || ')');
 %       END;
-%       IHESRTA = 'PLISRTA'           /* REPLACE                    */;
 %       IHESRTB = 'PLISRTB'           /*  CALLS TO                  */;
 %       IHESRTC = 'PLISRTC'           /*   IHE---                   */;
 %       IHESRTD = 'PLISRTD'           /*    ROUTINES                */;
 %       IHEREST = 'PLIREST'           /*     BY                     */;
 %       IHERESN = 'PLICANC'           /*      CALLS TO              */;
 %       IHESARC = 'PLIRETC'           /*       PLI---               */;
 %       IHETSAC = 'PLIRETC'           /*        ROUTINES. .         */;
-%/*     THERE IS NO NULLO BUILTIN FUNCTION FOR THIS COMPILER;
         NULL MUST BE USED INSTEAD.                                  */;
0%       NULLO = 'NULL';
1%/* END OF PREPROCESSOR STATEMENTS;  SOURCE STATEMENTS FOLLOW HERE: */;
