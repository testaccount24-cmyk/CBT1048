         TITLE 'UTILITY PRINT PROGRAM - UT363'
*
         ISEQ  73,80
         SPACE
* WRITTEN BY D. R. HURTGEN
*
* MONSANTO COMPANY - CREVE COEUR
*
* NOVEMBER 1966
*
* THIS PROGRAM PRINTS THE CONTENTS OF DATA SETS CREATED IN THE MONSANTO
* STANDARD PRINT FORMAT. INPUT MAY COME FROM TAPE OR DISK AND THE OUT-
* PUT MAY GO DIRECTLY TO THE PRINTER OR TO THE SYSOUT WRITER.
*
         EJECT
         TITLE 'DISCLAIMER !!'
***********************************************************************
*                                                                     *
*        15 FEB 1978.                                                 *
*                                                                     *
*            WE HAVE JUST DISCOVERED THAT MOST OF THE USERS OF THIS   *
*        PROGRAM ARE ROUTING ITS OUTPUT TO DISK DATA SETS WITH A      *
*        LARGER BLOCKSIZE SPECIFIED IN THE JCL.                       *
*            UNFORTUNATELY, AS THE ORIGINAL AUTHOR DECIDED TO USE     *
*        BSAM AND UNBLOCKED RECORDS FOR HIS OUTPUT, WHAT IS CODED     *
*        IN THE JCL IS IRRELEVANT AND IGNORED. THIS MEANS THAT WE     *
*        NOW HAVE THOUSANDS OF UNBLOCKED PRINT DATA SETS CLOGGING     *
*        UP OUR DISKS.     ---- HELP! ----                            *
*                                                                     *
*            IN ORDER TO MAINTAIN COMPATIBILITY WITH APPLICATIONS     *
*        RELYING ON THE UNBLOCKED OUTPUT FROM THIS PROGRAM AND TO     *
*        ALLOW LARGER BLOCKSIZES WHEN NECCESSARY, IT IS NOW           *
*        ENCUMBENT UPON US TO RECODE THE OUTPUT ROUTINES FOR QSAM     *
*        WITH A DEFAULT BLOCKSIZE OF 133 IF NOTHING IS SPECIFIED IN   *
*        THE JCL OR ELSEWHERE.                                        *
*                                                                     *
*            THIS PROGRAM IS NOT WELL WRITTEN.                        *
*                         ------                                      *
*                                                                     *
*        CONSEQUENTLY, THE NECCESSARY MODIFICATIONS ARE SOMEWHAT      *
*        TORTUOUS. I APOLOGISE FOR THIS IN ADVANCE AND HOPE YOU       *
*        WILL FORGIVE ME.                                             *
*            I HAVE MARKED THE 'DELETED' STATEMENTS WITH A '%' IN     *
*        COLUMN 2 AND INSERTED STATEMENTS WITH MY INITIALS IN         *
*        COLUMNS 69-71.                                               *
*                                                                     *
*              J.E.ABBEY   FEB 15TH 1978.                             *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'UT363 - DATA SET PRINT UTILITY'
*
* REGISTER ASSIGNMENTS -
*   COMMON TO ENTIRE PROGRAM -
*                        0, 1, 11, 14, AND 15 ARE NOT USED
*                         3 - LINE COUNT MAXIMUM
*                        10 - ADDRESS OF CURRENT OUTPUT BLOCK
*                        12 - BASE FOR PROGRAM
*                        13 - ADDRESS OF REGISTER SAVE AREA
*   DURING INITIALIZATION PHASE -
*                         2 - UTILITY
*                         4 - UTILITY
*                         5 - CURRENT LOCATION IN PARAMETER STRING
*                         6 - NOT USED
*                         7 - ADDRESS OF END OF PARAMETER STRING
*                       8 - ADDRESS OF BEGINNING OF CURRENT PARAMETER
*                         9 - RELATIVE TO ZERO PARAMETER LENGTH
*   DURING PROGRAM MAIN LINE -
*                         2 - SUBROUTINE LINKAGE
*                         4 - UTILITY
*                         5 - UTILITY
*                         6 - UTILITY
*                         7 - INPUT LOGICAL RECORD LENGTH (DCBLRECL)
*                         8 - ADDRESS OF CURRENT INPUT END OF BLOCK
*                         9 - ADDRESS OF CURRENT LOGICAL INPUT RECORD
         EJECT
*                             INITIALIZATION
UT363TES START
BEGIN    STM   14,12,12(13)   ESTABLISH PROGRAM LINKAGE
         BALR  12,0
         USING *,12
         ST    13,SAVEREG+4
         LA    13,SAVEREG
         L     8,0(0,1)  LOAD ADDRESS OF PARAMETER LIST TO R8
         SR    3,3  INITIALIZE X3
         OPEN  (PRINTAPE,,PRINTER,(OUTPUT))  OPEN FILES
         GETBUF PRINTAPE,9    ACQUIRE INPUT BUFFER
         ST    9,INDECB+12    PLACE ADDRESS IN READ DECB
         READ  INDECB,SF,MF=E START I/O TO FILL FIRST BUFFER
         GETBUF PRINTAPE,9    GET ANOTHER INPUT BUFFER
         ST    9,HLDREADA     STORE ADDRESS IN SAVE AREA
*%       GETBUF PRINTER,9     ACQUIRE OUTPUT BUFFERS
*%       ST    9,HLDWRITB
*%       XC    2(131,9),2(9)  CLEAR OUTPUT BUFFER
*%       GETBUF PRINTER,10
*%       XC    2(131,10),2(10)     CLEAR OUTPUT BUFFER
         LA    10,$BUFFER          LOAD ADDRESS OF OUTPUT BUFFER  *JEA
         SR    5,5
         LA    6,1
         LH    7,0(0,8)  LOAD PARAMETER CHARACTER COUNT TO X7
         LTR   7,7  Q.-CHARACTER COUNT IS ZERO
         BZ    NONE B.-YES, NO PARAMETERS SUBMITTED
         AR    7,8  SET ADDRESS OF END OF PARAMETER STRING
         LA    7,1(0,7)
         LA    5,2(0,8)  SET ADDRESS OF BEGINNING OF PARAMETER STRING
STRTLOOP LR    8,5  SAVE ADDRESS OF BEGINNING OF THIS PARAMETER
         CLI   0(5),C',' SCAN STRING FOR DELIMITER CHARACTER
         BE    *+8
         BXLE  5,6,*-8
         LR    9,5  GOT IT - COMPUTE RELATIVE TO ZERO PARAMETER LENGTH
         SR    9,8
         AR    5,6  INCREMENT R5 TO POINT TO NEXT PARAMETER
         BCTR  9,0
         BM    STRTLOOP  IF PARAMETER LENGTH IS ZERO, GET NEXT ONE
         CH    9,=H'4'   Q.-PARAMETER TOO LONG
         BH    BADPARM   B.-YES
         EX    9,MVN
         EX    9,CLCA    Q.-THIS PARAMETER IS NON-NUMERIC
         BL    CKTYPE    B.-YES
         EX    9,MVZ
         EX    9,CLCB    Q.-IS IT NUMERIC
         BL    DOCOUNT   B.-YES
CKTYPE   CH    9,=H'3'   Q.-TEST PARAMETER
         BNL   CKTEST    B.-YES
         LTR   9,9       Q.-REPORT CODE PARAMETER
         BZ    CKREPCOD  B.-YES
BADPARM  MVC   0(71,10),PARMMSG    PRINT MESSAGE ABOUT IMPROPER PARA-
         BAL   2,WRITE               METERS IN THE EXECUTE CARD
         LA    1,44 SET COMPLETION CODE
         SVC   13   ABEND
PACK     PACK  PACKAREA,0(0,8)
MVN      MVN   ZONES(0),0(8)
MVZ      MVZ   NUMERIC(0),0(8)
CLCA     CLC   0(0,8),ZONES
CLCB     CLC   0(0,8),NUMERIC
DOCOUNT  EX    9,PACK    LINE COUNT MAXIMUM FURNISHED
         CVB   3,PACKAREA     CONVERT TO BINARY VALUE AND STORE IN X3
         MVI   GET-3,X'F0'    SET SWITCH TO BRANCH IF LINE COUNT ZERO
         B     CKDONE    GO TO TEST FOR LAST PARAMETER
CKTEST   CLC   0(4,8),=C'TEST'          Q.-TEST PARAMETER SUPPLIED
         BE    TESTON                   B.-YES
         CLC   0(4,8),=C'LINE'          Q.-LINE PARAMETER SUPPLIED
         BNE   CARRIAGE  B.-NO. TEST FOR CARRIAGE TAPE PARAMETER
         OI    LINE+1,X'F0'             SET LINELOOP SWITCH ON
         B     CKDONE                   GO TO TEST FOR LAST PARAMETER
CARRIAGE CLC   0(2,8),=C'CT'       Q.-CARRIAGE TAPE PARAMETER
         BE    CARRTAPE            B.-YES
         CLC   0(2,8),=C'PP'       Q.-PAPER PARAMETER
         BE    PAPER               B.-YES
         B     BADPARM             B.-NO
TESTON   OI    STATBYTE,X'80'           SET TEST MODE BIT
         B     CKDONE    GO TO TEST FOR LAST PARAMETER
CKREPCOD CLI   0(8),C'A' Q.-REQUESTED REPORTS ARE VALID CODES
         BL    BADPARM   B.-NO
         CLI   0(8),C'H'
         BH    BADPARM   B.-NO
         SR    4,4  CODE IS VALID - POST TO LIST BYTE
         LA    2,256
         IC    4,0(0,8)
         SRL   2,0(4)
         EX    2,OI
CKDONE   CLR   5,7  Q.-ALL PARAMETERS PROCESSED
         BNH   STRTLOOP  B.-NO, GO TO GET NEXT ONE
NONE     LH    7,DCBLRECL     RECORD LENGTH TO X7
         CH    7,=H'5'   Q.-RECORD LENGTH TOO SHORT
         BNL   CKTOOLNG  B.-NO
WRITEMSG MVC   0(69,10),LNGTHMSG   PRINT MESSAGE ABOUT INVALID LENGTH
         BAL   2,WRITE               RECORDS AND TERMINATE JOB STEP
         LA    1,48 SET COMPLETION CODE
         SVC   13   ABEND
CKTOOLNG CH    7,=H'136' Q.-RECORD TOO LONG
         BNH   LENGTHOK  B.-NO
         TM    STATBYTE,X'80' Q.-RUNNING IN A TEST ENVIRONMENT
         BZ    WRITEMSG       B.-NO, GO TO TERMINATE JOB STEP
         LA    5,MSG136  PRINT MESSAGE THAT ONLY THE FIRST 132
         MVI   MOVEMSG+1,78   CHARACTERS WILL BE PRINTED
         BAL   4,ERMSGWRT
         BCTR  7,0  DECREMENT X7 TO POINT TO REPORT CODE
         BCTR  7,0
*%       CHECK OUTDECB
         B     DOREST
LENGTHOK SH    7,=H'4'   SET LENGTH BYTE IN PRINT MOVE INSTRUCTION
         STC   7,SPACEOK+7 AT 10530
         LA    7,2(0,7)  SET DISPLACEMENT TO POINT TO REPORT CODE
         MVC   MSGHOLD+2(131),MSGHOLD+1 CLEAR ERROR MESSAGE WRITE AREA
DOREST   STC   7,DONEXT+5     STORE REPORT CODE POINTER AT LINE 10130
         LA    7,2(0,7)
         MVI   0(10),3   INITIATE PRINTER NO-OP AS FIRST COMMAND
         BAL   2,WRITE
         TM    STATBYTE,X'80' Q.-RUNNING IN A TEST ENVIRONMENT
         BZ    GOON           B.-NO
         LTR   3,3  Q.-LINE LIMIT FURNISHED
         BNZ   GOON B.-YES
         LA    3,200     SET ARBITRARY LIMIT OF 200 LINES
         MVI   GET-3,X'F0'    ENABLE LINE LIMIT CHECK
GOON     STH   3,HLDLIMIT     SAVE LINE MAXIMUM
         STH   3,SAVLIMIT
LINE     NOP   LINELOOP
         CLI   REPCODES,0     Q.-REPORTS HAVE BEEN SELECTED
         BNE   SETEMUP        B.-YES, GO TO GET THE FIRST ONE
         EJECT
*                        BEGIN PROGRAM MAIN LINE
READ     CHECK INDECB    CHECK SUCCESSFUL COMPLETION OF PREVIOUS READ
         NOTE  PRINTAPE  GET RELATIVE POSITION IN THE FILE AND
         ST    1,HLDCOUNT     SAVE IT
         L     9,INDECB+12    LOCATION OF BUFFER JUST FILLED TO X9
         MVC   HLDREADB,HLDREADA   EXCHANGE BUFFERS
         MVC   HLDREADA,INDECB+12
         MVC   INDECB+12,HLDREADB
         LR    8,9  COMPUTE LOCATION OF END OF BLOCK
         L     6,INDECB+16    GET CSW RESIDUAL COUNT AND
         SH    8,14(0,6)        SUBTRACT IT FROM THE BUFFER ADDRESS
         AH    8,DCBBLKSI         THEN ADD THE BLOCK SIZE
         READ  INDECB,SF,MF=E START I/O TO FILL NEXT BUFFER
DONEXT   MVC   REPCD(1),0(9)  SAVE REPORT CODE
SWA      B     FIRSTIME  SET UP FIRST REPORT CODE FOUND AS FIRST PRINTD
CLINSTR  CLI   REPCD,0   Q.-THIS REPORT BEING PRINTED DURING THIS PASS
SWC      BNE   POST      B.- NO. POST OTHER REPORT CODES TO LIST
         BNE   GET       B.-NO, GET NEXT RECORD
SAVSPACE MVC   HOLDCHAR(2),0(9)    SAVE LINE SPACING CHARACTERS
         TR    0(2,9),TRANSTBL     CONVERT TO 360 COMMAND CODE
         CLI   HOLDCHAR+1,C' '     Q.-BEFORE PRINT SPACE SPECIFIED
         BE    TSTAPS              B.-NO, GO TO TEST APS CHARACTER
         TM    1(9),2    Q.-BPS CHARACTER IS VALID
         BZ    BADSPACE  B.-NO
         MVC   0(1,10),1(9)   MOVE COMMAND CODE TO WRITE AREA AND
         BAL   2,PRINT          INITIATE FORMS MOVEMENT
TSTAPS   CLI   0(9),0    Q.-AFTER PRINT SPACE CHARACTER IS VALID
         BE    BADSPACE  B.-NO
         TM    0(9),2    Q.-BPS CHARACTER IN APS LOCATION
         BZ    SPACEOK   B.-NO
BADSPACE MVI   0(9),9    SET APS CHARACTER TO SINGLE SPACE AND
         OI    STATBYTE,2  SET ERROR BIT
SPACEOK  MVC   1(1,9),0(9)    MOVE PRINT LINE AND APS COMMAND CODE TO
         MVC   0(133,10),1(9)   WRITE AREA AND GO TO PRINT
         BAL   2,PRINT
         TM    STATBYTE,3     Q.-THIS RECORD HAS ERRORS
         BZ    GETNEXT        B.-NO
         LA    5,ERRORMSG     MOVE ERROR MESSAGE TO PRINT
         MVI   MOVEMSG+1,72
         BAL   4,WRTERMSG     GO TO PRINT
         NI    STATBYTE,X'FC' TURN OFF ERROR BITS
         TM    STATBYTE,X'80' Q.-TEST ENVIRONMENT
         BO    GETNEXT        B.-YES
         LA    1,40 SET COMPLETION CODE
         SVC   13   ABEND
GETNEXT  BCT   3,*+8     DECREMENT LINE COUNT MAXIMUM
         NOP   WRAPUP    SW.-GO TO TERMINATE REPORT IF LINE COUNT ZERO
GET      AR    9,7  INCREMENT X9 TO POINT TO NEXT RECORD
         CLR   9,8  Q.-ENTIRE BLOCK PROCESSED
         BE    READ B.-YES
         B     DONEXT    GO TO PROCESS NEXT RECORD
*                        END OF DATA SET ROUTINE
WRAPUP   CHECK INDECB    ENTRY FROM LINE COUNT TERMINATOR
         LA    5,MAXMSG  PRINT MESSAGE INDICATING LINE COUNT MAXIMUM
         MVI   MOVEMSG+1,67   WAS EXCEEDED
         BAL   4,WRTERMSG
ENDOFDS  MVI   0(10),3   ENTRY FROM END OF DATA SET
         BAL   2,PRINT   INITIATE PRINTER NO-OP TO TEST LAST LINE
         CLI   REPCODES,0     Q.-ANY REPORTS REMAINING TO BE PRINTED
         BE    ENDOFJOB       B.-NO
         CLOSE (PRINTAPE,REREAD),TYPE=T REPOSITION DATA SET TO REREAD
         READ  INDECB,SF,MF=E     START I/O TO FILL FIRST BUFFER
         MVC   HLDCOUNT,=F'1' RESET POSITION COUNTER
         LH    3,HLDLIMIT     RESTORE LINE LIMIT
SETEMUP  LA    6,256     DETERMINE NEXT REPORT TO BE PRINTED
         IC    5,=X'C0'
LOOP     LA    5,1(0,5)
         SRL   6,1
         EX    6,TM
         BZ    LOOP
         STC   5,CLINSTR+1    STORE SELECTED REPORT CODE AT 10150
         EX    6,XI TURN OFF REPORT BIT
         MVI   SWC+1,0   NO-OP SWITCH C
         MVI   SWA+1,0   NO-OP SWITCH A
         B     READ RETURN TO PROGRAM MAIN LINE
TM       TM    REPCODES,0
XI       XI    REPCODES,0
*%DOFJOB CHECK OUTDECB   END OF JOB ROUTINE
ENDOFJOB DS    0H                                                 *JEA
         CLOSE (PRINTAPE,,PRINTER)
         FREEPOOL PRINTAPE    RELEASE BUFFER POOLS
         FREEPOOL PRINTER
         L     13,SAVEREG+4   ESTABLISH RETURN LINKAGE
         L     15,=F'0'
        RETURN (14,12),RC=(15)
PRTERROR ABEND 100,DUMP  TEMPORARY PRINTER ERROR EXIT
*                        MISCELLANEOUS ROUTINES
*      SET UP FIRST REPORT ENCOUNTERED AS FIRST ONE TO BE PRINTED
FIRSTIME B     POST      B.-GO TO TEST FOR VALID CODE
         MVI   SWA+1,0   NO-OP SWITCH A
         MVI   SWB+1,0   NO-OP SWITCH B
         MVC   CLINSTR+1(1),REPCD  SET UP CLI INSTRUCTION AT LINE 10150
         B     SAVSPACE  RETURN
*                 POST REPORT CODES ENCOUNTERED TO A LIST
POST     CLI   REPCD,C'A'  Q.-REPORT CODE IS IN VALID RANGE OF A THRU H
         BL    BADCODE     B.-NO
         CLI   REPCD,C'H'
         BH    BADCODE     B.-NO
SWB      B     FIRSTIME+4
         SR    4,4       CODE IS VALID - POST TO LIST BYTE
         LA    5,256
         IC    4,REPCD
         SRL   5,0(4)
         EX    5,OI
         B     GET       RETURN TO GET NEXT RECORD
OI       OI    REPCODES,0
BADCODE  OI    STATBYTE,1     SET ERROR BIT FOR INVALID REPORT CODE
         B     SAVSPACE  GO TO CONTINUE PROCESSING
*                             PRINT ROUTINE
*%INT    CHECK OUTDECB   CHECK SUCCESSFUL COMPLETION OF PREVIOUS WRITE
PRINT    DS    0H                                                 *JEA
         TM    0(10),X'80'    Q.-CHANNEL SKIP
         BZ    WRITE     B.- NO
         TM    0(10),X'70'    Q.-CHANNEL ONE
         BM    CKMODE         B.-NO
         MVC   PAGEBEGN,HLDCOUNT   SAVE LOCATION OF FIRST LINE ON PAGE
         STH   3,SAVLIMIT     SAVE LINE MAXIMUM RESIDUAL COUNT
*%ITE    ST    10,OUTDECB+12  LOCATION OF BUFFER TO BE WRITTEN TO DECB
*%       WRITE OUTDECB,SF,MF=E     START I/O TO INITIATE PRINTING
*%       ST    10,HLDWRITA    EXCHANGE BUFFER AREAS
*%       L     10,HLDWRITB
*%       MVC   HLDWRITB,HLDWRITA
WRITE    PUT   PRINTER,(10)        WRITE OUT BUFFER               *JEA
         BR    2    RETURN ADDRESS
CKMODE   TM    STATBYTE,X'80' Q.-RUNNING IN TEST ENVIRONMENT
         BZ    WRITE          B.-NO
         SR    4,4  RESET R4
         NI    0(10),X'7F'    CONVERT COMMAND CODE TO CHANNEL NUMBER
         IC    4,0(0,10)
         SRL   4,2
         LA    5,NUMTABLE
         AR    4,5
         MVC   DISPLAY(2),0(4)     DISPLAY IN SKIP MESSAGE
         TM    0(10),2   Q.-AFTER PRINT SKIP
         BZ    DOAFTPRT  B.-YES
         MVI   0(10),X'13'    CHANGE COMMAND CODE TO SPACE TWO LINES
         MVC   MODMSG,IMMEDIAT  MODIFY MESSAGE
         B     CONTINUE  GO TO FINISH PROCESSING
DOAFTPRT MVI   0(10),X'11'    CHANGE COMMAND CODE TO SPACE TWO LINES
         MVC   MODMSG,AFTERPRT  AFTER PRINTING AND MODIFY MESSAGE
CONTINUE LR    4,2  EXIT ADDRESS TO R4
         BAL   2,WRITE   GO TO INITIATE PRINTING OF INTERCEPTED LINE
         LA    5,SKIPMSG PRINT MESSAGE THAT CHANNEL SKIP WAS INTER-
         MVI   MOVEMSG+1,71   CEPTED AND SIMULATED ON THE PRINTER
*                        PRINT ROUTINE FOR ERROR MESSAGES
*%TERMSG CHECK OUTDECB   CHECK SUCCESSFUL COMPLETION OF PREVIOUS WRITE
WRTERMSG DS    0H                                                 *JEA
*%MSGWRT MVC   OUTDECB+12,=A(MSGHOLD)   ADDRESS OF WRITE AREA TO DECB
ERMSGWRT MVC   MSGHOLD+2(131),MSGHOLD+1 CLEAR AND LOAD MESSAGE WRITE
MOVEMSG  MVC   MSGHOLD(0),0(5)     AREA
*%       WRITE OUTDECB,SF,MF=E     START I/O TO INITIATE PRINTING
         PUT   PRINTER,MSGHOLD     WRITE THE ERROR MESSAGE        *JEA
         BR    4    RETURN ADDRESS
*%NELOOP CHECK OUTDECB                  WAIT FOR PREVIOUS WRITE
LINELOOP DS    0H                                                 *JEA
*%       MVC   OUTDECB+12,=A(LINE0)
*%       MVI   OUTDECB+7,X'84'
*%       WRITE OUTDECB,SF,MF=E          START I/O TO INITIATE PRINTING
*%       CHECK OUTDECB                  WAIT FOR PREVIOUS WRITE
         PUT   PRINTER,LINE0       FIRST OUTPUT LINE              *JEA
*%       MVC   OUTDECB+12,=A(LINE1)
*%       WRITE OUTDECB,SF,MF=E          START I/O TO INITIATE PRINTING
*%       CHECK OUTDECB
         PUT   PRINTER,LINE1       SECOND OUTPUT LINE             *JEA
*%       MVC   OUTDECB+12,=A(LINE2)
*%       WRITE OUTDECB,SF,MF=E
*%       CHECK OUTDECB
         PUT   PRINTER,LINE2       THIRD OUTPUT LINE              *JEA
         TRUNC PRINTER             ENSURE BLOCK IS WRITTEN        *JEA
         WTOR  'ALIGNED OK?  REPLY Y OR N.',ANSWER,1,QUESTECB
*%       MVI   OUTDECB+7,X'00'
WAIT     WAIT  ECB=QUESTECB             WAIT FOR REPLY       B
         CLI   ANSWER,C'Y'              ANSWER YES ?         B
         BE    LINE+4                   B.-YES               B
         CLI   ANSWER,C'N'              ANSWER NO ?
         BE    LINELOOP                 B.-YES
         WTOR  'REPLY INVALID.  REPEAT REPLY.',ANSWER,1,QUESTECB
         B     WAIT
CARRTAPE MVC   X+30(2),3(8)        MOVE IN CARRIAGE TAPE CODE
         CNOP  0,4            ALIGN                      CODE
X        WTOR  'CARRIAGE TAPE=  ',ANSWER,1,QUESTECB      CODE
XX        WAIT  ECB=QUESTECB        WAIT FOR ANSWER      CODE
         CLI   ANSWER,C'Y'         Q.-ANSWER YES  R      CODE
         BE    CKDONE              B.-YES. TEST FOR LAST PARAMETER
         CLI   ANSWER,C'N'         Q.-ANSWER NO
         BNE   IDIOTS              B.-NO.
         WTOR  'PARDON',ANSWER,1,QUESTECB
         B     XX                  B.-WAIT FOR ANSWER
IDIOTS   WTOR  'YOU BUNGLING IDIOT, REPEAT REPLY',ANSWER,1,QUESTECB
         B     XX                  B.-WAIT FOR ANSWER
PAPER    MVC   Y+22(2),3(8)        MOVE IN PAPER CODE
         CNOP  0,4                 ALIGN
Y        WTOR  'PAPER=  ',ANSWER,1,QUESTECB
YY       WAIT  ECB=QUESTECB        WAIT FOR ANSWER
         CLI   ANSWER,C'Y'         Q.-ANSWER YES
         BE    CKDONE              B.-YES. TEST FOR LAST PARAMETER
         CLI   ANSWER,C'N'         Q.-ANSWER NO
         BNE   IMBECILE            &.-NO
         WTOR  'WHAT THE HELL DO YOU MEAN, NO?',ANSWER,1,QUESTECB
         B     YY                  B.-WAIT FOR ANSWER
IMBECILE NOP   SCNDERR             B.-SECOND MISTAKE ROUTINE
         MVI   IMBECILE+1,X'F0'    TURN ON SWITCH
         WTOR  'REPEAT THE REPLY, YOU WITLESS GOON',ANSWER,1,QUESTECB
         B     YY                  B.-WAIT FOR ANSWER               B
SCNDERR  MVI   IMBECILE+1,X'00'    TURN SWITCH OFF                  B
         WTO   'ALL RIGHT FUMBLE-FINGERS, STOP MESSING ABOUT'       B
         WTO   'YOUR CONSISTENT INCOMPETENCE IS BEGINNING TO ANNOY ME'
         WTO   'TRY AND GET IT RIGHT THIS TIME'
         WTOR  'REPEAT THE REPLY',ANSWER,1,QUESTECB
         B     YY                  B.-WAIT FOR ANSWER
         EJECT
         LTORG
*                             CONSTANTS
HLDCOUNT DS    F
HLDREADA DS    F
HLDREADB DS    F
PAGEBEGN DS    F
HLDWRITA DS    F
HLDWRITB DS    F
PACKAREA DS    D
HLDLIMIT DS    H
STATBYTE DC    X'00'
REPCODES DC    X'00'
ZONES    DC    4X'F0'
NUMERIC  DC    4X'0A'
SAVEREG  DS    18F
SAVLIMIT DS    H
$BUFFER  DC    CL140' '            OUTPUT PRINT BUFFER            *JEA
*                        ERROR MESSAGES
ERRORMSG DC    X'19'
         DC    C'          ***** THE ABOVE RECORD CONTAINS ERRORS ****'
         DC    C'* SPC='
HOLDCHAR DC    C'  , REP-CD='
REPCD    DC    C' .'
MAXMSG   DC    X'09'
         DC    C'          REPORT TERMINATED. LIMIT ON NUMBER OF LINES'
         DC    C' WAS EXCEEDED.'
PARMMSG  DC    X'89'
         DC    C'          INVALID PARAMETERS IN THE EXECUTE CARD. JOB'
         DC    C' STEP TERMINATED.'
LNGTHMSG DC    X'89'
         DC    C'          DATA SET NOT PROCESSABLE. RECORDS ARE NOT O'
         DC    C'F VALID LENGTH.'
MSG136   DC    X'89'
         DC    C'          RECORDS ARE TOO LONG. ONLY THE FIRST 132 CH'
         DC    C'ARACTERS WILL BE PRINTED.'
SKIPMSG  DC    X'11'
         DC    C'          *** NOTE *** - - - - - - - - - '
MODMSG   DS    CL11
         DC    C' SKIP TO CHANNEL '
DISPLAY  DS    CL2
IMMEDIAT DC    C'- IMMEDIATE'
AFTERPRT DC    C'AFTER PRINT'
MSGHOLD  EQU   PARMMSG
*           TRANSLATE TABLE FOR CARRIAGE CONTROL CHARACTERS
TRANSTBL DC    64X'00'                  0-63
         DC    X'09'                    64
         DC    10X'00'                  65-74
         DC    X'D9E1'                  75-76
         DC    20X'00'                  77-96
         DC    X'09'                    97
         DC    25X'00'                  98-122
         DC    X'DBE3'                  123-124
         DC    67X'00'                  125-191
         DC    X'D1899199A1A9B1B9C1C9'  192-201
         DC    7X'00'                   202-208
         DC    X'0B131B'                209-211
         DC    14X'00'                  212-225
         DC    X'1119'                  226-227
         DC    12X'00'                  228-239
         DC    X'D38B939BA3ABB3BBC3CB'  240-249
         DC    6X'00'                   250-255
NUMTABLE EQU   *-4
         DC    C'2 3 4 5 6 7 8 9 101112'
LINE1    DC    X'09'
         DC    C'THIS LINE IS PRINTED ON 1ST PRINTABLE LINE OF '
         DC    C'STATIONERY.  THE FIRST                               '
         DC    C'                                 '
LINE2    DC    X'01'
         DC    C' LETTER -T- OF THE FIRST WORD -THIS- SHOULD BE '
         DC    C'ALIGNED ON POSTN 1.                                 '
         DC    C'                                 '
ANSWER   DS    CL1
QUESTECB DC    F'0'                     EVENT CONTROL BLOCK
LINE0    DC    X'8B'
         DC    CL132' '
LINE3    DC    X'0B'
         DC    CL132' '
         EJECT
*                         INPUT CONTROL BLOCKS
*                       DATA EVENT CONTROL BLOCK
         READ  INDECB,SF,PRINTAPE,,,MF=L
*                          DATA CONTROL BLOCK
PRINTAPE DCB   DSORG=PS,MACRF=RP,DDNAME=PRINTAPE,RECFM=FB,BUFNO=2,     C
               EODAD=ENDOFDS
DCBBLKSI EQU   PRINTAPE+62    EQUATES USED WITH THIS DCB
DCBLRECL EQU   PRINTAPE+82
         EJECT
*                        OUTPUT CONTROL BLOCKS
*                       DATA EVENT CONTROL BLOCK
*%       WRITE OUTDECB,SF,PRINTER,,,MF=L
*                          DATA CONTROL BLOCK
*%INTER  DCB   DSORG=PS,MACRF=W,DDNAME=SYSPRINT,RECFM=FM,LRECL=133,
*%             BLKSIZE=133,BUFNO=2,SYNAD=PRTERROR
PRINTER  DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBM,        *JEAC
               LRECL=133,SYNAD=PRTERROR,EXLST=EXLST                *JEA
EXLST    DS    0F                                                  *JEA
         DC    X'85'               DCB OPEN EXIT ADDRESS           *JEA
         DC    AL3(DCBEXIT)        ADDRESS OF THE ROUTINE          *JEA
         USING *,15                                                *JEA
DCBEXIT  NC    X'3E'(2,1),X'3E'(1) TEST FOR ZERO BLOCKSIZE         *JEA
         BNZ   DCBEXRET            NO. RETURN FROM THE EXIT        *JEA
         LA    0,133               LOAD DEFAULT BLOCKSIZE          *JEA
         STH   0,X'3E'(1)          STORE IN DCB                    *JEA
DCBEXRET BR    14                  RETURN TO SYSTEM ROUTINE        *JEA
         END   BEGIN
