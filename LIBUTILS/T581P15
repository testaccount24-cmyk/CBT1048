T581P15  START 0
         SPACE 1
***********************************************************************
*                                                                     *
*        PROGRAM ID. :             T581P15                            *
*        DATE WRITTEN :            OCTOBER , 1974                     *
*        LOCATION :                EUROPEAN COMPUTER CENTER           *
*        AUTHOR :                  J. NOLS                            *
*                                                                     *
*              ===================================                    *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        REGISTER  EQUATES AND USAGE                                  *
***********************************************************************
         SPACE 1
R0       EQU   0    SVC COMMUNICATIONS AND WORK REGISTER
R1       EQU   1    SVC COMMUNICATIONS AND WORK REGISTER
R2       EQU   2    WORK REGISTER
R3       EQU   3    WORK REGISTER
R4       EQU   4    WORK REGISTER
R5       EQU   5    WORK REGISTER
R6       EQU   6    WORK REGISTER
R7       EQU   7    BASE REGISTER 1
R8       EQU   8    BASE REGISTER 2
R9       EQU   9    BASE REGISTER 3
R10      EQU   10   WORK REGISTER
R11      EQU   11   WORK REGISTER
R12      EQU   12   WORK REGISTER
R13      EQU   13   SAVE AREA POINTER
R14      EQU   14   BALR RETURN ADDRESS
R15      EQU   15   BALR ROUTINE ADDRESS / RETURN CODE OF LOCATE MACRO
         SPACE 2
***********************************************************************
*        HOUSEKEEPING                                                 *
***********************************************************************
         SPACE 1
         PGMIN EQUATES=NO,USING=(R7,R8,R9) ESTABLISH ADDRESSABILITY
         SPACE 1
         PRINT NOGEN               SUPPRESS MACRO EXPANSION
         SPACE 1
         L     R5,0(R1)            SAVE ADDRESS PARM FROM EXEC CARD
         UT458 ,                   ASK FOR IPL DATE AND TIME
         MVC   DATE1,UTREPORT
         MVC   DATE2,UTREPORT
         MVC   HH(2),UTHHMMSS
         MVC   MM(2),UTHHMMSS+2
         MVC   SS(2),UTHHMMSS+4
         MVC   DCBSA,DDNDISK       SAVE DCB INFO'S
         EJECT
         TESTOS MVS                TEST IF OPERATING SYSTEM IS MVS
         LTR   R15,R15
         BZ    CONTMVS             BRANCH IF YES
         WTO   '**** IT IS NOT POSSIBLE TO EXECUTE THIS VERSION OF T581*
               P06 UNDER MFT ***********'
         B     ABEND               GO TO ABEND ROUTINE
         EJECT
***********************************************************************
*        PROCESS PARM FIELDS (IF PRESENT )                            *
***********************************************************************
         SPACE 1
CONTMVS  LH    R6,0(R5)            LOAD LENGTH OF PARM
         LTR   R6,R6               TEST IF LENGTH = 0
         BZ    READ                GO READ SYSIN
         OPEN  (SYSOUT,(OUTPUT))   OPEN SYSOUT FILE
         PUT   SYSOUT,HLSYSOUT     WRITE HEAD LINE
         MVI   RECOUT,BLANK        CLEAR
         MVC   RECOUT+1(79),RECOUT
         BCTR  R6,R0               SUBTRACT ONE
         LA    R10,RECOUT          GET ADDRESS OF RECOUT
         LA    R12,RECOUT          GET ADDRESS OF RECOUT
         EX    R6,MCSFP            EXECUTE MOVE OF CS FROM PARM OF EXEC
         CH    R6,=H'69'
         BNH   NPFE1
         MVI   DLSYSOUT+81,BLANK
         MVC   DLSYSOUT+82(50),MSYSOUTP
         PUT   SYSOUT,DLSYSOUT
         B     ENDINPUT
NPFE1    MVI   NREAD+1,X'F0'
         MVC   DLSYSOUT+1(80),RECOUT
         LA    R11,71
         MVI   ECSLS+1,X'00'
         B     LPTP15A
         SPACE 1
MCSFP    MVC   1(0,R12),2(R5)
         EJECT
***********************************************************************
*        READ THE CONTROL STATEMENT CARDS, TEST THE OPERATION CODE    *
*        IF THE OPCODE = SCRATCH,UNCATLG,CATLG,RENAME,RELEASE,        *
*        CONNECT,DLTX,DLTA,BLDG, OR BLDA COPY THE RECORD TO OUTPUT    *
*        FILE FOR IEHPROGM.                                           *
***********************************************************************
         SPACE 1
READ     EQU   *
         MVI   CLOSE+1,X'00'
         OPEN  (SYSUT1,,SYSOUT,(OUTPUT))
         PUT   SYSOUT,HLSYSOUT     WRITE HEAD LINE FOR SYSOUT
NREAD    NOP   ENDINPUT
         GET   SYSUT1
         MVI   DLSYSOUT+82,BLANK
         MVC   DLSYSOUT+83(49),DLSYSOUT+82
         LR    R10,R1              SAVE RECORD ADDRESS
         MVC   DLSYSOUT+1(80),0(R10) MOVE RECORD TO OUTPUT PRINT
         LA    R11,71              ZERO AND ADD 71 (LENGTH MAXIMUN -
         LR    R12,R10             REC ADDRESS INTO R12 / FOR CTRL C.)
LPTP15A  CLC   UNCATLG,0(R12)      UNCATLG CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   SCRATCH,0(R12)      SCRATCH CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   RENAME,0(R12)       RENAME CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   RELEASE,0(R12)      RELEASE CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   DLTX,0(R12)         DLTX CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   DLTA,0(R12)         DLTA CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   CONNECT,0(R12)      CONNECT CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   CATLG,0(R12)        CATLG CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   BLDX,0(R12)         BLDX CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   BLDG,0(R12)         BLDG CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   BLDA,0(R12)         BLDA CONTROL STATEMENT ?
         BE    SWOIEH              YES - GO WRITE THIS STATEMENT
         CLC   MODIFY,0(R12)       MODIFY CONTROL STATEMENT ?
         BE    CSMODIFY            YES - GO CSMODIFY ROUTINE
         CLC   LIST,0(R12)         LIST CONTROL STATEMENT ?
         BE    CSLIST              YES - GO CSLIST ROUTINE
         CLC   COPY,0(R12)         COPY CONTROL STATEMENT ?
         BE    CSCOPY              YES - GO CSCOPY ROUTINE
         CLC   CHANGE,0(R12)       CHANGE CONTROL STATEMENT ?
         BE    CSCHANGE            YES - GO CSCHANGE ROUTINE
         CLC   PURGE,0(R12)        PURGE CONTROL STATEMENT ?
         BE    CSPURGE             YES - GO CSPURGE ROUTINE
         LA    R12,1(R12)          ADD ONE
         BCT   R11,LPTP15A
         MVC   DLSYSOUT+82(50),MSYSOUT1 MOVE MESSAGE ERROR
WRTERR   PUT   SYSOUT,DLSYSOUT
         CLI   71(R10),BLANK
         BE    NREAD
         GET   SYSUT1
         LR    R10,R1
         MVC   DLSYSOUT+1(80),0(R10) MOVE RECORD TO OUTPUT PRINT
         B     WRTERR
         EJECT
***********************************************************************
*        PROCEDURE FOR 'LIST' OPERATION                               *
***********************************************************************
         SPACE 3
CSLIST   LA    R12,6(R12)
         BAL   R3,CKECS
RTLIST   CLI   INDEX+1,X'F0'
         BNE   ERST
         MVC   TITLE(11),=C'LIST INDEX='
         MVC   TITLE+11(44),NDS
         CLC   ALLCATLG,NDS        TEST IF INDEX NAME = 'ALLCATLG'
         BE    TP15B
         LOCATE INXSPEC1
         LTR   R15,R15             TEST IF RETURN CODE = 0
         BNZ   TP15C               BRANCH IF NO
         CLC   NDS2(9),=C'SYSCTLG.V'  TEST IF CVOL CATALOG
         BE    *+14                BRANCH IF YES
         MVC   DLSYSOUT+82(L'MSGERR7),MSGERR7 MOVE ERROR MESSAGE
         B     W15C
         MVC   CVOLNO,BLOCKWA+6    SAVE VOL SER NO FOR NEXT LOCATE
         LOCATE INXSPEC2
         C     R15,=F'12'               TEST IF RETURN CODE = 12
         BE    TP15B                    YES
TP15C    MVC   DLSYSOUT+82(39),MSGERR1  MOVE ERROR MESSAGE
         CVD   R15,DECIMAL              CONVERT TO DECIMAL
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         OI    DECIMAL+2,SIGN           FORCE SIGN TO 'F'
         MVC   DLSYSOUT+117(3),DECIMAL  MOVE RETURN CODE
W15C     PUT   SYSOUT,DLSYSOUT          WRITE
         B     NREAD                    GO NEXT READ
TP15B    MVC   DLSYSOUT+82(50),MSYSOUT4 MOVE MESSAGE
         PUT   SYSOUT,DLSYSOUT          WRITE
         BAL   R4,OPENLIST
         BAL   R4,CLEAR                 CLEAR WA'S
         BAL   R4,HEADLINE              WRITE HEAD LINES
         CLC   ALLCATLG,NDS        TEST IF INDEX NAME = 'ALLCATLG'
         BE    GETCVOL
         B     TP15A
         EJECT
***********************************************************************
*        PROCEDURE FOR 'MODIFY' OPERATION                             *
***********************************************************************
         SPACE 1
CSMODIFY LA    R12,8(R12)
         BAL   R3,CKECS
RTMODIFY CLI   INDEX+1,X'F0'       TEST IF OPERAND 'INDEX' IS FOUND.
         BNE   ERST                NO = ERROR
         CLI   VOLUME+1,X'F0'      TEST IF OPERAND 'VOLUME' IS FOUND.
         BNE   ERST                NO = ERROR
         CLI   NEWVOL+1,X'F0'      TEST IF OPERAND 'NEWVOL' IS FOUND.
         BNE   ERST                NO = ERROR
         MVC   TITLE(41),=C'MODIFY VOLUME=      ,NEWVOL=      ,INDEX='
         MVC   TITLE+14(6),VOLTOMOD
         MVC   TITLE+28(6),NEWVOLID
         MVC   TITLE+41(44),NDS
         CLC   ALLCATLG,NDS        TEST IF INDEX NAME = 'ALLCATLG'
         BE    TP15F
         LOCATE INXSPEC1           TEST IF THIS INDEX IS IN THE CATALOG
         LTR   R15,R15             TEST IF RETURN CODE = 0
         BNZ   TP15C               BRANCH IF NO
         CLC   NDS2(9),=C'SYSCTLG.V'  TEST IF CVOL CATALOG
         BE    *+14                BRANCH IF YES
         MVC   DLSYSOUT+82(L'MSGERR7),MSGERR7 MOVE ERROR MESSAGE
         B     W15C
         MVC   CVOLNO,BLOCKWA+6    SAVE VOL SER NO FOR NEXT LOCATE
         LOCATE INXSPEC2
         C     R15,=F'12'
         BNE   TP15C               NO = ERROR
TP15F    MVI   SWMODIFY+1,X'00'    CHANGE SWITCH
         B     TP15B
         SPACE 1
IEHMOD   SUBIN PREFIX=V,SAVE=(R3,R4,R5,R6,R10,R11,R12)
         BAL   R4,IEHUNCTG
         BAL   R4,IEHCATLG
         SUBOUT PREFIX=V,RESTORE=(R3,R4,R5,R6,R10,R11,R12)
         EJECT
***********************************************************************
*        PROCEDURE FOR 'CHANGE' OPERATION                             *
***********************************************************************
         SPACE 1
CSCHANGE LA    R12,8(R12)
         BAL   R3,CKECS
RTCHANGE CLI   INDEX+1,X'F0'       TEST IF OPERAND 'INDEX' IS FOUND.
         BNE   ERST                NO = ERROR
         CLI   NEWCVOL+1,X'F0'     TEST IF OPERAND 'NEWCVOL' IS FOUND.
         BNE   ERST                NO = ERROR
         MVC   TITLE(15),=C'CHANGE NEWCVOL='
         MVC   TITLE+15(11),NCVOLCOP
         MVC   TITLE+26(7),=C',INDEX='
         MVC   TITLE+33(44),NDS
         LOCATE INXSPEC1           TEST IF THIS INDEX IS IN THE CATALOG
         LTR   R15,R15             TEST IF RETURN CODE = 0
         BNZ   TP15C               BRANCH IF NO
         CLC   NDS2(9),=C'SYSCTLG.V'  TEST IF CVOL CATALOG
         BE    *+14                BRANCH IF YES
         MVC   DLSYSOUT+82(L'MSGERR7),MSGERR7 MOVE ERROR MESSAGE
         B     W15C
         MVC   CVOLNO,BLOCKWA+6    SAVE VOL SER NO FOR NEXT LOCATE
         LOCATE INXSPEC2
         C     R15,=F'12'
         BNE   TP15C               NO = ERROR
         MVI   SWCHANGE+1,X'00'    CHANGE SWITCH
         MVI   SWCHG2+1,X'F0'      CHANGE SWITCH
GETMAIN  GETMAIN R,LV=8800         REQUEST 8800 BYTES (200 INDEXES)
         MVC   0(44,R1),NDS        MOVE INDEX NAME DEFINED TO CHANGE OP
         LA    R1,44(R1)
         ST    R1,EXCORAD
         MVC   EXCOREN,=F'1'       MOVE 1 TO NUMBER OF INDEX NAME SAVED
         B     TP15B
SCHG2    MVI   SWCHG2+1,X'00'
         BAL   R4,IEHDLTX
         BAL   R4,IEHRLSE
         BAL   R4,IEHCONT
         BAL   R4,IEHBLDXG
         FREEMAIN R,LV=8800,A=EXCORAD
         LOCATE INXSPEC2
         C     R15,=F'12'
         BNE   ERROR
         MVI   SWCPH2+1,X'F0'
         B     TP15A
         SPACE 1
IEHCHG   SUBIN PREFIX=W,SAVE=(R3,R4,R5,R6,R10,R11,R12)
         TM    FLAG,FLAGDS         TEST IF DATA SET ENTRY
         BNO   NT1                 NO
         CLI   FLAG,X'4A'          YES - TEST IF ONLY ONE VOLUME
         BE    NT2                 YES
         CLI   FLAG,X'42'          NO - TEST IF LAST VOLUME
         BNE   NE1                 NO
NT2      BAL   R4,IEHUNCTG
         B     NE1
NT1      CLI   FLAG,FLAGINX        TEST IF INDEX ENTRY
         BE    NT3                 YES
         CLI   FLAG,FLAGGINX       NO - TEST IF GENERATION INDEX ENTRY
         BNE   NE1                 NO
NT3      L     R5,EXCORAD          LOAD ADDRESS OF EXTRA CORE REQUIRED
         L     R6,EXCOREN          LOAD NUMBER OF INDEX NAME SAVED
         C     R6,=F'200'          TABLE OVERFLOW ?
         BE    ERTIN
         MVC   0(44,R5),DSNINX     MOVE INDEX NAME
         LA    R11,42              ***
         LA    R12,1(R5)             *> SUPPRESS '.'
LPTP15J  CLC   0(2,R12),=C'. '       *
         BE    NT5                   *
         LA    R12,1(R12)            *
         BCT   R11,LPTP15J           *
NT5      MVI   0(R12),BLANK        ***
         CLI   FLAG,FLAGGINX       TEST IF GENERATION INDEX ENTRY
         BNE   NT4
         MVC   42(2,R5),GDGFLAG
NT4      LA    R5,44(R5)
         LA    R6,1(R6)
         ST    R5,EXCORAD
         ST    R6,EXCOREN          SAVE NUMBER OF INDEX NAME SAVED
NE1      EQU   *
         SUBOUT PREFIX=W,RESTORE=(R3,R4,R5,R6,R10,R11,R12)
         SPACE 1
IEHCHG2  SUBIN PREFIX=Z,SAVE=(R3,R4,R5,R6,R10,R11,R12)
         BAL   R4,IEHCATLG
         SUBOUT PREFIX=Z,RESTORE=(R3,R4,R5,R6,R10,R11,R12)
         EJECT
***********************************************************************
*        PROCEDURE FOR 'COPY' OPERATION                               *
***********************************************************************
         SPACE 1
CSCOPY   LA    R12,6(R12)
         BAL   R3,CKECS
RTCOPY   CLI   INDEX+1,X'F0'       TEST IF OPERAND 'INDEX' IS FOUND.
         BNE   ERST                NO = ERROR
         CLI   NEWINDEX+1,X'F0'    TEST IF OPERAND 'NEWINDEX' IS FOUND.
         BNE   ERST                NO = ERROR
         MVC   TITLE(13),=C'COPY NEWCVOL='
         MVC   TITLE+13(11),NCVOLCOP
         MVC   TITLE+24(7),=C',INDEX='
         MVC   TITLE+31(44),NDS
         LOCATE INXSPEC1           TEST IF THIS INDEX IS IN THE CATALOG
         LTR   R15,R15             TEST IF RETURN CODE = 0
         BNZ   TP15C               BRANCH IF NO
         CLC   NDS2(9),=C'SYSCTLG.V'  TEST IF CVOL CATALOG
         BE    *+14                BRANCH IF YES
         MVC   DLSYSOUT+82(L'MSGERR7),MSGERR7 MOVE ERROR MESSAGE
         B     W15C
         MVC   CVOLNO,BLOCKWA+6    SAVE VOL SER NO FOR NEXT LOCATE
         LOCATE INXSPEC2
         C     R15,=F'12'
         BNE   TP15C               NO = ERROR
         MVI   SWCOPY+1,X'00'      CHANGE SWITCH
         MVI   SWCOP2+1,X'F0'
         B     GETMAIN
SCOP2    MVI   SWCOP2+1,X'00'
         L     R5,EXCORAD
         L     R6,EXCOREN
         LA    R10,41
         L     R12,LENNIX
         SR    R10,R12
         BM    CNT1
         LA    R11,NIX(R12)
LPTP15L  S     R5,=F'44'
         L     R12,LENIX
         LA    R12,0(R12,R5)
         EX    R10,MNIX
         CLC   NIX+42(2),=C'  '
         BNE   CNT2
         MVC   0(42,R5),NIX
CNTEND   BCT   R6,LPTP15L
         B     CNT3
CNT1     MVI   DLSYSOUT+1,C'.'
         MVC   DLSYSOUT+2(79),DLSYSOUT+1
         MVC   DLSYSOUT+82(50),MSYSOUT5
         PUT   SYSOUT,DLSYSOUT
         B     FREEMAIN
CNT2     MVC   DLSYSOUT+1(44),0(R5)
         MVI   DLSYSOUT+45,C'.'
         MVC   DLSYSOUT+46(33),DLSYSOUT+45
         MVC   DLSYSOUT+82(50),MSYSOUT6
         PUT   SYSOUT,DLSYSOUT
         MVI   0(R5),C'*'
         B     CNTEND
         SPACE 1
MNIX     MVC   0(0,R11),0(R12)
         SPACE 1
CNT3     ST    R5,EXCORAD
         L     R6,LENNIX
         CH    R6,=H'8'
         BH    NAHLI
         BCTR  R6,R0
         LA    R5,1(R5)
LPTP15O  CLI   0(R5),C'.'
         BE    NAHLI
         LA    R5,1(R5)
         BCT   R6,LPTP15O
         CLI   NEWCVOL+1,X'F0'
         BNE   NAHLI
         BAL   R4,IEHCONT
NAHLI    BAL   R4,IEHBLDXG
         B     FREEMAIN
         SPACE 1
IEHCOP   SUBIN PREFIX=X,SAVE=(R3,R4,R5,R6,R10,R11,R12)
         BAL   R4,IEHCHG
         SUBOUT PREFIX=X,RESTORE=(R3,R4,R5,R6,R10,R11,R12)
         EJECT
***********************************************************************
*        PROCEDURE FOR 'PURGE' OPERATION                              *
***********************************************************************
         SPACE 1
CSPURGE  LA    R12,7(R12)
         BAL   R3,CKECS
RTPURGE  CLI   INDEX+1,X'F0'       TEST IF OPERAND 'INDEX' IS FOUND.
         BNE   ERST                NO = ERROR
         CLI   SCATCH+1,X'F0'      TEST IF OPERAND 'SCRATCH' IS FOUND.
         BNE   ERST                NO = ERROR
         MVC   TITLE(12),=C'PURGE INDEX='
         MVC   TITLE+12(44),NDS
         CLI   FLASCR,C'P'
         BL    MTN
         BH    MTY
         MVC   TITLE+60(13),=C'SCRATCH=PUNCH'
         B     MTE
MTN      MVC   TITLE+60(10),=C'SCRATCH=NO'
         B     MTE
MTY      MVC   TITLE+60(11),=C'SCRATCH=YES'
MTE      EQU   *
         LOCATE INXSPEC1           TEST IF THIS INDEX IS IN THE CATALOG
         LTR   R15,R15             TEST IF RETURN CODE = 0
         BNZ   TP15C               BRANCH IF NO
         CLC   NDS2(9),=C'SYSCTLG.V'  TEST IF CVOL CATALOG
         BE    *+14                BRANCH IF YES
         MVC   DLSYSOUT+82(L'MSGERR7),MSGERR7 MOVE ERROR MESSAGE
         B     W15C
         MVC   CVOLNO,BLOCKWA+6    SAVE VOL SER NO FOR NEXT LOCATE
         LOCATE INXSPEC2
         C     R15,=F'12'
         BNE   TP15C               NO = ERROR
         MVI   SWPURGE+1,X'00'     CHANGE SWITCH
         MVI   SWPUR2+1,X'F0'
         B     GETMAIN
SPUR2    MVI   SWPUR2+1,X'00'
         BAL   R4,IEHDLTX
THLIX    L     R5,LENIX
         CH    R5,=H'8'
         BH    FREEMAIN
         BCTR  R5,R0
         LA    R6,NDS+1
LPTP15K  CLI   0(R6),C'.'
         BE    FREEMAIN
         LA    R6,1(R6)
         BCT   R5,LPTP15K
         BAL   R4,IEHRLSE
FREEMAIN FREEMAIN R,LV=4400,A=EXCORAD
         B     NBR
         SPACE 1
IEHPGE   SUBIN PREFIX=Y,SAVE=(R3,R4,R5,R6,R10,R11,R12)
         BAL   R4,IEHCHG
         CLI   FLASCR,C'N'
         BE    PNT1
         TM    FLAG,FLAGDS         TEST IF DATA SET ENTRY
         BNO   PNT1                NO
         CLI   DEVICECD+2,X'80'    YES - IS IT ON TAPE
         BE    PNT1                YES
         BAL   R4,IEHSCR           NO
PNT1     EQU   *
         SUBOUT PREFIX=Y,RESTORE=(R3,R4,R5,R6,R10,R11,R12)
         EJECT
***********************************************************************
*        PROCESS CONTROL STATEMENT FIELDS                             *
***********************************************************************
         SPACE 1
CKECS    EQU   *
         MVI   BLSW,OFF
         MVI   INDEX+1,X'00'     ***
         MVI   VOLUME+1,X'00'      *
         MVI   NEWVOL+1,X'00'      *
         MVI   CVOL+1,X'00'        *
         MVI   NEWCVOL+1,X'00'     *
         MVI   NEWINDEX+1,X'00'    *
         MVI   FLASCR,BLANK        *
         MVI   SCATCH+1,X'00'    ***
LPTP15B  LA    R11,71(R10)
         SR    R11,R12
LPTP15C  CLC   0(5,R12),=C'INDEX='      TEST IF INDEX OPERAND
         BE    INDEX                    YES - GO TO INDEX ROUTINE
         CLC   0(9,R12),=C'NEWINDEX='
         BE    NEWINDEX
         CLC   0(7,R12),=C'VOLUME='     TEST IF VOLUME OPERAND
         BE    VOLUME                   YES - GO TO VOLUME ROUTINE
         CLC   0(7,R12),=C'NEWVOL='     TEST IF NEWVOL OPERAND
         BE    NEWVOL                   YES - GO TO NEWVOL ROUTINE
         CLC   0(8,R12),=C'NEWCVOL='    TEST IF NEWCVOL OPERAND
         BE    NEWCVOL                  YES - GO TO NEWCVOL ROUTINE
         CLC   0(8,R12),=C'SCRATCH='    TEST IF SCRATCH OPERAND
         BE    SCATCH                   YES - GO TO SCATCH ROUTINE
         CLC   0(5,R12),=C'CVOL='  TEST IF CVOL OPERAND
         BE    CVOL                BRANCH IF YES
         CLI   BLSW,OFF
         BNE   CKE1
         CLI   0(R12),BLANK
         BNE   ERST
         B     AOLIST
CKE1     CLI   0(R12),BLANK
         BNE   CKE2
         CLI   71(R10),BLANK
         BE    ECSLS
         B     ERST
CKE2     CLC   0(2,R12),=C', '
         BNE   CKE4
         CLI   71(R10),BLANK
         BE    ERST
         B     CCLS
CKE4     CLI   0(R12),COMMA
         BE    AOLIST
         B     ERST
         SPACE 3
CCLS     MVI   DLSYSOUT+82,BLANK
         MVC   DLSYSOUT+83(49),DLSYSOUT+82
         PUT   SYSOUT,DLSYSOUT
         GET   SYSUT1
         LR    R10,R1
         MVC   DLSYSOUT+1(80),0(R10) MOVE RECORD TO OUTPUT PRINT
         LA    R12,15(R10)
         B     LPTP15B
AOLIST   LA    R12,1(R12)
         BCT   R11,LPTP15C
         S     R12,=F'1'
         CLI   0(R12),C','
         BNE   CKE3
         CLI   1(R12),BLANK
         BE    ERST
         B     CCLS
CKE3     CLI   1(R12),BLANK
         BE    ECSLS
         B     ERST
ERST     MVC   DLSYSOUT+82(50),MSYSOUT3 MOVE MESSAGE ERROR
         B     WRTERR
ECSLS    B     *+10                    SKIP NEXT INSTRUCTION IF NO PARM
         MVC   RECOUT+1(79),RECOUT     CLEAR RECOUT WA IF PARM OF EXEC-
         BR    R3                  RETURN TO CALLER   / CARD SUPPLIED
         EJECT
***********************************************************************
*        SAVE VALUE ATTRIBUED FOR EACH OPERAND USED.                  *
***********************************************************************
         SPACE 1
INDEX    NOP   ERST                INDEX OPERAND
         MVI   INDEX+1,X'F0'       CHANGE SWITCH IN CASE OF TWO INDEX -
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         MVC   NDS(45),6(R12)      SAVE INDEX NAME
         LA    R5,NDS+1            GET ADDRESS INDEX NAME +1
         LA    R12,7(R12)          ADD SEVEN TO VALUE R12
         LA    R6,44               LOAD MAXIMUN LENGTH FOR A INDEX NAME
LPTP15D  CLI   0(R5),BLANK         TEST IF END+1 OF INDEX NAME
         BE    ELS                 YES - GO TO ELS
         CLI   0(R5),COMMA         TEST IF END+1 OF INDEX NAME
         BE    ELS                 YES - GO TO ELS
         LA    R5,1(R5)            NO - ADD ONE
         LA    R12,1(R12)          ADD ONE
         BCT   R6,LPTP15D          REPEAT THE TEST
         B     ERST                AFTER 44 TIMES = ERROR
ELS      MVI   0(R5),BLANK
         SH    R6,=H'1'
         EX    R6,MVCBL
         LA    R6,NDS              GET ADDRESS NDS
         SR    R5,R6
         ST    R5,LENIX            SAVE LENGTH OF THIS INDEX NAME
         MVC   NDS2,NDS            SAVE INDEX/DS NAME
         B     LPTP15B
         SPACE 1
NEWINDEX NOP   ERST                NEWINDEX OPERAND
         MVI   NEWINDEX+1,X'F0'    CHANGE SWITCH IN CASE OF TWO NWINDX-
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         MVC   NIX(45),9(R12)      SAVE NEW INDEX NAME
         LA    R5,NIX+1            GET ADDRESS NEW INDEX NAME +1
         LA    R12,10(R12)         ADD TEN TO VALUE R12
         LA    R6,44               LOAD MAXIMUN LENGTH FOR A INDEX NAME
LPTP15E  CLI   0(R5),BLANK         TEST IF END+1 OF INDEX NAME
         BE    XLS                 YES - GO TO XLS
         CLI   0(R5),COMMA         TEST IF END+1 OF INDEX NAME
         BE    XLS                 YES - GO TO XLS
         LA    R5,1(R5)            NO - ADD ONE
         LA    R12,1(R12)          ADD ONE
         BCT   R6,LPTP15E          REPEAT THE TEST
         B     ERST                AFTER 44 TIMES = ERROR
XLS      MVI   0(R5),BLANK
         SH    R6,=H'1'
         EX    R6,MVCBL
         LA    R6,NIX              GET ADDRESS NIX
         SR    R5,R6
         ST    R5,LENNIX           SAVE LENGTH OF THIS INDEX NAME
         B     LPTP15B
         EJECT
VOLUME   NOP   ERST                VOLUME OPERAND
         MVI   VOLUME+1,X'F0'      CHANGE SWITCH IN CASE OF TWO VOLUME-
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         MVC   VOLTOMOD,7(R12)     SAVE VOLUME ID. TO MODIFY
         LA    R12,13(R12)         GET ADDRESS FOR TEST NEXT OPERAND
         B     LPTP15B
         SPACE 2
CVOL     NOP   ERST                CVOL OPERAND
         MVI   CVOL+1,X'F0'        CHANGE SWITCH IN CASE OF TWO CVOL
         MVI   BLSW,ON                  /OPERANDS IN THE SAME CTRL STAT
         MVC   TSYSCTLG+1(6),5(R12) SAVE VOLUME SERIAL NUMBER
         LA    R12,11(R12)         GET ADDRESS FOR NEXT OPERAND
         B     LPTP15B
         SPACE 2
NEWVOL   NOP   ERST                NEWVOL OPERAND
         MVI   NEWVOL+1,X'F0'      CHANGE SWITCH IN CASE OF TWO NEWVOL-
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         MVC   NEWVOLID,7(R12)     SAVE NEW VOLUME ID.
         LA    R12,13(R12)         GET ADDRESS FOR TEST NEXT OPERAND
         B     LPTP15B
         SPACE 2
NEWCVOL  NOP   ERST                NEWCVOL OPERAND
         MVI   NEWCVOL+1,X'F0'     CHANGE SWITCH IN CASE OF TWO NWCVOL-
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         MVC   NCVOLCOP,8(R12)     SAVE NEW CONTROL VOLUME ID.
         LA    R12,19(R12)         GET ADDRESS FOR TEST NEXT OPERAND
         B     LPTP15B
         SPACE 2
SCATCH   NOP   ERST                SCRATCH OPERAND
         MVI   SCATCH+1,X'F0'      CHANGE SWITCH IN CASE OF TWO SCATCH-
         MVI   BLSW,ON                  /OPERAND IN THE SAME CTRL STAT.
         CLC   8(3,R12),=C'YES'
         BE    SCRYES
         CLC   8(5,R12),=C'PUNCH'
         BE    SCRPUN
         CLC   8(2,R12),=C'NO'
         BE    SCRNO
         B     ERST
SCRYES   LA    R12,11(R12)
         MVI   FLASCR,C'Y'
         B     LPTP15B
SCRPUN   LA    R12,13(R12)
         MVI   FLASCR,C'P'
         B     LPTP15B
SCRNO    LA    R12,10(R12)
         MVI   FLASCR,C'N'
         B     LPTP15B
         SPACE 3
MVCBL    MVC   1(0,R5),0(R5)
         EJECT
***********************************************************************
*        THESE SUB-ROUTINES FORMAT THE RECORDS FOR IEHPROGM.          *
***********************************************************************
         SPACE 1
IEHUNCTG SUBIN PREFIX=J,SAVE=(R4)
         MVC   OPERATIO,UNCATLG    MOVE OPERATION CODE
         MVC   OPERATIO+9(7),=C'DSNAME='     MOVE OPERAND CODE
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         SUBOUT PREFIX=J,RESTORE=(R4)
         SPACE 1
IEHSCR   SUBIN PREFIX=U,SAVE=(R4)
         CLI   FLAG,X'40'
         BE    STN4
         CLI   FLAG,X'48'
         BE    STN4
         MVC   OPERATIO(9),SCRATCH          MOVE OPERATION CODE
         MVC   OPERATIO+9(7),=C'DSNAME='    MOVE OPERAND CODE
STENAME  LA    R5,DSNINX                     ADDRESS SDNINX INTO R5
         LA    R6,44                         LOAD MAX.LENGTH FOR A DSN
LPTP15N  CLI   0(R5),BLANK
         BE    ENDSTN
         LA    R5,1(R5)
         BCT   R6,LPTP15N
ENDSTN   MVC   0(7,R5),=C',PURGE,'
         MVI   RECOUT+71,C'C'
         CLI   FLASCR,C'P'
         BE    STN1
         BAL   R4,IEHWRITE         GO WRITE ON IEMPROGM FILE
         B     STN2
STN1     BAL   R4,OPENPUN
         PUT   SYSPUNCH,RECOUT
         BAL   R4,CLEARIEH
STN2     MVC   0(7,R5),=C'       '
         MVC   SRECOUT,DSNINX      SAVE NAME
         MVC   DSNINX,DSNINX-1     CLEAR
         MVC   RECOUT+15(3),=C'VOL'     MOVE OPERAND CODE
         LA    R5,RECOUT+18
         BAL   R4,TESDEV           GO TEST DEVICE CODE
         CLI   FLAG,X'42'
         BE    STN3
         MVC   0(6,R5),VOLSER
         B     STNEND
STN3     MVI   0(R5),C'('
         MVC   1(6,R5),VOLSER
         MVI   7(R5),COMMA
         MVI   RECOUT+71,C'C'
         B     STNEND
STN4     MVC   SRECOUT,DSNINX      SAVE NAME
         MVC   DSNINX,DSNINX-1     CLEAR
         MVC   RECOUT+15(6),VOLSER
         CLI   FLAG,X'40'
         BE    STN5
         MVI   RECOUT+21,C')'
         B     STNEND
STN5     MVI   RECOUT+21,COMMA
         MVI   RECOUT+71,C'C'
STNEND   CLI   FLASCR,C'P'
         BE    STN6
         BAL   R4,IEHWRITE
         B     STN7
STN6     PUT   SYSPUNCH,RECOUT
         BAL   R4,CLEARIEH
STN7     MVC   DSNINX,SRECOUT      RESTORE NAME
         SUBOUT PREFIX=U,RESTORE=(R4)
         SPACE 1
IEHCATLG SUBIN PREFIX=K,SAVE=(R4)
         CLI   FLAG,X'40'
         BE    TN5
         CLI   FLAG,X'48'
         BE    TN5
         MVC   OPERATIO(7),CATLG   MOVE OPERATION CODE
         MVC   OPERATIO+9(7),=C'DSNAME='     MOVE OPERAND CODE
TENAME   LA    R5,DSNINX           ADDRESS DSNINX
         LA    R6,44               LOAD MAXIMUN LENGTH FOR A INDEX NAME
LPTP15F  CLI   0(R5),BLANK
         BE    ENDTEN
         LA    R5,1(R5)            ADD ONE
         BCT   R6,LPTP15F
ENDTEN   MVI   0(R5),COMMA
         MVI   RECOUT+71,C'C'
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         MVI   0(R5),BLANK
         MVC   SRECOUT,DSNINX      SAVE NAME
         MVC   DSNINX,DSNINX-1     CLEAR
         MVC   RECOUT+15(3),=C'VOL'     MOVE OPERAND CODE
         LA    R5,RECOUT+18
         BAL   R4,TESDEV           PERFORM TEST DEVICE CODE
         CLI   DEVICECD+2,X'80'    TEST IF THIS DATA SET IS ON TAPE
         BNE   TN3                 NO
         MVI   0(R5),C'('          YES
         LA    R5,1(R5)
TN0      MVC   0(6,R5),NEWVOLID
         MVI   6(R5),COMMA
         MVC   DECIMAL(2),DSEQVOL
         LH    R6,DECIMAL
         CVD   R6,DECIMAL
         UNPK  7(3,R5),DECIMAL+6(2)
         OI    9(R5),SIGN
         LA    R5,10(R5)
TN1      CLI   FLAG,X'4A'
         BE    TN2
         CLI   FLAG,X'48'
         BE    TN2
         MVI   0(R5),COMMA
         MVI   RECOUT+71,C'C'
         B     TNEND
TN2      MVI   0(R5),C')'
         B     TNEND
TN3      CLI   FLAG,X'4A'
         BNE   TN4
         MVC   0(6,R5),NEWVOLID
         B     TNEND
TN4      MVC   0(6,R5),NEWVOLID
         LA    R5,6(R5)
         B     TN1
TN5      MVC   SRECOUT,DSNINX      SAVE NAME
         MVC   DSNINX,DSNINX-1     CLEAR
         LA    R5,RECOUT+15
         CLI   DEVICECD+2,X'80'    TEST IF THIS DATA SET IS ON TAPE
         BE    TN0
         B     TN3
TNEND    BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         MVC   DSNINX,SRECOUT      RESTORE NAME
         SUBOUT PREFIX=K,RESTORE=(R4)
         SPACE 1
IEHDLTX  SUBIN PREFIX=L,SAVE=(R4)
         L     R5,EXCORAD          LOAD ADDRESS OF EXTRA CORE REQUIRED
         L     R6,EXCOREN          LOAD NUMBER OF INDEX NAME SAVED
LPTP15H  S     R5,=F'44'           SUBTRACT 44 (LENGTH OF A INDEX NAME)
         MVC   OPERATIO(6),DLTX         MOVE OPERATION CODE
         MVC   OPERATIO+10(6),=C'INDEX=' MOVE OPERAND CODE
         MVC   DSNINX(42),0(R5)    MOVE INDEX NAME
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         BCT   R6,LPTP15H
         ST    R5,EXCORAD
         SUBOUT PREFIX=L,RESTORE=(R4)
         SPACE 1
IEHRLSE  SUBIN PREFIX=M,SAVE=(R4)
         MVC   OPERATIO(9),RELEASE      MOVE OPERATION CODE
         MVC   OPERATIO+10(6),=C'INDEX=' MOVE OPERAND CODE
         L     R5,EXCORAD
         MVC   DSNINX(8),0(R5)     MOVE INDEX NAME
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         SUBOUT PREFIX=M,RESTORE=(R4)
         SPACE 1
IEHCONT  SUBIN PREFIX=N,SAVE=(R4)
         MVC   OPERATIO(9),CONNECT      MOVE OPERATION CODE
         MVC   DSNINX(22),=C'VOL=           ,INDEX='
         MVC   DSNINX+4(11),NCVOLCOP
         L     R5,EXCORAD
         MVC   DSNINX+22(8),0(R5)  MOVE INDEX NAME
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         SUBOUT PREFIX=N,RESTORE=(R4)
         SPACE 1
IEHBLDXG SUBIN PREFIX=O,SAVE=(R4)
         L     R5,EXCORAD          LOAD ADDRESS OF EXTRA CORE REQUIRED
         L     R6,EXCOREN          LOAD NUMBER OF INDEX NAME SAVED
LPTP15I  MVC   OPERATIO+10(6),=C'INDEX=' MOVE OPERAND CODE
         CLI   0(R5),C'*'
         BE    NWTBLD
         MVC   DSNINX(42),0(R5)    MOVE INDEX NAME
         CLC   42(2,R5),=X'4040'   TEST IF GENERATION INDEX
         BNE   IEHBLDG             YES
         MVC   OPERATIO(6),BLDX         MOVE OPERATION CODE
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         B     NPC
IEHBLDG  MVC   OPERATIO(6),BLDG         MOVE OPERATION CODE
         LA    R10,DSNINX+1
         LA    R11,41
LPTP15M  CLI   0(R10),BLANK
         BE    MCCC
         LA    R10,1(R10)
         BCT   R11,LPTP15M
MCCC     MVI   0(R10),COMMA
         MVI   RECOUT+71,C'C'
         BAL   R4,IEHWRITE         GO WRITE ON IEHPROGM FILE
         MVC   DSNINX,DSNINX-1     CLEAR
         MVC   RECOUT+15(8),=C'ENTRIES='
         SR    R12,R12
         IC    R12,43(R5)
         CVD   R12,DECIMAL
         UNPK  RECOUT+23(3),DECIMAL+6(2)
         OI    RECOUT+25,SIGN
         CLI   42(R5),X'00'
         BE    WTCC
         CLI   42(R5),X'01'
         BNE   FGNT1
         MVC   RECOUT+26(6),=C',EMPTY'
         B     WTCC
FGNT1    CLI   42(R5),X'02'
         BNE   FGNT2
         MVC   RECOUT+26(7),=C',DELETE'
         B     WTCC
FGNT2    MVC   RECOUT+26(13),=C',EMPTY,DELETE'
WTCC     BAL   R4,IEHWRITE
NPC      LA    R5,44(R5)
         BCT   R6,LPTP15I
NWTBLD   SUBOUT PREFIX=O,RESTORE=(R4)
         SPACE 1
TESDEV   LA    R10,DEVTAB
LPTP15G  LA    R11,6(R10)
         MVC   DECIMAL,4(R10)
         LH    R12,DECIMAL
         CLC   0(4,R10),DEVICECD
         BE    ENDEV
         CLC   0(4,R10),UNK
         BE    ENDEV
         LA    R10,7(R12,R10)
         B     LPTP15G
ENDEV    EX    R12,MIEH1
         LA    R5,1(R12,R5)
         BR    R4
         SPACE 1
MIEH1    MVC   0(0,R5),0(R11)
         SPACE 1
IEHWRITE SUBIN SAVE=(R4)
         BAL   R4,OPENIEH
         PUT   IEHPROGM,RECOUT     WRITE
CLEARIEH MVI   OPERATIO,BLANK           **> CLEAR OPERATION CODE
         MVC   OPERATIO+1(15),OPERATIO  **    AND OPERAND'S CODE
         MVI   DSNINX+44,BLANK          **
         MVC   DSNINX+45(19),DSNINX+44  **
         SUBOUT RESTORE=(R4)
         EJECT
***********************************************************************
*        OPEN THE FILES                                               *
*                                                                     *
***********************************************************************
         SPACE 1
SWOIEH   BAL   R4,OPENIEH          GO TEST IF IEHPROGM FILE IS OPEN
WRTIEH   MVC   RECOUT,0(R10)
         PUT   IEHPROGM,RECOUT
         MVC   DLSYSOUT+82(50),MSYSOUT2 MOVE MESSAGE
         PUT   SYSOUT,DLSYSOUT
         CLI   71(R10),C' '        TEST IF CONTINUATION CARD
         BE    NREAD               NO - GO TO NEXT READ
         GET   SYSUT1
         LR    R10,R1              SAVE RECORD ADDRESS
         MVC   DLSYSOUT+1(80),0(R10) MOVE RECORD TO OUTPUT PRINT
         B     WRTIEH              GO WRITE THE CONT. CARD
         SPACE 3
OPENIEH  NOP   ENDOIEH
         OPEN  (IEHPROGM,(OUTPUT))
         MVI   OPENIEH+1,X'F0'
         MVI   SWCIEH+1,X'00'
ENDOIEH  BR    R4
         SPACE 3
OPENLIST NOP   ENDOLIST
         OPEN  (SYSLIST,(OUTPUT))
         MVI   OPENLIST+1,X'F0'
         MVI   SWCLIST+1,X'00'
ENDOLIST BR    R4
         SPACE 3
OPENPUN  NOP   ENDOPUN
         OPEN  (SYSPUNCH,(OUTPUT))
         MVI   OPENPUN+1,X'F0'
         MVI   SWCPUN+1,X'00'
ENDOPUN  BR    R4
         SPACE 3
ENDINPUT EQU   *
         CLC   DCBSA+2(6),PX6      TEST IF A SYSCATLG DS OPENED
         BE    NCL                 BRANCH IF NO
         CLOSE SYSCATLG            YES - CLOSE
         MVC   DDNDISK(12),DCBSA   RESTORE DCB
NCL      EQU   *
SWCIEH   B     CLOSEND
         CLOSE IEHPROGM
         B     CLOSE
*        BAL   R4,CLOSE
*        LINK  EP=IEHPROGM,PARAM=(PPLIST),VL=1
*        PGMOUT ,
         EJECT
***********************************************************************
*                                                                     *
***********************************************************************
         SPACE 1
GETCVOL  L     R5,ATSCTLG          ADDRESS FIRST VOL SER FOR SYSCTLG -7
         LA    R5,7(R5)            INCREMENT SEVEN
         ST    R5,ATSCTLG          SAVE ADDRESS
         CLC   0(2,R5),ENDTSYSC    TEST IF END OF TABLE VOL SER SYSCTLG
         BE    NBR
         MVC   CVOLNO,1(R5)        MOVE VOL SER
         MVC   TTR,FIRSTTR         MOVE TTR'000001' FOR FIRST READ
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         SR    R5,R5               CLEAR
         IC    R5,13(R2)           LOAD NO OF HW LEFT FOR V.I.C.E.
         SLL   R5,1                MULT BY 2
         LA    R10,14(R5,R2)       ADDRESS OF THE FIRST ENTRY
         B     NEXTENT
         SPACE 1
TP15A    LA    R2,BLOCKWA          LOAD ADDRESS OF BLOCWA
         LA    R10,20(R2)
         MVC   TTR,14(R2)
         MVC   CVOLNO,259(R2)
         SPACE 1
NEXTENT  BAL   R4,ILE              PERFORM TEST INDEX LINK ENTRY
         CLI   NORY,NO             IS IT A INDEX LINK ENTRY
         BE    TENTRY              NO  - GO TO TEST ENTRY
         CLI   TTRSW,ON            IS IT END OF THIS CATALOG
         BNE   CAC                 NO
         CLC   ALLCATLG,NDS        TEST IF INDEX NAME = 'ALLCATLG'
         BE    GETCVOL
SWCHG2   NOP   SCHG2
SWCOP2   NOP   SCOP2
SWPUR2   NOP   SPUR2
NBR      MVI   SWMODIFY+1,X'F0'  ***
         MVI   SWCHANGE+1,X'F0'    *> CHANGE SWITCH.
         MVI   SWCPH2+1,X'00'
         MVI   SWCOPY+1,X'F0'      *
         MVI   SWPURGE+1,X'F0'   ***
         MVI   CTRCHAR,SKIP
         PUT   SYSLIST,OUTPRINT    FORCE SKIP PAGE
         B     NREAD               GO NEXT READ
CAC      EQU   *
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,2(R2)           IGNORE TWO FIRST BYTES
         SPACE 1
TENTRY   LA    R4,NEXTENT          GET ADDRESS FOR RETURN
         CLC   ALLCATLG,NDS        TEST IF INDEX NAME = 'ALLCATLG'
         BE    TP15D
         MVC   DSNINX,NDS
         L     R5,LENIX
         LA    R12,DSNINX(R5)
         MVI   0(R12),C'.'
         LA    R12,1(R12)
         B     TP15E
TP15D    LA    R12,DSNINX
TP15E    EQU   *
         CLI   11(R10),TIPE        IS IT AN INDEX POINTER ENTRY
         BE    IPE                 YES - GO TO IPE
         CLI   11(R10),TVCBPE      IS IT A VOLUME CTRL BLOCK P. ENTRY
         BE    VCBPE               YES - GO TO VCBPE
         CLI   11(R10),TGIPE       IS IT A GENERATION INDEX POINT.ENTRY
         BE    GIPE                YES - GO TO GIPE
         CLI   11(R10),TCVPE       IS IT A CONTROL VOLUME POINTER ENTRY
         BE    CVPE                YES - GO TO CUPE
         CLI   11(R10),TAE         IS IT AN ALIAS ENTRY
         BE    AE                  YES - GO TO AE
         CLI   11(R10),TNCVPE      IS IT A NEW CONTROL VOLUME P. ENTRY
         BE    NCVPE               YES - GO TO NCVPE
         CLI   11(R10),TDSPEMIN    TEST IF THE HW LEFT IS < 7
         BL    ERRENT1             YES - ERROR
         CLI   11(R10),TDSPEMAX    TEST IF THE HW LEFT IS > 61
         BH    ERRENT1             YES - ERROR
         B     DSPE                GOTO DATA SET POINTER ENTRY
         EJECT
***********************************************************************
*        READ CATALOG BLOCK ROUTINE                                   *
***********************************************************************
         SPACE 1
READABLK SUBIN PREFIX=A,SAVE=(R4)
         CLC   DCBSA+2(6),CVOLNO   TEST IF SYSCATLG OPEN FOR THIS CVOL
         BE    TTRCV               BRANCH IF YES
         CLC   DCBSA+2(6),PX6      TEST IF A SYSCATLG DS OPENED
         BE    MNCVN               BRANCH IF NO
         CLOSE SYSCATLG            YES - CLOSE
         MVI   CVOLAORU,X'02'      UNALLOCATION REQUEST
         LA    R1,CVOLPRB          LOAD REQUEST BLOCK POINTER
         MVI   IEOL,X'80'          INDICATE DSNAME IS END OF LIST
         DYNALLOC
         LTR   R15,R15             TEST IF RETURN CODE IS ZERO
         BNZ   ERRENT6             BRANCH IF NO
         MVI   IEOL,X'00'          SUPPRESS END OF LIST
         MVC   DDNDISK(12),DCBSA   PREPARE DCB FOR OPEN
MNCVN    MVC   DDNDISK+2(6),CVOLNO MOVE CVOLNO TO 6 LAST P. OF DDNAME
         MVC   DCBSA+2(6),CVOLNO
         MVC   CVOLDDN+8(6),CVOLNO SAVE CVOL NO
         MVC   CVOLVOLS+6(6),CVOLNO
         MVI   CVOLAORU,X'01'      DSNAME ALLOCATION REQUEST
         LA    R1,CVOLPRB          LOAD REQUEST BLOCK POINTER
         DYNALLOC
         LTR   R15,R15             TEST IF RETURN CODE IS ZERO
         BNZ   ERRENT6             BRANCH IF NO
         OPEN  SYSCATLG            OPEN
TTRCV    L     R0,TTR              LOAD TTR0 INTO R0
         L     R1,SYSCATLG+44      LOAD ADDRESS OF DATA EXTENT BLOCK
         LA    R2,MBBCCHHR         LOAD ADDRESS OF MBBCCHHR WORK AREA
         L     R15,16              POINT AT START OF COMM. VECTOR TABLE
         L     R15,28(R15)         LOAD ENTRY POINT ADDRESS OF IECPCNVT
         STM   R9,R13,XDAPSA       PRESERUE REGS
         CNOP  2,4
         BALR  R14,R15             GO CONVERT RELATIVE TRACK ADDRESS TO
*                                   ACTUAL ADDRESS
         BAL   R14,24(R14)         BRANCH AND LINK AROUND SAVE AREA REG
XDAPSA   DS    5F                  SAVE AREA REGS
         LM    R9,R13,0(R14)       RESTORE REGISTERS
         XDAP  XDAPCB,RI,SYSCATLG,BLOCKWK,264,,MBBCCHHR
         WAIT  ECB=XDAPCB
         CLI   XDAPCB,X'7F'        TEST IF SUCCESSFUL ?
         BE    XEND                BRANCH IF YES
         ABEND 3330,DUMP           NO - ABEND
XEND     LA    R2,BLOCKWA
         SUBOUT PREFIX=A,RESTORE=(R4)   YES
         SPACE 3
***********************************************************************
*        INDEX LINK ENTRY ROUTINE                                     *
***********************************************************************
         SPACE 1
ILE      SUBIN PREFIX=B,SAVE=(R4)
         MVI   NORY,NO
         MVI   TTRSW,OFF
         CLC   0(8,R10),ILENAME    TEST IF INDEX LINK ENTRY
         BNE   ENDILER             NO  - GO TO ENDILER
         MVI   NORY,YES            YES
         MVC   TTR,8(R10)          MOVE TTR OF THIS ILE FOR NEXT READBL
         CLC   8(3,R10),TTR0       TEST IF TTR OF THIS ILE = 0
         BNE   ENDILER             NO  - GO TO ENDILER
         MVI   TTRSW,ON            YES
ENDILER  SUBOUT PREFIX=B,RESTORE=(R4)
         EJECT
***********************************************************************
*        INDEX POINTER ENTRY ROUTINE                                  *
***********************************************************************
         SPACE 1
IPE      SUBIN PREFIX=C,SAVE=(R4)
         LA    R3,TABINDEX         GET ADDRESS TABLE INDEX
         MVI   0(R3),X'AA'         FIRST ELEMENT
MULTIPE  MVC   1(3,R3),TTR         SAVE TTR
         ST    R10,4(R3)           SAVE R10
         ST    R12,8(R3)           SAVE R12
         LA    R3,12(R3)           INCREMENT 12
         MVC   0(8,R12),0(R10)     MOVE NAME TO RECOUT
         MVI   FLAG,FLAGINX        MOVE FLAG INDEX TO RECOUT
         LR    R11,R12
         BAL   R4,PUTPOINT         PERFORM PUTPOINT ROUTINE
         LR    R12,R11
         MVC   TYPE,=C'INDEX   '
         BAL   R4,WRITE            PERFORM PRINT ROUTINE
         MVC   TTR,8(R10)          MOVE TTR FROM THIS IPE
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,20(R2)          GET ADDRESS FIRST ENTRY
         B     LOOPIPE2
LOOPIPE1 BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
LOOPIPE2 BAL   R4,ILE              PERFORM TEST INDEX LINK ENTRY
         CLI   NORY,NO             IS IT A INDEX LINK ENTRY
         BE    TIPENT              NO - GO TO TEST THIS ENTRY
         CLI   TTRSW,ON            IS IT END OF THIS INDEX
         BE    ENDIPE              YES
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,2(R2)
         B     LOOPIPE2
TIPENT   LA    R4,LOOPIPE2         GET ADDRESS FOR RETURN
         CLI   11(R10),TIPE        IS IT AN INDEX POINTER ENTRY
         BE    MULTIPE             YES - GO TO MULTIPE
         CLI   11(R10),TVCBPE      IS IT A VOLUME CTRL BLOCK P. ENTRY
         BE    VCBPE               YES - GO TO VCBPE
         CLI   11(R10),TGIPE       IS IT A GENERATION INDEX POINT.ENTRY
         BE    GIPE                YES - GO TO GIPE
         CLI   11(R10),TDSPEMIN    TEST IF THE HW LEFT IS < 7
         BL    ERRENT2             YES - ERROR
         CLI   11(R10),TDSPEMAX    TEST IF THE HW LEFT IS > 61
         BH    ERRENT2             YES - ERROR
         B     DSPE                GOTO DATA SET POINTER ENTRY
ENDIPE   S     R3,TWELVE           SUBTRACT TWELVE
         MVC   TTR,1(R3)           RESTORE TTR
         L     R10,4(R3)           RESTORE R10
         L     R12,8(R3)           RESTORE R12
         MVI   0(R12),BLANK          ** CLEAR WA
         MVC   1(8,R12),0(R12)       ** RECOUT
         MVI   SEQVOLMV,BLANK
         MVC   SEQVOLMV+1(14),SEQVOLMV
         LA    R10,12(R10)         GET ADDRESS FOR NEXT ENTRY
         CLI   0(R3),X'AA'         IS IT END OF TABLE
         BNE   LOOPIPE1            NO
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         BAL   R4,CLEAR            PERFORM CLEAR WA'S
         SUBOUT PREFIX=C,RESTORE=(R4)
         SPACE 3
***********************************************************************
*        GENERATION INDEX POINTER ENTRY ROUTINE                       *
***********************************************************************
         SPACE 1
GIPE     SUBIN PREFIX=D,SAVE=(R4)
         MVC   0(8,R12),0(R10)     MOVE NAME TO RECOUT
         MVI   FLAG,FLAGGINX       MOVE FLAG GEN. INDEX TO RECOUT
         MVC   CURGENC(2),14(R10)  MOVE CURRENT GEN COUNT TO RECOUT
         MVC   GDGFLAG(2),12(R10)  MOVE GDG FLAG AND MAX.GEN.ALLOWED
         MVC   GISAVTTR,TTR        SAVE TTR
         ST    R10,GISAVR10        SAVE R10
         ST    R12,GISAVR12        SAVE R12
         LR    R11,R12
         BAL   R4,PUTPOINT         PERFORM PUTPOINT ROUTINE
         LR    R12,R11
         MVC   TYPE,=C'GEN. IX.'
         BAL   R4,WRITE            PERFORM PRINT ROUTINE
         MVC   TTR,8(R10)          MOVE TTR FROM THIS GIPE
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,20(R2)          GET ADDRESS OF FIRST ENTRY
LOOPGIPE BAL   R4,ILE              PERFORM TEST INDEX LINK ENTRY
         CLI   NORY,NO             IS IT A INDEX LINK ENTRY
         BE    TGIPENT             NO - GO TO TEST THIS ENTRY
         CLI   TTRSW,ON            IS IT END OF THIS INDEX
         BE    ENDGIPE             YES
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,2(R2)
         B     LOOPGIPE
TGIPENT  LA    R4,LOOPGIPE         GET ADDRESS FOR RETURN
         CLI   11(R10),TVCBPE      IS IT A VOLUME CTRL BLOCK P. ENTRY
         BE    VCBPE               YES - GO TO VCBPE
         CLI   11(R10),TDSPEMIN    TEST IF THE HW LEFT IS < 7
         BL    ERRENT3             YES - ERROR
         CLI   11(R10),TDSPEMAX    TEST IF THE HW LEFT IS > 61
         BH    ERRENT3             YES - ERROR
         B     DSPE                GO TO DATA SET POINTER ENTRY
ENDGIPE  BCTR  R12,R0
         MVI   0(R12),BLANK          ** CLEAR WA
         MVC   1(8,R12),0(R12)       ** RECOUT
         MVI   SEQVOLMV,BLANK
         MVC   SEQVOLMV+1(14),SEQVOLMV
         MVC   TTR,GISAVTTR        RESTORE TTR
         L     R10,GISAVR10        RESTORE R10
         L     R12,GISAVR12        RESTORE R12
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,16(R10)         GET ADDRESS FOR NEXT ENTRY
         SUBOUT PREFIX=D,RESTORE=(R4)
         EJECT
***********************************************************************
*        CONTROL VOLUME POINTER ENTRY AND                             *
*                   NEW C.V.P.E. ROUTINE                              *
***********************************************************************
         SPACE 1
NCVPE    MVC   DEVICECD,12(R10)    MOVE DEVICE CODE TO RECOUT
         MVC   12(6,R10),16(R10)   ADJ VOL SER
CVPE     SUBIN PREFIX=E,SAVE=(R4)
         MVC   DSNINX(8),0(R10)    MOVE NAME TO RECOUT
         MVI   FLAG,FLAGCVOL       MOVE FLAG CVOL TO RECOUT
         MVC   VOLSER,12(R10)      MOVE VOL SER TO RECOUT
         MVC   TYPE,=C'CVOL PTR'
         BAL   R4,WRITE            PERFORM PRINT ROUTINE
         LA    R5,5                LOAD 5 (MAX. OF VOL FOR SYSCTLG)
         LA    R6,TSYSCTLG         GET ADDRESS TABLE OF VOL. FOR SYSCTG
LOOPCVPE CLC   1(6,R6),12(R10)     TEST IF THE VOL SER OF THIS ENTRY
         BE    ENDCVPE             YES              / IS IN TABLE
         CLC   0(2,R6),ENDTSYSC    TEST IF THE SPACE OF THIS ELEMENT IS
         BE    PINTAB              YES                        / FREE
         LA    R6,7(R6)            NO
         BCT   R5,LOOPCVPE
         B     ERRCVTAB            YES - ERROR
PINTAB   MVC   1(6,R6),12(R10)     MOVE NEW CVOL IN TABLE
ENDCVPE  SR    R5,R5               CLEAR
         IC    R5,11(R10)          LOAD NO OF HW LEFT
         SLL   R5,1                MULT BY 2
         LA    R10,12(R5,R10)      GIVE ADDRESS FOR NEXT ENTRY
         SUBOUT PREFIX=E,RESTORE=(R4)
         SPACE 2
***********************************************************************
*        ALIAS ENTRY ROUTINE                                          *
***********************************************************************
         SPACE 1
AE       SUBIN PREFIX=F,SAVE=(R4)
         MVC   DSNINX(8),0(R10)    MOVE ALIAS NAME TO RECOUT
         LA    R11,DSNINX
         BAL   R4,PUTPOINT         PERFORM PUTPOINT ROUTINE
         MVC   1(8,R11),=C'ALIAS OF'
         LA    R11,10(R11)         ADD 10
         MVC   0(8,R11),12(R10)    MOVE TRUE NAME TO RECOUT
         BAL   R4,PUTPOINT         PERFORM PUTPOINT ROUTINE
         MVI   FLAG,FLAGALS        MOVE FLAG ALIAS TO RECOUT
         MVC   TYPE,=C'ALIAS   '
         BAL   R4,WRITE            PERFORM PRINT ROUTINE
         LA    R10,20(R10)         GIVE ADDRESS FOR NEXT ENTRY
         SUBOUT PREFIX=F,RESTORE=(R4)
         EJECT
***********************************************************************
*        VOLUME CONTROL BLOCK POINTER ENTRY ROUTINE                   *
***********************************************************************
         SPACE 1
VCBPE    SUBIN PREFIX=G,SAVE=(R4)
         MVC   0(8,R12),0(R10)     MOVE NAME TO RECOUT
         CLI   0(R10),C'G'         TEST IF GDG DS
         BNE   *+20                BRANCH IF NO
         CLC   5(3,R10),=C'V00'    YES - CONFIRME IF GDG DS
         BNE   *+10                BRANCH IF NO
         XC    1(4,R12),TRANSGDG   YES - TRANSLATE NUMBER IN DISPLAY F.
         MVI   FLAG,FLAGDS         MOVE FLAG DATA SET TO RECOUT
         ZAP   SVMVL,ONE
         MVI   SWCLEAR+1,X'F0'
         MVC   VCSAVTTR,TTR        SAVE TTR
         ST    R10,VCSAVR10        SAVE R10
         MVC   TTR,8(R10)          MOVE TTR FROM THIS VCBPE
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         MVC   NVOLMAX,0(R2)       MOVE NUMBER OF VOL FOR THIS DS
LOOPVCB  BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LR    R10,R2
         MVC   VCO,0(R10)          MOVE NUMBER OF VOLUME
         CLC   VCO,TWENTY+2        TEST IF NUMBER OF VOL IS > 20
         BH    MOVE20              YES - GO TO MOVE TWENTY
         B     LAFV                NO
MOVE20   MVC   VCO,TWENTY+2
LAFV     LA    R6,2(R10)           GET ADDRESS OF FIRST VOL
         BAL   R4,MVL              PERFORM MOVE'S FOR MULTI-VOL LIST
         CLC   252(3,R10),TTR0     TEST IF LAST VCBC
         BE    ENDVCBPE            YES
         MVC   TTR,252(R10)        NO - MOVE TTR OF NEXT VCBC
         B     LOOPVCB
ENDVCBPE MVC   TTR,VCSAVTTR        RESTORE TTR
         L     R10,VCSAVR10        RESTORE R10
         BAL   R4,READABLK         PERFORM READ A CATALOG BLOCK
         LA    R10,14(R10)         GET ADDRESS FOR NEXT ENTRY
         SUBOUT PREFIX=G,RESTORE=(R4)
         EJECT
***********************************************************************
*        DATA SET POINTER ENTRY ROUTINE                               *
***********************************************************************
         SPACE 1
DSPE     SUBIN PREFIX=H,SAVE=(R4)
         MVC   0(8,R12),0(R10)     MOVE NAME TO RECOUT
         CLI   0(R10),C'G'         TEST IF THIS DS IS A GDG
         BNE   NOTGDG              NO
         CLC   5(3,R10),=C'V00'    YES - CONFIRME IF GDG DS
         BNE   NOTGDG              NO
         XC    1(4,R12),TRANSGDG   YES - TRANSLATE NUMBER IN DISPLAY F.
NOTGDG   MVI   FLAG,FLAGDS         MOVE FLAG DATA SET TO RECOUT
         MVC   NVOLMAX,12(R10)     MOVE NUMBER OF VOL FOR THIS DS
         MVC   VCO,12(R10)         MOVE VOLUME COUNT
         LA    R6,14(R10)          GET ADDRESS FIRST VOLUME
         ZAP   SVMVL,ONE
         MVI   SWCLEAR+1,X'F0'
         BAL   R4,MVL              PERFORM MOVE'S FOR MULTI-VOL LIST
         SR    R5,R5               CLEAR
         IC    R5,11(R10)          LOAD NO OF HW LEFT
         SLL   R5,1                MULT BY 2
         LA    R10,12(R5,R10)      GET ADDRESS FOR NEXT ENTRY
         SUBOUT PREFIX=H,RESTORE=(R4)
         SPACE 3
MVL      SUBIN PREFIX=I,SAVE=(R4)
LOOPVC   MVC   DEVICECD,0(R6)      MOVE DEVICE CODE TO RECOUT
         MVC   VOLSER,4(R6)        MOVE VOL SER TO RECOUT
         MVC   DSEQVOL,10(R6)      MOVE DS SEQ. NUMBER TO RECOUT
         XC    DECIMAL,DECIMAL
         MVC   DECIMAL+6(2),SVMVL
         CVB   R5,DECIMAL
         STH   R5,SEQVOLMV         MOVE SEQ. OF VOL IN MULTI-VOL LIST
NOTP     MVC   TYPE,=C'DATA SET'
         BAL   R4,WRITE            PERFORM PRINT ROUTINE
         LA    R6,12(R6)           GET ADDRESS FOR NEXT VOLUME INFO
         AP    SVMVL,ONE
         LH    R5,VCO
         BCTR  R5,R0
         STH   R5,VCO
         LTR   R5,R5
         BNZ   LOOPVC
         SUBOUT PREFIX=I,RESTORE=(R4)
         EJECT
***********************************************************************
*        PRINT ROUTINE                                                *
***********************************************************************
         SPACE 1
WRITE    SUBIN PREFIX=P,SAVE=(R4)
         MVC   FROMCVOL,CVOLNO     MOVE CVOL TO PRINT DETAIL LINE
         MVC   NAME,DSNINX         MOVE NAME TO PRINT DETAIL LINE
         MVC   HEXSTOR(4),DEVICECD PREPARE FOR TRANSLATE DEVICE CODE
         BAL   R4,HEXTRANS         PERFORM TRANSLATE
         MVC   DEVICECX,HEXSTOR    MOVE DEVICE CODE TO PRINT DETAIL LNE
         CLC   DEVICECX,DEVBLANK
         BE    CLEARDEV
         B     MVS
CLEARDEV MVI   DEVICECX,BLANK
         MVC   DEVICECX+1(7),DEVICECX
MVS      MVC   VOLSERP,VOLSER      MOVE VOL SER TO PRINT DETAIL LINE
         CLI   FLAG,FLAGGINX       TEST IF THIS ENTRY IS A GEN.INDEX
         BNE   TIFDS               NO - GO TO NEXT TEST
         MVC   DECIMAL(2),CURGENC  YES - ALIGNMENT
         LH    R5,DECIMAL          LOAD CURRENT GEN, COUNT INTO REG.5
         CVD   R5,DECIMAL          CONVERT BINARY
         UNPK  CUGEN,DECIMAL+6(2)  UNPACK
         OI    CUGEN+2,SIGN        FORCE SIGN
         MVC   HEXSTOR(1),GDGFLAG  PREPARE FOR TRANSLATE GDG FLAG
         BAL   R4,HEXTRANS         PERFORM TRANSLATE
         MVC   GDGF,HEXSTOR        MOVE GDG FLAG TO PRINT DET. LINE
         SR    R5,R5               CLEAR
         IC    R5,MAXGDG           LOAD MAX.GEN. ALLOWED INTO REG.5
         CVD   R5,DECIMAL          CONVERT BINARY
         UNPK  GDGMAX,DECIMAL+6(2) UNPACK
         OI    GDGMAX+2,SIGN       FORCE SIGN
         B     MFLAG               NO - GO TO MOVE FLAG TO PRINT DET.L.
TIFDS    TM    FLAG,FLAGDS         TEST IF THIS ENTRY IS A DATA SET
         BNO   MFLAG               NO - GO TO MOVE FLAG TO PRINT DET.L.
         MVC   DECIMAL(2),DSEQVOL  YES - ALIGNMENT
         LH    R5,DECIMAL          LOAD SEQ. OF VOL INTO REG.5
         CVD   R5,DECIMAL          CONVERT BINARY
         UNPK  SEQNO,DECIMAL+6(2)  UNPACK
         OI    SEQNO+2,SIGN        FORCE SIGN
         MVC   DECIMAL(2),SEQVOLMV ALIGNMENT
         LH    R5,DECIMAL          LOAD SEQ. OF VOL IN MULTI-VOL LIST
         CVD   R5,DECIMAL          CONVERT BINARY
         UNPK  MVSEQNO,DECIMAL+6(2) UNPACK
         OI    MVSEQNO+2,SIGN      FORCE SIGN
         MVI   FLAG,FLAGDS         MOVE FLAG DATA SET TO RECOUT
         CH    R5,=H'1'            TEST IF FIRST VOL FOR THIS DS
         BNE   TIFLV               NO
         OI    FLAG,FLAGFVDS       YES
TIFLV    CH    R5,NVOLMAX          TEST IF LAST VOL FOR THIS DS
         BNE   MFLAG               NO
         OI    FLAG,FLAGLVDS       YES
         MVI   SWCLEAR+1,X'00'
MFLAG    MVC   HEXSTOR(1),FLAG     PREPARE FOR TRANSLATE FLAG CHAR.
         BAL   R4,HEXTRANS         PERFORM TRANSLATE
         MVC   FLAGX,HEXSTOR       MOVE FLAG TO PRINT DETAIL LINE
SWMODIFY B     SWCHANGE
         CLI   FLAG,X'4A'
         BNE   NOHL
         CLC   VOLTOMOD,VOLSER
         BNE   NOHL
         BAL   R4,IEHMOD
         B     TCTRLCH
SWCHANGE B     SWCOPY
SWCPH2   NOP   CPH2
         BAL   R4,IEHCHG
         B     TCTRLCH
CPH2     TM    FLAG,FLAGDS         TEST IF DATA SET ENTRY
         BNO   NOHL
         MVC   NEWVOLID,VOLSER
         BAL   R4,IEHCHG2
         B     NOHL
SWCOPY   B     SWPURGE
         TM    FLAG,FLAGDS
         BO    NOHL
         BAL   R4,IEHCOP
SWPURGE  B     TCTRLCH
         BAL   R4,IEHPGE
TCTRLCH  AP    LINECOUN,ONE        ADD ONE TO LINE COUNT
         CP    LINECOUN,MAXLINE    TEST IF LINE COUNT IS > MAX.LINE
         BE    OVFLOW
         MVI   CTRCHAR,SPACE1      NO - MOVE SPACE1 TO CONTROL CHAR.
         B     PUT
OVFLOW   MVI   CTRCHAR,SKIP        YES - MOVE SKIP TO CONTROL CHAR.
PUT      PUT   SYSLIST,OUTPRINT
         CP    LINECOUN,MAXLINE    TEST IF LINE COUNT IS > MAX.LINE
         BNE   NOHL                NO
         BAL   R4,HEADLINE         PERFORM PRINT HEAD LINES
NOHL     MVI   OUTPRINT,BLANK           ## CLEAR WA
         MVC   OUTPRINT+1(132),OUTPRINT ## OUTPRINT
SWCLEAR  NOP   ENDW
         MVI   0(R12),BLANK          ** CLEAR WA
         MVC   1(8,R12),0(R12)       ** RECOUT
         MVI   SEQVOLMV,BLANK
         MVC   SEQVOLMV+1(14),SEQVOLMV
ENDW     SUBOUT PREFIX=P,RESTORE=(R4)
         SPACE 3
CLEAR    SUBIN PREFIX=Q,SAVE=(R4)
         MVI   SEQVOLMV,BLANK
         MVC   SEQVOLMV+1(14),SEQVOLMV
         MVI   RECOUT+16,BLANK
         MVC   RECOUT+17(63),RECOUT+16
         MVI   OUTPRINT,BLANK           ## CLEAR WA
         MVC   OUTPRINT+1(132),OUTPRINT ## OUTPRINT
         SUBOUT PREFIX=Q,RESTORE=(R4)
         SPACE 3
HEADLINE SUBIN PREFIX=R,SAVE=(R4)
         AP    PAGECOUN,ONE        ADD ONE TO PAGE COUNT
         UNPK  PAGE,PAGECOUN       UNPACK
         OI    PAGE+2,SIGN         FORCE SIGN
         PUT   SYSLIST,HEADLNE1
         PUT   SYSLIST,HEADLNE2
         PUT   SYSLIST,HEADLNE3
         ZAP   LINECOUN,=P'5'      ZERO AND ADD FIVE TO LINE COUNT
         SUBOUT PREFIX=R,RESTORE=(R4)
         EJECT
***********************************************************************
*                                                                     *
***********************************************************************
         SPACE 1
PUTPOINT SUBIN PREFIX=S,SAVE=(R4)
         LA    R5,8
LOOPPP   LA    R11,1(R11)
         CLI   0(R11),BLANK
         BE    ENDTPP
         BCT   R5,LOOPPP
ENDTPP   MVI   0(R11),POINT
         LA    R11,1(R11)
         SUBOUT PREFIX=S,RESTORE=(R4)
         SPACE 3
***********************************************************************
*        CONVERT A FW OF HEX CHARACTERS TO DISPLAY FORMAT             *
***********************************************************************
         SPACE 1
HEXTRANS SUBIN PREFIX=T,SAVE=(R4,R6)
         LA    R5,8
         LA    R6,HEXSTOR
HEXLOOP  MVO   0(5,R6),0(4,R6)
         LA    R6,1(R6)
         BCT   R5,HEXLOOP
         TR    HEXSTOR(8),HEXTABLE
         SUBOUT PREFIX=T,RESTORE=(R4,R6)
         EJECT
***********************************************************************
*        ERROR  ROUTINES                                              *
***********************************************************************
         SPACE 1
ERROR    CVD   R15,DECIMAL         CONVERT BINARY
         MVC   OUTPRINT+1(71),MSGERR1
         UNPK  DECIMAL(3),DECIMAL+6(2)  UNPACK
         OI    DECIMAL+2,SIGN      FORCE SIGN
         MVC   OUTPRINT+36(3),DECIMAL   MOVE CC TO PRINT DET LINE
         MVC   HEXSTOR(3),TTR
         BAL   R4,HEXTRANS
         MVC   OUTPRINT+48(6),HEXSTOR
         MVC   OUTPRINT+64(6),CVOLNO
         B     ABEND
ERTIN    MVC   OUTPRINT+1(53),MSGERR6
         B     ABEND
         SPACE 1
         SPACE 1
ERRENT1  MVC   OUTPRINT+1(74),MSGERR2
         B     PR10
ERRENT2  MVC   OUTPRINT+1(74),MSGERR3
         B     PR10
ERRENT3  MVC   OUTPRINT+1(74),MSGERR4
         B     PR10
ERRENT6  MVC   OUTPRINT+1(74),MSGERR8
         LR    R10,R15
         B     PR10
PR10     ST    R10,HEXSTOR
         BAL   R4,HEXTRANS
         MVC   OUTPRINT+65(8),HEXSTOR
         B     ABEND
         SPACE 1
ERRCVTAB MVC   OUTPRINT+1(53),MSGERR5
         MVC   OUTPRINT+36(6),12(R10)
         SPACE 1
ABEND    MVI   OUTPRINT,SPACE1
         PUT   SYSOUT,OUTPRINT
         ABEND 581,DUMP
         SPACE 1
MSGERR1  DC    C'CONDITION CODE FROM LOCATE MACRO =     , TTR =       '
         DC    C' , CVOL =        .'
MSGERR2  DC    C'BAD ENTRY IN A VOLUME INDEX CONTROL ENTRY, SEE DUMP ('
         DC    C' ADDRESS =          )'
MSGERR3  DC    C'BAD ENTRY IN AN INDEX CONTROL ENTRY (IPE), SEE DUMP ('
         DC    C' ADDRESS =          )'
MSGERR4  DC    C'BAD ENTRY IN AN INDEX CONTROL ENTRY (GIPE), SEE DUMP '
         DC    C'( ADDRESS=          )'
MSGERR5  DC    C'TABLE CVOL IS TOO SHORT (MAX.5 VOL)                  '
MSGERR6  DC    C'TABLE INDEX TOO SHORT (MAX. 100 ELEMENTS)            '
MSGERR7  DC    C'INDEX NOT ON CVOL CATALOG - BYPASSED                 '
MSGERR8  DC    C'RETURN CODE FROM DYNAMIC ALLOCATION MACRO IS NOT 0  -'
         DC    C'( REG.15 =          )'
         SPACE 3
***********************************************************************
*    CLOSE THE FILES AND END OF PROGRAM                               *
***********************************************************************
         SPACE 1
CLOSEND  LA    R4,ENDOFEND
CLOSE    B     SWCLIST
         CLOSE SYSUT1
SWCLIST  B     SWCPUN
         CLOSE SYSLIST
SWCPUN   B     NORMCLOS
         CLOSE SYSPUNCH
NORMCLOS CLOSE SYSOUT
*        BR    R4
         SPACE 1
ENDOFEND PGMOUT ,                  END OF PROGRAM
         EJECT
***********************************************************************
*        REQUEST BLOCK AND TEXT UNITS FOR DYNAMIC ALLOCATION OF       *
*         CVOL CATALOG (SYSCTLG).                                     *
***********************************************************************
         SPACE 1
CVOLPRB  DC    X'80'               INDICATE END OF LIST
         DC    AL3(CVOLCTLG)       REQUEST BLOCK POINTER
         SPACE 1
CVOLCTLG DS    0F                  REQUEST BLOCK FOR SYSCTLG
         DC    X'14'               LENGTH OF THIS REQUEST BLOCK
CVOLAORU DC    X'01'               DSNAME ALLOCATION (DEFAULT 1ST TIME)
         DC    X'F000'             FLAGS 1
         DC    X'0000'             ERROR CODE
         DC    X'0000'             INFO CODE
         DC    A(CVOLTPTR)         POINTER TO TEXT UNIT POINTERS
         DC    A(0)                RESERVED
         DC    F'0'                FLAGS 2
         SPACE 1
CVOLTPTR DC    A(CVOLDDN) TEXT UNIT POINTERS TO DDNAME
IEOL     DC    A(CVOLDSN)                   TO DSNAME
         DC    A(CVOLDISP)                 TO DISP
         DC    A(CVOLUNIT)                TO UNIT
         DC    X'80'                        INDICATE END OF LIST
         DC    AL3(CVOLVOLS)           TO VOL=SER
         SPACE 1
CVOLDDN  DC    X'0001',X'0001',X'0008',C'CT......' TEXT UNITS - DDNAME
CVOLDSN  DC    X'0002',X'0001',X'0007',C'SYSCTLG' DSNAME
CVOLDISP DC    X'0004',X'0001',X'0001',X'08' DISP=SHR
CVOLUNIT DC    X'0015',X'0001',X'0004',C'3330' UNIT
         DC    CL2' '              + TWO BYTES FOR UNIT
CVOLVOLS DC    X'0010',X'0001',X'0006',C'......' VOL=SER
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS
***********************************************************************
         SPACE 1
IEHPROGM DCB   DDNAME=SYSIN,                                           C
               DSORG=PS,                                               C
               RECFM=FB,                                               C
               MACRF=PM,                                               C
               LRECL=80,                                               C
               BLKSIZE=1680        (BLOCKING FACTOR = 21)
         SPACE 3
SYSOUT   DCB   DDNAME=SYSOUT,                                          C
               DSORG=PS,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133,                                            C
               MACRF=PM
         SPACE 3
SYSLIST  DCB   DDNAME=SYSLIST,                                         C
               DSORG=PS,                                               C
               RECFM=FM,                                               C
               LRECL=133,                                              C
               BLKSIZE=133,                                            C
               MACRF=PM
         SPACE 3
SYSPUNCH DCB   DDNAME=SYSPUNCH,                                        C
               DSORG=PS,                                               C
               RECFM=F,                                                C
               LRECL=80,                                               C
               BLKSIZE=80,                                             C
               MACRF=PM
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          C
               DSORG=PS,                                               C
               RECFM=F,                                                C
               LRECL=80,                                               C
               BLKSIZE=80,                                             C
               MACRF=GL,                                               C
               EODAD=ENDINPUT
         SPACE 1
SYSCATLG DCB   DDNAME=CT......,                                        C
               MACRF=(E)
DDNDISK  EQU   SYSCATLG+40
         EJECT
***********************************************************************
*        DEFINITION FOR OUTPUT RECORD  ( IEHPROGM )                   *
***********************************************************************
               SPACE 1
RECOUT   DS    0CL80
OPERATIO DC    CL16' '
DSNINX   DS    CL44
         DS    CL20' '
         SPACE 1
***********************************************************************
*        DEVICE CODE-NAME TABLE                                       *
***********************************************************************
         SPACE 1
         DS    0D
DEVTAB   DC    X'30008001',H'05',C'=2400='
         DC    X'30502009',H'07',C'=3330-1='
         DC    X'3050200D',H'07',C'=3330-1='
         DC    X'00032000',H'07',C'=3330-1='
         DC    X'00042000',H'07',C'=3330-1='
         DC    X'00052000',H'07',C'=3330-1='
         DC    X'00062000',H'07',C'=3330-1='
         DC    X'00072000',H'07',C'=3330-1='
         DC    X'34008003',H'07',C'=3400-3='
         DC    X'34208003',H'07',C'=3400-4='
         DC    X'32008003',H'07',C'=3400-5='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
         DC    X'FFFFFFFF',H'05',C'=FREE='
UNK      DC    X'00000000',H'05',C'=????='
         EJECT
***********************************************************************
*        DEFINITION DETAIL LINE AND HEAD LINES FOR SYSPRT01,2         *
***********************************************************************
         SPACE 1
OUTPRINT DS    0CL133
CTRCHAR  DS    CL1
NAME     DS    CL44
         DS    CL2
TYPE     DS    CL8
         DS    CL2
FLAGX    DS    CL2
         DS    CL2
DEVICECX DS    CL8
         DS    CL2
VOLSERP  DS    CL6
         DS    CL2
SEQNO    DS    CL3
         DS    CL6
MVSEQNO  DS    CL3
         DS    CL8
CUGEN    DS    CL3
         DS    CL6
GDGF     DS    CL2
         DS    CL5
GDGMAX   DS    CL3
         DS    CL5
FROMCVOL DS    CL6
         DS    CL4
         SPACE 3
HEADLNE1 DS    0CL133
         DC    X'11'
         DC    C'T581P15'
         DC    CL10' '
TITLE    DC    CL80' '
         DC    CL5' '
DATE1    DS    CL9
         DC    CL12' '
         DC    C'PAGE  '
PAGE     DS    CL3
         SPACE 3
HEADLNE2 DS    0CL133
         DC    X'09'
         DC    CL46' '
         DC    C'ENTRY          DEVICE   VOLUME  SEQ   MULTI-VOL   *--'
         DC    C'- IF GEN. IX.  ---*    CATLG     '
         SPACE 3
HEADLNE3 DS    0CL133
         DC    X'11'
         DC    CL46'*------------------ NAME ------------------*  '
         DC    C'   TYPE   F.    CODE      ID.    NO    SEQ.NO     CUR'
         DC    C'.GEN   FLAG    MAX       ON      '
         SPACE 3
***********************************************************************
*        DEFINITION SYSOUT FILE                                       *
***********************************************************************
         SPACE 1
HLSYSOUT DS    0CL133
         DC    X'11'
         DC    CL100'T581P15     MONSANTO TSG UTILITY'
         DC    CL5'DATE '
DATE2    DS    CL9
TIME     DC    CL15'  TIME   .  .  '
HH       EQU   TIME+7
MM       EQU   TIME+10
SS       EQU   TIME+13
         DC    CL3' '
DLSYSOUT DS    0CL133
         DC    X'09'
         DC    CL132' '
         SPACE 1
         EJECT
***********************************************************************
*        WORK AREAS                                                   *
***********************************************************************
         SPACE 1
         DS    0H
SEQVOLMV DS    CL2
FLAG     DS    C
DEVICECD DS    CL4
VOLSER   DS    CL6
CURGENC  EQU   VOLSER    (LENGTH=2)
DSEQVOL  DS    CL2
GDGFLAG  EQU   DSEQVOL
MAXGDG   EQU   DSEQVOL+1
         SPACE 1
SVMVL    DC    PL2'0'
TABINDEX DS    0F        21 ELEMENTS
         DC    21XL12'000000000000000000000000'
DECIMAL  DS    D                   WA FOR DECIMAL OPERATION
ATSCTLG  DC    A(TSYSCTLG-7)
TSYSCTLG DC    X'00',C'DSK306'
         DC    4X'00000000000000'
ENDTSYSC DC    X'0000'
HEXSTOR  DC    3F'0'
HEXTABLE DC    C'0123456789ABCDEF'
         SPACE 1
INXSPEC1 CAMLST NAME,NDS2,,BLOCKWA
INXSPEC2 CAMLST NAME,NDS,CVOLNO,BLOCKWA
         SPACE 1
EXCORAD  DS    F
EXCOREN  DS    F
LENIX    DS    F
LENNIX   DS    F
         DS    0H
PPLIST   DC    XL2'0000'
BLSW     DS    C
VOLTOMOD DS    CL6
NEWVOLID DS    CL6
NCVOLCOP DS    CL11
NIX      DS    CL44
         DS    C                   + 1 FOR NIX
SRECOUT  DS    CL80
NDS      DS    CL44
NDS2     DS    CL44
         DS    C                   + 1 FOR NDS
FLASCR   DC    C' '
         SPACE 1
VCO      DS    H
         SPACE 1
DCBSA    DS    CL12
PX6      DC    C'......'
         DS    0F
TTR      DS    CL3
         EJECT
***********************************************************************
*        WORK AREAS   ( CONT'D )                                      *
***********************************************************************
         SPACE 1
         DC    X'00'
MBBCCHHR DS    D
BLOCKWK  DS    CL8
BLOCKWA  DS    CL265
CVOLNO   DS    CL6
         SPACE 1
SWITCH   DC    C' '
NORY     DC    C' '
TTRSW    DC    C' '
LINECOUN DC    PL2'0'
PAGECOUN DC    PL2'0'
MAXLINE  DC    P'60'
GISAVTTR DS    CL3
GISAVR10 DS    F
GISAVR12 DS    F
VCSAVTTR DS    CL3
VCSAVR10 DS    F
NVOLMAX  DS    H
         EJECT
***********************************************************************
*        CONSTANTS , EQUATES AND LITTERAL POOL                        *
***********************************************************************
         SPACE 1
UNCATLG  DC    C' UNCATLG '
CATLG    DC    C' CATLG '
SCRATCH  DC    C' SCRATCH '
RENAME   DC    C' RENAME '
BLDX     DC    C' BLDX '
BLDG     DC    C' BLDG '
BLDA     DC    C' BLDA '
DLTA     DC    C' DLTA '
DLTX     DC    C' DLTX '
CONNECT  DC    C' CONNECT '
RELEASE  DC    C' RELEASE '
LIST     DC    C' LIST '
CHANGE   DC    C' CHANGE '
MODIFY   DC    C' MODIFY '
COPY     DC    C' COPY '
PURGE    DC    C' PURGE '
ALLCATLG DC    C'ALLCATLG'
MSYSOUT1 DC    CL50'INVALID CONTROL STATEMENT , IGNORED.'
MSYSOUT2 DC    CL50'CONTROL STATEMENT HAS BEEN PASSED TO IEHPROGM.'
MSYSOUT3 DC    CL50'SYNTAX ERROR.'
MSYSOUT4 DC    CL50'NORMAL END.'
MSYSOUT5 DC    CL50'NEW INDEX NAME TOO LONG.'
MSYSOUT6 DC    CL50'NEW INDEX NAME TOO LONG FOR THIS INDEX.'
MSYSOUTP DC    CL50'PROGRAM TERMINATE BECAUSE LENGTH OF PARM > 70 POS.'
COMMA    EQU   C','
ONE      DC    P'1'
TTR0     DC    X'000000'
FIRSTTR  DC    X'000001'
ILENAME  DC    X'FFFFFFFFFFFFFFFF'
TRANSGDG EQU   ILENAME
TWELVE   DC    F'12'
TWENTY   DC    F'20'
DEVBLANK DC    C'40404040'
         SPACE 1
BLANK    EQU   X'40'
ZERO     EQU   X'F0'
SIGN     EQU   X'F0'
SPACE1   EQU   X'09'
SKIP     EQU   X'89'
YES      EQU   C'Y'
NO       EQU   C'N'
ON       EQU   X'FF'
OFF      EQU   X'00'
POINT    EQU   C'.'
FLAGCVOL EQU   B'10000000'
FLAGDS   EQU   B'01000000'
FLAGINX  EQU   B'00100000'
FLAGGINX EQU   B'00010000'
FLAGLVDS EQU   B'00001000'
FLAGALS  EQU   B'00000100'
FLAGFVDS EQU   B'00000010'
TIPE     EQU   X'00'
TVCBPE   EQU   X'01'
TGIPE    EQU   X'02'
TCVPE    EQU   X'03'
TAE      EQU   X'04'
TNCVPE   EQU   X'05'
TDSPEMIN EQU   X'07'
TDSPEMAX EQU   X'1F'
         END
         SPACE 1
