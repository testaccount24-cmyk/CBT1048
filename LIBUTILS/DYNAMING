//DYNAMING     JOB  (1580,5),'0052 FOR J.NOLS',CLASS=A
// EXEC ASMFCL
//ASM.SYSIN DD *
         TITLE '***************   DYNAMI   /   MINGS   ***************'
DYNAMING CSECT
         SPACE 1
         PRINT ON,GEN
         SPACE 3
***********************************************************************
*                                                                     *
*              PROGRAM NAME        :    DYNAMING                      *
*                                                                     *
*              ALIAS NAMES         :    DYNAMD      OR      UT406     *
*                                       DYNAMO              UT405     *
*                                       DYNAML              UT404     *
*                                       MINGD               UT426     *
*                                       MINGE               UT425     *
*                                       MINGL               UT424     *
*                                                                     *
*              AUTHOR              :    J. NOLS                       *
*                                                                     *
*              DATE WRITTEN        :    JANUARY, 1977                 *
*                                                                     *
*              LOCATION            :    EUROPEAN COMPUTER CENTER      *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*        =======                                                      *
*                                                                     *
*              SUBROUTINE USED BY COBOL (DYNAMI) OR RPG (MINGS)       *
*         PROGRAMS TO DYNAMICALLY LOAD, EXECUTE AND DELETE LOAD       *
*         MODULES.                                                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        REGISTER EQUATES AND USAGE                                   *
***********************************************************************
         SPACE 1
R0       EQU   0    SVC COMMUNICATION AND WORK REGISTER
R1       EQU   1    SVC COMMUNICATION AND WORK REGISTER
R2       EQU   2    BASE REGISTER
R3       EQU   3    WORK REGISTER
R4       EQU   4    NOT USED
R5       EQU   5    NOT USED
R6       EQU   6    NOT USED
R7       EQU   7    NOT USED
R8       EQU   8    NOT USED
R9       EQU   9    NOT USED
R10      EQU   10   NOT USED
R11      EQU   11   NOT USED
R12      EQU   12   WORK REGISTER
R13      EQU   13   SAVE AREA POINTER
R14      EQU   14   BALR RETURN ADDRESS
R15      EQU   15   BALR ROUTINE ADDRESS
         TITLE '****   DYNAMI AND MINGS ENTRY POINTS    *****'
***********************************************************************
*        DYNAML (UT404), DYNAMICALLY LOAD LOAD MODULE FOR COBOL.      *
***********************************************************************
         SPACE 1
DYNAML   EQU   *                   ENTRY POINT FOR DYNAML
UT404    EQU   *                   ENTRY POINT FOR UT404
         ENTRY DYNAML,UT404
         USING DYNAML,R15          ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,COBOL      INDICATE CALLER IS WRITTEN IN COBOL
         MVI   FUNCTION,LOAD       INDICATE DYNAML CALL
         B     COMMON              BRANCH TO COMMON ROUTINE
         SPACE 3
***********************************************************************
*        DYNAMO (UT405), DYNAMICALLY EXECUTE LOAD MODULE FOR COBOL.   *
***********************************************************************
         SPACE 1
DYNAMO   EQU   *                   ENTRY POINT FOR DYNAMO
UT405    EQU   *                   ENTRY POINT FOR UT405
         ENTRY DYNAMO,UT405
         USING DYNAMO,R15          ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,COBOL      INDICATE CALLER IS WRITTEN IN COBOL
         MVI   FUNCTION,EXECUTE    INDICATE DYNAMO CALL
         B     COMMON              BRANCH TO COMMON ROUTINE
         SPACE 3
***********************************************************************
*        DYNAMD (UT406), DYNAMICALLY DELETE LOAD MODULE FOR COBOL.    *
***********************************************************************
         SPACE 1
DYNAMD   EQU   *                   ENTRY POINT FOR DYNAMD
UT406    EQU   *                   ENTRY POINT FOR UT406
         ENTRY DYNAMD,UT406
         USING DYNAMD,R15          ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,COBOL      INDICATE CALLER IS WRITTEN IN COBOL
         MVI   FUNCTION,DELETE     INDICATE DYNAMD CALL
         B     COMMON              BRANCH TO COMMON ROUTINE
         EJECT
***********************************************************************
*        MINGL (UT424), DYNAMICALLY LOAD LOAD MODULE FOR RPG.         *
***********************************************************************
         SPACE 1
MINGL    EQU   *                   ENTRY POINT FOR MINGL
UT424    EQU   *                   ENTRY POINT FOR UT424
         ENTRY MINGL,UT424
         USING MINGL,R15           ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,RPG        INDICATE CALLER IS WRITTEN IN RPG
         MVI   FUNCTION,LOAD       INDICATE MINGL CALL
         B     COMMON              BRANCH TO COMMON ROUTINE
         SPACE 3
***********************************************************************
*        MINGE (UT425), DYNAMICALLY EXECUTE LOAD MODULE FOR RPG.      *
***********************************************************************
         SPACE 1
MINGE    EQU   *                   ENTRY POINT FOR MINGE
UT425    EQU   *                   ENTRY POINT FOR UT425
         ENTRY MINGE,UT425
         USING MINGE,R15           ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,RPG        INDICATE CALLER IS WRITTEN IN RPG
         MVI   FUNCTION,EXECUTE    INDICATE MINGE CALL
         B     COMMON              BRANCH TO COMMON ROUTINE
         SPACE 3
***********************************************************************
*        MINGD (UT426), DYNAMICALLY DELETE LOAD MODULE FOR RPG.       *
***********************************************************************
         SPACE 1
MINGD    EQU   *                   ENTRY POINT FOR MINGD
UT426    EQU   *                   ENTRY POINT FOR UT426
         ENTRY MINGD,UT426
         USING MINGD,R15           ESTABLISH ADDRESSABILITY
         MVI   LANGUAGE,RPG        INDICATE CALLER IS WRITTEN IN RPG
         MVI   FUNCTION,DELETE     INDICATE MINGD CALL
         TITLE '***************   DYNAMI   /   MINGS   ***************'
***********************************************************************
*        COMMON ROUTINE FOR DINAMI AND MINGS.                         *
***********************************************************************
         SPACE 1
COMMON   STM   R14,R12,12(R13)     SAVE REGISTERS
         BALR  R2,0                SET-UP BASE REGISTER
         DROP  R15                 DROP REG15 ADDRESSABILITY
         USING *,R2                ESTABLISH REG2 ADDRESSABILITY
         LA    R3,SAVEREGS         POINT TO SAVEREGS
         ST    R13,SAVEREGS+4      POINT SAVEREGS AT HSA
         ST    R3,8(R13)           POINT HSA AT SAVEREGS
         LR    R13,R3              MOVE SAVE CHAIN POINTER TO REG13
         CLI   LANGUAGE,RPG        TEST IF CALLER IS IN RPG
         BE    *+10                YES - SKIP NEXT TWO INSTRUCTIONS
*                                  NO - MUST BE IN COBOL
         LR    R3,R1         COBOL SAVE PARAMETER LIST POINTER
         B     *+8                 SKIP NEXT INSTRUCTION
         LA    R3,AFIELD1    RPG   POINT AT INTERNAL PARAMETER LIST
         MVI   0(R3),X'00'         ZEROISE HIGH ORDER BYTE OF CALLED
*                                  PROGRAM NAME ADDRESS FOR LOAD SVC
         ST    R3,PARMLIST         SAVE PARAMETER LIST POINTER
         SPACE 3
FIRSTIME NOP   CONTINUE            NO-OP BRANCH FIRST TIME THROUGH ONLY
         MVI   *-3,X'F0'           FORCE UNCONDITIONAL BRANCH
         L     R3,16               GET CVT ADDRESS
         TM    116(R3),X'20'       TEST IF SYSTEM IS MFT
         BNO   *+8                 NO - MUST BE MVS, SKIP NEXT INSTR.
         MVI   SYSTEM,MFT          YES - INDICATE IS MFT SYSTEM
         LA    R0,DYNAMV00         POINT TO PROGRAM NAME
         SR    R1,R1               DCB NOT SPECIFIED
         SVC   8                   LOAD '''DYNAMV00'''
         ST    R0,EPA              STORE DYNAMV00 ENTRY POINT ADDRESS
         SPACE 3
CONTINUE L     R15,EPA             LOAD IN R15 DYNAMV00 ENTRY POINT AD.
         LA    R1,FLAGS            GET ADDRESS OF PARAMETER LIST
         SPACE 1
         BR    R15                 GO EXECUTE '''DYNAMV00'''
         SPACE 1
******   THE LINKAGE CONVENTIONS TO RETURN TO CALLER ARE IN   ******
******    'DYNAMV00' SUB-ROUTINE, DUE TO 'RIGAM' THAT NEEDS   ******
******    TO HAVE ACCESS TO THE SAVE AREA OF CALLER.          ******
******    THUS, THIS PROGRAM CONTAINS NO RETURN TO CALLER.    ******
******    RETURN TO CALLER IS DIRECTLY FROM DYNAMV00. NOTE    ******
******    ALSO THAT DYNAMV00 USES THIS SAVE AREA POINTER      ******
******    (I.E. DYNAMV00 DOES NOT ALTER REGISTER 13).         ******
         SPACE 1
         TITLE '***************   DYNAMI   /   MINGS   ***************'
***********************************************************************
*        WORK AREAS, CONTANTS, FLAGS, EQUATES AND LITERALS.           *
***********************************************************************
         SPACE 1
SAVEREGS DS    18F
         SPACE 1
DYNAMV00 DC    C'DYNAMV00'         PROGRAM NAME FOR SVC 8
EPA      DS    F                   ENTRY POINT ADDRESS OF DYNAMV00
         SPACE 1
FLAGS    DS    F         DEFAULTS = MVS, COBOL AND EXECUTE.
         ORG   *-4
SYSTEM   DC    C'V'                SYSTEM : F = MFT, V = MVS.
LANGUAGE DC    C'C'                LANGUAGE (OF CALLER) :
*                                     C = COBOL (DYNAMI).
*                                     R = RPG (MINGS).
FUNCTION DC    C'O'                FUNCTION (REQUESTED) :
*                                     L = LOAD LOAD MODULE.
*                                     O = EXECUTE LOAD MODULE.
*                                     D = DELETE LOAD MODULE.
RESERVED DC    C' '
         SPACE 1
PARMLIST DS    F         POINTER TO PARAMETER LIST FROM CALLER PROGRAM.
         SPACE 1
MFT      EQU   C'F'
MVS      EQU   C'V'
COBOL    EQU   C'C'
RPG      EQU   C'R'
LOAD     EQU   C'L'
EXECUTE  EQU   C'O'
DELETE   EQU   C'D'
         EJECT
***********************************************************************
*        PATCH AREA                                                   *
***********************************************************************
         SPACE 1
         DS    0H                  ASSUME A HALF-WORD ALIGNMENT
LENGTH   EQU   *-DYNAMING          = LENGTH OF PRECEDING CODING
PATCHAL  EQU   312-LENGTH          = LENGTH OF PATCH AREA TO BE RESERVD
*                                   312 IS THE DISPLACEMENT IN
*                                    P.S. GRANT MINGS VERSION OF THE
*                                    FIRST V-CON. THE FIRST V-CON OF
*                                    THIS PROGRAM HAS THE SAME DISPL.,
*                                    IN ORDER TO HAVE THE POSSIBILITY
*                                    DURING MVS 1977 CONVERSION TO
*                                    APPLY 'SUPERZAP' ON ALL THE
*                                    PROGRAMS USING MINGS(PSG).
         SPACE 3
PATCHARA DS    CL(PATCHAL)         RESERVES PATCH AREA
         ORG   *-PATCHAL
         SPACE 1
         B     *                   INDICATES 'BDDD' POINTER
         DC    XL(PATCHAL-4)'00'   SET THE REST TO X'00'
         SPACE 3
         WXTRN FIELD1    ***   ONLY FOR
         WXTRN FIELD2      *>
         WXTRN FIELD3      *>>  RRRRRR   PPPPPP    GGGGG
         WXTRN FIELD4      *>   R     R  P     P  G     G
         WXTRN FIELD5      *    R     R  P     P  G
         WXTRN FIELD6      *    RRRRRR   PPPPPP   G
AFIELD1  DC    A(FIELD1)   *    R R      P        G   GGGG
AFIELD2  DC    A(FIELD2)   *    R  R     P        G     G
AFIELD3  DC    A(FIELD3)   *    R   R    P        G     G
AFIELD4  DC    A(FIELD4)   *    R    R   P         GGGGG
AFIELD5  DC    A(FIELD5)   *
AFIELD6  DC    A(FIELD6) ***
         SPACE 3
         END
/*
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB2,DISP=SHR
//LKED.SYSIN DD *
 ALIAS  DYNAML,DYNAMO,DYNAMD,MINGL,MINGE,MINGD,UT404,UT405,UT406,      C
               UT424,UT425,UT426
 NAME DYNAMING(R)
/*
