TRACE    START 0
READCC   STM   14,12,12(13)            STORE REGISTERS 14-12
         BALR  4,0                     SET UP BASE REGISTER
         USING *,4                     DEFINE BASE REGISTER
STORER   LA    5,SAVEAREA              SET REG 5 TO TRACE SAVE AREA
         B     *+84
         DS    CL80
         ST    5,8(13)                 SAVE AREA ADDR IN HIGH SAVE AREA
         ST    13,4(5)                 HIGH SAVE AREA ADDR IN SAVE AREA
         LR    2,13                    SAVE REGISTER 13
         LR    13,5                    SET REG 13 TO SAVE AREA ADDR
OPEN     OPEN  (DCBIN,(INPUT),DCBOUT,(OUTPUT)) OPEN INPUT/OUTPUT FILES
         OPEN  (DCBOUT2,(OUTPUT))
         LA    6,B-1                   SET UP SOURCE REGISTER
         LA    7,SNAP2OUT+7            SET UP OUTPUT REGISTER
         LA    9,34                    SET UP BYTE COUNT REGISTER
         SR    10,10                   CLEAR REGISTER 10
         READ  DECBIN,SF,DCBIN,STORER,73 READ CONTROL CARD
         CHECK DECBIN                  WAIT FOR I/O COMPLETION
         CLOSE (DCBIN)                 CLOSE CONTROL CARD FILE
         CLI   B,C'B'                  BRANCH-ONLY TRACING/Q
         BE    SET8                    YES,BRANCH
         MVI   PRINTST-1,X'00'         NOP BRANCH
SET8     LA    8,2                     SET REGISTER 8 TO 2
CLEARTEN IC    10,0(6)                 PUT BYTE INTO REG 10
         TM    0(6),X'F0'              0-9/Q
         BO    SRDL                    YES,BRANCH
         LA    10,9(10)                NO,ADD 9
SRDL     SRDL  10,4                    SHIFT BITS 4-7 TO REG 11
         BCTR  6,0                     POINT TO PRECEDING INPUT BYTE
         BCT   8,CLEARTEN              LOOP IF HEX BYTE NOT FINISHED
         SLDL  10,8                    RETRIEVE WHOLE HEX BYTE
         STC   10,0(7)                 STORE IT IN OUTPUT FIELD
         BCTR  7,0                     POINT TO PRECEDING OUTPUT BYTE
         BCT   9,SET8                  LOOP IF MORE TO TRANSLATE
         CLI   FLAG1IN,C' '            SNAP REQUESTED/Q
         BNE   *+10                    YES,BRANCH
         MVC   SVC51(2),INSTAB+3       NO,NOP SNAP
         MVI   SNAP2OUT+4,X'80'        SET END OF SNAP INDICATOR
         CLI   SNAP1IN,C' '            ANY SNAPSHOTS REQUESTED/Q
         BNE   *+8                     YES,BRANCH
         ST    9,LIST+12               ZEROISE LIST ADDRESS
         CLI   SNAP2IN,C' '            1 SNAP REQUESTED/Q
         BNE   *+8                     NO,BRANCH
         MVI   SNAP1OUT+4,X'80'        YES,SIGNAL END OF SNAP
         L     1,CADROUT               PUT START ADDRESS IN REGISTER 1
         CLI   STNAME,C'0'             START ADDRESS OR NAME/Q
         BE    TSTBLNK                 START ADDRESS
         LA    0,STNAME                GET MODULE NAME
         LOAD  EPLOC=(0)               LOAD MODULE
         LR    1,0                     PUT ENTRY POINT ADDR IN REG 1
         ST    1,EP                PRESERVE ADDRESS OF MODULE
         LM    5,12,LOWOUT             GET CONTROL CARD PARAMETERS
         AR    5,1                     ADD DISPLACEMENT TO LOW TRACE AD
         AR    6,1                     ADD DISPLACEMENT TO HIGH TRACE
         AR    9,1                     UPDATE SNAP 1 LOW
         AR    10,1                    UPDATE SNAP 1 HIGH
         AR    11,1                    UPDATE SNAP 2 LOW
         AR    12,1                    UPDATE SNAP 2 HIGH
         STM   5,12,LOWOUT             RESTORE CONTROL CARD PARAMETERS
TSTBLNK  CLI   LOWIN,C' '              LOW TRACE ADDRESS SPECIFIED/Q
         BNE   *+8                     YES,BRANCH
         ST    1,LOWOUT                NO,START ADDRESS IS LOW TRACE AD
         LA    0,1                     ASSUMED LOOP COUNT IS 1
         CLI   LOOPIN,C' '             LOOP COUNT SPECIFIED/Q
         BE    *+8                     NO,TAKE ASSUMED VALUE
         LH    0,LOOPOUT               PUT LOOP COUNT INTO REGISTER 0
         CLI   INSTIN,C' '             INSTRUCTION COUNT SPECIFIED/Q
         BNE   *+10                    YES,BRANCH
         MVC   INSTOUT(2),SETBR-4      NO,ASSUMED VALUE IS 512
         MVC   PH(8),STNAME            GET MODULE NAME
         MVC   INST(34),INSTOUT        SHIFT PARAMETERS DOWN
         OC    LFL12,FLAG1OUT          PUT FLAG BYTES IN SNAP LIST
         MVC   REG(52),20(2)           PUT REG 0-12 INTO REG
         ST    2,REG+52                PUT REG 13 INTO REG
         MVC   REG+56(8),12(2)         PUT REG 14-15 INTO REG
         EX    0,STORAGE-8             CLEAR PRINT AREA
         LR    5,4                     SAVE CONDITION CODE
START    LA    1,0(1)                  CLEAR HIGH BYTE
         ST    1,CADR                  STORE CURRENT ADDRESS REGISTER
         MVI   BRNT,X'00'              CLEAR BRNT
         MVC   INS(6),0(1)             GET USER INSTRUCTION
KOD      LA    10,TAB                  SET REG 10 TO PROCESSING TABLE
         SR    9,9                     CLEAR REGISTER 9
         BAL   12,COMP                 GET POINTER BYTE
         SRDL  8,4                     GET PROCESSING TABLE POINTER
         SLL   8,2                     GET PROCESSING TABLE DISPLACEMNT
         LA    10,PRCTABLE-1(8)        POINT TO PROCESSING STRING
         SRL   9,26                    GET PRINT TABLE DISPLACEMENT
         STC   9,SVDISP                SAVE IT
         LA    8,SETBR                 SET REG 8 TO SET BRCH SWCH RTN
         LA    11,4                    SET REGISTER 11 TO NO OF ROUTINS
LABH     LA    10,1(10)                SET REGISTER 10 TO ROUTINE NO.
         SR    6,6                     CLEAR REGISTER 6
         IC    6,0(10)                 PUT ROUTINE NO. INTO REG 6
         LTR   6,6                     END OF PROCESSING STRING/Q
         BZ    PRINTRTN                YES,BRANCH TO PRINT ROUTINE
         AR    6,6                     GET ROUTINE DISPLACEMENT
         BAL   9,SUB1-2(6)             GO TO THE ROUTINE
         BCT   11,LABH                 4 ROUTINES ENTERED/Q. NO,BRANCH
         B     PRINTRTN                BRANCH TO THE PRINT ROUTINE
SUB1     SR    12,12                   CLEAR REGISTER 12
         IC    12,INS+1                GET SECOND BYTE OF INSTRUCTION
         SRL   12,4                    REMOVE BITS 4-7
         SLL   12,2                    GET TO REG DISPLCEMNT IN REG STR
         L     2,REG(12)               PICK UP USER REGISTER
         BR    9                       RETURN TO PROCESSING ROUTINE
SUB2     IC    13,INS+1                GET SECOND BYTE OF INSTRUCTION
         SLL   13,28                   REMOVE BITS 0-3
         SRL   13,26                   GET FROM REG DISPLCMNT IN REG ST
         L     15,REG(13)              PICK UP USER REGISTER
         BR    9                       RETURN TO PROCESSING ROUTINE
BD2      LH    13,INS+2                GET BASE/DISPLACEMENT
BD       SR    12,12                   CLEAR REGISTER 12
         SLL   13,16                   REMOVE POSSIBLE ONE BITS
         SLDL  12,4                    PUT BASE IN REGISTER 12
         SRL   13,20                   MOVE DISPLACEMENT BACK
         LR    14,13                   PUT IT INTO REGISTER 14
         LTR   12,12                   BASE REGISTER ZERO/Q
         BCR   8,9                     YES,EXIT
         SLL   12,2                    GET USER REGISTER DISPLACEMENT
         L     12,REG(12)              GET USER REGISTER
         AR    14,12                   ADD DISPLACEMENT TO BASE
         LA    14,0(14)                CLEAR HIGH BYTE
         BR    9                       RETURN TO PROCESSING ROUTINE
XBD      LR    3,9                     STORE REGISTER 9
         BAL   9,SUB2                  GET INDEX REGISTER,IF ANY
         LA    15,0(15)                CLEAR HIGH BYTE
         AR    15,14                   ADD B/D TO INDEX REGISTER
         LTR   13,13                   INDEX REGISTER ZERO/Q
         BCR   7,3                     NO,BRANCH
         LR    15,14                   EFFECTIVE ADDRESS IS B/D ONLY
         BR    3                       RETURN TO PROCESSING ROUTINE
FLRR     STM   0,1,ST01                SAVE REGISTERS 0 AND 1
         LA    7,INSTAB                PUT INSTAB ADDR INTO REGISTER 7
CLC      CLC   INS(2),0(7)             SVC FOUND/Q
         BE    LOAD                    YES - XCTL,LINK,ATTACH
         LA    7,2(7)                  NO,LOOK AT NEXT ENTRY
         BCT   11,CLC                  TEST AGAIN
         LM    0,3,REG                 SET UP USER REGISTERS 0-3
         CLC   INS(2),TAB+6            SVC 0 OR SVC 1/Q
         BNH   TSTWT                   YES,BRANCH
         SPM   5                       SET THE CONDITION CODE
         STM   5,3,PRNTAREA            SAVE REGISTERS 5-3
         LM    5,15,REG+20             GET USER REGISTERS 5-15
EXINS    EX    0,INS                   EXECUTE FL/PT RR INST OR SVC
         STM   0,3,REG                 RESTORE USER REGISTERS 0-3
         STM   5,15,REG+20             RESTORE USER REGISTERS 5-15
         LM    5,3,PRNTAREA            RESTORE TRACE REGISTERS 5-3
         BALR  5,0                     SAVE THE CONDITION CODE
         EX    0,STORAGE-8             CLEAR PRINT AREA
FLRR2    LM    0,1,ST01                RESTORE REGISTERS 0 AND 1
         BR    9                       RETURN TO PROCESSING ROUTINE
GETCCW   L     12,16(1)                GET CCW ADDRESS
         ST    12,STORE                STORE INITIAL CCW ADDRESS
UNPK     LA    6,PRNTAREA+54           SET UP OUTPUT REGISTER
         LR    7,12                    SET SOURCE REGISTER TO CCW
         LA    8,8                     SET LENGTH REGISTER TO 8
         LA    11,1                    SET REG 11 TO 1 TO END LOOP
         BAL   10,UNPACK               UNPACK CCW
         ST    12,STORE+4              STORE THE CCW ADDRESS
         MVC   PRNTAREA+38(3),PRTTABLE+5 MOVE /CCW/ TO PRINT AREA
         LA    8,3                     SET LENGTH REGISTER TO 3
         LA    7,STORE+5               SET SOURCE REG TO CCW ADDRESS
         LA    6,PRNTAREA+43           SET UP OUTPUT REGISTER
         BAL   10,UNPACK               UNPACK CCW ADDRESS
         BAL   10,EXCP                 PRINT CCW
         CLI   0(12),X'08'             TIC/Q
         BE    TIC                     YES,GET NEXT CCW
         TM    4(12),X'C0'             DATA OR COMMAND CHAINING/Q
         BZ    *+12                    NO,BRANCH
LA12     LA    12,8(12)                SET REGISTER 12 TO NEXT CCW
         B     UNPK                    PRINT NEXT CCW
EXIO     SVC   0                       EXECUTE I/O
         LR    6,1                     SAVE IOB ADDRESS
         L     1,4(1)                  PUT ECB ADDRESS INTO REGISTER 1
         LA    0,1                     PUT 1 INTO REGISTER 0
         SVC   1                       WAIT FOR I/O COMPLETION
         L     7,0(12)                 PUT IOAREA ADDRESS IN REGISTER 7
         LH    12,6(12)                PUT CCW COUNT INTO REGISTER 12
         SH    12,14(6)                SUBTRACT RESIDUAL COUNT
         LA    2,50                    PUT 50 IN REGISTER 2
LA8      LR    8,2                     PUT 50 INTO REGISTER 8
         CR    12,8                    RECORD LENGTH GREATER THAN 50/Q
         BH    *+6                     NO,BRANCH
         LR    8,12                    PUT 50 INTO REGISTER 12
         LA    6,PRNTAREA              PUT PRINTAREA ADDRESS IN REG 6
         BAL   10,UNPACK               UNPACK 50 BYTES OF RECORD
         BAL   10,EXCP                 PRINT LINE
         SR    12,2                    RECORD LENGTH GREATER THAN 50/Q
         BP    LA8                     YES,PRINT SOME MORE
         B     FLRR2                   RESTORE REG 0 AND 1 AND EXIT
RR       MVC   EXRS2+1(2),SETBR-14     SET EXRS2 TO RR 2,4/NOPR 0
         B     *+10                    BRANCH TO THE RS INST TYPE RTN
FLRX     MVZ   EXRS2+1(1),INS+1        GET USER FLOATING POINT REGISTER
RS       L     3,REG+4(12)             GET TO REGISTER PLUS ONE
         MVC   EXRS2(1),INS            GET OPERATION CODE
         SPM   5                       SET THE CONDITION CODE
EXRS2    SRDL  2,0(15)                 EXECUTE RS OR RX INSTRUCTION
         MVC   EXRS2+1(2),PRTTABLE+10  RESET EXRS2 TO RX 2,0(4)
         ST    3,REG+4(12)             RESTORE TO REG PLUS ONE
         BAL   5,PRINTRTN-4            SAVE THE CONDITION CODE/RETURN
SI       MVC   EXSI(2),INS             GET OPERATION CODE AND IMM BYTE
         SPM   5                       SET THE CONDITION CODE
EXSI     TM    0(14),X'00'             EXECUTE SI INSTRUCTION
         BALR  5,9                     SAVE THE CONDITION CODE/RETURN
SS       MVC   EXSS(2),INS             GET OPERATION CODE AND LENGTH
         LR    2,14                    PUT B/D IN REG 2
         LR    3,9                     STORE REGISTER 9
         LH    13,INS+4                GET FROM FIELD B/D
         BAL   9,BD                    CALCULATE EFFECTIVE ADDRESS
         STM   1,2,SAVE                SAVE REGISTERS 1 AND 2
         LR    8,2                     STORE REGISTER 2
         LM    1,2,REG+4               GET USER REGISTERS 1 AND 2
         SPM   5                       SET THE CONDITION CODE
EXSS     MVC   0(1,8),0(14)            EXECUTE SS INSTRUCTION
         STM   1,2,REG+4               RESTORE USER REGS 1/2-TRT,EDMK
         LM    1,2,SAVE                RESTORE REGISTERS 1 AND 2
         BALR  5,3                     SAVE THE CONDITION CODE/RETURN
STM      L     10,0(14)                TEST IF ON FULLWORD BOUNDARY
         LA    10,MVC1                 GET MVC1 ADDRESS FOR STM
         CLI   INS,X'90'               STM/Q
         BE    *+8                     YES,SIMULATE THE INSTRUCTION
         LA    10,MVC2                 GET MVC2 ADDRESS
         LA    8,REG(12)               GET ADDRESS OF FIRST USER REG
         LR    15,14                   SAVE STORAGE ADDR FOR PRINTING
         CR    12,13                   HIGHER THAN SECOND REGISTER/Q
         BH    SPLIT                   YES,TAKE X-15 THEN 0-Y
         SR    13,12                   FIND LENGTH OF LM OR STM
ST2      LA    13,3(13)                ADD 3 TO REGISTER 13
         EX    13,0(10)                SIMULATE LM OR STM
         BR    9                       RETURN TO PROCESSING ROUTINE
MVC1     MVC   0(1,14),0(8)            SIMULATE STM
MVC2     MVC   0(1,8),0(14)            SIMULATE LM
SPLIT    LA    7,63                    SET REGISTER 7 TO LENGTH OF REGS
         SR    7,12                    CALCULATE X-15 LENGTH
         EX    7,0(10)                 SIMULATE STM OR LM
         AR    7,11                    ADD 1 BACK TO REGISTER 7
         SR    8,12                    SET REG 8 TO ADDR OF USER REG 0
         BXH   14,7,ST2                UPDATE STORAGE ADDR/FINISH OP
BBR      TM    BRNT,X'10'              EXECUTED BRANCH/Q
         BO    SAVE8                   YES,INST ADDR ALREADY UPDATED
         TM    INS,X'C0'               BC,BCT,BAL,BXH OR BXLE INST/Q
         BZ    *+8                     NO,REGISTER 11 CONTAINS 2
         SLL   11,2                    SET REGISTER 11 TO 4
         AR    1,11                    CALCULATE NSI
SAVE8    LR    9,8                     SAVE REGISTER 8
         LR    7,12                    SAVE REGISTER 12
         LA    10,BTAB                 GET ADDRESS OF BRANCH TABLE
         BAL   12,COMP                 GET BRANCH ROUTINE DISPLACEMENT
         LR    12,7                    RESTORE REGISTER 12
         B     BAL(8)                  GO TO THE ROUTINE
BAL      LR    13,1                    FORCE BRANCH TO BCR15
BALR     LR    2,1                     GET LINK ADDRESS
         LR    6,5                     STORE WORD 2 OF CURRENT PSW
         SRL   6,24                    GET HIGH BYTE
         SLL   6,24                    MOVE IT BACK
         OR    2,6                     PUT IT INTO USER TO REGISTER
         B     *+8                     ENTER BCT ROUTINE
BCT      LR    13,1                    FORCE BRANCH TO BCR15
BCTR     BCTR  2,0                     SUB 1 FROM USER TO REGISTER
         LTR   13,13                   FROM REGISTER ZERO/Q
         BCR   8,9                     YES,EXIT
         LTR   2,2                     TO REGISTER ZERO/Q
         BCR   8,9                     YES,EXIT
BCR15    LR    1,15                    NO,GET BRANCH ADDRESS
         BR    9                       SET BRANCH SWITCH/RETURN
BCR      LTR   13,13                   FROM REGISTER ZERO/Q
         BCR   8,9                     YES,EXIT
BC       SPM   5                       SET THE CONDITION CODE
         MVZ   *+7(1),INS+1            PUT MASK BYTE IN NEXT INST
         B     BCR15                   BRANCH IF CONDITION FULFILLED
         BR    9                       SET BRANCH SWITCH/RETURN
BXLE     MVI   BH04+1,X'29'            SET BH04 TO BH
BXH      L     3,REG+4(13)             GET TO REGISTER PLUS ONE
         AR    2,15                    ADD FROM REG TO TO REG
         TM    INS+1,X'01'             FROM REGISTER ODD/Q
         BO    BH03                    YES,BRANCH
         CR    2,3                     COMPARE TO REG TO FROM PLUS ONE
BH04     BCR   12,9                    IF CONDITION FULFILLED,BRANCH
         LR    1,14                    GET BRANCH ADDRESS
         BR    9                       SET BRANCH SWITCH/RETURN
BH03     CR    2,15                    COMPARE TO REG TO FROM REGISTER
         B     BH04                    TEST RESULT
EX       MVC   INS(6),0(15)            GET EXECUTED INSTRUCTION
         CLI   INS,X'44'               EXECUTING AN EXECUTE/Q
         BE    EXINS                   YES,FORCE EXECUTE EXCEPTION
         OI    BRNT,X'10'              SET ON EX SWITCH
         LTR   12,12                   REGISTER ZERO/Q
         BNE   *+6                     NO,BRANCH
         SR    2,2                     YES,CLEAR REGISTER 2
         STC   2,*+5                   GET MASK BYTE
         OI    INS+1,0                 OR IT TO THE INSTRUCTION
         B     KOD                     EXECUTE INSTRUCTION
LOAD     LA    13,SAVEAREA             SET REGISTER 13 TO SAVE AREA
         L     10,REG+60               GET USER REGISTER 15
         LM    6,7,0(10)               GET ADDR OF MODULE NAME AND DCB
         LA    6,0(6)                  CLEAR HIGH ORDER BYTE
         CLI   INS+1,X'07'             XCTL/Q
         BNE   LNK                     NO,BRANCH
         LA    0,PH                    NO,GET CURRENT MODULE NAME
         SVC   9                       DELETE CURRENT MODULE
LNK      MVC   PH(8),0(6)              GET NEW MODULE NAME
         LR    0,6                     ADDRESS OF MODULE NAME IN REG 0
         LR    1,7                     DCB ADDRESS IN REG 1
         TM    0(10),X'80'             DE SPECIFIED/Q
         BZ    *+6                     NO,BRANCH
         LNR   0,0                     SIMULATE DE PARAMETER
         SVC   8                       LOAD NEW MODULE
         LR    1,0                     ENTRY POINT ADDR IN -EG 1
         L     0,ST01                  RESTORE REGISTER 0
         BR    8                       EXIT
TIC      CLC   1(3,12),STORE+1         HIGHER THAN INITIAL CCW/Q
         BL    TIC2                    NO,GO TO NEW CCW
         CLC   1(3,12),STORE+5         HIGHER THAN CURRENT CCW ADDR/Q
         BNH   LA12                    NO,GET FOLLOWING CCW
TIC2     L     12,0(12)                GET CCW POINTED TO
         B     UNPK-4                  MAKE THAT INITIAL CCW
TSTWT    CLC   INS(2),EXIO             SVC 0/Q
         BE    GETCCW                  YES,BRANCH
         B     FLRR2                   NO,WAIT - DO NOT EXECUTE
TAB      DC    X'042E'                 INVALID OPERATION CODES AND SPM
         DC    X'0610'                 BALR,BCTR
         DC    X'0712'                 BCR
         DC    X'0A01'                 SVC
         DC    X'1B23'                 LPR,LNR,LTR,LCR,NR,CLR,OR,XR,LR,
*                                      CR,AR,SR
         DC    X'1D24'                 MR,DR
         DC    X'1F23'                 ALR,SLR
         DC    X'3F05'                 FLOATING POINT RR INSTRUCTIONS
         DC    X'4036'                 STH
         DC    X'413E'                 LA
         DC    X'4336'                 STC,IC
         DC    X'4640'                 EX,BAL,BCT
         DC    X'4742'                 BC
         DC    X'5B36'                 LH,CH,AH,SH,MH,CVD,CVB,ST,N,CL,
*                                      O,X,L,C,A,S
         DC    X'5D37'                 M,D
         DC    X'5F36'                 AL,SL
         DC    X'7F58'                 FLOATING POINT RX INSTRUCTIONS
         DC    X'8501'                 INVALID OPERATION CODES
         DC    X'8769'                 BXH,BXLE
         DC    X'8F3A'                 SRL,SLL,SRA,SLA,SRDL,SLDL,SRDA,
*                                      SLDA
         DC    X'907B'                 STM
         DC    X'978C'                 TM,MVI,TS,NI,CLI,OI,XI
         DC    X'987B'                 LM
         DC    X'FF9D'                 SS INSTRUCTIONS
PRCTABLE DC    X'01320000'             0 - SUB1,FLRR
         DC    X'010BFA00'             1 - SUB1,SUB2,BBR
         DC    X'010BA000'             2 - SUB1,SUB2,RR
         DC    X'142801A8'             3 - BD2,XBD,SUB1,RS
         DC    X'142801FA'             4 - BD2,XBD,SUB1,BBR
         DC    X'142801A5'             5 - BD2,XBD,SUB1,FLRX
         DC    X'14010BFA'             6 - BD2,SUB1,SUB2,BBR
         DC    X'14010BD5'             7 - BD2,SUB1,SUB2,STM
         DC    X'14B70000'             8 - BD2,SI
         DC    X'14BE0000'             9 - BD2,SS
PRTTABLE DC    X'02810000'             0
         DC    X'00C3C3E6'             1 - AND /CCW/ CONSTANT
         DC    X'810020F0'             2 - AND /20F0/ CONSTANT
         DC    X'028F0000'             3
         DC    X'02438F00'             4
         DC    X'10900000'             5
         DC    X'028FFF00'             6
         DC    X'02438FFF'             7
         DC    X'108FFF00'             8
         DC    X'024F83C1'             9
         DC    X'02438E00'             A
         DC    X'0F202F07'             B - AND /2F07/ CONSTANT
         DC    X'0E7E0000'             C
         DC    X'02728EFE'             D
         DC    X'0200C5E7'             E - AND /EX/ CONSTANT
SETBR    OI    BRNT,X'01'              SET ON BRANCH SWITCH
         MVI   BH04+1,X'C9'            RESET BH04 TO BNH
         ST    2,REG(12)               RESTORE USER TO REGISTER
PRINTRTN SR    7,7                     CLEAR REGISTER 7
         IC    7,INS                   GET CURRENT INSTRUCTION
         SRL   7,6                     GET BITS 0-1
         LA    6,START                 SET REG 6 TO START OF PROC. RTN
         SR    8,8                     CLEAR REGISTER 8
         IC    8,TABLEL(7)             GET LENGTH OF INSTRUCTION
         TM    BRNT,X'11'              BRANCH OR EX INSTRUCTION/Q
         BNE   *+6                     YES,CURRENT ADDRESS UPDATED
         AR    1,8                     UPDATE CURRENT ADDRESS
         LM    9,11,LOW                GET TRACE LOW/HIGH LIMITS/INS AD
         CR    9,11                    REACHED LOW LIMIT YET/Q
BCR26    BCR   2,6                     NO,GET NEXT INSTRUCTION
         NOP   CR911                   SET TO BRCH WHEN TRACING STARTS
         BCR   4,6                     PAST IT,BUT LOOP COUNT NOT YET 0
         BCTR  0,6                     EQUAL,BUT LOOP COUNT NOT YET 0
         MVI   *-7,X'F0'               MUST NOW TRACE IF WITHIN LIMITS
         LH    0,INST                  GET TRACE COUNTER
         CLI   HIGH,X'99'              HIGH TRACE LIMIT BLANK/Q
         BNE   *+16                    NO,BRANCH
         MVI   BCR26+1,X'00'           NOP BRANCH
         MVI   CR10+3,X'00'            NOP BRANCH
         MVI   BLCR10+1,X'70'          SET BRANCH TO BNE
CR911    CR    9,11                    RESTORE COMPARE CONDITION CODE
BLCR10   BL    CR10                    BRANCH IF PAST LOW TRACE LIMIT
         LR    7,1                     SAVE REGISTER 1
         LA    1,LIST                  SET REGISTER 1 TO SNAP LIST ADDR
SVC51    SVC   51                      PERFORM SNAP
         LR    1,7                     RESTORE REGISTER 1
CR10     CR    10,11                   PASSED UPPER TRACE LIMIT/Q
         BCR   4,6                     YES,STOP TRACING THIS LOOP
         TM    BRNT,X'01'              CURRENT INSTRUCTION A BRANCH/Q
         BCR   8,6                     NO,DO NOT TRACE THIS INSTRUCTION
PRINTST  LA    7,INS                   SET SOURCE REGISTER TO INS ADDR
         LA    6,PRNTAREA+14           SET UP OUTPUT REGISTER
         BAL   10,UNPACK               UNPACK INSTRUCTION
         LA    8,3                     SET LENGTH REGISTER TO 3
         L     7,CADR              GET ADDRESS OF INSTRUCTION
         S     7,EP                CONVERT TO DISPLACEMENT
         ST    7,CADR              RESTORE AMENDED ADDRESS
         LA    7,CADR+1                SET SOURCE REG TO CURRENT ADDR
         LA    6,PRNTAREA              SET UP OUTPUT REGISTER
         BAL   10,UNPACK               UNPACK INSTRUCTION ADDRESS
         L     7,CADR              GET DISPLACEMENT OF INSTRUCTION
         A     7,EP                ADD ENTRY POINT
         ST    7,CADR              PRESERVE INSTRUCTION ADDRESS
         LR    11,5                    STORE REGISTER 5
         SLL   11,2                    REMOVE ILC
         SRL   11,30                   REMOVE PM AND INSTRUCTION ADDR
         STC   11,PRNTAREA+118         MOVE THE CONDITION CODE TO PRINT
         OI    PRNTAREA+118,X'F0'      UNPACK IT
         IC    8,SVDISP                GET PRTTABLE DISPLACEMENT
         LA    11,PRTTABLE(8)          POINT TO PRINT STRING
         LA    9,4                     SET UP PRINT LOOP COUNT REGISTER
ANALYSE  SR    6,6                     CLEAR REGISTER 6
         IC    6,0(11)                 GET PRINT STRING ENTRY
         LTR   6,6                     ZERO/Q
         BZ    PRNTLINE                YES,END OF PRINT STRING
         SR    7,7                     NO,CLEAR REGISTER 7
         SRDL  6,6                     SHIFT BITS 2-7 OF PRINT BYTE
         SRL   7,22                    GET REGISTER NUMBER
         LA    8,4                     SET LENGTH REGISTER TO 4
         MVI   STD,X'50'               SET STD TO ST
         TM    0(11),X'30'             TEST BITS 2-3 OF PRINT BYTE
         BZ    STD-4                   IF 00,REGISTER
         BO    STORAGE                 IF 11,STORAGE CONTENTS
         TM    0(11),X'10'             01 OR 10/Q
         BZ    LSTM                    IF 01,LM OR STM INSTRUCTION
         IC    7,INS+1                 10,GET REGISTER BYTE FROM INS
         TM    0(11),X'80'             TO OR FROM REGISTER TO PRINT/Q
         BO    *+8                     IF FROM REGISTER,BRANCH
         SRL   7,4                     TO REGISTER,SO SHIFT IT 4 BITS
         SLL   7,4                     GET CORRECT REGISTER
         MVI   STD,X'60'               SET STD TO STD
         AR    8,8                     SET LENGTH REGISTER TO 8
         STC   7,*+5                   PUT REG INTO NEXT INSTRUCTION
STD      STD   0,STORE                 STORE ITS CONTENTS
         LA    7,STORE                 SET SOURCE REG TO FL/PT REG CONT
BALSET6  BAL   10,SET6                 SET UP OUTPUT REGISTER
         LA    11,1(11)                GET NEXT PRINT BYTE
         BCT   9,ANALYSE               PROCESS NEXT FIELD
PRNTLINE BAL   10,PRINT                END OF PRINT STRING,PRINT LINE
         BCT   0,START                 TRACE NEXT INSTRUCTION
         L     1,ABEND                 GET COMPLETION CODE
         SVC   13                      ABEND
LSTM     LA    7,REG                   SET SOURCE REGISTER TO REG STORE
         LA    11,2                    SET REGISTER 11 TO NO OF LINES
         LA    12,8                    SET REGISTER 12 TO 8
         LA    6,PRNTAREA+38           SET UP OUTPUT REGISTER
LOAD8    LA    8,4                     SET LENGTH REGISTER TO 4
         BAL   10,UNPACK               UNPACK REGISTER CONTENTS
         LA    6,1(6)                  PUT BLANK BETWEEN REGISTERS
         BCT   12,LOAD8                UNPACK NEXT REGISTER
         BAL   10,PRINT                8 REGISTERS PROCESSED,PRINT LINE
         BCT   11,LOAD8-8              PRINT NEXT LINE
         B     PRNTLINE+4              BOTH LINES PRINTED
SET6     IC    6,PRNTABLE(6)           GET PRINT AREA DISPLACEMENT
         LA    6,PRNTAREA(6)           ADD ADDRESS OF PRINTAREA
UNPACK   UNPK  0(3,6),0(2,7)           UNPACK ONE BYTE
         TR    0(2,6),TABLE-240        TRANSLATE THE RESULT
         LA    6,2(6)                  INCREMENT OUTPUT REGISTER
         LA    7,1(7)                  INCREMENT SOURCE REGISTER
         BCT   8,UNPACK                LOOP IF MORE TO UNPACK
         MVI   0(6),C' '               CLEAR UNWANTED SIGN POSITION
         BR    10                      RETURN TO PRINT ROUTINE
PRINT    TM    BRNT,X'10'              EX INSTRUCTION/Q
         BZ    EXCP                    NO,CONTINUE
         UNPK  PRNTAREA+11(3),LOAD-7(2) UNPACK EX MASK BYTE
         TR    PRNTAREA+11(2),TABLE-240 TRANSLATE THE RESULT
         MVI   PRNTAREA+13,C' '        CLEAR UNWANTED SIGN POSITION
         MVC   PRNTAREA+7(2),SETBR-2   MOVE /EX/ TO PRINT AREA
EXCP     STM   14,1,SV141              SAVE REGISTERS 14-1
         LA    13,SAVEAREA             SET REGISTER 13 TO TRACE SAVEARA
         WRITE DECBOUT,SF,DCBOUT,PRNTAREA,120 PRINT LINE
         CHECK DECBOUT                 WAIT FOR I/O COMPLETION
         LM    14,1,SV141              RESTORE REGISTERS 14-1
         XC    PRNTAREA(120),PRNTAREA  CLEAR PRINT AREA
         BR    10                      RETURN TO PRINT ROUTINE
STORAGE  IC    8,INS+1                 GET LENGTH BYTE
         LA    10,SET7                 SET REG 10 TO SET SOURCE REG RTN
         TM    INS,X'F0'               2 LENGTH FIELDS IN THIS INST/Q
         BO    LENGTH2                 YES,FIND THE ONE REQUIRED
         TM    INS,X'D0'               1 LENGTH FIELD IN THIS INST/Q
         BO    TSTLGTH                 YES,TEST IF OVER 16 BYTES
         LA    10,LGTHTAB              GET ADDRESS OF LENGTH TABLE
         BAL   12,COMP                 GET LENGTH
SET7     STC   7,*+6                   PUT REG NO IN NEXT INSTRUCTION
         LA    7,0                     SET SOURCE REG TO STORAGE ADDR
         LA    8,1(8)                  ADD 1 TO LENGTH REGISTER
         B     BALSET6                 SET UP OUTPUT REG AND PRINT LINE
TSTLGTH  CLI   INS+1,X'0F'             LENGTH GREATER THAN 16 BYTES/Q
         BCR   13,10                   NO,BRANCH
         LA    8,15                    YES,SET LENGTH TO 15 BYTES
         BR    10                      SET UP SOURCE REGISTER
LENGTH2  TM    0(11),X'80'             1ST LENGTH TO BE CONSIDERED/Q
         BZ    L1                      YES,BRANCH
         SLL   8,28                    NO,REMOVE 1ST LENGTH FIELD
         SRL   8,24                    MOVE REMAINDER PARTWAY BACK
L1       SRL   8,4                     REMOVE 2ND LENGTH FIELD
         BR    10                      SET UP SOURCE REGISTER
         LA    10,2(10)                GET NEXT TABLE ENTRY
COMP     CLC   INS(1),0(10)            IS INSTRUCTION IN THIS RANGE/Q
         BH    COMP-4                  NO,GET NEXT TABLE ENTRY
         SR    8,8                     CLEAR REGISTER 8
         IC    8,1(10)                 GET TARGET BYTE
         BR    12                      RETURN TO CALLING ROUTINE
BTAB     DC    X'0502061607244456450046144728863A8736'  BRANCH TABLE
TABLEL   DC    X'02040406'             USED TO CALCULATE INST LENGTH
LGTHTAB  DC    X'400143004C014F075F036F077F039700'  OP CODE/LENGTH-1
TABLE    DC    C'0123456789ABCDEF'     TRANSLATE TABLE
PRNTABLE DC    X'1C264953'             USED TO FIND PRINT AREA DISPLCMN
DCBIN    DCB   DDNAME=TRACEIN,DSORG=PS,MACRF=(R),DEVD=DA,RECFM=F,      X
               LRECL=73,BLKSIZE=73,BFTEK=S,BFALN=D
DCBOUT   DCB   DDNAME=TRACEOUT,DSORG=PS,MACRF=(W),DEVD=DA,RECFM=F,     X
               LRECL=120,BLKSIZE=120,BFTEK=S,BFALN=D
DCBOUT2  DCB   DSORG=PS,RECFM=VBA,MACRF=W,BLKSIZE=1632,LRECL=125,      X
               DDNAME=SNAPOUT
LIST     DC    X'0100'                 SNAP LIST-ID
LFL12    DC    X'8200'                           FLAGS
         DC    A(DCBOUT2)                        DCB ADDRESS
         DC    A(0)                              TCB ADDRESS
         DC    A(SNAP1)                          LIST ADDRESS
SAVEAREA DC    72X'0'                  TRACE SAVE AREA
EP       DS    F                   ADDRESS OF MODULE
ABEND    DC    X'80000004'             COMPLETION CODE
INSTAB   DC    X'0A060A070A2A'         LINK,XCTL,ATTACH CONSTANTS
INSTIN   EQU   STORER
LOWIN    EQU   STORER+4
HIGHIN   EQU   STORER+12
STNAME   EQU   STORER+20
LOOPIN   EQU   STORER+28
FLAG1IN  EQU   STORER+32
FLAG2IN  EQU   STORER+34
SNAP1IN  EQU   STORER+36
SNAP2IN  EQU   STORER+52
B        EQU   STORER+68
INSTOUT  EQU   STORER+72
LOWOUT   EQU   STORER+74
HIGHOUT  EQU   STORER+78
CADROUT  EQU   STORER+82
LOOPOUT  EQU   STORER+86
FLAG1OUT EQU   STORER+88
FLAG2OUT EQU   STORER+89
SNAP1OUT EQU   STORER+90
SNAP2OUT EQU   STORER+98
INST     EQU   STORER
LOW      EQU   STORER+2
HIGH     EQU   STORER+6
CADR     EQU   STORER+10
LOOP     EQU   STORER+14
FLAG1    EQU   STORER+16
FLAG2    EQU   STORER+17
SNAP1    EQU   STORER+18
SNAP2    EQU   STORER+26
INS      EQU   STORER+36
REG      EQU   STORER+42
SAVE     EQU   STORER+106
STORE    EQU   SAVE                    SCRATCH AREA
ST01     EQU   STORER+114
PH       EQU   STORER+122
PRNTAREA EQU   STORER+130
SV141    EQU   STORER+250
BRNT     EQU   STORER+266
SVDISP   EQU   STORER+267
         END   READCC
