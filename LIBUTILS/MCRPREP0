PREP     TITLE 'INTERRUPT HANDLER FOR PROLOGUE-EPILOGUE JOBS'
*
*        CODED BY JOHN R. EHRMAN, SLAC COMPUTATION GROUP, 9/9/69
*
*        VERSION TESTED UNDER RELEASE 16 OF OS/360.
*
*        THIS ROUTINE IS CALLED BY THE EXPANSION OF THE 'PROLOGUE'
*        MACRO-INSTRUCTION.  IT ISSUES A 'SPIE' TO TRAP PROGRAM
*        INTERRUPTIONS, AND PRINTS DIAGNOSTIC INFORMATION FOR UP TO
*        'MAXINTS' INTERRUPTIONS, EXCEPT THAT ANY INTERRUPTION WITH
*        CODE LOWER THAN 'INTUPPER' IS CONSIDERED FATAL.
*
*        ALL INPUT/OUTPUT IS HANDLED BY THE FORTRAN I/O PACKAGE.  NO
*        PROVISION IS MADE FOR CHANGING THE OUTPUT UNITS DYNAMICALLY.
*
         PRINT DATA
MCRPREP0 CSECT
         EXTRN $LAST
INTUPPER EQU   1             INTERRUPT CODES BIGGER THAN THIS ARE OK
MAXINTS  EQU   20            MAX NUMBER OF INTERRUPTS WE'LL LOOK AT
*
         USING *,15
         STM   14,2,SAVER    SAVE REGISTERS FOR SPIE CALL
         DROP  15
         BALR  2,0           ESTABLISH NEW BASE, BECAUSE SPIE WILL
         USING *,2           PROBABLY CHANGE R15 AS WELL AS OTHERS.
         MVC   COREADDR+1(3),17(13)    GET ADDRESS OF USER'S ENTRY PT.
*                            DON'T MOVE 4 BYTES BECAUSE THE HIGH-ORDER
*                            BYTE MAY NOT BE ZERO, WHICH CAN BE BAD.
         SPIE  MCRPREPI,((1,15))  GRAB OFF ALL INTERRUPTS
         ST    1,PICA        SAVE OLD PICA ADDRESS
         LM    14,2,SAVER    RESTORE CALLER'S REGISTERS
         B     4(0,14)       RETURN TO USER
         DROP  2
*
         USING *,15          ENTRY FROM SUPERVISOR HAS R15 SET
MCRPREPI STM   14,2,SAVER    SAVE REGS USED BY CONTROL PROGRAM
         STM   3,13,REGS+12  SAVE PROBLEM PROGRAM REGISTERS
         MVC   PSW(8),4(1)   MOVE IN PSW
         MVC   REGS+56(8),12(1)   GET R14 AND R15
         MVC   REGS(12),20(1)     GET R0-R2
         STD   0,FPR         SAVE FLOATING REGISTERS
         STD   2,FPR+8
         STD   4,FPR+16
         STD   6,FPR+24
         BALR  12,0
         USING *,12
         DROP  15
         MVI   PUNTSW,0      ASSUME ALL WILL GO WELL
*     THE FOLLOWING SIX INSTRUCTIONS SHOULD BE REMOVED FOR A MODEL 91
*     OR OTHER MACHINE ON WHICH MULTIPLE IMPRECISE INTERRUPTIONS OCCUR.
*     THEY PROVIDE PROTECTION FOR OTHER MACHINES AGAINST RANDOM ERRORS.
         CLI   PSW+3,INTUPPER     SEE IF CODE IS LOWER THAN LOWEST
         BC    2,*+8         JUMP IF NOT
         MVI   PUNTSW,1      OTHERWISE FLAG NO RETURN TO USER
         CLI   PSW+3,X'10'   SEE IF WE WENT HAYWIRE SOMEWHERE
         BC    4,*+8         JUMP IF IN RANGE
         MVI   PUNTSW,1      OTHERWISE SOMETHING'S WRONG, GET OUT
         L     15,VIB
         CNOP  0,4
         BAL   14,4(0,15)    WRITE FIRST LINE
         DC    A(6)          ON UNIT 6
         DC    A(FMT)
         BAL   14,12(0,15)   PRINT PSW
         DC    A(PSW)
         DC    AL1(4),AL3(2)
         BAL   14,8(0,15)    PRINT USER CODE ORIGIN
         DC    X'0400',S(COREADDR)
         BAL   14,12(0,15)   PRINT GENERAL REGISTERS
         DC    A(REGS)
         DC    AL1(4),AL3(16)
         BAL   14,12(0,15)   PRINT FLOATING REGISTERS
         DC    A(FPR)
         DC    AL1(4),AL3(8)
         BAL   14,16(0,15)   END WITH THAT
         TM    PUNTSW,1      SEE IF THE USER DID SOMETHING REALLY BAD
         BC    1,DUMPIT      JUMP IF YES
         L     1,INTCOUNT    CHECK HOW MANY ERRORS HE'S MADE SO FAR
         LA    1,1(0,1)      BUMP COUNT
         ST    1,INTCOUNT
         C     1,MAX         SEE IF TOO MANY
         BC    10,DUMPIT     JUMP IF YES
*        RETURN TO USER CODE
         LD    0,FPR         RESTORE FLOATING REGISTERS
         LD    2,FPR+8
         LD    4,FPR+16
         LD    6,FPR+24
         LM    14,2,SAVER    RESTORE CONTROL PROGRAM'S REGISTERS
         LM    3,13,REGS+12  RESTORE USER'S REGISTERS
         BR    14            RETURN TO USER VIA CONTROL PROGRAM
*
         CNOP  0,4
DUMPIT   BAL   14,4(0,15)    START DUMP
         DC    A(6)
         DC    A(DUMP)       INITIALIZE WRITE FOR DUMP OUTPUT
LOOP     BAL   14,8(0,15)    PRINT LOCATION
         DC    X'0400',S(COREADDR)
         BAL   14,12(0,15)   PRINT A LINE OF 8 WORDS
COREADDR DC    A(0)          ADDRESS OF CODE TO BE DUMPED
         DC    AL1(4),AL3(8)
         L     1,COREADDR
         LA    1,32(0,1)     BUMP ADDRESS BY 32
         ST    1,COREADDR
         C     1,LAST        SEE IF THAT'S ALL
         BC    4,LOOP
         BAL   14,16(0,15)   CLOSE WRITE LIST
         L     1,PICA        RESTORE OLD PICA ADDRESS
         SPIE  MF=(E,(1))
         PRINTOUT  BADNEWS,* LET PRINTOUT ROUTINE TERMINATE
*
BADNEWS  DC    C'PROGRAM EXECUTION TERMINATED DUE TO INTERRUPTION(S)'
DUMP     DC    X'021A',AL1(L'DUMPA)
DUMPA    DC    C'0CORE DUMP FOLLOWS, ADDRESSES IN FIRST COLUMN.'
         DC    X'1E04011802240618020608240A1C22'
PUNTSW   DC    X'0'
FMT      DC    X'021A',AL1(L'FMTA)
FMTA     DC    C'0PROGRAM INTERRUPTION, PSW='
         DC    X'060224081A09',C', ORIGIN=',X'24061E1A',AL1(L'FMTB)
FMTB     DC    C' GPR  0-7'
         DC    X'0608240A1E1A',AL1(L'FMTC)
FMTC     DC    C' GPR 8-15'
         DC    X'0608240A1E1A',AL1(L'FMTD)
FMTD     DC    C' FPR''S '
         DC    X'04041802060224091C1E22'
LAST     DC    A($LAST)
VIB      DC    V(IBCOM#)
INTCOUNT DC    F'0'
MAX      DC    A(MAXINTS)
PICA     DS    F
REGS     DS    16F
SAVER    DS    5F
PSW      DS    2F
FPR      DS    4D
         END
