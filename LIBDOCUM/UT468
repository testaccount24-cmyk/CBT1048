1************
 * UT468    *
 ************
01. PURPOSE
 ----------
0   THIS SUB-ROUTINE CONVERTS ON FIFTEEN-DIGIT PACKED
    DECIMAL FIELD FROM ANY CURRENCY TO ANY OTHER, AND
    MAY BE INVOKED BY BOTH COBOL AND RPG.
0   THIS SUB-ROUTINE IS WRITTEN IN ORDER TO STANDARDIZE
    THE PROBLEM OF ROUNDING AND NO DECIMALS CURRENCIES.
0   THE SUB-ROUTINE INVOKES THE UTILITY PROGRAM UT460
    FOR CONVERSION FACTORS AND SHORT CURRENCY NAMES.
0   THE DIFFERENCE BETWEEN UT460 AND UT468 IS THAT AN
    ADDITIONAL FIELD, TWELVE DIGITS PACKED DECIMAL, IS
    GENERATED WITH 2 DECIMALS EXCEPT FOR THE BF, LUX. FR.,
    AND ITALIAN LIRE, WHICH ARE ROUNDED TO THE UNIT (ALTHOUGH
    THE DECIMAL PLACES ARE STILL PRESENT, SO THE FIELD NEED NOT
    BE REDEFINED).
02. LIMITATION
 -------------
0   UT460 INVOKED BY UT468 CONTAINS AN INTERNAL TABLE OF
    CONVERSION FACTORS FROM CURRENCY TO U.S. DOLLARS.
    SINCE THIS IS SUBJECT TO CHANGE, IT IS ESSENTIAL THAT
    UT468 BE INVOKED DYNAMICALLY INSTEAD OF BEING LINK-EDITED
    WITH THE PROBLEM PROGRAM.
    (I.E. DYNAML/DYNAMO/DYNAMD SHOULD BE USED TO CALL THE
    SUB-ROUTINE FROM A COBOL PROGRAM, WHILE FOR RPG
    MINGL/MINGE/MINGD SHOULD BE USED).
1************
 * UT468    *
 ************
03. INPUT DATA
 -------------
0   NONE.
04. OUTPUT DATA
 --------------
0   NONE.
05. OPERATION
 ------------
0   IN A COBOL PROGRAM, UT 468 SHOULD BE DYNAMICALLY
    LOADED BY MEANS OF DYNAML, AND THEREAFTER SHOULD BE
    INVOKED BY CODING OF THE FORM.
0   ENTER LINKAGE
    ENTER "DYNAMO" USING     DATA-NAME-1,
                             DATA-NAME-2,
0   ENTER COBOL
0   WHERE DATA-NAME-1 IS AN ELEMENTARY ITEM OF THE
    FORM 77 UT 468 PICTURE X (8) VALUE "UT 468"
    AND DATA-NAME-2 IS A GROUP ITEM OF THE FORM :
    01   CONVERSION AREA.
0   03   POINTER-UT 468                PICTURE X.
    03   INPUT-CODE                    PICTURE XX.
    03   INPUT-VALUE                   PICTURE S9 (10) V9 (5)
                                       COMPUTATIONAL-3.
    03   OUTPUT-CODE                   PICTURE XX.
    03   OUTPUT-FULL-VALUE             PICTURE S9 (10) V9 (5)
                                       COMPUTATIONAL-3.
    03   OUTPUT-COMMERCIAL-            PICTURE S9 (10) V99
                VALUE                  COMPUTATIONAL-3.
    03   INPUT-CUR-NAME                PICTURE X (4)
    03   OUTPUT-CUR-NAME               PICTURE X (4)
    03   RETURN-CODE                   PICTURE X.
1************
 * UT468    *
 ************
0   THE FIELDS INPUT-CODE AND OUTPUT-CODE SHOULD CONTAIN
    A NUMERIC CURRENCY CODE IN THE RANGE 01 TO 99.
    (UT 468 WAS THE SAME CURRENCY CODES AND CONVERSION
    FACTORS AS UT 410).  THE FIELD RETURN-CODE CONTAINS
    A 1 IF CONVERSION IS SUCCESSFUL.  IF THE INPUT
    CURRENCY CODE IS INVALID OR SPECIFIES A CURRENCY
    FOR WHICH THERE IS NO CONVERSION FACTOR, RETURN-CODE
    IS SET TO 2.  IF THE OUTPUT CURRENCY CODE IS IN ERROR,
    RETURN-CODE IS SET TO 3.  IN THE EVENT THAT AN ERROR
    IS DETECTED IN EITHER OF THE CURRENCY CODES, THE
    OUTPUT VALUE IS SET TO ZERO.
0   NOTE
    ----
0   THE CONTENTS OF THE FIELD INPUT-VALUE ARE NOT
    VERIFIED.  IF THE FIELD DOES NOT CONTAIN A VALID
    PACKED-DECIMAL NUMBER, THE SUB-ROUTINE WILL ABEND.
0   RPG OPERATION
 ----------------
0   IF UT 468 IS CALLED BY AN RPG PROGRAM, IT IS NECESSARY
    TO DEFINE THE PARAMETER AREA IN A SERIES OF RLABLS,
    WITH THE FIRST FIELD NAMED FIELD2.  THE SUB-ROUTINE
    SHOULD BE DYNAMICALLY LOADED BY MINGL, AND THEN
    IT SHOULD BE INVOKED VIA MINGE.  AN EXAMPLE OF THE
    NECESSARY CODING IS ATTACHED.
1************
 * UT468    *
 ************
0    C                     RLABL          FIELD1  8        SUBROUTINE NAME
     C                     RLABL          FIELD2  1        SUB-RTN POINTER
     C                     RLABL          CURIN   2        INPUT CODE
     C                     RLABL          VALVIN 155       INPUT VALUE
     C                     RLABL          OUTCDE  2        OUTPUT CODE
     C                     RLABL          OUTFUL 155       OUTPUT VALUE 5D
     C                     RLABL          OUTCOM 102       OUTPUT VALUE 2D
     C                     RLABL          NAMEIN  4        INPUT CUR NAME
     C                     RLABL          NAMOUT  4        OUTPUT CUR NAME
     C                     RLABL          RETCDE  1        RETURN CODE
     C   20                GOTO PROCES                     *
     C                     SETON                     20     * FIRST TIME
     C                     MOVE 'UT468   'FIELD1            * DYNAMICALLY
     C                     EXIT MINGL                       * LOAD THE
     C           PROCES    TAG                             *  SUBROUTINE
1************
 * UT468    *
 ************
0    C                     Z-ADDINPUT     FIELD2           *  MOVE VALUES
     C                     MOVE CODE1     CURIN             * TO PARAMETER
     C                     MOVE CODE2     OUTCDE           *   AREA
     C                     EXIT MINGE                      CONVERT
     C           RETCDE    COMP '1'                      21*
     C           RETCDE    COMP '2'                      22 * DETERMINE
     C           RETCDE    COMP '3'                      23 * RETURN CODE
     C   21                GOTO CONVGO                      * AND TAKE
     C   22                GOTO ERRIN                       * NEC  ACTION
     C   23                GOTO ERROUT                     *
     C                     SETON                     H1    INVALID
     C                     GOTO END                        RETURN CODE
     C           CONVGO    TAG                             *  SAVE CONVERT
     C                     Z-ADDOUTFUL    XXXX   122H       * VALUES TO
     C                     Z-ADDOUTCOM    ZZZZ   122        * WORK FIELDS
     C                     GOTO PROCE2                     *
