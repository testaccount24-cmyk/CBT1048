1************
 * UT493    *
 ************
01) PURPOSE :
 ------------
0   THIS ROUTINE COMPARES A COMPLETE KEY WITH A SUPPLIED
    PARTIAL KEY AND DECIDES WHETHER THEY ARE EQUAL IN THE
    NON-BLANK PORTIONS OF THE PARTIAL KEY.
02) LIMITATIONS :
 ----------------
0   (1) THE KEYS SUPPLIED MUST BE THE SAME LENGTH AND MUST
        BE LESS THAN 256 BYTES LONG.
    (2) THE KEY LENGTH AND 'MUST BE BLANK' CHARACTER SUPPLIED
        THE FIRST TIME THE SUB-ROUTINE IS INVOKED CANNOT BE
        CHANGED ON SUBSEQUENT INVOCATIONS.
03) INPUT DATA :
 ----------------
0   NONE.
04) OUTPUT DATA :
 ----------------
0   NONE.
1************
 * UT493    *
 ************
05) OPERATION :
 ------------
0   AN EXAMPLE OF THE CODING REQUIRED TO CALL THE SUB-
    ROUTINE FROM A COBOL PROGRAM FOLLOWS.  ALTHOUGH THE
    DATA NAMES MAY BE CHANGED, THEIR SEQUENCE IS CRITICAL.
0   CALL 'UT493' USING       MASTKEY-493
                             PARTKEY-493
                             RETCODE-493
                             BLANKCHR-493
                             LENGTH-493
0   THE DATA NAMES ARE DEFINED AS :
0   01 MASTKEY-493           PIC X(23).
    01 PARTKEY-493           PIC X(23).
    01 RETCODE-493           PIC X.
    01 BLANKCHR-493          PIC X VALUE SPACE.
    01 LENGTH-493            PIC S999 VALUE 23 COMPUTATIONAL-3.
0   IN THIS EXAMPLE THE KEYS ARE 23 BYTES LONG AND NO SPECIAL
    'MUST BE BLANK' CHARACTER IS DEFINED.
    THE SUB-ROUTINE INSERTS INTO THE RETURN CODE BYTE
    (RETCODE-493 IN THE ABOVE EXAMPLE) A ONE BYTE CHARACTER
    CODE TO INDICATE THE RESULT OF THE COMPARE :
0   0                        - KEYS MATCH ON SUPPLIED FIELDS
    1                        - TEST KEY IS LOW IN COMPARED FIELDS
    2                        - TEST KEY IS HIGH IN COMPARED FIELDS
0   CARE MUST BE EXERCISED IN THE INTERPRETATION OF THE RETURN
    CODE AS IT ONLY APPLIES TO THE NON-BLANK PORTION OF THE
    PARTIAL KEY.
0   BECAUSE OF THE RESTRICTION (2) ABOVE, IT IS NOT NECESSARY TO
    SPECIFY THE 'MUST BE BLANK' CHARACTER OR THE LENGTH ON THE
    SECOND OR SUBSEQUENT CALL OF THE SUB-ROUTINE AND THEY WILL BE
    IGNORED IF THEY ARE SPECIFIED.
1************
 * UT493    *
 ************
05) OPERATION : (CONT'D)
  -----------
0   ASSEMBLER OPERATION :
    -------------------
0   THE PARAMETER LIST PASSED BY AN ASSEMBLER CALL SHOULD BE
    OF THE FOLLOWING FORMAT :
0   PARAMS    DSECT     PARAMETER LIST DESCRIPTION
    MASTKEY   DS   F    ADDRESS OF MASTER KEY
    TESTKEY   DS   F    ADDRESS OF KEY UNDER TEST
    RETCODE   DS   F    ADDRESS OF ONE BYTE RETURN CHARACTER
    *                   0 - KEYS MATCH
    *                   1 - TEST KEY IS LOW
    *                   2 - TEST KEY IS HIGH
    BLANKCHR  DS   F    ADDRESS OF 'MUST BE BLANK' CHARACTER
    LENGTH    DS   F    ADDRESS OF TWO BYTE PACKED LENGTH
0   RPG OPERATION :
    -------------
    IF UT493 IS CALLED BY RPG, IT IS NECESSARY TO DEFINE THE
    PARAMETER AREA IN A SERIES OF RLABLS, WITH THE FIELD NAMES
    AS SHOWN IN THE ATTACHED EXAMPLE.
    THE FIRST TIME RPG PASSES CONTROL TO THE SUB-ROUTINE, THE
    FIELD RESULT MUST CONTAIN R TO INDICATE THAT RPG IS THE
    CALLING LANGUAGE.
1************
 * UT493    *
 ************
0    C                     RLABL          MSTKEY256        MASTER KEY
     C                     RLABL          TSTKEY256        TEST KEY
     C                     RLABL          RESULT  7        RESULT
     C                     RLABL          BLNKCH  7        MUST-BE-BLANK
     C                     RLABL          LENGTH  30       LENGTH OF KEYS
1************
 * UT493    *
 ************
0   REPORT UTILITY
0   EVERYBODY
0        ATTACHED IS A SCREED DESCRIBING THE PURPOSE AND METHOD
    OF USE OF GROPE, A SIMPLE GENERAL REPORTING PROGRAM.
    (WRITTEN BY THE AMAZING MR. FAYERS)
    THE CONCEPT IS STILL IN ITS INFANCY SO THERE IS NO POINT IN
    PREPARING A FULLY DETAILED ABSTRACT AS YET.  IF YOU HAVE ANY
    BRIGHT IDEAS ABOUT HOW IT COULD BE EXTENDED, LET ME KNOW,
    BUT BEAR IN MIND THAT THE CONCEPT OF GROPE IS THAT IT IS :
0             1. EASY TO UNDERSTAND.
0             2. EASY TO USE.
0             3. QUICK TO USE.
1************
 * UT493    *
 ************
01. INTRODUCTION
 ---------------
0        GROPE IS A SIMPLE GENERALISED REPORTING PROGRAM.  ITS PURPOSE
    IS TO PROVIDE A QUICK METHOD OF ACCESSING SOME OF THEMASS OF DATA
    THAT WE HOLD ON OUR FILES.  BECAUSE IT IS SIMPLE IT IS RESTRICTED IN
    ITS USE, BUT IT SHOULD FILL A GAP BETWEEN THE UNREADABLE SIMPLICITY
    OF UTL001 AND THE BELLS-AND-WHISTLES COMPLEXITY OF RPG.
0        IT WAS ORIGINALLY DESIGNED TO PROVIDE BASIC NUMBERS TO SOME OF
    OUR MORE NUMERATE USERS, BUT IT IS ALSO USEFUL FOR CHECKING TEST RESULTS,
    MAINTENANCE PROBLEMS ETC.
02. FACILITIES
 -------------
0        GROPE CAN REPORT ON SELECTED RECORDS FROM A SEQUENTIAL FILE.
    IT CAN PRINT UP TO 4 VALUE FIELDS, 1 NAME FIELD AND 4 IDENTIFYING FIELDS
    FROM EACH RECORD.  SUB - TOTALS CAN BE PRINTED ON CHANGE OF A KEY
    IF REQUIRED.  UP TO 3 LINES OF HEADING CAN BE PRINTED AT THE TOP OF
    EACH PAGE, TOGETHER WITH RUN DATE AND PAGE NUMBER.
03. INPUT PARAMETERS
 -------------------
         REPORT CONTENT AND FORMAT ARE SPECIFIED BY SUPPLYING UP TO 5 TYPES
    OF CONTROL CARD.  DETAILED CARD LAYOUT IS SHOWN BY THE FORMS IN
    APPENDIX A.
0        3.1. TITLE CARDS - GR01
         -----------------------
0                  USE UP TO 5 CARDS.  THE FIRST CARD PROVIDES THE CENTRE
              OF THE TOP HEADING LINE.  THE SECOND AND THIRD WILL GENERATE
              THE SECOND HEADING LINE, AND THE FOURTH AND FIFTH CARDS WILL
              SIMILARLY COMBINE TO MAKE THE FIFTH HEADING LINE.  BEFORE-
              SPACING ON THE SECOND AND THIRD LINES CAN BE SPECIFIED.
0        3.2. SELECTION CARDS - GR02
         ---------------------------
0                  UP TO 20 CARDS.  USED TO SELECT RECORDS FOR FURTHER
              PROCESSING AND REPORTING.  SELECTION IS BASED ON MEETING
              A SPECIFIED RELATIONSHIP BETWEEN A SPECIFIED FIELD AND A
              SPECIFIED CONSTANT.  UP TO 4 FIELD-CONSTANT RELATIONSHIPS
              CAN BE SPECIFIED IN EACH CARD, AND THE RELATIONSHIPS ARE
              TREATED AS AND CONDITIONS.
0                  THE RELATIONSHIP BETWEEN EACH CARD IS OR.  SEE APPENDIX B
              FOR EXAMPLE.
              CARD FORMAT IS : -
0             COLS. 1-4      'GR02'
1************
 * UT493    *
 ************
01) PURPOSE :
 ----------
0   TO PROVIDE A MEANS OF TRANSFERRING GROUPS OF MEMBERS,
    WITH A COMMON ROOT, BETWEEN PARTITIONED DATA SETS.
    INDIVIDUAL MEMBERS MAY ALSO BE COPIED.  A LIST OF MEMBERS
    BEING TRANSFERRED IS NORMALLY PRINTED, BUT MAY BE SUPRESSED
    ON REQUEST.
02) LIMITATIONS :
 --------------
0   (1)  CONTROL CARD CHECKING IS LIMITED.  ERRORS MAY CAUSE
         UNPREDICTABLE RESULTS.
    (2)  A MAXIMUM OF FORTY NAMES, GROUP AND MEMBER, ARE
         PERMITTED PER EXECUTION.
    (3)  THE KEYWORD 'ALL' MAY NOT BE USED IN A GROUP STATEMENT
         TO SELECT MEMBERS FOR PROCESSING.
03) INPUT :
 --------
0   (1)  DDNAME SYSUT1.  A PARTITIONED DATA SET CONTAINING
         MEMBERS TO BE COPIED.
    (2)  DDNAME SYSIN.  CONTROL CARD DATA SET.
04) OUTPUT :
 ---------
0   (1)  DDNAME SYSPRINT.  GENERAL MESSAGE DATA SET.
    (2)  DDNAME SYSOUT.  LISTING OF MEMBERS TO BE COPIED.
    (3)  DDNAME SYSUT2.  TARGET DATA SET FOR MEMBERS TO BE
         COPIED.
1************
 * UT493    *
 ************
05) OPERATION :
 ------------
0   THIS PROGRAM ACTS AS A CONTROL PROGRAM FOR THE IEBPTPCH
    AND IEBCOPY UTILITY PROGRAMS.  CONTROL DATA SETS ARE
    CONSTRUCTED FROM SELECTION CARDS SUBMITTED BY THE USER
    AND UTILITY STATEMENTS WITHIN THE PROGRAM.
0   CONTROL CARDS :
    -------------
0   (1)  COPYING A GROUP OF MEMBERS.
         GROUP NAME=AAAAAAAA ,RKP=N
         WHERE AAAAAAAA IS A 1-8 CHARACTER KEYWORD THAT DESCRIBES
         THE COMMON ELEMENT IN THE MEMBER NAMES TO BE COPIED /
         LISTED.
         N IS A ONE POSITION NUMERIC DIGIT OF VALUE BETWEEN 0
         AND 7 THAT INDICATES THE POSITION OF THE KEYWORD RELA-
         TIVE TO THE START OF THE MEMBER NAMES.
         IF THIS KEYWORD IS THE FIRST FEW POSITIONS OF THE
         MEMBER NAMES (RKP=0), THEN RKP NEED NOT BE CODED.
0   (2)  COPYING THE WHOLE DATA SET.  CODE ALL ON AN OTHERWISE
         BLANK CARD.
0   (3)  COPYING INDIVIDUAL MEMBERS.
         MEMBER NAME=AAAAAAAA
         AAAAAAAA IS A 1 TO 8 CHARACTER MEMBER NAME THAT IS CONTAINED
         IN THE SOURCE (SYSUT1) DATA SET.
         GROUP AND MEMBER STATEMENTS MAY BE INTERMIXED IN ONE
         RUN, BUT INCLUDING 'ALL' WILL  NULLIFY ANY OTHER
         SELECTION STATEMENTS.
         THE LISTING OF MEMBERS MAY BE MODIFIED :
         - BY THE USE OF CERTAIN IEBPTPCH CONTROL
           CARDS ;  SEE THE APPLICATION MANUAL FOR UT445 FOR
           DETAILS. (E.G. IF REQUIRED, MEMBERS COULD ALSO BE
           PUNCHED BEFORE COPYING).
1************
 * UT493    *
 ************
05) OPERATION : (CONT'D)
 ------------
0   JCL :
    ---
0   THE JOB CONTROL STATEMENTS REQUIRED ARE, AS FOLLOWS :
0                                                LIST,COPY
    //STEPNAME   EXEC   PGM=UT480(,PARM='        ---------
                                               NOLIST,NOCOPY
0   //SYSPRINT     DD   SYSOUT=A
    //SYSOUT       DD   SYSOUT=A
    //SYSUT1       DD   INPUT DATA SET ATTRIBUTES
    //SYSUT2       DD   OUTPUT DATA SET ATTRIBUTES
    //SYSUT3       DD   UNIT=SYSDA,SPACE=(CYL,(1,1))
    //SYSUT4       DD   UNIT=SYSDA,SPACE=(CYL,(1,1))
    //SYSUT5       DD   UNIT=SYSDA,SPACE=(CYL,(1,1))
    //SYSUT6       DD   UNIT=SYSDA,SPACE=(CYL,(1,1))
0   AT THE BRUSSELS COMPUTER CENTRE A PROCEDURE HAS BEEN
    SET-UP ALSO NAMED UT480.
    TO USE THIS CODE THE FOLLOWING :
0                                      LIST,COPY
    //STEPNAME   EXEC   UT480(,PARM='  ---------
                                     NOLIST,NOCOPY
                                     -------------
0   //SYSUT1       DD   INPUT DATA SET ATTRIBUTES
    //SYSUT2       DD   OUTPUT DATA SET ATTRIBUTES
