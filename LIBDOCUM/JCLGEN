1************
 * JCLGEN   *
 ************
0JCLGEN
 ------
01. INTRODUCTION
 ---------------
0   JCLGEN WAS CONCEIVED AS AN EXERCISE IN MAKING THE COMPUTER
    PRODUCE ITS OWN JCL.  IT WAS NOTICED THAT THE MAJORITY OF
    JCL CONTAINS A LARGE AMOUNT OF REPETITION OF KEYWORDS AND
    EVEN LARGER SLICES OF "COMPLETE" CODING.
0   BY DESIGNING A CODING SHEET WHERE THE POSITION ON THE PAGE
    WOULD INFER THE KEYWORD, AND BY ADOPTING A SET OF STANDARDS
    WHICH WOULD NOT LEAVE MUCH VARIABLE DATA TO BE ENTERED, IT
    WAS POSSIBLE TO GREATLY REDUCE THE AMOUNT OF PROGRAMMER
    CODING NECESSARY.
0   SECTION (II) GIVES A SUMMARY OF THE STANDARDS USED, AND
    SECTION (III) A DESCRIPTION OF THE CODING SHEET.  THE FINAL
    SECTIONS SHOW HOW JCLGEN IS USED.
1************
 * JCLGEN   *
 ************
02. JOB CONTROL LANGUAGE STANDARDS
 ---------------------------------
0   A)   GENERAL
         -------
0        JCLGEN HAS BEEN WRITTEN TO GENERATE JCL CONFORMING TO  CER-
         TAIN STANDARDS, THESE STANDARDS BEING AIMED AT MAKING ANY
         JCL CARDS AND DATA-SETS EASILY IDENTIFIABLE AND GIVING THE
         ABILITY TO TIE THEM BACK TO THE APPLICATION WHICH PRODUCED
         THEM.
0        THIS IS PERFORMED BY MAKING USE OF TWO IDENTIFIERS:
0        I)   THE SYSTEM ABBREVIATION, E.G. IMAP, SAM, ACCREC
0        II)  THE PROJECT NUMBER - THIS IS LIMITED TO THE LETTER T
              PLUS THE FIRST 3 DIGITS OF THE USUAL PROJECT NUMBER,
              I.E. T-123-01 BECOMES T123.
              T IS THE PREFIX FOR EUROPEAN PROJECT NUMBERS AND
              COULD BE REPLACED WITH ANY REQUIRED LETTER.
0        THESE IDENTIFIERS ARE INCORPORATED INTO THE DATA-SET AND
         LIBRARY NAMES AS SHOWN BELOW.
0   B)   LIBRARIES
         ---------
0        EACH SYSTEM WILL HAVE THREE LIBRARIES ASSOCIATED WITH IT,
         THE PROGRAM LIBRARY, A LIBRARY TO HOLD CONTROL CARDS FOR
         UTILITIES AND A LIBRARY TO HOLD ANY TABLES THAT MAY BE
         USED IN THE SYSTEM.  THESE LIBRARIES WILL BE CALLED
         SYSTEM.PROGLIB, SYSTEM.CONTRLIB AND SYSTEM.TABLIB WHERE THE
         WORD SYSTEM IS REPLACED BY THE SYSTEM ABBREVIATION
         MENTIONED ABOVE.
         EXAMPLES COULD BE: IMAP.PROGLIB, SAM.CONTRLIB OR
         ACCREC.TABLIB.
1************
 * JCLGEN   *
 ************
0   C)   CARD BY CARD
         ------------
0        1.   THE JOB CARD
              ------------
0             THE NORMAL STANDARDS ARE FOLLOWED HERE.  ONE POINT
              TO NOTE IS THAT THE FIRST FIELD OF THE ACCOUNTING
              INFORMATION IS MADE UP OF THE THREE DIGITS USED IN
              THE PROJECT NUMBER ABOVE PLUS AN ADDITIONAL ZERO.
0        2.   THE JOBLIB CARD
              ---------------
0             THIS WILL ALWAYS REFER TO SYSTEM.PROGLIB.
0        3.   THE EXEC CARD
              -------------
0             THE STEP NAME WILL BE OF THE FORM "STEP" PLUS A TWO
              DIGIT STEP NUMBER PLUS THE LETTER "R" IF THAT STEP
              IS A RE-RUN START POINT.
0             E.G.:          // STEP01R
                             // STEP02
                             // STEP03
                             // STEP04R
0             A "SYSUDUMP" CARD WILL ALWAYS IMMEDIATELY FOLLOW AN
              EXEC CARD.
0        4.   THE DD CARD
              -----------
0             THE DSNAME FOR TEMPORARY DATA-SETS WILL BE OF THE
              FORM "&&" PLUS THE STEP NAME OF THE CREATING STEP
              PLUS AN ALPHA IDENTIFIER.  THE LETTER "R" IN SOME
              JOB STEP NAMES IS IGNORED IN THE CONTEXT.
              E.G.  THE SECOND TEMPORARY DATA-SET CREATED IN
                    STEP02R WOULD BE GIVEN THE NAME &&STEP02B.
1************
 * JCLGEN   *
 ************
0        THE DSNAME FOR PERMANENT DATA-SETS WILL BE IN THE
         FORM SYSTEM.PROJECTFNNN WHERE THE "N"S ARE A THREE
         DIGIT IDENTIFIER.
0        EXAMPLES COULD BE:   IMAP.T123F010
                        OR  ACCREC.T567F001(0)
0        AT FIRST SIGHT THIS MIGHT SEEM A CLUMSY NAME, BUT
         USING JCLGEN TO GENERATE THE NAME REQUIRES ONLY THE
         THREE DIGIT IDENTIFIER AS WILL BE SHOWN LATER.
0        THE DISP PARAMETER WILL INCORPORATE THE THIRD POSI-
         TIONAL PARAMETER WHERE THIS IS ADVISABLE.
0        THE UNIT PARAMETER WILL BE SYSDA FOR TEMPORARY DATA-
         SETS, 2314 FOR PERMANENT DATA-SETS OR TAPE.
0        THE SPACE PARAMETER WILL ALWAYS USE THE RLSE OPTION.
0        OTHER IMPLIED STANDARDS WILL BE COVERED IN THE SECTION
         SHOWING USE OF THE JCLGEN CODING SHEET.
0   4.   SUMMARY
         -------
0        THE JCL IS EXPECTED TO BE WRITTEN TO QUITE A RIGOROUS
         STANDARD, BUT THIS IS DESIGNED SO THAT A MINIMUM OF
         INFORMATION NEED BE GIVEN IN THE JCLGEN CODING SHEETS.
1************
 * JCLGEN   *
 ************
03. JCLGEN CODING
 ----------------
0   A)   GENERAL
         -------
0        THE CODING SHEETS ARE DESIGNED SO THAT THERE MUST BE ONE
         FILLED IN PER STEP.
         DATA WHICH REMAINS CONSTANT FOR THE SYSTEM IS ENTERED
         ONLY ONCE ON THE VERY FIRST CARD AND NEED NOT BE REPEATED.
         SEQUENCE NUMBERING IS INCLUDED ONLY FOR THE PROGRAMMER'S
         CONVENIENCE.
         JCLGEN REMOVES EMBEDDED BLANKS FROM ALL NAME FIELDS EXCEPT
         FOR DDNAME.
0   B)   CARD BY CARD AND COLUMN BY COLUMN
         ---------------------------------
0        1.   THE "C" CARD (1)
              ----------------
0             USED TO ENTER THE CONSTANT DATA INTO THE PROGRAM.
              IT MUST BE THE FIRST CARD AND NEED ONLY BE ENTERED
              ONCE.  IT IS POSSIBLE, HOWEVER, TO ENTER ANOTHER "C"
              CARD LATER IN THE INPUT CARD STREAM AND OVER-WRITE
              THE PREVIOUS CONSTANTS.
0        1.1  PROGRAMMER'S NAME (7-14)
              AN ALPHAMERIC FIELD OF FROM ONE TO EIGHT CHARACTERS,
              LEFT OR RIGHT ALIGNED.
0        1.2  SYSTEM ABBREVIATION (15-20)
              AN ALPHAMERIC FIELDOF FROM ONE TO SIX CHARACTERS,
              LEFT OR RIGHT ALIGNED.
1************
 * JCLGEN   *
 ************
0        1.3  PROJECT NUMBER (21-24)
              THIS IS THE LETTER "T" FOLLOWED BY THE THREE DIGIT
              PROJECT IDENTIFICATION NUMBER.
0        1.4  TEST (25)
              "T" IN THIS FIELD WILL GENERATE THE CODE "0001" IN
              THE SECOND POSITIONAL PARAMETER OF THE ACCOUNTING
              INFORMATION IN EACH JOB CARD.
              OTHERWISE, BY DEFAULT, THE CODE "0009" IS CREATED.
0        2.   THE "J" CARD (1)
              ----------------
0             CAUSES A JOB AND A JOBLIB CARD TO BE CREATED.
0        2.1  CLASS (2)
              CAUSES THE PARAMETER "CLASS=N" TO APPEAR ON THE JOB
              CARD; N CAN BE ANY CHARACTER.
0        2.2  COND (3)
              "C" IN THIS COLUMN WILL CAUSE THE PARAMETER "COND=
              (16, EQ)" TO APPEAR ON THE JOB CARD.  THIS IS NE-
              CESSARY IF THE JOB INCLUDES ANY UTILITIES WHICH WILL
              GENERATE A CONDITION CODE OF 16 IF THEY CONTAIN
              CRITICAL ERRORS (IBM SORTS IN PARTICULAR).
0        2.3  UTLCODE (4)
              "U" WILL CAUSE A STEP 00 TO BE GENERATED IN THE FORM.
              // STEP00 EXEC PGM = UTLCODE, PARM = & STEP AND A COND
              TO BE ADDED TO EVERY EXEC CARD IN THE JOB AFTER THAT
              IN THE FORM
                         COND = (NN,LT, STEP00)
              WHERE NN IS THE STEP NUMBER
              (SEE APPENDIX FOR EXPLANATION)
1************
 * JCLGEN   *
 ************
0        2.4  JOB NUMBER (7-14)
              AN ALPHAMERIC FIELD OF FROM ONE TO EIGHT CHARACTERS,
              LEFT OR RIGHT ALIGNED.
0        3.   THE "P" CARD (1)
              ----------------
0             USED TO GENERATE THE EXEC CARD OR, IN THE CASE OF THE
              UTILITIES IEHPROGM AND SORT, WILL GENERATE THE MAJO-
              RITY OF THEIR CODING.
0        3.1  SORT OR IEHPROGM (2)
              "S" IN THIS COLUMN WILL GENERATE THE CODING FOR A SORT.
              "I" WILL GENERATE AN IEHPROGM.
              A BLANK MEANS A NORMAL EXEC CARD FOR AN APPLICATION
              PROGRAM.
0        3.2  STEP (3-4)
              THIS MUST BE THE TWO DIGIT STEP NUMBER, BOTH DIGITS
              MUST BE GIVEN, I.E. 01, 24.  IT IS OFTEN USEFUL TO USE
              ALTERNATE NUMBERS TO FACILITATE ADDITION OF NEW STEPS
              AT A LATER TIME.
0        3.3  R (5)
              AN ENTRY OF "R" IS MADE IN THIS COLUMN IF THIS IS A
              RERUN BOUNDARY STEP.  THE LETTER "R" IS TAGGED ONTO
              THE STEP NUMBER IN THIS CASE.
0        3.4  MODS (6)
              "M" IN THIS COLUMN (USED IN CONJUNCTION WITH AN "S"
              IN COLUMN 2) WILL GENERATE THE EXTRA STANDARD CODING
              NEEDED IN A SORT IF A SORTMODS IS USED.
1************
 * JCLGEN   *
 ************
0        3.5  PROGRAM (7-14)
              ONLY VALID IF THERE IS A BLANK IN COLUMN 2.  THIS IS
              THE PROGRAM NAME.  IT CAN BE LEFT OR RIGHT ALIGNED. A
              // SYSUDUMP DD SYSOUT = A
              CARD WILL BE AUTOMATICALLY GENERATED FOLLOWING THE
              EXEC CARD.
0        3.6  HOLDDUMP (15)
              AN ENTRY OF "L" IN THIS COLUMN WILL CAUSE THE SYSUDUMP
              BEING GENERATED ABOVE TO BECOME
              // SYSUDUMP DD SYSOUT = L
              (EUROPE USES THIS IN A TELEPROCESSING ENVIRONMENT TO
              ENSURE THAT ANY ABENDS ARE HELD AT THE CENTRAL PRO-
              CESSOR AND NOT TRANSMITTED TO THE REMOTES).
0        3.7  WORK AREA SIZES (16-17) (SORTS ONLY)
              TWO DIGIT NUMBER GIVING THE SIZE OF THE WORK AREAS
              TO BE USED DURING THE SORT (IN CYLINDERS).
              JCLGEN WILL GENERATE FOUR SORT WORK AREAS USING THIS
              VALUE FOR EACH AND ASKING FOR THE SPACE CONTIGU OUSLY.
              LEADING ZEROS ARE REQUIRED.
0        3.8  DSK001 (18-23)  (IEHPROGM ONLY)
              THE ENTRY OF A DISK NUMBER IN THESE COLUMNS WILL GENE-
              RATE THE DD CARD FOR THAT DISK.
0        3.9  DSK002 (24-29)
              SAME REMARKS AS DSK001
              (A DD CARD FOR SYSPK1 IS ALWAYS GENERATED)
0        3.10 MEMBER NAME (30-37)  (SORTS AND IEHPROGMS)
              THE ENTRY MADE HERE WILL DETERMINE THE SYSIN CARD.
1************
 * JCLGEN   *
 ************
              IF LEFT BLANK THE CARD
              // SYSIN DD *
              WILL BE GENERATED.
              ANY OTHER ENTRY WILL BE TAKEN AS THE NAME OF THE
              MEMBER ON SYSTEM.CONTRLIB WHICH CONTAINS THE CONTROL
              CARDS FOR THE UTILITY.  THE ENTRY CAN BE LEFT OR
              RIGHT ALIGNED.
              FOR EXAMPLE AN ENTRY OF "SRT01" WILL GENERATE THE CARD
              // SYSIN DD DSNAME = SYSTEM.CONTRLIB(SRT01), DISP=SHR
0        3.11 SUMMARY
              FOR AN ORDINARY PROGRAM ENTRIES ARE REQUIRED IN
                     STEP
                     R (OPTIONAL)
                     PROGRAM
                     HOLDDUMP (OPTIONAL)
              FOR A SORT ENTRIES ARE REQUIRED IN
                     SORT (S)
                     STEP
                     R (OPTIONAL)
                     MODS (OPTIONAL)
                     WORK AREA SIZES
                     MEMBER NAME (OPTIONAL)
              FOR AN IEHPROGM ENTRIES ARE REQUIRED IN
                     IEHPROGM (I)
                     STEP
                     R (OPTIONAL)
                     DSK001 (OPTIONAL)
                     DSK002 (OPTIONAL)
                     MEMBER NAME (OPTIONAL)
              FOR THE IEHPROGM THIS WILL LEAVE ONLY THE CONTROL
              CARDS TO BE GENERATED IF NEEDED.
1************
 * JCLGEN   *
 ************
              FOR THE SORT, DD CARDS FOR SORTIN AND SORTOUT ARE
              STILL NEEDED AND THE CONTROL CARD IF NECESSARY.
              FOR ANY OTHER PROGRAM, DD CARDS MUST ALSO BE GENERA-
              TED.
0        4.   THE "D" CARD
              ------------
0             THIS IS USED TO GENERATE "DD" CARDS, AND AS SPECIAL
              CASES IEHPROGM CONTROL CARDS AND/* CARDS.
              NOT ALL COLUMNS ARE USED FOR EACH CARD.
0        4.1  COLUMN 1 (1)
              CONTAINS THE CONSTANT "D".  THIS IS NOT INCLUDED IN
              THE PUNCHING DOCUMENT BECAUSE THESE LINES CAN BE USED
              FOR OTHER PURPOSES.  EXAMPLES ARE GIVEN LATER.
0        4.2  TYPE (2)
              SPECIFIES THE TYPE OF DD CARD TO BE GENERATED. VALID
              ENTRIES ARE:
                     BLANK - A PERMANENT DATA-SET
                       T   - A TEMPORARY DATA-SET
                       G   - A GENERATION DATA-SET
                       P   - A PRINT FILE
                       C   - A CARD FILE
                       U   - AN IEHPROGM UTILITY CARD
                       *   - A /* CARD
                       X   - A TABLE FILE
              EXAMPLES ARE GIVEN LATER.
0        4.3  DISP (3)
              SPECIFIES THE VARIOUS COMBINATIONS OF DISP PARAMETERS
              WHICH MAY BE USED.
1************
 * JCLGEN   *
 ************
              VALID ENTRIES ARE:
                        S  =  SHR
                        O  =  (OLD, PASS)
                        D  =  (OLD, DELETE, CATLG)
                        C  =  (, CATLG, DELETE)
                        P  =  (, PASS)
                        M  =  (MOD, PASS)
                        N  =  (, DELETE)
                        K  =  (OLD, KEEP)
0        4.4  TAPE (4)
              BY DEFAULT JCLGEN WILL ASSUME THAT PERMANENT DATA
              SETS RESIDE ON UNIT = 2314 AND TEMPORARY DATA SETS
              WILL BE ON UNIT = SYSDA.  AN ENTRY OF "T" WILL
              GENERATE UNIT = TAPE.
0        4.5  DDNAME (7-14)
              THIS IS THE DDNAME ASSOCIATED WITH THE DD CARD.
              THE ENTRY MUST BE LEFT ALIGNED.
0        4.6  DSNAME (15-22)
              FOR A TEMPORARY DATA-SET, THE ENTRY MADE IN THESE
              COLUMNS MAY BE LEFT OR RIGHT ALIGNED.  JCLGEN WILL
              AUTOMATICALLY GENERATE THE "&&"
              E.G. AN ENTRY OF STEP02A WILL GENERATE
              DSNAME = &&STEP02A
0        4.7  DSN (15-17)
              FOR A PERMANENT DATA SET, THESE COLUMNS'MUST CONTAIN
              THE THREE DIGIT FILE NUMBER.
              E.G. AN ENTRY OF 001 WOULD RESULT IN
              DSNAME = SYSTEM.PROJECTF001
                        IE   IMAP.T123F001
                        OR ACCREC.T456F001
1************
 * JCLGEN   *
 ************
0        4.8  GEN (21-22)
              FOR A GENERATION DATA-SET, THESE COLUMNS CONTAIN THE
              RELATIVE GENERATION NUMBER.
              VALID ENTRIES COULD BE +1, -2, 0.
              THE ZERO MAY BE LEFT OR RIGHT ALIGNED.
0        4.9  SPACE (FOR A DATA-SET) OR SYSOUT (FOR A PRINT FILE)(23-27)
0        4.9  1 FOR A PRINT FILE
                THE FIELD IS SPLIT INTO CLASS AND FORMS.  AN ENTRY
                IN BOTH THESE FIELDS WILL RESULT IN A CARD OF THE
                HASP FORMAT BEING GENERATED
                I.E.   // DDNAME  DD  SYSOUT = (CLASS, FORMS)
                E.G.   // PRINT   DD  SYSOUT = (1,,1611)
                IF THE FIELD FORMS IS LEFT BLANK THEN THE CARD IS
                GENERATED AS
                       // DDNAME  DD  SYSOUT = CLASS
                AND IF THE FIELD CLASS IS LEFT BLANK AS WELL THEN THE
                DEFAULT OPTION TAKES OVER
                       // DDNAME  DD  SYSOUT = A
0        4.9  2 FOR A DISK DATA-SET
                WHERE A DISK DATA-SET IS BEING CREATED THE FIELD IS
                SPLIT INTO THREE
                (A)  CT  AN ENTRY OF C WILL ASK FOR SPACE ALLOCATED
                         IN CYLINDERS, T WILL REQUEST TRACKS;
                (B) PRI  THE PRIMARY ALLOCATION REQUESTED;
                (C) SEC  THE SECONDARY ALLOCATION.
                PRI AND SEC MAY BE LEFT OR RIGHT ALIGNED.
                FOR EXAMPLE AN ENTRY UNDER SPACE OF C1012 WOULD
                GENERATE
                       SPACE = (CYL,(10,12),RLSE)
                WHEREAS TB2BL WOULD CREATE
                       SPACE = (TRK,(2,1),RLSE)
1************
 * JCLGEN   *
 ************
0        4.10 DCB (28-36)
              ALLOWANCE HAS BEEN MADE TO USE THE SUB-PARAMETERS
              RECFM, LRECL AND BLKSIZE AND THESE MUST ALWAYS BE
              GIVEN.
0        4.10.1 RECFM (28-29) ANY VALID ENTRY
0        4.10.2 LRECL (30-32) ANY TWO OR THREE DIGIT NUMBER
0        4.10.3 BLKSIZE (33-36) ANY TWO, THREE OR FOUR DIGIT NUMBER.
              ALL THREE FIELDS MAY BE LEFT OR RIGHT ALIGNED AND
              EMBEDDED BLANKS WILL BE REMOVED.
              FOR EXAMPLE AN ENTRY OF FB1201320 UNDER DCB WILL GE-
              NERATE
                      DCB = (RECFM=FB ,LRECL=120,BLKSIZE=1320)
0        4.11 VOLUME (37-55)
              THE MAKE-UP OF THIS FIELD DEPENDS ON THE FORMAT OF
              THE VOLUME PARAMETER REQUIRED.
0        4.11.1 RS (37)
                AN ENTRY OF R REQUESTS THE VOL=REF=OPTION
                AND S REQUESTS THE VOL=SER=OPTION
0        4.11.2 DSK003 (38-43)
                CONTAINS THE DISK NUMBER OF THE RELEVANT DISK.
0        4.11.3 FIELD (38-55)
                IF THE OPTION R IS USED AND COLUMN 38 CONTAINS AN *
                THEN THE COMPLETE FIELD IS TAKEN TO CONTAIN A
                REFERBACK AND IS USED EN BLOC.
              EXAMPLES OF VOLUME
                SDSK001  GENERATES VOL = SER = DSK001
                RDSK002  GENERATES VOL = REF = DSK002
              WHEREAS    R*.STEP01R.DDNAME   GENERATES
                         VOL = REF = *.STEP01R.DDNAME
1************
 * JCLGEN   *
 ************
0        5.1.   A PERMANENT DATA-SET
0        5.1.1. CREATING
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     BLANK
                        DISP                     "C"
                        TAPE                     OPTIONAL
                        DDNAME
                        DSN                      3 DIGITS ONLY
                        SPACE                    NOT APPLICABLE IF "TAPE"
                        DCB
                        VOLUME
0        5.1.2. RETRIEVING
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     BLANK
                        DISP                     "S", "D" OR "K"
                        DDNAME
                        DSN                      3 DIGITS ONLY
0        5.2.   A TEMPORARY DATA-SET
0        5.2.1  CREATING
                ENTRIES REQUIRED
                        COLUMN 1                 "D"
                        TYPE                     "T"
                        DISP                     "P" OR "N"
                        DDNAME
                        DSNAME
                        SPACE
                        DCB
1************
 * JCLGEN   *
 ************
0        5.2.2. RETRIEVING
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "T"
                        DISP                     "D", "O", "M" OR "K"
                        DDNAME
                        DSNAME
0        5.3.   A GENERATION DATA-SET
                AS FOR A PERMANENT DATA-SET, EXCEPT THAT TYPE
                WILL BE "G" AND "GEN" WILL CONTAIN THE RELATIVE
                GENERATION NUMBER.
0        5.4    A PRINT FILE
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "P"
                        DDNAME
                        SYSOUT                   OPTIONAL - DEFAULT OF "A"
                                                            IS TAKEN.
0        5.5    A CARD FILE
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "C"
                        DDNAME
                THIS WILL GENERATE A CARD
                //DDNAME DD *
1************
 * JCLGEN   *
 ************
0        5.6    AN IEHPROGM UTILITY CARD
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "U"
                        DSN                      3 DIGIT FILE NUMBER
                        DSK003                   DISK NUMBER
                IF DSK003 IS LEFT BLANK THIS WILL GENERATE THE
                CARD UNCATLG DSNAME = SYSTEM.PROJECT FNNN
                FILLING IN DSK003 WILL GENERATE THE SCRATCH CARD
                AS WELL,
                IE: SCRATCH DSNAME=SYSTEM.PROJECT FNNN,
                    VOL=2314=XXXXXX,PURGE
0        5.7    A /* CARD
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "*"
0        5.8.   A TABLE FILE
                ENTRIES REQUIRED:
                        COLUMN 1                 "D"
                        TYPE                     "X"
                        DDNAME
                        DSNAME                   THIS MUST CONTAIN THE MEMBER
                                                 NAME OF THE TABLE IN THE
                                                 LIBRARY.  IT MAY BE LEFT OR
                                                 RIGHT ALIGNED AND EMBEDDED
                                                 BLANKS WILL BE REMOVED.
                THIS WILL GENERATE A CARD OF THE FORM
                // DDNAME = SYSTEM.TABLIB(MEMBER),DISP = SHR
1************
 * JCLGEN   *
 ************
0        5.9  SPECIAL CASES
              IN SPECIAL CASES WHERE THE REQUIRED JCL CANNOT BE
              GENERATED TRY JCLGEN, I.E. FOR COMMENTS CARDS OR
              USING ADDITIONAL PARAMETERS SUCH AS DSORG OR BUFNO,
              ANY INPUT CARDS THAT ARE NOT RECOGNISED (BASED ON
              COLUMNS 1 B 2) WILL BE COPIED DIRECT FROM INPUT TO
              OUTPUT.
              FOR EXAMPLE :
              //* THIS IS A COMMENT
              ON INPUT WILL APPEAR DIRECTLY IN THE OUTPUT.
0        5.10 OTHER COMMENTS
              TO COMPLETE THE SORT IN SECTION 3.11 IT IS NECESSARY
              TO GENERATE THE DD CARDS WITH THE DDNAMES "SORTIN"
              AND "SORTOUT" BUT OTHERWISE JUST USING THE NORMAL
              "D" CARDS.
              CONCATENATION OF DATA-SETS IS ACHIEVED BY LEAVING
              THE DDNAME FIELD OF ALL BUT THE FIRST BLANK.
0        5.11 KNOWN BUGS
              ON SORTIN DATA SETS IT IS ADVISABLE TO INCLUDE THE
              BLKSIZE PARAMETER TO AVOID ANY POSSIBLE ABENDS
              RESULTING FROM INTERNAL CONFLICT IN THE SORT.
              BECAUSE THE SORTIN IS TAKEN AS A NORMAL DATA-SET
              WHICH IS EITHER CATALOGUED OR PASSED JCLGEN DOES
              NOT ALLOW FOR THE DCB PARAMETER TO BE INCLUDED.
              THESE HAVE TO BE INCLUDED MANUALLY AFTER GENERATION.
1************
 * JCLGEN   *
 ************
0        6.   EXAMPLES AND HINTS
              ------------------
0             IF THE OBJECTIVE OF USING JCLGEN IS CONSIDERED AT
              THE SYSTEM FLOWCHART STAGE IT IS POSSIBLE TO CODE
              THE JCL DIRECTLY FROM THE FLOWCHART.
              PERMANENT DATA-SETS NEED ONLY BE DESCRIBED BY THEIR
              THREE DIGIT IDENTIFIERS AND TEMPORARY BY AN ABBRE-
              VIATION OF THEIR DSNAME
              E.G. &&S3A WOULD BE &&STEP03A
              THE SYSTEM IDENTIFIERS AND THE SYSTEM DISK NUMBERS
              WOULD OF COURSE BE KNOWN.
0             TO SHOW AN EXAMPLE, THE ATTACHED FLOWCHART CONTAINS
              A JOB IN SYSTEM SAMPLE, PROJECT T123 USING DISK
              DSK001.
0             THE FIRST STEP IS AN EXAMPLE OF IEHPROGM TO UNCATA-
              LOG AND SCRATCH THE PERMANENT DATA-SETS CREATED IN
              THE JOB (NECESSARY FOR RE-RUNS).  THE CONTROL CARDS
              ARE IN CARD FORM.
0             THE SECOND STEP IS AN EXAMPLE OF IEBGENER TO COPY A
              DATA-SET, THE CONTROL CARDS ARE A DUMMY DATA-SET.
0             THE THIRD STEP IS AN EXAMPLE OF A SORT USING THE
              SORTMODS OPTION.  THE CONTROL CARDS ARE RESIDENT
              ON THE SYSTEM CONTRLIB.
0             THE FOURTH STEP IS AN EXAMPLE OF A SORT WITH THE
              CONTROL CARD IN THE INPUT STREAM.  ALSO A GENERATION
              DATA-SET IS USED.
0             THE FIFTH STEP IS A PROGRAM WITH AN EXAMPLE OF
              CONCATENTION.
1************
 * JCLGEN   *
 ************
JOB NO JOB101                SYSTEM - SAMPLE
                             PROJECT - T123
                             SYSTEMDISK - DSK001
               -------------
              (  IEHPROGM   )
              (    F001     )
              (    F002     )
    S1R        -------------
0
               -------------
              (             (
              (    F023     (
              (             (
               -------------
                     |
                     |
               -------------
              |             |
              |  IEBGENER   |
              |             |
    S2         -------------
                     |
                     |
               -------------                 -------------
              (             (               (             (
              (    &&SZA    (               (    F099(0)  (
              (             (               (             (
               -------------                 -------------
                     |                             |
                     |                             |
               -------------                 -------------
              |    SORT     |               |    SORT     |   -------------
              | (WITH MODS) |               |             |  |   CONTROL   |
              |        SRT16|               |             |--|    CARDS    |
    S3         -------------           S4    -------------    -------------
                     |                             |
                     |                             |
               -------------                 -------------
              (             (               (             (
              (    F001     (               (    &&S4A    (
              (             (               (             (
               -------------                 -------------
                     |                             |
                     |                             |
                      ----------------------------
                                    |CONCATENATED
                                READ|
                              -------------
                             |             |        -------------
                             |             | PRINT |SPECIAL FORMS|
                             |   PROG99    |-------|  CODE 8998  |
                   S5         -------------        |       ------
                                    |              |------/
                              WRITE |
                                    |
                              -------------
                             (             (
                             (    F002     (
                             (             (
                              -------------
1************
 * JCLGEN   *
 ************
    //JOB101   JOB (1230,0009),YOURNAME,MSGLEVEL=(1,1),COND=(16,EQ),CLASS=T
    //JOBLIB   DD  DSNAME=SAMPLE.PROGLIB,DISP=SHR
    //STEP01R EXEC PGM=IEHPROGM
    //SYSPRINT DD  SYSOUT=A
    //DSK001   DD  UNIT=2314,VOL=REF=DSK001,DISP=OLD
    //SYSPK1   DD  UNIT=2314,VOL=REF=SYSPK1,DISP=OLD
    //SYSIN    DD  *
         UNCATLG   DSNAME=SAMPLE.T123F001
         SCRATCH   DSNAME=SAMPLE.T123F001,VOL=2314=DSK001,PURGE
         UNCATLG   DSNAME=SAMPLE.T123F002
         SCRATCH   DSNAME=SAMPLE.T123F002,VOL=2314=DSK001,PURGE
    /*
    //STEP02  EXEC PGM=IEBGENER
    //SYSUDUMP DD  SYSOUT=A
    //SYSPRINT DD  SYSOUT=A
    //SYSUT1   DD  DSNAME=SAMPLE.T123F023,DISP=SHR
    //SYSUT2   DD  DSNAME=&&STEP02A,DISP=(,PASS),
    //             UNIT=SYSDA,SPACE=(CYL,(2,1),RLSE),
    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=1280)
    //SYSIN DD DUMMY
    //STEP03  EXEC PGM=IERRCO00,PARM='CORE=35000'
    //SYSOUT   DD  SYSOUT=A
    //SORTLIB  DD  DSNAME=SYS1.SORTLIB,DISP=SHR
    //SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(02),,CONTIG)
    //SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(02),,CONTIG)
    //SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(02),,CONTIG)
    //SORTWK04 DD  UNIT=SYSDA,SPACE=(CYL,(02),,CONTIG)
    //SYSLIN   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))
    //SYSLMOD  DD  UNIT=SYSDA,SPACE=(1024,(50,20,1))
    //SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,20))
    //SORTMODS DD  UNIT=SYSDA,SPACE=(TRK,(10,3))
    //SYSIN    DD  DSNAME=SAMPLE.CONTRLIB(SRT16),DISP=SHR
    //SORTIN   DD  DSNAME=&&STEP02A,DISP=(OLD,PASS)
    //SORTOUT  DD  DSNAME=SAMPLE.T123F001,DISP=(,CATLG,DELETE),
    //             VOL=SER=DSK001,SPACE=(CYL,(2,2),RLSE),
    //             UNIT=2314,DCB=(RECFM=FB,LRECL=80,BLKSIZE=1280)
    //STEP04  EXEC PGM=IERRCO00,PARM='CORE=35000'
    //SYSOUT   DD  SYSOUT=A
    //SORTLIB  DD  DSNAME=SYS1.SORTLIB,DISP=SHR
    //SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(04),,CONTIG)
    //SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(04),,CONTIG)
    //SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(04),,CONTIG)
    //SORTWK04 DD  UNIT=SYSDA,SPACE=(CYL,(04),,CONTIG)
    //SYSIN    DD  *
        SORT FIELDS=(1,80,CH,A)
    /*
    //SORTIN   DD  DSNAME=SAMPLE.T123F099(0),DISP=SHR
    //SORTOUT  DD  DSNAME=&&STEP04A,DISP=(,PASS),
    //             UNIT=SYSDA,SPACE=(CYL,(4,1),RLSE),
    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=1280)
    //STEP05  EXEC PGM=PROG99
    //SYSUDUMP DD  SYSOUT=A
    //READ     DD  DSNAME=SAMPLE.T123F001,DISP=SHR
    //         DD  DSNAME=&&STEP04A,DISP=(OLD,PASS)
    //WRITE    DD  DSNAME=SAMPLE.T123F002,DISP=(,CATLG,DELETE),
    //             VOL=REF=*.STEP03.SORTOUT,SPACE=(CYL,(4,1),RLSE),
    //             UNIT=2314,DCB=(RECFM=FB,LRECL=80,BLKSIZE=1600)
    //PRINT    DD  SYSOUT=(S,,8998)
1************
 * JCLGEN   *
 ************
C     YOURNAMESAMPLET123                                                     001
JTC   JOB101                                                                 002
PJ01R            DSK001                                                      003
DU            001                    DSK001                                  004
DU            002                    DSK001                                  005
D*                                                                           006
1************
 * JCLGEN   *
 ************
P 02  IEBGENER                                                               007
DP    SYSPRINT                                                               008
D S   SYSUT1  023                                                            009
DTP   SYSUT2  STEP02A C 2 1FB 801280                                         010
