1************
 * RTPMOVE  *
 ************
0ALIAS
+______
0THIS PROGRAM HAS NO ALIAS.
0ABSTRACT
+________
0PROGRAM TO GENERATE IEHMOVE CONTROL STATEMENTS BASED ON THE
 JCL SUPPLIED AND THEN INVOKE IEHMOVE TO PERFORM THE REQUIRED
 MOVE,COPY OR LOAD/UNLOAD FUNCTIONS.
1************
 * RTPMOVE  *
 ************
01.      PURPOSE
+_______________
0TO SIMPLIFY THE USE OF THE I.B.M. UTILITY 'IEHMOVE'
 BY AUTOMATICALLY GENERATING THE REQUIRED UTILITY CONTROL
 STATEMENTS.
0 THIS PROGRAM WAS WRITTEN BY A.M.MORRISH OF I.B.M. RESPOND,
 HAVANT,HAMPSHIRE (U.K.) AND DONATED TO THE PUBLIC DOMAIN AS MEMBER
 U00000WS OF THE 'TSG.RESPOND' LIBRARY ON THE GOODIES TAPE DISTRIBUTED
 BY THE GUIDE (UK) ORGANISATION.
02.      LIMITATIONS
+___________________
0THE PROGRAM IS SUBJECT TO THE LIMITATIONS OF THE I.B.M. UTILITY
 'IEHMOVE' AND THE APF FEATURE OF MVS.
0TSG NOTE: THIS IS A CONTRIBUTED PROGRAM AND DOES NOT CONFORM TO
 MONSANTO STANDARDS.IN PARTICULAR THERE IS A MARKED ABSENCE OF DSECT'S
 AND MOST CONTROL BLOCKS ARE ADDRESSED BY ABSOLUTE OFFSET.THEREFORE
 PARTICULAR CARE MUST BE EXERCISED IN MAINTENANCE,ESPECIALLY IF
 THERE ARE MAJOR CHANGES IN STANDARD SYSTEM CONTROL BLOCKS
 E.G.: JFCB,TIOT OR UCB.
03.      INPUT DATA
+__________________
0THE PARM FIELD MAY SPECIFY PARM OPTIONS TO BE PASSED TO IEHMOVE.
 FOR A DESCRIPTION OF THE PARM FIELD REFER TO THE I.B.M. UTILITIES MANUAL
 UNDER THE 'IEHMOVE' HEADING.
0DD CARDS DEFINING THE INPUT FILES TO THE REQUIRED IEHMOVE FUNCTION,
 THE DDNAMES CONFORMING TO THE STANDARDS DESCRIBED UNDER 'OPERATION'
 BELOW.
04.      OUTPUT DATA
+___________________
0SYSPRINT      = IEHMOVE MESSAGE DATASET.
 SYSUT1        = IEHMOVE WORK FILE AS DESCRIBED IN THE IBM UTILITIES MANUAL
 SYSUT2        = IEHMOVE CONTROL STATEMENT CARD IMAGES CREATED BY RTPMOVE.
0DD CARDS DEFINING THE OUTPUT FILES FROM THE REQUIRED IEHMOVE FUNCTION,
 THE DDNAMES CONFORMING TO THE STANDARDS DESCRIBED UNDER 'OPERATION' BELOW.
1************
 * RTPMOVE  *
 ************
05.      OPERATION
+_________________
0THE USER IS STRONGLY RECOMMENDED TO READ AND THOROUGHLY UNDERSTAND
 THE IEHMOVE SECTION OF THE I.B.M. UTILITIES MANUAL.THE 'MOVE'
 OPERATION OF THIS UTILITY IS PARTICULARLY DANGEROUS AND SHOULD
 BE AVOIDED WHEREVER POSSIBLE - 'COPY' OPERATIONS ARE ALWAYS
 PREFERABLE. UNLESS THE IEHMOVE UTILITY IS SPECIFICALLY REQUIRED
 (E.G. TO CREATE 80-BYTE CARD IMAGE COPIES OF DATASETS FOR TRANSMISSION
 TO ST.LOUIS) THE USER WILL FIND THE 'IEBCOPY' UTILITY TO BE
 SIMPLER,FASTER AND CHEAPER.
0THIS PROGRAMME SCANS FOR DDNAMES BEGINNING WITH ONE OF THE FOLLOWING
 PAIRS OF CHARACTERS WHICH SPECIFY THE ACTION TO BE TAKEN:-
0              CC   COPY CATALOG        MC   MOVE CATALOG
               CD   COPY DSNAME         MD   MOVE DSNAME
               CG   COPY DSGROUP        MG   MOVE DSGROUP
               CP   COPY PDS            MP   MOVE PDS
               CV   COPY VOLUME         MV   MOVE VOLUME
0        THE THIRD CHARACTER OF THE DDNAME IS EITHER 'F' SPECIFYING
  THE FROM-VOLUME OR 'T' SPECIFYING THE TO-VOLUME. THE REMAINING
  CHARACTERS OF THE DDNAME SPECIFY EITHER AN IDENTIFIER TO MATCH UP
  THE FROM AND TO-VOLUMES OR 'ALL' SPECIFYING THAT THE DDCARD RELATES
  TO ALL DD CARDS WITH THE SAME FIRST TWO LETTERS AND THE OPPOSITE
  DIRECTION INDICATOR IN THE DDNAME.
0  A DDNAME OF CVOL IS USED TO IDENTIFY THE CONTROL VOLUME (IF
  PRESENT)
1************
 * RTPMOVE  *
 ************
06.      EXAMPLES
+_________________
0        A)TO COPY TWO EXISTING LIBRARIES AND COMBINE THEM INTO
           ONE NEW LIBRARY.
0              //EXAMPLE1 JOB (....)
               //STEP1 EXEC PGM=RTPMOVE
               //SYSPRINT DD SYSOUT=A
               //SYSUT1 DD UNIT=SYSDA,SPACE=(CYL,(2,1))
               //SYSUT2 DD UNIT=SYSDA,SPACE=(TRK,(1,1))
               //CPTALL DD DSN=EXAMPLE.NEW.LIB,DISP=(,CATLG),
               // UNIT=DISK,SPACE=(TRK,(19,19,10)),LABEL=EXPDT=00111,
               // DCB=EXAMPLE.LIB1,VOL=REF=EXAMPLE.POINTER
               //CPFLIB1 DD DSN=EXAMPLE.LIB1,DISP=SHR
               //CPFLIB2 DD DSN=EXAMPLE.LIB2,DISP=SHR
0        B)A VERY COMPLEX JOBSTREAM TO COPY A DATASET FROM ST.LOUIS
           TO THE BRUSSELS SYSTEM. THE JOB IS RUN IN BRUSSELS,
           SENDS A JOB TO ST.LOUIS WHICH IN TURN SENDS A JOB BACK
           TO BRUSSELS.TWO TAPES ARE USED FOR INTERMEDIATE STORAGE
           TO FORCE AN 'UNLOAD' OPERATION,BUT ANY SCRATCH TAPES MAY
           BE USED AND THEY ARE NOT RETAINED.
0              //EXAMPLE2 JOB (.....)
               //BXL1S1 EXEC STLJOBS
               //SYSUT1 DD DATA,DLM='$$'
               //STLOUIS JOB (.....)
               /*MAIN        FORMS=3535
               //STL1S1 EXEC PGM=RTPMOVE,PARM='POWER=2'
               //STEPLIB DD DSN=BXL.LINKLIB,DISP=SHR
               //SYSPRINT DD SYSOUT=A
               //SYSUT1 DD UNIT=SYSDA,SPACE=(256,(250,100))
               //SYSUT2 DD UNIT=SYSDA,SPACE=(400,(5,1))
               //CDFFILE DD DSN=BXL.STL.LIB1,DISP=SHR
               //CDTFILE DD UNIT=TAPE,DISP=(,PASS),DSN=EXAMPLE.FILE,
               // DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
               //STL1S2 EXEC PGM=UT496
               //STEPLIB DD DSN=BXL.LINKLIB,DISP=SHR
               //SYSPRINT DD SYSOUT=A
               //UNLOADED DD DSN=EXAMPLE.FILE,DISP=(OLD,DELETE)
               //SYSUT2 DD SYSOUT=B
               //SYSUT1 DD DATA,DLM='??'
               //BXLJOB2 JOB (......)
               //BXL2S1 EXEC PGM=COPY
               //SYSPRINT DD SYSOUT=A
               //SYSUT2 DD UNIT=TAPE,DISP=(,PASS),VOL=SER=SCRTCH,
               // DSN=EXAMPLE.FILE,DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
               //SYSUT1 DD DATA
               .*DDN    UNLOADED
               /*
               //BXL2S2 EXEC PGM=RTPMOVE,PARM='POWER=2'
               //SYSPRINT DD SYSOUT=A
               //SYSUT1 DD UNIT=SYSDA,SPACE=(CYL,(5,2))
               //SYSUT2 DD UNIT=SYSDA,SPACE=(TRK,(1,1))
               //CDFBXL2 DD DSN=EXAMPLE.FILE,DISP=(OLD,DELETE)
               //CDTBXL2 DD UNIT=DISK,VOL=REF=EXAMPLE.POINTER,DISP=SHR
               //CVOL DD UNIT=DISK,DISP=SHR,VOL=REF=DSK306
               ??
               $$
