1************
 * B0103C   *
 ************
0B0103C
 ------
01. PURPOSE
 ----------
0   SUBROUTINE B0103C PROVIDES INDEXED SEQUENTIAL PROCESSING
    CAPABILITY TO AN ISAM DATA SET CREATED BY PROGRAM B0102
    OR SUBROUTINE B0103A.
0   THE ROUTINE OPERATES UNDER TWO ACCESSING MODES USING BISAM
    AND QISAM MACROS.  THE INDEXED SEQUENTIAL ACCESS METHOD
    ALLOWS THE USER TO PROCESS DATA FILES BOTH RANDOMLY AND
    SEQUENTIALLY.
0   RANDOM OPERATIONS INCLUDE THE READ AND UPDATE OF SPECIFIC
    RECORDS WITHIN THE DATA SET AND THE INSERT OF NEW RECORDS
    OF A DATA SET.  THE USER MAY EFFECT THE PROCESSING OF A
    SELECT GROUP OF RECORDS REGARDLESS OF THEIR LOCATION AND
    JUXTAPOSITION TO EACH OTHER IN A DATA SET.
0   SEQUENTIAL OPERATIONS WILL RETRIEVE RECORDS IN ORDER BY
    THEIR KEY SEQUENCE.  TERMINATION OF THE SEQUENTIAL READ
    MODE IS AT USER DISCRETION.  WHEN THE END OF THE DATA SET
    IS REACHED, RETRIEVAL OF DATA IS AUTOMATICALLY TERMINATED.
    THE USER, HOWEVER, MUST TERMINATE THE USE OF THE FILE IN
    THE SEQUENTIAL MODE BEFORE ANY OTHER OPERATION MAY BE
    ACCEPTED, INCLUDING A RE-INITIALIZATION OF SEQUENTIAL MODE
    REQUESTS.
0   THERE ARE FOUR METHODS THE USER MAY EMPLOY TO RETRIEVE
    ISAM RECORDS IN SEQUENTIAL MODE AND SET THE STARTING POINT
    FOR THE RETRIEVAL OF RECORDS.
0   THE USER MAY BEGIN THE RETRIEVAL OF RECORDS AT THE BEGINNING
    OF A DATA SET AND PROCESS ALL OR A SELECT NUMBER OF RECORDS
    AS REQUIRED.  THE SEQUENTIAL READING OF RECORDS MAY BE INITIATED
    WITH A GENERAL KEY IN THE FILE.  IF THE ARGUMENT KEY DOES NOT
    EXIST, THE NEXT SEQUENTIALLY LARGER KEY IN THE FILE IS USED AS
    THE STARTING LOCATION.  HOWEVER, IF THE USER DESIRES TO START
    WITH A SPECIFIC KEY, THE RECORD FOR THAT KEY MUST EXIST OTHER-
    WISE A NOT FOUND CONDITION WILL OCCUR AND SEQUENTIAL MODE WILL
    NOT BE INITIALIZED.  ANOTHER OPTION AVAILABLE IS THE SEQUENTIAL
    RETRIEVAL OF A CLASS OF RECORDS.  THE USER SPECIFIES A GENERIC
    KEY WHICH IS A PARTIAL KEY OR A PREFIX TO A KEY THAT DENOTES A
    CLASS OF RECORDS.  RETRIEVAL FROM THE FILE WILL START WITH THE
    FIRST RECORD BELONGING TO THAT CLASS AND ALL SUBSEQUENT RECORDS
    WILL BE RETRIEVED IN SEQUENTIAL ORDER.  THE CLASS OF RECORDS
    SPECIFIED BY THE GENERIC KEY ARGUMENT MUST EXIST IN ORDER TO
    INITIALIZE SEQUENTIAL MODE.
1************
 * B0103C   *
 ************
02. LIMITATIONS
 --------------
0   1. THIS SYSTEM WILL ACCESS FIXED LENGTH RECORDS.
0   2. THE FILE MUST BE IN EXISTENCE.  THIS ROUTINE
       WILL NOT CREATE A FILE.
0   3. THIS ROUTINE CAN ACCESS ONLY ONE ISAM DATA SET.
       A FUTURE VERSION IS PLANNED WHICH WILL PERMIT
       ACCESSING 5 DIFFERENT INDEXED SEQUENTIAL DATA
       SETS WITHIN ONE PROBLEM PROGRAM.
03. INPUT DATA
 -------------
0   THE INPUT INDEXED SEQUENTIAL DATA SET AS SPECIFIED
    BY THE USER ON THE DD CARD.
04. OUTPUT DATA
 --------------
0   NONE.
05. OPERATION
 ------------
0   CALL SEQUENCE FROM COBOL PROGRAM:
              ENTER LINKAGE.
              CALL 'B0103C' USING ARG1, ARG2, ARG3, ARG4, ARG5, ARG6.
              ENTER COBOL.
0   ARG1      THE NAME OF AN 8 CHARACTER LENGTH FIELD WHICH
              CONTAINS THE EXTERNAL DDNAME, LEFT-JUSTIFIED,
              THAT REFERENCES THE DATA SET.
0   ARG2      THE NAME OF A FIELD WHICH CONTAINS THE KEY OF
              THE RECORD.  WHEN THE VALUE OF ARG3 IS C, THE
              CONTENT OF THIS PARAMETER IS IGNORED.
0   ARG3      THE NAME OF A ONE POSITION ALPHA FIELD WHICH
              CONTAINS ONE OF THE FOLLOWING VALUES:
0             R - READ REQUEST MODIFIED BY ARG4 OF THE
                  RECORD IDENTIFIED BY ARG2.
0             W - WRITE REQUEST MODIFIED BY ARG4 OF THE
                  RECORD IDENTIFIED BY ARG2.
0             C - CLOSE REQUEST OF DATA SET SPECIFIED BY
                  ARG1.  CLOSE MUST BE ISSUED BY USER BEFORE
1************
 * B0103C   *
 ************
                  TERMINATING JOB.  THE CONTENTS OF THE
                  REMAINING ARGUMENTS ARE IGNORED.
0             S - SEQUENTIAL OPERATION REQUEST MODIFIED
                  BY ARG4.
0             (NOTE:  OPEN CAN NEVER BE REQUESTED SINCE THE
               ROUTINE WILL DETERMINE WHICH DATA SET NEEDS
               TO BE OPENED AND WILL DO THE OPENING AT THE
               TIME OF THE REQUEST.)
0   ARG4      THE NAME OF A ONE POSITION ALPHANUMERIC FIELD
              WITH ONE OF THE SIX VALUES SPECIFIED BELOW.
0             BLANK    -READ OR UPDATE OF AN EXISTING RECORD.
                        USED WITH R AND W IN ARG3.
0             A        -ADD OF A NEW RECORD.  USED ONLY WITH
                        W IN ARG3 AND SPECIFIES A NEW RECORD
                        IS TO BE ADDED TO THE DATA SET.
0             D        -DELETE OF A RECORD.  USED ONLY WITH R
                        IN ARG3.
0             B        -INITIATE SEQUENTIAL READ OF RECORDS FROM
                        THE BEGINNING OF THE DATA SET SPECIFIED
                        BY ARG1.  USED ONLY WITH S IN ARG3.  THE
                        CONTENTS OF THE REMAINING ARGUMENTS ARE
                        IGNORED.  NO RECORD IS RETURNED WITH THIS
                        ENTRY.
0             G        -INITIATE SEQUENTIAL READ OF THE DATA SET
                        STARTING WITH THE RECORD OR GROUP OF RECORDS
                        WHOSE GENERIC KEY IS SPECIFIED IN ARG2.  IF
                        RECORDS BELONGING TO THAT CLASS ARE NOT FOUND,
                        THE RETURN CODE IS '1' AND SEQUENTIAL MODE
                        IS NOT INITIATED.  USED ONLY WITH S IN ARG3.
                        NO RECORD IS RETURNED WITH THIS ENTRY.  THE
                        GENERIC KEY IS A PARTIAL KEY, OR A MAJOR
                        CLASS PREFIX, FOLLOWED BY BINARY ZEROS TO
                        THE TOTAL KEY LENGTH.
0                       E.G.  THE USER HAS RECORDS WHOSE RECORD
                        KEYS CONSIST OF A 5 DIGIT CUSTOMER NUMBER
                        AND A 5 DIGIT PRODUCT NUMBER.  IT IS DESIRED
                        TO START THE RETRIEVAL OF RECORDS WITH A
                        SPECIFIC CLASS OF CUSTOMERS, SAY 50255,
                        REGARDLESS OF WHAT THE PRODUCT NUMBER MIGHT
                        BE.  THE PRODUCT CODE POSITIONS ARE REPLACED
                        WITH BINARY ZEROS SO THAT ARG2 HAS A GENERIC
                        KEY OF 5025500000, THE LAST 5 POSITIONS
                        CONTAINING BINARY ZEROS.
1************
 * B0103C   *
 ************
0             K        -INITIATE SEQUENTIAL READ OF THE DATA SET
                        STARTING WITH THE RECORD WHOSE SPECIFIC
                        KEY IS SPECIFIED IN ARG2.  IF THE SPECIFIC
                        RECORD REQUESTED IS NOT FOUND, THE RETURN
                        CODE IS '1' AND SEQUENTIAL MODE IS NOT
                        INITIATED.  USED ONLY WITH S IN ARG3.  NO
                        RECORD IS RETURNED WITH THIS ENTRY.
0             S        -INITIATE SEQUENTIAL READ OF THE DATA SET
                        STARTING WITH THE RECORD WHOSE KEY IS EQUAL
                        TO OR GREATER THAN THE KEY SPECIFIED IN ARG2.
                        USED ONLY WITH S IN ARG3.  NO RECORD IS
                        RETURNED WITH THIS ENTRY.
0             R        -READ THE NEXT SEQUENTIAL RECORD.  USED ONLY
                        WITH S IN ARG3.  SUBSEQUENT CALLS TO THE
                        ROUTINE OBTAINS THE NEXT SEQUENTIAL RECORD
                        IN ARG5.
0             E        -END THE SEQUENTIAL OPERATION.  USED ONLY
                        WITH S IN ARG3.
0   ARG5      THE NAME OF THE CHARACTER FIELD INTO WHICH THE
              RECORD TO BE READ WILL BE PLACED, OR IN THE CASE
              OF A WRITE, FROM WHICH THE DATA TO BE WRITTEN WILL
              BE TAKEN.
0   ARG6      THE NAME OF A ONE POSITION ALPHANUMERIC FIELD WILL
              CONTAIN THE RETURN CODE.  THE FOLLOWING IS A LIST
              OF THESE CODES AND THEIR MEANING:
0             0        -SUCCESSFUL COMPLETION OF THE REQUESTED
                        OPERATION.
0             1        -RECORD NOT FOUND
0             2        -'A' WAS SPECIFIED IN ARG4 AND THE RECORD
                        WAS PRESENT.
0             7        -UNABLE TO ADD - ALL DATA AREAS EXHAUSTED.
0             8        -ERROR SPECIFIED ON CONSOLE (USUALLY INVALID
                        ARG3 OR ARG4).
0             A        -A "SEQUENTIAL READ" OR "END SEQUENTIAL READ"
                        WAS REQUESTED BEFORE A "SET SEQUENTIAL READ".
                        THE FIRST SEQUENTIAL OPERATION MUST BE TO SET
                        THE STARTING POINT.  THIS IS ACCOMPLISHED BY
                        SPECIFYING S IN ARG3 AND EITHER S, B, K, OR
                        G IN ARG4.
1************
 * B0103C   *
 ************
0             B        -WHILE THE ROUTINE WAS IN THE SEQUENTIAL
                        MODE AN OPERATION OTHER THAN S WAS
                        REQUESTED.
0             C        -A DUPLICATE RECORD CONDITION WAS FOUND
                        OR THE RECORD COULD NOT BE FOUND IN
                        OVERFLOW.
0             D        -ADD WAS REQUESTED AND ARG2 WAS NOT EQUAL
                        TO THE KEY OF ARG5.
0             E        -SEQUENTIAL END OF DATA SET - WHILE
                        SEQUENTIALLY PROCESSING A DATA SET THE
                        END OF FILE WAS FOUND.  THE USER MUST
                        TERMINATE THE SEQUENTIAL MODE OPERATION
                        BEFORE RE-INITIALIZING.
0                  TABLE OF OPERATION CODES
                   ------------------------
0   OPERATION                      ACTION
    ---------                      ------
0   ARG3 ARG4
    ---- ----
0   R    BLANK          READ A RECORD
0   R    D              DELETE A RECORD
0   W    BLANK          UPDATE A RECORD
0   W    A              ADD A RECORD
0   S    B              START SEQUENTIAL OPERATION AT THE BEGINNING
                        OF DATA SET
0   S    G              START SEQUENTIAL OPERATION AT A GENERIC
                        RECORD KEY LOCATION
0   S    K              START SEQUENTIAL OPERATION AT A SPECIFIC
                        RECORD KEY LOCATION
0   S    S              START SEQUENTIAL OPERATION AT A RECORD KEY
                        LOCATION
0   S    R              READ NEXT SEQUENTIAL RECORD
0   S    E              END SEQUENTIAL OPERATION
0   C    BLANK          CLOSE THE DATA SET
1************
 * B0103C   *
 ************
0                  TABLE OF RETURN CODES
                   ---------------------
0                             RECORD   NO OVERFLOW
0   OPERATION RECORD FOUND   NOT FOUND    AREA
    --------- ------------   --------- -----------
0      R           0             1
0      RD          0             1
0      W           0             1
0      WA          2             0         7
0      SS          0             0
0      SB          0             0
0      SG          0             1
0      SK          0             1
06.      JCL REQUIRED FOR ISAM FILE
         --------------------------
0        DSNAME
0        DISP
0        UNIT
0        VOLUME
0        DCB=(,DSORG=IS)
1************
 * B0103C   *
 ************
07.        EXAMPLES
           --------
0          COBOL:
0   01   INPUT-DATA.
         02  GOOD PART.
             03  SS-KEY           PICTURE 9(12)
             03  REST-OF-REC      PICTURE X(1596)
         .
         .
0   WORKING-STORAGE SECTION.
                                                           ARG
0   01   FILE-NAME                PICTURE X(8).             1
0   01   SRCH-KEY                 PICTURE 9(12).            2
0   01   OPERATOR                 PICTURE X.                3
0   01   OP-MODE                  PICTURE X.                4
0   01   REC-DATA                 PICTURE X(1608).          5
0   01   RETURN-CODE              PICTURE X.                6
0   PROCEDURE DIVISION.
         .
         .
0   A.
         ENTER LINKAGE.
                                                           ARG
         CALL 'DSKRW1' USING FILE-NAME,                     1
                             SRCH-KEY,                      2
                             OPERATOR,                      3
                             OP-MODE,                       4
                             REC-DATA,                      5
                             RETURN-CODE.                   6
         ENTER COBOL
         .
0   B.
         EXIT.
         .
    NXT-REC.
         READ TRANSACTIONS AT END GO TO CLOSE-FILE.
         .
    READ.
         MOVE 'R' TO OPERATOR
         MOVE SPACE TO OP-MODE
         MOVE SS-KEY TO SRCH-KEY
         .
         .
         .
1************
 * B0103C   *
 ************
         PERFORM A.
         IF RETURN-CODE NOT = '0' GO TO NOT-FOUND.
         .
         .
0   FOUND.
         .
         .
         (PROCESS RECORD)
         .
         .
0   WRITE-UPDATE.
         MOVE 'W' TO OPERATOR
         MOVE SPACE TO OP-MODE
         MOVE SS-KEY TO SRCH-KEY
         MOVE GOOD-PART TO REC-DATA.
         PERFORM A.
         IF RETURN-CODE = '0' GO TO NXT-REC.
         .
         .
0   ERROR-ROUTINE.
         .
         .
         .
0   NOT-FOUND
         .
         .
0   WRITE-NEW-RECORD.
         .
         MOVE 'W' TO OPERATOR
         MOVE 'A' TO OP-MODE
         MOVE GOOD-PART TO REC-DATA
         .
         PERFORM A.
         .
         IF RETURN-CODE = '0' GO TO NXT-REC.
         .
         IF RETURN-CODE = '7' GO TO CANNOT-ADD-MORE-RECORDS.
         .
         GO TO ERROR-ROUTINE.
         .
         .
0   DELETE
         .
1************
 * B0103C   *
 ************
         MOVE 'R' TO OPERATOR
         MOVE 'D' TO OP-MODE
         MOVE DELETE-KEY TO SRCH-KEY
         .
         PERFORM A.
0   SEQ-START.
         MOVE 'S' TO OPERATOR, OP-MODE
         MOVE START-KEY TO SRCH-KEY
         PERFORM A.
         .
         MOVE 'R' TO OP-MODE.
         .
0   SEQ-READ.
         PERFORM A.
         IF RETURN-CODE = 'E' GO TO END-DATA.
         .
         .
         (PROCESS RECORD)
         GO TO SEQ-READ.
         .
0   END-DATA.
         MOVE 'E' TO OP-MODE.
         PERFORM A.
         .
         .
0   CLOSE-FILE.
         .
         MOVE 'C' TO OPERATOR
         .
         PERFORM A.
0   JCL:
0   //SYSABEND     DD   SYSOUT=A
0   //SYSOUT  DD   SYSOUT=A,DCB=(,LRECL=120,BLKSIZE=120)
0   //ISAM23       DD   DSNAME=ISAMFILE,DISP=(OLD,KEEP),
0   //                  UNIT=194,VOLUME=SER=DSK002,DCB=(,DSORG=IS)
         .
         .
         .
0   //USERDD1      DD
         .
         .
         .
0   //USERDD2      DD
1************
 * B0103C   *
 ************
08.      OPERATIONAL REQUIREMENTS AND COMMENTS
         -------------------------------------
0        1.   THE DATA SET MAY BE MULTI-VOLUME.
0        2.   THE INTERNAL FILE NAME AND THE EXTERNAL DDNAME
              MUST BE IDENTICAL.  THE INTERNAL FILE NAME IS
              CONTAINED IN ARG1, LEFT-JUSTIFIED IN A 8 POSITION
              FIELD IN THE APPLICATION PROGRAM.
09.      BIBLIOGRAPHY
         ------------
0        1.   CONTROL PROGRAM SERVICES, C28-6541-2 INCLUDING ITS
              RESPECTIVE NEWSLETTERS, SECTION: 3, INDEXED SEQUENTIAL
              ACCESS METHOD.
0        2.   JOB CONTROL LANGUAGE, C28-6539-4 INCLUDING NEWSLETTERS,
              SECTION: SPECIAL APPLICATIONS OF THE CONTROL STATEMENTS
              (ISAM).
0        3.   CONCEPTS AND FACILITIES, C28-6535-0, SECTION: 3,
              INDEXED SEQUENTIAL ACCESS METHOD.
0        4.   DATA MANAGEMENT, C28-6537-1, SECTION: INDEXED SEQUENTIAL
              ORGANIZATION.
