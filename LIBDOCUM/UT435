1************
 * UT435    *
 ************
0UT435
 -----
01. PURPOSE
 ----------
0   THIS SUBROUTINE CONVERTS A FIFTEEN-DIGIT PACKED
    DECIMAL FIELD FROM ANY CURRENCY TO ANY OTHER,
    AND MAY BE INVOKED BY BOTH COBOL AND RPG.
0   ANOTHER CURRENCY CONVERSION ROUTINE (UT 410) DOES
    EXIST, BUT IT IS CONSIDERABLY LARGER, NEEDING
    OVER 4000 (DECIMAL) BYTES IN WHICH TO EXECUTE.
    UT 435 WAS WRITTEN TO PERFORM A LIMITED SUB-SET
    OF THE FUNCTIONS OF UT410 IN THE BARE MINUMUM
    OF CORE.
02. LIMITATION
 -------------
0   UT435 CONTAINS AN INTERNAL TABLE OF CONVERSION
    FACTORS FROM CURRENCY TO U.S. DOLLARS. SINCE
    THIS IS SUBJECT TO CHARGE IT IS ESSENTIAL THAT
    UT 435 BE INVOKED DYNAMICALLY INSTEAD OF BEING
    LINK-EDITED WITH THE PROBLEM PROGRAM.
0   (I.E. DYNAML/DYNAMO/DYNAMD SHOULD BE USED TO CALL
    THE SUBROUTINE FROM A COBOL PROGRAM, WHILE FOR
    RPG MINGL/MINGE/MINGD SHOULD BE USED.)
03. INPUT DATA
 -------------
0   NONE.
04. OUTPUT DATA
 --------------
0   NONE.
1************
 * UT435    *
 ************
05. OPERATION
 ------------
0   IN A COBOL PROGRAM UT 435 SHOULD BE DYNAMICALLY
    LOADED BY MEANS OF DYNAML, AND THEREAFTER SHOULD
    BY INVOKED BY CODING OF THE FORM.
    ENTER LINKAGE
    ENTER 'DYNAMO' USING   DATA-NAME-1,
                           DATA-NAME-2,
0   ENTER COBOL
0   WHERE DATA-NAME-1 IS AN ELEMENTARY ITEM OF THE
    FORM 77 UT 435 PICTURE X (8)       VALUE 'UT 435'
    AND DATA-NAME-2 IS A GROUP ITEM OF THE FORM
    01   CONVERSION-AREA.
         03   INPUT-VALUE    PICTURE S9(10) V9(5)
                             COMPUTATIONAL -3.
         03   INPUT-CODE     PICTURE XX.
         03   OUTPUT-CODE    PICTURE XX.
         03   RETURN-CODE    PICTURE X.
         03   OUTPUT-VALUE   PICTURE S9 (10) V9 (5)
                             COMPUTATIONAL-3.
0   THE FIELDS INPUT-CODE AND OUTPUT-CODE SHOULD
    CONTAIN A NUMERIC CURRENCY CODE IN THE RANGE
    01 TO 99. (UT 435 HAS THE SAME CURRENCY CODES
    AND CONVERSION FACTORS AS UT410). THE FIELD
    RETURN-CODE CONTAINS A 1 IF CONVERSION IS SUCCESS-
    FUL. IF THE INPUT CURRENCY CODE IS INVALID OR
    SPECIFIES A CURRENCY FOR WHICH THERE IS NO CONVERSION
    FACTOR, RETURN-CODE IS SET TO 2. IF THE OUTPUT
    CURRENCY CODE IS IN ERROR, RETURN-CODE IS SET
    TO 3. IN THE EVENT THAT AN ERROR IS DETECTED IN
    EITHER OF THE CURRENCY CODES, THE OUTPUT VALUE
    IS SET TO ZERO.
0   NOTE
    ----
0   THE CONTENTS OF THE FIELD INPUT-VALUE ARE NOT
    VERIFIED. IF THE FIELD DOES NOT CONTAIN A VALID
    PACKED-DECIMAL NUMBER THE SUBROUTINE WILL ABEND.
1************
 * UT435    *
 ************
0   NOTE ALSO THAT UT435 CANNOT COPE WITH BRITISH
    POUNDS STERLING (CURRENCY CODE 19) AND IT IS
    TREATED AS AN INVALID CODE, WITH THE OUTPUT
    VALUE SET TO ZERO, WHILE THE VALUE OF RETURN-CODE
    IS EITHER 2 OR 3 DEPENDING ON WHETHER IT WAS AN
    INPUT OR OUTPUT CURRENCY CODE.
1************
 * UT435    *
 ************
0   RPG OPERATION
 ----------------
0   IF UT 435 IS CALLED BY AN RPG PROGRAM IT IS
    NECESSARY TO DEFINE THE PARAMETER AREA IN A
    SERIES OF RLABLS, WITH THE FIRST FIELD NAMED
    FIELD2. THE SUBROUTINE SHOULD BE DYNAMICALLY
    LOADED BY MINGL, AND THEN IT SHOULD BE INVOKED
    VIA MINGE. AN EXAMPLE OF THE NECESSARY CODING
    IS ATTACHED.
1************
 * UT435    *
 ************
0    C                     RLABL          FIELD1  8        SUBROUTINE NAME
0    C                     RLABL          FIELD2 155       INPUT VALUE
0    C                     RLABL          INCODE  2        INPUT CODE
0    C                     RLABL          OUTCDE  2        OUTPUT CODE
0    C                     RLABL          RETCDE  1        RETURN CODE
0    C                     RLABL          OUTVLU 155       OUTPUT VALUE
0    C                     RLABL          FIELD3  1        ** REQUIRED BY
0    C                     RLABL          FIELD4  1         * MINCE BUT
0    C                     RLABL          FIELD5  1         * UNUSED IN
0    C                     RLABL          FIELD6  1        ** THIS CASE
0    C   20                GOTO PROCESS                    *  FIRST TIME
0    C                     SETON                     20     * DYNAMICALLY
0    C                     MOVE 'UT435   'FIELD1            * LOAD THE
0    C                     EXIT MINCL                      *  SUBROUTINE
0    C           PROCESS   TAG
1************
 * UT435    *
 ************
0    C                     MOVE INPUT     FIELD2           **  MOVE VALUES
0    C                     MOVE CODE1     INCODE            ** TO PARAMETR
0    C                     MOVE CODE2     OUTCDE           **  AREA
0    C                     EXIT MINCE                      CONVERT
0    C           RETCDE    COMP '1'                      21**
0    C           RETCDE    COMP '2'                      22 * DETERMINE
0    C           RETCDE    COMP '3'                      23 * RETURN CODE
0    C   21                GOTO CONVGOOD                    * AND GO TAKE
0    C   22                GOTO ERRORIN                     * NEC. ACTION
0    C   23                GOTO ERROROUT                   ** .    .  .
0    C           CONVGOOD  TAG
0    C                     MOVE OUTVLU    OUTPUT
0    C                     GOTO PROCESS2
