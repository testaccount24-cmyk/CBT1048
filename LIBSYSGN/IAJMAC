./ ADD NAME=ZSCALL
         MACRO
&NAME    ZSCALL &RTN
         GBLB  &ZREG
         AIF   (&ZREG).REGOK
         MNOTE 36,'''ZSCALL'' MAY NOT BE USED WITHOUT ''ZREG'''
         MEXIT
.REGOK   ANOP
         AIF   ('&RTN'(1,1) EQ '(').REGBR
         CNOP  2,4
&NAME    L     RGO,=A(&RTN)
         AGO   .ACTBR
.REGBR   ANOP
         CNOP  0,4
&NAME    LR    RGO,&RTN(1)
.ACTBR   ANOP
         BALR  RLNK,RGO
         MEND
./ ADD NAME=ZSTART
         MACRO
&NAME    ZSTART &START=,&DATA=,&SAVE=
         GBLB  &ZREG
         GBLB  &ZSTART
         GBLC  &ZNUM
         AIF   (&ZREG).REGOK
         MNOTE 36,'''ZSTART'' MAY NOT BE USED WITHOUT ''ZREG'''
         MEXIT
.REGOK   ANOP
         AIF   (NOT &ZSTART).PREVOK
         MNOTE 36,'PREVIOUS ''ZEND'' DID NOT PROPERLY TERMINATE RTN'
         MEXIT
.PREVOK  ANOP
&ZSTART  SETB  1
@$&SYSNDX.@ DS 0H
&NAME    STM   RLNK,RAUX,12(RSAVE)
         AIF   (T'&NAME EQ 'O').NONAME
         ENTRY &NAME
.NONAME  ANOP
         LR    RBAS,RGO
         USING @$&SYSNDX.@,RBAS
         ST    RSAVE,@$&SYSNDX.$
         AIF   (T'&DATA EQ 'O').NODATA1
         USING &DATA,RDAT
         L     RDAT,@$&SYSNDX.$-4
.NODATA1 AIF   (T'&SAVE EQ 'O').GGG001
         L     RSAVE,=A(&SAVE)
         AGO   .GGG002
.GGG001  ANOP
         LA    RSAVE,@$&SYSNDX.$+4
.GGG002  AIF   (T'&START NE 'O').EXPBR
         B     @$&SYSNDX.#
         AGO   .DATAGEN
.EXPBR   B     &START
.DATAGEN ANOP
         SPACE 1
         AIF   (T'&DATA EQ 'O').NODATA2
         DC    A(&DATA)
.NODATA2 ANOP
@$&SYSNDX.$ DC F'0'
&ZNUM    SETC  '@$&SYSNDX.$'
         AIF   (T'&SAVE NE 'O').GGG011
         DC    18F'0'
.GGG011  ANOP
         SPACE 1
         AIF   (T'&START NE 'O').END
@$&SYSNDX.# DS 0H
.END     MEND
./ ADD NAME=CLEAR
         MACRO
&NAME    CLEAR &FLD,&LEN,&FILL=40
         LCLC  &PRM
         AIF   ('&FLD'(1,1) EQ '(').TG06
&NAME    MVI   &FLD,X'&FILL'
         AIF   ('&LEN' EQ '').TG04
         MVC   &FLD+1(&LEN-1),&FLD
         AGO   .TG16
.TG04    ANOP
&PRM     SETC  'L'''
         MVC   &FLD+1(&PRM.&FLD-1),&FLD
         AGO   .TG16
.TG06    ANOP
         AIF   ('&LEN' NE '').TG07
         MNOTE 255,'LENGTH PARAMETER REQUIRED WITH REG TYPE MVC'
         MEXIT
.TG07    ANOP
&PRM     SETC  '&FLD(2)'
         AIF   ('&FLD(2)' NE '').TG08
&PRM     SETC  '0'
.TG08    ANOP
&NAME    MVI   &PRM.(&FLD(1)),X'&FILL'
         MVC   &PRM+1(&LEN-1,&FLD(1)),&PRM.(&FLD(1))
.TG16    ANOP
         MEND
./ ADD NAME=RES
         MACRO
&NAME    RES   &SW               RESET SWITCH &SW
&NAME    MVI   &SW,X'00'
         MEND
./ ADD NAME=IFN
         MACRO
&NAME    IFN   &TO,&SW           IF &SW RESET GO TO &TO
&NAME    CLI   &SW,X'00'
         BE    &TO
         MEND
./ ADD NAME=SET
        MACRO
&NAME    SET   &SW               SET SWITCH &SW
&NAME    MVI   &SW,X'FF'
         MEND
./ ADD NAME=ZSENT
         MACRO
&NAME    ZSENT &INNER
         GBLB  &ZSENT
         GBLB  &ZREG
         GBLC  &ZRGNAME
         AIF   (&ZREG).REGOK
         MNOTE 36,'''ZSENT'' MAY NOT BE USED WITHOUT ''ZREG'''
         MEXIT
.REGOK   AIF   (T'&NAME NE 'O').NAMEOH
         MNOTE 36,'''ZSENT'' MUST BE LABELED'
         MEXIT
.NAMEOH  ANOP
         AIF   (NOT &ZSENT).PREVOK
&ZRGNAME DS    2F       TO ALLOW PROPER CROSS REFERENCING
         MNOTE 36,'PREVIOUS ''ZSENT'' WAS NOT FOLLOWED BY A ''ZSEX'''
.PREVOK  ANOP
&ZRGNAME SETC  '@&SYSNDX.@'
&ZSENT   SETB  1
&NAME    DS    0H
         USING &NAME,RGO
         ST    RLNK,&ZRGNAME
         ST    RBAS,&ZRGNAME+4
         LR    RBAS,RGO
         DROP  RGO
         USING &NAME,RBAS
         MEND
./ ADD NAME=ZSEX
         MACRO
&NAME    ZSEX  &INC
         GBLB  &ZSENT
         GBLC  &ZRGNAME
&NAME    L     RLNK,&ZRGNAME
         L     RBAS,&ZRGNAME+4
         AIF   (T'&INC EQ 'O').NOINCR
         AIF   ('&INC' EQ '0').NOINCR
         B     &INC.(RLNK)
         AGO   .STGEN
.NOINCR  BR    RLNK
.STGEN   ANOP
         AIF   (NOT &ZSENT).END   REG STORAGE ALREADY GENERATED
&ZSENT   SETB  0
         SPACE 1
&ZRGNAME DC    2F'0'
.END     MEND
./ ADD NAME=IF
         MACRO
&NAME    IF    &TO,&SW           IF &SW SET GO TO &TO
&NAME    CLI   &SW,X'FF'
         BE    &TO
         MEND
./ ADD NAME=TAG
         MACRO
&NAME    TAG   &A
         AIF   ('&A' EQ 'C').ONC
         AIF   ('&A' EQ 'F').ONF
         AIF   ('&A' EQ 'D').OND
&NAME    DC    0H'0'
         MEXIT
.ONC     ANOP
&NAME    DC    0X'00'
         MEXIT
.ONF     ANOP
&NAME    DC    0F'0'
         MEXIT
.OND     ANOP
&NAME    DC    0D'0'
         MEND
./ ADD NAME=XISRT
            MACRO
&SYM       XISRT &AD=,&RECSIZ=,&KYSTRT=,&KYLEN=,&SORTMOD=,&IESW=
.*
.*
.*         XISRT $#@
.*         /GENERATED IDENTIFIER STRINGS(TAGS) ARE PREFIXED WITH A    /
.*         /CONCATENATION OF THE 1 CHARACTER MNEMONICS $#@(OR XX)     /
.*         /FOLLOWED BY GLOBAL GENERATED @SYSNDX STRINGS              /
.*
.*
           GBLA  &#XX,&#YY,&#ZZ,&$#@
         GBLB  &ZREG
         LCLA  &INDX
&INDX    SETA  0
         AIF   (&ZREG).ZSC4
&INDX    SETA  &INDX+4
.ZSC4    ANOP
           AIF   (T'&SORTMOD EQ 'O').OMNGEN
           AIF   ('&SORTMOD' NE 'S' AND '&SORTMOD' NE 'D').NONGEN
           AIF   ('&SORTMOD' EQ 'D').DOK
           AIF   (T'&RECSIZ EQ 'O').RSKSKL
           AIF   (T'&KYSTRT EQ 'O' OR T'&KYLEN EQ 'O').RSKSKL
.DOK       ANOP
           XSYMX &SYM,&IESW
           AIF   (&$#@ EQ 0).PSEUDOX
           ENTRY  $@#&SYSNDX
           USING $@#&SYSNDX,XXCALL
$@#&SYSNDX STM   XX1,XXN,@Z&SYSNDX
&$#@       SETA  &$#@-1
           AGO   .PSEUDO
.PSEUDOX   ANOP
&SYM       STM   XX1,XXN,@Z&SYSNDX
.PSEUDO    ANOP
           AIF   ('&SORTMOD' EQ 'S').SDCOD
         LM    0,2,&INDX+8(XXLNK)
           N     0,@88&SYSNDX
           STH   0,@8&SYSNDX+2
           BCT   0,*+4
           STC   0,@5&SYSNDX+1
           STC   0,@5&SYSNDX+7
           STC   0,@5&SYSNDX+13
           STC   1,@99&SYSNDX+3
           STC   1,@99&SYSNDX+5
           BCT   2,*+4
           STC   2,@99&SYSNDX+1
.SDCOD     ANOP
           SR    0,0
           LH    1,@9&SYSNDX
           LM    @CNT,XXADDR,&INDX+0(XXLNK)
           SR    XXADDR,@CNT
           SR    @CNT,@CNT
           D     @CNT,@8&SYSNDX
           LR    @CNT,XXADDR
           L     XXADDR,&INDX+0(XXLNK)
           S     XXADDR,@8&SYSNDX
           AIF   ('&SORTMOD' EQ 'S').SEXIT
           LA    XXLNK,&INDX+20(XXLNK)
           AGO   .DEXIT
.SEXIT     ANOP
           LA    XXLNK,&INDX+8(XXLNK)
.DEXIT     ANOP
           LR    @M,@CNT
@0&SYSNDX  LR    @N,@CNT
           SRL   @M,1
           CR    @M,0
           BE    @7&SYSNDX
@1&SYSNDX  SR    @N,@M
           LR    @J,1
@2&SYSNDX  LR    @I,@J
@3&SYSNDX  LR    XXPROD1,@I
           MH    XXPROD1,@8&SYSNDX+2
           ALR   XXPROD1,XXADDR
           LR    XXPROD0,@M
           MH    XXPROD0,@8&SYSNDX+2
           ALR   XXPROD0,XXPROD1
           AIF   (T'&KYSTRT EQ 'O' OR T'&KYLEN EQ 'O').#0110
@99&SYSNDX CLC   &KYSTRT.(&KYLEN,XXPROD1),&KYSTRT.(XXPROD0)
           AGO   .#0011
.#0110     ANOP
           MNOTE 0,'SORTMOD = D //KYSTRT=0,KYLEN=1// . . . . . . .XXXX'
@99&SYSNDX CLC   0(1,XXPROD1),0(XXPROD0)
.#0011     ANOP
           AIF   (T'&AD EQ 'O').#ADO
           AIF   ('&AD' EQ 'A').#A
           AIF   ('&AD' EQ 'D').#D
           MNOTE 1,'AD SORT PARAMETER INVALID/ . . . . . . . . . .XXXX'
           MNOTE 1,'ASCENDING SORT ASSUMED/ . . . . . . . . . . . XXXX'
.#A        ANOP
           BH    @5&SYSNDX
           AGO   .DOSRT
.#ADO      ANOP
           MNOTE 1,'AD SORT PARAMETER MISSING/ . . . . . . . . . .XXXX'
           MNOTE 1,'ASCENDING SORT ASSUMED/ . . . . . . . . . . . XXXX'
           AGO   .#A
.#D        ANOP
           BL    @5&SYSNDX
           AGO   .DOSRT
.RSKSKL    ANOP
           MNOTE 2,'SORTMOD = STATIC(S) // PARAM(S) . . . . . . . XXXX'
           MNOTE 2,'RECSIZ/KYSTRT/KYLEN OMITTED// NULL GENERATION/XXXX'
           MEXIT
.OMNGEN    ANOP
           MNOTE 2,'SORTMOD (S/D) OMITTED //NULL GENERATION . . . XXXX'
           MEXIT
.NONGEN    ANOP
           MNOTE 2,'SORTMOD (S/D) NOT SPECIFIED CORRECTLY // . . .XXXX'
           MNOTE 2,'// NULL GENERATION //. . . . . . . . . . . . .XXXX'
           MEXIT
.DOSRT     ANOP
@4&SYSNDX  LA    @J,1(0,@J)
           CR    @J,@K
           BH    @0&SYSNDX
           B     @2&SYSNDX
           AIF   (T'&RECSIZ EQ 'O').#OMRS
@5&SYSNDX  MVC   @A&SYSNDX.(&RECSIZ),0(XXPROD0)
           MVC   0(&RECSIZ,XXPROD0),0(XXPROD1)
           MVC   0(&RECSIZ,XXPROD1),@A&SYSNDX
           AGO   .#OKRS
.#OMRS     ANOP
           MNOTE 0,'DYNAMIC (D) SORT// RECSIZ=256 . . . . . . . . XXXX'
@5&SYSNDX  MVC   @A&SYSNDX.(256),0(XXPROD0)
           MVC   0(256,XXPROD0),0(XXPROD1)
           MVC   0(256,XXPROD1),@A&SYSNDX
.#OKRS     ANOP
           SR    @I,@M
           CR    @I,1
           BL    @4&SYSNDX
           B     @3&SYSNDX
@7&SYSNDX  LM    XX1,XXN,@Z&SYSNDX
           BR    XXLNK
@9&SYSNDX  DC    H'1'
@Z&SYSNDX  DC    10F'0'
           AIF   (T'&RECSIZ EQ 'O' OR T'&RECSIZ EQ 'N').#OMRSX
.SDOKNZ    ANOP
@8&SYSNDX  DC    A(&RECSIZ)
@A&SYSNDX  DC    CL(&RECSIZ)' '
           AGO   .#OKRSX
.#OMRSX    ANOP
           AIF   (&RECSIZ EQ 0).RSPOS
           AGO   .SDOKNZ
.RSPOS     ANOP
@8&SYSNDX  DC    A(256)
@A&SYSNDX  DC    CL256' '
.#OKRSX    ANOP
           CNOP  0,4
@88&SYSNDX DC    X'000001FF'
           DROP  XXCALL
           AIF   (&#XX GT 0).ZZGEN
&#XX       SETA  &#XX+1
.XXGEN     ANOP
           XXEQU
.ZZGEN     ANOP
           AIF   (&#ZZ GT 0).XITGEN
&#ZZ       SETA  &#ZZ+1
           ZZEQU
.XITGEN    ANOP
           MEND
./ ADD NAME=XSYMX
           MACRO
           XSYMX &SYM,&IESW
           GBLA  &$#@
           AIF   (T'&SYM EQ 'O').XGENX
           AIF   (T'&IESW EQ 'O').OMIO
           AIF   ('&IESW' EQ 'INT').NOIO
           AIF   ('&IESW' EQ 'EXT').IO
           MNOTE 0,'INVALID IESW(INT/EXT)/EXT ASSUMED . . . . . . XXXX'
           AGO   .IO
.OMIO      ANOP
           MNOTE 0,'IESW OMITTED/EXT ASSUMED. . . . . . . . . . . XXXX'
.IO        ANOP
           ENTRY &SYM
.NOIO      ANOP
           USING &SYM,XXCALL
.XIT       MEXIT
.XGENX     ANOP
           MNOTE 2,'SORT SUBROUTINE NAME MISSING  . . . . . . . . XXXX'
           MNOTE 2,'PSEUDO TAG AND ENTRY GENERATED . . . . . . .  XXXX'
&$#@       SETA  &$#@+1
           AGO   .XIT
           MEND
./ ADD NAME=XXEQU
           MACRO
           XXEQU
XXBAS      EQU   RBAS
XXLNK      EQU   RLNK
XXCALL     EQU   RGO
XX1        EQU   2
XXN      EQU   11
XMPCNODD   EQU 4
XMPCNEVN   EQU 11
XXPROD0    EQU 4
XXPROD1    EQU   10
XXADDR     EQU   7
           MEND
./ ADD NAME=ZZEQU
           MACRO
           ZZEQU
XXTEMP     EQU 4
@WRKXX     EQU   9
@CNT       EQU   6
@I         EQU   2
@J         EQU   3
@K         EQU   8
@M         EQU   5
@N         EQU   8
           MEND
