T586P05  TITLE 'MONSANTO LIBRARIAN INPUT EXIT'
HSTPGRIX CSECT
R0       EQU   0                   TEMP. WORK REGISTER
R1       EQU   1                   POINTS TO START OF PARAMETER LIST
R2       EQU   2                   TEMP. WORK REGISTER
R3       EQU   3                   BASE REGISTER
R4       EQU   4                   POINTS TO RECORD IN LIBRARIAN
R5       EQU   5                   POINTS TO HALF WORD RETURN CODE
R6       EQU   6                   POINTS TO FULL WORD IN LIBRARIAN
R7       EQU   7                   DSECT POINTER
R8       EQU   8                   UNUSED
R9       EQU   9                   UNUSED
R10      EQU   10                  UNUSED
R11      EQU   11                  UNUSED
R12      EQU   12                  UNUSED
R13      EQU   13                  REGISTER SAVE AREA POINTER
R14      EQU   14                  RETURN ADDR. TO LIBRARIAN
R15      EQU   15                  EXIT ENTRY POINT ADDRESS
         EJECT
*
* ASSUMPTIONS -
*
*        THE LIBRARIAN USES THE STANDARD IBM LINKAGE CONVENTIONS WHEN
*        CALLING THE USER EXIT ROUTINE. REGISTER 1 POINTS TO THE START
*        OF A PARAMETER LIST CONSISTING OF 3 FULL-WORD ADDRESSES AS
*        FOLLOWS--
*        1. THE FIRST PARAMETER POINTS TO THE 80-BYTE CARD IMAGE IN
*           THE LIBRARIAN
*        2. THE SECOND PARAMETER POINTS TO A HALF-WORD AREA IN THE
*           LIBRARIAN CONTAINING THE RETURN CODE.
*        3. THE THIRD PARAMETER POINTS TO A FULL-WORD IN THE LIBRARIAN,
*           USED ONLY BY THE USER EXIT ROUTINE, IF NEEDED.
*
*        WHEN CONTROL IS RETURNED TO THE LIBRARIAN, THE RETURN CODE
*        PASSED IN THE HALF-WORD OF THE SECOND PARAMETER WILL BE TESTED
*        FOR THE FOLLOWING VALUES--
*        0 - THE USER EXIT ROUTINE SHOULD NOT BE CALLED AGAIN.
*        4 - REPLACEMENT
*        8 - INSERTION
*        12- DELETION
*        ANY OTHER VALUE IS TREATED THE SAME AS CODE 0
*
*        THE LIBRARIAN WILL PASS AN -END CARD TO THIS ROUTINE
*        REGARDLESS OF WHETHER OR NOT ONE IS GIVEN TO IT.
*
*        IF A -MCD CARD IS SUPPLIED, THIS EXIT ROUTINE IS NOT EXECUTED.
*
         EJECT
*
*        PROGRAM INITIALIZATION ROUTINE
*
         USING *,R3
         USING DUMMY,R7
BEGIN    SAVE  (14,12)             SAVE ALL REGISTERS
         LR    R2,R13              SAVE REGISTER 13
         LR    R3,R15              INIT. BASE REGISTER
         LM    R4,R6,0(R1)         LOAD PARAMETER LIST
         ICM   R7,15,0(R6)         LOAD AND TEST DSECT POINTER
**********IF SYSTEM 360 REPLACE CARD ABOVE WITH 2 CARDS BELOW  *******
*        L     R7,0(R6)           REPLACEMENT FOR CARD 580 ***#1
*        LTR   R7,R7              REPLACEMENT FOR CARD 580 ***#2
         BNZ   START               GOT MAIN-STORAGE
         GETMAIN R,LV=DUMMYL       GET SOME WORKING STORAGE
         ST    R1,0(R6)            STORE DSECT ADDR IN LIBRARIAN AREA
         LR    R7,R1               INIT. DSECT REGISTER
         XC    0(72,R1),0(R1)      CLEAR REGISTER SAVE AREA
         MVI   BLANK,C' '          SET RECORD -
         MVC   REC1(242),BLANK     CLEAR CARD SET AREA.
         MVC   BRANCH,=A(START1)   INIT. BRANCH POINTER
START    LA    R13,SAVEREG         SET SAVE AREA POINTER
         ST    R13,8(R2)           PASS SAVE-AREA POINTER TO LIBR.
         ST    R2,4(R13)           STORE SAVE-AREA POINTER OF LIBR.
         CLC   0(2,R5),=H'0'       IS THIS END OF FILE CONDITION
         BNE   NORET               YES--RETURN TO LIBRARIAN
         MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         L     R1,BRANCH           LOAD BRANCH ADDR.
         BR    R1                  BRANCH TO RESP. ROUTINE
         EJECT
*
*        RTN. TO SCAN FOR -SEL WITH COPY FUNCTION
*
START1   CLI   0(R4),C'-'          IS THIS A CONTROL STATEMENT
         BNE   RETURN              NO--RETURN TO LIBRARIAN
         CLC   1(4,R4),=CL4'MCD'   IS THIS A MANAGEMENT CNTRL-STATEMENT
         BE    NORET               YES--SET DO NOT RETURN CODE
         NI    SWBYTE,X'00'        CLEAR SWITCHES
*        CHECK -OPT ADD & -SEL CARDS FOR PUNCH OPERAND
*
         CLC   1(4,R4),=C'OPT '    -OPT CARD?
         BE    PNCHLOOK            YES. CHECK FOR PUNCH
         CLC   1(4,R4),=C'SEL '    -SEL STATEMENT?
         BE    PNCHLOOK            YES. SCAN FOR PUNCH
         CLC   1(4,R4),=C'ADD '    -ADD CARD?
         BNE   PNCHBYPP            NO. BYPASS SCAN FOR PUNCH
PNCHLOOK EQU   *
         LA    R1,4(0,R4)          JUMP TO FIRST OPERAND
         LA    R0,74(0,R4)         GET LAST POSSIBLE COMPARE ADDRESS
         SR    R0,R1               GET SEARCH LENGTH
         LPR   R0,R0               MAKE SURE IT IS POSITIVE
PNCHLOOP EQU   *
         CLC   0(6,R1),=C' PUNCH'  IS PUNCH FIRST OPERAND?
         BE    PNCHFND             YES. BRANCH.
         CLC   0(6,R1),=C',PUNCH'  PUNCH ANY OTHER OPERAND?
         BE    PNCHFND             YES.BRANCH
         LA    R1,1(0,R1)          JUMP ONE NOTCH ON CARD
         BCT   R0,PNCHLOOP         GO ROUND AGAIN
PNCHBYPP EQU   *
         CLC   1(4,R4),=CL4'SEL '  IS IT A SEL CARD?
         BE    SELANAL             YES. ANALYZE IT.
         CLC   1(4,R4),=C'ADD '    ADD CARD?
         BE    STORADD             YES. STORE IT
         CLC   1(6,R4),=C'PUNCH '  IS IT A PUNCH UTILITY?
         BE    UTERROR             YES. UTILITY ERROR
         CLC   1(5,R4),=C'COPY '   IS IT A COPY UTILITY
         BE    UTERROR             YES. UTILITY ERROR
         CLC   1(5,R4),=C'HSTD '   IS IT A HSTD CARD?
         BNE   RETURN              NO. RETURN TO LIBRARYN
         MVC   50(30,R4),MSG2
         MVC   50(30,R4),MSG1      MOVE ERROR MESSAGE
         MVC   55(5,R4),1(R4)      MODIFY IT
         MVI   4(R4),C' '          CHANGE -HSTD TO -HST
         B     RETURN              RETURN TO LIBRARYN
UTERROR  EQU   *
         MVC   50(30,R4),MSG1      MOVE ERROR MESSAGE
         MVC   55(5,R4),1(R4)     MOVE OPERATION REQUESTED TO MSG.
         B     ERROR               GO TO COMMON ERROR ROUTINE
PNCHFND  EQU   *
         MVC   50(30,R4),MSG1      MOVE PUNCH RESTRICTED MESSAGE
         B     ERROR               GO TO ERROR ROUTINE
SELANAL  EQU   *
         TRT   6(63,R4),COMMA      LOOK FOR FIRST COMMA
         BZ    RETURN              RETURN IF NONE
         LA    R1,6(0,R1)          JUMP OVER SECOND COMMA
         LA    R0,76(0,R4)         GET END OF CARD -4 ADDRESS
         SR    R0,R1               GET SEARCH LENGTH
         LPR   R0,R0               MAKE SURE ITS POSITIVE
SELALOOP EQU   *
         CLI   0(R1),C' '          END OF OPERANDS?
         BE    SELDECSN            YES. MAKE DECISIONS
         CLC   0(5,R1),=C'COPY='   COPY OF MODULE REQUESTED?
         BNE   *+8                 NO.JUMP NEXT INSTRUCTION.
         OI    SWBYTE,COPYSW       YES. TURN ON COPY SWITCH
         CLC   0(4,R1),=C'TEMP'    IS IT A TEMPORARY UPDATE?
         BNE   *+8                 NO. JUMP NEXT INSTRUCTION.
         OI    SWBYTE,TEMPSW       YES. TURN ON TEMP SWITCH.
         CLC   0(5,R1),=C'VERS='   VERSION CODED?
         BNE   *+8                 NO. JUMP NEXT INSTRUCTION.
         OI    SWBYTE,VERSSW       YES.TURN ON VERSION SWITCH.
         LA    R1,1(0,R1)          MOVE ALONG ONE BYTE ON CARD
         BCT   R0,SELALOOP         GO THROUGH TESTS AGAIN.
SELDECSN EQU   *
         TM    SWBYTE,COPYSW       HAS A COPY BEEN REQUESTED
         BNO   TESTVERS            NO. TEST FOR TEMP OR VERS=
STORADD  EQU   *    STORE -ADD CARD AND LOOK FOR -PGMR & -DESC CARDS
         MVC   REC1,0(R4)          STORE SEL CARD
         MVC   BRANCH,=A(FOUND)    SET BRANCH FOR NEXT RECORD
         B     DELETE              DELETE -SEL CARD
TESTVERS EQU   *
         TM    SWBYTE,VORT         TEMP OR VERS SPECIFIED?
         BC    5,RETURN            YES. RETURN TO LIBRARIAN.
         MVC   50(30,R4),MSG2      NO. MOVE MESSAGE FOR USER.
ERROR    EQU   *
         MVI   7(R4),C','          PUT COMMA IN COL8 OF CONTROL CARD
         B     RETURN
*
*        CHECK THAT -ADD OR -SEL/COPY ARE FOLLOWED BY -PGMR AND -DESC
*
FOUND    EQU   *
         CLC   1(4,R4),=C'ADD '    NEXT CARD AN ADD A CARD
         BNE   *+8                 NO. SKIP NEXT INSTRUCTION.
         OI    SWBYTE,NXTFNDSW     INDICATE CARD IS ADD OR SEL
         CLC   1(4,R4),=C'SEL '    NEXT CARD A SEL CARD?
         BNE   *+8                 NO. SKIP NEXT INSTRUCTION.
         OI    SWBYTE,NXTFNDSW     INDICATE CARD IS ADD OR SEL
         CLC   0(6,R4),=C'-PGMR '  PGMR SUPPLIED?
         BNE   *+8                 NO. JUMP NEXT INSTN.
         OI    SWBYTE,PGMRSW       YES. INDICATE IT
         CLC   0(6,R4),=C'-DESC '  DESC SUPPLIED?
         BNE   *+8                 NO. JUMP NEXT INSTRUCTION
         OI    SWBYTE,DESCSW       YES. INDICATE IT.
         CLC   REC2,REC2-1         IS RECORD2 OCCUPIED?
         BNE   STOR3               YES. STORE IN AREA 3
         MVC   REC2,0(R4)          NO. STORE RECORD 2
         TM    SWBYTE,NXTFNDSW     RECORD JUST STORED ADD OR SEL?
         BNO   DELETE              NO. DELETE RECORD FROM I/P.
         B     INVALID             YES. INVALIDATE REC1.
STOR3    EQU   *
         MVC   REC3,0(R4)          STORE RECORD 3.
         TM    SWBYTE,NXTFNDSW     IS THIS REC AN ADD OR SEL.
         BO    INVALID             YES. INVALIDATE REC1
         TM    SWBYTE,PGRNDESC     BOTH PGMR & DESC SUPPLIED?
         BO    VALID               YES. MOVE RECORDS BACK TO LIBRN.
INVALID  EQU   *
         MVI   REC1+7,C','         NO. INVALIDATE -ADD SEL/COPY CARD.
         MVC   REC1+50(30),MSG3    TELL USER OF REQUIRMENTS.
*
*        RTN. TO PASS STORED RECORDS BACK TO LIBRARIAN
*
VALID    MVC   0(80,R4),REC1       MOVE RECORD BACK TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   BRANCH,=A(VALID1)   SET BRANCH ADDR FOR NEXT RECORD
         MVC   REC1,REC1-1         SET STORAGE AREA TO BLANKS
         B     RETURN              RETURN TO LIBRARIAN
VALID1   CLC   REC2,REC2-1         WAS PGMR RECORD PASSED ALREADY
         BE    VALID2              YES--PASS HST RECORD TO LIBR.
         MVC   0(80,R4),REC2       MOVE PGMR RECORD TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   REC2,REC2-1         SET STORAGE AREA TO BLANKS
         CLC   REC3,REC3-1         IS THERE A HST RECORD TO BE PASSED
         BE    VALID3              NO--SET RETURN CODE TO REPLACE
         B     RETURN              RETURN TO LIBRARIAN
VALID2   MVC   0(80,R4),REC3       MOVE HST RECORD TO LIBRARIAN
VALID3   MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         MVC   REC3,REC3-1         SET STORAGE AREA TO BLANKS
         MVC   BRANCH,=A(START1)   SET BRANCH ADDR FOR NEXT RECORD
         TM    SWBYTE,NXTFNDSW     THIS CARD TO BE RE-CYCLED THRU EXIT?
         BO    START1              YES. GO TO BEGINING AGAIN.
         B     RETURN              RETURN TO LIBRARIAN
         EJECT
*
*        RTN. TO SET RETURN CODES AND GO BACK TO LIBRARIAN
*
DELETE   MVC   0(2,R5),=H'12'      SET DELETE RETURN CODE
         B     RETURN              RETURN TO LIBRARIAN
NORET    MVC   0(2,R5),=H'0'       SET DO-NOT-RETURN CODE
RETURN   L     R13,4(R13)          RESET REGISTER SAVE AREA POINTER
         RETURN (14,12)            RETURN TO LIBRARIAN
         EJECT
         LTORG
COMMA    DC    107X'00'
         DC    001X'FF'            COMMA
         DC    148X'00'
MSG1     DC    CL30'*****PUNCH RESTRICTED. SEE TSG'
MSG2     DC    CL30'*****TEMP(S) / VERS= MANDATORY'
MSG3     DC    CL30'ADD/COPY REQUIRES DESC && PGMR'
COPYSW   EQU   128
TEMPSW   EQU   64
VERSSW   EQU   32
PUNCHSW  EQU   16
PGMRSW   EQU   8
DESCSW   EQU   4
NXTFNDSW EQU   2
PGRNDESC       EQU                 PGMRSW+DESCSW
VORT     EQU   TEMPSW+VERSSW
         EJECT
*
*        DUMMY SECTION
*
DUMMY    DSECT
SAVEREG  DS    9D                  REGISTER SAVE AREA
BRANCH   DS    F                   BRANCH ADDRESS
SWBYTE   DS    XL1
BLANK    DS    C                   BLANK POSITION
REC1     DS    CL80            -SEL  CNTRL STMT STORAGE AREA
BLANCK2  DS    C
REC2     DS    CL80                -PGMR CNTRL-STAT. STORAGE AREA
BLANK3   DS    C
REC3     DS    CL80                -HST  CNTRL-STAT. STORAGE AREA
DUMMYL   EQU   *-DUMMY             LENGTH OF DSECT
         END
/*
