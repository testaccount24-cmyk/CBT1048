LIBX     TITLE 'LIB-EXIT TO ENFORCE USE OF -PGMR AND -HST CARDS'
HSTPGRIX CSECT
R0       EQU   0                   TEMP. WORK REGISTER
R1       EQU   1                   POINTS TO START OF PARAMETER LIST
R2       EQU   2                   TEMP. WORK REGISTER
R3       EQU   3                   BASE REGISTER
R4       EQU   4                   POINTS TO RECORD IN LIBRARIAN
R5       EQU   5                   POINTS TO HALF WORD RETURN CODE
R6       EQU   6                   POINTS TO FULL WORD IN LIBRARIAN
R7       EQU   7                   DSECT POINTER
R8       EQU   8                   UNUSED
R9       EQU   9                   UNUSED
R10      EQU   10                  UNUSED
R11      EQU   11                  UNUSED
R12      EQU   12                  UNUSED
R13      EQU   13                  REGISTER SAVE AREA POINTER
R14      EQU   14                  RETURN ADDR. TO LIBRARIAN
R15      EQU   15                  EXIT ENTRY POINT ADDRESS
         EJECT
*
* ASSUMPTIONS -
*
*        THE LIBRARIAN USES THE STANDARD IBM LINKAGE CONVENTIONS WHEN
*        CALLING THE USER EXIT ROUTINE. REGISTER 1 POINTS TO THE START
*        OF A PARAMETER LIST CONSISTING OF 3 FULL-WORD ADDRESSES AS
*        FOLLOWS--
*        1. THE FIRST PARAMETER POINTS TO THE 80-BYTE CARD IMAGE IN
*           THE LIBRARIAN
*        2. THE SECOND PARAMETER POINTS TO A HALF-WORD AREA IN THE
*           LIBRARIAN CONTAINING THE RETURN CODE.
*        3. THE THIRD PARAMETER POINTS TO A FULL-WORD IN THE LIBRARIAN,
*           USED ONLY BY THE USER EXIT ROUTINE, IF NEEDED.
*
*        WHEN CONTROL IS RETURNED TO THE LIBRARIAN, THE RETURN CODE
*        PASSED IN THE HALF-WORD OF THE SECOND PARAMETER WILL BE TESTED
*        FOR THE FOLLOWING VALUES--
*        0 - THE USER EXIT ROUTINE SHOULD NOT BE CALLED AGAIN.
*        4 - REPLACEMENT
*        8 - INSERTION
*        12- DELETION
*        ANY OTHER VALUE IS TREATED THE SAME AS CODE 0
*
*        THE LIBRARIAN WILL PASS AN -END CARD TO THIS ROUTINE
*        REGARDLESS OF WHETHER OR NOT ONE IS GIVEN TO IT.
*
*        IF A -MCD CARD IS SUPPLIED, THIS EXIT ROUTINE IS NOT EXECUTED.
*
         EJECT
*
*        PROGRAM INITIALIZATION ROUTINE
*
         USING *,R3
         USING DUMMY,R7
BEGIN    SAVE  (14,12)             SAVE ALL REGISTERS
         LR    R2,R13              SAVE REGISTER 13
         LR    R3,R15              INIT. BASE REGISTER
         LM    R4,R6,0(R1)         LOAD PARAMETER LIST
         ICM   R7,15,0(R6)         LOAD AND TEST DSECT POINTER
**********IF SYSTEM 360 REPLACE CARD ABOVE WITH 2 CARDS BELOW  *******
*        L     R7,0(R6)           REPLACEMENT FOR CARD 580 ***#1
*        LTR   R7,R7              REPLACEMENT FOR CARD 580 ***#2
         BNZ   START               GOT MAIN-STORAGE
         GETMAIN R,LV=320          GET 320 BYTES OF MAIN STORAGE
         ST    R1,0(R6)            STORE DSECT ADDR IN LIBRARIAN AREA
         LR    R7,R1               INIT. DSECT REGISTER
         XC    0(72,R1),0(R1)      CLEAR REGISTER SAVE AREA
         MVI   BLANK,C' '          SET RECORD -
         MVC   REC1(240),BLANK         SAVE AREA TO BLANKS
         MVC   BRANCH,=A(START1)   INIT. BRANCH POINTER
START    LA    R13,SAVEREG         SET SAVE AREA POINTER
         ST    R13,8(R2)           PASS SAVE-AREA POINTER TO LIBR.
         ST    R2,4(R13)           STORE SAVE-AREA POINTER OF LIBR.
         CLC   0(2,R5),=H'0'       IS THIS END OF FILE CONDITION
         BNE   NORET               YES--RETURN TO LIBRARIAN
         MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         L     R1,BRANCH           LOAD BRANCH ADDR.
         BR    R1                  BRANCH TO RESP. ROUTINE
         EJECT
*
*        RTN. TO SCAN FOR -SEL WITH COPY FUNCTION
*
START1   CLI   0(R4),C'-'          IS THIS A CONTROL STATEMENT
         BNE   RETURN              NO--RETURN TO LIBRARIAN
         CLC   1(4,R4),=CL4'MCD'   IS THIS A MANAGEMENT CNTRL-STATEMENT
         BE    NORET               YES--SET DO NOT RETURN CODE
         CLC   1(4,R4),=CL4'SEL'   IS THIS A SEL-CONTROL STATEMENT
         BNE   RETURN              NO--RETURN TO LIBRARIAN
         TRT   6(63,R4),COMMA      SCAN RECORD FOR FIRST COMMA
         BZ    RETURN              NO COMMA--RETURN TO LIBRARIAN
         LA    R1,5(R1)            BUMP POINTER TO 2ND COMMA IF ANY
         LA    R0,75(R4)           SET POINTER TO LAST POS.LOC.OF COPY
         SR    R0,R1               COMPUTE LENGTH OF REMAINING POSIT.
         LPR   R0,R0               MAKE LENGTH POSITIVE
START2   CLI   0(R1),C' '          IS POSITION TESTED EQ BLANKS
         BE    RETURN              YES--RETURN TO LIBRARIAN
         CLC   0(6,R1),=C',COPY='  SCAN RECORD FOR COPY STATEMENT
         BE    START3              IF PRESENT--STORE SEL-CONTROL STAT.
         LA    R1,1(R1)            BUMP POINTER TO NEXT RECORD POSITION
         BCT   R0,START2           LOOP TO END OF CARD -6
         B     RETURN              NO COPY FUNCTION REQUESTED
START3   MVC   REC1,0(R4)          STORE SEL-CONTROL STATEMENT
         MVC   BRANCH,=A(FOUND)    SET BRANCH ADDR FOR NEXT RECORD
         B     DELETE              GO TO DELETE SEL-CONTROL STATEMENT
         EJECT
*
*        RTN. TO CHECK IF -SEL IS FOLLOWED BY -PGMR AND -HST
*
FOUND    EQU   *
         CLI   REC2,C'-'           WAS PGMR STATEMENT STORED
         BE    FOUND1              YES--CHECK AND STORE HST STATEMENT
         MVC   REC2,0(R4)          STORE RECORD
         CLC   REC2(6),=CL6'-PGMR' IS THIS A PGMR-STATEMENT
         BNE   INVALID             NO--MAKE SEL-STATEMENT INVALID
         B     DELETE              DELETE PGMR-STATEMENT
FOUND1   MVC   REC3,0(R4)          STORE RECORD
         CLC   REC3(5),=CL5'-HST'  IS THIS A HST-STATEMENT
         BE    VALID               YES--PASS STORED RECORDS BACK TO LIB
*
*        RTN. TO MAKE -SEL PASS-WORD INVALID -AAAA-
*
INVALID  TRT   REC1,COMMA          SCAN RECORD FOR FIRST COMMA
         BZ    VALID               THIS SHOULD NOT HAPPEN
         MVC   1(4,R1),=4C'A'      SET PASS-WORD TO INVALID CHARACTERS
*
*        RTN. TO PASS STORED RECORDS BACK TO LIBRARIAN
*
VALID    MVC   0(80,R4),REC1       MOVE RECORD BACK TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   BRANCH,=A(VALID1)   SET BRANCH ADDR FOR NEXT RECORD
         MVC   REC1,REC1-1         SET STORAGE AREA TO BLANKS
         B     RETURN              RETURN TO LIBRARIAN
VALID1   CLC   REC2,REC2-1         WAS PGMR RECORD PASSED ALREADY
         BE    VALID2              YES--PASS HST RECORD TO LIBR.
         MVC   0(80,R4),REC2       MOVE PGMR RECORD TO LIBRARIAN
         MVC   0(2,R5),=H'8'       SET INSERT RETURN CODE
         MVC   REC2,REC2-1         SET STORAGE AREA TO BLANKS
         CLC   REC3,REC3-1         IS THERE A HST RECORD TO BE PASSED
         BE    VALID3              NO--SET RETURN CODE TO REPLACE
         B     RETURN              RETURN TO LIBRARIAN
VALID2   MVC   0(80,R4),REC3       MOVE HST RECORD TO LIBRARIAN
VALID3   MVC   0(2,R5),=H'4'       SET REPLACEMENT RETURN CODE
         MVC   REC3,REC3-1         SET STORAGE AREA TO BLANKS
         MVC   BRANCH,=A(START1)   SET BRANCH ADDR FOR NEXT RECORD
         B     RETURN              RETURN TO LIBRARIAN
         EJECT
*
*        RTN. TO SET RETURN CODES AND GO BACK TO LIBRARIAN
*
DELETE   MVC   0(2,R5),=H'12'      SET DELETE RETURN CODE
         B     RETURN              RETURN TO LIBRARIAN
NORET    MVC   0(2,R5),=H'0'       SET DO-NOT-RETURN CODE
RETURN   L     R13,4(R13)          RESET REGISTER SAVE AREA POINTER
         RETURN (14,12)            RETURN TO LIBRARIAN
         EJECT
         LTORG
COMMA    DC    107X'00'
         DC    001X'FF'            COMMA
         DC    148X'00'
         EJECT
*
*        DUMMY SECTION
*
DUMMY    DSECT
SAVEREG  DS    9D                  REGISTER SAVE AREA
BRANCH   DS    F                   BRANCH ADDRESS
BLANK    DS    C                   BLANK POSITION
REC1     DS    CL80                -SEL  CNTRL-STAT. STORAGE AREA
REC2     DS    CL80                -PGMR CNTRL-STAT. STORAGE AREA
REC3     DS    CL80                -HST  CNTRL-STAT. STORAGE AREA
         END
