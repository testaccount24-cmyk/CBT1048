//JEAUT506 JOB (1580,5),'0053 UT506   ',CLASS=N
//JOBLIB DD DSN=SYS2.TESTLIB,DISP=SHR
//STEP1  EXEC ASMFCL,L=H
         TITLE 'PDS DIRECTORY PROCESSING ROUTINE'
***********************************************************************
*                      U T 5 0 6 A                                    *
*                                                                     *
*       PROCESS PROGRAM LIBRARY DIRECTORY AND CREATES ALIAS ENTRY     *
*        REFERENCE BLOCKS FOR ALL ALIASES ON THE LIBRARY.             *
*                                                                     *
*        REGISTER USAGE
*        REG0  PARAMETER REGISTER AND WORK REGISTER                   *
*        REG1  PARAMETER REGISTER AND WORK REGISTER                   *
*        REG2  WORK REGISTER                                          *
*        REG3  ADDRESS OF CURRENT ENTRY OF DIRECTORY                  *
*        REG4  LENGTH OF ACTIVE DATA IN CURRENT BLOCK                 *
*        REG5  ADDRESS OF END OF ACTIVE DATA IN DIRECTORY BLOCK       *
*        REG6  WORK REGISTER                                          *
*        REG7  ADDRESS OF OUTPUT CHAIN                                *
*        REG11 LINK REGISTER FOR DOENTRY ROUTINE                      *
*        REG12 WORK REGISTER                                          *
*        REG13 BASE ADDRESS. ADDRESS OF REGISTER SAVE AREA            *
*        REG14 PROGRAM LINK REGISTER                                  *
*        REG15 PROGRAM LINK REGISTER AND WORK REGISTER                *
*                                                                     *
***********************************************************************
REG0    EQU   00
REG1    EQU   01
REG2    EQU   02
REG3    EQU   03
REG4    EQU   04
REG5    EQU   05
REG6    EQU   06
REG7    EQU   07
REG8    EQU   08
REG9    EQU   09
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
UT506A   CSECT
         PGMIN  USING=(R13)
         EJECT
***********************************************************************
*        OPEN THE INPUT PDS FILE AND INITIALISE WORK AREAS            *
***********************************************************************
         SPACE 2
OPENFILE DS    0H
         OPEN  (PDS,INPUT)         OPEN THE PDS DIRECTORY
         L     REG7,4(REG13)       LOAD ADDRESS CALLERS SAVE AREA
         LA    REG7,24(REG7)       LOAD ADDRESS OF RETURN REG1 S/A
         XC    0(4,REG7),0(REG7)   CLEAR CHAIN
         EJECT
***********************************************************************
*        READ EACH BLOCK INTHE DIRECTORY                              *
***********************************************************************
         SPACE 2
READBLK  DS    0H
         GET   PDS                 READ A BLOCK FROM THE PDS
         LR    REG3,REG1           LOAD BASE ADDRESS OF BLOCK
         LH    REG4,0(REG3)        LOAD LZNGTH OF USED DATA
         LTR   REG4,REG4           TEST FOR UNUSED BLOCK
         BZ    READBLK             YES. IGNORE IT AND GET NEXT BLOCK
         LA    REG5,0(REG4,REG3)   LOAD ADDRESS OF END OF DATA
         LA    REG3,2(REG3)        LOAD ADDRESS OF FIRST ENTRY
         CLC   0(8,REG3),HEXFF     TEST FOR END OF DIRECTORY
         BE    EODADX              YES. TERMINATE PROCESSING
SENDBLK  BAL   REG11,DOENTRY       GO PROCESS THIS ENTRY OF PDS
         IC    REG6,11(REG3)       LOAD LENGTH OF ENTRY IN HALFWDS
         N     REG6,=F'31'         STRIP OF ALIAS BIT ETC
         AR    REG6,REG6           CONVERT TO BYTES
         LA    REG3,12(REG6,REG3)  LOAD ADDRESS OF NEXT ENTRY
         CLC   0(8,REG3),HEXFF     TEST FOR END OF PDS
         BE    EODADX              BRANCH TO EXIT ROUTINE
         CR    REG3,REG5           TEST FOR END OF THIS BLOCK
         BL    SENDBLK             MORE ENTRIES. PROCESS
         B     READBLK             GO READ NEXT BLOCK
         EJECT
***********************************************************************
*        PROCESS THE PDS ENTRY                                        *
***********************************************************************
         SPACE 2
DOENTRY  DS    0H
         TM    11(REG3),X'80'      TEST FOR ALIAS ENTRY
         BZ    DOEXIT              NO. RETURN TO CALLER
         GETMAIN R,LV=16           GET CORE FOR ELEMENT
         ST    REG1,0(REG7)        CHAIN THIS ELEMENT TO LAST
         LR    REG7,REG1           SAVE ADDRESS OF THIS ELEMENT
         MVC   4(12,REG7),0(REG3)  MOVE ALIAS NAME TO BLOCK
         XC    0(4,REG7),0(REG7)   CLEAR THE CHAIN FIELD
DOEXIT   BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        TERMINATION ROUTINES                                         *
***********************************************************************
         SPACE 2
EODADX   DS    0H
TERMINTE DS    0H
         CLOSE (PDS)               CLOSE FILES
         EJECT
***********************************************************************
*        PROGRAM EXIT ROUTINE                                         *
***********************************************************************
         SPACE 2
EXITPGM  DS    0H
         PGMOUT
         EJECT
PDS      DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,RECFM=F,                X
               LRECL=256,BLKSIZE=256,EODAD=TERMINTE
HEXFF    DC    8X'FF'
         LTORG
         END
//LKED.SYSLMOD DD DSN=SYS2.TESTLIB,DISP=SHR
//LINKLIB2 DD DSN=SYS1.LINKLIB2,DISP=SHR
 INCLUDE LINKLIB2(UT506)
 ENTRY UT506
 NAME UT506(R)
/*
// EXEC PGM=IEBCOPY,REGION=100K
//SYSPRINT DD SYSOUT=A
//IN DD DSN=SYS1.LINKLIB2,DISP=SHR
//OUT DD DSN=&&DUMMY,UNIT=SYSDA,SPACE=(TRK,(10,10,10)),
// DCB=(RECFM=U,BLKSIZE=13030),DISP=(,PASS)
 COPY O=OUT,I=IN
 SELECT MEMBER=DUMMY
// EXEC PGM=UT506,REGION=80K
//STEPLIB DD DSN=SYS2.TESTLIB,DISP=SHR
//SYSPRINT DD SYSOUT=A
//SYSLIN DD SYSOUT=A,DCB=(LRECL=80,RECFM=F,BLKSIZE=80)
//SYSUT1 DD DSN=BOSS.PROGLIB,DISP=SHR
//DUMMYLIB DD DSN=&&DUMMY,DISP=(OLD,DELETE)
//SYSUDUMP DD SYSOUT=A
//SYSIN DD *
 REPLACE RIGAM
/*
