                                 TAPE01
                                 ======

  Note:  In all directories, the member TRAN.TBL was changed to either
         TRANTBL or TRAN.  It may be necessary to change these back.
         I think that these (TRAN.TBL) members are used in connection
         with the C-language programs that translate the "tape" contents
         from ASCII to EBCDIC, and which aren't included here.
         (Not necessary - I already translated the source material to
         EBCDIC. SBG - 01/03/2024)

  The following material is from David Cartwright:   (as sent in)

  This CD contains a master copy of the famous TAPE01 from Monsanto in
  Brussels as well as a number of related items intended to be of use to
  anyone wanting to emulate MVS on Hercules and wallow in nostalgia for a
  bygone era. Specifically, the directories on the CD are these:

  TAPE01    A  complete image of TAPE01 in its original EBCDIC
  ASCII     All the source converted to ASCII in a UNIX friendly way
  JCL       A series of MVS jobs to recreate all the original source
  UTILITY   UNIX programs which create ASCII and JCL from TAPE01

  The TAPE01 directory is a bit by bit copy of all the data from the original
  tape including all the headers and trailers. It is constructed in such a
  way as to be easily identified to Hercules as a 9 track tape which can be
  mounted and processed in exactly the same way as a real 3420 or 3480 tape
  drive.

  The ASCII directory contains subdirectories for each of the source files on
  the tape and the members of those source files are present as individual
  files within those subdirectories. The text has been converted into ASCII
  and Line Feeds added as appropriate. Be aware that some of the original
  source data (object decks) is binary and cannot be validly converted to
  ASCII, so those few members are not usable.  (This directory is what I
  translated into EBCDIC.  SBG)

  The JCL directory contains one file for each library on the tape and each
  file contains one or more MVS JCL jobs using simple IEBGENER steps to
  create and populate that library when uploaded to MVS and executed.
  This may seem a crude approach but the nature of the contents of the
  libraries did not lend itself to anything more sophisticated.

  The UTILITY directory contains a number of programs and the MAKEFILE to
  build them on LINUX.  These have been used to process the TAPE01 directory
  into the ASCII and JCL directories. They are as follows:

  generjcl.c This program reads a file from TAPE01 and creates the JCL to
             allocate and populate it on MVS. The file should use IEBGENER
             separators ("MEMBER NAME xxx") for each member.

  generunx.c This program reads a file from TAPE01 and creates an ASCII
             version of it in a designated directory with each member
             becoming a separate file in that designated directory. The
             incoming members are separated by "MEMBER NAME xxx" cards.

  punchjcl.c This program reads a file from TAPE01 and creates the JCL to
             allocate and populate it on MVS. The file should use LIBRARYN
             punched output separators ("-PUNCH xxx") for each member.

  punchunx.c This program reads a file from TAPE01 and creates an ASCII
             version of it in a designated directory with each member
             becoming a separate file in that designated directory. The
             incoming members are aeparated by "-PUNCH xxx" cards.

  toascii.c  This is a generic conversion utility from EBCDIC to ASCII

  toebcdic.c This is a generic conversion utility from ASCII to EBCDIC

  makejcl    This shell script runs the appropriate programs to create the
             JCL directory directly from the TAPE01 directory

  makeunix   This shell script runs the appropriate programs to create the
             ASCII directory directly from the TAPE01 directory

  To use the TAPE01 directory as a tape volume in Hercules
  ========================================================

  It is necessary to identify a valid 3420 or 3480 tape drive in the MVS
  system being run. Let us assume that this turns out to be at address 560.
  This should be defined in the Hercules configuration but can also be
  created dynamically with the following Hercules command:

  attach 560 3420

  The virtual tape01 can then be "loaded" with the following:

  devinit 560 /path/tape01/tape01.tdf

  Where /path is wherever this CD has been mounted. This will have the same
  effect as an operator physically mounting the tape. The relevant MVS
  device should then be varied online (Vary 560,online) and, for best
  results, mounted with the following MVS command:

  mount 560,vol=(sl,tape01),use=private

  Sometimes there is some fiddling around with I/O errors and MVS mount
  requests, to which the cure seems to be to repeat the devinit Hercules
  command a few times and possbibly also a few vary online/offline sequences.
  Once it settles down however, all works well.

  At this point, JCL can be submitted to read the tape in the normal way.

  To create all the source libraries
  ==================================

  The JCL directory contains one JCL stream per library. This stream may
  contain just one job or more than one for very large libraries.

  The steps to creating the libraries are:

  Create a volume or identify a volume with enough space. The JCL created by
  the utility program assumes a volume exists called MNSNTO and it is easy
  enough to create a virtual DASD device and initialize it as such.

  Make sure that a reader has been defined to JES2 and assigned to a Hercules
  card reader. Obviously, this is usually 00c.  Make sure that the definition
  of 00c in Hercules includes the 'eof' parameter or there will be endless
  Intervention Required messages.

  Start the reader with the usual $srdr1.

  present the required JCL to the reader with the Hercules command:

  devinit 00c /jcl/copy.lib.mvs

  Where the filename given is the chosen library to be created and adjusted
  for the appropriate path as far as LINUX is concerned.

  This will cause JES2 to read and execute the job or jobs and the file
  should be created. The very first step of the first job allocates the PDS
  and will fail if it already exists. It can be deleted first with TSO/SPF
  (for a retry) or the nature of the JCL can be changed either directly
  (assuming an EBCDIC editor) or by changing the generjcl.c/punchjcl.c
  programs and rerunning makejcl.

  Files on the tape
  =================

  The tape appears to Hercules as a standard labelled tape at 1600 BPI and
  contains the following files:

  1  copy.sys2.maclib
  2  copy.jea.maclib
  3  copy.comet.contrlib
  4  comet.procs
  5  copy.jea.libraryn
  6  copy.lib.mvsdoc
  7  copy.lib.document
  8  copy.lib.mvs
  9  copy.lib.utilitys
  10 copy.lib.sysgen
  11 copy.lib.birdcage
  12 unloaded.birds.loadlib
  13 unloaded.sys1.linklib2
  14 copy.parrot.maclib
  15 copy.budge.maclib
  16 copy.spf2.menus
  17 copy.spf2.msgs
  18 unloaded.jea.loadlib

