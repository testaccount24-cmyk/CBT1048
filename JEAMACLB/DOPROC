         MACRO
         DOPROC &FROM,&TO,&BY,&UNTIL,&WHILE,&P1
         GBLA  &CCVAL                   COND CODE VARIABLE
         GBLA  &CTR                     MACRO PARAMETER COUNTER
         GBLA  &SEQ                     LABEL NUMBER GENERATOR
         GBLA  &AI                      INDEX FOR TOTAL NO. CASES STK
         GBLA  &CI                      INDEX FOR CASE AND LBL NO. STKS
         GBLA  &II                      PTR TO INST STKS
         GBLA  &LI                      INDEX FOR LABEL NUMBER STK
         GBLA  &NI                      PTR TO NEST STK
         GBLA  &AIND(50)                TOTAL CASES STK
         GBLA  &CIND1(200)              CASE NUMBER STK
         GBLA  &MULT(50)                CASE NUMBER MULTIPLIER
         GBLA  &ST(51)                  INST STK INCREASE AT EACH LEVEL
         GBLC  &CIND2(200)              LABEL NUMBER STK FOR CASES
         GBLC  &IIND1(100)              INSTRUCTION STK 1
         GBLC  &IIND2(100)              INSTRUCTION STK 2
         GBLC  &I22(100)                INSTRUCTION STK 2, 2ND PART
         GBLC  &I23(100)                INSTRUCTION STK 2, 3RD PART
         GBLC  &I24(100)                INSTRUCTION STK 2, 4TH PART
         GBLC  &IIND3(100)              INSTRUCTION STK 3
         GBLC  &I32(100)                INSTRUCTION STK 3, 2ND PART
         GBLC  &I33(100)                INSTRUCTION STK 3, 3RD PART
         GBLC  &I34(100)                INSTRUCTION STK 3, 4TH PART
         GBLC  &IIND4(100)              INSTRUCTION STK 4
         GBLC  &I42(100)                INSTRUCTION STK 4, 2ND PART
         GBLC  &I43(100)                INSTRUCTION STK 4, 3RD PART
         GBLC  &IIND5(100)              INSTRUCTION NAME STACK
         GBLC  &LIND(101)               LABEL NUMBER STK
         GBLC  &NEST(50)                NESTING STK
         GBLC  &RIND(50)                REG STK FOR CASENTRY MACRO
         LCLA  &I
         LCLC  &LCLWK1
           PUSHLAB
           PUSHINS (EQU,*,,,,&LIND(&LI))
&ST(&NI)   SETA    &II+1
           PUSHLAB
           AIF   (T'&FROM EQ 'O').NOIND
         AIF   ('&FROM(3)' EQ '').INCR
           LA   &FROM(3),&LIND(&LI)
.INCR    ANOP
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I,2)' EQ '').TEST
           AIF ('&SYSLIST(&I,2)' EQ '0').GENSR
             AIF ('&SYSLIST(&I,2)'(1,1) EQ '-').NEGVAL
               AIF (T'&SYSLIST(&I,2) EQ 'N').POSVAL
                 AIF ('&SYSLIST(&I,2)'(1,1) EQ '(').GENLR
                   L   &SYSLIST(&I,1),&SYSLIST(&I,2)
                   AGO .TEST
.GENLR           LR  &SYSLIST(&I,1),&SYSLIST(&I,2)
                 AGO .TEST
.POSVAL        AIF (&SYSLIST(&I,2) GE 4096).TSTMAG
                 LA  &SYSLIST(&I,1),&SYSLIST(&I,2)
                 AGO .TEST
.TSTMAG        AIF (&SYSLIST(&I,2) GE 32768).FULLIT
             AGO .HALFLIT
.NEGVAL      ANOP
&LCLWK1        SETC '&SYSLIST(&I,2)'(2,7)
               AIF (&LCLWK1 GE 32768).FULLIT
.HALFLIT     LH  &SYSLIST(&I,1),=H'&SYSLIST(&I,2)'
             AGO .TEST
.FULLIT      L   &SYSLIST(&I,1),=F'&SYSLIST(&I,2)'
             AGO .TEST
.GENSR     SR  &SYSLIST(&I,1),&SYSLIST(&I,1)
.TEST    AIF   (&I LT 3).INCR
           AIF   (T'&UNTIL NE 'O').ERRMG2
.CKWHILE     AIF   (T'&WHILE NE 'O').COMPGEN
&LIND(&LI) EQU   *
.POSTIND   AIF   (T'&P1 EQ 'O').GETIND
             AIF   (T'&BY NE 'O').PFB
               AIF   (T'&TO NE 'O').PFT
                 AIF   ('&FROM(3)' NE '').BCTRZ
                   PUSHINS (BCT,&FROM(1),&LIND(&LI))
                 AGO   .ERRMG
.BCTRZ           PUSHINS (BCTR,&FROM(1),&FROM(3))
               AGO     .ERRMG
.PFT           PUSHINS (&P1,&FROM(1),&TO(1),&LIND(&LI))
             MEXIT
.PFB         PUSHINS (&P1,&FROM(1),&BY(1),&LIND(&LI))
           MEXIT
.GETIND    AIF   ('&FROM(3)' EQ '').BCTR1
             PUSHINS (BCTR,&FROM(1),&FROM(3))
           MEXIT
.BCTR1     AIF   (T'&BY NE 'O').FB
             AIF   (T'&TO EQ 'O').FONLY
               PUSHINS (BXLE,&FROM(1),&TO(1),&LIND(&LI))
             MEXIT
.FONLY       PUSHINS (BCT,&FROM(1),&LIND(&LI))
           MEXIT
.FB        AIF   (T'&TO NE 'O').FTB
             AIF   ('&BY(2)' EQ '').GENBXLE
             AIF   ('&BY(2)'(1,1) NE '-').GENBXLE
           AGO   .GENBXH
.FTB       AIF   ('&TO(2)' EQ '' OR '&FROM(2)' EQ '').GENBXLE
           AIF   ('&FROM(2)'(1,1) EQ '-').TRYTNEG
             AIF   (T'&FROM(2) NE 'N').GENBXLE
             AIF   ('&TO(2)'(1,1) EQ '-').GENBXH
             AIF   (T'&TO(2) NE 'N').GENBXLE
             AIF   (&FROM(2) GT &TO(2)).GENBXH
.GENBXLE   PUSHINS (BXLE,&FROM(1),&BY(1),&LIND(&LI))
           MEXIT
.TRYTNEG   AIF   ('&TO(2)'(1,1) NE '-').GENBXLE
           AIF   ('&FROM(2)'(2,7) GE '&TO(2)'(2,7)).GENBXLE
.GENBXH    PUSHINS (BXH,&FROM(1),&BY(1),&LIND(&LI))
           MEXIT
.NOIND       AIF   (T'&WHILE EQ 'O').NOWHILE
               AIF   (T'&UNTIL NE 'O').COMPGEN
                 BC    15,&LIND(&LI)
                 PUSHLAB
&LI              SETA &LI-1
&LIND(&LI+1)     EQU  *
                 AIF   ('&WHILE(6)' EQ '').OKSUBL
                   STKINS &WHILE
                   MEXIT
.OKSUBL          STKINS (&WHILE(1),&WHILE(2),&WHILE(3),&WHILE(4),      X
               &WHILE(5),&LIND(&LI))
                 AIF   ('&WHILE(2)' EQ '').LABEL
                   PUSHINS (BC,&CCVAL,&LIND(&LI+1))
                   MEXIT
.LABEL           PUSHINS   (BC,&CCVAL,&LIND(&LI+1),,,&LIND(&LI))
                 MEXIT
.NOWHILE     AIF   (T'&UNTIL EQ 'O').TRYINF
&LIND(&LI)   EQU   *
.UNT           STKINS &UNTIL
               PUSHINS (BC,15-&CCVAL,&LIND(&LI))
             MEXIT
.TRYINF        AIF   ('&P1' NE 'INF').ERRMG1
&LIND(&LI)       EQU *
                 PUSHINS (BC,15,&LIND(&LI))
               MEXIT
.COMPGEN     AIF   ('&WHILE(6)' EQ '').OK
               STKINS &WHILE
               AGO   .BCHINST
.OK          STKINS (&WHILE(1),&WHILE(2),&WHILE(3),&WHILE(4),          X
               &WHILE(5),&LIND(&LI))
             AIF   (N'&WHILE GT 1).ENDCOMP
&LIND(&LI)     BC    15-&CCVAL,&LIND(&LI-1)
               AGO   .FLAGEQU
.ENDCOMP     ANOP
&ST(&NI+1)   SETA  &II
             POPINS &ST(&NI+1)
.BCHINST     BC    15-&CCVAL,&LIND(&LI-1)
.FLAGEQU     ANOP
&NEST(&NI)   SETC  '   Y'.'&NEST(&NI)'(5,4)
             AIF   (T'&FROM NE 'O').POSTIND
           AGO   .UNT
.ERRMG   MNOTE 4,'POSITIONAL PARAMETER IGNORED. BCT/BCTR LOOP END USED'
         MEXIT
.ERRMG2  MNOTE 4,'UNTIL KEYWORD INVALID WITH INDEXING GROUP. IGNORED'
         AGO   .CKWHILE
.ERRMG1  MNOTE 4,'NO WHILE,UNTIL,OR INDEXING PARAMETERS ON DO MACRO.'
         MEND
